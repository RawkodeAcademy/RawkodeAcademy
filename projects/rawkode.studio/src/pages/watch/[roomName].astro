---
import "@/styles/global.css";
import { LIVEKIT_URL } from "astro:env/server";
import { RoomWrapper } from "@/components/livestreams/room/RoomWrapper";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { database } from "@/lib/database";
import { roomClientService } from "@/lib/livekit";
import { livestreamsTable } from "@/schema";
import { eq } from "drizzle-orm";

// Get the roomName from the URL parameter
const { roomName } = Astro.params;

// Redirect if no room name is provided
if (!roomName) {
  return Astro.redirect("/");
}

// Check if the room actually exists and get display name
let roomExists = false;
let displayName = roomName; // Default to room ID

try {
  // Always get the display name from the database
  const dbRoom = await database
    .select({
      displayName: livestreamsTable.displayName,
    })
    .from(livestreamsTable)
    .where(eq(livestreamsTable.id, roomName))
    .limit(1);

  if (dbRoom.length > 0 && dbRoom[0].displayName) {
    displayName = dbRoom[0].displayName;
  }

  // Check if room exists in LiveKit
  const rooms = await roomClientService.listRooms();
  const room = rooms.find((r) => r.name === roomName);

  if (room) {
    roomExists = true;
  }
} catch (error) {
  console.error("Error checking if room exists:", error);
}

// Check if user is authenticated and has director role
const user = Astro.locals.user;
const isDirector = user?.roles?.includes("director") || false;
const username = user?.preferred_username || user?.name;
const isAuthenticated = !!user;
---

<BaseLayout title={`${displayName} - Live Stream`}>
  <RoomWrapper
    serverUrl={LIVEKIT_URL}
    roomName={roomName}
    roomDisplayName={displayName}
    roomExists={roomExists}
    isDirector={isDirector}
    username={username}
    isAuthenticated={isAuthenticated}
    client:only="react"
  />
</BaseLayout>
