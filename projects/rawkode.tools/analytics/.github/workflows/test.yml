name: Analytics Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'projects/rawkode.tools/analytics/**'
      - '.github/workflows/analytics-tests.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'projects/rawkode.tools/analytics/**'
      - '.github/workflows/analytics-tests.yml'

jobs:
  unit-tests-typescript:
    name: TypeScript Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: projects/rawkode.tools/analytics/package.json
      
      - name: Install dependencies
        working-directory: projects/rawkode.tools/analytics
        run: npm ci
      
      - name: Run API tests
        working-directory: projects/rawkode.tools/analytics
        run: npm test -- --coverage
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: projects/rawkode.tools/analytics/coverage
          flags: typescript
          name: analytics-api

  unit-tests-rust:
    name: Rust Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker:
          - event-collector
          - compaction-worker
          - catalog-worker
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
      
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      
      - name: Run tests
        working-directory: projects/rawkode.tools/analytics/pipeline/${{ matrix.worker }}
        run: |
          cargo test --lib
          wasm-pack test --node
      
      - name: Generate coverage
        if: matrix.worker != 'catalog-worker' # catalog-worker uses wasm-bindgen-test
        working-directory: projects/rawkode.tools/analytics/pipeline/${{ matrix.worker }}
        run: cargo tarpaulin --out Xml
      
      - name: Upload coverage
        if: matrix.worker != 'catalog-worker'
        uses: codecov/codecov-action@v3
        with:
          directory: projects/rawkode.tools/analytics/pipeline/${{ matrix.worker }}
          flags: rust-${{ matrix.worker }}
          name: ${{ matrix.worker }}

  dbt-tests:
    name: dbt Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dbt
        run: pip install dbt-duckdb
      
      - name: Run dbt tests
        working-directory: projects/rawkode.tools/analytics/dbt
        run: |
          dbt deps
          dbt test

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-tests-typescript, unit-tests-rust]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Wrangler
        run: npm install -g wrangler
      
      - name: Install dependencies
        working-directory: projects/rawkode.tools/analytics/tests/e2e
        run: npm ci
      
      - name: Start local services
        working-directory: projects/rawkode.tools/analytics
        run: |
          # Start workers in background
          wrangler dev --local --port 8787 --config pipeline/event-collector/wrangler.jsonc &
          wrangler dev --local --port 4000 --config api/wrangler.toml &
          
          # Wait for services to be ready
          sleep 10
          
          # Health checks
          curl -f http://localhost:8787/health || exit 1
          curl -f http://localhost:4000/health || exit 1
      
      - name: Run E2E tests
        working-directory: projects/rawkode.tools/analytics/tests/e2e
        run: npm test
        env:
          EVENT_COLLECTOR_URL: http://localhost:8787
          API_URL: http://localhost:4000/graphql
          API_KEY: test-key

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'projects/rawkode.tools/analytics'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Check for SQL injection patterns
        working-directory: projects/rawkode.tools/analytics
        run: |
          # Check for potential SQL injection vulnerabilities
          if grep -r "query.*+.*args\." --include="*.ts" --include="*.js" .; then
            echo "WARNING: Potential SQL injection patterns found!"
            exit 1
          fi

  lint:
    name: Lint and Format
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Biome
        run: npm install -g @biomejs/biome
      
      - name: Run Biome
        working-directory: projects/rawkode.tools/analytics
        run: biome check .
      
      - name: Check Rust formatting
        working-directory: projects/rawkode.tools/analytics
        run: |
          rustup component add rustfmt clippy
          find . -name "*.rs" -exec rustfmt --check {} \;
          
  build:
    name: Build Workers
    runs-on: ubuntu-latest
    needs: [unit-tests-typescript, unit-tests-rust, lint]
    strategy:
      matrix:
        worker:
          - event-collector
          - compaction-worker
          - catalog-worker
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
      
      - name: Install worker-build
        run: cargo install worker-build
      
      - name: Build worker
        working-directory: projects/rawkode.tools/analytics/pipeline/${{ matrix.worker }}
        run: worker-build --release
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.worker }}-build
          path: projects/rawkode.tools/analytics/pipeline/${{ matrix.worker }}/build/

  deploy-preview:
    name: Deploy to Preview
    runs-on: ubuntu-latest
    needs: [build, integration-tests, security-scan]
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Cloudflare Preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env preview
          workingDirectory: projects/rawkode.tools/analytics