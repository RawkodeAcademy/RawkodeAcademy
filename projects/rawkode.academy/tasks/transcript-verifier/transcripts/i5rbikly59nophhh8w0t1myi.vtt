WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 249468bb-caa5-4215-9eb1-747f3b65b375
Created: 2025-04-29T22:05:13.872Z
Duration: 188.9705
Channels: 1

00:00:00.000 --> 00:00:00.960
<v Speaker 0>Welcome.

00:00:01.040 --> 00:00:02.960
<v Speaker 0>My name's David, and I want to introduce

00:00:02.960 --> 00:00:03.999
<v Speaker 0>you to ARC.

00:00:04.400 --> 00:00:06.480
<v Speaker 0>ARC is available in most Linux and Unix

00:00:06.480 --> 00:00:07.600
<v Speaker 0>based distributions.

00:00:07.839 --> 00:00:09.440
<v Speaker 0>This is the version I'm running.

00:00:09.840 --> 00:00:11.040
<v Speaker 0>And if we take a look at the

00:00:11.040 --> 00:00:14.094
<v Speaker 0>main page, what we'll see is ARC scripts

00:00:14.094 --> 00:00:16.814
<v Speaker 0>are formed of patterns and actions.

00:00:17.615 --> 00:00:20.095
<v Speaker 0>A combination of patterns and actions allow us

00:00:20.095 --> 00:00:21.615
<v Speaker 0>to do some pretty cool things on the

00:00:21.615 --> 00:00:24.175
<v Speaker 0>command line that would otherwise be rather cumbersome.

00:00:27.030 --> 00:00:28.789
<v Speaker 0>So let's take a look at PS.

00:00:29.030 --> 00:00:31.110
<v Speaker 0>This outputs all of the processes running on

00:00:31.110 --> 00:00:31.830
<v Speaker 0>my system.

00:00:32.470 --> 00:00:34.790
<v Speaker 0>And normally, you may wish to pipe to

00:00:34.790 --> 00:00:36.710
<v Speaker 0>grep or Firefox.

00:00:37.350 --> 00:00:39.989
<v Speaker 0>We can replicate this behavior with ARC like

00:00:39.989 --> 00:00:40.309
<v Speaker 0>this.

00:00:40.985 --> 00:00:43.465
<v Speaker 0>This is regex syntax to filter on a

00:00:43.465 --> 00:00:44.984
<v Speaker 0>string Firefox.

00:00:46.265 --> 00:00:48.664
<v Speaker 0>Now because we didn't specify an action, the

00:00:48.664 --> 00:00:50.905
<v Speaker 0>default action is to print zero,

00:00:50.985 --> 00:00:51.864
<v Speaker 0>everything.

00:00:52.985 --> 00:00:55.704
<v Speaker 0>However, we can change that and get automatic

00:00:55.704 --> 00:00:57.680
<v Speaker 0>column splits with ARC.

00:00:58.160 --> 00:01:01.040
<v Speaker 0>Let's print the username, the process ID,

00:01:01.520 --> 00:01:02.720
<v Speaker 0>we'll count along,

00:01:02.800 --> 00:01:04.800
<v Speaker 0>we'll also print the time the process started

00:01:04.800 --> 00:01:06.480
<v Speaker 0>as well as the full command.

00:01:10.575 --> 00:01:11.375
<v Speaker 0>Excellent.

00:01:12.255 --> 00:01:12.895
<v Speaker 0>Now

00:01:13.135 --> 00:01:14.895
<v Speaker 0>we can see that these columns reflect what

00:01:14.895 --> 00:01:17.615
<v Speaker 0>we wanted without having to specify any additional

00:01:17.615 --> 00:01:18.335
<v Speaker 0>logic.

00:01:20.015 --> 00:01:21.695
<v Speaker 0>But let's tidy up this output.

00:01:21.855 --> 00:01:23.855
<v Speaker 0>We can use a begin block to set

00:01:23.855 --> 00:01:25.615
<v Speaker 0>some global variables

00:01:25.990 --> 00:01:27.990
<v Speaker 0>and we're going to specify that the output

00:01:27.990 --> 00:01:30.630
<v Speaker 0>field separator should be three tabs.

00:01:31.270 --> 00:01:33.030
<v Speaker 0>That looks a lot better.

00:01:35.270 --> 00:01:37.030
<v Speaker 0>Okay. What if we were working with other

00:01:37.030 --> 00:01:37.590
<v Speaker 0>data types?

00:01:38.085 --> 00:01:40.405
<v Speaker 0>What about CSV or something that looks like

00:01:40.405 --> 00:01:41.205
<v Speaker 0>CSV?

00:01:41.205 --> 00:01:42.965
<v Speaker 0>Let's use the password file.

00:01:43.685 --> 00:01:45.445
<v Speaker 0>Now we can cat that file,

00:01:45.765 --> 00:01:47.045
<v Speaker 0>pipe it to ARC,

00:01:47.125 --> 00:01:48.965
<v Speaker 0>and attempt to do something similar.

00:01:49.525 --> 00:01:51.765
<v Speaker 0>First, we'll just start by printing everything,

00:01:51.925 --> 00:01:53.045
<v Speaker 0>which works just the same.

00:01:54.619 --> 00:01:57.500
<v Speaker 0>Now let's print the username column,

00:01:57.659 --> 00:01:59.259
<v Speaker 0>the user ID column.

00:01:59.740 --> 00:02:01.659
<v Speaker 0>We'll also print the username,

00:02:02.380 --> 00:02:03.899
<v Speaker 0>their home directory,

00:02:04.780 --> 00:02:05.500
<v Speaker 0>and their shell.

00:02:09.664 --> 00:02:12.224
<v Speaker 0>Drats, it doesn't work and that's because the

00:02:12.224 --> 00:02:15.265
<v Speaker 0>field separator is no longer space or tabs.

00:02:15.985 --> 00:02:17.745
<v Speaker 0>So we can use the begin block once

00:02:17.745 --> 00:02:19.665
<v Speaker 0>more, only this time instead of setting the

00:02:19.665 --> 00:02:21.185
<v Speaker 0>output field separator,

00:02:21.185 --> 00:02:22.784
<v Speaker 0>we'll set the field separator

00:02:23.570 --> 00:02:25.410
<v Speaker 0>we are going to use a colon

00:02:25.570 --> 00:02:28.050
<v Speaker 0>and you can see that works nicely.

00:02:30.930 --> 00:02:32.770
<v Speaker 0>Now let's filter this data.

00:02:33.090 --> 00:02:35.170
<v Speaker 0>Instead of using a regex like last time,

00:02:35.505 --> 00:02:38.145
<v Speaker 0>we're actually going to do a numerical comparison

00:02:38.145 --> 00:02:40.945
<v Speaker 0>and filter on the user IDs above 400.

00:02:41.825 --> 00:02:43.985
<v Speaker 0>Now one last thing about AUK, it has

00:02:43.985 --> 00:02:45.185
<v Speaker 0>a standard library.

00:02:45.585 --> 00:02:47.745
<v Speaker 0>You can see here we're using to upper

00:02:47.905 --> 00:02:49.185
<v Speaker 0>on our username.

00:02:49.345 --> 00:02:51.185
<v Speaker 0>We're gonna calculate the length

00:02:51.260 --> 00:02:53.340
<v Speaker 0>of our actual name, as well as printing

00:02:53.340 --> 00:02:54.300
<v Speaker 0>out our name.

00:02:55.500 --> 00:02:57.340
<v Speaker 0>Perfect. You can see the uppercase,

00:02:57.340 --> 00:02:59.340
<v Speaker 0>we can see the string length, and everything

00:02:59.340 --> 00:03:00.459
<v Speaker 0>works as expected.

00:03:01.275 --> 00:03:02.955
<v Speaker 0>ARC is a pretty cool tool.

00:03:03.115 --> 00:03:04.875
<v Speaker 0>You only have to learn a few things

00:03:05.435 --> 00:03:07.435
<v Speaker 0>to get a whole lot of value back.

00:03:07.595 --> 00:03:08.075
<v Speaker 0>Enjoy.
