WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 00e40d3b-757e-4022-9ce4-a8a2704467d6
Created: 2025-04-29T16:35:32.319Z
Duration: 3802.576
Channels: 1

00:01:47.595 --> 00:01:48.395
<v Speaker 0>Hello.

00:01:48.395 --> 00:01:50.635
<v Speaker 0>I am off center. Sorry. I was talking

00:01:50.635 --> 00:01:52.715
<v Speaker 0>to Ben behind the scenes. Hello, all. Welcome

00:01:52.715 --> 00:01:54.235
<v Speaker 0>back to the

00:01:54.680 --> 00:01:57.479
<v Speaker 0>there. Hello, all. Welcome back to Rawkode Academy.

00:01:57.640 --> 00:02:00.600
<v Speaker 0>Today's session, we are taking a look at

00:02:00.600 --> 00:02:03.400
<v Speaker 0>Teleport nine, which has just been released. You

00:02:03.400 --> 00:02:06.200
<v Speaker 0>may have seen the release announcement yesterday.

00:02:06.360 --> 00:02:09.574
<v Speaker 0>Two days ago? Yesterday. Yeah. Yesterday. With some

00:02:09.574 --> 00:02:12.055
<v Speaker 0>awesome new features. So we thought we would

00:02:12.055 --> 00:02:14.135
<v Speaker 0>jump onto a session and take a look

00:02:14.135 --> 00:02:15.575
<v Speaker 0>at the new features and also do a

00:02:15.575 --> 00:02:17.575
<v Speaker 0>bit of a q and a. So if

00:02:17.575 --> 00:02:19.575
<v Speaker 0>you have any questions, please feel free to

00:02:19.575 --> 00:02:21.255
<v Speaker 0>get involved, drop them into the comments, and

00:02:21.255 --> 00:02:23.330
<v Speaker 0>we'll tackle them. Well, I won't tackle them.

00:02:23.330 --> 00:02:25.410
<v Speaker 0>I'll do my best. But we are joined

00:02:25.410 --> 00:02:26.370
<v Speaker 0>today, fortunately,

00:02:26.850 --> 00:02:28.290
<v Speaker 0>by, to the loo,

00:02:28.690 --> 00:02:30.610
<v Speaker 0>Ben Abbott. Hey, man. How's it going?

00:02:31.090 --> 00:02:33.250
<v Speaker 1>It's good. Thanks for having me, David. I

00:02:33.250 --> 00:02:34.850
<v Speaker 0>know. I'm I'm gonna be tweaking my position

00:02:34.850 --> 00:02:36.610
<v Speaker 0>trying to make sure that I'm I'm centered.

00:02:36.610 --> 00:02:36.930
<v Speaker 1>I know.

00:02:38.185 --> 00:02:40.265
<v Speaker 0>So thank you for joining us again. This

00:02:40.265 --> 00:02:41.784
<v Speaker 0>is not our our first stream together. We

00:02:41.784 --> 00:02:43.305
<v Speaker 0>always have a lot of fun playing with

00:02:43.305 --> 00:02:45.545
<v Speaker 0>Teleport together, and I'm sure today will be

00:02:45.545 --> 00:02:46.665
<v Speaker 0>no exception.

00:02:48.105 --> 00:02:50.650
<v Speaker 0>For the people that have not seen you

00:02:50.650 --> 00:02:53.209
<v Speaker 0>before on the the livestream here, can you

00:02:53.209 --> 00:02:55.050
<v Speaker 0>just tell us a little bit about Ben?

00:02:56.090 --> 00:02:56.730
<v Speaker 1>Yeah.

00:02:57.290 --> 00:02:59.769
<v Speaker 1>My name is Ben Arendt. I'm a developer

00:02:59.769 --> 00:03:02.489
<v Speaker 1>relations manager at Teleport, and I've been in

00:03:02.489 --> 00:03:05.265
<v Speaker 1>the developer tool space, I think, almost like

00:03:05.265 --> 00:03:07.105
<v Speaker 1>a decade now in various roles,

00:03:09.265 --> 00:03:11.985
<v Speaker 1>spanning UX product and developer relations.

00:03:12.144 --> 00:03:12.865
<v Speaker 1>And so

00:03:13.344 --> 00:03:15.424
<v Speaker 1>I've sort of touched everything. I also ran

00:03:15.424 --> 00:03:17.650
<v Speaker 1>a Redis as a service product. And so

00:03:17.650 --> 00:03:20.850
<v Speaker 1>I'm pretty excited about our Redis support since

00:03:20.850 --> 00:03:21.650
<v Speaker 1>when

00:03:22.050 --> 00:03:24.450
<v Speaker 1>we had Redis to go, many people would

00:03:24.450 --> 00:03:26.130
<v Speaker 1>find their passwords in GitHub.

00:03:26.450 --> 00:03:27.410
<v Speaker 1>And so

00:03:28.210 --> 00:03:29.810
<v Speaker 1>which is a common thing. No. There's nothing

00:03:29.810 --> 00:03:31.810
<v Speaker 1>too bad in your Redis database,

00:03:32.130 --> 00:03:34.655
<v Speaker 1>but it's not something you wanna expose.

00:03:34.655 --> 00:03:38.095
<v Speaker 1>And so, yeah, I'm excited to demo Teleport

00:03:38.095 --> 00:03:40.895
<v Speaker 1>nine, our machine ID, and the long tail

00:03:40.895 --> 00:03:42.415
<v Speaker 1>of other things we've added.

00:03:42.975 --> 00:03:44.655
<v Speaker 0>Awesome. Thank you for sharing.

00:03:44.975 --> 00:03:47.739
<v Speaker 0>It feels like there's just a new release

00:03:47.739 --> 00:03:48.780
<v Speaker 0>of Teleport

00:03:49.340 --> 00:03:51.099
<v Speaker 0>every other week. And of course there's not

00:03:51.099 --> 00:03:53.180
<v Speaker 0>a new release every other week, but for

00:03:53.180 --> 00:03:55.819
<v Speaker 0>a company and a team, user moving really,

00:03:55.819 --> 00:03:57.340
<v Speaker 0>really fast. It's just so exciting to see

00:03:57.340 --> 00:03:59.645
<v Speaker 0>all these new features coming along. I think

00:03:59.645 --> 00:04:02.285
<v Speaker 0>I've completely just bought into the Teleport eFalls

00:04:02.285 --> 00:04:03.885
<v Speaker 0>now and I just use it

00:04:04.205 --> 00:04:05.085
<v Speaker 0>constantly.

00:04:05.245 --> 00:04:07.565
<v Speaker 0>And the fact that we're getting new features

00:04:07.565 --> 00:04:09.725
<v Speaker 0>on a regular is just great.

00:04:10.045 --> 00:04:11.725
<v Speaker 0>Now, so that I don't mess it up,

00:04:11.725 --> 00:04:13.645
<v Speaker 0>what is the official release cadence? Do you

00:04:13.645 --> 00:04:15.730
<v Speaker 0>have one Or is it just when something's

00:04:15.730 --> 00:04:17.410
<v Speaker 0>cool is built, we're gonna ship it?

00:04:17.890 --> 00:04:19.490
<v Speaker 1>No. I think we've moved to a three

00:04:19.490 --> 00:04:21.649
<v Speaker 1>month release cycle. Three month. And we also

00:04:21.649 --> 00:04:23.730
<v Speaker 1>made our roadmap public. And so you can

00:04:23.730 --> 00:04:25.090
<v Speaker 1>go to our docs and see what our

00:04:25.090 --> 00:04:27.085
<v Speaker 1>roadmap is for the next three months. We

00:04:27.085 --> 00:04:29.325
<v Speaker 1>also changed our semantic versioning

00:04:32.205 --> 00:04:35.085
<v Speaker 1>last year to sort of represent

00:04:35.085 --> 00:04:37.565
<v Speaker 1>more breaking changes between the different versions and

00:04:37.565 --> 00:04:38.845
<v Speaker 1>version compatibility.

00:04:38.845 --> 00:04:40.470
<v Speaker 1>There was sort of a time in which

00:04:40.470 --> 00:04:42.150
<v Speaker 1>we wouldn't like, we would ship lots of

00:04:42.150 --> 00:04:43.830
<v Speaker 1>features, but we wouldn't change the version or

00:04:43.830 --> 00:04:45.190
<v Speaker 1>our version wasn't very clear.

00:04:45.830 --> 00:04:47.590
<v Speaker 1>So another thing since we're, an open call

00:04:47.590 --> 00:04:48.230
<v Speaker 1>company,

00:04:48.550 --> 00:04:50.710
<v Speaker 1>we have a request for discussion. And so

00:04:50.710 --> 00:04:51.990
<v Speaker 1>you can go to our Git repo and

00:04:51.990 --> 00:04:54.865
<v Speaker 1>sort of understand, like, what our, like, versioning

00:04:54.865 --> 00:04:57.025
<v Speaker 1>strategy is and then also look at our

00:04:57.025 --> 00:04:58.145
<v Speaker 1>road map. And

00:04:59.025 --> 00:05:01.425
<v Speaker 1>the one feedback we've got is, like, it's

00:05:01.425 --> 00:05:02.865
<v Speaker 1>great that you're releasing all these features, but

00:05:02.865 --> 00:05:04.945
<v Speaker 1>upgrades can be difficult, especially for, like, our

00:05:04.945 --> 00:05:05.505
<v Speaker 1>large customers.

00:05:06.060 --> 00:05:07.980
<v Speaker 1>And that is something that is going to

00:05:07.980 --> 00:05:09.180
<v Speaker 1>be added in,

00:05:09.500 --> 00:05:12.540
<v Speaker 1>I believe, Teleport 10, maybe 11. But there's

00:05:12.540 --> 00:05:15.340
<v Speaker 1>a team actively working on sort of automatic

00:05:15.340 --> 00:05:16.220
<v Speaker 1>upgrades,

00:05:16.780 --> 00:05:19.585
<v Speaker 1>which is an interesting, you know, computer science

00:05:19.585 --> 00:05:20.785
<v Speaker 1>problem in itself.

00:05:21.104 --> 00:05:22.145
<v Speaker 0>Yeah. Definitely.

00:05:22.544 --> 00:05:23.185
<v Speaker 0>Well,

00:05:23.425 --> 00:05:25.425
<v Speaker 0>I think I've been using Teleport and Cluster

00:05:25.425 --> 00:05:27.745
<v Speaker 0>now for, like, eighteen months. In fact, starting

00:05:27.745 --> 00:05:29.745
<v Speaker 0>with Teleport five, and we're now at Teleport

00:05:29.745 --> 00:05:30.384
<v Speaker 0>nine.

00:05:30.705 --> 00:05:32.944
<v Speaker 0>And it's always auto installed the latest version,

00:05:33.289 --> 00:05:35.050
<v Speaker 0>but at no point has it ever broken

00:05:35.050 --> 00:05:36.970
<v Speaker 0>my automation. Like, we always just seem to

00:05:36.970 --> 00:05:38.490
<v Speaker 0>get a new version of Teleport, and it

00:05:38.490 --> 00:05:40.889
<v Speaker 0>just works. Like, I mean, half their backwards

00:05:41.370 --> 00:05:43.930
<v Speaker 0>compatibility breaks, and I've just been very lucky?

00:05:43.930 --> 00:05:44.410
<v Speaker 0>Or,

00:05:45.050 --> 00:05:45.210
<v Speaker 0>like

00:05:46.215 --> 00:05:48.055
<v Speaker 1>I think it's mostly some of our customers

00:05:48.055 --> 00:05:50.455
<v Speaker 1>who may be on four or five. Alright.

00:05:50.455 --> 00:05:52.375
<v Speaker 1>Okay. You know, also because we have a

00:05:52.375 --> 00:05:52.935
<v Speaker 1>whole,

00:05:54.855 --> 00:05:56.455
<v Speaker 1>you know, large suite of customers from, like,

00:05:56.455 --> 00:05:58.615
<v Speaker 1>open source community to sort of, like, Fortune

00:05:58.615 --> 00:06:01.380
<v Speaker 1>five hundreds. You know, we've still supports

00:06:02.419 --> 00:06:04.900
<v Speaker 1>like, we supported Center West 6 longer than

00:06:04.900 --> 00:06:06.580
<v Speaker 1>Center West 6 was sort of

00:06:07.139 --> 00:06:09.380
<v Speaker 1>supported by Red Hat. And so we generally

00:06:09.380 --> 00:06:10.820
<v Speaker 1>try to, like, meet our customers where they

00:06:10.820 --> 00:06:12.500
<v Speaker 1>are. And you might see sometimes in our

00:06:12.500 --> 00:06:15.060
<v Speaker 1>releases, we do do

00:06:16.315 --> 00:06:18.715
<v Speaker 1>back patches to I think you're you're going

00:06:18.715 --> 00:06:20.475
<v Speaker 1>back to, like, six for both performance and

00:06:21.035 --> 00:06:22.555
<v Speaker 1>security. And you can see that in our,

00:06:22.555 --> 00:06:24.795
<v Speaker 1>like, semantic versioning we describe, like, at what

00:06:24.795 --> 00:06:27.115
<v Speaker 1>point will we, like, not back port security

00:06:27.115 --> 00:06:28.715
<v Speaker 1>fixes. But if it's a bad one, we

00:06:28.715 --> 00:06:30.395
<v Speaker 1>will sort of go about our way to

00:06:30.395 --> 00:06:32.590
<v Speaker 1>back port one. I think we backported a

00:06:32.590 --> 00:06:33.470
<v Speaker 1>fix into,

00:06:33.789 --> 00:06:35.950
<v Speaker 1>like, four dot something recently.

00:06:36.590 --> 00:06:38.509
<v Speaker 1>So we try and support all of our

00:06:38.509 --> 00:06:40.669
<v Speaker 1>customers as much as we can. That's awesome.

00:06:40.669 --> 00:06:41.230
<v Speaker 0>Cool.

00:06:41.870 --> 00:06:44.110
<v Speaker 0>Alright. Well, we're here today to talk about

00:06:44.110 --> 00:06:47.275
<v Speaker 0>the latest release, Teleport nine, which dropped yesterday.

00:06:47.675 --> 00:06:49.754
<v Speaker 0>Do you wanna give us the the highlights

00:06:49.754 --> 00:06:51.595
<v Speaker 0>of the release so that we can dig

00:06:51.595 --> 00:06:53.275
<v Speaker 0>into a few of them? I can pop

00:06:53.275 --> 00:06:55.194
<v Speaker 0>the blog up if you wanna start on

00:06:55.194 --> 00:06:57.115
<v Speaker 0>Machine ID, or do wanna start with just

00:06:57.115 --> 00:06:58.555
<v Speaker 0>a high level No. Let's start on Machine

00:06:58.555 --> 00:07:00.315
<v Speaker 1>ID. Okay. Go for it. So

00:07:00.960 --> 00:07:03.200
<v Speaker 1>machine ID is a new addition to

00:07:04.560 --> 00:07:05.680
<v Speaker 1>Teleport nine,

00:07:06.000 --> 00:07:08.560
<v Speaker 1>and we sort of described the problem in

00:07:08.560 --> 00:07:10.240
<v Speaker 1>this blog post. But,

00:07:10.640 --> 00:07:12.000
<v Speaker 1>you know, up until

00:07:12.320 --> 00:07:15.120
<v Speaker 1>Teleport nine, like Teleport nine, Teleport was mainly

00:07:15.120 --> 00:07:18.295
<v Speaker 1>focused on sort of humans accessing infrastructure

00:07:18.615 --> 00:07:20.695
<v Speaker 1>and being really good at that. But we

00:07:20.695 --> 00:07:22.615
<v Speaker 1>would have people who would set up all

00:07:22.615 --> 00:07:24.695
<v Speaker 1>of their infrastructure with Teleport, you know, maybe

00:07:24.695 --> 00:07:26.535
<v Speaker 1>not even have, like, open SSH.

00:07:26.855 --> 00:07:29.095
<v Speaker 1>And then we want to also use the

00:07:29.095 --> 00:07:32.055
<v Speaker 1>same short lived certificates for, like, Ansible runs

00:07:32.030 --> 00:07:35.390
<v Speaker 1>for Jenkins. Basically, everything that also has some

00:07:35.390 --> 00:07:38.430
<v Speaker 1>form, like, SSH certificates to some degree.

00:07:39.390 --> 00:07:41.390
<v Speaker 1>And you could do this with Teleport. You

00:07:41.390 --> 00:07:42.990
<v Speaker 1>could do, like, TCL auth exports,

00:07:44.345 --> 00:07:45.305
<v Speaker 1>asserts

00:07:45.305 --> 00:07:47.465
<v Speaker 1>for a short period of time. But people

00:07:47.465 --> 00:07:49.465
<v Speaker 1>would just end out making these, like, five

00:07:49.465 --> 00:07:51.625
<v Speaker 1>year SSH certificates,

00:07:51.625 --> 00:07:53.145
<v Speaker 1>which is basically the same as like a

00:07:53.145 --> 00:07:55.625
<v Speaker 1>public private key to some degree. Yep.

00:07:56.185 --> 00:07:56.505
<v Speaker 1>And,

00:07:57.120 --> 00:07:58.640
<v Speaker 1>you know, in Teleport, we have a CA

00:07:58.640 --> 00:08:00.880
<v Speaker 1>rotation that you can run. So

00:08:01.520 --> 00:08:03.200
<v Speaker 1>if you did a CA rotation,

00:08:03.440 --> 00:08:05.440
<v Speaker 1>that long lived certificate would break.

00:08:05.920 --> 00:08:06.640
<v Speaker 1>And then

00:08:07.360 --> 00:08:09.200
<v Speaker 1>all of that, like, other work that people

00:08:09.360 --> 00:08:10.800
<v Speaker 1>like, when we had teams kinda build this

00:08:10.800 --> 00:08:12.655
<v Speaker 1>in house, and so machine ID is a

00:08:12.655 --> 00:08:14.895
<v Speaker 1>sort of a new addition to

00:08:15.215 --> 00:08:17.135
<v Speaker 1>sort of Teleport that makes it very easy

00:08:17.135 --> 00:08:19.535
<v Speaker 1>for you to issue sort of certificates and

00:08:19.535 --> 00:08:20.975
<v Speaker 1>identity for machines

00:08:21.535 --> 00:08:22.255
<v Speaker 1>and

00:08:22.895 --> 00:08:24.895
<v Speaker 1>sort of provide that same tooling for, infrastructure

00:08:24.895 --> 00:08:25.135
<v Speaker 1>tools.

00:08:26.000 --> 00:08:28.320
<v Speaker 0>I imagine for people that were doing this

00:08:28.320 --> 00:08:30.560
<v Speaker 0>prior to machine ID, especially when they're using

00:08:30.560 --> 00:08:33.520
<v Speaker 0>one of the, you know, OpenID or back

00:08:33.520 --> 00:08:36.240
<v Speaker 0>ends and not local users, which I assume

00:08:36.240 --> 00:08:38.559
<v Speaker 0>is probably a large majority of Teleport customers.

00:08:38.804 --> 00:08:40.404
<v Speaker 0>But they would probably have to break out

00:08:40.404 --> 00:08:42.405
<v Speaker 0>to local users for machines.

00:08:42.725 --> 00:08:44.325
<v Speaker 0>Is that a fair assumption?

00:08:45.045 --> 00:08:48.005
<v Speaker 1>They could. We also added impersonation.

00:08:48.485 --> 00:08:49.925
<v Speaker 1>And so you could create a u like

00:08:49.925 --> 00:08:51.365
<v Speaker 1>a non login user

00:08:53.079 --> 00:08:54.519
<v Speaker 1>that you could impersonate,

00:08:54.519 --> 00:08:56.519
<v Speaker 1>and that was sort of our recommended approach

00:08:56.519 --> 00:08:57.800
<v Speaker 1>to this. But,

00:08:58.760 --> 00:09:00.200
<v Speaker 1>yeah, some people would create like a local

00:09:00.200 --> 00:09:01.959
<v Speaker 1>user. Because you ultimately don't want someone to

00:09:01.959 --> 00:09:03.959
<v Speaker 1>be able to like physically log in as

00:09:03.959 --> 00:09:05.880
<v Speaker 1>the Jenkins bot person.

00:09:07.079 --> 00:09:09.475
<v Speaker 0>True. That makes a lot of sense. So

00:09:09.715 --> 00:09:12.115
<v Speaker 0>machine ID is is gonna solve this challenge

00:09:12.115 --> 00:09:14.195
<v Speaker 0>for people that wanna be able to get

00:09:14.195 --> 00:09:17.715
<v Speaker 0>their CI systems access to the infrastructure. Yeah.

00:09:17.715 --> 00:09:19.955
<v Speaker 1>So, you know, we'll focus a lot on,

00:09:20.675 --> 00:09:23.475
<v Speaker 1>like, infrastructure tooling. It's just probably our strongest

00:09:23.730 --> 00:09:25.649
<v Speaker 1>thing in Teleport nine. But in nine point

00:09:25.649 --> 00:09:27.410
<v Speaker 1>one, we extend

00:09:27.730 --> 00:09:31.010
<v Speaker 1>the same short lived certificates for database access,

00:09:31.730 --> 00:09:32.690
<v Speaker 1>Kubernetes,

00:09:32.690 --> 00:09:33.890
<v Speaker 1>and applications.

00:09:34.769 --> 00:09:35.330
<v Speaker 1>And

00:09:35.810 --> 00:09:38.130
<v Speaker 1>as you may know, in

00:09:38.425 --> 00:09:41.065
<v Speaker 1>our current configuration of Teleport for Kubernetes,

00:09:41.225 --> 00:09:43.065
<v Speaker 1>you actually have to issue a very long

00:09:43.385 --> 00:09:45.225
<v Speaker 1>join token because

00:09:45.785 --> 00:09:46.505
<v Speaker 1>the

00:09:47.545 --> 00:09:49.545
<v Speaker 1>it doesn't persist the connection. So we plan

00:09:49.545 --> 00:09:52.790
<v Speaker 1>to use machine ID to issue the cube

00:09:52.790 --> 00:09:54.790
<v Speaker 1>configs and always keep your cube config and

00:09:54.790 --> 00:09:56.710
<v Speaker 1>the connection between, like, Teleport and your Kubernetes

00:09:56.710 --> 00:09:58.950
<v Speaker 1>cluster always updated and secure.

00:10:01.270 --> 00:10:03.190
<v Speaker 0>Alright. Awesome. Oh, we

00:10:03.805 --> 00:10:05.805
<v Speaker 0>we just got a question from Evanash. He's

00:10:05.805 --> 00:10:07.725
<v Speaker 0>just joined and is curious if the concept

00:10:07.725 --> 00:10:09.965
<v Speaker 0>of machine ID has been explained yet. So

00:10:09.965 --> 00:10:12.445
<v Speaker 0>we're we're talking about it right now, Evanash.

00:10:12.765 --> 00:10:15.325
<v Speaker 0>But I'll patterface that and think or write

00:10:15.325 --> 00:10:17.165
<v Speaker 0>down if I got wrong. Yeah. That's a

00:10:17.165 --> 00:10:17.485
<v Speaker 1>good idea.

00:10:18.459 --> 00:10:20.220
<v Speaker 0>I wouldn't be able explain it twice unless

00:10:20.220 --> 00:10:22.300
<v Speaker 0>I've just completely fluffed it and misunderstood that

00:10:22.300 --> 00:10:23.980
<v Speaker 0>away. But, you know, the

00:10:24.380 --> 00:10:26.779
<v Speaker 0>what Teleport has done really, really well today

00:10:26.779 --> 00:10:27.420
<v Speaker 0>is

00:10:27.899 --> 00:10:30.700
<v Speaker 0>when humans want access to infrastructure because let's

00:10:30.700 --> 00:10:33.685
<v Speaker 0>face it, humans are the security problem anyway,

00:10:33.845 --> 00:10:36.405
<v Speaker 0>that they go through Teleport and authenticate as

00:10:36.405 --> 00:10:38.725
<v Speaker 0>a human, and then you get federated access

00:10:38.725 --> 00:10:40.165
<v Speaker 0>to servers and databases.

00:10:40.885 --> 00:10:43.045
<v Speaker 0>The challenge there has been that if you

00:10:43.045 --> 00:10:44.485
<v Speaker 0>want to give Jenkins,

00:10:44.485 --> 00:10:46.725
<v Speaker 0>GitHub actions, or any automation

00:10:47.280 --> 00:10:49.440
<v Speaker 0>access to any of these resources, which are

00:10:49.440 --> 00:10:50.000
<v Speaker 0>being

00:10:50.480 --> 00:10:52.000
<v Speaker 0>commoditized. I don't even know if that's the

00:10:52.000 --> 00:10:54.480
<v Speaker 0>right word, commoditized or secured via Teleport.

00:10:55.520 --> 00:10:57.280
<v Speaker 0>People would have to do some weird things

00:10:57.280 --> 00:10:58.320
<v Speaker 0>there. Now

00:10:58.560 --> 00:11:00.720
<v Speaker 0>in the past, I've just used local users

00:11:00.720 --> 00:11:02.985
<v Speaker 0>and breaking out of that entire control flow

00:11:02.985 --> 00:11:05.225
<v Speaker 0>and saying this works, which is usually bad

00:11:05.225 --> 00:11:07.865
<v Speaker 0>practice. Ben mentioned that there's also impersonation and

00:11:07.865 --> 00:11:11.465
<v Speaker 0>Teleport, but that is then using user authentications

00:11:11.465 --> 00:11:13.545
<v Speaker 0>to pretend to be another role within the

00:11:13.545 --> 00:11:14.665
<v Speaker 0>Teleport ecosystem,

00:11:14.825 --> 00:11:16.265
<v Speaker 0>which works well. But

00:11:17.019 --> 00:11:20.860
<v Speaker 0>this new concept, machine ID, allows machines and

00:11:20.860 --> 00:11:24.220
<v Speaker 0>automation processes to become first class citizens within

00:11:24.220 --> 00:11:26.540
<v Speaker 0>the Teleport authentication workflow

00:11:26.620 --> 00:11:28.459
<v Speaker 0>and give them access to the same resources

00:11:28.459 --> 00:11:29.420
<v Speaker 0>in a secure fashion.

00:11:30.685 --> 00:11:32.525
<v Speaker 0>Does that work? I think that's a great

00:11:32.525 --> 00:11:33.245
<v Speaker 1>summary.

00:11:33.725 --> 00:11:35.805
<v Speaker 0>Awesome. I was really terrified I was gonna

00:11:35.805 --> 00:11:38.045
<v Speaker 0>make an answer to that. But we're

00:11:38.845 --> 00:11:40.845
<v Speaker 0>So do you wanna tell us a little

00:11:40.845 --> 00:11:43.565
<v Speaker 0>bit about I'm curious of how machine ID

00:11:43.565 --> 00:11:44.605
<v Speaker 0>works from

00:11:45.610 --> 00:11:47.370
<v Speaker 0>setting up and getting started. And I we

00:11:47.370 --> 00:11:48.730
<v Speaker 0>will have demos, but maybe we could talk

00:11:48.730 --> 00:11:50.089
<v Speaker 0>about at a high level. How does it

00:11:50.089 --> 00:11:51.850
<v Speaker 0>work into the flow that we have now?

00:11:52.089 --> 00:11:53.930
<v Speaker 0>And how does it work under the covers

00:11:53.930 --> 00:11:55.529
<v Speaker 0>if we're willing to kinda go into a

00:11:55.529 --> 00:11:57.050
<v Speaker 0>little bit of detail there as well?

00:11:57.689 --> 00:11:59.290
<v Speaker 1>Yes. So at a high level,

00:12:01.125 --> 00:12:02.165
<v Speaker 1>you know, I think

00:12:02.725 --> 00:12:04.245
<v Speaker 1>where where to begin for the high level?

00:12:04.245 --> 00:12:06.725
<v Speaker 1>So we have a T Bot service. And

00:12:06.725 --> 00:12:08.725
<v Speaker 1>so when you install Teleport, now there's like

00:12:08.725 --> 00:12:10.325
<v Speaker 1>a fourth binary called T Bot.

00:12:10.725 --> 00:12:12.805
<v Speaker 1>And T Bot is the service that you

00:12:12.805 --> 00:12:15.445
<v Speaker 1>will issue on, let's say, your Ansible control

00:12:15.445 --> 00:12:15.845
<v Speaker 1>node.

00:12:16.520 --> 00:12:17.480
<v Speaker 1>And you

00:12:18.040 --> 00:12:19.880
<v Speaker 1>sort of enroll Tbots

00:12:19.880 --> 00:12:21.240
<v Speaker 1>in the same way in which you'd enroll

00:12:21.240 --> 00:12:22.440
<v Speaker 1>Teleport nodes,

00:12:23.080 --> 00:12:25.000
<v Speaker 1>either through, like, an ephemeral join token or

00:12:25.000 --> 00:12:27.000
<v Speaker 1>IAM token join method.

00:12:28.120 --> 00:12:30.520
<v Speaker 1>I would actually recommend well, we've, like, focused

00:12:30.520 --> 00:12:33.080
<v Speaker 1>most of our sort of UX around the

00:12:32.055 --> 00:12:34.935
<v Speaker 1>AWS token join method, which means you don't

00:12:34.935 --> 00:12:36.775
<v Speaker 1>need to share any secrets.

00:12:38.214 --> 00:12:39.495
<v Speaker 1>You just give it a

00:12:40.055 --> 00:12:41.735
<v Speaker 1>basically, as long as the machine has the

00:12:41.895 --> 00:12:44.135
<v Speaker 1>a role identity, it can automatically join the

00:12:44.135 --> 00:12:44.455
<v Speaker 1>cluster.

00:12:44.980 --> 00:12:47.620
<v Speaker 1>And then you scope your access in the

00:12:47.620 --> 00:12:50.340
<v Speaker 1>same way in which you'd use Teleport roles.

00:12:50.580 --> 00:12:52.740
<v Speaker 1>So you just use another role, and the

00:12:52.740 --> 00:12:54.820
<v Speaker 1>role says, you can access these like, this

00:12:54.820 --> 00:12:57.780
<v Speaker 1>machine can access these hosts, say, like, Jenkins

00:12:57.780 --> 00:12:58.740
<v Speaker 1>hyphen star,

00:13:00.035 --> 00:13:02.355
<v Speaker 1>and they can do the like, these commands.

00:13:03.475 --> 00:13:05.315
<v Speaker 1>And then if you're in your application

00:13:05.315 --> 00:13:05.714
<v Speaker 1>for

00:13:06.514 --> 00:13:08.194
<v Speaker 1>it has some, like, handy other features. So

00:13:08.194 --> 00:13:11.235
<v Speaker 1>for SSH configs, it, like, automatically creates an

00:13:11.235 --> 00:13:12.435
<v Speaker 1>SSH config for you.

00:13:13.810 --> 00:13:16.130
<v Speaker 1>So I'll do a Ansible example, and you'll

00:13:16.130 --> 00:13:17.890
<v Speaker 1>see it just more or less works sort

00:13:17.890 --> 00:13:19.010
<v Speaker 1>of out of the box. You don't need

00:13:19.010 --> 00:13:20.450
<v Speaker 1>to make any of the other changes.

00:13:21.730 --> 00:13:23.170
<v Speaker 1>And let's say if you're

00:13:23.330 --> 00:13:25.410
<v Speaker 1>like, when we add database support, you just

00:13:25.410 --> 00:13:26.610
<v Speaker 1>sort of change your

00:13:26.850 --> 00:13:27.890
<v Speaker 1>setup to use

00:13:28.955 --> 00:13:30.555
<v Speaker 1>the three certificates

00:13:30.635 --> 00:13:32.395
<v Speaker 1>for TLS connections

00:13:32.475 --> 00:13:34.715
<v Speaker 1>as opposed to, let's say, like, the password

00:13:34.715 --> 00:13:36.075
<v Speaker 1>for your Postgres database.

00:13:37.915 --> 00:13:38.635
<v Speaker 0>Okay.

00:13:38.875 --> 00:13:40.555
<v Speaker 0>So I didn't know that I hooked in

00:13:40.555 --> 00:13:42.315
<v Speaker 0>to so that's just you can use AWS

00:13:42.315 --> 00:13:44.875
<v Speaker 0>kind of workload identity to be able to

00:13:45.410 --> 00:13:47.089
<v Speaker 0>speak to Teleport.

00:13:47.490 --> 00:13:50.050
<v Speaker 1>Yeah. Yeah. So it's I think we added

00:13:50.050 --> 00:13:52.290
<v Speaker 1>it in, like, seven, but there's a IAM

00:13:52.290 --> 00:13:55.329
<v Speaker 1>join method. And so you just give you

00:13:55.329 --> 00:13:56.450
<v Speaker 1>create a token

00:13:56.690 --> 00:13:57.410
<v Speaker 1>that says,

00:13:58.785 --> 00:14:01.185
<v Speaker 1>this token can join with this role.

00:14:01.904 --> 00:14:04.385
<v Speaker 1>And as long as it has the identity

00:14:04.385 --> 00:14:07.345
<v Speaker 1>document from this account, you can automatically join

00:14:07.345 --> 00:14:08.065
<v Speaker 1>the account.

00:14:09.425 --> 00:14:10.385
<v Speaker 0>And does this

00:14:11.600 --> 00:14:14.400
<v Speaker 0>does this change anything for the operator side

00:14:14.400 --> 00:14:16.080
<v Speaker 0>of Teleport? Do they do I need to

00:14:16.080 --> 00:14:18.320
<v Speaker 0>do anything different when deploying Teleport? Or is

00:14:18.320 --> 00:14:19.520
<v Speaker 0>this just something that I get out of

00:14:19.520 --> 00:14:21.840
<v Speaker 0>the box by default for free with any

00:14:21.840 --> 00:14:22.720
<v Speaker 0>Teleport,

00:14:22.720 --> 00:14:24.480
<v Speaker 0>like an app upgrade or an app install?

00:14:25.274 --> 00:14:26.875
<v Speaker 1>Yeah. You just get it for free. You

00:14:26.875 --> 00:14:28.795
<v Speaker 1>might have to change, like, the token type.

00:14:30.475 --> 00:14:32.394
<v Speaker 1>But as long as you're in Amazon so,

00:14:32.394 --> 00:14:34.235
<v Speaker 1>like, what people were doing is, like, let's

00:14:34.235 --> 00:14:36.475
<v Speaker 1>say it's like the big strapping your trust

00:14:36.475 --> 00:14:37.035
<v Speaker 1>problem.

00:14:37.435 --> 00:14:38.394
<v Speaker 1>And so

00:14:39.260 --> 00:14:40.300
<v Speaker 1>Teleport

00:14:40.300 --> 00:14:42.060
<v Speaker 1>has, like, a range of different tokens. So

00:14:42.060 --> 00:14:43.580
<v Speaker 1>I think get the sort of least secure,

00:14:43.580 --> 00:14:46.060
<v Speaker 1>you just do, like, a hard coded string,

00:14:46.300 --> 00:14:48.540
<v Speaker 1>which is probably our least secure version. Then

00:14:48.540 --> 00:14:51.020
<v Speaker 1>you can do a issue like t cuddle,

00:14:51.020 --> 00:14:53.500
<v Speaker 1>like, nodes join or cube join.

00:14:53.935 --> 00:14:55.855
<v Speaker 1>Then that's like a short lived join token.

00:14:56.735 --> 00:15:00.095
<v Speaker 1>And some people would publish those tokens to,

00:15:00.095 --> 00:15:02.735
<v Speaker 1>like, secret store. And then when you bootstrap

00:15:02.735 --> 00:15:04.175
<v Speaker 1>the host, it would, like, go to secret

00:15:04.175 --> 00:15:07.295
<v Speaker 1>store, download the join token, and then it

00:15:07.295 --> 00:15:08.460
<v Speaker 1>would join.

00:15:08.620 --> 00:15:09.660
<v Speaker 1>In this way, you don't need to do

00:15:09.660 --> 00:15:11.260
<v Speaker 1>any of that other kind like, machinery. You

00:15:11.260 --> 00:15:13.260
<v Speaker 1>can just use the IAM join method for

00:15:13.899 --> 00:15:16.140
<v Speaker 1>your notes, for example, or for T Bot

00:15:16.140 --> 00:15:16.940
<v Speaker 1>in this case.

00:15:17.500 --> 00:15:18.060
<v Speaker 0>Okay.

00:15:18.380 --> 00:15:20.060
<v Speaker 0>What about for people that are not on

00:15:20.060 --> 00:15:22.140
<v Speaker 0>AWS? Is this something that you think will

00:15:22.140 --> 00:15:24.665
<v Speaker 0>be rolled out to, like, Google's version of

00:15:24.665 --> 00:15:27.705
<v Speaker 0>workload identity or Azure's or whatever people on

00:15:27.705 --> 00:15:29.225
<v Speaker 0>bare metal? Do they have any options to

00:15:29.225 --> 00:15:31.225
<v Speaker 0>be able to look into this machine ID

00:15:31.225 --> 00:15:31.945
<v Speaker 0>concept?

00:15:33.865 --> 00:15:35.865
<v Speaker 1>We'll probably look into the other cloud providers.

00:15:36.110 --> 00:15:39.150
<v Speaker 1>You know, GCP and Azure have the same,

00:15:39.150 --> 00:15:41.550
<v Speaker 1>like, identity documents available on the hosts.

00:15:42.430 --> 00:15:44.750
<v Speaker 1>But for bare metal, you sort of have

00:15:44.750 --> 00:15:45.870
<v Speaker 1>to build your own

00:15:46.670 --> 00:15:48.830
<v Speaker 1>trust of what the machines are.

00:15:49.665 --> 00:15:53.025
<v Speaker 0>That doesn't sound scary at all. Right? I

00:15:54.225 --> 00:15:56.065
<v Speaker 1>mean, I guess in theory, you know, that,

00:15:56.065 --> 00:15:56.545
<v Speaker 1>like,

00:15:57.665 --> 00:15:59.265
<v Speaker 1>the pro like, historically,

00:15:59.265 --> 00:16:00.705
<v Speaker 1>like, you go to the rack, you see

00:16:00.705 --> 00:16:02.065
<v Speaker 1>that machine, you'd like, okay. I trust this

00:16:02.065 --> 00:16:03.800
<v Speaker 1>machine. But in the cloud, you don't know

00:16:03.800 --> 00:16:05.800
<v Speaker 1>necessarily that that new machine that fired up

00:16:05.800 --> 00:16:07.560
<v Speaker 1>is, like, your machine or not.

00:16:08.360 --> 00:16:10.040
<v Speaker 0>Yeah. That makes sense. And there's, like, another

00:16:10.040 --> 00:16:12.360
<v Speaker 1>interesting project like, SOPs was a project from

00:16:12.360 --> 00:16:14.840
<v Speaker 1>Azita Yeah. For encrypting your, like, ENV. And

00:16:14.840 --> 00:16:15.960
<v Speaker 1>they use the same sort of

00:16:16.675 --> 00:16:18.754
<v Speaker 1>method for encrypting their tokens using a sort

00:16:18.754 --> 00:16:20.595
<v Speaker 1>of a KMS key based upon, like, the

00:16:20.595 --> 00:16:21.795
<v Speaker 1>identity documents.

00:16:22.834 --> 00:16:23.875
<v Speaker 0>Okay. Cool.

00:16:24.435 --> 00:16:25.795
<v Speaker 1>But this is like a whole rabbit hole

00:16:25.795 --> 00:16:27.235
<v Speaker 1>of actually, I a webinar on, like, cool

00:16:27.235 --> 00:16:29.154
<v Speaker 1>tokens, TLS, and Teleport,

00:16:29.370 --> 00:16:31.050
<v Speaker 1>which is sort of deep dive into all

00:16:31.050 --> 00:16:32.570
<v Speaker 1>of the different ways in which you can

00:16:32.570 --> 00:16:34.250
<v Speaker 1>set up and configure tokens.

00:16:34.970 --> 00:16:36.570
<v Speaker 1>And it's a fun topic, but it's it's

00:16:36.570 --> 00:16:38.570
<v Speaker 1>also, like, quite day two operations.

00:16:40.010 --> 00:16:41.529
<v Speaker 1>But day two happens to be all the

00:16:41.529 --> 00:16:43.130
<v Speaker 1>other days after you set up Teleport, so

00:16:43.130 --> 00:16:43.930
<v Speaker 1>it is important.

00:16:45.285 --> 00:16:46.005
<v Speaker 0>Okay.

00:16:46.165 --> 00:16:47.525
<v Speaker 0>What are some of the

00:16:48.005 --> 00:16:50.405
<v Speaker 0>the primary use cases then for people to

00:16:50.405 --> 00:16:52.965
<v Speaker 0>start rolling out or using machine ID?

00:16:53.765 --> 00:16:55.525
<v Speaker 1>I think infrastructure tooling.

00:16:55.685 --> 00:16:57.445
<v Speaker 1>I have a good demo for Ansible and

00:16:57.445 --> 00:16:58.565
<v Speaker 1>then also for Jenkins.

00:16:58.940 --> 00:17:01.019
<v Speaker 1>Just these tools that you've had around in

00:17:01.019 --> 00:17:03.579
<v Speaker 1>which you've had to provide them SSH certificates

00:17:03.579 --> 00:17:04.539
<v Speaker 1>or access

00:17:05.179 --> 00:17:06.779
<v Speaker 1>for a period of time,

00:17:07.179 --> 00:17:07.740
<v Speaker 1>but

00:17:07.980 --> 00:17:08.859
<v Speaker 1>you

00:17:10.700 --> 00:17:12.859
<v Speaker 1>haven't rotate like, you you might have created

00:17:12.859 --> 00:17:14.380
<v Speaker 1>a public private key and you haven't really

00:17:14.380 --> 00:17:16.355
<v Speaker 1>rotated it that often. Yeah. And I think,

00:17:16.355 --> 00:17:17.794
<v Speaker 1>you know, we've seen more

00:17:18.274 --> 00:17:21.075
<v Speaker 1>supply chain attacks that have gone through CICD

00:17:21.075 --> 00:17:22.994
<v Speaker 1>build servers, and I think it's sort of

00:17:22.994 --> 00:17:24.355
<v Speaker 1>the area in which people are paying more

00:17:24.355 --> 00:17:26.354
<v Speaker 1>attention to. So that's probably where we would

00:17:26.434 --> 00:17:28.210
<v Speaker 1>start. I think the next one will be

00:17:28.210 --> 00:17:30.289
<v Speaker 1>adding support for databases

00:17:30.610 --> 00:17:33.409
<v Speaker 1>and sort of applications and Kubernetes clusters, but,

00:17:34.210 --> 00:17:37.009
<v Speaker 1>that support is in 9.1.

00:17:38.210 --> 00:17:40.315
<v Speaker 0>Alright. Awesome. Another use case is if you

00:17:40.315 --> 00:17:42.154
<v Speaker 1>wanna interact with the Teleport API, you can

00:17:42.154 --> 00:17:43.595
<v Speaker 1>use T bot to get a certificate that

00:17:43.595 --> 00:17:45.434
<v Speaker 1>will talk to the Teleport API as well.

00:17:46.554 --> 00:17:48.394
<v Speaker 0>Okay. So, I mean, I don't know what

00:17:48.394 --> 00:17:50.954
<v Speaker 0>your Ansible demo is, but let me guess.

00:17:51.835 --> 00:17:53.355
<v Speaker 0>And then you could you can walk us

00:17:53.355 --> 00:17:55.299
<v Speaker 0>through it. So when I think of Ansible,

00:17:55.299 --> 00:17:56.339
<v Speaker 0>I think about

00:17:57.620 --> 00:18:00.899
<v Speaker 0>a human typically running an Ansible playbook, which

00:18:00.899 --> 00:18:03.380
<v Speaker 0>has a inventory fail, but allows it to

00:18:03.380 --> 00:18:05.460
<v Speaker 0>go and speak to one or more machines.

00:18:06.285 --> 00:18:08.205
<v Speaker 0>I'm assuming your demo is gonna be, well,

00:18:08.205 --> 00:18:10.445
<v Speaker 0>what if I wanna automate running an Ansible

00:18:10.445 --> 00:18:12.045
<v Speaker 0>playbook and I have to machine do that

00:18:12.045 --> 00:18:14.845
<v Speaker 0>without the human component there? I'm assuming Ansible

00:18:14.845 --> 00:18:15.965
<v Speaker 0>is gonna request

00:18:16.205 --> 00:18:17.805
<v Speaker 0>some sort of ephemeral

00:18:17.805 --> 00:18:19.725
<v Speaker 0>SSH token to go onto all the machines

00:18:19.725 --> 00:18:20.525
<v Speaker 0>to run the playbook,

00:18:21.110 --> 00:18:23.030
<v Speaker 0>Or is that just way off the mark?

00:18:23.590 --> 00:18:25.590
<v Speaker 1>It's pretty close. I think the thing that's

00:18:25.590 --> 00:18:27.750
<v Speaker 1>different is it's more or less the same.

00:18:28.790 --> 00:18:31.430
<v Speaker 1>And Teleport or, like, machine ID does everything

00:18:31.430 --> 00:18:33.350
<v Speaker 1>for you. So you don't need to worry

00:18:33.350 --> 00:18:33.590
<v Speaker 1>about

00:18:35.595 --> 00:18:39.035
<v Speaker 1>certificates and access, SSH config, actually generates it

00:18:39.035 --> 00:18:40.955
<v Speaker 1>all for you. So maybe just a demo

00:18:40.955 --> 00:18:41.995
<v Speaker 1>would be the easiest way to kinda, like,

00:18:41.995 --> 00:18:43.755
<v Speaker 1>show you. Yeah. Let's take a look. Sounds

00:18:43.755 --> 00:18:44.635
<v Speaker 0>good. Okay.

00:18:46.075 --> 00:18:47.115
<v Speaker 1>Share my screen.

00:18:55.420 --> 00:18:57.580
<v Speaker 0>Alright. Your screen is now shared.

00:18:59.500 --> 00:19:01.100
<v Speaker 0>I can see a terminal, and I can

00:19:01.100 --> 00:19:02.700
<v Speaker 0>see GitHub login for Teleport.

00:19:04.145 --> 00:19:06.145
<v Speaker 1>Yeah. We have this sort of diagram, which

00:19:06.145 --> 00:19:07.585
<v Speaker 1>I'll kinda come back to it.

00:19:08.305 --> 00:19:10.065
<v Speaker 1>But this is sort of what I'll walk

00:19:10.065 --> 00:19:12.705
<v Speaker 1>through. So we have Teleport deployed.

00:19:14.145 --> 00:19:16.225
<v Speaker 1>We have a Ansible control node, and we

00:19:16.225 --> 00:19:18.190
<v Speaker 1>have a group of sort of EC two

00:19:18.190 --> 00:19:20.670
<v Speaker 1>servers that we've added that it can

00:19:21.790 --> 00:19:23.950
<v Speaker 1>connect to. And like I said, this machine

00:19:23.950 --> 00:19:26.270
<v Speaker 1>ID is joined using the IAM join method.

00:19:26.910 --> 00:19:28.910
<v Speaker 1>And they actually these credentials for the SSH

00:19:28.910 --> 00:19:31.070
<v Speaker 1>config are rotated every twenty minutes

00:19:31.310 --> 00:19:31.630
<v Speaker 0>Okay.

00:19:32.385 --> 00:19:33.985
<v Speaker 1>Which is sort of a cool feature that

00:19:33.985 --> 00:19:35.905
<v Speaker 1>sort of happens out of the box. And

00:19:35.905 --> 00:19:37.985
<v Speaker 1>there's other security features like you can lock

00:19:37.985 --> 00:19:39.025
<v Speaker 1>hosts,

00:19:42.305 --> 00:19:43.105
<v Speaker 1>SSO in.

00:19:47.650 --> 00:19:49.809
<v Speaker 1>So much multifactor.

00:19:50.930 --> 00:19:52.289
<v Speaker 0>Yep. Every time.

00:19:53.570 --> 00:19:54.770
<v Speaker 1>Oh, and my password.

00:20:01.725 --> 00:20:03.325
<v Speaker 1>I have a blog post called why SSO

00:20:03.325 --> 00:20:04.685
<v Speaker 1>sucks, and you can see why. This is

00:20:04.685 --> 00:20:06.284
<v Speaker 1>my daily experience.

00:20:08.205 --> 00:20:11.085
<v Speaker 1>Okay. So, you know, here's Teleport. You know,

00:20:11.085 --> 00:20:12.205
<v Speaker 1>people are familiar. It's just, like, a list

00:20:12.205 --> 00:20:14.205
<v Speaker 1>of all of the servers and hosts.

00:20:15.165 --> 00:20:17.510
<v Speaker 1>You don't necessarily have to like this machine

00:20:17.510 --> 00:20:18.229
<v Speaker 1>ID

00:20:18.549 --> 00:20:20.950
<v Speaker 1>service has, like, Teleport and machine ID just

00:20:20.950 --> 00:20:22.710
<v Speaker 1>for this sort of demo purposes

00:20:23.429 --> 00:20:25.029
<v Speaker 1>to make it easy to access.

00:20:26.710 --> 00:20:27.429
<v Speaker 1>And

00:20:29.350 --> 00:20:32.309
<v Speaker 1>I have a Ansible playbook. So let's just

00:20:33.295 --> 00:20:33.775
<v Speaker 1>so the

00:20:34.415 --> 00:20:35.695
<v Speaker 1>my playbook,

00:20:36.335 --> 00:20:37.775
<v Speaker 1>very simple. It just

00:20:38.335 --> 00:20:41.215
<v Speaker 1>all hosts, the user, it just pings host

00:20:41.215 --> 00:20:42.015
<v Speaker 1>name. So

00:20:50.000 --> 00:20:51.519
<v Speaker 1>Let me just run it.

00:20:52.240 --> 00:20:53.600
<v Speaker 1>Oh, no. Okay.

00:20:53.920 --> 00:20:56.160
<v Speaker 1>So some of these ones haven't connected. And,

00:20:56.160 --> 00:20:57.840
<v Speaker 1>actually, there's a reason for this is this

00:20:57.840 --> 00:20:59.519
<v Speaker 1>is because my host file

00:21:00.385 --> 00:21:02.145
<v Speaker 1>it means, like, it's probably this host has

00:21:02.145 --> 00:21:04.705
<v Speaker 1>been cycled through. Yeah. And I no longer

00:21:04.705 --> 00:21:05.905
<v Speaker 1>have access to this host. But these other

00:21:05.905 --> 00:21:07.825
<v Speaker 1>ones are running. I should be coming to

00:21:08.865 --> 00:21:11.345
<v Speaker 1>active sessions. You can see it's sort of

00:21:11.345 --> 00:21:11.904
<v Speaker 1>like

00:21:13.590 --> 00:21:15.429
<v Speaker 1>all these sessions are firing up.

00:21:16.630 --> 00:21:18.710
<v Speaker 1>It's sort of going. And in our audit

00:21:18.710 --> 00:21:20.789
<v Speaker 1>log, you can see that

00:21:22.630 --> 00:21:25.350
<v Speaker 1>we have command execution from my Ansible bot.

00:21:29.414 --> 00:21:31.015
<v Speaker 1>I think what's also what's kinda interesting is

00:21:31.015 --> 00:21:32.374
<v Speaker 1>you see a

00:21:37.894 --> 00:21:40.135
<v Speaker 1>like, an SCP upload of, like, how it

00:21:40.135 --> 00:21:42.054
<v Speaker 1>sort of Ansible sort of works behind the

00:21:42.054 --> 00:21:44.150
<v Speaker 1>scenes. And so I guess this is sort

00:21:44.150 --> 00:21:45.429
<v Speaker 1>of the auditing

00:21:45.429 --> 00:21:47.269
<v Speaker 1>aspects of machine ID,

00:21:47.750 --> 00:21:49.030
<v Speaker 1>but you see it more or less worked,

00:21:49.030 --> 00:21:50.549
<v Speaker 1>but until I guess it didn't work for

00:21:50.549 --> 00:21:51.590
<v Speaker 1>these ones for our. And

00:21:54.390 --> 00:21:56.549
<v Speaker 1>so for

00:21:58.965 --> 00:21:59.765
<v Speaker 0>bigger

00:22:03.925 --> 00:22:06.164
<v Speaker 1>me my Ansible config.

00:22:07.365 --> 00:22:09.685
<v Speaker 1>See, my Ansible config is pretty standard.

00:22:11.419 --> 00:22:13.260
<v Speaker 1>I the host key is on. I have

00:22:13.260 --> 00:22:15.580
<v Speaker 1>inventory of host in my dot host file.

00:22:15.660 --> 00:22:17.499
<v Speaker 1>SSH connection is true.

00:22:18.059 --> 00:22:20.460
<v Speaker 1>And then my argument is I pick

00:22:20.860 --> 00:22:23.739
<v Speaker 1>the information from this machine ID SSH config.

00:22:23.900 --> 00:22:25.260
<v Speaker 1>And we have this command that will, like,

00:22:25.260 --> 00:22:26.140
<v Speaker 1>populate this for you.

00:22:26.905 --> 00:22:27.945
<v Speaker 1>So if I

00:22:42.400 --> 00:22:44.080
<v Speaker 1>You can see I have you know, this

00:22:44.080 --> 00:22:45.680
<v Speaker 1>is sort of my s s like, this

00:22:45.680 --> 00:22:48.400
<v Speaker 1>looks very familiar for people who have a,

00:22:48.480 --> 00:22:50.480
<v Speaker 1>like, dot SSH. Yeah.

00:22:51.840 --> 00:22:53.600
<v Speaker 1>And in inside of here, we have sort

00:22:53.600 --> 00:22:54.400
<v Speaker 1>of the

00:22:54.640 --> 00:22:58.135
<v Speaker 1>the key, the SSH certificates, SSH cert,

00:22:59.175 --> 00:23:01.735
<v Speaker 1>and then we also create this SSH config

00:23:01.735 --> 00:23:02.455
<v Speaker 1>for you.

00:23:03.735 --> 00:23:05.815
<v Speaker 1>And this SSH config sort of does the

00:23:05.815 --> 00:23:08.535
<v Speaker 1>plumbing to know, like, okay. Under the hood,

00:23:09.580 --> 00:23:12.700
<v Speaker 1>it's connecting to these hosts with these identity

00:23:12.700 --> 00:23:15.660
<v Speaker 1>files. It's running these commands. It's going over

00:23:15.660 --> 00:23:16.460
<v Speaker 1>port

00:23:16.700 --> 00:23:18.059
<v Speaker 1>thirty twenty three,

00:23:19.420 --> 00:23:20.780
<v Speaker 1>and you don't need to edit this at

00:23:20.780 --> 00:23:21.020
<v Speaker 1>all.

00:23:22.144 --> 00:23:24.065
<v Speaker 1>So that's the SSH config.

00:23:24.065 --> 00:23:26.225
<v Speaker 1>Let me just show you the hosts file.

00:23:34.799 --> 00:23:36.640
<v Speaker 1>And then you see my host is just

00:23:36.640 --> 00:23:39.200
<v Speaker 1>a list of all of my nodes,

00:23:39.360 --> 00:23:41.840
<v Speaker 1>which are the same nodes here based on

00:23:41.840 --> 00:23:42.799
<v Speaker 1>host name

00:23:43.440 --> 00:23:44.320
<v Speaker 1>plus

00:23:45.039 --> 00:23:47.679
<v Speaker 1>the cluster name of my cluster, which is

00:23:47.085 --> 00:23:48.364
<v Speaker 1>Teleport nine.

00:23:49.005 --> 00:23:50.205
<v Speaker 1>And I think some

00:23:51.245 --> 00:23:53.485
<v Speaker 1>of these were disconnected. That's why the host

00:23:53.485 --> 00:23:55.485
<v Speaker 1>name wasn't able to connect. But that's sort

00:23:55.485 --> 00:23:57.804
<v Speaker 1>of the configuration and sort of setup. I'll

00:23:57.804 --> 00:23:59.644
<v Speaker 1>just kinda, like, pause there for

00:23:59.910 --> 00:24:02.070
<v Speaker 0>Yeah. I wanna make sure I your thoughts.

00:24:02.470 --> 00:24:05.429
<v Speaker 0>I understand what's happening here. Right? So this

00:24:06.230 --> 00:24:09.910
<v Speaker 0>this is a AWS EC two virtual machine

00:24:09.990 --> 00:24:11.030
<v Speaker 0>just running

00:24:11.270 --> 00:24:13.110
<v Speaker 0>some Linux operating system.

00:24:13.875 --> 00:24:16.275
<v Speaker 0>Is there a Teleport agent running on this

00:24:16.275 --> 00:24:16.835
<v Speaker 0>machine?

00:24:17.475 --> 00:24:19.235
<v Speaker 1>There is a Teleport agent which you know,

00:24:19.235 --> 00:24:21.075
<v Speaker 1>I'm in a Teleport session, but there is

00:24:21.075 --> 00:24:21.875
<v Speaker 1>also

00:24:24.675 --> 00:24:26.675
<v Speaker 1>a Keybot service. Right. Okay.

00:24:27.330 --> 00:24:28.849
<v Speaker 1>And so this is sort of

00:24:29.570 --> 00:24:31.250
<v Speaker 1>very familiar for people who are used to

00:24:31.250 --> 00:24:32.450
<v Speaker 1>sort of Teleport.

00:24:33.649 --> 00:24:35.490
<v Speaker 1>You know, we have a, like, T bot

00:24:35.490 --> 00:24:37.730
<v Speaker 1>start. We have a config that I can

00:24:37.730 --> 00:24:40.529
<v Speaker 1>show you. It's using the IEM join method.

00:24:40.929 --> 00:24:41.649
<v Speaker 1>And then you can see

00:24:43.035 --> 00:24:45.755
<v Speaker 1>the renewal interval is every twenty minutes.

00:24:45.995 --> 00:24:47.275
<v Speaker 1>And so in the background,

00:24:47.915 --> 00:24:49.995
<v Speaker 1>this is connecting and talking to Teleport. In

00:24:49.995 --> 00:24:52.875
<v Speaker 1>each twenty minutes, it just issues new certificates,

00:24:54.315 --> 00:24:56.475
<v Speaker 1>which in the background, AMS will use.

00:24:57.980 --> 00:25:00.700
<v Speaker 0>Okay. If this TPO service is offline

00:25:00.700 --> 00:25:03.100
<v Speaker 0>for more than twenty minutes, will it fail

00:25:03.100 --> 00:25:04.059
<v Speaker 0>to rejoin?

00:25:04.220 --> 00:25:06.780
<v Speaker 0>Is that what the certificate rotation means?

00:25:07.260 --> 00:25:09.580
<v Speaker 1>Yeah. Alright. Okay. So as long as it's

00:25:09.580 --> 00:25:11.500
<v Speaker 0>online and happy, it's gonna continue to rotate

00:25:11.500 --> 00:25:11.900
<v Speaker 0>the service.

00:25:12.485 --> 00:25:15.045
<v Speaker 0>Then there is the so Azure was using

00:25:15.045 --> 00:25:17.285
<v Speaker 0>an SSH config. So

00:25:17.445 --> 00:25:19.045
<v Speaker 0>what's the command that I need to run

00:25:19.045 --> 00:25:21.285
<v Speaker 0>to be able to generate that for?

00:25:22.485 --> 00:25:23.605
<v Speaker 1>There is

00:25:23.845 --> 00:25:25.125
<v Speaker 1>let's go to

00:25:25.845 --> 00:25:26.565
<v Speaker 1>our docs.

00:25:33.429 --> 00:25:35.350
<v Speaker 1>So there is t bot init.

00:25:36.230 --> 00:25:38.149
<v Speaker 1>And init has some, yeah,

00:25:38.630 --> 00:25:42.495
<v Speaker 1>also useful commands for, like, ACLs and writing

00:25:42.495 --> 00:25:44.415
<v Speaker 1>permissions for which

00:25:44.495 --> 00:25:47.455
<v Speaker 1>uses the owner and when to initiate it.

00:25:48.095 --> 00:25:48.975
<v Speaker 1>So

00:25:49.295 --> 00:25:50.975
<v Speaker 1>I think we have examples here with file

00:25:50.975 --> 00:25:52.655
<v Speaker 1>permissions or with ACLs,

00:25:53.650 --> 00:25:55.330
<v Speaker 1>Let's say for the Jenkins example,

00:25:57.010 --> 00:25:58.370
<v Speaker 1>use if you're running it as, like, a

00:25:58.370 --> 00:26:00.290
<v Speaker 1>root user, but you can also want to

00:26:00.290 --> 00:26:02.289
<v Speaker 1>make it to the owner of Jenkins Jenkins,

00:26:02.290 --> 00:26:03.810
<v Speaker 1>we have these instructions here, and that'll sort

00:26:03.810 --> 00:26:05.490
<v Speaker 1>of configure your files

00:26:05.490 --> 00:26:05.970
<v Speaker 1>correctly.

00:26:06.925 --> 00:26:08.525
<v Speaker 1>And then once you run t

00:26:09.325 --> 00:26:10.525
<v Speaker 1>t bot start,

00:26:11.245 --> 00:26:13.005
<v Speaker 1>this will just go about and

00:26:13.165 --> 00:26:14.605
<v Speaker 1>configure everything for you.

00:26:15.405 --> 00:26:17.165
<v Speaker 1>I think the one other addition which actually

00:26:17.165 --> 00:26:19.565
<v Speaker 1>is probably missing here is it's based upon

00:26:19.565 --> 00:26:19.885
<v Speaker 1>your

00:26:21.430 --> 00:26:22.710
<v Speaker 1>t bot config.

00:26:24.230 --> 00:26:27.430
<v Speaker 1>And currently, this kind so configs is SSH

00:26:27.430 --> 00:26:28.150
<v Speaker 1>client.

00:26:28.390 --> 00:26:30.230
<v Speaker 1>You can get TLS certificates.

00:26:30.390 --> 00:26:33.270
<v Speaker 1>And as we add databases and other additions,

00:26:33.270 --> 00:26:34.470
<v Speaker 1>you can just sort of edit

00:26:35.524 --> 00:26:37.524
<v Speaker 1>the YAML file to get those other certificates

00:26:37.524 --> 00:26:38.244
<v Speaker 1>for you.

00:26:39.605 --> 00:26:40.724
<v Speaker 0>Right. Okay.

00:26:43.044 --> 00:26:45.284
<v Speaker 0>I think I understand that. So I'm thinking

00:26:45.284 --> 00:26:46.325
<v Speaker 0>about then

00:26:46.565 --> 00:26:48.245
<v Speaker 0>if I were setting this up for myself,

00:26:48.245 --> 00:26:49.684
<v Speaker 0>I spent up an EC two instance, I

00:26:49.684 --> 00:26:50.644
<v Speaker 0>installed Teleport.

00:26:50.970 --> 00:26:53.289
<v Speaker 0>What does that T port? Does T bot

00:26:53.289 --> 00:26:54.330
<v Speaker 0>need configured

00:26:55.690 --> 00:26:58.010
<v Speaker 0>besides the I'm stuff that we put this,

00:26:58.010 --> 00:26:59.770
<v Speaker 0>like does that need to add join token?

00:26:59.770 --> 00:27:01.210
<v Speaker 0>Does it need to add certificate?

00:27:02.090 --> 00:27:03.529
<v Speaker 1>Yes. It needs

00:27:04.330 --> 00:27:05.530
<v Speaker 1>okay. So we have

00:27:06.955 --> 00:27:07.995
<v Speaker 1>the first thing you need to do is

00:27:07.995 --> 00:27:09.514
<v Speaker 1>add a, like, a user.

00:27:10.635 --> 00:27:12.875
<v Speaker 1>And so this is, like, token based. The

00:27:12.875 --> 00:27:15.434
<v Speaker 1>IAM method, you create, like, a new token,

00:27:15.434 --> 00:27:16.715
<v Speaker 1>and this is kinda what I was saying.

00:27:16.715 --> 00:27:18.794
<v Speaker 1>You restrict it to

00:27:19.980 --> 00:27:20.860
<v Speaker 1>AWS

00:27:20.860 --> 00:27:21.659
<v Speaker 1>on

00:27:21.900 --> 00:27:22.940
<v Speaker 1>for access

00:27:23.580 --> 00:27:25.340
<v Speaker 1>and give it a name. And then when

00:27:25.340 --> 00:27:27.180
<v Speaker 1>you enroll the token, you sort of do

00:27:27.180 --> 00:27:28.620
<v Speaker 1>t boss add, and then that's sort of

00:27:28.620 --> 00:27:29.820
<v Speaker 1>the same flow as,

00:27:30.140 --> 00:27:31.100
<v Speaker 1>t cuddle,

00:27:32.380 --> 00:27:33.900
<v Speaker 1>Teleport sort of add a node.

00:27:35.515 --> 00:27:37.195
<v Speaker 1>And then it's the same flow of starting

00:27:37.195 --> 00:27:38.394
<v Speaker 1>machine ID.

00:27:40.795 --> 00:27:42.875
<v Speaker 1>And, yeah, then there's, like, other sort of

00:27:42.875 --> 00:27:44.634
<v Speaker 1>debug commands here for

00:27:44.955 --> 00:27:46.554
<v Speaker 1>making sure that you have access.

00:27:47.195 --> 00:27:47.675
<v Speaker 0>Cool.

00:27:49.620 --> 00:27:50.500
<v Speaker 0>Awesome.

00:27:50.500 --> 00:27:51.540
<v Speaker 0>I like that.

00:27:53.700 --> 00:27:56.420
<v Speaker 1>Is there anything else for tea bot? And

00:27:56.420 --> 00:27:58.820
<v Speaker 1>I think I well, let's just run my

00:28:03.935 --> 00:28:06.095
<v Speaker 1>we have the let's run the

00:28:08.255 --> 00:28:09.774
<v Speaker 1>in the playbook again.

00:28:10.015 --> 00:28:11.615
<v Speaker 1>And, actually, so you noticed

00:28:12.510 --> 00:28:15.630
<v Speaker 1>in my current demo, I just have hardcoded

00:28:15.630 --> 00:28:16.430
<v Speaker 1>host

00:28:16.430 --> 00:28:17.150
<v Speaker 1>file.

00:28:18.910 --> 00:28:20.590
<v Speaker 1>And we have instructions here on sort of

00:28:20.590 --> 00:28:22.670
<v Speaker 1>how to generate the host file in our

00:28:22.670 --> 00:28:23.470
<v Speaker 1>Ansible guide.

00:28:25.915 --> 00:28:28.155
<v Speaker 1>In this case, we use, like, TSH to

00:28:28.155 --> 00:28:28.795
<v Speaker 1>list,

00:28:29.995 --> 00:28:31.595
<v Speaker 1>and then we just add this to a

00:28:31.595 --> 00:28:33.995
<v Speaker 1>host file. This should be something in which,

00:28:33.995 --> 00:28:35.275
<v Speaker 1>like, we would like to make a small

00:28:35.275 --> 00:28:37.115
<v Speaker 1>program that will just talk to the Teleport

00:28:37.115 --> 00:28:39.620
<v Speaker 1>API to generate this host file for you,

00:28:39.620 --> 00:28:41.379
<v Speaker 1>but this is sort of just a example.

00:28:41.700 --> 00:28:43.780
<v Speaker 1>And this is why the host file was

00:28:43.780 --> 00:28:45.779
<v Speaker 1>sort of out of date with Teleport because

00:28:46.020 --> 00:28:48.740
<v Speaker 1>I've, you know, been firing up my cluster

00:28:49.540 --> 00:28:50.179
<v Speaker 1>up and down.

00:28:50.955 --> 00:28:52.315
<v Speaker 1>So this would be, like, another area in

00:28:52.315 --> 00:28:53.914
<v Speaker 1>which you might wanna automate. The T bot

00:28:53.914 --> 00:28:56.635
<v Speaker 0>daemon could just, like, load an eBPF program

00:28:56.635 --> 00:28:59.434
<v Speaker 0>to do this dynamically rather than actually modifying

00:28:59.434 --> 00:29:00.794
<v Speaker 0>the host file. I think that would be

00:29:00.794 --> 00:29:01.835
<v Speaker 0>pretty pretty cool.

00:29:02.570 --> 00:29:04.650
<v Speaker 1>Yeah. Then that's also, the same inventory of

00:29:04.650 --> 00:29:05.610
<v Speaker 1>Teleport.

00:29:05.610 --> 00:29:06.169
<v Speaker 1>You know,

00:29:06.570 --> 00:29:08.409
<v Speaker 1>you'd wanna also, like, you know, create

00:29:08.650 --> 00:29:09.370
<v Speaker 1>different

00:29:10.090 --> 00:29:12.650
<v Speaker 1>like, use our labels based for RBAC. And,

00:29:12.650 --> 00:29:14.169
<v Speaker 1>actually, if you come to RBAC,

00:29:15.290 --> 00:29:18.730
<v Speaker 1>they do create these, like, automatically generated

00:29:18.075 --> 00:29:19.034
<v Speaker 1>rows,

00:29:19.115 --> 00:29:20.714
<v Speaker 1>which will show you what

00:29:21.195 --> 00:29:23.355
<v Speaker 1>labels you can get access to, which under

00:29:23.355 --> 00:29:25.674
<v Speaker 1>the hood, which roles does it impersonate,

00:29:26.394 --> 00:29:28.955
<v Speaker 1>and what resources does it have access to.

00:29:30.235 --> 00:29:32.315
<v Speaker 1>And so it has access to the certificate

00:29:32.315 --> 00:29:34.440
<v Speaker 1>authority, but it can't read any secrets.

00:29:35.320 --> 00:29:36.520
<v Speaker 1>And there has been lots of work done

00:29:36.520 --> 00:29:38.279
<v Speaker 1>around the security of

00:29:39.559 --> 00:29:41.159
<v Speaker 1>these certificates and tokens.

00:29:41.320 --> 00:29:42.600
<v Speaker 1>And I think that's sort of one core

00:29:42.600 --> 00:29:45.080
<v Speaker 1>focus that we've worked with our customers is

00:29:45.080 --> 00:29:47.480
<v Speaker 1>just that if someone was to get access

00:29:47.480 --> 00:29:48.279
<v Speaker 1>to a

00:29:49.000 --> 00:29:49.480
<v Speaker 1>certificate,

00:29:50.085 --> 00:29:50.725
<v Speaker 1>one,

00:29:51.125 --> 00:29:53.524
<v Speaker 1>you have the ability to lock these

00:29:54.485 --> 00:29:55.924
<v Speaker 1>bots pretty easily.

00:29:56.325 --> 00:29:58.005
<v Speaker 1>You can make quotation easier.

00:29:58.005 --> 00:30:00.005
<v Speaker 1>And there's sort of some other stuff behind

00:30:00.005 --> 00:30:01.365
<v Speaker 1>the scenes we've done to really sort of

00:30:01.365 --> 00:30:02.405
<v Speaker 1>secure it. So

00:30:04.320 --> 00:30:05.200
<v Speaker 1>definitely,

00:30:05.600 --> 00:30:07.520
<v Speaker 1>it's relatively easy for Ansible, but I think

00:30:07.520 --> 00:30:08.880
<v Speaker 1>the most value comes from people who are

00:30:08.880 --> 00:30:11.680
<v Speaker 1>very sort of conscious and concerned of these

00:30:11.680 --> 00:30:13.920
<v Speaker 1>different sort of robots. Ants like, Ansible can,

00:30:13.920 --> 00:30:15.920
<v Speaker 1>like, touch all of your systems. And Yeah.

00:30:16.000 --> 00:30:18.560
<v Speaker 1>If someone gets access to those, like, public

00:30:17.835 --> 00:30:18.955
<v Speaker 1>private keys,

00:30:19.274 --> 00:30:20.955
<v Speaker 1>you could be in some trouble.

00:30:21.995 --> 00:30:24.315
<v Speaker 0>Yeah. Definitely. Like, I mean, I've lost count

00:30:24.315 --> 00:30:25.674
<v Speaker 0>of the amount of times in my career

00:30:25.674 --> 00:30:28.395
<v Speaker 0>that I've generated that, you know, SSH key

00:30:28.395 --> 00:30:29.034
<v Speaker 0>gen.

00:30:29.434 --> 00:30:30.875
<v Speaker 0>And then that just that's just been a

00:30:30.875 --> 00:30:32.860
<v Speaker 0>key I've used forever for the lifetime of

00:30:32.860 --> 00:30:34.380
<v Speaker 0>a project to

00:30:34.620 --> 00:30:36.620
<v Speaker 0>do any automation whatsoever.

00:30:37.100 --> 00:30:38.780
<v Speaker 0>And then Yeah. So we also have, like,

00:30:38.780 --> 00:30:40.059
<v Speaker 1>the audit log of

00:30:41.260 --> 00:30:42.780
<v Speaker 1>certificates issued,

00:30:42.780 --> 00:30:44.460
<v Speaker 1>and I think we sort of ran through

00:30:45.105 --> 00:30:47.184
<v Speaker 1>like, we've executed a command,

00:30:47.345 --> 00:30:47.825
<v Speaker 1>like,

00:30:48.785 --> 00:30:50.705
<v Speaker 1>what happened during these sort of sessions.

00:30:51.985 --> 00:30:54.225
<v Speaker 1>It's just sort of useful telemetry that

00:30:54.785 --> 00:30:57.665
<v Speaker 1>you wouldn't necessarily otherwise get of because all

00:30:57.665 --> 00:30:58.865
<v Speaker 1>the connections go through Teleport.

00:30:59.320 --> 00:31:01.480
<v Speaker 0>Yeah. And that's super important because we get

00:31:01.480 --> 00:31:02.920
<v Speaker 0>all of that auditing

00:31:03.160 --> 00:31:05.080
<v Speaker 0>stuff that we we just need for all

00:31:05.080 --> 00:31:07.000
<v Speaker 0>of these processes. Like, if we ever

00:31:07.560 --> 00:31:09.640
<v Speaker 0>wanna understand if a bot has gone a

00:31:09.640 --> 00:31:11.400
<v Speaker 0>bit rogue on us for whatever reason, then

00:31:11.400 --> 00:31:13.160
<v Speaker 0>we have all that information for the Teleport

00:31:13.160 --> 00:31:16.165
<v Speaker 0>Autologue. I think that's a really exciting addition

00:31:16.165 --> 00:31:17.924
<v Speaker 0>and I think it's gonna be really important.

00:31:18.245 --> 00:31:20.645
<v Speaker 0>And I'm gonna just say like the the

00:31:20.645 --> 00:31:22.885
<v Speaker 0>TLDR for the people watching this, that if

00:31:22.885 --> 00:31:25.445
<v Speaker 0>you have any automation that needs access to

00:31:25.445 --> 00:31:27.765
<v Speaker 0>a server or a database, then

00:31:28.270 --> 00:31:30.350
<v Speaker 0>machine ID is probably the way that you

00:31:30.350 --> 00:31:32.509
<v Speaker 0>wanna start building out that automation

00:31:32.510 --> 00:31:33.710
<v Speaker 0>in the future.

00:31:34.990 --> 00:31:36.350
<v Speaker 1>Yeah. And it's, you know, it's kinda like

00:31:36.350 --> 00:31:38.429
<v Speaker 1>a primitive. You build upon it based upon

00:31:38.429 --> 00:31:39.790
<v Speaker 1>how you want to configure

00:31:40.455 --> 00:31:42.294
<v Speaker 1>your services. You know, you could

00:31:42.455 --> 00:31:44.054
<v Speaker 1>run Tiva on the machine, or you could,

00:31:44.054 --> 00:31:46.054
<v Speaker 1>like, publish certificates and pull them through a

00:31:46.054 --> 00:31:48.215
<v Speaker 1>secret manager if you wanted to. You have

00:31:48.215 --> 00:31:49.494
<v Speaker 1>a range of options.

00:31:51.095 --> 00:31:52.934
<v Speaker 0>Does that mean I can have all of

00:31:52.934 --> 00:31:56.054
<v Speaker 0>my Kubernetes components authenticate

00:31:55.170 --> 00:31:58.130
<v Speaker 0>via automatically self rotating every twenty minutes x

00:31:58.130 --> 00:32:00.530
<v Speaker 0>five zero nine certificates? Is that something that

00:32:00.530 --> 00:32:02.450
<v Speaker 0>you see and maybe not today if it's

00:32:02.450 --> 00:32:03.809
<v Speaker 0>not possible or in the future?

00:32:04.290 --> 00:32:06.130
<v Speaker 1>Yeah. I think that will be coming

00:32:07.725 --> 00:32:10.684
<v Speaker 1>in, I think, Teleport nine one. I think

00:32:10.684 --> 00:32:11.485
<v Speaker 1>the first

00:32:12.125 --> 00:32:14.525
<v Speaker 1>today is just SSH, but we'll be adding

00:32:14.525 --> 00:32:16.764
<v Speaker 1>database and Kubernetes support.

00:32:17.245 --> 00:32:18.765
<v Speaker 0>Awesome. Very, very cool.

00:32:21.040 --> 00:32:24.080
<v Speaker 0>Alright. Anything else on machine ID that you

00:32:24.080 --> 00:32:24.880
<v Speaker 0>want to

00:32:25.840 --> 00:32:28.160
<v Speaker 1>I think that's it. I think the blog

00:32:28.160 --> 00:32:28.880
<v Speaker 1>post

00:32:29.040 --> 00:32:31.280
<v Speaker 1>goes into detail. Also, if you're interested, check

00:32:31.280 --> 00:32:32.400
<v Speaker 1>out our documentation.

00:32:34.225 --> 00:32:36.625
<v Speaker 1>Jenkins is another tool. We have an example

00:32:36.625 --> 00:32:38.624
<v Speaker 1>here of using Jenkins for

00:32:39.184 --> 00:32:40.785
<v Speaker 1>your Jenkins workers,

00:32:40.785 --> 00:32:42.384
<v Speaker 1>which is another example

00:32:43.265 --> 00:32:44.144
<v Speaker 1>of a

00:32:44.705 --> 00:32:47.025
<v Speaker 1>service that you might have around which you

00:32:47.025 --> 00:32:49.630
<v Speaker 1>haven't necessarily considered hardening

00:32:49.710 --> 00:32:51.790
<v Speaker 1>how you do deal with, like, SSH.

00:32:52.990 --> 00:32:54.270
<v Speaker 1>And once you sort of configure it and

00:32:54.270 --> 00:32:55.710
<v Speaker 1>set it up, you know, this is an

00:32:55.710 --> 00:32:57.390
<v Speaker 1>example in the Jenkins pipeline.

00:32:58.350 --> 00:32:59.870
<v Speaker 1>You can you know, if there is something

00:32:59.870 --> 00:33:01.550
<v Speaker 1>in your pipeline, you can just use Teleport

00:33:01.550 --> 00:33:02.350
<v Speaker 1>for it.

00:33:04.274 --> 00:33:04.994
<v Speaker 0>Yeah.

00:33:06.115 --> 00:33:07.394
<v Speaker 0>I'm gonna have to clear that. I mean,

00:33:07.394 --> 00:33:09.075
<v Speaker 0>I don't use Jenkins as much as I

00:33:09.075 --> 00:33:10.674
<v Speaker 0>I used to. That's for sure. But

00:33:11.394 --> 00:33:12.834
<v Speaker 1>so You're a lucky man.

00:33:13.794 --> 00:33:16.195
<v Speaker 0>Yeah. I don't think everybody has that privilege.

00:33:17.235 --> 00:33:20.260
<v Speaker 0>There's a bit of a mechanical buzz there.

00:33:20.260 --> 00:33:21.140
<v Speaker 0>Can you

00:33:22.180 --> 00:33:23.540
<v Speaker 0>if you got, like, a cable for your

00:33:23.540 --> 00:33:24.820
<v Speaker 0>mic or something, just pull it out and

00:33:24.820 --> 00:33:26.660
<v Speaker 0>push it back in there. Okay. Is it

00:33:26.660 --> 00:33:28.020
<v Speaker 1>still there? Alright.

00:33:30.500 --> 00:33:31.220
<v Speaker 0>I think we're good.

00:33:33.105 --> 00:33:34.705
<v Speaker 1>Is it still there? Oh, yeah. It's still

00:33:34.705 --> 00:33:35.025
<v Speaker 0>busting.

00:33:49.260 --> 00:33:51.500
<v Speaker 1>Alright. How was that? You've angered it.

00:33:51.980 --> 00:33:53.180
<v Speaker 0>I made it worse?

00:33:53.660 --> 00:33:55.420
<v Speaker 0>Oh, no. Hold on.

00:34:17.020 --> 00:34:19.420
<v Speaker 1>Okay. Is that any better? Much better. That

00:34:19.420 --> 00:34:20.220
<v Speaker 0>is clean.

00:34:20.540 --> 00:34:21.900
<v Speaker 0>We're good. Okay. Perfect.

00:34:23.260 --> 00:34:23.900
<v Speaker 1>Okay.

00:34:24.219 --> 00:34:25.900
<v Speaker 1>Should we move on to the next features?

00:34:25.900 --> 00:34:26.540
<v Speaker 1>Are there any questions?

00:34:27.594 --> 00:34:30.555
<v Speaker 0>Yeah. If you are watching and you've got

00:34:30.795 --> 00:34:32.475
<v Speaker 0>yeah. I'll pop this back over to face

00:34:32.475 --> 00:34:33.915
<v Speaker 0>mode. Hold on. If

00:34:34.475 --> 00:34:36.075
<v Speaker 0>you're watching and you're curious

00:34:36.395 --> 00:34:38.555
<v Speaker 0>or have any questions about machine ID, drop

00:34:38.555 --> 00:34:40.235
<v Speaker 0>them into the comments, and Ben and I

00:34:40.235 --> 00:34:42.820
<v Speaker 0>will tackle them. But there is a lot

00:34:42.820 --> 00:34:44.980
<v Speaker 0>more in Teleport nine that we can

00:34:45.300 --> 00:34:46.739
<v Speaker 0>take a look at. So

00:34:47.940 --> 00:34:49.780
<v Speaker 0>what do you wanna tackle next?

00:34:51.300 --> 00:34:52.739
<v Speaker 1>I did have a list.

00:34:53.619 --> 00:34:55.460
<v Speaker 1>Okay. We've let's talk about Redis.

00:34:56.324 --> 00:34:58.085
<v Speaker 0>Alright. I know you've been dying to talk

00:34:58.085 --> 00:35:00.085
<v Speaker 0>about Redis, so let's talk about Redis.

00:35:00.484 --> 00:35:01.445
<v Speaker 1>I mean,

00:35:02.405 --> 00:35:03.525
<v Speaker 1>Salvatore

00:35:03.925 --> 00:35:05.685
<v Speaker 1>is no longer working on Redis, which I'm

00:35:05.685 --> 00:35:07.205
<v Speaker 1>very sad about, but many

00:35:07.765 --> 00:35:10.645
<v Speaker 1>small Redis comps with Salvatore was always

00:35:11.790 --> 00:35:14.110
<v Speaker 1>always fun. Do you wanna share

00:35:14.430 --> 00:35:15.470
<v Speaker 1>my screen again?

00:35:16.590 --> 00:35:18.910
<v Speaker 0>Yeah. Sure. Let's go. So

00:35:23.964 --> 00:35:26.045
<v Speaker 0>we are talking about Redis and Teleport nine,

00:35:26.045 --> 00:35:28.125
<v Speaker 0>I'm assuming Redis has now been added as

00:35:28.125 --> 00:35:31.244
<v Speaker 0>a supported database so that people can use

00:35:31.244 --> 00:35:31.885
<v Speaker 0>the

00:35:32.525 --> 00:35:35.484
<v Speaker 0>Teleport proxy to connect and secure the access

00:35:35.484 --> 00:35:35.805
<v Speaker 0>to it.

00:35:36.940 --> 00:35:39.100
<v Speaker 1>Correct. Yep. Awesome. So

00:35:39.580 --> 00:35:42.220
<v Speaker 1>Redis is, like, one of those interesting products.

00:35:43.980 --> 00:35:44.540
<v Speaker 1>And

00:35:45.020 --> 00:35:47.820
<v Speaker 1>I actually, like, hosted a RedisConf years ago,

00:35:48.060 --> 00:35:49.820
<v Speaker 1>and Salvatore was always, like

00:35:50.460 --> 00:35:52.365
<v Speaker 1>you know, he's quite an opinionated programmer. He's

00:35:52.365 --> 00:35:53.645
<v Speaker 1>like, you shouldn't really put Redis on the

00:35:53.645 --> 00:35:55.325
<v Speaker 1>Internet. It wasn't designed for that.

00:35:55.565 --> 00:35:56.125
<v Speaker 1>And

00:35:57.405 --> 00:35:59.245
<v Speaker 1>meaning that, you know, like, Redis should really

00:35:59.245 --> 00:36:00.765
<v Speaker 1>be in its own, like, private subnet. You're

00:36:00.765 --> 00:36:03.165
<v Speaker 1>like, you don't necessarily wanna, like, publicly expose

00:36:03.565 --> 00:36:03.965
<v Speaker 1>Redis,

00:36:04.750 --> 00:36:05.390
<v Speaker 1>which,

00:36:06.830 --> 00:36:08.590
<v Speaker 1>you know, I guess eventually people will do

00:36:08.590 --> 00:36:10.270
<v Speaker 1>things with your tool that you may not

00:36:10.270 --> 00:36:13.070
<v Speaker 1>necessarily expect. Oh, awesome. Have, like, basic,

00:36:13.550 --> 00:36:16.670
<v Speaker 1>yeah, password or but in Redis six, they

00:36:16.670 --> 00:36:20.350
<v Speaker 1>added support for TLS certificates

00:36:19.455 --> 00:36:20.655
<v Speaker 1>for authentication.

00:36:21.615 --> 00:36:22.175
<v Speaker 1>And

00:36:22.975 --> 00:36:26.175
<v Speaker 1>just in general, like, database support on Teleport,

00:36:26.415 --> 00:36:28.015
<v Speaker 1>you know, they're always, like, kinda like where

00:36:28.015 --> 00:36:30.575
<v Speaker 1>your crown jewels are, but also is most

00:36:30.575 --> 00:36:33.170
<v Speaker 1>likely to just be passing around a shared

00:36:33.170 --> 00:36:33.890
<v Speaker 1>password,

00:36:33.970 --> 00:36:35.730
<v Speaker 1>maybe for a team or a group. And

00:36:35.730 --> 00:36:37.890
<v Speaker 1>it runs into that same traditional problem of

00:36:38.050 --> 00:36:39.730
<v Speaker 1>if a team member leaves, like, did you

00:36:39.730 --> 00:36:42.450
<v Speaker 1>rotate the password? Like, pro probably not. It's

00:36:42.450 --> 00:36:44.530
<v Speaker 1>like that one ops person who seeded the

00:36:44.530 --> 00:36:47.625
<v Speaker 1>first RDS database, like, there's still a password

00:36:47.625 --> 00:36:50.265
<v Speaker 1>likely on, like, his notepad somewhere

00:36:50.425 --> 00:36:52.425
<v Speaker 1>that will get root access. And,

00:36:53.705 --> 00:36:54.825
<v Speaker 1>you know, Teleport,

00:36:54.825 --> 00:36:56.425
<v Speaker 1>you know, we started with the

00:36:56.665 --> 00:36:59.145
<v Speaker 1>large, like, SQL and NoSQL databases,

00:37:00.025 --> 00:37:01.410
<v Speaker 1>and then we're just sort of expanding our

00:37:01.410 --> 00:37:03.490
<v Speaker 1>suite of tools. So in Teleport nine, we

00:37:03.490 --> 00:37:05.410
<v Speaker 1>added Redis, Maribadb,

00:37:05.410 --> 00:37:07.490
<v Speaker 1>which is, you know, MySQL

00:37:08.130 --> 00:37:08.930
<v Speaker 1>variant

00:37:08.930 --> 00:37:09.730
<v Speaker 1>and

00:37:10.530 --> 00:37:11.970
<v Speaker 1>Microsoft

00:37:12.905 --> 00:37:14.105
<v Speaker 1>SQL Server,

00:37:15.545 --> 00:37:17.385
<v Speaker 1>which I haven't configured in this one because

00:37:17.385 --> 00:37:18.905
<v Speaker 1>I don't wanna necessarily go through the pain

00:37:18.905 --> 00:37:21.145
<v Speaker 1>of configuring Microsoft SQL Server.

00:37:22.345 --> 00:37:24.185
<v Speaker 0>Alright. So you didn't just add one database

00:37:24.185 --> 00:37:26.425
<v Speaker 0>to the Teleport line. You've added Redis,

00:37:27.050 --> 00:37:27.930
<v Speaker 0>Microsoft

00:37:27.930 --> 00:37:29.050
<v Speaker 0>SQL Server,

00:37:29.130 --> 00:37:30.810
<v Speaker 0>and MariaDB.

00:37:31.609 --> 00:37:33.609
<v Speaker 0>Yep. That's

00:37:33.609 --> 00:37:35.130
<v Speaker 0>cool. I know a lot of people that

00:37:35.130 --> 00:37:36.410
<v Speaker 0>prefer MariaDB

00:37:36.410 --> 00:37:39.369
<v Speaker 0>to buy SQL ever since Oracle had their

00:37:39.369 --> 00:37:40.170
<v Speaker 0>acquisition.

00:37:40.730 --> 00:37:42.010
<v Speaker 0>So it's good that

00:37:42.485 --> 00:37:43.605
<v Speaker 0>the people that that could have done that

00:37:43.605 --> 00:37:46.085
<v Speaker 0>route can also take advantage of these tools.

00:37:46.565 --> 00:37:48.645
<v Speaker 0>And I guess some people like Microsoft SQL

00:37:48.645 --> 00:37:50.245
<v Speaker 0>Server. I've never used it. I have no

00:37:50.405 --> 00:37:51.845
<v Speaker 0>I couldn't tell you a single damn thing

00:37:51.845 --> 00:37:53.845
<v Speaker 0>about Microsoft SQL Server, but it's cool that

00:37:53.845 --> 00:37:54.725
<v Speaker 0>people can secure it.

00:37:55.450 --> 00:37:56.890
<v Speaker 1>All I knew was when I looked at

00:37:56.890 --> 00:37:59.610
<v Speaker 1>our docs, it required going to, like, the

00:37:59.610 --> 00:38:00.330
<v Speaker 1>UI.

00:38:00.890 --> 00:38:01.850
<v Speaker 1>Or maybe not.

00:38:02.570 --> 00:38:04.090
<v Speaker 0>Yeah. If if I have to hook up

00:38:04.090 --> 00:38:06.090
<v Speaker 0>active directory to speak to my database, I

00:38:06.090 --> 00:38:08.250
<v Speaker 0>am already broken. This is not gonna happen.

00:38:08.250 --> 00:38:10.010
<v Speaker 1>Oh, yeah. When this popped up, I was

00:38:09.795 --> 00:38:11.075
<v Speaker 1>like, oh, I don't know if this is

00:38:11.075 --> 00:38:13.395
<v Speaker 1>for me. But it is we do have

00:38:13.395 --> 00:38:14.035
<v Speaker 1>people

00:38:14.755 --> 00:38:16.434
<v Speaker 1>and I'll probably configure this at some point

00:38:16.434 --> 00:38:18.195
<v Speaker 1>when I when I get the time

00:38:19.395 --> 00:38:21.474
<v Speaker 1>for it. But these are all of our

00:38:21.474 --> 00:38:22.674
<v Speaker 1>databases, you know, we support,

00:38:23.310 --> 00:38:25.630
<v Speaker 1>and we're just sort of slowly expanding them.

00:38:26.190 --> 00:38:28.350
<v Speaker 1>The team is cranking like crazy. So if

00:38:28.350 --> 00:38:29.710
<v Speaker 1>there's anyone that you'll

00:38:30.430 --> 00:38:32.190
<v Speaker 1>have a particular interest in, you know, you

00:38:32.190 --> 00:38:33.790
<v Speaker 1>can ping me. I know we've already had

00:38:33.790 --> 00:38:34.830
<v Speaker 1>requests for Redis,

00:38:35.435 --> 00:38:37.835
<v Speaker 1>like the AWS version of ElastiCache,

00:38:37.835 --> 00:38:39.995
<v Speaker 1>which is in process as well.

00:38:41.355 --> 00:38:43.035
<v Speaker 1>And then also just a note on Redis,

00:38:43.035 --> 00:38:44.875
<v Speaker 1>there's, like, two different instructions for if you're

00:38:44.875 --> 00:38:46.715
<v Speaker 1>using Redis cluster or

00:38:47.210 --> 00:38:48.570
<v Speaker 1>standalone Redis.

00:38:49.369 --> 00:38:51.450
<v Speaker 1>The instructions don't differ too much.

00:38:53.130 --> 00:38:54.570
<v Speaker 1>But once connected,

00:38:55.529 --> 00:38:56.890
<v Speaker 1>you'll get a sort of, like, a list

00:38:56.890 --> 00:38:57.930
<v Speaker 1>of your databases.

00:38:59.049 --> 00:39:01.194
<v Speaker 1>And everything for connecting and accessing your database

00:39:01.194 --> 00:39:02.795
<v Speaker 1>is actually done on the terminal. You know,

00:39:02.795 --> 00:39:04.555
<v Speaker 1>we have some instructions here to sort of

00:39:07.194 --> 00:39:08.714
<v Speaker 1>to tell you how to, like, log in

00:39:08.714 --> 00:39:10.635
<v Speaker 1>and get get credentials. But we assume most

00:39:10.635 --> 00:39:13.275
<v Speaker 1>database people have their own tooling either,

00:39:14.630 --> 00:39:16.550
<v Speaker 1>you know, it's like the Redis CLI or

00:39:16.550 --> 00:39:17.670
<v Speaker 1>it is like

00:39:19.910 --> 00:39:21.430
<v Speaker 1>GUI for Postgres.

00:39:21.430 --> 00:39:22.870
<v Speaker 1>And we also have instructions on how to

00:39:22.870 --> 00:39:25.270
<v Speaker 1>configure those GUI. So let's

00:39:25.670 --> 00:39:26.150
<v Speaker 1>log in.

00:39:29.005 --> 00:39:30.765
<v Speaker 1>And then I'm using my

00:39:31.645 --> 00:39:33.165
<v Speaker 1>SSH flow again.

00:39:36.845 --> 00:39:38.285
<v Speaker 1>I didn't have to log in again. That's

00:39:38.285 --> 00:39:38.845
<v Speaker 1>good.

00:39:41.805 --> 00:39:43.405
<v Speaker 0>I think you're okay. Maybe?

00:39:45.880 --> 00:39:47.800
<v Speaker 1>I think it's okay. There we are. So

00:39:47.800 --> 00:39:48.440
<v Speaker 1>we're in.

00:39:52.840 --> 00:39:54.520
<v Speaker 1>And, you know, you know, same sort of

00:39:54.520 --> 00:39:55.160
<v Speaker 1>flow, like,

00:39:56.375 --> 00:39:57.575
<v Speaker 1>for servers,

00:39:57.575 --> 00:39:59.015
<v Speaker 1>we have TSHLS,

00:39:59.015 --> 00:40:00.695
<v Speaker 1>TSH DBLS.

00:40:05.974 --> 00:40:07.095
<v Speaker 1>One thing you do need to do is

00:40:07.095 --> 00:40:09.095
<v Speaker 1>you need to log in with the database

00:40:09.095 --> 00:40:09.575
<v Speaker 1>user,

00:40:10.310 --> 00:40:12.390
<v Speaker 1>and this is almost like your principle in

00:40:12.390 --> 00:40:14.630
<v Speaker 1>the world of servers. So if you would

00:40:14.630 --> 00:40:16.070
<v Speaker 1>log in as like Ubuntu, it needs to

00:40:16.070 --> 00:40:18.230
<v Speaker 1>be sort of baked into your certificate. You

00:40:18.230 --> 00:40:19.990
<v Speaker 1>do the same thing for logging into

00:40:21.350 --> 00:40:22.950
<v Speaker 1>the database. So I have a

00:40:24.684 --> 00:40:27.565
<v Speaker 1>I actually think this user's different. I think

00:40:27.565 --> 00:40:29.484
<v Speaker 1>it's SRE team is my

00:40:30.765 --> 00:40:32.205
<v Speaker 1>name of my user.

00:40:33.325 --> 00:40:35.885
<v Speaker 1>And then I can just do TSH DB

00:40:36.845 --> 00:40:37.724
<v Speaker 1>connect

00:40:38.849 --> 00:40:39.650
<v Speaker 1>Redis.

00:40:41.089 --> 00:40:42.609
<v Speaker 1>And what's really interesting here, so this is

00:40:42.609 --> 00:40:43.330
<v Speaker 1>connected.

00:40:44.049 --> 00:40:46.050
<v Speaker 1>But if I do, like, ping,

00:40:47.410 --> 00:40:48.849
<v Speaker 1>not authenticated.

00:40:50.049 --> 00:40:52.289
<v Speaker 1>Redis does require you to also add a

00:40:52.289 --> 00:40:53.250
<v Speaker 1>password

00:40:53.495 --> 00:40:54.375
<v Speaker 1>auth

00:40:55.175 --> 00:40:57.975
<v Speaker 1>in addition to the TLS certificates, just the

00:40:57.975 --> 00:40:59.095
<v Speaker 1>way in which it works.

00:41:00.295 --> 00:41:01.575
<v Speaker 0>Don't know about that.

00:41:02.215 --> 00:41:04.215
<v Speaker 1>I think most of the ones, like, there's

00:41:04.215 --> 00:41:05.495
<v Speaker 1>always, a little quirk.

00:41:07.070 --> 00:41:09.230
<v Speaker 1>Let's say if you configure so you have

00:41:09.230 --> 00:41:10.750
<v Speaker 1>access to the database, but you also need

00:41:10.750 --> 00:41:13.470
<v Speaker 1>to map the user and the database together.

00:41:13.550 --> 00:41:15.550
<v Speaker 1>And so for people who are used to,

00:41:15.550 --> 00:41:17.950
<v Speaker 1>like, the Kubernetes and server flow, just be

00:41:17.950 --> 00:41:20.270
<v Speaker 1>aware of that extra mapping of a database

00:41:20.270 --> 00:41:23.355
<v Speaker 1>user. It normally differs per database just to

00:41:23.355 --> 00:41:24.715
<v Speaker 1>sort of put in your documentation.

00:41:27.515 --> 00:41:28.235
<v Speaker 0>Cool.

00:41:28.555 --> 00:41:30.795
<v Speaker 0>Can I ask you the hard question then?

00:41:31.595 --> 00:41:32.795
<v Speaker 0>So

00:41:34.569 --> 00:41:37.210
<v Speaker 0>with the introduction of machine ID

00:41:38.410 --> 00:41:39.609
<v Speaker 0>Teleport

00:41:39.609 --> 00:41:41.930
<v Speaker 0>now supported more and more databases,

00:41:42.410 --> 00:41:43.930
<v Speaker 0>I'm starting to have this

00:41:44.250 --> 00:41:45.850
<v Speaker 0>really weird idea

00:41:46.089 --> 00:41:49.465
<v Speaker 0>that even in my application code, instead of

00:41:49.465 --> 00:41:52.585
<v Speaker 0>configuring it to speak directly to my database

00:41:52.665 --> 00:41:54.905
<v Speaker 0>with a username and password or,

00:41:55.305 --> 00:41:58.105
<v Speaker 0>you know, forever certificates that I'm never gonna

00:41:58.105 --> 00:41:59.785
<v Speaker 0>rotate because I'm a terrible SRE.

00:42:00.690 --> 00:42:01.330
<v Speaker 0>Does

00:42:01.490 --> 00:42:03.730
<v Speaker 0>Teleport fit into that workflow or would that

00:42:03.730 --> 00:42:04.770
<v Speaker 0>just be really

00:42:05.329 --> 00:42:06.050
<v Speaker 0>silly?

00:42:06.690 --> 00:42:08.369
<v Speaker 0>And by that, I mean, if my back

00:42:08.369 --> 00:42:09.650
<v Speaker 0>ends application

00:42:09.890 --> 00:42:11.250
<v Speaker 0>used Teleport

00:42:11.250 --> 00:42:12.770
<v Speaker 0>and machine ID for

00:42:13.089 --> 00:42:14.530
<v Speaker 0>every connection, every request.

00:42:15.155 --> 00:42:16.755
<v Speaker 0>Is that a good thing? Should I be

00:42:16.755 --> 00:42:18.675
<v Speaker 0>should I be experimenting with that?

00:42:20.595 --> 00:42:21.234
<v Speaker 1>We

00:42:21.395 --> 00:42:22.835
<v Speaker 1>like, that is if you look at the

00:42:22.835 --> 00:42:24.595
<v Speaker 1>demo video for machine ID, that's sort of

00:42:24.595 --> 00:42:26.915
<v Speaker 1>what we led with. It's talking like a

00:42:26.915 --> 00:42:27.955
<v Speaker 1>microservice,

00:42:28.035 --> 00:42:29.635
<v Speaker 1>talking to your infrastructure.

00:42:32.140 --> 00:42:33.580
<v Speaker 1>Now I guess the question is, is it

00:42:33.580 --> 00:42:34.460
<v Speaker 1>a good thing?

00:42:34.780 --> 00:42:37.660
<v Speaker 1>We believe so, especially for, let's say, your

00:42:39.660 --> 00:42:40.540
<v Speaker 1>development

00:42:40.620 --> 00:42:42.700
<v Speaker 1>or, like, let's say, you will need to

00:42:42.700 --> 00:42:45.260
<v Speaker 1>do some local development against a staging database.

00:42:45.260 --> 00:42:46.460
<v Speaker 1>It's like a perfect use case.

00:42:47.875 --> 00:42:49.635
<v Speaker 1>For your production DB,

00:42:50.435 --> 00:42:52.275
<v Speaker 1>I'm not a % sure on, like, our

00:42:52.275 --> 00:42:53.955
<v Speaker 1>performance. You know, if everything has to go

00:42:53.955 --> 00:42:55.955
<v Speaker 1>through Teleport, what's the performance overhead? I asked

00:42:55.955 --> 00:42:57.875
<v Speaker 1>the team. They said it's kinda, like,

00:42:58.675 --> 00:42:59.155
<v Speaker 1>minimal

00:42:59.720 --> 00:43:01.400
<v Speaker 1>because once they sort of connected, it kinda

00:43:01.400 --> 00:43:03.000
<v Speaker 1>goes through, but it is like another

00:43:04.520 --> 00:43:06.599
<v Speaker 1>something else in the middle. But I guess

00:43:06.599 --> 00:43:09.319
<v Speaker 0>Teleport is not handling log. Connection pulling or

00:43:09.319 --> 00:43:11.319
<v Speaker 0>anything like that. I'm assuming that every request

00:43:11.319 --> 00:43:14.365
<v Speaker 0>is is spot up, accepted, responded, and then

00:43:14.365 --> 00:43:15.405
<v Speaker 0>shut back down.

00:43:18.365 --> 00:43:19.885
<v Speaker 1>I'm not a %

00:43:19.885 --> 00:43:22.365
<v Speaker 1>sure on the connection pooling and the performance

00:43:22.365 --> 00:43:24.684
<v Speaker 1>overhead, but we can I think this is

00:43:24.684 --> 00:43:27.005
<v Speaker 1>an area that we'll, like, keep exploring, and

00:43:27.560 --> 00:43:29.720
<v Speaker 1>this is definitely an area in which we

00:43:29.720 --> 00:43:31.880
<v Speaker 1>wanna, like, get you know, we wanna sort

00:43:31.880 --> 00:43:33.320
<v Speaker 1>of remove all passwords?

00:43:33.800 --> 00:43:36.119
<v Speaker 1>And passwords, we also see as, like, API

00:43:36.119 --> 00:43:36.840
<v Speaker 1>keys

00:43:37.000 --> 00:43:38.200
<v Speaker 1>for your databases

00:43:38.200 --> 00:43:38.920
<v Speaker 1>or

00:43:39.400 --> 00:43:40.760
<v Speaker 1>whatever sort of secrets you have.

00:43:41.964 --> 00:43:43.245
<v Speaker 1>Yeah. And so you

00:43:44.205 --> 00:43:45.405
<v Speaker 0>Sorry. You

00:43:46.125 --> 00:43:48.045
<v Speaker 1>can do it for, like, your microservice.

00:43:48.045 --> 00:43:49.085
<v Speaker 1>So instead

00:43:49.085 --> 00:43:49.645
<v Speaker 1>of

00:43:50.685 --> 00:43:51.484
<v Speaker 1>adding it

00:43:52.765 --> 00:43:54.685
<v Speaker 1>instead of using, like, hard coding a Postgres

00:43:54.685 --> 00:43:56.790
<v Speaker 1>or, like, Redis database, you just use the

00:43:56.790 --> 00:43:58.470
<v Speaker 1>certificates that you obtain, and then you can

00:43:58.470 --> 00:44:00.550
<v Speaker 1>sort of go about your connections. And one,

00:44:00.550 --> 00:44:03.350
<v Speaker 1>you know, like, who's accessing which database,

00:44:03.670 --> 00:44:05.270
<v Speaker 1>and you have the full sort of audit

00:44:05.270 --> 00:44:05.830
<v Speaker 1>log.

00:44:06.150 --> 00:44:08.630
<v Speaker 0>Yeah. I've kinda got this grand vision though

00:44:08.630 --> 00:44:09.270
<v Speaker 0>that

00:44:10.275 --> 00:44:11.715
<v Speaker 0>in my Kubernetes

00:44:11.875 --> 00:44:12.835
<v Speaker 0>cluster

00:44:12.915 --> 00:44:16.434
<v Speaker 0>is that every single backend service that needs

00:44:16.434 --> 00:44:19.635
<v Speaker 0>to speak to any other service could just

00:44:19.635 --> 00:44:21.795
<v Speaker 0>have a sidecar teleport

00:44:22.410 --> 00:44:22.970
<v Speaker 0>thing

00:44:23.210 --> 00:44:25.050
<v Speaker 0>that does the machine ID

00:44:25.609 --> 00:44:26.890
<v Speaker 0>and then works out if I'm allowed to

00:44:26.890 --> 00:44:28.569
<v Speaker 0>speak to Postgres or I'm allowed to speak

00:44:28.569 --> 00:44:30.170
<v Speaker 0>to Kafka or I'm allowed to speak to

00:44:30.170 --> 00:44:32.490
<v Speaker 0>Redis. And it just, like to the point

00:44:32.490 --> 00:44:35.210
<v Speaker 0>where I'd almost have, like, zero configuration

00:44:35.210 --> 00:44:36.890
<v Speaker 0>anymore to speak to a database. And I

00:44:36.890 --> 00:44:38.474
<v Speaker 0>think that would be pretty cool.

00:44:39.355 --> 00:44:41.194
<v Speaker 0>Yeah. And I've it it seems like what

00:44:41.194 --> 00:44:43.674
<v Speaker 0>you're showing me is kinda where it's heading,

00:44:43.674 --> 00:44:45.035
<v Speaker 0>and I think that's really exciting.

00:44:46.315 --> 00:44:47.595
<v Speaker 1>Yep. It's definitely

00:44:47.914 --> 00:44:48.875
<v Speaker 1>where we're heading.

00:44:49.194 --> 00:44:50.954
<v Speaker 1>And, hopefully, we'll have more demos over the

00:44:50.954 --> 00:44:52.634
<v Speaker 1>next coming months. Maybe this is a good

00:44:52.634 --> 00:44:54.030
<v Speaker 1>follow-up livestream.

00:44:54.190 --> 00:44:55.790
<v Speaker 0>Yeah. That seems like one of those questions

00:44:55.790 --> 00:44:56.750
<v Speaker 0>to you. Like,

00:44:57.230 --> 00:44:58.590
<v Speaker 0>that's not a road map, and I can't

00:44:58.590 --> 00:45:00.190
<v Speaker 0>really talk about that yet. So just shut

00:45:00.190 --> 00:45:00.990
<v Speaker 0>up, David.

00:45:01.470 --> 00:45:03.710
<v Speaker 1>No. It is not. It is in our

00:45:03.710 --> 00:45:04.270
<v Speaker 1>video.

00:45:04.670 --> 00:45:06.270
<v Speaker 1>I don't have a working example.

00:45:06.695 --> 00:45:08.215
<v Speaker 0>No. No. Sorry. I don't need to see.

00:45:08.215 --> 00:45:09.335
<v Speaker 0>I just I think,

00:45:09.815 --> 00:45:11.575
<v Speaker 0>you know, especially if, you know, I know

00:45:11.575 --> 00:45:13.895
<v Speaker 0>that the workload identity works with AWS,

00:45:13.895 --> 00:45:15.975
<v Speaker 0>but I'm like, could they pick up the

00:45:15.975 --> 00:45:18.295
<v Speaker 0>service account and verify that? And then they

00:45:18.295 --> 00:45:20.375
<v Speaker 0>know the pod with, like, the the the

00:45:20.375 --> 00:45:21.175
<v Speaker 0>downward API.

00:45:21.630 --> 00:45:23.470
<v Speaker 0>All of this could be baked in to

00:45:23.470 --> 00:45:25.230
<v Speaker 0>some sort of agent. And then all

00:45:26.029 --> 00:45:28.670
<v Speaker 0>of my requests to other databases and even

00:45:28.670 --> 00:45:31.549
<v Speaker 0>other services to another point could be handled

00:45:31.549 --> 00:45:33.310
<v Speaker 0>in this kind of secure audited

00:45:33.710 --> 00:45:34.109
<v Speaker 0>fashion.

00:45:34.595 --> 00:45:36.835
<v Speaker 0>And I've basically, what I'm saying is Teleport,

00:45:36.835 --> 00:45:38.755
<v Speaker 0>that's product has to be a service mesh.

00:45:38.835 --> 00:45:40.115
<v Speaker 0>I think that's where you're going now. So

00:45:40.115 --> 00:45:41.875
<v Speaker 0>we need we need we need t mesh.

00:45:41.875 --> 00:45:43.075
<v Speaker 0>Can we get t mesh?

00:45:43.394 --> 00:45:45.474
<v Speaker 1>We actually talk about why

00:45:45.714 --> 00:45:48.000
<v Speaker 1>machine ID isn't a service mesh in our

00:45:48.000 --> 00:45:48.880
<v Speaker 1>blog post?

00:45:49.520 --> 00:45:51.280
<v Speaker 0>I used to start paying more attention.

00:45:52.560 --> 00:45:54.000
<v Speaker 1>Let me see. Go here.

00:45:54.960 --> 00:45:57.120
<v Speaker 1>And what do we say? We have a

00:45:57.120 --> 00:45:57.680
<v Speaker 1>full

00:45:58.160 --> 00:46:00.000
<v Speaker 1>so we talk about like PKI and machine

00:46:00.000 --> 00:46:00.400
<v Speaker 1>ID.

00:46:01.155 --> 00:46:02.995
<v Speaker 1>And then we'll talk about service measures. Oh,

00:46:02.995 --> 00:46:04.755
<v Speaker 0>yeah. So like how we kind of like

00:46:04.755 --> 00:46:07.315
<v Speaker 1>fit in. This is like the official word.

00:46:13.155 --> 00:46:15.395
<v Speaker 1>Think our answers are still a bit vague.

00:46:16.050 --> 00:46:17.810
<v Speaker 1>So we say we're complementary. We sort of

00:46:17.810 --> 00:46:19.490
<v Speaker 1>work together with service meshes.

00:46:20.850 --> 00:46:22.210
<v Speaker 1>But like all these tools, you know, it's

00:46:22.210 --> 00:46:24.130
<v Speaker 1>always like building on top of other tools

00:46:24.370 --> 00:46:26.130
<v Speaker 1>and adding on top of it. Well, yeah.

00:46:26.130 --> 00:46:27.650
<v Speaker 0>Well And if you look at like Sorry.

00:46:27.650 --> 00:46:28.050
<v Speaker 0>Go ahead.

00:46:28.685 --> 00:46:29.965
<v Speaker 1>Oh, if you look at, like,

00:46:31.484 --> 00:46:34.685
<v Speaker 1>Kong or or Envoy, like, they have, like,

00:46:34.685 --> 00:46:37.085
<v Speaker 1>some basic certificate authority kinda, like, baked into

00:46:37.085 --> 00:46:39.005
<v Speaker 1>them, but you can provide your own certificates.

00:46:39.085 --> 00:46:40.765
<v Speaker 1>And so maybe this is sort of a

00:46:41.840 --> 00:46:44.480
<v Speaker 1>avenue for least for the, like, CA management

00:46:44.560 --> 00:46:47.840
<v Speaker 1>and RBAC is sort of how we support

00:46:48.240 --> 00:46:50.240
<v Speaker 1>the sort of service mesh solutions.

00:46:50.720 --> 00:46:52.320
<v Speaker 0>Well, yeah, I I was kind of about

00:46:52.320 --> 00:46:54.080
<v Speaker 0>to touch on that as well. Like, all

00:46:54.080 --> 00:46:56.234
<v Speaker 0>of these things pretty much, I think nine

00:46:56.234 --> 00:46:57.674
<v Speaker 0>times out of 10, they run their own

00:46:57.674 --> 00:46:58.955
<v Speaker 0>end cluster CA

00:46:59.275 --> 00:47:02.155
<v Speaker 0>as they handle automatic MTLS across services.

00:47:02.394 --> 00:47:04.474
<v Speaker 0>But I think they only work mostly for

00:47:04.474 --> 00:47:06.635
<v Speaker 0>HTTP traffic. I don't think it works with

00:47:06.635 --> 00:47:07.835
<v Speaker 0>the database

00:47:07.835 --> 00:47:08.955
<v Speaker 0>level layer,

00:47:09.035 --> 00:47:10.394
<v Speaker 0>or at least it doesn't have that,

00:47:11.589 --> 00:47:13.590
<v Speaker 0>I guess it's L7 awareness.

00:47:14.230 --> 00:47:15.349
<v Speaker 0>I gotta have to try to remember my

00:47:15.349 --> 00:47:17.349
<v Speaker 0>OSI layers, but I think L7 is application

00:47:17.349 --> 00:47:18.790
<v Speaker 0>though, right? It

00:47:20.630 --> 00:47:22.150
<v Speaker 0>would be cool, yeah. I could see a

00:47:22.150 --> 00:47:25.325
<v Speaker 0>future, I guess, where Selium and STO,

00:47:25.405 --> 00:47:26.445
<v Speaker 0>Linkerd, etcetera,

00:47:27.005 --> 00:47:29.244
<v Speaker 0>maybe start to rely on Teleport

00:47:29.244 --> 00:47:29.965
<v Speaker 0>as

00:47:30.125 --> 00:47:31.724
<v Speaker 0>a CA and be able to pass those

00:47:31.724 --> 00:47:33.805
<v Speaker 0>around, bake them in more levels of an

00:47:33.805 --> 00:47:36.920
<v Speaker 0>awareness and application handling, be like, oh, you

00:47:36.920 --> 00:47:38.360
<v Speaker 0>know, this pod is now trying to speak

00:47:38.360 --> 00:47:40.440
<v Speaker 0>to Postgres. We're gonna give it the right

00:47:40.440 --> 00:47:42.360
<v Speaker 0>certificate to go and authenticate against that. I

00:47:42.360 --> 00:47:44.600
<v Speaker 0>don't know. This is just grand ideas. I'm

00:47:44.600 --> 00:47:46.200
<v Speaker 0>I'm it just makes me excited to see

00:47:46.200 --> 00:47:47.720
<v Speaker 0>what Teleport does in the next six months

00:47:47.720 --> 00:47:49.805
<v Speaker 0>and the next two releases because I'm pretty

00:47:49.805 --> 00:47:50.925
<v Speaker 0>sure you guys have got a lot in

00:47:50.925 --> 00:47:52.445
<v Speaker 0>your heads and a lot of people with

00:47:52.445 --> 00:47:53.725
<v Speaker 0>great ideas too. Yeah.

00:47:54.845 --> 00:47:56.605
<v Speaker 1>Definitely, we'll be exploring

00:47:58.365 --> 00:47:59.885
<v Speaker 1>more avenues. So, like, we just closed the

00:47:59.885 --> 00:48:01.005
<v Speaker 1>loop on Redis.

00:48:01.485 --> 00:48:02.605
<v Speaker 0>Oh, yeah. That's right. We were doing a

00:48:02.605 --> 00:48:03.165
<v Speaker 0>Redis demo.

00:48:05.310 --> 00:48:07.070
<v Speaker 0>I got And then you can see we

00:48:07.070 --> 00:48:08.990
<v Speaker 1>have oh, you can see I typed Redis

00:48:08.990 --> 00:48:10.030
<v Speaker 1>info wrong.

00:48:10.430 --> 00:48:12.270
<v Speaker 1>You can say, like, who executed which query

00:48:12.270 --> 00:48:13.870
<v Speaker 1>and which database. And I think this is,

00:48:13.870 --> 00:48:16.030
<v Speaker 1>like, the core, you know, Teleport's bread and

00:48:16.030 --> 00:48:16.590
<v Speaker 1>butter. It's like,

00:48:18.245 --> 00:48:20.885
<v Speaker 1>you have these shared logins for accessing services.

00:48:20.885 --> 00:48:22.485
<v Speaker 1>It's the SRE team, and you know it's,

00:48:22.485 --> 00:48:25.445
<v Speaker 1>like, tied to my identity as

00:48:26.165 --> 00:48:27.605
<v Speaker 1>an error in accessing

00:48:27.685 --> 00:48:30.565
<v Speaker 1>this host, doing whatever, like, debugging commands,

00:48:30.965 --> 00:48:32.645
<v Speaker 1>which is that easy sort of compliance check.

00:48:33.800 --> 00:48:34.600
<v Speaker 0>Cool.

00:48:36.360 --> 00:48:37.080
<v Speaker 1>Alright.

00:48:37.720 --> 00:48:39.880
<v Speaker 1>What is next on my list? Okay. So

00:48:39.880 --> 00:48:41.960
<v Speaker 1>another one that's pretty exciting, but I tried

00:48:41.960 --> 00:48:44.200
<v Speaker 1>it before this and it didn't work. So

00:48:45.800 --> 00:48:47.720
<v Speaker 1>is our access requests,

00:48:48.040 --> 00:48:48.280
<v Speaker 1>and

00:48:49.695 --> 00:48:51.455
<v Speaker 1>we can try it now. But I had

00:48:51.455 --> 00:48:53.455
<v Speaker 1>this book post today, which is why the

00:48:53.455 --> 00:48:55.775
<v Speaker 1>four eyes principle is critical for access. It's

00:48:55.775 --> 00:48:57.375
<v Speaker 1>a bit of a long ramble about

00:48:59.695 --> 00:49:02.670
<v Speaker 1>basically how, like, the majority of our

00:49:03.150 --> 00:49:04.830
<v Speaker 1>Teleport has gone from

00:49:06.110 --> 00:49:09.070
<v Speaker 1>is there's different technology solutions. So we have

00:49:09.070 --> 00:49:10.270
<v Speaker 1>like our session recording,

00:49:10.590 --> 00:49:12.430
<v Speaker 1>but there's ways around our session recording because

00:49:12.430 --> 00:49:14.190
<v Speaker 1>there's problems with restricted shells. And so we

00:49:14.190 --> 00:49:17.305
<v Speaker 1>talked about why we created enhanced EPPF

00:49:17.305 --> 00:49:19.225
<v Speaker 1>session enhanced session recording,

00:49:20.425 --> 00:49:23.305
<v Speaker 1>which is great, but it also doesn't necessarily

00:49:23.305 --> 00:49:25.385
<v Speaker 1>stop everything. So, like, you can't really like,

00:49:25.385 --> 00:49:26.985
<v Speaker 1>you can turn off SCP, but there's still

00:49:26.985 --> 00:49:28.585
<v Speaker 1>ways in which you can, like, exfiltrate data.

00:49:29.090 --> 00:49:30.850
<v Speaker 1>And we there's another good blog post here

00:49:30.850 --> 00:49:32.370
<v Speaker 1>about restricted shells.

00:49:33.650 --> 00:49:34.850
<v Speaker 1>And the long

00:49:35.490 --> 00:49:36.370
<v Speaker 1>winded

00:49:36.530 --> 00:49:39.090
<v Speaker 1>conclusion is, like, ultimately, you sort of need

00:49:39.570 --> 00:49:42.210
<v Speaker 1>more individuals and humans to be on a

00:49:42.210 --> 00:49:44.450
<v Speaker 1>session to either moderate it or see what's

00:49:44.450 --> 00:49:44.690
<v Speaker 1>happening.

00:49:45.435 --> 00:49:45.835
<v Speaker 1>She

00:49:46.795 --> 00:49:49.195
<v Speaker 1>Coinbase back in the day, I guess they

00:49:49.195 --> 00:49:50.475
<v Speaker 1>don't do this now. They don't now they're

00:49:50.475 --> 00:49:52.235
<v Speaker 1>globally remote, they had, like, a SSH room

00:49:52.235 --> 00:49:54.315
<v Speaker 1>with a drop cam in which Coinbase would

00:49:54.315 --> 00:49:56.075
<v Speaker 1>do all of their SSH activity, and that

00:49:56.075 --> 00:49:57.115
<v Speaker 1>was the only way in which you get

00:49:57.115 --> 00:49:58.875
<v Speaker 1>access to certain hosts.

00:50:00.740 --> 00:50:02.260
<v Speaker 1>And and to some degree,

00:50:03.059 --> 00:50:04.420
<v Speaker 1>you know, with

00:50:06.099 --> 00:50:07.380
<v Speaker 1>shared sessions,

00:50:08.339 --> 00:50:10.740
<v Speaker 1>which I guess you use for your clustered,

00:50:12.420 --> 00:50:14.579
<v Speaker 1>you anyone can kinda join them or there's,

00:50:14.579 --> 00:50:16.405
<v Speaker 1>like, some limited, But you can now set,

00:50:16.405 --> 00:50:18.325
<v Speaker 1>like, our back to require certain roles to

00:50:18.325 --> 00:50:20.484
<v Speaker 1>join a session for them to join. So

00:50:20.565 --> 00:50:23.125
<v Speaker 1>there's an example Kubernetes role here in which

00:50:23.204 --> 00:50:24.805
<v Speaker 1>you need to be a sec ops role

00:50:24.805 --> 00:50:26.484
<v Speaker 1>and an audit role to join a session.

00:50:29.319 --> 00:50:31.480
<v Speaker 1>And I can try the

00:50:32.200 --> 00:50:33.400
<v Speaker 1>demo gods

00:50:34.440 --> 00:50:35.320
<v Speaker 1>here.

00:50:38.440 --> 00:50:40.920
<v Speaker 1>I mean, this Lisa was my demo user.

00:50:41.000 --> 00:50:43.079
<v Speaker 1>Also a great programmer

00:50:43.079 --> 00:50:43.720
<v Speaker 1>at Teleport.

00:50:48.484 --> 00:50:49.445
<v Speaker 1>Log in.

00:50:52.405 --> 00:50:53.685
<v Speaker 1>And then this is, you know, like the

00:50:53.685 --> 00:50:55.605
<v Speaker 1>standard flow for

00:50:57.339 --> 00:50:58.060
<v Speaker 1>thing,

00:50:58.140 --> 00:50:59.340
<v Speaker 1>keep configs.

00:51:04.060 --> 00:51:05.740
<v Speaker 1>I have a

00:51:07.099 --> 00:51:08.140
<v Speaker 1>okay. So

00:51:08.380 --> 00:51:09.819
<v Speaker 1>they should I think I just filed a

00:51:09.819 --> 00:51:11.099
<v Speaker 1>bug this morning. Like, there should be a

00:51:11.099 --> 00:51:12.859
<v Speaker 1>message here saying, like, this session is sort

00:51:12.859 --> 00:51:14.595
<v Speaker 1>of hanging right now. And if I come

00:51:14.595 --> 00:51:16.835
<v Speaker 1>to the audit log, you can see that

00:51:20.515 --> 00:51:22.755
<v Speaker 1>Lisa has made a request to access a

00:51:22.755 --> 00:51:23.955
<v Speaker 1>Kubernetes cluster

00:51:24.195 --> 00:51:26.835
<v Speaker 1>for, like, a kubectl exec and is waiting

00:51:26.835 --> 00:51:27.635
<v Speaker 1>for someone

00:51:28.250 --> 00:51:29.690
<v Speaker 1>to approve it.

00:51:30.250 --> 00:51:32.410
<v Speaker 1>And until someone else joins this session, it

00:51:32.410 --> 00:51:33.610
<v Speaker 1>would just sort of hang.

00:51:34.010 --> 00:51:36.410
<v Speaker 1>And that other party or multiple parties have

00:51:36.410 --> 00:51:38.490
<v Speaker 1>the ability to also terminate the session as

00:51:38.490 --> 00:51:38.970
<v Speaker 1>well,

00:51:39.770 --> 00:51:41.849
<v Speaker 1>and this is sort of our Kubernetes moderated

00:51:41.849 --> 00:51:42.329
<v Speaker 1>sessions.

00:51:44.285 --> 00:51:44.845
<v Speaker 0>Cool.

00:51:46.204 --> 00:51:47.885
<v Speaker 1>But I it's a bit difficult to demo

00:51:47.885 --> 00:51:48.765
<v Speaker 1>because I also need to hang up another

00:51:48.845 --> 00:51:50.444
<v Speaker 0>Yeah. To have a second login. Join. And

00:51:50.525 --> 00:51:50.925
<v Speaker 0>yeah.

00:51:51.964 --> 00:51:53.404
<v Speaker 1>And I think I can't, like, exit this

00:51:53.404 --> 00:51:55.005
<v Speaker 1>either. I think there's, another bug, though.

00:51:55.404 --> 00:51:57.325
<v Speaker 1>More of the bugs should be gone for

00:51:57.680 --> 00:51:59.040
<v Speaker 1>moderated sessions.

00:51:59.680 --> 00:52:01.680
<v Speaker 0>Awesome. Yeah. That would be a cool feature

00:52:01.680 --> 00:52:02.320
<v Speaker 0>as well.

00:52:03.040 --> 00:52:04.720
<v Speaker 0>I've been asked while you're on the audit

00:52:04.720 --> 00:52:07.280
<v Speaker 0>page. I've been asked what is the EI

00:52:07.280 --> 00:52:08.640
<v Speaker 0>field of the audit log?

00:52:11.275 --> 00:52:12.155
<v Speaker 0>Field,

00:52:12.475 --> 00:52:13.595
<v Speaker 0>but maybe,

00:52:13.595 --> 00:52:14.395
<v Speaker 0>you know.

00:52:15.435 --> 00:52:16.955
<v Speaker 1>I actually don't know what the e I

00:52:16.955 --> 00:52:18.475
<v Speaker 1>field is. That's a great question.

00:52:18.715 --> 00:52:20.075
<v Speaker 1>I think it's always zero.

00:52:23.609 --> 00:52:25.210
<v Speaker 1>I can get back to you. Yeah. Always

00:52:25.210 --> 00:52:25.850
<v Speaker 1>zero.

00:52:26.569 --> 00:52:27.690
<v Speaker 0>Unfortunately,

00:52:28.650 --> 00:52:29.690
<v Speaker 0>we don't know.

00:52:30.170 --> 00:52:31.050
<v Speaker 0>We'll

00:52:31.050 --> 00:52:32.890
<v Speaker 0>we'll work it out. We'll leave a comment

00:52:32.890 --> 00:52:34.650
<v Speaker 0>on the video, and we'll tweet something about

00:52:34.650 --> 00:52:36.650
<v Speaker 0>it. But, yeah, I'm curious about that.

00:52:38.135 --> 00:52:39.655
<v Speaker 1>Alright. Then last up.

00:52:39.895 --> 00:52:41.895
<v Speaker 1>Wait. There's more? There's

00:52:41.895 --> 00:52:44.055
<v Speaker 1>more. There's always more, Dave. You should know.

00:52:44.055 --> 00:52:44.855
<v Speaker 1>It's fun for the Seven

00:52:45.895 --> 00:52:47.335
<v Speaker 0>for Redis. Just

00:52:47.734 --> 00:52:49.809
<v Speaker 0>throwing that out there. So e I for

00:52:49.809 --> 00:52:51.090
<v Speaker 0>Redis was seven.

00:52:52.290 --> 00:52:53.170
<v Speaker 1>For Redis?

00:52:53.809 --> 00:52:56.370
<v Speaker 0>Sorry. You you can't get over your demo.

00:52:56.530 --> 00:52:57.010
<v Speaker 0>I

00:52:57.730 --> 00:52:58.850
<v Speaker 0>can track that though.

00:53:00.130 --> 00:53:00.609
<v Speaker 1>So

00:53:01.785 --> 00:53:03.625
<v Speaker 1>one of the other additions, which actually I

00:53:03.625 --> 00:53:04.905
<v Speaker 1>think is pretty cool, we didn't really talk

00:53:04.905 --> 00:53:06.985
<v Speaker 1>about this much, me edit my role,

00:53:11.385 --> 00:53:13.704
<v Speaker 1>is we added

00:53:15.680 --> 00:53:16.880
<v Speaker 1>prior MFA.

00:53:16.880 --> 00:53:19.119
<v Speaker 1>So we've added this feature that lets you

00:53:19.119 --> 00:53:20.079
<v Speaker 1>add other

00:53:21.359 --> 00:53:23.119
<v Speaker 1>let me just check that this this is

00:53:23.119 --> 00:53:24.800
<v Speaker 1>right. I could just

00:53:25.839 --> 00:53:27.119
<v Speaker 1>I just see it over and see what

00:53:27.119 --> 00:53:27.440
<v Speaker 1>happens.

00:53:29.135 --> 00:53:30.015
<v Speaker 1>I think it doesn't

00:53:32.015 --> 00:53:34.575
<v Speaker 1>okay. Require MFA is not right. Okay. So

00:53:38.655 --> 00:53:40.735
<v Speaker 1>added to the per session MFA,

00:53:40.974 --> 00:53:42.335
<v Speaker 1>and you can set

00:53:43.310 --> 00:53:44.910
<v Speaker 1>required MFA sessions.

00:53:44.990 --> 00:53:46.830
<v Speaker 1>And so each time you start a session,

00:53:46.830 --> 00:53:49.869
<v Speaker 1>you are required to present a hardware token

00:53:49.869 --> 00:53:51.550
<v Speaker 1>or a software token.

00:53:53.070 --> 00:53:55.230
<v Speaker 1>And we added this support for Windows

00:53:55.230 --> 00:53:56.510
<v Speaker 1>access and

00:54:02.375 --> 00:54:03.735
<v Speaker 1>what is it? Require.

00:54:06.935 --> 00:54:08.615
<v Speaker 1>Require session MFA.

00:54:09.175 --> 00:54:10.855
<v Speaker 1>And so this lets you add an additional

00:54:10.855 --> 00:54:12.775
<v Speaker 1>second factor. So in my account settings, I

00:54:12.775 --> 00:54:15.220
<v Speaker 1>have a YubiKey, and you can add multiple

00:54:15.220 --> 00:54:17.940
<v Speaker 1>hardware tokens. Yeah. And this sort of prevents

00:54:18.099 --> 00:54:19.619
<v Speaker 1>like, let's say someone gets access to your

00:54:19.619 --> 00:54:20.660
<v Speaker 1>GitHub account.

00:54:21.299 --> 00:54:22.579
<v Speaker 1>If you acquire MFA,

00:54:23.140 --> 00:54:24.579
<v Speaker 1>you know, they would also need access to,

00:54:24.579 --> 00:54:26.819
<v Speaker 1>like, a hardware token in addition to whatever

00:54:26.819 --> 00:54:28.019
<v Speaker 1>to get access. Yep.

00:54:29.405 --> 00:54:31.405
<v Speaker 1>I think I need to log out back

00:54:31.405 --> 00:54:33.965
<v Speaker 1>in again. Useful for production databases, I would

00:54:33.965 --> 00:54:34.605
<v Speaker 0>imagine.

00:54:35.085 --> 00:54:35.725
<v Speaker 1>Yes.

00:54:36.685 --> 00:54:38.045
<v Speaker 1>And there's actually one

00:54:39.005 --> 00:54:41.165
<v Speaker 1>open issue that we're making, like, per like,

00:54:41.165 --> 00:54:42.285
<v Speaker 1>it's currently per road,

00:54:42.780 --> 00:54:44.540
<v Speaker 1>and we'll plan to make, like, per label

00:54:44.540 --> 00:54:46.300
<v Speaker 1>to just give you a bit more flexibility.

00:54:46.300 --> 00:54:46.860
<v Speaker 1>Okay.

00:54:47.340 --> 00:54:48.860
<v Speaker 1>But we added this let's say if I

00:54:48.860 --> 00:54:50.620
<v Speaker 1>come into this domain controller.

00:54:51.340 --> 00:54:53.340
<v Speaker 1>Okay. Without the clipboard. And it's gonna ask

00:54:53.340 --> 00:54:54.860
<v Speaker 1>me to verify my identity,

00:54:55.020 --> 00:54:56.940
<v Speaker 1>which means I need to tap my

00:54:59.105 --> 00:55:00.065
<v Speaker 1>token,

00:55:02.224 --> 00:55:03.825
<v Speaker 1>and it logs me into my

00:55:04.385 --> 00:55:06.865
<v Speaker 1>domain controller. You can see that clipboard sharing

00:55:06.865 --> 00:55:08.145
<v Speaker 1>is enabled. It's recording.

00:55:11.400 --> 00:55:12.680
<v Speaker 1>I don't know if you spend much time

00:55:12.680 --> 00:55:13.240
<v Speaker 1>in

00:55:14.359 --> 00:55:15.640
<v Speaker 1>main controllers.

00:55:15.640 --> 00:55:18.280
<v Speaker 0>I try not to. But no. You try

00:55:18.280 --> 00:55:19.000
<v Speaker 1>not to.

00:55:19.480 --> 00:55:20.119
<v Speaker 1>But,

00:55:20.359 --> 00:55:21.240
<v Speaker 1>you know, this

00:55:21.640 --> 00:55:21.960
<v Speaker 1>was

00:55:22.520 --> 00:55:24.599
<v Speaker 1>like, desktop access was adding in Teleport

00:55:26.245 --> 00:55:28.485
<v Speaker 1>eight, but we've sort of rounded it out

00:55:28.485 --> 00:55:31.045
<v Speaker 1>so the recording is a big addition along

00:55:31.045 --> 00:55:31.765
<v Speaker 1>with our

00:55:32.165 --> 00:55:33.045
<v Speaker 1>clipboard.

00:55:33.445 --> 00:55:34.725
<v Speaker 1>So let me just close this.

00:55:38.240 --> 00:55:39.600
<v Speaker 1>Let me just disconnect.

00:55:42.559 --> 00:55:44.720
<v Speaker 1>And now we have the same

00:55:44.880 --> 00:55:47.280
<v Speaker 1>session recording and playback for

00:55:48.400 --> 00:55:49.680
<v Speaker 1>desktop sessions as well.

00:55:50.585 --> 00:55:52.664
<v Speaker 0>Very cool. So you can know what's happening,

00:55:52.664 --> 00:55:53.305
<v Speaker 1>which is

00:55:53.625 --> 00:55:55.944
<v Speaker 1>pretty interesting. Like, the most basic level of

00:55:55.944 --> 00:55:58.425
<v Speaker 1>RDP is like a tile of PNGs.

00:55:59.785 --> 00:56:00.345
<v Speaker 1>And

00:56:00.825 --> 00:56:02.744
<v Speaker 1>actually, I have another, like, livestream with the

00:56:02.744 --> 00:56:05.270
<v Speaker 1>developer. This is pretty interesting sort of background.

00:56:05.270 --> 00:56:07.030
<v Speaker 1>Like, we built it from scratch, our sort

00:56:07.030 --> 00:56:08.950
<v Speaker 1>of RDP protocol support.

00:56:11.750 --> 00:56:13.589
<v Speaker 1>And so if people who are interested especially

00:56:13.589 --> 00:56:15.030
<v Speaker 1>in, like, we built it with Rust. It's

00:56:15.030 --> 00:56:16.470
<v Speaker 1>like an interesting sort of tech deep dive

00:56:16.470 --> 00:56:19.750
<v Speaker 1>and sorts of interesting tech problems with adding

00:56:20.025 --> 00:56:21.145
<v Speaker 1>desktop support.

00:56:21.545 --> 00:56:24.585
<v Speaker 0>60 PNGs per second just being saved. Is

00:56:24.585 --> 00:56:25.465
<v Speaker 0>that what it is?

00:56:27.065 --> 00:56:28.744
<v Speaker 1>Yeah. I think it's like

00:56:29.065 --> 00:56:30.505
<v Speaker 1>cut, like, tiled.

00:56:32.744 --> 00:56:35.040
<v Speaker 1>And you actually you can't stop and play

00:56:35.040 --> 00:56:37.360
<v Speaker 1>it due to like the stream of PNGs.

00:56:37.360 --> 00:56:39.360
<v Speaker 1>We're also looking like different video formats. So

00:56:39.360 --> 00:56:40.160
<v Speaker 1>we're

00:56:40.480 --> 00:56:42.000
<v Speaker 1>sort of, I guess, trying to get feedback

00:56:42.000 --> 00:56:43.360
<v Speaker 1>about where we should sort of take this

00:56:43.360 --> 00:56:44.080
<v Speaker 1>session player next.

00:56:46.494 --> 00:56:48.335
<v Speaker 1>But for people who

00:56:48.895 --> 00:56:51.855
<v Speaker 1>sort of upgrading their, like, Windows desktop access,

00:56:52.734 --> 00:56:53.855
<v Speaker 1>lots of exciting

00:56:54.255 --> 00:56:57.135
<v Speaker 1>sort of updates and improvements for them. Sweet.

00:56:57.214 --> 00:56:59.615
<v Speaker 0>Awesome. Well, I'm glad I'm Alright. Working on

00:56:59.615 --> 00:57:01.615
<v Speaker 0>session recording for desktop sessions,

00:57:01.970 --> 00:57:04.130
<v Speaker 0>and other people get to do that because

00:57:05.329 --> 00:57:07.089
<v Speaker 0>so while you were also saying that, I

00:57:07.089 --> 00:57:09.170
<v Speaker 0>looked up the e I thing.

00:57:09.410 --> 00:57:10.369
<v Speaker 0>Are you curious?

00:57:10.930 --> 00:57:14.255
<v Speaker 1>I'm curious. Yeah. It's event index. So the

00:57:14.255 --> 00:57:16.175
<v Speaker 0>zero is every time you open a new

00:57:16.175 --> 00:57:18.495
<v Speaker 0>session, and then every subsequent command,

00:57:18.495 --> 00:57:20.655
<v Speaker 0>e I will be incremented by one so

00:57:20.655 --> 00:57:22.175
<v Speaker 0>that you have an order for the commands

00:57:22.175 --> 00:57:23.055
<v Speaker 0>executed,

00:57:23.535 --> 00:57:25.775
<v Speaker 0>which is why register seven because you did

00:57:25.775 --> 00:57:26.335
<v Speaker 0>the

00:57:26.870 --> 00:57:29.110
<v Speaker 0>ping pong earlier, and then you did an

00:57:29.110 --> 00:57:31.350
<v Speaker 0>off, and then you did a and

00:57:31.510 --> 00:57:32.630
<v Speaker 0>so forth. So

00:57:34.550 --> 00:57:37.030
<v Speaker 0>that's it. Easy with you. Alright. That's it.

00:57:38.790 --> 00:57:41.435
<v Speaker 1>Yeah. It's good idea. Event index. So I

00:57:41.435 --> 00:57:43.995
<v Speaker 1>know there's a lot here in this version.

00:57:46.315 --> 00:57:48.475
<v Speaker 1>If anyone has any questions for, like, machine

00:57:48.475 --> 00:57:50.315
<v Speaker 1>ID or they wanna try it out,

00:57:50.795 --> 00:57:52.075
<v Speaker 1>I know I'll be hitting you up, David,

00:57:52.075 --> 00:57:53.995
<v Speaker 1>for when we add our database support.

00:57:54.315 --> 00:57:56.810
<v Speaker 1>Sort of Kubernetes services

00:57:56.810 --> 00:57:58.970
<v Speaker 1>will be an exciting area for exploration.

00:58:00.890 --> 00:58:02.890
<v Speaker 0>Yeah. Definitely. It's something I'm gonna have to

00:58:02.970 --> 00:58:04.890
<v Speaker 0>I'm gonna start playing with machine ID now

00:58:04.890 --> 00:58:06.330
<v Speaker 0>and and see how I can incorporate it

00:58:06.330 --> 00:58:08.410
<v Speaker 0>into my my production infrastructure. I have a

00:58:08.410 --> 00:58:09.450
<v Speaker 0>lot of automation

00:58:09.845 --> 00:58:11.365
<v Speaker 0>that works. So

00:58:11.845 --> 00:58:13.924
<v Speaker 0>and I am very bad for long lived

00:58:13.924 --> 00:58:15.765
<v Speaker 0>hard coded tokens. So I'm gonna see if

00:58:15.765 --> 00:58:17.684
<v Speaker 0>I can remove a lot of this from

00:58:17.684 --> 00:58:18.405
<v Speaker 0>my workflow.

00:58:19.045 --> 00:58:19.605
<v Speaker 0>I'll definitely

00:58:20.085 --> 00:58:21.684
<v Speaker 0>I'm I'm sure I'm gonna be in touch

00:58:21.684 --> 00:58:23.570
<v Speaker 0>on Slack, like, help.

00:58:23.570 --> 00:58:25.890
<v Speaker 1>Yeah. If anyone wants to join, here's our

00:58:25.890 --> 00:58:27.250
<v Speaker 1>link to our Slack room.

00:58:29.250 --> 00:58:31.810
<v Speaker 1>And, yeah, we'll it's sort of growing, and

00:58:31.810 --> 00:58:33.170
<v Speaker 1>we're always sort of happy to help. And

00:58:33.170 --> 00:58:34.370
<v Speaker 1>then if there's any bugs, you know, we're

00:58:34.370 --> 00:58:36.690
<v Speaker 1>like an open call, open source company. You

00:58:36.690 --> 00:58:37.970
<v Speaker 1>can sort of come in here and

00:58:39.665 --> 00:58:41.745
<v Speaker 1>sort of see what's happening. And then the

00:58:41.745 --> 00:58:43.505
<v Speaker 1>last thing is we talked about, like, roadmap

00:58:43.505 --> 00:58:44.465
<v Speaker 1>and supports.

00:58:44.625 --> 00:58:46.785
<v Speaker 1>We have our upcoming releases page sort of

00:58:46.785 --> 00:58:47.585
<v Speaker 1>describes,

00:58:48.705 --> 00:58:49.345
<v Speaker 1>you know,

00:58:49.825 --> 00:58:50.625
<v Speaker 1>Kubernetes

00:58:50.625 --> 00:58:52.785
<v Speaker 1>and database access support for machine ID.

00:58:53.700 --> 00:58:55.540
<v Speaker 1>We have a Teleport Terminal, which is gonna

00:58:55.540 --> 00:58:57.859
<v Speaker 1>be an exciting addition in 09/2002.

00:58:57.859 --> 00:58:59.619
<v Speaker 1>More to come on that. What's the Teleport

00:58:59.619 --> 00:59:00.340
<v Speaker 0>Terminal?

00:59:00.500 --> 00:59:02.579
<v Speaker 0>My interest is peak. Tell me. Me. Tell

00:59:02.579 --> 00:59:04.580
<v Speaker 0>me. It's one for another

00:59:04.900 --> 00:59:06.579
<v Speaker 1>webinar. Keep that for a different session.

00:59:09.325 --> 00:59:11.245
<v Speaker 1>But, yeah, you can see we're starting Cassandra

00:59:11.245 --> 00:59:12.845
<v Speaker 1>and Snowflake support

00:59:14.285 --> 00:59:16.605
<v Speaker 1>and going GA. So lots of stuff sort

00:59:16.605 --> 00:59:17.645
<v Speaker 1>of happening here.

00:59:18.685 --> 00:59:21.165
<v Speaker 1>So, yeah, just we're sort of available and

00:59:21.165 --> 00:59:21.725
<v Speaker 1>here to chat.

00:59:22.470 --> 00:59:25.109
<v Speaker 0>Alright. Well, we'll give everybody a couple of

00:59:25.109 --> 00:59:26.550
<v Speaker 0>minutes. So if you have any questions, I'll

00:59:26.550 --> 00:59:28.150
<v Speaker 0>drop them into the comments now. I see

00:59:28.150 --> 00:59:29.510
<v Speaker 0>we've got one from you, Evan Ash, so

00:59:29.510 --> 00:59:31.750
<v Speaker 0>we'll tackle that first. But if anyone else

00:59:31.750 --> 00:59:33.590
<v Speaker 0>has any questions, let us know, and we'll

00:59:33.590 --> 00:59:34.070
<v Speaker 0>tackle that.

00:59:35.105 --> 00:59:36.385
<v Speaker 0>Asks,

00:59:36.625 --> 00:59:39.744
<v Speaker 0>does Teleport provide access controls to streaming services

00:59:39.744 --> 00:59:40.865
<v Speaker 0>like RabbitMQ

00:59:40.865 --> 00:59:41.665
<v Speaker 0>as well?

00:59:42.224 --> 00:59:44.865
<v Speaker 0>So are do you plan on supporting Rabbit,

00:59:45.184 --> 00:59:46.065
<v Speaker 0>Kafka,

00:59:46.065 --> 00:59:47.025
<v Speaker 0>Redpanda,

00:59:47.025 --> 00:59:47.825
<v Speaker 0>anything like that?

00:59:49.660 --> 00:59:52.620
<v Speaker 1>I'm not too sure, actually. I'll

00:59:52.620 --> 00:59:54.460
<v Speaker 1>have to talk to Roman. I kinda forget

00:59:54.460 --> 00:59:55.900
<v Speaker 1>what the auth

00:59:56.380 --> 00:59:57.900
<v Speaker 1>protocol is for

00:59:58.540 --> 01:00:00.220
<v Speaker 1>Rabbit and Kafka. It's been a while since

01:00:00.220 --> 01:00:01.580
<v Speaker 1>I've been on the sharp end of it.

01:00:02.175 --> 01:00:04.335
<v Speaker 0>I think Kafka by default is

01:00:04.575 --> 01:00:05.375
<v Speaker 0>nothing.

01:00:05.935 --> 01:00:08.015
<v Speaker 0>But you can configure it for x five

01:00:08.015 --> 01:00:10.095
<v Speaker 0>zero nine. So this it may work well.

01:00:10.095 --> 01:00:11.055
<v Speaker 0>RabbitMQ,

01:00:11.055 --> 01:00:13.855
<v Speaker 0>I'm not that familiar with anymore. I haven't

01:00:13.855 --> 01:00:16.370
<v Speaker 0>touched it in in many years. So I'm

01:00:16.370 --> 01:00:18.370
<v Speaker 0>not sure what the authentication is like there.

01:00:19.250 --> 01:00:20.850
<v Speaker 1>Yeah. It's definitely something that we can look

01:00:20.850 --> 01:00:23.410
<v Speaker 1>into. Like, open a GitHub issue, we can

01:00:23.410 --> 01:00:25.010
<v Speaker 1>sort of dive into it. I guess the

01:00:25.010 --> 01:00:27.490
<v Speaker 0>idea being if it's x five zero nine,

01:00:27.490 --> 01:00:29.730
<v Speaker 0>then Teleport can support it. And it's just

01:00:29.730 --> 01:00:31.330
<v Speaker 0>a matter of how many people want it

01:00:31.330 --> 01:00:34.555
<v Speaker 0>and upvoting all these issues. Right? Yeah. Pretty

01:00:34.555 --> 01:00:35.035
<v Speaker 1>much.

01:00:35.434 --> 01:00:37.115
<v Speaker 0>Alright. So, I've been asked, go check for

01:00:37.115 --> 01:00:39.835
<v Speaker 0>RabbitMQ or Kafka issue, whatever one you're looking

01:00:39.835 --> 01:00:40.474
<v Speaker 0>for.

01:00:40.875 --> 01:00:42.875
<v Speaker 0>If it's not there, start it.

01:00:44.394 --> 01:00:45.355
<v Speaker 0>Thank you for your question.

01:00:47.970 --> 01:00:49.890
<v Speaker 0>Oh, well. We'll we'll give everyone just one

01:00:49.890 --> 01:00:50.690
<v Speaker 0>more minute.

01:00:51.170 --> 01:00:52.930
<v Speaker 0>How's your how's your day going, Ben? Is

01:00:52.930 --> 01:00:55.010
<v Speaker 0>it morning or evening for you? It's the

01:00:55.010 --> 01:00:57.410
<v Speaker 1>morning here. Just getting started. It's the accent

01:00:57.410 --> 01:00:58.850
<v Speaker 0>that throws me off. I'm always like, he's

01:00:58.850 --> 01:01:00.530
<v Speaker 0>right next to me, but he's not. I

01:01:00.930 --> 01:01:01.250
<v Speaker 1>know.

01:01:03.525 --> 01:01:04.725
<v Speaker 1>Just getting started.

01:01:05.045 --> 01:01:07.045
<v Speaker 1>Done my blog post for the day. I've

01:01:07.045 --> 01:01:08.885
<v Speaker 1>done my livestream, so might take a little

01:01:08.885 --> 01:01:10.805
<v Speaker 1>break. Just important to step away from your

01:01:10.805 --> 01:01:13.125
<v Speaker 1>computer. Always. Well, not from me. I'm looking

01:01:13.125 --> 01:01:16.244
<v Speaker 0>outside. It's absolutely heaving down the rain. So

01:01:16.244 --> 01:01:17.700
<v Speaker 0>I might just end up staying at my

01:01:17.700 --> 01:01:20.340
<v Speaker 0>office and not leaving. It's

01:01:20.340 --> 01:01:23.060
<v Speaker 1>gonna be 24 degrees today out here. So

01:01:24.180 --> 01:01:25.460
<v Speaker 0>Where are you again?

01:01:25.859 --> 01:01:28.260
<v Speaker 1>I'm in Oakland. Oakland. There we go. I

01:01:28.420 --> 01:01:29.859
<v Speaker 0>Yeah. You're always gonna get a good weather

01:01:29.859 --> 01:01:30.500
<v Speaker 0>over there. Right?

01:01:31.755 --> 01:01:32.555
<v Speaker 0>Yeah.

01:01:33.194 --> 01:01:34.715
<v Speaker 0>Do you ever miss the British weather?

01:01:35.355 --> 01:01:37.915
<v Speaker 1>No. I don't miss the British weather. Alright.

01:01:40.075 --> 01:01:41.515
<v Speaker 0>I don't think we're Oh, by the way,

01:01:41.515 --> 01:01:43.435
<v Speaker 1>think last thing, are you going to KubeCon?

01:01:43.595 --> 01:01:45.194
<v Speaker 0>I am going to KubeCon. Are you going

01:01:45.194 --> 01:01:45.674
<v Speaker 0>to KubeCon?

01:01:46.150 --> 01:01:47.990
<v Speaker 1>I won't be going to KubeCon, but we'll

01:01:47.990 --> 01:01:49.350
<v Speaker 1>have a big team there.

01:01:49.670 --> 01:01:51.590
<v Speaker 1>So if the last six people on the

01:01:51.590 --> 01:01:53.190
<v Speaker 1>stream will be going to KubeCon, I know

01:01:53.190 --> 01:01:55.350
<v Speaker 1>you have some exciting t shirts too,

01:01:55.430 --> 01:01:55.910
<v Speaker 1>and

01:01:56.390 --> 01:01:58.710
<v Speaker 1>we will have lots of swag. So definitely

01:01:58.710 --> 01:02:00.470
<v Speaker 1>swing by the booth for

01:02:01.725 --> 01:02:03.245
<v Speaker 1>a chat or a demo with some of

01:02:03.245 --> 01:02:05.725
<v Speaker 1>our team. Awesome. Well, maybe I'll see you

01:02:05.725 --> 01:02:08.525
<v Speaker 0>at KubeCon. It's Detroit in North America, right,

01:02:08.525 --> 01:02:10.045
<v Speaker 0>at the in October? Yeah. I think I'll

01:02:10.045 --> 01:02:11.485
<v Speaker 1>likely be in Detroit.

01:02:11.885 --> 01:02:13.005
<v Speaker 0>Cool. Sweet.

01:02:13.245 --> 01:02:15.599
<v Speaker 0>Alright. Well, Ben, you for joining me. It's

01:02:15.599 --> 01:02:18.480
<v Speaker 0>always a pleasure. I'm looking forward to doing

01:02:18.480 --> 01:02:21.040
<v Speaker 0>more experiments and demos with you, especially

01:02:21.279 --> 01:02:23.680
<v Speaker 0>as we roll out more Teleport features. And

01:02:23.680 --> 01:02:25.039
<v Speaker 0>I I'm definitely gonna hit you up for

01:02:25.039 --> 01:02:27.355
<v Speaker 0>Teleport Terminal and see what that is. Plus

01:02:27.355 --> 01:02:29.595
<v Speaker 0>the fun things to play with. But thank

01:02:29.595 --> 01:02:31.115
<v Speaker 0>you again. Have a great day, and I'll

01:02:31.115 --> 01:02:32.475
<v Speaker 0>speak to you soon. Bye.
