WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 9a8014cc-16b2-4d48-b90f-b96c2b725603
Created: 2025-04-29T18:55:36.181Z
Duration: 6357.0264
Channels: 1

00:00:59.909 --> 00:01:03.829
<v Speaker 0>Hello and welcome to today's episode of clustered.

00:01:04.334 --> 00:01:07.055
<v Speaker 0>This is episode 14, and I have two

00:01:07.055 --> 00:01:10.255
<v Speaker 0>fantastic guests and two very broken clusters

00:01:10.255 --> 00:01:12.335
<v Speaker 0>for us to fix today.

00:01:12.895 --> 00:01:14.815
<v Speaker 0>Before we get started, there's just a little

00:01:14.815 --> 00:01:15.695
<v Speaker 0>bit of housekeeping.

00:01:16.250 --> 00:01:18.330
<v Speaker 0>First and foremost, if you haven't pressed that

00:01:18.330 --> 00:01:19.369
<v Speaker 0>subscribe button,

00:01:19.530 --> 00:01:20.729
<v Speaker 0>you can do that now.

00:01:20.970 --> 00:01:23.290
<v Speaker 0>Also remember to thumbs up slash like the

00:01:23.290 --> 00:01:25.210
<v Speaker 0>video. This will help other people find it.

00:01:25.210 --> 00:01:26.409
<v Speaker 0>It's always a good thing.

00:01:26.810 --> 00:01:28.505
<v Speaker 0>And if you wish, you can now join

00:01:28.505 --> 00:01:31.384
<v Speaker 0>the Rawkode Academy at a sandbox level for

00:01:31.384 --> 00:01:33.704
<v Speaker 0>a very tiny tiny nominal fee, which will

00:01:33.704 --> 00:01:35.625
<v Speaker 0>get you some cool emojis and private live

00:01:35.625 --> 00:01:36.984
<v Speaker 0>streams coming up soon.

00:01:38.185 --> 00:01:38.905
<v Speaker 0>Today,

00:01:38.985 --> 00:01:39.704
<v Speaker 0>we have

00:01:40.550 --> 00:01:43.110
<v Speaker 0>Adrian and Sid joining us.

00:01:43.350 --> 00:01:45.990
<v Speaker 0>We have both prepared one one

00:01:45.990 --> 00:01:48.790
<v Speaker 0>broken cluster each and will join me as

00:01:48.790 --> 00:01:51.510
<v Speaker 0>we attempt to pair and fix the others.

00:01:51.510 --> 00:01:53.430
<v Speaker 0>Hi there, Adrian. Hi there, Sid. How are

00:01:53.430 --> 00:01:54.390
<v Speaker 0>you both today?

00:01:55.430 --> 00:01:56.070
<v Speaker 1>Doing well.

00:01:56.735 --> 00:01:59.135
<v Speaker 1>Yeah. Doing just fine. It's a bit warm,

00:01:59.135 --> 00:01:59.215
<v Speaker 0>but

00:02:00.255 --> 00:02:01.855
<v Speaker 0>It was not a problem I have in

00:02:01.855 --> 00:02:04.095
<v Speaker 0>Scotland today. It's been raining and windy all

00:02:04.095 --> 00:02:06.415
<v Speaker 0>day. One second. I have to take a

00:02:06.415 --> 00:02:07.215
<v Speaker 2>phone call.

00:02:09.294 --> 00:02:10.735
<v Speaker 0>Please don't put up. Sorry. Yeah.

00:02:12.430 --> 00:02:14.670
<v Speaker 0>Alright. Well, Aaron takes the phone call. Sid,

00:02:14.670 --> 00:02:16.270
<v Speaker 0>do you wanna introduce yourself and tell us

00:02:16.270 --> 00:02:18.110
<v Speaker 0>a little bit about you, please? Sure.

00:02:18.750 --> 00:02:20.750
<v Speaker 1>My name is Sid Palace. I am a

00:02:20.750 --> 00:02:23.870
<v Speaker 1>DevOps consultant. I split time between helping startups

00:02:23.870 --> 00:02:27.025
<v Speaker 1>improve their DevOps and cloud infrastructure setups and

00:02:27.025 --> 00:02:30.064
<v Speaker 1>also making content for my YouTube channel and

00:02:30.064 --> 00:02:31.665
<v Speaker 1>my blog. So I have a YouTube channel

00:02:31.665 --> 00:02:33.425
<v Speaker 1>called DevOps Directive where I cover

00:02:33.745 --> 00:02:36.625
<v Speaker 1>a variety of topics from Docker to Kubernetes

00:02:37.345 --> 00:02:39.185
<v Speaker 1>and all sorts of things. So go check

00:02:39.185 --> 00:02:41.190
<v Speaker 1>that out if you have time. Most of

00:02:41.190 --> 00:02:45.030
<v Speaker 1>my Kubernetes experience is with managed clusters. So

00:02:45.030 --> 00:02:47.430
<v Speaker 1>depending where Arion breaks things,

00:02:47.670 --> 00:02:49.190
<v Speaker 1>that could be useful or it could be

00:02:49.190 --> 00:02:50.390
<v Speaker 1>completely worthless.

00:02:50.630 --> 00:02:52.965
<v Speaker 1>So we will find out once once we

00:02:52.965 --> 00:02:54.165
<v Speaker 1>start poking around.

00:02:54.645 --> 00:02:57.285
<v Speaker 0>Nice. Yeah. I definitely encourage people to check

00:02:57.285 --> 00:02:59.525
<v Speaker 0>out the dev ops directive. It's a fantastic

00:02:59.525 --> 00:03:01.765
<v Speaker 0>YouTube channel. Lots of great content there.

00:03:02.885 --> 00:03:03.685
<v Speaker 0>Hello,

00:03:03.765 --> 00:03:05.605
<v Speaker 0>Adi. Would you like to give us a

00:03:05.605 --> 00:03:07.690
<v Speaker 0>quick introduction if you're alright sir? And I

00:03:07.690 --> 00:03:08.970
<v Speaker 0>have we'll get started.

00:03:09.210 --> 00:03:10.970
<v Speaker 2>Yeah. Sure. So I'm

00:03:11.050 --> 00:03:13.770
<v Speaker 2>Arian. I in my spare time, I work

00:03:13.770 --> 00:03:14.970
<v Speaker 2>on NextOS,

00:03:14.970 --> 00:03:17.130
<v Speaker 2>which is a declarative

00:03:17.210 --> 00:03:18.970
<v Speaker 2>operating system, which has a lot of

00:03:19.535 --> 00:03:21.935
<v Speaker 2>cutting points with Kubernetes because you all like

00:03:21.935 --> 00:03:24.095
<v Speaker 2>declarative and immutable things as well.

00:03:24.655 --> 00:03:25.455
<v Speaker 2>And

00:03:25.455 --> 00:03:27.775
<v Speaker 2>for work, I work at Wire.

00:03:28.335 --> 00:03:30.495
<v Speaker 2>We do end to end encrypted chat and

00:03:30.495 --> 00:03:31.615
<v Speaker 2>video communication,

00:03:31.695 --> 00:03:32.255
<v Speaker 2>and I

00:03:32.680 --> 00:03:35.720
<v Speaker 2>maintain Kubernetes clusters here and do operations

00:03:35.880 --> 00:03:36.840
<v Speaker 2>and break

00:03:37.240 --> 00:03:38.760
<v Speaker 2>things very often as well.

00:03:40.200 --> 00:03:43.160
<v Speaker 2>Occasionally, also write some code, but lately, not

00:03:43.160 --> 00:03:43.480
<v Speaker 2>so much.

00:03:44.875 --> 00:03:47.435
<v Speaker 2>Yeah. That's a quick introduction of myself, I

00:03:47.435 --> 00:03:48.155
<v Speaker 2>would say.

00:03:48.474 --> 00:03:50.635
<v Speaker 0>Yeah. Awesome. Thank you very much both of

00:03:50.635 --> 00:03:52.555
<v Speaker 0>you for for sharing. So

00:03:52.795 --> 00:03:56.235
<v Speaker 0>we are gonna start today with cluster 31.

00:03:56.474 --> 00:03:58.795
<v Speaker 0>Sid, that means you and I are up

00:03:58.795 --> 00:03:59.035
<v Speaker 0>first.

00:04:00.040 --> 00:04:01.560
<v Speaker 0>I have enabled the head We

00:04:02.120 --> 00:04:04.680
<v Speaker 0>can see teleport, which is our pairing tool

00:04:04.680 --> 00:04:05.720
<v Speaker 0>of choice.

00:04:06.200 --> 00:04:08.760
<v Speaker 0>I will open a session here. Sid, if

00:04:08.760 --> 00:04:10.200
<v Speaker 0>you can do me a favor.

00:04:10.680 --> 00:04:12.760
<v Speaker 0>Once you're in, just type some sort of

00:04:12.760 --> 00:04:14.280
<v Speaker 0>echo hello to let me know that you're

00:04:14.280 --> 00:04:16.084
<v Speaker 0>there. We should also see a nice little

00:04:16.084 --> 00:04:17.365
<v Speaker 0>to show up here.

00:04:18.725 --> 00:04:20.805
<v Speaker 0>Adrian, you can just sit and watch and

00:04:20.805 --> 00:04:22.565
<v Speaker 0>prepare the laughter. If you got a beer,

00:04:22.565 --> 00:04:24.405
<v Speaker 0>you actually have a beer. Yeah. I told

00:04:24.405 --> 00:04:25.525
<v Speaker 2>you I would get a beer.

00:04:26.085 --> 00:04:26.565
<v Speaker 0>I am

00:04:27.280 --> 00:04:29.840
<v Speaker 0>betterly unprepared and jealous, but

00:04:30.000 --> 00:04:31.680
<v Speaker 0>enjoy it, mate. Okay.

00:04:31.919 --> 00:04:33.440
<v Speaker 0>So I will do a little bit of

00:04:33.440 --> 00:04:36.800
<v Speaker 0>setup first. These are QVDM clusters. That means

00:04:36.800 --> 00:04:37.680
<v Speaker 0>our Okay.

00:04:38.720 --> 00:04:39.600
<v Speaker 0>Configuration

00:04:39.680 --> 00:04:40.320
<v Speaker 0>lives here.

00:04:41.305 --> 00:04:43.625
<v Speaker 0>I will alias k to keep control, otherwise

00:04:43.625 --> 00:04:45.145
<v Speaker 0>you will just be watching me type k

00:04:45.145 --> 00:04:47.305
<v Speaker 0>and that failing many many times.

00:04:47.545 --> 00:04:49.305
<v Speaker 0>And Seth, I will give you the honors

00:04:49.305 --> 00:04:51.545
<v Speaker 0>of running on the first command to see

00:04:51.545 --> 00:04:53.945
<v Speaker 0>if we have any sort of API server

00:04:53.945 --> 00:04:55.065
<v Speaker 0>available to us.

00:04:58.240 --> 00:05:00.640
<v Speaker 0>Hey. We did. Look at that. Thank you

00:05:00.640 --> 00:05:01.520
<v Speaker 0>for help.

00:05:02.720 --> 00:05:04.000
<v Speaker 2>Didn't break everything.

00:05:04.160 --> 00:05:06.080
<v Speaker 2>So I'm proud of myself.

00:05:06.640 --> 00:05:07.200
<v Speaker 1>Okay.

00:05:07.600 --> 00:05:09.724
<v Speaker 0>The API server is good. So let me

00:05:09.724 --> 00:05:10.525
<v Speaker 0>clarify

00:05:10.525 --> 00:05:12.525
<v Speaker 0>the the objective then when we have an

00:05:12.525 --> 00:05:14.284
<v Speaker 0>API server. Right? It's sometimes it can be

00:05:14.284 --> 00:05:16.845
<v Speaker 0>a little bit fussy. Our objective now can

00:05:16.845 --> 00:05:18.685
<v Speaker 0>be a little bit confusing. Our objective now

00:05:18.685 --> 00:05:20.284
<v Speaker 0>is to make sure that our clustered and

00:05:20.284 --> 00:05:22.525
<v Speaker 0>postgres squeal pods are running and happy,

00:05:23.245 --> 00:05:23.805
<v Speaker 0>and also

00:05:24.510 --> 00:05:26.430
<v Speaker 0>to be able to upgrade our cluster pod

00:05:26.430 --> 00:05:28.670
<v Speaker 0>from v one to v two.

00:05:28.990 --> 00:05:30.270
<v Speaker 0>That is our objective.

00:05:31.390 --> 00:05:33.390
<v Speaker 0>Alright. So you have run a get pods

00:05:33.390 --> 00:05:34.830
<v Speaker 0>and we can already see

00:05:35.310 --> 00:05:37.470
<v Speaker 0>Postgres is definitely not happy

00:05:37.835 --> 00:05:38.315
<v Speaker 0>And

00:05:38.715 --> 00:05:41.115
<v Speaker 1>And and clustered has restarted a few times.

00:05:41.115 --> 00:05:42.315
<v Speaker 0>It has. Yes.

00:05:42.715 --> 00:05:43.595
<v Speaker 0>Alright.

00:05:44.635 --> 00:05:45.835
<v Speaker 0>Let's check out

00:05:46.155 --> 00:05:47.435
<v Speaker 0>what's going on with Postgres.

00:05:54.020 --> 00:05:54.820
<v Speaker 0>Okay.

00:05:57.780 --> 00:05:58.580
<v Speaker 1>Okay.

00:05:59.940 --> 00:06:02.260
<v Speaker 1>So we have a taint on it that

00:06:02.260 --> 00:06:03.140
<v Speaker 1>it won't tolerate.

00:06:06.085 --> 00:06:08.245
<v Speaker 0>Okay. So yeah, it's unable to be scheduled

00:06:08.245 --> 00:06:10.725
<v Speaker 0>right now. It looks like our worker node

00:06:10.725 --> 00:06:12.885
<v Speaker 0>has memory pressure and

00:06:14.965 --> 00:06:17.685
<v Speaker 0>obviously we don't tolerate running on the control

00:06:17.685 --> 00:06:18.325
<v Speaker 0>blend mode.

00:06:20.300 --> 00:06:21.260
<v Speaker 1>Yep. Yep.

00:06:23.819 --> 00:06:25.180
<v Speaker 0>What are you thinking? What do we need

00:06:25.180 --> 00:06:26.300
<v Speaker 0>to look at here?

00:06:27.500 --> 00:06:29.099
<v Speaker 1>Yeah. I was just gonna scroll through this

00:06:29.099 --> 00:06:30.380
<v Speaker 1>config and see

00:06:30.860 --> 00:06:32.139
<v Speaker 1>see what we've got.

00:06:40.765 --> 00:06:43.085
<v Speaker 0>Well, I'm curious about this memory pressure label

00:06:43.085 --> 00:06:44.125
<v Speaker 0>on the node.

00:06:44.525 --> 00:06:46.125
<v Speaker 1>Yeah. Should we describe the node and see

00:06:46.125 --> 00:06:47.805
<v Speaker 1>what that looks like? Yeah. Good show. I

00:06:47.805 --> 00:06:49.485
<v Speaker 0>think that's a good idea. What

00:06:49.725 --> 00:06:51.805
<v Speaker 0>I've got in my head here is that

00:06:51.199 --> 00:06:53.680
<v Speaker 0>Adrian can just be cruel and just add

00:06:53.680 --> 00:06:55.600
<v Speaker 0>either label to mess with us or he's

00:06:55.600 --> 00:06:56.800
<v Speaker 0>maybe actually

00:06:56.880 --> 00:06:59.600
<v Speaker 0>screwed with the memory available to the Yeah.

00:06:59.840 --> 00:07:01.520
<v Speaker 0>To the kubelet.

00:07:04.479 --> 00:07:06.320
<v Speaker 0>I see that smirk in your face there.

00:07:07.595 --> 00:07:09.755
<v Speaker 2>I have a very bad poker face. I

00:07:09.755 --> 00:07:11.275
<v Speaker 2>wish I turned off the webcam.

00:07:11.514 --> 00:07:11.915
<v Speaker 2>There

00:07:13.914 --> 00:07:15.195
<v Speaker 0>we go. Look at that.

00:07:16.395 --> 00:07:19.595
<v Speaker 1>Okay. Eviction threshold met. Attempting to reclaim memory.

00:07:23.670 --> 00:07:25.110
<v Speaker 0>I think we're just gonna have to jump

00:07:25.110 --> 00:07:27.590
<v Speaker 0>on to that worker notes.

00:07:28.230 --> 00:07:28.950
<v Speaker 0>Yep.

00:07:30.310 --> 00:07:33.030
<v Speaker 0>In the memory here, nice big number, which

00:07:33.030 --> 00:07:34.550
<v Speaker 0>is what I wanna see. So

00:07:35.125 --> 00:07:38.085
<v Speaker 0>I will open a session on the worker.

00:07:38.085 --> 00:07:40.005
<v Speaker 0>Just feel free to jump into it, let

00:07:40.005 --> 00:07:41.125
<v Speaker 0>me know when you're there.

00:07:42.005 --> 00:07:43.925
<v Speaker 1>Okay. And then we'll start to look around

00:07:43.925 --> 00:07:44.805
<v Speaker 0>and see what's happening.

00:07:50.530 --> 00:07:51.889
<v Speaker 0>What kind of beer you got?

00:07:54.210 --> 00:07:55.889
<v Speaker 2>We got wait.

00:07:56.130 --> 00:07:58.450
<v Speaker 2>No. A roadhouse,

00:07:59.169 --> 00:08:00.610
<v Speaker 2>which is a pilsner.

00:08:01.009 --> 00:08:01.970
<v Speaker 2>I like it a lot.

00:08:03.115 --> 00:08:06.555
<v Speaker 2>From the the black woods in Germany.

00:08:06.955 --> 00:08:09.115
<v Speaker 0>Ah, nice. Nice German beer.

00:08:09.275 --> 00:08:09.915
<v Speaker 0>Okay.

00:08:11.835 --> 00:08:12.715
<v Speaker 1>I'm

00:08:12.715 --> 00:08:13.995
<v Speaker 1>getting a oh, hold on.

00:08:15.490 --> 00:08:17.490
<v Speaker 1>I had a a background window open with

00:08:17.490 --> 00:08:19.250
<v Speaker 1>the YouTube videos. I started getting a delayed

00:08:19.250 --> 00:08:20.610
<v Speaker 1>loop, but now I'm good.

00:08:21.569 --> 00:08:22.530
<v Speaker 0>I've

00:08:22.530 --> 00:08:24.610
<v Speaker 0>done I've done that so many times.

00:08:25.969 --> 00:08:26.690
<v Speaker 0>Alright.

00:08:26.770 --> 00:08:29.330
<v Speaker 0>Let's I'm gonna run my my favorite memory

00:08:29.330 --> 00:08:29.729
<v Speaker 0>command.

00:08:30.764 --> 00:08:31.405
<v Speaker 0>So

00:08:33.245 --> 00:08:36.205
<v Speaker 0>this looks good to me, which means so

00:08:36.684 --> 00:08:38.924
<v Speaker 0>my thought process here is that

00:08:42.445 --> 00:08:43.964
<v Speaker 0>alien has

00:08:45.550 --> 00:08:46.510
<v Speaker 0>modify

00:08:47.790 --> 00:08:48.910
<v Speaker 0>seems

00:08:49.070 --> 00:08:50.670
<v Speaker 0>I don't know. I think he's modified the

00:08:50.670 --> 00:08:52.830
<v Speaker 0>system d unit file for the cubelet and

00:08:52.830 --> 00:08:55.950
<v Speaker 0>his memory constraint. Is that a lane where

00:08:55.950 --> 00:08:57.230
<v Speaker 0>you if you got any other ideas you

00:08:57.230 --> 00:08:57.790
<v Speaker 0>wanna throw it?

00:08:59.035 --> 00:09:01.035
<v Speaker 1>That seems like a reasonable first

00:09:01.515 --> 00:09:03.035
<v Speaker 1>first place to look.

00:09:05.035 --> 00:09:05.915
<v Speaker 0>Okay.

00:09:14.529 --> 00:09:15.890
<v Speaker 0>Well, there's nothing there.

00:09:19.890 --> 00:09:21.890
<v Speaker 0>Or should we cap the unit fail? Get

00:09:21.890 --> 00:09:23.570
<v Speaker 0>all the actual what do you call them

00:09:23.570 --> 00:09:25.010
<v Speaker 0>in system? Do drop ins or is it

00:09:25.010 --> 00:09:25.490
<v Speaker 0>something else?

00:09:28.965 --> 00:09:30.885
<v Speaker 2>Yeah, drop ins. Drop ins.

00:09:31.205 --> 00:09:32.405
<v Speaker 0>Alright.

00:09:32.405 --> 00:09:32.885
<v Speaker 0>So

00:09:34.245 --> 00:09:37.285
<v Speaker 0>system control cat kubelet. This should I believe

00:09:37.285 --> 00:09:40.165
<v Speaker 0>shows us the entire config and then we

00:09:40.165 --> 00:09:43.205
<v Speaker 0>can look for files that could potentially be

00:09:44.769 --> 00:09:46.529
<v Speaker 0>have other stuff in it.

00:09:48.209 --> 00:09:49.889
<v Speaker 0>Let me know if get any ideas. Otherwise,

00:09:49.889 --> 00:09:50.930
<v Speaker 0>I'm just gonna be

00:09:51.410 --> 00:09:52.850
<v Speaker 0>looking aimlessly. Poking around.

00:09:57.765 --> 00:10:00.165
<v Speaker 0>There is a way, right, when you

00:10:01.925 --> 00:10:04.005
<v Speaker 0>can you see the niceness level of a

00:10:04.005 --> 00:10:05.765
<v Speaker 0>process of Linux? I think there is.

00:10:10.640 --> 00:10:11.280
<v Speaker 0>Like,

00:10:14.080 --> 00:10:15.040
<v Speaker 0>let's see.

00:10:18.000 --> 00:10:20.000
<v Speaker 0>That's to run a command with a nice

00:10:20.000 --> 00:10:20.400
<v Speaker 0>value.

00:10:21.935 --> 00:10:22.815
<v Speaker 0>Could be

00:10:26.014 --> 00:10:26.654
<v Speaker 0>Alright.

00:10:30.175 --> 00:10:31.935
<v Speaker 0>Let's just start looking at the files listed

00:10:31.935 --> 00:10:33.214
<v Speaker 0>in this unit.

00:10:33.214 --> 00:10:34.415
<v Speaker 0>So we've got

00:10:37.340 --> 00:10:39.580
<v Speaker 0>this one. That's the one it's showing us.

00:10:39.580 --> 00:10:40.700
<v Speaker 0>So we've got

00:10:42.460 --> 00:10:43.900
<v Speaker 0>won't be the bit strap.

00:10:44.300 --> 00:10:47.020
<v Speaker 0>Could be fire lib kubelet config and fire

00:10:47.020 --> 00:10:49.335
<v Speaker 0>lib kubelet flags. Those are the two I

00:10:49.335 --> 00:10:51.495
<v Speaker 0>think we we're gonna wanna look into.

00:11:02.455 --> 00:11:03.415
<v Speaker 0>Are they clean to you?

00:11:06.610 --> 00:11:07.330
<v Speaker 1>Yeah.

00:11:10.050 --> 00:11:11.089
<v Speaker 0>Config.

00:11:13.089 --> 00:11:15.330
<v Speaker 0>And there we go to keep the configuration.

00:11:15.570 --> 00:11:17.250
<v Speaker 0>Yeah. Don't think there'll be anything in there.

00:11:25.625 --> 00:11:27.785
<v Speaker 0>Hey. Your tongue's dead. I'll sit back. I'll

00:11:27.785 --> 00:11:27.945
<v Speaker 0>watch.

00:11:41.250 --> 00:11:44.210
<v Speaker 0>Did we just did we describe the node

00:11:44.210 --> 00:11:45.890
<v Speaker 0>on

00:11:45.635 --> 00:11:47.555
<v Speaker 0>the control plane? We did describe the worker

00:11:47.555 --> 00:11:49.635
<v Speaker 1>node. Not on the control plane.

00:11:50.515 --> 00:11:53.475
<v Speaker 1>We only did it for the the worker

00:11:53.475 --> 00:11:55.154
<v Speaker 1>node. So we could describe that one as

00:11:55.154 --> 00:11:57.235
<v Speaker 1>well. Yeah. I wonder, am I over

00:11:57.635 --> 00:11:58.870
<v Speaker 0>I mean, he could just have added the

00:11:58.870 --> 00:12:00.709
<v Speaker 0>label. He might not have actually done anything

00:12:00.709 --> 00:12:02.550
<v Speaker 0>to the memory on the machine. Right?

00:12:02.949 --> 00:12:04.870
<v Speaker 1>True. That's worth checking. So should we hop

00:12:04.870 --> 00:12:05.910
<v Speaker 1>back to that other

00:12:06.389 --> 00:12:08.389
<v Speaker 1>that other one? Yeah. Do you wanna Or

00:12:08.389 --> 00:12:10.550
<v Speaker 1>is this one also set up? Oh, no.

00:12:10.550 --> 00:12:12.470
<v Speaker 0>Just the just the Okay. So if you

00:12:12.630 --> 00:12:13.990
<v Speaker 0>why don't we just do

00:12:14.765 --> 00:12:16.365
<v Speaker 0>a Yep. Do wanna just edit the node

00:12:16.365 --> 00:12:18.045
<v Speaker 0>and remove the label, see what happens?

00:12:18.845 --> 00:12:20.045
<v Speaker 1>Sure. It's a good start.

00:12:28.840 --> 00:12:30.840
<v Speaker 0>Come on. Editing the service files is way

00:12:30.840 --> 00:12:32.200
<v Speaker 0>too easy. Yeah.

00:12:32.840 --> 00:12:34.360
<v Speaker 0>What what was even easier would just be

00:12:34.360 --> 00:12:35.400
<v Speaker 0>adding a label.

00:12:37.240 --> 00:12:38.600
<v Speaker 0>I keep looking at him to see if

00:12:38.600 --> 00:12:40.200
<v Speaker 0>he's gonna give anything away but I've lost

00:12:40.200 --> 00:12:40.440
<v Speaker 0>you there.

00:12:42.175 --> 00:12:44.015
<v Speaker 2>I'm practicing my poker face.

00:12:45.215 --> 00:12:47.855
<v Speaker 0>So Alright. So we do not have

00:12:50.575 --> 00:12:52.495
<v Speaker 0>memory constraint label there.

00:12:53.375 --> 00:12:55.775
<v Speaker 2>Yeah. Maybe on the worker. Oh, I'm hinting

00:12:55.775 --> 00:12:56.335
<v Speaker 2>things again.

00:12:57.069 --> 00:12:58.029
<v Speaker 0>Oh, yeah.

00:12:58.990 --> 00:13:00.750
<v Speaker 0>But what did you what was your edit

00:13:00.750 --> 00:13:02.269
<v Speaker 0>command? Sorry. I missed it.

00:13:06.990 --> 00:13:08.350
<v Speaker 0>Oh, no. We're stuck in Vim.

00:13:09.485 --> 00:13:11.085
<v Speaker 1>Okay. What? What?

00:13:12.045 --> 00:13:13.325
<v Speaker 1>Oh, let me out.

00:13:14.125 --> 00:13:15.085
<v Speaker 2>Let me out.

00:13:15.644 --> 00:13:17.485
<v Speaker 0>Oh, it's there. You'll need to do q

00:13:17.485 --> 00:13:20.285
<v Speaker 0>exclamation mark exclamation mark. Yeah. Otherwise, you'll run

00:13:20.285 --> 00:13:20.685
<v Speaker 0>it. Otherwise.

00:13:25.140 --> 00:13:26.580
<v Speaker 1>Oh, we looked at the worker. Did we

00:13:26.580 --> 00:13:27.060
<v Speaker 1>not?

00:13:28.020 --> 00:13:30.660
<v Speaker 0>Oh, no. You edited the control. Yeah. Okay.

00:13:31.220 --> 00:13:32.740
<v Speaker 0>That'll be why we couldn't see the label.

00:13:41.915 --> 00:13:42.875
<v Speaker 0>Not there?

00:13:46.075 --> 00:13:46.795
<v Speaker 1>No.

00:13:48.635 --> 00:13:50.315
<v Speaker 1>Here we go. Oh, there's a tint. There

00:13:50.315 --> 00:13:50.635
<v Speaker 0>we go.

00:13:52.640 --> 00:13:55.760
<v Speaker 0>Yeah. Let's We just remove that entirely? Yeah.

00:13:55.760 --> 00:13:56.560
<v Speaker 0>Let's do it.

00:13:57.040 --> 00:13:59.040
<v Speaker 0>You can just remove that. Yeah.

00:13:59.040 --> 00:14:00.080
<v Speaker 1>Okay. Just bend it.

00:14:12.255 --> 00:14:14.015
<v Speaker 1>You

00:14:15.695 --> 00:14:18.335
<v Speaker 0>might wanna just create postgres again.

00:14:19.040 --> 00:14:19.760
<v Speaker 0>Yeah.

00:14:23.840 --> 00:14:25.840
<v Speaker 0>When did that nine seconds So

00:14:27.200 --> 00:14:29.360
<v Speaker 1>let's see if that taint magically reappeared.

00:14:37.485 --> 00:14:39.485
<v Speaker 0>So how

00:14:42.365 --> 00:14:44.045
<v Speaker 1>is that getting added?

00:14:46.445 --> 00:14:46.845
<v Speaker 0>So

00:14:49.070 --> 00:14:49.630
<v Speaker 0>what if

00:14:50.510 --> 00:14:51.870
<v Speaker 0>I I would sort of stuff out all

00:14:51.870 --> 00:14:53.310
<v Speaker 0>the time. If you got I don't yeah.

00:14:53.310 --> 00:14:54.430
<v Speaker 0>That's a good shit.

00:14:55.710 --> 00:14:57.950
<v Speaker 1>So let's also check all namespaces, I guess,

00:14:57.950 --> 00:14:59.070
<v Speaker 1>in case he hit it somewhere.

00:15:03.355 --> 00:15:05.514
<v Speaker 1>Oh, okay. Have a namespace.

00:15:10.634 --> 00:15:11.755
<v Speaker 1>Alright.

00:15:11.834 --> 00:15:14.795
<v Speaker 1>We've got a bunch of NGINX pods that

00:15:14.795 --> 00:15:15.595
<v Speaker 1>are

00:15:17.960 --> 00:15:19.160
<v Speaker 1>getting evicted.

00:15:21.960 --> 00:15:23.160
<v Speaker 0>Stop laughing.

00:15:24.280 --> 00:15:26.280
<v Speaker 2>Okay. Sorry. No. I'm allowed to laugh. Right?

00:15:26.280 --> 00:15:28.520
<v Speaker 2>That's whole point. Yeah. That is the whole

00:15:28.520 --> 00:15:30.120
<v Speaker 1>point. Let's

00:15:30.120 --> 00:15:32.600
<v Speaker 1>see what what these are doing. We have

00:15:32.600 --> 00:15:34.445
<v Speaker 1>this this service.

00:15:34.925 --> 00:15:36.524
<v Speaker 1>Let me just try deleting that service and

00:15:36.524 --> 00:15:37.485
<v Speaker 1>see what happens.

00:15:42.445 --> 00:15:44.524
<v Speaker 1>Alright. The deployment, not the service.

00:15:44.685 --> 00:15:46.524
<v Speaker 2>It was kinda nice that the load balancer

00:15:46.524 --> 00:15:48.764
<v Speaker 2>service type just works on the

00:15:49.310 --> 00:15:50.190
<v Speaker 2>was cool.

00:15:50.590 --> 00:15:53.550
<v Speaker 0>Yeah. These clusters are currently running natural l

00:15:53.550 --> 00:15:55.310
<v Speaker 0>b, and I'm in the process of migrating

00:15:55.310 --> 00:15:56.110
<v Speaker 0>over to.

00:15:58.510 --> 00:15:59.310
<v Speaker 0>But yeah.

00:16:00.030 --> 00:16:01.630
<v Speaker 0>But I did give you a broken CSI

00:16:01.630 --> 00:16:02.670
<v Speaker 0>implementation.

00:16:02.670 --> 00:16:02.910
<v Speaker 0>So

00:16:03.495 --> 00:16:06.695
<v Speaker 2>There's also I heard that Cilium now has

00:16:08.055 --> 00:16:10.295
<v Speaker 2>part of the meta l b code base

00:16:11.095 --> 00:16:11.815
<v Speaker 2>integrated.

00:16:12.295 --> 00:16:14.055
<v Speaker 0>Yeah. They did some work with DGP. I

00:16:14.055 --> 00:16:15.415
<v Speaker 0>saw that announcement last week.

00:16:16.730 --> 00:16:17.610
<v Speaker 1>So

00:16:17.610 --> 00:16:18.010
<v Speaker 1>let's just

00:16:19.450 --> 00:16:20.889
<v Speaker 1>actually, why don't I just delete that whole

00:16:20.889 --> 00:16:21.770
<v Speaker 1>namespace?

00:16:22.089 --> 00:16:24.570
<v Speaker 1>We we probably don't need it. Yeah. Yeah.

00:16:25.610 --> 00:16:27.290
<v Speaker 0>I I don't trust that namespace. I'm I'm

00:16:27.290 --> 00:16:28.810
<v Speaker 0>happy for you to blow it away. That's

00:16:28.810 --> 00:16:29.050
<v Speaker 0>it.

00:16:34.385 --> 00:16:35.185
<v Speaker 1>Arian.

00:16:37.425 --> 00:16:38.225
<v Speaker 1>Okay.

00:16:40.145 --> 00:16:42.545
<v Speaker 1>Takes a little while. Now let's go back

00:16:42.545 --> 00:16:44.385
<v Speaker 1>and try to edit that taint off the

00:16:44.385 --> 00:16:44.865
<v Speaker 1>node

00:16:47.350 --> 00:16:49.830
<v Speaker 1>in case that pod was adding it back.

00:17:03.055 --> 00:17:04.414
<v Speaker 0>It may still be there.

00:17:05.535 --> 00:17:07.055
<v Speaker 1>It may still be there. That's true.

00:17:15.090 --> 00:17:16.369
<v Speaker 1>It is still there.

00:17:16.690 --> 00:17:17.650
<v Speaker 1>Okay.

00:17:18.530 --> 00:17:19.329
<v Speaker 1>So

00:17:20.530 --> 00:17:22.290
<v Speaker 1>we've we've cleaned up something, but we don't

00:17:22.290 --> 00:17:24.049
<v Speaker 1>know what that something was actually doing.

00:17:24.530 --> 00:17:25.685
<v Speaker 0>Do you mind if I type for a

00:17:25.685 --> 00:17:27.845
<v Speaker 0>moment? I'm just Yeah. Go for it. Curious.

00:17:29.285 --> 00:17:31.205
<v Speaker 0>Is that if okay. Yeah. That does look

00:17:31.205 --> 00:17:33.125
<v Speaker 1>like Yeah. It it did indeed get get

00:17:33.125 --> 00:17:33.845
<v Speaker 1>cleaned up.

00:17:34.725 --> 00:17:37.685
<v Speaker 1>Is there something else that could intercept our

00:17:38.010 --> 00:17:40.409
<v Speaker 1>node config before it gets

00:17:40.650 --> 00:17:43.289
<v Speaker 1>used or after it gets used, I suppose?

00:17:44.410 --> 00:17:46.810
<v Speaker 1>Some kind of Yeah. Well Mutating

00:17:46.810 --> 00:17:48.090
<v Speaker 1>webhook or

00:17:48.970 --> 00:17:50.650
<v Speaker 0>Yeah. Mutating webhooks

00:17:50.650 --> 00:17:51.610
<v Speaker 0>are always oh.

00:17:52.305 --> 00:17:53.905
<v Speaker 0>I see. Oh, no. I thought we were

00:17:53.905 --> 00:17:54.785
<v Speaker 0>getting a broken

00:17:55.025 --> 00:17:56.465
<v Speaker 0>API server there.

00:18:00.065 --> 00:18:00.625
<v Speaker 0>Damn.

00:18:02.385 --> 00:18:03.745
<v Speaker 1>Lots of issues with Rawk.

00:18:06.680 --> 00:18:08.759
<v Speaker 0>Yeah. I'm gonna filter that out.

00:18:14.520 --> 00:18:16.200
<v Speaker 0>Look how slow it is when I get

00:18:16.200 --> 00:18:18.040
<v Speaker 0>pods across all namespaces.

00:18:18.040 --> 00:18:19.559
<v Speaker 0>It's like Right. There's probably a lot of

00:18:19.559 --> 00:18:20.440
<v Speaker 1>stuff somewhere.

00:18:24.565 --> 00:18:26.805
<v Speaker 2>Yep. I was kinda surprised, like, once it

00:18:26.805 --> 00:18:28.885
<v Speaker 2>is evicted, that it doesn't clean up that

00:18:28.885 --> 00:18:31.765
<v Speaker 2>port reference. Like, it just keeps accumulating.

00:18:32.485 --> 00:18:33.044
<v Speaker 2>Let's see.

00:18:34.325 --> 00:18:36.485
<v Speaker 1>And what is what is Hubble UI? Is

00:18:36.485 --> 00:18:38.780
<v Speaker 1>that just an interface for Cilium? Yeah. It's

00:18:38.780 --> 00:18:40.940
<v Speaker 0>a really cool UI that shows you network

00:18:40.940 --> 00:18:43.500
<v Speaker 0>traffic across your nodes and services and such.

00:18:43.500 --> 00:18:45.019
<v Speaker 0>It's pretty sweet.

00:18:45.260 --> 00:18:46.860
<v Speaker 0>I I just wanna see it running. Come

00:18:46.860 --> 00:18:47.340
<v Speaker 0>on.

00:18:49.260 --> 00:18:50.940
<v Speaker 0>Anything. Show me anything that's running in my

00:18:50.940 --> 00:18:53.020
<v Speaker 0>cluster. I don't care about pending an infected

00:18:53.020 --> 00:18:53.420
<v Speaker 0>write down.

00:18:56.355 --> 00:18:58.755
<v Speaker 0>Okay. So, we got speakers, we got some

00:18:58.755 --> 00:19:01.075
<v Speaker 0>Rook stuff, we got our control plane.

00:19:01.794 --> 00:19:04.275
<v Speaker 0>I just wanna know, yeah, there's nothing to

00:19:04.515 --> 00:19:06.355
<v Speaker 0>Nothing that looks nefarious here of course you

00:19:06.355 --> 00:19:08.195
<v Speaker 0>could have swapped out any of these images,

00:19:08.195 --> 00:19:08.595
<v Speaker 0>but

00:19:09.929 --> 00:19:11.690
<v Speaker 0>that would tell me, I think I like

00:19:11.690 --> 00:19:14.490
<v Speaker 0>your idea instead. Let's check for mutating webhooks.

00:19:14.650 --> 00:19:16.650
<v Speaker 0>Let's go down that path first before we

00:19:16.650 --> 00:19:19.370
<v Speaker 0>start checking the nodes for rogue processes.

00:19:26.495 --> 00:19:28.495
<v Speaker 0>Got a tip from Nolan in the chat

00:19:28.495 --> 00:19:30.415
<v Speaker 0>as well that there could be a fiction

00:19:30.415 --> 00:19:32.174
<v Speaker 0>hard set on the Qubelet.

00:19:33.775 --> 00:19:36.015
<v Speaker 1>How do we actually view these? I'm using

00:19:36.015 --> 00:19:37.294
<v Speaker 0>webhook configurations.

00:19:41.750 --> 00:19:43.190
<v Speaker 1>No resources found.

00:19:43.350 --> 00:19:45.190
<v Speaker 0>Only yeah. Cool.

00:19:46.789 --> 00:19:48.309
<v Speaker 1>Still no resources found. Okay.

00:19:55.045 --> 00:19:57.044
<v Speaker 0>Should we jump back across to the worker?

00:19:57.684 --> 00:19:58.404
<v Speaker 1>Sure.

00:19:59.445 --> 00:20:01.525
<v Speaker 1>Start looking first. Is there anything else? No.

00:20:01.525 --> 00:20:01.924
<v Speaker 1>No.

00:20:02.725 --> 00:20:04.885
<v Speaker 1>I think I think that's

00:20:05.200 --> 00:20:07.040
<v Speaker 1>that's all I can think of at at

00:20:07.040 --> 00:20:08.160
<v Speaker 1>this side of things.

00:20:10.800 --> 00:20:12.960
<v Speaker 0>Okay. Because we're our our edit to the

00:20:12.960 --> 00:20:14.640
<v Speaker 1>node is going through successfully. So it's not

00:20:14.640 --> 00:20:16.720
<v Speaker 1>like a validating webhook could be the case

00:20:16.720 --> 00:20:18.965
<v Speaker 1>because otherwise, we'd get an error back if

00:20:18.965 --> 00:20:20.885
<v Speaker 1>it was just rejecting it.

00:20:27.685 --> 00:20:29.765
<v Speaker 0>Nothing no static pods. So

00:20:36.410 --> 00:20:37.690
<v Speaker 0>what happened there?

00:20:42.170 --> 00:20:44.010
<v Speaker 0>And that weird reload debug.

00:21:01.170 --> 00:21:03.650
<v Speaker 0>I'm just scrolling. Alright. I thought I was

00:21:03.650 --> 00:21:05.170
<v Speaker 0>gonna drop out our config.

00:21:08.850 --> 00:21:09.970
<v Speaker 2>What do you want to do?

00:21:12.290 --> 00:21:14.145
<v Speaker 2>The view the entire config at once or

00:21:15.665 --> 00:21:17.424
<v Speaker 0>I did want to view the entire config

00:21:17.424 --> 00:21:19.024
<v Speaker 0>at once. Yes. Alright.

00:21:21.424 --> 00:21:23.265
<v Speaker 0>I think let let me tell you where

00:21:23.265 --> 00:21:25.265
<v Speaker 0>I'm at. Right now, I'm at the stumps,

00:21:25.265 --> 00:21:26.770
<v Speaker 0>to be honest. I think we go through

00:21:26.770 --> 00:21:28.690
<v Speaker 0>this config file for the kubelet and we

00:21:28.690 --> 00:21:31.170
<v Speaker 0>see if there's anything restricting it here. I'm

00:21:31.170 --> 00:21:33.409
<v Speaker 0>also curious if he's just been really

00:21:34.450 --> 00:21:36.850
<v Speaker 0>cheeky and scaled up a whole bunch of

00:21:36.850 --> 00:21:37.090
<v Speaker 0>those

00:21:37.905 --> 00:21:41.105
<v Speaker 0>deployments to a stupid number causing the evictions

00:21:41.105 --> 00:21:41.745
<v Speaker 0>and

00:21:42.065 --> 00:21:44.145
<v Speaker 0>because those have all got requests on them.

00:21:44.145 --> 00:21:46.065
<v Speaker 0>Right? I could just be adding up.

00:21:46.865 --> 00:21:50.385
<v Speaker 1>All those, like, system and Celeum and Rawk

00:21:50.385 --> 00:21:52.945
<v Speaker 1>deployments we We could check the requests

00:21:53.710 --> 00:21:54.110
<v Speaker 2>and

00:21:54.830 --> 00:21:56.829
<v Speaker 2>on the notes, see if

00:21:57.710 --> 00:21:59.789
<v Speaker 2>they are larger than the capacity, for example.

00:21:59.789 --> 00:22:00.269
<v Speaker 2>Right?

00:22:01.149 --> 00:22:01.789
<v Speaker 0>Yeah.

00:22:05.295 --> 00:22:06.895
<v Speaker 0>Yeah. That looks okay.

00:22:08.735 --> 00:22:09.775
<v Speaker 0>If

00:22:13.295 --> 00:22:14.975
<v Speaker 2>you want hints, you can always

00:22:15.615 --> 00:22:17.775
<v Speaker 2>you can have two in total, probably. Don't

00:22:17.775 --> 00:22:19.135
<v Speaker 0>know. Go back to you, Pierre. Go away.

00:22:20.250 --> 00:22:21.770
<v Speaker 1>I mean, we we could take the the

00:22:21.770 --> 00:22:23.290
<v Speaker 1>thing you just gave us and and actually

00:22:23.290 --> 00:22:25.210
<v Speaker 1>check those requests on the nodes and see

00:22:25.210 --> 00:22:27.130
<v Speaker 1>if if there's more requests than

00:22:27.370 --> 00:22:28.570
<v Speaker 0>Yeah. Available.

00:22:28.730 --> 00:22:30.970
<v Speaker 1>I mean, the node isn't breaking us wet.

00:22:30.970 --> 00:22:32.090
<v Speaker 0>Right? Yeah.

00:22:33.225 --> 00:22:33.784
<v Speaker 0>So,

00:22:34.105 --> 00:22:35.865
<v Speaker 0>does feel like this is all happening on

00:22:35.865 --> 00:22:36.185
<v Speaker 0>the

00:22:37.385 --> 00:22:39.065
<v Speaker 0>I didn't see anything in the Kubla config

00:22:39.065 --> 00:22:40.585
<v Speaker 0>there. So, yeah. Let's jump back to the

00:22:40.585 --> 00:22:41.865
<v Speaker 0>control plane. There has to be something on

00:22:41.865 --> 00:22:42.425
<v Speaker 0>the API.

00:22:46.000 --> 00:22:46.639
<v Speaker 0>I

00:22:48.240 --> 00:22:49.920
<v Speaker 0>need to speak with someone at teleport, that

00:22:49.920 --> 00:22:50.799
<v Speaker 0>bugs annoying.

00:22:54.559 --> 00:22:56.320
<v Speaker 0>So, where do you wanna check for request?

00:22:56.400 --> 00:22:57.200
<v Speaker 0>Of course.

00:22:58.160 --> 00:22:59.200
<v Speaker 0>In fact, did

00:22:59.840 --> 00:23:00.559
<v Speaker 0>we describe them?

00:23:01.355 --> 00:23:03.035
<v Speaker 0>Feeling so scarpered today. Don't know what that

00:23:03.035 --> 00:23:05.355
<v Speaker 0>is. We did describe the node. Right? We

00:23:05.355 --> 00:23:06.794
<v Speaker 1>did. And there was no

00:23:07.515 --> 00:23:08.395
<v Speaker 0>artificial

00:23:08.395 --> 00:23:10.155
<v Speaker 0>request or limits on that.

00:23:11.595 --> 00:23:12.794
<v Speaker 1>I don't think so.

00:23:13.515 --> 00:23:14.715
<v Speaker 1>Yes. We I don't know if we described

00:23:14.715 --> 00:23:16.470
<v Speaker 1>the control plan node, but we we described

00:23:16.470 --> 00:23:18.070
<v Speaker 1>the working on. Yeah. I think the working

00:23:18.070 --> 00:23:18.950
<v Speaker 0>on this

00:23:20.390 --> 00:23:22.550
<v Speaker 0>one. So k. So we got the infection

00:23:22.550 --> 00:23:24.070
<v Speaker 0>threshold limit here.

00:23:27.270 --> 00:23:29.029
<v Speaker 0>It has sufficient memory,

00:23:29.030 --> 00:23:30.230
<v Speaker 0>and that's happening a lot.

00:23:31.865 --> 00:23:34.504
<v Speaker 0>Trying to reclaim memory from the eviction here.

00:23:35.065 --> 00:23:36.104
<v Speaker 0>We can see

00:23:36.904 --> 00:23:39.225
<v Speaker 0>that we've actually only got 1% of requests

00:23:39.225 --> 00:23:40.824
<v Speaker 0>and 1% of limit.

00:23:41.705 --> 00:23:42.105
<v Speaker 1>Yeah.

00:23:44.549 --> 00:23:46.629
<v Speaker 0>Well, the vection threshold is

00:23:48.470 --> 00:23:49.990
<v Speaker 0>has to be that has to be Kubelay

00:23:49.990 --> 00:23:51.269
<v Speaker 0>configuration. Right?

00:23:51.590 --> 00:23:53.429
<v Speaker 2>There there is a hint in the Kubelay

00:23:53.429 --> 00:23:53.989
<v Speaker 2>config.

00:23:54.390 --> 00:23:56.789
<v Speaker 2>There is. Maybe. Yeah. Yes. There there is

00:23:56.789 --> 00:23:57.909
<v Speaker 2>something. Because

00:23:58.365 --> 00:24:01.164
<v Speaker 0>we're not memory constrained at all.

00:24:02.765 --> 00:24:04.925
<v Speaker 0>Which which means that it just feels like

00:24:04.925 --> 00:24:05.804
<v Speaker 0>it's kubect config.

00:24:12.139 --> 00:24:14.219
<v Speaker 1>Yeah. And it's not the

00:24:15.100 --> 00:24:16.539
<v Speaker 1>it's not getting evicted

00:24:16.620 --> 00:24:18.539
<v Speaker 1>based on too much memory use. It's just

00:24:18.539 --> 00:24:21.019
<v Speaker 1>never getting scheduled. So it's not something in

00:24:21.019 --> 00:24:22.700
<v Speaker 1>the Postgres

00:24:23.259 --> 00:24:25.179
<v Speaker 1>stateful set config.

00:24:25.740 --> 00:24:28.085
<v Speaker 1>Could be something else. But There are also

00:24:28.085 --> 00:24:30.565
<v Speaker 2>evicted bots. Right? There's a pending bot, but

00:24:30.565 --> 00:24:33.125
<v Speaker 2>some bots are also getting actively evicted.

00:24:33.605 --> 00:24:35.044
<v Speaker 1>True. So I

00:24:37.045 --> 00:24:38.325
<v Speaker 0>guess we're going back to the worker node

00:24:38.325 --> 00:24:38.645
<v Speaker 0>then.

00:24:42.309 --> 00:24:44.789
<v Speaker 0>Okay. Do you wanna pop open the Kubelet

00:24:44.789 --> 00:24:45.830
<v Speaker 0>config again?

00:24:46.549 --> 00:24:46.950
<v Speaker 0>Maybe.

00:25:18.750 --> 00:25:19.630
<v Speaker 1>Didn't mean to do that.

00:25:34.175 --> 00:25:36.015
<v Speaker 1>He told us there was there might be

00:25:36.015 --> 00:25:38.335
<v Speaker 1>a hint in here. Right? There's only 38

00:25:38.335 --> 00:25:38.735
<v Speaker 1>lines.

00:25:47.830 --> 00:25:49.830
<v Speaker 2>Would there be an easy way to figure

00:25:49.830 --> 00:25:52.149
<v Speaker 2>out what KubeADM usually spits out?

00:25:53.350 --> 00:25:55.845
<v Speaker 1>Yeah. Could you grab a a healthy config

00:25:55.845 --> 00:25:57.285
<v Speaker 1>and then we could diff them maybe or

00:25:57.285 --> 00:25:58.565
<v Speaker 1>at least take a look? I think we

00:25:58.565 --> 00:25:59.845
<v Speaker 0>can just run to generate

00:26:00.405 --> 00:26:00.965
<v Speaker 0>one.

00:26:01.445 --> 00:26:03.524
<v Speaker 0>I'm looking at all those zero seconds,

00:26:03.525 --> 00:26:04.565
<v Speaker 0>and I'm thinking,

00:26:06.165 --> 00:26:07.925
<v Speaker 0>are those a thing or am I making

00:26:07.925 --> 00:26:08.965
<v Speaker 0>too much of that at the end?

00:26:09.940 --> 00:26:12.420
<v Speaker 2>No. That that that's too much. Those are

00:26:12.420 --> 00:26:14.260
<v Speaker 2>there by default. I only I

00:26:14.900 --> 00:26:17.060
<v Speaker 2>appended a line to the config.

00:26:18.340 --> 00:26:20.260
<v Speaker 2>It's

00:26:20.260 --> 00:26:22.020
<v Speaker 2>at the it's it's at the end. Let's

00:26:22.100 --> 00:26:22.900
<v Speaker 2>we'll give this a second.

00:26:23.975 --> 00:26:25.654
<v Speaker 1>C group driver line?

00:26:25.975 --> 00:26:26.534
<v Speaker 1>Yes.

00:26:29.415 --> 00:26:32.135
<v Speaker 0>Alright. So we just ask to generate one

00:26:32.135 --> 00:26:33.815
<v Speaker 0>and we'll just do a death in there.

00:26:33.815 --> 00:26:35.015
<v Speaker 0>We'll see what happens.

00:26:35.655 --> 00:26:36.135
<v Speaker 1>Sure.

00:26:38.540 --> 00:26:40.620
<v Speaker 0>I I don't know the command.

00:26:41.100 --> 00:26:43.020
<v Speaker 0>I should not verify now.

00:26:43.180 --> 00:26:44.300
<v Speaker 0>Let's have a look.

00:26:44.620 --> 00:26:47.180
<v Speaker 0>But I'm pretty sure we can do a

00:26:57.414 --> 00:26:58.695
<v Speaker 0>That would be

00:27:01.895 --> 00:27:04.135
<v Speaker 2>there's some way to run the individual faces

00:27:04.135 --> 00:27:05.255
<v Speaker 2>or something. Yeah. There is.

00:27:06.910 --> 00:27:08.510
<v Speaker 0>I think it's under in it, and then

00:27:08.510 --> 00:27:09.710
<v Speaker 0>you can pass in.

00:27:13.950 --> 00:27:16.110
<v Speaker 2>Cube ADM diff. Is that a thing?

00:27:16.430 --> 00:27:18.430
<v Speaker 2>Somebody says the Cube ADM diff is a

00:27:18.430 --> 00:27:19.310
<v Speaker 2>thing. That would be cool.

00:27:20.425 --> 00:27:21.225
<v Speaker 0>Is it?

00:27:24.345 --> 00:27:26.985
<v Speaker 2>Everything else is alphabetical except for c group

00:27:26.985 --> 00:27:28.345
<v Speaker 2>driver. This is

00:27:29.385 --> 00:27:31.785
<v Speaker 0>This is a There is a thing.

00:27:33.740 --> 00:27:35.580
<v Speaker 0>I just don't remember off the top of

00:27:35.580 --> 00:27:37.980
<v Speaker 0>my head. So But this is not a

00:27:37.980 --> 00:27:39.580
<v Speaker 2>control plane node. Right? So we need don't

00:27:39.580 --> 00:27:41.260
<v Speaker 2>we need to join?

00:27:41.260 --> 00:27:41.740
<v Speaker 2>But

00:27:43.740 --> 00:27:45.260
<v Speaker 0>And it there we go.

00:27:49.015 --> 00:27:50.375
<v Speaker 2>Kube finalize.

00:27:51.575 --> 00:27:53.095
<v Speaker 2>Yeah. I think Kube let's start puts in

00:27:53.095 --> 00:27:55.735
<v Speaker 2>the bootstrap config, and Kube let's finalize does

00:27:55.735 --> 00:27:56.294
<v Speaker 2>the

00:28:07.390 --> 00:28:09.549
<v Speaker 0>Did I spell that wrong? Yeah. Alright.

00:28:12.910 --> 00:28:14.350
<v Speaker 0>Don't know if that's gonna run it.

00:28:21.255 --> 00:28:22.375
<v Speaker 2>Do you want me to tell you the

00:28:22.375 --> 00:28:23.975
<v Speaker 2>diff instead?

00:28:27.975 --> 00:28:29.335
<v Speaker 1>Yeah. I mean, for the sake of time,

00:28:29.335 --> 00:28:31.559
<v Speaker 1>it seems like Yep. And you've already hinted

00:28:31.559 --> 00:28:33.400
<v Speaker 1>that it's that last line. We just Yep.

00:28:33.400 --> 00:28:34.039
<v Speaker 2>So

00:28:34.760 --> 00:28:36.360
<v Speaker 2>yeah. There there there

00:28:37.080 --> 00:28:39.399
<v Speaker 2>are two things I changed in this config.

00:28:41.000 --> 00:28:42.279
<v Speaker 2>One is I

00:28:42.520 --> 00:28:44.920
<v Speaker 2>I am a system d. I love system

00:28:44.920 --> 00:28:46.725
<v Speaker 2>d, so I wanted try out the system

00:28:46.725 --> 00:28:48.325
<v Speaker 2>d c group driver.

00:28:49.125 --> 00:28:49.765
<v Speaker 2>And

00:28:50.245 --> 00:28:53.045
<v Speaker 2>I also and also changed the resolve conf

00:28:53.045 --> 00:28:53.924
<v Speaker 2>option.

00:28:53.925 --> 00:28:54.485
<v Speaker 2>But

00:28:55.525 --> 00:28:57.605
<v Speaker 2>so those two I touched. The only two

00:28:57.605 --> 00:28:58.085
<v Speaker 2>I touched.

00:28:59.250 --> 00:29:02.049
<v Speaker 2>Apart from that, there's a completely vanilla config.

00:29:05.330 --> 00:29:06.210
<v Speaker 1>Alright.

00:29:06.210 --> 00:29:06.850
<v Speaker 1>Yeah.

00:29:09.170 --> 00:29:11.090
<v Speaker 2>But I think the last one is probably

00:29:11.650 --> 00:29:13.730
<v Speaker 2>the first one to look at given that

00:29:14.565 --> 00:29:16.004
<v Speaker 2>that has more to do with the issues

00:29:16.004 --> 00:29:17.284
<v Speaker 2>we're seeing, probably.

00:29:18.085 --> 00:29:20.644
<v Speaker 0>Alright. I am going to look up Qubelet

00:29:20.644 --> 00:29:21.604
<v Speaker 0>driver

00:29:21.845 --> 00:29:24.404
<v Speaker 0>and see what the options are here because

00:29:24.404 --> 00:29:25.205
<v Speaker 0>I have no idea.

00:29:29.290 --> 00:29:32.170
<v Speaker 0>Apparently, it defaults to system d. Yep.

00:29:41.065 --> 00:29:43.545
<v Speaker 1>Oh, there's our Kubernetes minute command.

00:29:46.985 --> 00:29:47.625
<v Speaker 0>Yeah. So

00:29:49.065 --> 00:29:49.865
<v Speaker 2>Continue. Yeah.

00:29:53.220 --> 00:29:54.900
<v Speaker 0>So if that is the default, then you

00:29:54.900 --> 00:29:57.220
<v Speaker 0>haven't actually changed it. Right? Unless cluster API

00:29:57.220 --> 00:29:59.059
<v Speaker 0>doesn't use the system d c group driver

00:29:59.059 --> 00:29:59.940
<v Speaker 0>by default.

00:30:00.179 --> 00:30:02.100
<v Speaker 0>Or maybe this is one two one docs.

00:30:02.100 --> 00:30:03.619
<v Speaker 0>Is this just a new change?

00:30:04.980 --> 00:30:06.980
<v Speaker 2>So the the c group driver there was

00:30:06.980 --> 00:30:08.660
<v Speaker 2>already a c group driver line that I

00:30:08.660 --> 00:30:09.059
<v Speaker 2>added

00:30:09.595 --> 00:30:11.114
<v Speaker 2>It had something else before.

00:30:11.515 --> 00:30:12.714
<v Speaker 2>So Mhmm.

00:30:12.875 --> 00:30:13.514
<v Speaker 1>Yeah.

00:30:14.075 --> 00:30:16.634
<v Speaker 1>So, yeah, maybe check the older version. Yeah.

00:30:16.875 --> 00:30:17.674
<v Speaker 2>Yep.

00:30:18.715 --> 00:30:19.914
<v Speaker 0>Oh, thanks. Oh, no.

00:30:25.450 --> 00:30:26.970
<v Speaker 0>And of course the search goes back to

00:30:26.970 --> 00:30:28.170
<v Speaker 0>the latest version.

00:30:29.850 --> 00:30:33.370
<v Speaker 0>Alright. Let's copy the bit after the thing

00:30:34.294 --> 00:30:35.734
<v Speaker 0>and then come here.

00:30:39.015 --> 00:30:40.695
<v Speaker 2>The page doesn't exist.

00:30:42.375 --> 00:30:43.254
<v Speaker 2>Darn it.

00:30:44.775 --> 00:30:45.815
<v Speaker 0>Kubernetes

00:30:45.815 --> 00:30:46.375
<v Speaker 0>component.

00:30:49.440 --> 00:30:50.000
<v Speaker 0>K

00:30:55.920 --> 00:30:56.799
<v Speaker 0>this is

00:30:57.120 --> 00:30:58.080
<v Speaker 0>frustrating.

00:30:58.960 --> 00:31:01.200
<v Speaker 0>Why can't I find that page on that

00:31:01.200 --> 00:31:02.160
<v Speaker 0>version of the doc?

00:31:10.135 --> 00:31:11.254
<v Speaker 0>Okay. Tasks,

00:31:11.415 --> 00:31:13.894
<v Speaker 0>administer cluster q b d m.

00:31:15.335 --> 00:31:15.575
<v Speaker 0>So

00:31:19.309 --> 00:31:20.989
<v Speaker 0>where's that menu bar now?

00:31:22.190 --> 00:31:22.909
<v Speaker 0>Right.

00:31:22.990 --> 00:31:23.789
<v Speaker 0>Task.

00:31:25.070 --> 00:31:26.509
<v Speaker 0>Administer a cluster.

00:31:28.110 --> 00:31:28.750
<v Speaker 0>Just step three.

00:31:35.575 --> 00:31:37.975
<v Speaker 0>And configure secret. Oh, it's not in the

00:31:37.975 --> 00:31:38.615
<v Speaker 0>docs.

00:31:39.174 --> 00:31:41.095
<v Speaker 2>No. It's new docs.

00:31:41.735 --> 00:31:42.534
<v Speaker 2>Sorry.

00:31:43.255 --> 00:31:45.255
<v Speaker 1>Maybe there only used to be one option,

00:31:45.255 --> 00:31:47.174
<v Speaker 1>so they didn't say anything about it.

00:31:48.779 --> 00:31:50.460
<v Speaker 0>Well, that at least explains

00:31:50.460 --> 00:31:51.980
<v Speaker 0>why we're

00:31:51.980 --> 00:31:54.220
<v Speaker 0>unable to look this up. Yeah. Well, let's

00:31:54.220 --> 00:31:55.419
<v Speaker 0>see if we could just take a look

00:31:55.419 --> 00:31:58.220
<v Speaker 0>at this. This wonderful brand new one twenty

00:31:58.220 --> 00:32:01.019
<v Speaker 0>one dot, which default to system deep, apparently

00:32:01.260 --> 00:32:02.940
<v Speaker 0>prior to that was not the case.

00:32:03.575 --> 00:32:04.294
<v Speaker 0>So

00:32:08.935 --> 00:32:10.774
<v Speaker 1>c group f s, is that?

00:32:11.175 --> 00:32:11.735
<v Speaker 1>Yeah.

00:32:12.455 --> 00:32:14.855
<v Speaker 0>Okay. So the c group f s driver.

00:32:14.855 --> 00:32:17.400
<v Speaker 0>Yeah. I'm it says here to continue using

00:32:17.400 --> 00:32:18.759
<v Speaker 0>that. Good catch that.

00:32:19.480 --> 00:32:21.640
<v Speaker 0>Well, we just Yeah. Found some random Stack

00:32:21.640 --> 00:32:24.120
<v Speaker 1>Overflow page that mentioned c c group f

00:32:24.120 --> 00:32:26.120
<v Speaker 1>s. So we've got two sources that state

00:32:26.120 --> 00:32:27.880
<v Speaker 1>that as a potential candidate.

00:32:28.405 --> 00:32:30.965
<v Speaker 0>Or should we migrate to the system d

00:32:30.965 --> 00:32:33.045
<v Speaker 0>driver following the correct instructions

00:32:33.045 --> 00:32:35.684
<v Speaker 0>correctly, which which Adrian did not do. So

00:32:36.165 --> 00:32:37.845
<v Speaker 1>Let's

00:32:37.845 --> 00:32:39.845
<v Speaker 1>revert to to cgroupfs,

00:32:39.845 --> 00:32:40.085
<v Speaker 1>I think.

00:32:41.350 --> 00:32:42.870
<v Speaker 0>Yeah. I think that's a good call. Let's

00:32:42.870 --> 00:32:45.029
<v Speaker 0>just get it working, and then you can

00:32:45.270 --> 00:32:47.590
<v Speaker 0>it in to share what exactly is happening

00:32:47.590 --> 00:32:49.190
<v Speaker 0>here. So I'll

00:32:49.830 --> 00:32:51.510
<v Speaker 0>I'll do the control plane. Do wanna update

00:32:51.510 --> 00:32:52.150
<v Speaker 0>the worker node?

00:32:53.525 --> 00:32:55.365
<v Speaker 1>Yep. I just updated on the the worker

00:32:55.365 --> 00:32:58.405
<v Speaker 1>node. Alright. Nice. Yeah. I I have a

00:32:58.405 --> 00:33:00.565
<v Speaker 2>high level of confidence this might fix it,

00:33:00.565 --> 00:33:01.524
<v Speaker 2>but I'm not sure.

00:33:02.085 --> 00:33:04.804
<v Speaker 2>Yep. So we need to restart on our

00:33:04.804 --> 00:33:05.285
<v Speaker 0>Kiplet.

00:33:11.760 --> 00:33:12.799
<v Speaker 0>Alright. Nice.

00:33:13.280 --> 00:33:15.040
<v Speaker 0>Alright. I will give you the honors of

00:33:15.040 --> 00:33:17.440
<v Speaker 0>running a get pods on our control player.

00:33:17.440 --> 00:33:19.120
<v Speaker 0>Let's see if that has helped at all.

00:33:19.120 --> 00:33:21.040
<v Speaker 0>I'll pop over

00:33:20.684 --> 00:33:22.764
<v Speaker 0>to the chat and I'm sure everyone is

00:33:22.764 --> 00:33:23.964
<v Speaker 0>yelling at us.

00:33:25.404 --> 00:33:27.804
<v Speaker 0>So no confirmed as zero sort of default.

00:33:27.804 --> 00:33:29.164
<v Speaker 0>You know, I fall for these zeros in

00:33:29.164 --> 00:33:31.245
<v Speaker 0>the Kubernetes config all the time in default

00:33:31.245 --> 00:33:32.924
<v Speaker 0>versus something nefarious.

00:33:34.140 --> 00:33:36.380
<v Speaker 0>You mentioned in dev, it doesn't exist. That's

00:33:36.380 --> 00:33:38.060
<v Speaker 0>a great idea for a sub command though.

00:33:38.060 --> 00:33:39.260
<v Speaker 0>Let's make that happen.

00:33:40.540 --> 00:33:42.700
<v Speaker 0>Ben noticed that everything was in alphabetical order

00:33:42.700 --> 00:33:44.940
<v Speaker 0>except the secret driver. Yeah. I never thought

00:33:44.940 --> 00:33:46.300
<v Speaker 0>of checking that. Very clever.

00:33:46.934 --> 00:33:48.534
<v Speaker 1>It looks like we have a new error,

00:33:48.534 --> 00:33:49.334
<v Speaker 1>though, at least.

00:33:49.735 --> 00:33:51.894
<v Speaker 2>Yeah. We're in unknown territory now, though. I

00:33:51.894 --> 00:33:53.014
<v Speaker 2>don't know how to fix it from here

00:33:53.014 --> 00:33:54.134
<v Speaker 2>on. So this is

00:33:57.575 --> 00:33:58.215
<v Speaker 1>Great.

00:34:01.270 --> 00:34:03.670
<v Speaker 1>He he did mention changing that one other

00:34:04.150 --> 00:34:04.870
<v Speaker 1>config.

00:34:08.230 --> 00:34:09.830
<v Speaker 0>Okay. What's the

00:34:11.590 --> 00:34:12.630
<v Speaker 1>resolve conf?

00:34:14.505 --> 00:34:16.105
<v Speaker 2>Yeah. But it's not related to the issues

00:34:16.105 --> 00:34:18.264
<v Speaker 2>we're seeing now. Okay. So I think that's

00:34:18.264 --> 00:34:19.864
<v Speaker 0>just because we've changed it. Right? And we

00:34:19.864 --> 00:34:22.905
<v Speaker 0>have running processes probably using the system d

00:34:23.464 --> 00:34:24.185
<v Speaker 0>driver.

00:34:25.160 --> 00:34:26.920
<v Speaker 2>Yeah. So now there's like two views of

00:34:26.920 --> 00:34:28.040
<v Speaker 2>the world. Right?

00:34:28.440 --> 00:34:30.280
<v Speaker 2>So I don't know. Maybe we should

00:34:30.600 --> 00:34:33.400
<v Speaker 2>restart container d or something on the on

00:34:33.400 --> 00:34:34.600
<v Speaker 0>the the

00:34:35.560 --> 00:34:36.600
<v Speaker 0>that are running.

00:34:37.239 --> 00:34:39.400
<v Speaker 0>What we would have to do is probably

00:34:39.945 --> 00:34:42.185
<v Speaker 2>We can cordon and uncordon.

00:34:42.905 --> 00:34:43.065
<v Speaker 0>We

00:34:44.344 --> 00:34:46.745
<v Speaker 2>Can we check system details status just to

00:34:46.745 --> 00:34:48.985
<v Speaker 2>see what processes are running and stuff on

00:34:48.985 --> 00:34:49.945
<v Speaker 2>the on the worker?

00:34:52.580 --> 00:34:54.820
<v Speaker 0>Well, the control plane is degraded anyway, and

00:34:54.820 --> 00:34:56.020
<v Speaker 0>they are the same there. Gotcha.

00:34:57.620 --> 00:34:59.540
<v Speaker 2>And if we scroll down a bit,

00:35:00.180 --> 00:35:01.940
<v Speaker 2>just see what what stuff is running. There's

00:35:01.940 --> 00:35:03.860
<v Speaker 2>a lot of output here. It should show.

00:35:04.740 --> 00:35:05.060
<v Speaker 2>So

00:35:07.005 --> 00:35:07.725
<v Speaker 2>So

00:35:10.204 --> 00:35:11.964
<v Speaker 2>here is all the containers running. So it

00:35:11.964 --> 00:35:13.565
<v Speaker 2>still seems to be using the

00:35:13.805 --> 00:35:15.885
<v Speaker 2>system DC group driver. That's why it shows

00:35:15.885 --> 00:35:17.484
<v Speaker 2>up nicely here even

00:35:17.484 --> 00:35:18.685
<v Speaker 2>though we changed it.

00:35:19.805 --> 00:35:20.125
<v Speaker 2>So

00:35:21.180 --> 00:35:23.260
<v Speaker 0>Nice. That is a horrible way to break

00:35:23.260 --> 00:35:24.060
<v Speaker 0>a cluster.

00:35:24.380 --> 00:35:25.020
<v Speaker 0>Yeah.

00:35:30.700 --> 00:35:31.500
<v Speaker 0>Okay.

00:35:31.740 --> 00:35:32.460
<v Speaker 0>Let's think.

00:35:35.135 --> 00:35:37.135
<v Speaker 0>I say we make the system d secret

00:35:37.135 --> 00:35:38.095
<v Speaker 0>driver work.

00:35:40.974 --> 00:35:42.494
<v Speaker 1>How hard can that be? With the the

00:35:42.494 --> 00:35:44.095
<v Speaker 1>upgrade path on the

00:35:44.335 --> 00:35:45.535
<v Speaker 1>on the docs?

00:35:45.695 --> 00:35:47.695
<v Speaker 0>Oh, it's actually telling us to drain the

00:35:47.695 --> 00:35:48.494
<v Speaker 0>node

00:35:49.140 --> 00:35:51.380
<v Speaker 0>and then restart the kubelet. So

00:35:53.460 --> 00:35:54.740
<v Speaker 0>yeah. We can do that.

00:35:56.019 --> 00:35:56.900
<v Speaker 1>Alright.

00:35:58.819 --> 00:36:01.380
<v Speaker 2>Throw random system d at the cluster and

00:36:01.380 --> 00:36:03.025
<v Speaker 2>it breaks. Alright.

00:36:03.025 --> 00:36:04.625
<v Speaker 2>Let's I like this comment. Let's stick with

00:36:04.625 --> 00:36:06.465
<v Speaker 0>the worker node right now. So let's update

00:36:06.465 --> 00:36:08.545
<v Speaker 0>it. Let's set it back to system d.

00:36:12.545 --> 00:36:13.185
<v Speaker 0>Yep.

00:36:14.465 --> 00:36:14.865
<v Speaker 1>D.

00:36:15.720 --> 00:36:18.360
<v Speaker 1>Oop. That means Oh, no. That one doesn't

00:36:18.360 --> 00:36:19.240
<v Speaker 2>exist yet.

00:36:21.000 --> 00:36:21.480
<v Speaker 0>So

00:36:22.200 --> 00:36:23.880
<v Speaker 0>And then we have to drain and or

00:36:23.880 --> 00:36:25.320
<v Speaker 0>or we need to Do we need to

00:36:25.320 --> 00:36:26.600
<v Speaker 1>restart, or you're do that after?

00:36:29.615 --> 00:36:30.815
<v Speaker 1>Do we need to restart the cube load?

00:36:30.815 --> 00:36:31.934
<v Speaker 1>Or wanna do that after we drain it?

00:36:31.934 --> 00:36:33.934
<v Speaker 1>I guess it yeah. I think with how

00:36:33.934 --> 00:36:35.295
<v Speaker 0>fucked that is right now, I don't I

00:36:35.295 --> 00:36:37.055
<v Speaker 0>probably it doesn't make I think it would

00:36:37.055 --> 00:36:39.615
<v Speaker 2>just restart it for now. It's fine. Yeah.

00:36:39.694 --> 00:36:41.295
<v Speaker 0>But after I get notes, and I'm just

00:36:41.295 --> 00:36:42.335
<v Speaker 0>gonna drain

00:36:42.655 --> 00:36:43.934
<v Speaker 2>Yeah. Our worker.

00:36:50.050 --> 00:36:52.050
<v Speaker 0>Okay. It's now being cordoned,

00:36:52.530 --> 00:36:54.850
<v Speaker 0>workloads will start to drain off of it.

00:36:55.970 --> 00:36:57.730
<v Speaker 0>What we can do now is that we

00:36:57.730 --> 00:37:00.125
<v Speaker 0>actually stop the kubelet. We've had the kubelets

00:37:00.125 --> 00:37:02.045
<v Speaker 0>only thing running because there's nothing else here.

00:37:02.125 --> 00:37:03.964
<v Speaker 0>The daemon sets will be on it. We

00:37:03.964 --> 00:37:05.485
<v Speaker 0>can restart those manually.

00:37:06.125 --> 00:37:08.045
<v Speaker 2>Did we restart the kubelet already

00:37:08.685 --> 00:37:09.485
<v Speaker 0>or not?

00:37:10.445 --> 00:37:12.685
<v Speaker 0>We have one. Yeah. But I think when

00:37:12.685 --> 00:37:14.285
<v Speaker 0>the I did it before he cordoned it

00:37:14.285 --> 00:37:16.690
<v Speaker 1>though, I think. Yeah. Yeah. She wanted to

00:37:16.850 --> 00:37:18.930
<v Speaker 0>Hey. Look at this. There is a container

00:37:18.930 --> 00:37:20.770
<v Speaker 2>creating now for that.

00:37:21.250 --> 00:37:21.890
<v Speaker 2>Oh.

00:37:23.010 --> 00:37:25.010
<v Speaker 2>But I think now because we restarted it

00:37:25.010 --> 00:37:27.810
<v Speaker 2>again. Oh, it's it's something is running. It's

00:37:27.810 --> 00:37:30.095
<v Speaker 2>good. It's running. We have zero

00:37:30.095 --> 00:37:32.415
<v Speaker 1>of one ready, though. Yeah. Do you wanna

00:37:32.415 --> 00:37:34.255
<v Speaker 0>uncord it or note? Or did you do

00:37:34.255 --> 00:37:35.055
<v Speaker 0>that already?

00:37:35.455 --> 00:37:36.335
<v Speaker 1>I did not.

00:37:36.815 --> 00:37:38.335
<v Speaker 1>But how is it scheduled?

00:37:39.935 --> 00:37:40.735
<v Speaker 1>Interesting.

00:37:41.215 --> 00:37:42.655
<v Speaker 1>Scheduled onto the control plane?

00:37:43.760 --> 00:37:45.520
<v Speaker 2>Oh, wait. I think it did it didn't

00:37:45.520 --> 00:37:47.760
<v Speaker 2>actually it complained that it couldn't drain. Look.

00:37:47.760 --> 00:37:49.760
<v Speaker 2>Unable to drain. Oh. Oh, but then it

00:37:49.760 --> 00:37:51.359
<v Speaker 2>should still be cordoned, right, even if it

00:37:51.359 --> 00:37:53.040
<v Speaker 2>didn't drain it? Or

00:37:59.174 --> 00:38:00.535
<v Speaker 0>I think if it's We can't delete the

00:38:00.535 --> 00:38:02.375
<v Speaker 0>pods with the the storage. Right? So we

00:38:02.375 --> 00:38:03.815
<v Speaker 0>could have just sold it to delete the

00:38:03.815 --> 00:38:05.575
<v Speaker 0>empty chairs because they're not required.

00:38:05.895 --> 00:38:06.535
<v Speaker 0>But

00:38:06.855 --> 00:38:08.214
<v Speaker 0>I think we've done enough to get it

00:38:08.214 --> 00:38:10.375
<v Speaker 0>back online. Right? That that pod is coming.

00:38:11.020 --> 00:38:13.740
<v Speaker 2>That part is coming. Oh. Yeah. It's

00:38:15.580 --> 00:38:18.460
<v Speaker 2>it's back. Alright. Let's unload and

00:38:19.660 --> 00:38:19.820
<v Speaker 1>Yeah.

00:38:21.820 --> 00:38:23.980
<v Speaker 0>Let's let's get a port forward running, see

00:38:23.980 --> 00:38:25.420
<v Speaker 0>if we can have our application and try

00:38:25.420 --> 00:38:25.820
<v Speaker 0>the update.

00:38:26.605 --> 00:38:28.205
<v Speaker 0>Like, all we need to do is get

00:38:28.205 --> 00:38:30.605
<v Speaker 0>our app working and then Yeah. If we

00:38:30.605 --> 00:38:33.245
<v Speaker 2>get the updates mission accomplished. Right? Exactly. Yeah.

00:38:36.285 --> 00:38:37.165
<v Speaker 0>You

00:38:37.165 --> 00:38:39.005
<v Speaker 0>can just do a cube control on card

00:38:39.005 --> 00:38:40.445
<v Speaker 0>and then the node name.

00:38:42.270 --> 00:38:43.710
<v Speaker 1>I don't know the node name. Yeah. I

00:38:43.710 --> 00:38:44.750
<v Speaker 0>don't know the node name.

00:38:47.710 --> 00:38:48.670
<v Speaker 1>The worker.

00:38:50.430 --> 00:38:52.110
<v Speaker 0>I still find it weird that those pods

00:38:52.110 --> 00:38:53.790
<v Speaker 0>got scheduled and run

00:38:54.270 --> 00:38:56.030
<v Speaker 0>on it. It was cordoned.

00:38:57.095 --> 00:38:58.135
<v Speaker 1>We're done.

00:39:01.174 --> 00:39:01.895
<v Speaker 0>Okay.

00:39:02.375 --> 00:39:05.095
<v Speaker 0>I'll jump over to my local terminal for

00:39:05.095 --> 00:39:06.135
<v Speaker 0>the port forward.

00:39:06.694 --> 00:39:07.895
<v Speaker 0>Okay. I'm here to set it up on

00:39:07.895 --> 00:39:09.575
<v Speaker 0>teleport so that we can just expose it

00:39:09.575 --> 00:39:10.454
<v Speaker 0>from the

00:39:11.220 --> 00:39:13.300
<v Speaker 0>the UI, but I haven't done it yet.

00:39:13.700 --> 00:39:14.420
<v Speaker 0>So,

00:39:16.660 --> 00:39:17.700
<v Speaker 0>get pods.

00:39:22.740 --> 00:39:23.540
<v Speaker 0>Or forward.

00:39:33.725 --> 00:39:34.445
<v Speaker 0>Uh-huh.

00:39:36.205 --> 00:39:36.525
<v Speaker 1>No.

00:39:44.050 --> 00:39:46.610
<v Speaker 0>Oh, no. There's there's Oh, well, actually,

00:39:48.450 --> 00:39:50.770
<v Speaker 0>the daemon sets will need restarted with our

00:39:50.770 --> 00:39:52.130
<v Speaker 0>cilium pods. Right?

00:39:52.690 --> 00:39:54.210
<v Speaker 0>And so if you wanna do a cue

00:39:54.210 --> 00:39:56.370
<v Speaker 0>control get pods on our cilium namespace,

00:39:56.675 --> 00:39:58.515
<v Speaker 0>we probably have no networking at all in

00:39:58.515 --> 00:39:59.315
<v Speaker 0>our cluster.

00:40:01.155 --> 00:40:02.275
<v Speaker 1>Oh, what?

00:40:04.515 --> 00:40:06.355
<v Speaker 0>No. I will just throw out my idea

00:40:06.355 --> 00:40:08.355
<v Speaker 0>here, which is the one I try not

00:40:08.355 --> 00:40:10.275
<v Speaker 0>to recommend anyone try at home, but it's

00:40:10.275 --> 00:40:11.955
<v Speaker 0>to do delete pods all on the Selium

00:40:11.955 --> 00:40:14.250
<v Speaker 0>namespace. I'm totally okay with that if you

00:40:14.250 --> 00:40:16.330
<v Speaker 0>wanna if you wanna But they're

00:40:16.490 --> 00:40:18.650
<v Speaker 2>ready. Too current, too ready.

00:40:18.890 --> 00:40:20.650
<v Speaker 2>Too up to date, too available.

00:40:22.650 --> 00:40:23.610
<v Speaker 0>That's

00:40:27.385 --> 00:40:29.145
<v Speaker 1>Let's let's try it.

00:40:30.984 --> 00:40:34.265
<v Speaker 2>Never hurts. Oh. Pods dash dash all.

00:40:34.825 --> 00:40:35.625
<v Speaker 0>Oh,

00:40:35.625 --> 00:40:36.905
<v Speaker 0>that's a very interesting.

00:40:37.625 --> 00:40:38.184
<v Speaker 2>Oh, no.

00:40:39.890 --> 00:40:41.890
<v Speaker 2>No. It's no. No. It was just in

00:40:42.210 --> 00:40:43.890
<v Speaker 2>Cillium. No. It was just in Cillium.

00:40:44.450 --> 00:40:45.970
<v Speaker 1>It was just a lot. Just okay. It

00:40:45.970 --> 00:40:46.690
<v Speaker 2>was just a lot of

00:40:48.290 --> 00:40:48.930
<v Speaker 2>I

00:40:49.410 --> 00:40:51.090
<v Speaker 0>only bail if they got the fear. It's

00:40:51.090 --> 00:40:51.330
<v Speaker 0>okay.

00:40:55.475 --> 00:40:57.075
<v Speaker 0>Alright. What does it get pods look like

00:40:57.075 --> 00:40:57.795
<v Speaker 0>by then?

00:40:59.155 --> 00:41:01.235
<v Speaker 1>That hasn't returned yet. But

00:41:02.515 --> 00:41:04.355
<v Speaker 2>Yeah. We can Yeah.

00:41:04.675 --> 00:41:07.075
<v Speaker 2>Just control c. It just usually waits for

00:41:07.075 --> 00:41:09.620
<v Speaker 2>the thing to finish. We don't have to.

00:41:10.500 --> 00:41:11.220
<v Speaker 2>Okay.

00:41:14.660 --> 00:41:15.220
<v Speaker 0>That's

00:41:16.500 --> 00:41:19.060
<v Speaker 0>Celeb m one's coming up. Container creating.

00:41:21.515 --> 00:41:23.595
<v Speaker 0>Okay. Yeah. I see that's

00:41:23.914 --> 00:41:25.035
<v Speaker 0>to look quite healthy.

00:41:33.835 --> 00:41:34.970
<v Speaker 0>Yep. Give it a few moment a few

00:41:34.970 --> 00:41:35.770
<v Speaker 0>more seconds.

00:41:47.545 --> 00:41:49.704
<v Speaker 1>Alright. We got some more things. Coming.

00:41:50.825 --> 00:41:51.224
<v Speaker 1>Alright.

00:42:02.850 --> 00:42:04.850
<v Speaker 0>So can you do a dash o wide?

00:42:04.850 --> 00:42:07.330
<v Speaker 0>What what node are those first two on?

00:42:11.964 --> 00:42:13.885
<v Speaker 0>Control play. I don't think did we restart

00:42:13.885 --> 00:42:16.845
<v Speaker 0>the kubelet there after updating the config?

00:42:19.165 --> 00:42:22.285
<v Speaker 1>On the control plane? Yeah. Not not sure.

00:42:22.285 --> 00:42:23.484
<v Speaker 0>Yeah. I don't think I don't think I

00:42:23.484 --> 00:42:25.085
<v Speaker 0>I think I updated the config, but I

00:42:25.085 --> 00:42:26.605
<v Speaker 0>don't think I restarted the kubelet on the

00:42:26.605 --> 00:42:27.165
<v Speaker 0>control plane.

00:42:33.670 --> 00:42:35.590
<v Speaker 1>What do I do? So I'll see system

00:42:35.590 --> 00:42:36.470
<v Speaker 1>CPR.

00:42:40.230 --> 00:42:41.990
<v Speaker 0>Noel in the chat has said that the

00:42:41.990 --> 00:42:44.165
<v Speaker 0>docs say this field should not be updated

00:42:44.165 --> 00:42:46.245
<v Speaker 0>without fully rebooting the node.

00:42:49.605 --> 00:42:51.605
<v Speaker 0>Well I don't read I don't read docs.

00:42:51.605 --> 00:42:51.845
<v Speaker 2>That's

00:42:52.965 --> 00:42:54.565
<v Speaker 2>otherwise, the clusters don't break.

00:42:55.250 --> 00:42:57.329
<v Speaker 0>So the sandbox for those first two pods

00:42:57.329 --> 00:43:00.130
<v Speaker 0>will already be created under the the

00:43:00.369 --> 00:43:01.570
<v Speaker 0>maybe the wrong

00:43:02.690 --> 00:43:03.250
<v Speaker 0>yeah.

00:43:03.650 --> 00:43:05.410
<v Speaker 0>I think we may have to delete those

00:43:05.410 --> 00:43:06.610
<v Speaker 0>two pods and

00:43:06.770 --> 00:43:09.155
<v Speaker 0>try and encourage it to restart again. I'm

00:43:09.155 --> 00:43:11.075
<v Speaker 0>not sure. Are they running on the control

00:43:11.075 --> 00:43:13.155
<v Speaker 2>plane? Yeah. They are. Yeah. They are.

00:43:14.515 --> 00:43:16.275
<v Speaker 2>Let's give it a bit of encouragement.

00:43:16.275 --> 00:43:16.515
<v Speaker 1>Yeah.

00:43:28.890 --> 00:43:31.370
<v Speaker 0>Let's see what I get pods shows us

00:43:31.370 --> 00:43:31.690
<v Speaker 0>there.

00:43:40.345 --> 00:43:40.985
<v Speaker 1>Same.

00:43:41.145 --> 00:43:43.865
<v Speaker 1>I guess let's describe and see what Let's

00:43:43.865 --> 00:43:45.944
<v Speaker 0>describe another Do have a preference between the

00:43:45.944 --> 00:43:48.265
<v Speaker 1>operator and the the other one?

00:43:48.905 --> 00:43:51.580
<v Speaker 0>Let's do the second one just because it's

00:43:51.580 --> 00:43:53.020
<v Speaker 0>in a in a container stage. So it's

00:43:53.020 --> 00:43:55.100
<v Speaker 0>actually beyond container create, and I think

00:43:55.340 --> 00:43:55.980
<v Speaker 0>don't know.

00:43:56.300 --> 00:43:57.580
<v Speaker 0>Do you think can get some

00:44:04.619 --> 00:44:06.635
<v Speaker 0>k. Oh, yeah. It's not happy.

00:44:20.390 --> 00:44:22.870
<v Speaker 1>Expected c groups path to be a format.

00:44:22.870 --> 00:44:23.510
<v Speaker 1>Blah.

00:44:24.550 --> 00:44:26.470
<v Speaker 1>So, yeah, it's still looking for this.

00:44:27.670 --> 00:44:29.990
<v Speaker 2>Can we just restart the cubelets one more

00:44:29.990 --> 00:44:31.670
<v Speaker 2>time on on that node?

00:44:32.710 --> 00:44:33.270
<v Speaker 0>Why not?

00:44:35.664 --> 00:44:37.664
<v Speaker 2>I actually did follow the docs for updating

00:44:37.664 --> 00:44:40.545
<v Speaker 2>to the the the system DC group driver.

00:44:40.545 --> 00:44:42.865
<v Speaker 2>So we might have gotten ourselves in a

00:44:42.865 --> 00:44:44.545
<v Speaker 2>worse scenario than we

00:44:44.865 --> 00:44:46.625
<v Speaker 2>started. Maybe. I don't know.

00:44:59.840 --> 00:45:00.720
<v Speaker 0>It's broken.

00:45:01.665 --> 00:45:02.465
<v Speaker 0>Oh, yeah.

00:45:02.865 --> 00:45:05.585
<v Speaker 1>Should we just validate that we correctly updated

00:45:05.585 --> 00:45:08.465
<v Speaker 1>those Kubelet configs and didn't fool ourselves, like,

00:45:08.465 --> 00:45:10.545
<v Speaker 1>have not saved correctly or something? Let's do

00:45:10.545 --> 00:45:11.025
<v Speaker 0>it.

00:45:12.225 --> 00:45:14.465
<v Speaker 2>Maybe we can can we return this to

00:45:14.465 --> 00:45:16.690
<v Speaker 2>system d and restart it? Just That's what

00:45:16.690 --> 00:45:19.090
<v Speaker 1>we tried. I thought we did. I've obviously

00:45:19.650 --> 00:45:21.570
<v Speaker 0>been a bit We forgot to hit save.

00:45:21.730 --> 00:45:23.810
<v Speaker 2>Yeah. Because the control play note, it was

00:45:23.810 --> 00:45:25.650
<v Speaker 2>was not broken when I left it. This

00:45:25.650 --> 00:45:26.610
<v Speaker 2>is something we

00:45:27.490 --> 00:45:28.370
<v Speaker 2>we have introduced

00:45:29.315 --> 00:45:30.275
<v Speaker 2>ourselves

00:45:30.675 --> 00:45:32.595
<v Speaker 2>accidentally, which is fine. It's more fun. You

00:45:32.595 --> 00:45:34.275
<v Speaker 0>said give me one job and I I

00:45:34.275 --> 00:45:35.155
<v Speaker 0>broke it.

00:45:40.035 --> 00:45:42.035
<v Speaker 0>We may maybe have to encourage those pods

00:45:42.035 --> 00:45:43.155
<v Speaker 0>again. I'm not sure.

00:45:47.460 --> 00:45:50.500
<v Speaker 2>Yeah. If if it's still screwing up, I

00:45:50.500 --> 00:45:53.060
<v Speaker 2>would maybe try to reboot the control plane.

00:45:53.060 --> 00:45:55.300
<v Speaker 2>No. That's not a horrible idea, actually.

00:45:56.420 --> 00:45:58.020
<v Speaker 0>Bare metal does not reboot quickly.

00:45:58.525 --> 00:45:59.405
<v Speaker 2>Oh, yeah.

00:45:59.565 --> 00:46:01.885
<v Speaker 2>Well, we can maybe k exec into itself.

00:46:01.885 --> 00:46:03.485
<v Speaker 2>That's a nice hack too.

00:46:03.965 --> 00:46:04.685
<v Speaker 0>Sure.

00:46:04.925 --> 00:46:05.645
<v Speaker 2>Yep.

00:46:07.885 --> 00:46:10.365
<v Speaker 2>But I think this should probably get get

00:46:10.365 --> 00:46:13.529
<v Speaker 2>it back up and running. Let's see. Okay.

00:46:13.529 --> 00:46:16.089
<v Speaker 2>There we go. There we go. Good. Okay.

00:46:16.089 --> 00:46:18.890
<v Speaker 0>So I'm gonna read the report forward.

00:46:19.690 --> 00:46:20.330
<v Speaker 1>Mhmm.

00:46:20.569 --> 00:46:22.410
<v Speaker 1>Do we think the Click. The test work

00:46:22.410 --> 00:46:23.130
<v Speaker 1>will help?

00:46:23.369 --> 00:46:23.609
<v Speaker 1>Hey.

00:46:25.235 --> 00:46:26.035
<v Speaker 2>You

00:46:26.035 --> 00:46:27.955
<v Speaker 2>you fixed it. Good.

00:46:28.515 --> 00:46:29.875
<v Speaker 1>So now do we need to try to

00:46:29.875 --> 00:46:32.995
<v Speaker 1>upgrade it, David? Is that I'm a bit

00:46:32.995 --> 00:46:35.555
<v Speaker 0>worried that I have reload, and it's

00:46:35.875 --> 00:46:37.315
<v Speaker 0>not quite broken again.

00:46:40.910 --> 00:46:43.470
<v Speaker 2>Yeah. It's finished reloading. Right? Okay. It's just

00:46:43.470 --> 00:46:45.309
<v Speaker 0>timing out very slowly. I have to do

00:46:45.309 --> 00:46:46.670
<v Speaker 0>the two second time out to that, so

00:46:46.670 --> 00:46:47.470
<v Speaker 0>that's annoying.

00:46:47.630 --> 00:46:50.430
<v Speaker 0>Okay. Let's check our service for

00:46:50.990 --> 00:46:51.550
<v Speaker 0>Postgres.

00:47:01.025 --> 00:47:02.465
<v Speaker 0>And we just wanna make sure it's got

00:47:02.465 --> 00:47:03.905
<v Speaker 0>some end points I guess.

00:47:08.465 --> 00:47:09.985
<v Speaker 2>It does. It does.

00:47:11.930 --> 00:47:13.770
<v Speaker 0>What was the error again? Was that

00:47:14.490 --> 00:47:16.410
<v Speaker 0>filter lookup address? Okay.

00:47:18.010 --> 00:47:19.609
<v Speaker 0>Do we as core DNS running?

00:47:25.255 --> 00:47:27.735
<v Speaker 0>But we wanna probably run a get pods

00:47:27.735 --> 00:47:30.615
<v Speaker 0>in the cube system namespace.

00:47:34.855 --> 00:47:36.055
<v Speaker 0>Is. Looks like it's running.

00:47:39.359 --> 00:47:41.520
<v Speaker 0>Maybe we should try to port forward again.

00:47:47.040 --> 00:47:49.680
<v Speaker 1>Oh, it also restarted once more. That restart

00:47:49.680 --> 00:47:50.480
<v Speaker 1>number is climbing.

00:47:59.655 --> 00:48:00.775
<v Speaker 0>Oh, it's working.

00:48:02.935 --> 00:48:04.375
<v Speaker 0>And I fixed the video encoding.

00:48:06.950 --> 00:48:07.670
<v Speaker 0>Alright.

00:48:07.750 --> 00:48:10.230
<v Speaker 0>Sid, go for it. Let's update this application.

00:48:11.270 --> 00:48:12.150
<v Speaker 1>Alright.

00:48:14.230 --> 00:48:16.549
<v Speaker 1>This deployment is just named clustered? It is.

00:48:16.549 --> 00:48:19.270
<v Speaker 0>Yeah. I'm very confused why it's working. That's

00:48:19.270 --> 00:48:19.510
<v Speaker 2>funny.

00:48:22.175 --> 00:48:25.455
<v Speaker 2>I added another another little booby trap that

00:48:25.455 --> 00:48:27.455
<v Speaker 2>I was expecting to be triggered, but it

00:48:27.455 --> 00:48:28.175
<v Speaker 2>didn't.

00:48:28.575 --> 00:48:30.255
<v Speaker 1>It's fun. So we just want v two

00:48:30.255 --> 00:48:32.575
<v Speaker 1>on the image tag? Yeah. Please go for

00:48:32.575 --> 00:48:34.770
<v Speaker 0>it. Then maybe it will break now because

00:48:34.770 --> 00:48:37.250
<v Speaker 2>we update this. Let's see. Very curious. Who

00:48:37.250 --> 00:48:37.810
<v Speaker 1>knows?

00:48:39.250 --> 00:48:41.170
<v Speaker 0>Alright. We'll spend a few more minutes on

00:48:41.170 --> 00:48:43.570
<v Speaker 0>this, and then we'll switch. Container creating. That's

00:48:43.570 --> 00:48:44.050
<v Speaker 2>good.

00:48:44.450 --> 00:48:45.170
<v Speaker 2>Terminating.

00:48:46.285 --> 00:48:48.925
<v Speaker 0>Alright. Let's run get pods.

00:48:49.565 --> 00:48:51.325
<v Speaker 0>Reconfigure our port forward.

00:48:52.605 --> 00:48:53.645
<v Speaker 2>This looks good.

00:48:56.205 --> 00:48:58.045
<v Speaker 0>I heard that better tone in your voice

00:48:58.045 --> 00:48:58.605
<v Speaker 0>there.

00:48:59.405 --> 00:48:59.645
<v Speaker 2>It working?

00:49:01.530 --> 00:49:02.970
<v Speaker 2>Why is it working?

00:49:04.330 --> 00:49:05.930
<v Speaker 0>Why is it still v one?

00:49:07.210 --> 00:49:08.330
<v Speaker 1>Still v one.

00:49:15.315 --> 00:49:16.835
<v Speaker 1>Let's just edit again.

00:49:18.275 --> 00:49:19.635
<v Speaker 1>Did not take

00:49:20.994 --> 00:49:23.555
<v Speaker 1>it says v two there. Yeah. I wonder

00:49:23.555 --> 00:49:25.155
<v Speaker 0>if it Did it it bring up the

00:49:25.155 --> 00:49:27.714
<v Speaker 2>new the new version already? Yeah. In pot?

00:49:30.520 --> 00:49:32.119
<v Speaker 0>I mean, of course, when I was updating

00:49:32.119 --> 00:49:34.680
<v Speaker 0>the Is it maybe caching in the browser?

00:49:37.400 --> 00:49:38.280
<v Speaker 0>Wait. Is

00:49:40.760 --> 00:49:42.360
<v Speaker 1>that v two? Yes.

00:49:42.920 --> 00:49:43.240
<v Speaker 0>Yay.

00:49:45.974 --> 00:49:47.975
<v Speaker 1>That's good. That's good.

00:49:49.095 --> 00:49:50.535
<v Speaker 0>Yeah. Alright.

00:49:50.775 --> 00:49:53.175
<v Speaker 0>Good job. I didn't like that one. Well,

00:49:53.575 --> 00:49:55.975
<v Speaker 1>thanks for dragging me along there, David.

00:49:57.974 --> 00:49:59.815
<v Speaker 0>So you wanna fill us in on that?

00:50:00.970 --> 00:50:03.450
<v Speaker 2>On what what I broke? Yeah. Basically?

00:50:03.770 --> 00:50:04.730
<v Speaker 2>Yeah. So

00:50:05.610 --> 00:50:08.970
<v Speaker 2>I I am a vivid system d user,

00:50:08.970 --> 00:50:10.330
<v Speaker 2>and I was like, why isn't this running

00:50:10.330 --> 00:50:12.010
<v Speaker 2>the system d c group driver?

00:50:12.545 --> 00:50:13.825
<v Speaker 2>So I changed it.

00:50:14.625 --> 00:50:15.905
<v Speaker 2>And then I

00:50:16.785 --> 00:50:18.705
<v Speaker 2>which just means that system d is responsible

00:50:18.705 --> 00:50:21.105
<v Speaker 2>for managing the c group tree. And every

00:50:21.105 --> 00:50:23.025
<v Speaker 2>node in the c group tree is managed

00:50:23.025 --> 00:50:24.785
<v Speaker 2>by a system d unit, and you can

00:50:24.785 --> 00:50:26.065
<v Speaker 2>set limits

00:50:26.545 --> 00:50:27.505
<v Speaker 2>on each of the

00:50:28.730 --> 00:50:31.690
<v Speaker 2>c groups created using system d unit files.

00:50:32.250 --> 00:50:33.050
<v Speaker 2>So I

00:50:33.450 --> 00:50:35.930
<v Speaker 2>limited q pots dot slice to only use

00:50:36.170 --> 00:50:38.650
<v Speaker 2>to allow 100 megabytes of memory,

00:50:39.290 --> 00:50:41.690
<v Speaker 2>and this doesn't get reflected by Kubernetes. And

00:50:41.690 --> 00:50:43.130
<v Speaker 2>it's like, oh, I have all the memory

00:50:43.130 --> 00:50:45.245
<v Speaker 2>I need, and it keeps scheduling things. And

00:50:45.245 --> 00:50:47.005
<v Speaker 2>then system d starts

00:50:48.125 --> 00:50:50.685
<v Speaker 2>throwing OMs at the thing, and then Kubelet

00:50:50.685 --> 00:50:51.245
<v Speaker 2>says,

00:50:51.965 --> 00:50:53.565
<v Speaker 2>oh, this bot is in a very this

00:50:53.565 --> 00:50:55.085
<v Speaker 2>node is in a very bad state. It's

00:50:55.085 --> 00:50:57.325
<v Speaker 2>under memory pressure. We shouldn't schedule more things.

00:50:57.325 --> 00:50:59.190
<v Speaker 2>So Well, we've got just makes sense. Yeah.

00:50:59.190 --> 00:51:01.670
<v Speaker 0>Place, though. Right? Yeah. But I think we

00:51:01.670 --> 00:51:03.270
<v Speaker 2>kind of because we moved back to c

00:51:03.270 --> 00:51:06.310
<v Speaker 2>group f s, it kind of fixed itself

00:51:06.390 --> 00:51:07.190
<v Speaker 2>somehow.

00:51:07.830 --> 00:51:08.470
<v Speaker 2>Yeah.

00:51:09.110 --> 00:51:10.870
<v Speaker 2>So I I just made one change on

00:51:10.870 --> 00:51:12.845
<v Speaker 2>the worker node, and that's at this drop

00:51:12.845 --> 00:51:15.565
<v Speaker 2>in file for QPods dot slice in somewhere

00:51:15.565 --> 00:51:17.005
<v Speaker 2>in Etsy system d.

00:51:18.125 --> 00:51:21.244
<v Speaker 2>There's a Oh, yeah. QPods dot slice dot

00:51:21.244 --> 00:51:21.885
<v Speaker 2>d.

00:51:22.365 --> 00:51:23.724
<v Speaker 2>And this is the only thing I touched,

00:51:23.724 --> 00:51:25.724
<v Speaker 2>and then everything broke. So

00:51:25.964 --> 00:51:26.685
<v Speaker 2>so

00:51:27.460 --> 00:51:28.020
<v Speaker 2>yeah.

00:51:28.420 --> 00:51:29.860
<v Speaker 2>Yeah. Yeah.

00:51:29.860 --> 00:51:31.620
<v Speaker 2>And I broke one more thing, but it

00:51:31.620 --> 00:51:34.580
<v Speaker 2>didn't it stopped breaking is that I made

00:51:34.900 --> 00:51:36.900
<v Speaker 2>core DNS points to

00:51:37.300 --> 00:51:38.740
<v Speaker 2>to the Etsyresolvecom

00:51:38.740 --> 00:51:40.855
<v Speaker 2>from the hosts. And because I'm a system

00:51:40.855 --> 00:51:41.495
<v Speaker 2>d

00:51:41.975 --> 00:51:43.415
<v Speaker 2>advocate, I changed

00:51:43.415 --> 00:51:44.295
<v Speaker 2>Etsyresolvecom

00:51:44.295 --> 00:51:46.455
<v Speaker 2>to point to system dresolved,

00:51:47.095 --> 00:51:48.775
<v Speaker 2>which happens to have the same IP address

00:51:48.775 --> 00:51:51.175
<v Speaker 2>as core DNS, which would cause core DNS

00:51:51.175 --> 00:51:53.050
<v Speaker 2>to end up in a loop forever and

00:51:53.050 --> 00:51:55.290
<v Speaker 2>crash. But that didn't happen, which was interesting.

00:51:55.290 --> 00:51:56.490
<v Speaker 2>It did happen yesterday.

00:51:57.130 --> 00:51:59.930
<v Speaker 2>So but yeah. So that that breakage didn't

00:51:59.930 --> 00:52:00.890
<v Speaker 2>happen, but

00:52:01.369 --> 00:52:02.329
<v Speaker 2>but the other one was

00:52:03.450 --> 00:52:04.970
<v Speaker 2>I was like, this much should have as

00:52:04.970 --> 00:52:07.450
<v Speaker 2>much memory. The stuff in the area namespace,

00:52:07.445 --> 00:52:08.805
<v Speaker 1>was that just a red herring?

00:52:08.965 --> 00:52:10.645
<v Speaker 1>Just a bunch of Yeah. It was just

00:52:10.645 --> 00:52:12.405
<v Speaker 2>me trying to deploy, and I didn't clean

00:52:12.405 --> 00:52:13.445
<v Speaker 2>up after myself

00:52:13.845 --> 00:52:16.005
<v Speaker 2>just to see if things failed to deploy.

00:52:16.244 --> 00:52:16.805
<v Speaker 2>Yeah.

00:52:17.845 --> 00:52:19.525
<v Speaker 2>I did make sure to delete the bash

00:52:19.525 --> 00:52:21.320
<v Speaker 2>history on the nodes so that it wouldn't

00:52:21.320 --> 00:52:23.080
<v Speaker 2>be obvious what I changed, but I forgot

00:52:23.080 --> 00:52:25.800
<v Speaker 2>the the the Arian namespace.

00:52:25.960 --> 00:52:27.320
<v Speaker 2>Yeah. Alright. So

00:52:27.960 --> 00:52:29.480
<v Speaker 0>I mean, there's there's a whole bunch of

00:52:29.480 --> 00:52:30.840
<v Speaker 0>stuff there. I had no idea. But, like,

00:52:30.840 --> 00:52:32.840
<v Speaker 0>I've never modified the secret driver because why

00:52:32.840 --> 00:52:34.280
<v Speaker 0>would anyone in the right mind do that?

00:52:34.845 --> 00:52:37.005
<v Speaker 2>Yeah. So it should it should default to

00:52:37.005 --> 00:52:39.325
<v Speaker 2>the system d one. It's just that's I

00:52:39.325 --> 00:52:40.045
<v Speaker 2>noticed,

00:52:40.525 --> 00:52:42.685
<v Speaker 2>for some reason, cluster API doesn't use it

00:52:42.685 --> 00:52:43.245
<v Speaker 2>yet.

00:52:43.725 --> 00:52:45.484
<v Speaker 2>There was this issue. I was like, maybe

00:52:45.484 --> 00:52:47.490
<v Speaker 2>we can wreck havoc with this. This is

00:52:47.490 --> 00:52:47.970
<v Speaker 2>interesting.

00:52:49.010 --> 00:52:49.650
<v Speaker 0>So

00:52:51.170 --> 00:52:52.450
<v Speaker 0>Alright. Well,

00:52:52.610 --> 00:52:54.690
<v Speaker 0>thank you very much. I hate to eat

00:52:54.690 --> 00:52:55.890
<v Speaker 0>every second of that.

00:52:57.170 --> 00:52:59.170
<v Speaker 2>The server lies about its amount of memory,

00:52:59.170 --> 00:53:00.450
<v Speaker 2>and there's nothing you can do about it.

00:53:01.425 --> 00:53:03.265
<v Speaker 0>Yeah. But now it's but now it's time

00:53:03.265 --> 00:53:04.385
<v Speaker 2>for revenge. Right?

00:53:05.105 --> 00:53:05.905
<v Speaker 0>Yes.

00:53:05.905 --> 00:53:08.065
<v Speaker 0>Definitely. Now I have to suffer.

00:53:09.105 --> 00:53:10.065
<v Speaker 0>Alright.

00:53:10.065 --> 00:53:11.985
<v Speaker 0>You wanna join our session? We are now

00:53:11.985 --> 00:53:13.665
<v Speaker 0>dealing with SID cluster.

00:53:14.390 --> 00:53:17.030
<v Speaker 2>Yeah. I see an active session. I click

00:53:17.030 --> 00:53:17.910
<v Speaker 2>options,

00:53:17.910 --> 00:53:19.110
<v Speaker 2>join session.

00:53:21.190 --> 00:53:23.590
<v Speaker 0>I will I see you typing. Configure

00:53:23.590 --> 00:53:25.430
<v Speaker 0>the bits and pieces that we need.

00:53:25.750 --> 00:53:27.110
<v Speaker 0>And I will give you the honors of

00:53:27.110 --> 00:53:28.870
<v Speaker 0>checking for an API server.

00:53:30.255 --> 00:53:32.815
<v Speaker 0>And the echo hello. Yeah. Fair play.

00:53:35.454 --> 00:53:37.455
<v Speaker 2>It's alive, but we're missing a pod.

00:53:37.775 --> 00:53:38.895
<v Speaker 2>This is right.

00:53:39.535 --> 00:53:41.535
<v Speaker 0>That is great. Do we still even have

00:53:41.535 --> 00:53:42.174
<v Speaker 0>a deployment?

00:53:47.010 --> 00:53:47.890
<v Speaker 2>We do.

00:53:48.370 --> 00:53:49.250
<v Speaker 2>Interesting.

00:53:52.130 --> 00:53:54.850
<v Speaker 2>Do we want to describe it to see

00:53:56.130 --> 00:53:56.850
<v Speaker 0>Mhmm.

00:53:56.930 --> 00:53:58.050
<v Speaker 0>Let's do that. What's going on?

00:54:04.325 --> 00:54:05.125
<v Speaker 0>Reload.

00:54:07.125 --> 00:54:08.005
<v Speaker 2>It says

00:54:11.285 --> 00:54:13.605
<v Speaker 0>let's see. I mean, the rep Oh, yeah.

00:54:13.605 --> 00:54:16.000
<v Speaker 0>Is set to zero. Oh, yeah. I'm also

00:54:16.000 --> 00:54:17.440
<v Speaker 2>gonna open the chat at the same time

00:54:17.440 --> 00:54:18.240
<v Speaker 2>so I can

00:54:18.559 --> 00:54:20.320
<v Speaker 2>steal hints from other people.

00:54:21.039 --> 00:54:21.680
<v Speaker 2>Just

00:54:22.240 --> 00:54:24.160
<v Speaker 2>let me move you down.

00:54:24.640 --> 00:54:26.799
<v Speaker 0>I think you need to scale this one

00:54:26.799 --> 00:54:28.720
<v Speaker 0>up, and I always love waiting to see

00:54:28.720 --> 00:54:30.705
<v Speaker 0>how people decide to scale that. Some people

00:54:30.705 --> 00:54:31.985
<v Speaker 0>edit requirements,

00:54:31.985 --> 00:54:33.345
<v Speaker 0>some people do a proper

00:54:33.585 --> 00:54:35.745
<v Speaker 0>scale up. Let me I'm gonna edit this,

00:54:35.745 --> 00:54:37.025
<v Speaker 2>I think. Yeah.

00:54:37.505 --> 00:54:40.145
<v Speaker 2>Because you said that word first and then

00:54:41.505 --> 00:54:42.945
<v Speaker 2>it's like, oh, yeah. That makes sense. I

00:54:42.945 --> 00:54:43.505
<v Speaker 2>could edit it.

00:54:45.579 --> 00:54:48.540
<v Speaker 2>Yeah. Somebody messed with this. Generation six. So

00:54:48.540 --> 00:54:49.819
<v Speaker 2>there were a lot of edits to this

00:54:49.819 --> 00:54:50.859
<v Speaker 2>thing. So I have a feeling there will

00:54:50.859 --> 00:54:51.580
<v Speaker 2>be more

00:54:52.140 --> 00:54:54.859
<v Speaker 2>more issues when I change this. But how

00:54:54.859 --> 00:54:57.020
<v Speaker 2>many replicas do we want? Just one? Yeah.

00:54:57.020 --> 00:54:57.980
<v Speaker 0>We only need one.

00:55:00.755 --> 00:55:01.475
<v Speaker 0>Okay.

00:55:05.235 --> 00:55:07.315
<v Speaker 2>That's scary. That was that was what we

00:55:07.315 --> 00:55:08.035
<v Speaker 1>needed to happen.

00:55:14.630 --> 00:55:17.430
<v Speaker 1>I wanna check other namespaces now. There's there's

00:55:17.430 --> 00:55:18.950
<v Speaker 0>a trap. Were you worried that that wasn't

00:55:18.950 --> 00:55:20.869
<v Speaker 0>gonna happen there for a second? That was

00:55:20.869 --> 00:55:23.109
<v Speaker 1>just that was my I I had deployed

00:55:23.109 --> 00:55:25.109
<v Speaker 1>something, and and there was waiting for that

00:55:25.109 --> 00:55:26.915
<v Speaker 1>to happen. So Oh, look at that. We

00:55:26.915 --> 00:55:29.155
<v Speaker 0>have Oh, I have the the

00:55:29.155 --> 00:55:30.035
<v Speaker 2>scroll

00:55:30.035 --> 00:55:32.835
<v Speaker 2>bar issue, I think. Yeah. You can reload.

00:55:33.075 --> 00:55:35.155
<v Speaker 2>It fixes it. Yep. Okay.

00:55:35.315 --> 00:55:36.515
<v Speaker 2>Let me try to

00:55:36.915 --> 00:55:39.520
<v Speaker 2>leave this page. Yeah. That's much better.

00:55:39.839 --> 00:55:42.960
<v Speaker 0>Okay. No. No. No. For me. Why is

00:55:42.960 --> 00:55:43.520
<v Speaker 2>this?

00:55:44.720 --> 00:55:45.600
<v Speaker 2>Oh, I I

00:55:45.920 --> 00:55:47.920
<v Speaker 2>already regret signing up for this.

00:55:51.039 --> 00:55:52.079
<v Speaker 2>I'm just curious

00:55:53.685 --> 00:55:57.125
<v Speaker 2>Alright. Okay. So let's maybe look oh, no.

00:55:57.125 --> 00:55:59.605
<v Speaker 2>It happened again. Oh, that's because I reloaded.

00:56:00.245 --> 00:56:01.125
<v Speaker 2>Okay. So

00:56:02.165 --> 00:56:03.605
<v Speaker 2>and will that now happen to you when

00:56:03.605 --> 00:56:04.405
<v Speaker 2>I reload

00:56:04.565 --> 00:56:07.190
<v Speaker 2>or not? Yeah. I'm gonna try Chrome. I've

00:56:07.190 --> 00:56:09.030
<v Speaker 0>never actually tried a different browser to see

00:56:09.030 --> 00:56:10.790
<v Speaker 2>if that helps. So let's do that. But

00:56:10.790 --> 00:56:12.309
<v Speaker 2>I think it's just trying to sync the

00:56:12.309 --> 00:56:14.309
<v Speaker 2>two sizes because you're zoomed in more than

00:56:14.309 --> 00:56:16.150
<v Speaker 2>I am. I think this is what's causing

00:56:16.150 --> 00:56:16.710
<v Speaker 2>the

00:56:18.465 --> 00:56:21.185
<v Speaker 0>Oh, really? Okay. Oh, no. And they're all

00:56:21.425 --> 00:56:23.985
<v Speaker 2>oh, they're all these namespaces were created, like,

00:56:23.985 --> 00:56:26.225
<v Speaker 2>ten seconds ago. No.

00:56:26.705 --> 00:56:27.825
<v Speaker 2>What did you do?

00:56:29.745 --> 00:56:31.345
<v Speaker 2>Yeah. I think it's just syncing the size

00:56:31.345 --> 00:56:33.585
<v Speaker 2>of our two windows. That's that's the problem.

00:56:35.720 --> 00:56:38.599
<v Speaker 0>That's Actually, resizing my window fixed it. I'm

00:56:38.599 --> 00:56:39.720
<v Speaker 0>gonna leave it like that.

00:56:47.795 --> 00:56:48.835
<v Speaker 0>Wait. So

00:56:49.875 --> 00:56:51.954
<v Speaker 0>is UUID is what you often use for

00:56:51.954 --> 00:56:53.315
<v Speaker 0>your namespace nameset?

00:56:54.994 --> 00:56:57.075
<v Speaker 1>It it makes sure I don't have a

00:56:57.075 --> 00:56:58.115
<v Speaker 1>collision I guess.

00:56:59.395 --> 00:57:00.355
<v Speaker 0>Oh, not a virus.

00:57:02.450 --> 00:57:04.049
<v Speaker 0>I don't mind not a virus pods as

00:57:04.049 --> 00:57:06.130
<v Speaker 0>long as there's not a crypto minor pod

00:57:06.130 --> 00:57:06.690
<v Speaker 0>too.

00:57:06.930 --> 00:57:07.329
<v Speaker 0>Oh,

00:57:08.210 --> 00:57:10.609
<v Speaker 2>it's why is everything so oh, no. I

00:57:10.609 --> 00:57:10.849
<v Speaker 2>have

00:57:11.569 --> 00:57:12.290
<v Speaker 2>okay.

00:57:14.210 --> 00:57:16.289
<v Speaker 2>David, how are we gonna get this out

00:57:16.289 --> 00:57:16.930
<v Speaker 2>of our cluster?

00:57:17.724 --> 00:57:19.165
<v Speaker 0>Get what out of our cluster?

00:57:20.045 --> 00:57:21.565
<v Speaker 2>The the everything.

00:57:25.165 --> 00:57:26.045
<v Speaker 0>Oh, man.

00:57:26.525 --> 00:57:28.125
<v Speaker 0>Do want me to delete all the UUID

00:57:28.125 --> 00:57:29.085
<v Speaker 0>namespaces?

00:57:29.405 --> 00:57:31.245
<v Speaker 2>Yeah. We could write. Maybe I

00:57:32.125 --> 00:57:33.240
<v Speaker 2>I don't even want to know what's in

00:57:33.240 --> 00:57:34.360
<v Speaker 2>there. I just want to get rid of

00:57:34.360 --> 00:57:36.360
<v Speaker 2>it. But I'm kind of scared because some

00:57:36.360 --> 00:57:37.960
<v Speaker 2>of them are, like, two seconds old. So

00:57:37.960 --> 00:57:40.360
<v Speaker 2>I have a feeling there's something nefarious. Yeah.

00:57:40.360 --> 00:57:42.040
<v Speaker 0>You're right. Yeah. Okay.

00:57:42.360 --> 00:57:44.280
<v Speaker 2>Yeah. So I wonder if it's gonna help.

00:57:44.925 --> 00:57:47.645
<v Speaker 2>But we can try it. That's Well, let's

00:57:47.645 --> 00:57:49.565
<v Speaker 0>let's think about this. Right? So

00:57:49.965 --> 00:57:52.525
<v Speaker 0>we actually did modify our deployment. It went

00:57:52.525 --> 00:57:55.005
<v Speaker 0>through and then an event triggered it. So

00:57:57.200 --> 00:57:59.120
<v Speaker 0>I don't think this was a mutating web

00:57:59.120 --> 00:58:01.280
<v Speaker 0>configuration. Of course, we could double check.

00:58:01.520 --> 00:58:02.800
<v Speaker 0>But the fact that the edit went through

00:58:02.800 --> 00:58:04.320
<v Speaker 0>and we got a new event suggest that

00:58:04.320 --> 00:58:07.040
<v Speaker 0>there's potential controller running on our cluster, but

00:58:07.040 --> 00:58:08.320
<v Speaker 0>it's also watching the resource.

00:58:09.515 --> 00:58:11.355
<v Speaker 2>But why why wouldn't it be a mute

00:58:11.515 --> 00:58:12.555
<v Speaker 2>like, this is the first thing I would

00:58:12.555 --> 00:58:14.315
<v Speaker 2>think of like, maybe it would be something

00:58:14.315 --> 00:58:15.675
<v Speaker 0>like Because then because if we have as

00:58:15.675 --> 00:58:17.435
<v Speaker 0>a museum web configuration, we wouldn't have got

00:58:17.435 --> 00:58:18.635
<v Speaker 0>the scale down event.

00:58:19.035 --> 00:58:20.395
<v Speaker 0>I see. Because it would never have changed

00:58:20.395 --> 00:58:22.155
<v Speaker 0>in the first place. I see. I see.

00:58:22.155 --> 00:58:24.155
<v Speaker 2>So it's not something blocking it. It's just

00:58:24.450 --> 00:58:27.970
<v Speaker 2>something else watching it. Yes. I think. I

00:58:27.970 --> 00:58:30.210
<v Speaker 0>see. Let's let's check. Right?

00:58:30.770 --> 00:58:33.250
<v Speaker 0>Yeah. There's no mistake in my configuration. So

00:58:33.250 --> 00:58:35.570
<v Speaker 0>this is another controller probably running on one

00:58:35.570 --> 00:58:36.690
<v Speaker 0>of these names. Yeah.

00:58:37.810 --> 00:58:40.290
<v Speaker 2>Do we maybe want to Sorry. Need check.

00:58:40.585 --> 00:58:43.545
<v Speaker 2>Maybe want to check what service accounts

00:58:43.545 --> 00:58:45.065
<v Speaker 2>there are or like

00:58:46.185 --> 00:58:48.505
<v Speaker 0>Well, my thinking is, right, with the time

00:58:48.665 --> 00:58:50.265
<v Speaker 0>on these namespaces

00:58:50.425 --> 00:58:51.465
<v Speaker 0>is that the

00:58:51.945 --> 00:58:53.785
<v Speaker 0>not a virus workload will not be running

00:58:53.785 --> 00:58:55.545
<v Speaker 0>in one of those namespaces because they're too

00:58:55.545 --> 00:58:57.510
<v Speaker 0>ephemeral. So I think we should just stick

00:58:57.510 --> 00:58:58.790
<v Speaker 0>to looking at maybe

00:58:59.670 --> 00:59:01.750
<v Speaker 0>the five namespaces that we know and trust

00:59:01.750 --> 00:59:04.550
<v Speaker 0>and see what's running in here. Mhmm. Yep.

00:59:04.550 --> 00:59:05.350
<v Speaker 2>Makes sense.

00:59:05.670 --> 00:59:07.270
<v Speaker 0>So let's do a

00:59:07.670 --> 00:59:09.990
<v Speaker 0>why don't we do a get pods all

00:59:09.990 --> 00:59:10.390
<v Speaker 0>correct.

00:59:12.355 --> 00:59:14.995
<v Speaker 2>Running or something. Yeah.

00:59:15.635 --> 00:59:16.755
<v Speaker 2>That sounds good.

00:59:18.675 --> 00:59:19.395
<v Speaker 0>Okay.

00:59:22.355 --> 00:59:24.420
<v Speaker 0>We do have a couple of We have

00:59:24.420 --> 00:59:26.100
<v Speaker 2>not a virus which is running.

00:59:26.579 --> 00:59:29.060
<v Speaker 2>A lot of them, actually. Oh, no.

00:59:30.500 --> 00:59:32.100
<v Speaker 2>Do we want to maybe

00:59:32.339 --> 00:59:33.700
<v Speaker 2>describe one of those pods?

00:59:37.075 --> 00:59:38.995
<v Speaker 0>Yeah. Go for it. Scrape one.

00:59:41.795 --> 00:59:43.555
<v Speaker 2>Oh, but I need to know what namespace

00:59:43.555 --> 00:59:45.315
<v Speaker 2>it is. Right? Oh, no.

00:59:45.795 --> 00:59:46.835
<v Speaker 2>Okay. Wait.

00:59:47.555 --> 00:59:50.675
<v Speaker 2>I'm gonna open just scrape all namespaces pods

00:59:50.675 --> 00:59:51.795
<v Speaker 0>and then just that name.

00:59:52.630 --> 00:59:54.230
<v Speaker 2>Yep. Yeah. There should be one of those

00:59:54.230 --> 00:59:56.550
<v Speaker 1>pods in each UUID

00:59:56.550 --> 00:59:57.510
<v Speaker 1>namespace.

01:00:03.990 --> 01:00:05.590
<v Speaker 2>Paste. So if you I can do it.

01:00:08.075 --> 01:00:09.994
<v Speaker 2>Like, will this work? No. I cannot do

01:00:09.994 --> 01:00:12.474
<v Speaker 2>that. Kevin is looking for home describe all

01:00:12.474 --> 01:00:14.395
<v Speaker 1>the pods in one namespace. There's only one

01:00:14.395 --> 01:00:16.155
<v Speaker 1>pod in each of those namespace. I see.

01:00:16.155 --> 01:00:18.155
<v Speaker 2>I see. That makes things that.

01:00:19.190 --> 01:00:21.990
<v Speaker 2>So let's do again this. Pick one that

01:00:21.990 --> 01:00:22.869
<v Speaker 2>is running.

01:00:26.150 --> 01:00:27.910
<v Speaker 2>We pick our favorite namespace.

01:00:35.325 --> 01:00:36.925
<v Speaker 2>Let me paste it.

01:00:38.205 --> 01:00:38.925
<v Speaker 2>K.

01:00:40.685 --> 01:00:41.405
<v Speaker 2>So

01:00:42.205 --> 01:00:44.765
<v Speaker 2>there is a container called slash

01:00:44.765 --> 01:00:45.725
<v Speaker 2>clustered.

01:00:46.125 --> 01:00:46.605
<v Speaker 0>Indeed.

01:00:49.060 --> 01:00:50.900
<v Speaker 2>Do we want to know what's in there?

01:00:50.900 --> 01:00:53.140
<v Speaker 0>It's using the downward API, though.

01:00:55.780 --> 01:00:57.460
<v Speaker 2>What what is

01:00:57.619 --> 01:01:00.435
<v Speaker 2>downward API? I have no clue. A way

01:01:00.435 --> 01:01:02.435
<v Speaker 2>to I think something needs from the cluster

01:01:02.435 --> 01:01:04.675
<v Speaker 0>into the pods so you can consume it.

01:01:04.675 --> 01:01:07.155
<v Speaker 0>Usually, like, the IP address of the control

01:01:07.155 --> 01:01:09.795
<v Speaker 0>plan or or something like that or the

01:01:09.795 --> 01:01:11.235
<v Speaker 0>pod name itself. You can push down a

01:01:11.235 --> 01:01:11.795
<v Speaker 0>whole bunch of stuff.

01:01:12.560 --> 01:01:13.440
<v Speaker 0>Interesting.

01:01:14.160 --> 01:01:16.640
<v Speaker 0>So I So this seems like this way,

01:01:16.640 --> 01:01:19.440
<v Speaker 2>it's hooking into the the the Kubernetes API

01:01:19.440 --> 01:01:20.240
<v Speaker 2>somehow.

01:01:20.880 --> 01:01:21.520
<v Speaker 0>Yeah.

01:01:21.680 --> 01:01:23.280
<v Speaker 0>And we've got a conflict map called the

01:01:23.280 --> 01:01:26.935
<v Speaker 0>Kubernetes root CA. So it's actually using our

01:01:27.415 --> 01:01:30.615
<v Speaker 0>I would imagine Kubernetes admin cert.

01:01:30.855 --> 01:01:31.815
<v Speaker 0>Now

01:01:33.175 --> 01:01:34.694
<v Speaker 0>depending on whether we want to

01:01:35.415 --> 01:01:37.015
<v Speaker 0>I mean, we could delete that config map

01:01:37.015 --> 01:01:38.775
<v Speaker 0>and then those pods can't modify anything on

01:01:38.775 --> 01:01:40.135
<v Speaker 0>the API server anymore.

01:01:41.160 --> 01:01:42.600
<v Speaker 2>Yeah. I'm con so

01:01:43.000 --> 01:01:45.400
<v Speaker 2>you want to delete the the cube root

01:01:45.400 --> 01:01:47.079
<v Speaker 2>c a dot c r t. Well, let's

01:01:47.079 --> 01:01:48.280
<v Speaker 0>take a look at it first. But, yeah,

01:01:48.280 --> 01:01:49.480
<v Speaker 0>I'm I I think if we if we

01:01:49.480 --> 01:01:50.839
<v Speaker 0>get rid of it, it should stop the

01:01:50.839 --> 01:01:53.480
<v Speaker 0>the radius. Just want to know what's namespace

01:01:53.480 --> 01:01:55.079
<v Speaker 2>that config map is. Right?

01:01:56.545 --> 01:01:59.345
<v Speaker 2>Like, maybe it's duplicated across all the

01:02:00.305 --> 01:02:01.505
<v Speaker 2>let's just look at the

01:02:03.505 --> 01:02:05.745
<v Speaker 2>okay. So we have a volume amount

01:02:06.305 --> 01:02:09.425
<v Speaker 2>for this service account. Blah blah blah.

01:02:12.869 --> 01:02:15.590
<v Speaker 2>K. So here is the the weird stuff.

01:02:18.710 --> 01:02:19.430
<v Speaker 0>Yeah.

01:02:20.150 --> 01:02:21.829
<v Speaker 0>So it's using the download API to know

01:02:21.829 --> 01:02:22.790
<v Speaker 0>what namespace it's in.

01:02:29.105 --> 01:02:30.705
<v Speaker 2>Yeah. You'll have to help me here. I've

01:02:30.705 --> 01:02:33.105
<v Speaker 2>never seen this downward API volume

01:02:33.345 --> 01:02:35.265
<v Speaker 2>type. This is only Let's see how many

01:02:35.265 --> 01:02:36.705
<v Speaker 0>of these things we've got. Right? Look at

01:02:36.865 --> 01:02:38.145
<v Speaker 2>Oh, no. Yes.

01:02:38.305 --> 01:02:39.265
<v Speaker 2>Great. So

01:02:40.520 --> 01:02:43.320
<v Speaker 0>I want to describe one of them first.

01:02:43.320 --> 01:02:43.640
<v Speaker 2>Mhmm.

01:02:52.295 --> 01:02:53.415
<v Speaker 0>Okay. So It's

01:02:54.455 --> 01:02:57.255
<v Speaker 0>just It's it's there. Yeah. Right. Yeah. So

01:02:58.055 --> 01:03:00.135
<v Speaker 2>And I suppose this is the the server

01:03:00.135 --> 01:03:02.615
<v Speaker 2>certificate of the API server just for some

01:03:02.775 --> 01:03:04.775
<v Speaker 0>One of these namespaces

01:03:04.775 --> 01:03:05.575
<v Speaker 0>is

01:03:06.119 --> 01:03:07.960
<v Speaker 0>gonna be longer lived than the other sort

01:03:07.960 --> 01:03:10.039
<v Speaker 0>of ephemeral ones. There has to be something

01:03:10.039 --> 01:03:12.839
<v Speaker 0>running outside of these UUIDs or one UUID

01:03:12.839 --> 01:03:14.599
<v Speaker 0>that isn't as malicious.

01:03:15.319 --> 01:03:17.400
<v Speaker 0>I'm looking for a timestamp that's

01:03:17.640 --> 01:03:20.680
<v Speaker 0>let's sort it. Yeah. Let's sort

01:03:21.855 --> 01:03:24.734
<v Speaker 2>sort dash n on the Three.

01:03:24.895 --> 01:03:26.095
<v Speaker 2>Three. Right?

01:03:26.975 --> 01:03:30.575
<v Speaker 2>K three. K three fourth column. Right?

01:03:30.975 --> 01:03:32.655
<v Speaker 2>And then dash n for

01:03:33.135 --> 01:03:35.535
<v Speaker 2>yeah. This this works. Yeah. Good. Oh, let's

01:03:36.540 --> 01:03:38.380
<v Speaker 0>how do we reverse it? Do you remember?

01:03:39.340 --> 01:03:40.620
<v Speaker 0>No. I don't know.

01:03:46.060 --> 01:03:47.820
<v Speaker 2>Dash r. Dash r? Yeah.

01:03:49.765 --> 01:03:52.325
<v Speaker 2>Oh, but wait. Yep. I think you have

01:03:52.325 --> 01:03:53.605
<v Speaker 2>to put it on the Oh, it's the

01:03:53.605 --> 01:03:54.645
<v Speaker 0>key. Right.

01:03:57.125 --> 01:03:57.445
<v Speaker 2>Exactly.

01:04:02.750 --> 01:04:04.430
<v Speaker 1>But it's alphanumeric

01:04:04.430 --> 01:04:05.710
<v Speaker 1>sorting. There we go.

01:04:08.190 --> 01:04:10.270
<v Speaker 2>This helps. Okay. Let's just scroll up. We

01:04:10.270 --> 01:04:12.830
<v Speaker 2>can do it. Oh, no. It's not sorted

01:04:12.830 --> 01:04:14.510
<v Speaker 2>by yeah. You're right. But still, we can

01:04:14.510 --> 01:04:17.275
<v Speaker 2>get the longest running thing from here. It's

01:04:17.275 --> 01:04:17.835
<v Speaker 2>probably

01:04:19.035 --> 01:04:21.035
<v Speaker 2>three seven. I see things that have been

01:04:21.035 --> 01:04:22.315
<v Speaker 2>running for seven minutes.

01:04:23.435 --> 01:04:25.035
<v Speaker 0>Said we're no longer friends.

01:04:25.435 --> 01:04:28.635
<v Speaker 2>Yeah. But it all triggers because we we

01:04:28.635 --> 01:04:30.075
<v Speaker 2>scaled up this thing. Right?

01:04:31.000 --> 01:04:32.600
<v Speaker 1>Before that That was that was what I

01:04:32.600 --> 01:04:33.480
<v Speaker 1>was waiting on.

01:04:33.960 --> 01:04:36.680
<v Speaker 2>Because there's nothing that's older than that. Like,

01:04:36.680 --> 01:04:37.880
<v Speaker 2>can we look at things

01:04:38.520 --> 01:04:40.600
<v Speaker 2>okay. How about we look at all the

01:04:40.600 --> 01:04:42.600
<v Speaker 2>the different things and just look at things

01:04:42.600 --> 01:04:44.760
<v Speaker 2>that are younger than when you created the

01:04:44.760 --> 01:04:45.080
<v Speaker 2>cluster,

01:04:45.625 --> 01:04:46.505
<v Speaker 2>but not

01:04:46.825 --> 01:04:48.985
<v Speaker 2>from the past seven minutes. Right?

01:04:49.705 --> 01:04:50.665
<v Speaker 2>Just to kind of know

01:04:52.585 --> 01:04:53.945
<v Speaker 2>oh, there's nothing there.

01:04:56.105 --> 01:04:58.359
<v Speaker 2>So this all hasn't been touched as far

01:04:58.359 --> 01:04:59.480
<v Speaker 2>as I see. Right?

01:05:00.760 --> 01:05:01.400
<v Speaker 2>All two days, twenty two So

01:05:04.359 --> 01:05:05.400
<v Speaker 2>this looks

01:05:05.720 --> 01:05:06.119
<v Speaker 2>fine.

01:05:09.825 --> 01:05:12.224
<v Speaker 2>So maybe the thing that triggered it is

01:05:12.224 --> 01:05:15.105
<v Speaker 2>actually not in the cluster. Yeah. I'm I'm

01:05:15.105 --> 01:05:16.785
<v Speaker 0>starting to think about myself.

01:05:17.105 --> 01:05:19.345
<v Speaker 2>Yeah. Maybe we're we're

01:05:19.345 --> 01:05:21.425
<v Speaker 2>putting we're getting put on a

01:05:24.510 --> 01:05:26.830
<v Speaker 2>there are some red herrings. Lots of them.

01:05:27.790 --> 01:05:30.190
<v Speaker 2>So some something is missing from the outside,

01:05:30.190 --> 01:05:30.830
<v Speaker 2>I think.

01:05:32.590 --> 01:05:34.750
<v Speaker 2>Maybe it's the clustered part that does this,

01:05:34.750 --> 01:05:37.150
<v Speaker 2>somebody says in the comments. Yeah. We should

01:05:37.150 --> 01:05:38.830
<v Speaker 0>describe that, actually, and take a look at

01:05:38.830 --> 01:05:40.190
<v Speaker 0>the

01:05:39.855 --> 01:05:40.575
<v Speaker 0>image.

01:05:41.135 --> 01:05:41.855
<v Speaker 0>Yep.

01:05:42.175 --> 01:05:43.375
<v Speaker 0>That would be a good way to hide

01:05:43.375 --> 01:05:45.615
<v Speaker 0>something. I'll give you the honors.

01:05:49.535 --> 01:05:52.015
<v Speaker 0>I'm gonna comment much. We can just

01:05:54.039 --> 01:05:57.079
<v Speaker 2>so what is that container that we're using?

01:05:57.079 --> 01:05:59.319
<v Speaker 2>Okay. That's Postgres. That's fine. And the other

01:05:59.319 --> 01:05:59.799
<v Speaker 2>one

01:06:00.599 --> 01:06:02.359
<v Speaker 2>where are you? Oh, wait.

01:06:03.400 --> 01:06:05.720
<v Speaker 2>Oh, yeah. There was never anything running. So

01:06:05.720 --> 01:06:07.960
<v Speaker 2>it would be the Postgres one that's nefarious,

01:06:07.960 --> 01:06:08.599
<v Speaker 2>but it looks

01:06:09.835 --> 01:06:12.315
<v Speaker 2>like it is. Well, it's been updated to

01:06:12.315 --> 01:06:13.435
<v Speaker 0>take our

01:06:14.075 --> 01:06:16.475
<v Speaker 0>weird config map with the kubectl. This

01:06:18.315 --> 01:06:21.115
<v Speaker 2>looks like it's just a standard Postgres image.

01:06:21.195 --> 01:06:23.275
<v Speaker 2>Right? Unless what's the image pull policy?

01:06:25.240 --> 01:06:27.800
<v Speaker 1>I I haven't touched the post Postgres deployment.

01:06:27.800 --> 01:06:28.200
<v Speaker 1>Yep.

01:06:28.920 --> 01:06:30.520
<v Speaker 0>K. So why has it got the cube

01:06:30.520 --> 01:06:33.000
<v Speaker 0>roots there? Yeah. Exactly. Why does it also

01:06:33.000 --> 01:06:34.360
<v Speaker 2>have this volume?

01:06:34.760 --> 01:06:35.560
<v Speaker 2>That's interesting.

01:06:39.395 --> 01:06:40.515
<v Speaker 2>That makes me

01:06:42.435 --> 01:06:43.315
<v Speaker 2>suspicious.

01:06:43.635 --> 01:06:45.395
<v Speaker 0>Is that just always there, and I'm just

01:06:45.395 --> 01:06:47.235
<v Speaker 0>overthinking? I think it might be. Yeah. I

01:06:47.235 --> 01:06:49.635
<v Speaker 1>don't know. No. There's never a cube API.

01:06:49.635 --> 01:06:50.435
<v Speaker 0>This is

01:06:51.540 --> 01:06:54.100
<v Speaker 2>A volume that contains injected data from multiple

01:06:54.100 --> 01:06:57.140
<v Speaker 2>sources. Type projected. Maybe there's just some global

01:06:57.140 --> 01:06:59.300
<v Speaker 2>config that just gives it yeah. Maybe we

01:06:59.300 --> 01:07:01.220
<v Speaker 2>are on a Yeah. But I think maybe

01:07:01.220 --> 01:07:03.140
<v Speaker 0>I've checked myself or checked those here.

01:07:03.380 --> 01:07:05.460
<v Speaker 0>Okay. Let's let's let's focus.

01:07:10.565 --> 01:07:14.565
<v Speaker 0>Something has API. Okay. Let's try something. Okay?

01:07:15.045 --> 01:07:17.205
<v Speaker 0>Mhmm. The only way to access this cluster

01:07:17.205 --> 01:07:20.005
<v Speaker 0>from is from a vendor cluster or

01:07:20.840 --> 01:07:22.280
<v Speaker 0>from admin.com.

01:07:24.520 --> 01:07:26.360
<v Speaker 0>Oh, then we can't access it. Well, we

01:07:26.360 --> 01:07:27.080
<v Speaker 0>can't.

01:07:29.000 --> 01:07:30.040
<v Speaker 0>Protect it.

01:07:30.360 --> 01:07:33.080
<v Speaker 2>Oh,.com.Dotcom.

01:07:33.080 --> 01:07:33.400
<v Speaker 2>Yeah.

01:07:33.945 --> 01:07:34.585
<v Speaker 2>Yeah.

01:07:35.385 --> 01:07:36.665
<v Speaker 2>Well, there's also the

01:07:37.145 --> 01:07:38.745
<v Speaker 2>is that true, though, that you could also

01:07:38.745 --> 01:07:40.425
<v Speaker 2>use the Kubelet certificate

01:07:41.145 --> 01:07:44.025
<v Speaker 2>or whatever or the There could be static

01:07:44.025 --> 01:07:44.905
<v Speaker 0>manifest.

01:07:45.545 --> 01:07:47.145
<v Speaker 2>Yeah. But those don't look like they've been

01:07:47.145 --> 01:07:47.545
<v Speaker 0>modified.

01:07:48.230 --> 01:07:50.470
<v Speaker 2>But, I mean, there's also all these certificates.

01:07:50.470 --> 01:07:51.829
<v Speaker 2>Right? And I don't know where it is.

01:07:51.829 --> 01:07:52.470
<v Speaker 2>Etsy

01:07:52.950 --> 01:07:55.349
<v Speaker 2>Kubernetes p k I, which also all give

01:07:55.349 --> 01:07:57.109
<v Speaker 2>access to the cluster. So

01:08:01.270 --> 01:08:03.430
<v Speaker 0>Alright. Let's do

01:08:07.625 --> 01:08:08.905
<v Speaker 0>v coop.

01:08:09.945 --> 01:08:11.625
<v Speaker 0>I see You could look at the logs

01:08:11.625 --> 01:08:13.225
<v Speaker 1>of one of the not a virus pods

01:08:13.225 --> 01:08:14.905
<v Speaker 1>to see if it's doing anything, maybe.

01:08:17.590 --> 01:08:19.110
<v Speaker 2>Yeah. We could try that. Do you want

01:08:19.110 --> 01:08:20.710
<v Speaker 2>to try that? I have a feeling this

01:08:20.710 --> 01:08:21.590
<v Speaker 2>is a hint.

01:08:22.150 --> 01:08:23.270
<v Speaker 2>I don't know why.

01:08:24.550 --> 01:08:26.229
<v Speaker 0>So you don't want me to run this?

01:08:26.550 --> 01:08:28.229
<v Speaker 1>Oh, no. You can run that. You do.

01:08:28.390 --> 01:08:28.790
<v Speaker 0>Yeah.

01:08:30.734 --> 01:08:32.094
<v Speaker 0>Okay. Namespaces,

01:08:32.094 --> 01:08:34.495
<v Speaker 0>print the name, crap, so that we keep

01:08:34.495 --> 01:08:36.495
<v Speaker 0>cube root by default.

01:08:36.495 --> 01:08:38.094
<v Speaker 0>Let's not delete the default name. Oh, you

01:08:38.094 --> 01:08:39.614
<v Speaker 0>can't anyway, but still.

01:08:40.895 --> 01:08:42.094
<v Speaker 0>But I don't think you can delete any

01:08:42.094 --> 01:08:44.679
<v Speaker 0>of those namespaces except for the root. Yeah.

01:08:44.679 --> 01:08:46.439
<v Speaker 2>Let's just nuke everything.

01:08:49.079 --> 01:08:50.920
<v Speaker 2>I have a feeling as we're deleting the

01:08:50.920 --> 01:08:51.959
<v Speaker 2>new ones, but

01:08:52.520 --> 01:08:53.800
<v Speaker 2>it's like Hydra.

01:08:55.159 --> 01:08:57.319
<v Speaker 0>Okay. So let's follow your trade of thought

01:08:57.319 --> 01:09:00.119
<v Speaker 0>right now then, which was

01:08:59.205 --> 01:09:01.364
<v Speaker 0>you want to what? Sorry?

01:09:02.564 --> 01:09:04.404
<v Speaker 2>My train of thought. Well, I got a

01:09:04.404 --> 01:09:05.844
<v Speaker 2>hint that I should have looked at the

01:09:05.844 --> 01:09:07.444
<v Speaker 2>logs of one of these not a virus

01:09:07.444 --> 01:09:10.085
<v Speaker 2>pods. Alright. Do wanna So this fire log

01:09:10.085 --> 01:09:12.005
<v Speaker 0>containers and start poking around then.

01:09:13.609 --> 01:09:16.489
<v Speaker 2>Can we do that? Can we have multiple

01:09:17.050 --> 01:09:19.210
<v Speaker 2>windows hidden here or how does this work?

01:09:19.210 --> 01:09:21.130
<v Speaker 0>Well, I'll I've opened something on the worker

01:09:21.130 --> 01:09:23.130
<v Speaker 0>if you wanna jump onto that session and

01:09:23.130 --> 01:09:24.329
<v Speaker 0>poke around the logs there.

01:09:25.305 --> 01:09:27.145
<v Speaker 0>And we'll just leave that delete.

01:09:28.104 --> 01:09:28.665
<v Speaker 0>Okay.

01:09:29.785 --> 01:09:31.945
<v Speaker 0>I'm I'm just assuming not a various schedules

01:09:31.945 --> 01:09:33.305
<v Speaker 0>on the worker, but I I could be

01:09:33.305 --> 01:09:33.944
<v Speaker 0>incorrect.

01:09:34.185 --> 01:09:35.305
<v Speaker 2>Okay. So

01:09:36.104 --> 01:09:37.385
<v Speaker 2>so the nice thing about

01:09:38.710 --> 01:09:40.870
<v Speaker 2>I think doesn't container do you also send

01:09:40.870 --> 01:09:42.630
<v Speaker 2>things to the journal, or do we have

01:09:42.630 --> 01:09:44.390
<v Speaker 2>to go here? You need to go to

01:09:44.390 --> 01:09:45.590
<v Speaker 0>parallel containers.

01:09:45.910 --> 01:09:46.550
<v Speaker 2>K.

01:09:47.350 --> 01:09:49.590
<v Speaker 2>And then we no. I don't not the

01:09:49.590 --> 01:09:51.430
<v Speaker 2>container you're looking

01:09:51.430 --> 01:09:54.550
<v Speaker 2>for. It might be. So we can just

01:09:56.365 --> 01:09:58.685
<v Speaker 2>do we want to all of them, I

01:09:58.685 --> 01:09:59.245
<v Speaker 2>guess?

01:09:59.485 --> 01:10:00.365
<v Speaker 2>We could. Right?

01:10:02.205 --> 01:10:05.165
<v Speaker 2>Okay. It's running cube CTO applies. It's doing

01:10:05.165 --> 01:10:05.805
<v Speaker 2>stuff.

01:10:07.085 --> 01:10:08.605
<v Speaker 2>Yeah. Looks

01:10:09.450 --> 01:10:10.409
<v Speaker 2>nefarious.

01:10:10.570 --> 01:10:12.969
<v Speaker 2>Oh, it's it's a job. Oh, there is

01:10:12.969 --> 01:10:14.489
<v Speaker 2>a okay. That's

01:10:16.170 --> 01:10:18.250
<v Speaker 2>I think there might be some cron job

01:10:18.410 --> 01:10:20.890
<v Speaker 2>that's messing around. I think this is gonna

01:10:20.890 --> 01:10:24.065
<v Speaker 2>go on forever. Let's just do we cancel

01:10:24.065 --> 01:10:24.625
<v Speaker 2>it?

01:10:24.865 --> 01:10:25.825
<v Speaker 2>Get the

01:10:27.745 --> 01:10:29.585
<v Speaker 2>yeah. Look at this. And there's probably also

01:10:29.585 --> 01:10:31.905
<v Speaker 2>a cron job thing that's just spawning things

01:10:31.905 --> 01:10:33.185
<v Speaker 2>all the time.

01:10:33.585 --> 01:10:35.265
<v Speaker 2>No. Okay.

01:10:36.450 --> 01:10:38.770
<v Speaker 2>Okay. Interesting. But let do we want to

01:10:38.770 --> 01:10:40.450
<v Speaker 2>try to nuke I don't think that's gonna

01:10:40.450 --> 01:10:42.290
<v Speaker 2>work either to to nuke all the jobs.

01:10:42.290 --> 01:10:42.690
<v Speaker 2>It's probably

01:10:43.650 --> 01:10:45.890
<v Speaker 2>do we want to look at what this

01:10:45.890 --> 01:10:47.330
<v Speaker 2>container is doing? Maybe

01:10:47.970 --> 01:10:49.844
<v Speaker 0>Well, we got some we did get some

01:10:49.844 --> 01:10:52.244
<v Speaker 0>debug output. Right? So it's it's creating a

01:10:52.244 --> 01:10:54.405
<v Speaker 0>job. It's doing this it's scaling down our

01:10:54.405 --> 01:10:54.885
<v Speaker 0>deployment.

01:11:06.830 --> 01:11:09.230
<v Speaker 0>So this was reactive. Right? So this happened

01:11:09.230 --> 01:11:11.550
<v Speaker 0>because we tried to scale up the deployment.

01:11:11.790 --> 01:11:14.510
<v Speaker 1>Mhmm. It did. Yeah. So there's something that's

01:11:14.510 --> 01:11:16.350
<v Speaker 1>watching the cluster deployment. Yeah.

01:11:17.434 --> 01:11:19.594
<v Speaker 1>I don't know if if that statement is

01:11:19.594 --> 01:11:22.074
<v Speaker 1>true. It it is not running on something

01:11:22.074 --> 01:11:24.394
<v Speaker 1>other than the cluster or the two nodes.

01:11:25.594 --> 01:11:26.234
<v Speaker 1>Okay.

01:11:27.195 --> 01:11:28.875
<v Speaker 1>Doing Like, I'm not sitting here on my

01:11:28.875 --> 01:11:32.030
<v Speaker 1>computer running something. Just hitting enter every time

01:11:32.030 --> 01:11:32.989
<v Speaker 2>we do something.

01:11:34.030 --> 01:11:35.630
<v Speaker 2>I'll get them this time.

01:11:35.870 --> 01:11:36.590
<v Speaker 2>Alright.

01:11:38.510 --> 01:11:40.429
<v Speaker 0>There must be a Rawkode player somewhere.

01:11:40.590 --> 01:11:40.830
<v Speaker 0>So

01:11:50.005 --> 01:11:51.605
<v Speaker 2>Do we want to check

01:11:52.085 --> 01:11:54.725
<v Speaker 2>if there's maybe a process outside of Kubernetes

01:11:54.725 --> 01:11:56.725
<v Speaker 2>running on the control plane? We're just talking

01:11:56.725 --> 01:11:57.845
<v Speaker 2>to the API server.

01:11:58.300 --> 01:11:59.820
<v Speaker 0>Yeah. That's what I tried to do. I

01:11:59.820 --> 01:12:01.580
<v Speaker 0>was trying to filter out the

01:12:01.980 --> 01:12:03.580
<v Speaker 0>kernel processes,

01:12:03.580 --> 01:12:05.660
<v Speaker 0>but, apparently, I just thought that was a

01:12:05.660 --> 01:12:07.100
<v Speaker 0>rejects. Why does it think that was a

01:12:07.100 --> 01:12:07.660
<v Speaker 0>reject?

01:12:08.540 --> 01:12:10.860
<v Speaker 0>Do you think There we go. You.

01:12:14.195 --> 01:12:14.915
<v Speaker 2>Yeah.

01:12:18.355 --> 01:12:20.275
<v Speaker 2>The cube API server.

01:12:25.155 --> 01:12:25.795
<v Speaker 2>Let's see.

01:12:31.350 --> 01:12:32.710
<v Speaker 2>I don't see

01:12:33.430 --> 01:12:35.590
<v Speaker 2>a lot of nefarious things here.

01:12:37.430 --> 01:12:38.550
<v Speaker 2>Do

01:12:40.870 --> 01:12:41.110
<v Speaker 2>we?

01:12:43.575 --> 01:12:45.415
<v Speaker 1>It is not running on the control plane

01:12:45.415 --> 01:12:48.375
<v Speaker 1>node either. K. But it might be running

01:12:48.375 --> 01:12:50.135
<v Speaker 2>on the worker node. Who knows?

01:12:50.455 --> 01:12:51.335
<v Speaker 2>I don't know.

01:12:51.895 --> 01:12:53.735
<v Speaker 2>Do we want to check just to be

01:12:53.735 --> 01:12:53.975
<v Speaker 2>sure?

01:12:57.429 --> 01:12:58.389
<v Speaker 2>There's

01:12:58.389 --> 01:12:59.909
<v Speaker 2>a lot more running on the worker node

01:12:59.909 --> 01:13:01.270
<v Speaker 2>for sure, but that makes sense. Oh, look

01:13:01.270 --> 01:13:02.389
<v Speaker 0>at the sleeps.

01:13:03.590 --> 01:13:05.110
<v Speaker 2>Yeah. I think this is

01:13:05.510 --> 01:13:05.909
<v Speaker 2>k.

01:13:09.525 --> 01:13:12.325
<v Speaker 2>I don't think there's anything running outside of

01:13:12.325 --> 01:13:14.485
<v Speaker 2>Kubernetes that's of interest

01:13:15.285 --> 01:13:16.244
<v Speaker 2>from this.

01:13:16.885 --> 01:13:18.885
<v Speaker 0>Well, where are those loops coming from? What

01:13:18.885 --> 01:13:20.965
<v Speaker 0>was the root cause of this? I think

01:13:20.965 --> 01:13:23.280
<v Speaker 2>it's container d. So Yeah.

01:13:23.680 --> 01:13:25.680
<v Speaker 2>So it's probably part of the Oh, look.

01:13:25.680 --> 01:13:27.520
<v Speaker 0>There's a setup and run dot s h.

01:13:28.480 --> 01:13:29.360
<v Speaker 2>There is.

01:13:30.000 --> 01:13:30.719
<v Speaker 2>Yeah.

01:13:33.520 --> 01:13:35.760
<v Speaker 2>I think it might be worth looking.

01:13:36.240 --> 01:13:36.880
<v Speaker 2>How can we

01:13:37.935 --> 01:13:39.614
<v Speaker 2>dive into that container?

01:13:39.695 --> 01:13:41.695
<v Speaker 2>Can we maybe attach to one of those

01:13:41.695 --> 01:13:44.094
<v Speaker 2>containers and kind of look what's inside? Is

01:13:44.094 --> 01:13:45.135
<v Speaker 2>that a good idea?

01:13:46.735 --> 01:13:48.094
<v Speaker 2>Like, attach to one of

01:13:51.100 --> 01:13:53.260
<v Speaker 2>We can just cube CTL.

01:13:54.460 --> 01:13:56.860
<v Speaker 2>What's it? A text to run. ID. So

01:13:56.860 --> 01:13:58.219
<v Speaker 0>let's grab the

01:13:58.940 --> 01:14:00.460
<v Speaker 1>I was gonna say you could launch an

01:14:00.540 --> 01:14:03.260
<v Speaker 1>a new version and override the

01:14:04.005 --> 01:14:05.844
<v Speaker 1>the entry point if you wanted.

01:14:06.325 --> 01:14:07.445
<v Speaker 2>Oh, yeah. We could

01:14:07.925 --> 01:14:09.925
<v Speaker 0>Process isn't running anymore.

01:14:10.725 --> 01:14:11.605
<v Speaker 2>But

01:14:12.085 --> 01:14:12.725
<v Speaker 2>Yeah.

01:14:13.205 --> 01:14:16.405
<v Speaker 2>We I can try doing it from from

01:14:15.780 --> 01:14:16.499
<v Speaker 2>using

01:14:16.820 --> 01:14:18.899
<v Speaker 0>Well, we can just try control.

01:14:22.260 --> 01:14:23.940
<v Speaker 2>I was thinking of just attaching to an

01:14:23.940 --> 01:14:25.699
<v Speaker 2>existing one with kubectl,

01:14:26.340 --> 01:14:27.139
<v Speaker 2>and then

01:14:27.380 --> 01:14:29.139
<v Speaker 2>but we can also do it through this.

01:14:29.139 --> 01:14:29.699
<v Speaker 2>Yep.

01:14:30.020 --> 01:14:30.579
<v Speaker 2>It's fine.

01:14:31.655 --> 01:14:32.615
<v Speaker 0>Bar

01:14:32.615 --> 01:14:33.495
<v Speaker 0>run.

01:14:33.655 --> 01:14:34.135
<v Speaker 0>It

01:14:41.335 --> 01:14:43.575
<v Speaker 2>should be correct. Oh, without the container. Just

01:14:43.575 --> 01:14:44.775
<v Speaker 2>runtime endpoint,

01:14:44.935 --> 01:14:45.335
<v Speaker 0>apparently.

01:14:56.430 --> 01:14:56.910
<v Speaker 0>K.

01:15:03.405 --> 01:15:04.285
<v Speaker 0>Is it info?

01:15:17.730 --> 01:15:20.530
<v Speaker 2>Yeah. This looks all fine. Can we attach?

01:15:21.170 --> 01:15:23.170
<v Speaker 0>Yeah. I was looking for the

01:15:24.115 --> 01:15:26.114
<v Speaker 0>IDs of the namespaces.

01:15:29.395 --> 01:15:31.555
<v Speaker 0>Unless you don't have to attach by another

01:15:31.555 --> 01:15:32.195
<v Speaker 0>means.

01:15:32.515 --> 01:15:34.275
<v Speaker 2>We we can do it through cube cuddle.

01:15:34.275 --> 01:15:36.675
<v Speaker 2>Right? You mean the cube cuddle? To it?

01:15:37.075 --> 01:15:37.315
<v Speaker 0>Yeah.

01:15:42.860 --> 01:15:45.100
<v Speaker 0>Alright. So you wanted to get pods dash

01:15:45.100 --> 01:15:46.619
<v Speaker 0>a and just pick one.

01:15:47.260 --> 01:15:47.739
<v Speaker 2>Exactly.

01:15:52.225 --> 01:15:54.225
<v Speaker 0>Yeah. Thanks, Noel. That's what I was looking

01:15:54.225 --> 01:15:57.265
<v Speaker 0>for. Crack control exec. Okay. Exec.

01:15:58.385 --> 01:16:00.865
<v Speaker 0>IT. Oh. IT.

01:16:03.745 --> 01:16:04.705
<v Speaker 0>Pending pending.

01:16:10.380 --> 01:16:12.220
<v Speaker 2>Oh, and they're all jogged. Oh,

01:16:12.780 --> 01:16:13.420
<v Speaker 2>no.

01:16:14.140 --> 01:16:16.780
<v Speaker 1>They run for about thirty seconds each. Okay.

01:16:16.780 --> 01:16:19.420
<v Speaker 2>That's okay. That's good enough. Right? So we

01:16:19.420 --> 01:16:20.220
<v Speaker 0>just filter

01:16:21.275 --> 01:16:23.195
<v Speaker 2>we we we we can get this done

01:16:23.195 --> 01:16:25.274
<v Speaker 2>in thirty seconds. We just put a sleep.

01:16:25.514 --> 01:16:27.994
<v Speaker 2>Like, it will not if we are executing

01:16:27.994 --> 01:16:29.514
<v Speaker 2>into it, it will not

01:16:31.114 --> 01:16:33.355
<v Speaker 2>kill until we kill the thing. Right? But

01:16:33.355 --> 01:16:35.435
<v Speaker 0>these are things that run-in the cluster, and

01:16:35.435 --> 01:16:37.639
<v Speaker 0>I keep coming back to that first process

01:16:37.639 --> 01:16:39.880
<v Speaker 0>that ran after we scaled the deployment.

01:16:43.159 --> 01:16:45.000
<v Speaker 2>Yeah. But that They are they are pretty

01:16:45.000 --> 01:16:46.920
<v Speaker 1>much the same the same workload.

01:16:50.135 --> 01:16:52.295
<v Speaker 1>I'll give that hint. But was it running

01:16:52.295 --> 01:16:53.175
<v Speaker 0>in the cluster?

01:16:54.935 --> 01:16:56.055
<v Speaker 1>It was not. Yeah.

01:16:56.455 --> 01:16:57.495
<v Speaker 0>See. So

01:16:59.735 --> 01:17:01.655
<v Speaker 2>So the original thing that triggered it was

01:17:01.655 --> 01:17:03.095
<v Speaker 2>not running in the cluster. Does it Yeah.

01:17:03.095 --> 01:17:04.615
<v Speaker 0>And I'm assuming that's still running.

01:17:05.320 --> 01:17:07.719
<v Speaker 2>Yeah. And so you're so even if we

01:17:07.880 --> 01:17:09.960
<v Speaker 2>find a way to block not virus by

01:17:09.960 --> 01:17:11.560
<v Speaker 2>looking into it, it will just spawn more

01:17:11.560 --> 01:17:14.199
<v Speaker 2>not a virus after it. Right? Well, yeah,

01:17:14.199 --> 01:17:15.560
<v Speaker 0>I'd like to get to that first one

01:17:15.560 --> 01:17:17.719
<v Speaker 0>first because the because it's gonna be the

01:17:17.719 --> 01:17:19.560
<v Speaker 0>same code, the same binary, the same script.

01:17:19.825 --> 01:17:21.265
<v Speaker 0>As soon as we get to that, we'll

01:17:21.265 --> 01:17:23.105
<v Speaker 0>understand it more and then we can

01:17:23.665 --> 01:17:24.945
<v Speaker 0>thing. Now

01:17:25.665 --> 01:17:27.985
<v Speaker 0>on the worker So so what what was

01:17:27.985 --> 01:17:30.545
<v Speaker 2>the script called that we that we saw?

01:17:30.545 --> 01:17:32.465
<v Speaker 2>Set up and run. So maybe just

01:17:33.345 --> 01:17:34.705
<v Speaker 2>find

01:17:34.300 --> 01:17:36.940
<v Speaker 2>through the entire disk and scrap for that.

01:17:37.100 --> 01:17:37.660
<v Speaker 2>Just do

01:17:39.420 --> 01:17:40.140
<v Speaker 2>okay.

01:17:41.660 --> 01:17:42.860
<v Speaker 2>Let's

01:17:42.860 --> 01:17:43.420
<v Speaker 2>just

01:17:43.820 --> 01:17:45.180
<v Speaker 2>What is u d?

01:17:45.980 --> 01:17:48.140
<v Speaker 2>U power d is power management thing. I

01:17:48.140 --> 01:17:48.620
<v Speaker 2>think it's

01:17:49.915 --> 01:17:53.435
<v Speaker 2>to be what is root nerds coddle?

01:17:53.435 --> 01:17:54.955
<v Speaker 2>That looks NerdTTL

01:17:54.955 --> 01:17:57.514
<v Speaker 0>is the new That looks container DCLI.

01:17:57.594 --> 01:17:58.474
<v Speaker 2>Ah, okay.

01:18:00.315 --> 01:18:01.995
<v Speaker 0>But it shouldn't be in the root directory.

01:18:01.995 --> 01:18:04.960
<v Speaker 2>Exactly. That makes me and it shouldn't be

01:18:05.040 --> 01:18:06.639
<v Speaker 2>and this it shouldn't be installed on this

01:18:06.639 --> 01:18:07.599
<v Speaker 2>kind of node

01:18:07.840 --> 01:18:09.439
<v Speaker 2>by default. Right? So

01:18:09.760 --> 01:18:11.360
<v Speaker 0>I won't look at the bash. It's it's

01:18:11.360 --> 01:18:12.719
<v Speaker 0>empty anyway. So

01:18:14.880 --> 01:18:17.280
<v Speaker 2>root nerd cuddle is running. It's interesting.

01:18:19.165 --> 01:18:20.685
<v Speaker 2>But that might also be part of that

01:18:20.685 --> 01:18:22.124
<v Speaker 2>con wait. So

01:18:23.085 --> 01:18:25.245
<v Speaker 2>can can I try something? Please. Let me

01:18:25.245 --> 01:18:26.045
<v Speaker 0>just By all means.

01:18:29.965 --> 01:18:32.364
<v Speaker 1>Let's

01:18:32.364 --> 01:18:32.525
<v Speaker 1>see.

01:18:35.140 --> 01:18:36.900
<v Speaker 2>Yeah. That makes sense, but I want to

01:18:36.900 --> 01:18:38.980
<v Speaker 2>know if it finds it in other places.

01:18:39.780 --> 01:18:41.860
<v Speaker 0>What makes sense? Sorry. I'm scrolling my head

01:18:41.860 --> 01:18:42.580
<v Speaker 0>right now.

01:18:43.860 --> 01:18:46.260
<v Speaker 2>No. It's only inside containers,

01:18:46.260 --> 01:18:49.025
<v Speaker 2>but interesting. But there might be a container

01:18:49.025 --> 01:18:51.185
<v Speaker 2>running, right, that's was spawned on the worker

01:18:51.185 --> 01:18:53.425
<v Speaker 2>node directly outside of Kubernetes.

01:18:53.425 --> 01:18:54.704
<v Speaker 2>It's listening to everything

01:18:55.824 --> 01:18:58.625
<v Speaker 2>that that starts the whole the whole shebang.

01:19:00.080 --> 01:19:00.880
<v Speaker 2>So that's not

01:19:01.680 --> 01:19:04.240
<v Speaker 2>how can we find out all the container

01:19:04.240 --> 01:19:07.280
<v Speaker 2>d processes that are not pods spawned by

01:19:07.840 --> 01:19:10.320
<v Speaker 0>the kubel? All of the pods are Kubernetes

01:19:10.320 --> 01:19:12.480
<v Speaker 0>namespace for container. Oh, I have a way.

01:19:12.480 --> 01:19:13.200
<v Speaker 2>We can stop

01:19:13.695 --> 01:19:14.814
<v Speaker 2>the Kuplets,

01:19:15.454 --> 01:19:18.655
<v Speaker 2>then we can stop all the containers in

01:19:18.655 --> 01:19:19.774
<v Speaker 2>container d.

01:19:25.614 --> 01:19:27.855
<v Speaker 0>Yeah. What's card on that? I don't trust

01:19:27.855 --> 01:19:30.070
<v Speaker 0>this node anymore. It's dead to me.

01:19:31.110 --> 01:19:32.469
<v Speaker 2>But does it make sense if we stop

01:19:32.469 --> 01:19:34.309
<v Speaker 2>the cubelets, then at least we

01:19:36.390 --> 01:19:38.469
<v Speaker 2>oh, yeah. Stop recording makes sense as well

01:19:38.469 --> 01:19:40.070
<v Speaker 2>then. Yeah. I don't know why we took

01:19:40.070 --> 01:19:41.190
<v Speaker 0>so long to do that when we have

01:19:41.190 --> 01:19:42.230
<v Speaker 0>a road process running.

01:19:44.415 --> 01:19:46.335
<v Speaker 0>But sometimes you just don't text. Yeah. But

01:19:46.335 --> 01:19:48.175
<v Speaker 2>you didn't drain it. Right? You only cordoned

01:19:48.175 --> 01:19:49.855
<v Speaker 2>it. Right? Do you also want to The

01:19:49.855 --> 01:19:51.135
<v Speaker 2>cordoned does the drain.

01:19:52.335 --> 01:19:53.695
<v Speaker 0>Oh, no. I meant it to drain which

01:19:53.695 --> 01:19:55.135
<v Speaker 0>does a cordon. Ugh. Sorry.

01:19:57.310 --> 01:19:58.349
<v Speaker 0>So

01:19:59.070 --> 01:20:01.389
<v Speaker 0>that should just leave the demon set. So,

01:20:01.390 --> 01:20:03.949
<v Speaker 2>like Yeah. No worries. So now let's see

01:20:03.949 --> 01:20:05.550
<v Speaker 2>if there's still something running.

01:20:06.510 --> 01:20:08.750
<v Speaker 2>Ordering by dates probably also helps in this

01:20:08.750 --> 01:20:09.710
<v Speaker 2>view. And then

01:20:14.054 --> 01:20:17.175
<v Speaker 2>not the container you're looking for. Still running

01:20:17.175 --> 01:20:19.895
<v Speaker 2>thirty seconds So that's cleaning up there. So

01:20:19.895 --> 01:20:21.494
<v Speaker 0>I say we run

01:20:23.830 --> 01:20:25.590
<v Speaker 0>cry control p s again.

01:20:31.750 --> 01:20:33.670
<v Speaker 0>Is that liveness Prometheus?

01:20:35.030 --> 01:20:36.790
<v Speaker 0>Is that out of place? There's no Prometheus

01:20:36.790 --> 01:20:38.465
<v Speaker 0>on the cluster. Yeah.

01:20:38.865 --> 01:20:40.385
<v Speaker 2>That looks interesting. Right?

01:20:47.105 --> 01:20:49.505
<v Speaker 0>Let's do an info on that liveness container

01:20:49.825 --> 01:20:51.185
<v Speaker 0>ID and see what it is. Sure.

01:20:55.470 --> 01:20:57.470
<v Speaker 2>But it was also created two days ago,

01:20:57.470 --> 01:20:58.910
<v Speaker 2>which may gives me the feeling it might

01:20:58.910 --> 01:20:59.469
<v Speaker 2>not

01:21:00.110 --> 01:21:02.190
<v Speaker 2>be the thing we're looking for. But

01:21:04.270 --> 01:21:05.550
<v Speaker 0>Docker image.

01:21:11.585 --> 01:21:13.744
<v Speaker 2>It's part of Cilium, it seems like. Is

01:21:13.744 --> 01:21:16.224
<v Speaker 0>it? Is it or not? I don't know.

01:21:17.184 --> 01:21:19.025
<v Speaker 2>Oh, no. That's just the CNI I was

01:21:19.025 --> 01:21:19.505
<v Speaker 2>getting.

01:21:20.300 --> 01:21:21.820
<v Speaker 0>Alright. Let's see.

01:21:25.420 --> 01:21:26.700
<v Speaker 0>N full command

01:21:27.340 --> 01:21:28.380
<v Speaker 0>isn't ideal.

01:21:32.985 --> 01:21:34.265
<v Speaker 0>What else do we have?

01:21:34.905 --> 01:21:36.985
<v Speaker 0>I'm not that familiar with cry control.

01:21:38.185 --> 01:21:38.585
<v Speaker 0>Inspect.

01:21:48.630 --> 01:21:51.270
<v Speaker 0>Mhmm. Why did I give us a machine

01:21:51.270 --> 01:21:52.630
<v Speaker 0>with so many disk?

01:21:52.950 --> 01:21:54.710
<v Speaker 0>Or is that that's TTY.

01:21:55.590 --> 01:21:57.830
<v Speaker 2>Yeah. These are just all the devices that

01:21:57.830 --> 01:21:59.910
<v Speaker 2>are oh, this is part of SEF. It's

01:21:59.910 --> 01:22:01.270
<v Speaker 2>part of this. So okay.

01:22:02.070 --> 01:22:02.630
<v Speaker 2>We put.

01:22:03.975 --> 01:22:05.094
<v Speaker 2>Okay. So

01:22:05.335 --> 01:22:07.495
<v Speaker 2>the the there doesn't seem to be anything

01:22:07.495 --> 01:22:10.614
<v Speaker 2>nefarious running anymore on the worker nodes right

01:22:10.614 --> 01:22:13.335
<v Speaker 2>now. So maybe it's something nefarious running on

01:22:13.335 --> 01:22:13.815
<v Speaker 2>that.

01:22:14.775 --> 01:22:17.014
<v Speaker 2>I think so. This all looks fine to

01:22:17.014 --> 01:22:17.175
<v Speaker 2>me,

01:22:19.610 --> 01:22:22.010
<v Speaker 2>except that Cilium operator was created a minute

01:22:22.010 --> 01:22:23.610
<v Speaker 2>ago. That's a kind of suspect.

01:22:26.490 --> 01:22:27.290
<v Speaker 1>Yeah. There's, like

01:22:29.530 --> 01:22:32.090
<v Speaker 0>Okay. Let's do one more thing. K. Let's

01:22:32.090 --> 01:22:33.690
<v Speaker 0>see what energies we've got on this machine.

01:22:38.425 --> 01:22:40.185
<v Speaker 2>We did get the hints that it was

01:22:40.185 --> 01:22:41.625
<v Speaker 2>the same workloads.

01:22:41.625 --> 01:22:44.425
<v Speaker 2>Right? So Yeah. So it's the SIP plus

01:22:44.425 --> 01:22:45.304
<v Speaker 0>cluster.

01:22:46.425 --> 01:22:46.825
<v Speaker 0>Exactly.

01:22:50.170 --> 01:22:51.770
<v Speaker 0>A few versions of it. So

01:22:53.450 --> 01:22:56.650
<v Speaker 1>That was just me developing it. Exactly. Yeah.

01:22:56.650 --> 01:22:57.690
<v Speaker 2>Okay. So

01:22:58.010 --> 01:22:59.610
<v Speaker 1>o o three is the only one that's

01:22:59.610 --> 01:23:00.170
<v Speaker 1>running.

01:23:00.570 --> 01:23:00.970
<v Speaker 1>Okay.

01:23:03.205 --> 01:23:04.645
<v Speaker 0>You know what? Let's

01:23:07.765 --> 01:23:09.284
<v Speaker 0>Let's do something weird.

01:23:11.285 --> 01:23:12.005
<v Speaker 2>Okay.

01:23:14.165 --> 01:23:16.960
<v Speaker 2>Let's block docker let's remove the image and

01:23:16.960 --> 01:23:19.360
<v Speaker 2>block docker dot I o in DNS.

01:23:19.520 --> 01:23:21.920
<v Speaker 0>I was gonna fill it and actually take

01:23:21.920 --> 01:23:23.360
<v Speaker 0>a look at the script and say that

01:23:23.360 --> 01:23:24.560
<v Speaker 0>it might look Oh, yeah. That we can

01:23:24.560 --> 01:23:25.440
<v Speaker 2>also do. Yep.

01:23:25.840 --> 01:23:28.400
<v Speaker 2>That's if that doesn't work, we're gonna leave

01:23:28.400 --> 01:23:31.040
<v Speaker 2>all the other images intact, nuke this one,

01:23:31.040 --> 01:23:33.335
<v Speaker 2>and then make sure we cannot contact Docker

01:23:33.335 --> 01:23:35.415
<v Speaker 2>Hub anymore. Yeah. We we can add a

01:23:35.495 --> 01:23:37.175
<v Speaker 0>we could we could definitely block access to

01:23:37.175 --> 01:23:38.054
<v Speaker 0>that file.

01:23:38.215 --> 01:23:38.855
<v Speaker 0>I

01:23:39.495 --> 01:23:41.574
<v Speaker 0>hope this doesn't frame my machines that

01:23:44.775 --> 01:23:46.455
<v Speaker 0>oh, start Docker. There we go.

01:23:48.810 --> 01:23:50.010
<v Speaker 1>It it should not.

01:23:51.210 --> 01:23:51.930
<v Speaker 2>That's

01:23:52.170 --> 01:23:54.090
<v Speaker 0>Yeah. I I I don't plan. I mean,

01:23:54.090 --> 01:23:55.370
<v Speaker 0>I'll run it, but I'm gonna override the

01:23:55.370 --> 01:23:57.690
<v Speaker 0>entry point. So we should be okay.

01:23:58.650 --> 01:24:00.170
<v Speaker 0>That's the main you've been kind enough to

01:24:00.170 --> 01:24:01.290
<v Speaker 0>leave a shell in the image.

01:24:03.015 --> 01:24:04.455
<v Speaker 2>Oh, yeah. Well, there was a shell script

01:24:04.455 --> 01:24:06.614
<v Speaker 2>running. Right? So that should should be fine.

01:24:07.175 --> 01:24:08.375
<v Speaker 0>Yeah. Go on, Tucker.

01:24:09.015 --> 01:24:11.015
<v Speaker 1>Oh, it it's a private image, though.

01:24:13.015 --> 01:24:13.655
<v Speaker 2>No.

01:24:14.215 --> 01:24:16.135
<v Speaker 2>Oh, but we can get the the credentials

01:24:16.135 --> 01:24:18.850
<v Speaker 2>out of Kubernetes then. Right? So Yeah. That.

01:24:19.570 --> 01:24:20.210
<v Speaker 2>So

01:24:21.730 --> 01:24:23.570
<v Speaker 2>do you want me to So you were

01:24:23.570 --> 01:24:25.650
<v Speaker 1>very close when you saw the nerd CTL.

01:24:25.650 --> 01:24:27.410
<v Speaker 1>I couldn't get CryControl to work. That's why

01:24:27.410 --> 01:24:29.490
<v Speaker 1>nerd CTL even was in the logs at

01:24:29.490 --> 01:24:30.450
<v Speaker 0>all. Mhmm.

01:24:32.595 --> 01:24:34.675
<v Speaker 2>So we were we were close with Nerd

01:24:34.675 --> 01:24:35.795
<v Speaker 2>CTL. Interesting.

01:24:36.675 --> 01:24:38.515
<v Speaker 2>But why is it not on the or

01:24:38.515 --> 01:24:39.875
<v Speaker 2>why is it not anywhere?

01:24:40.195 --> 01:24:41.955
<v Speaker 0>Oh, yeah. It's alright. Need go ahead and

01:24:42.915 --> 01:24:44.275
<v Speaker 2>Let's just do

01:24:45.190 --> 01:24:47.429
<v Speaker 0>How is that update and locate?

01:24:49.989 --> 01:24:51.269
<v Speaker 2>There's lots of things.

01:24:52.389 --> 01:24:53.750
<v Speaker 2>For our lit nerds

01:24:53.750 --> 01:24:54.709
<v Speaker 2>CTL.

01:24:55.989 --> 01:24:56.630
<v Speaker 2>K.

01:24:57.190 --> 01:24:59.815
<v Speaker 2>This has helped me. There's lots of processes

01:24:59.815 --> 01:25:02.215
<v Speaker 2>named NorthCTL running. Okay. So I guess

01:25:06.215 --> 01:25:10.295
<v Speaker 2>interesting. So maybe those containers are running NorthCuddle.

01:25:13.110 --> 01:25:15.350
<v Speaker 0>No. It's still running because we stopped all

01:25:15.350 --> 01:25:16.309
<v Speaker 2>of those. Right?

01:25:18.390 --> 01:25:19.030
<v Speaker 2>So

01:25:19.430 --> 01:25:20.230
<v Speaker 2>Yeah.

01:25:20.950 --> 01:25:21.430
<v Speaker 2>Interesting.

01:25:25.594 --> 01:25:26.795
<v Speaker 2>So

01:25:27.195 --> 01:25:27.994
<v Speaker 2>we have

01:25:28.555 --> 01:25:29.275
<v Speaker 2>a lot of

01:25:33.835 --> 01:25:37.195
<v Speaker 2>there's a network namespace named nerd CTL.

01:25:37.195 --> 01:25:37.435
<v Speaker 2>And

01:25:41.240 --> 01:25:42.199
<v Speaker 2>how about

01:25:44.680 --> 01:25:46.119
<v Speaker 2>no. Damn it.

01:25:48.440 --> 01:25:49.800
<v Speaker 2>Do we

01:25:57.055 --> 01:25:59.855
<v Speaker 2>How is this okay. So this this is

01:25:59.855 --> 01:26:01.695
<v Speaker 2>our nasty process.

01:26:02.175 --> 01:26:04.495
<v Speaker 0>Okay. So we've got a process here. Right?

01:26:04.895 --> 01:26:07.775
<v Speaker 0>Yeah. We can do a process

01:26:07.775 --> 01:26:08.415
<v Speaker 0>ID.

01:26:10.380 --> 01:26:13.260
<v Speaker 0>Alright. Let's go in here first. There's

01:26:13.260 --> 01:26:15.340
<v Speaker 0>a way to n s. And this is

01:26:15.340 --> 01:26:16.300
<v Speaker 0>our namespaces.

01:26:16.300 --> 01:26:17.580
<v Speaker 0>So why don't we do an n s?

01:26:17.580 --> 01:26:18.940
<v Speaker 0>Do we have n s center? And then

01:26:19.100 --> 01:26:20.140
<v Speaker 0>Yep. We do. We can tell it to

01:26:20.140 --> 01:26:20.700
<v Speaker 0>enter the.

01:26:23.415 --> 01:26:25.735
<v Speaker 2>So we just give it the ID. Space

01:26:28.695 --> 01:26:29.334
<v Speaker 0>this.

01:26:31.255 --> 01:26:32.375
<v Speaker 0>I'll redo this again.

01:26:36.060 --> 01:26:37.900
<v Speaker 2>This is where we wait for somebody in

01:26:37.900 --> 01:26:39.500
<v Speaker 2>the comments to tell us. Just

01:26:40.460 --> 01:26:42.140
<v Speaker 2>to drive it. Maybe it's f, maybe it's

01:26:42.140 --> 01:26:44.060
<v Speaker 0>not t. I think it might just target

01:26:44.060 --> 01:26:45.740
<v Speaker 0>pet to alright. Okay. Did I just go

01:26:45.740 --> 01:26:47.340
<v Speaker 0>the wrong way around? So is it the

01:26:47.340 --> 01:26:49.100
<v Speaker 0>NS enter mount

01:26:49.485 --> 01:26:51.165
<v Speaker 0>Alright. Oh no. We're not doing pet because

01:26:51.165 --> 01:26:53.324
<v Speaker 0>we know. Oh we could do pet.

01:26:53.965 --> 01:26:54.685
<v Speaker 0>Okay.

01:26:58.845 --> 01:27:00.925
<v Speaker 0>How did I tell the namespace then?

01:27:02.605 --> 01:27:03.405
<v Speaker 0>Target.

01:27:06.710 --> 01:27:08.950
<v Speaker 0>Or dash m for the mountain namespace.

01:27:09.270 --> 01:27:10.070
<v Speaker 0>Mhmm.

01:27:12.870 --> 01:27:14.070
<v Speaker 0>Okay. So

01:27:15.510 --> 01:27:17.190
<v Speaker 0>n s enter

01:27:17.430 --> 01:27:18.550
<v Speaker 0>mount

01:27:19.074 --> 01:27:20.114
<v Speaker 0>prok.

01:27:20.434 --> 01:27:20.755
<v Speaker 0>No?

01:27:32.420 --> 01:27:34.099
<v Speaker 0>I can't remember how to enter.

01:27:34.500 --> 01:27:36.420
<v Speaker 0>I'm feeling Me neither. So we'll figure it

01:27:36.420 --> 01:27:38.179
<v Speaker 2>out together. No. That's fine.

01:27:40.099 --> 01:27:41.300
<v Speaker 2>Did we get a hint?

01:27:42.020 --> 01:27:44.500
<v Speaker 0>Thank you, Noel. I must have been I

01:27:44.500 --> 01:27:45.780
<v Speaker 1>I gave a hint since I think cleaning

01:27:45.780 --> 01:27:47.780
<v Speaker 1>up will be more interesting than continuing to

01:27:47.780 --> 01:27:49.525
<v Speaker 1>hunt. Yeah. Good.

01:27:49.765 --> 01:27:50.725
<v Speaker 2>Thanks.

01:27:51.205 --> 01:27:52.645
<v Speaker 2>K. So let's

01:27:57.605 --> 01:27:59.045
<v Speaker 0>did that not work?

01:27:59.525 --> 01:28:00.005
<v Speaker 0>Okay.

01:28:00.430 --> 01:28:02.110
<v Speaker 0>No. That's our normal host. I don't think

01:28:02.110 --> 01:28:02.989
<v Speaker 0>we're in the Interesting.

01:28:04.510 --> 01:28:06.350
<v Speaker 0>What was your hand? CTRC

01:28:06.350 --> 01:28:08.510
<v Speaker 0>list. Right. Okay. Let's do that.

01:28:09.630 --> 01:28:11.949
<v Speaker 0>And then exec into the container itself.

01:28:14.270 --> 01:28:14.670
<v Speaker 0>Yeah.

01:28:16.135 --> 01:28:16.855
<v Speaker 0>Let's do this.

01:28:33.870 --> 01:28:35.070
<v Speaker 0>Did that not work?

01:28:38.670 --> 01:28:41.070
<v Speaker 2>Because why not? I think maybe I just

01:28:41.070 --> 01:28:42.590
<v Speaker 2>got the wrong way around.

01:28:43.470 --> 01:28:46.110
<v Speaker 0>Maybe. Yeah. I think the IT comes here.

01:28:48.685 --> 01:28:49.405
<v Speaker 0>No.

01:28:51.885 --> 01:28:53.405
<v Speaker 1>Like I said, I couldn't get cry control

01:28:53.405 --> 01:28:55.405
<v Speaker 1>to work, so I installed Nerd CTLs

01:28:55.485 --> 01:28:56.364
<v Speaker 1>instead.

01:28:57.005 --> 01:28:58.925
<v Speaker 1>K. So we But then I deleted it.

01:29:02.110 --> 01:29:03.949
<v Speaker 1>I can I can reinstall it real quick?

01:29:03.949 --> 01:29:04.510
<v Speaker 1>I

01:29:06.510 --> 01:29:08.669
<v Speaker 0>feel like the andesenter should have worked, though.

01:29:09.790 --> 01:29:11.389
<v Speaker 0>Yeah. That was also a bit surprising to

01:29:11.389 --> 01:29:11.550
<v Speaker 2>me.

01:29:12.935 --> 01:29:13.974
<v Speaker 0>Just enter

01:29:14.375 --> 01:29:15.494
<v Speaker 0>a p.

01:29:16.055 --> 01:29:17.655
<v Speaker 0>I've not got a pet anymore.

01:29:18.455 --> 01:29:20.135
<v Speaker 0>P f three x grip.

01:29:21.655 --> 01:29:22.055
<v Speaker 0>Okay.

01:29:29.510 --> 01:29:30.229
<v Speaker 0>Yeah.

01:29:30.389 --> 01:29:32.150
<v Speaker 0>Null's always on the ball with this stuff,

01:29:32.150 --> 01:29:32.869
<v Speaker 0>isn't he?

01:29:33.270 --> 01:29:35.269
<v Speaker 0>I forgot the runtime endpoint.

01:29:37.750 --> 01:29:39.110
<v Speaker 2>I think you got it right.

01:29:43.475 --> 01:29:45.635
<v Speaker 2>No. We got an error.

01:29:50.355 --> 01:29:52.675
<v Speaker 0>Oh, so my container Failed to find container.

01:29:53.395 --> 01:29:55.555
<v Speaker 0>Oh, that's that's okay. I can fix that.

01:29:55.555 --> 01:29:55.715
<v Speaker 0>So

01:30:00.380 --> 01:30:02.300
<v Speaker 2>Yeah. But it's not yeah. But the funny

01:30:02.300 --> 01:30:03.660
<v Speaker 2>thing is it doesn't show up here. Right?

01:30:03.660 --> 01:30:04.860
<v Speaker 2>Maybe there are two

01:30:05.420 --> 01:30:07.340
<v Speaker 2>instances of container d running.

01:30:07.740 --> 01:30:10.060
<v Speaker 0>No. The problem is the cry control, I

01:30:10.060 --> 01:30:12.755
<v Speaker 0>think, defaults to the namespace of kit.

01:30:13.795 --> 01:30:16.114
<v Speaker 0>It's only shows that the Kubernetes pods.

01:30:16.355 --> 01:30:17.235
<v Speaker 2>I see.

01:30:18.115 --> 01:30:19.795
<v Speaker 1>So I I just plopped a a nerd

01:30:19.795 --> 01:30:21.795
<v Speaker 1>CTL binary into the root directory if you

01:30:21.795 --> 01:30:24.995
<v Speaker 1>wanna use that. Awesome. Slash root. There we

01:30:24.995 --> 01:30:25.155
<v Speaker 1>go.

01:30:30.119 --> 01:30:31.639
<v Speaker 0>Alright. Exec,

01:30:32.679 --> 01:30:33.320
<v Speaker 0>this,

01:30:34.199 --> 01:30:35.320
<v Speaker 0>and bash,

01:30:35.639 --> 01:30:36.840
<v Speaker 0>and IT.

01:30:38.440 --> 01:30:39.719
<v Speaker 2>Hey. We're in.

01:30:40.119 --> 01:30:40.440
<v Speaker 2>K.

01:30:42.145 --> 01:30:43.425
<v Speaker 2>That So what is what

01:30:46.625 --> 01:30:47.425
<v Speaker 0>okay.

01:30:50.465 --> 01:30:53.025
<v Speaker 2>So let's look at that script. Right? Oh,

01:30:53.025 --> 01:30:55.425
<v Speaker 2>there's lots of stuff here. Set up and

01:30:55.425 --> 01:30:57.300
<v Speaker 2>run. Let's look. Oh, there's a read me.

01:30:57.300 --> 01:30:58.900
<v Speaker 2>How about we look at that first?

01:31:00.820 --> 01:31:02.340
<v Speaker 2>How how how kind?

01:31:04.820 --> 01:31:06.580
<v Speaker 1>That's just my my notes.

01:31:07.060 --> 01:31:08.980
<v Speaker 1>But it there's probably good info in there.

01:31:08.980 --> 01:31:09.620
<v Speaker 2>Yeah.

01:31:10.020 --> 01:31:11.220
<v Speaker 2>Do you want to look at the

01:31:11.865 --> 01:31:13.785
<v Speaker 2>there's no FIM here. Right? No.

01:31:17.065 --> 01:31:17.865
<v Speaker 2>K.

01:31:19.465 --> 01:31:21.305
<v Speaker 2>Okay. We'll just scroll up. It's not that

01:31:21.305 --> 01:31:21.865
<v Speaker 1>long.

01:31:22.185 --> 01:31:24.505
<v Speaker 2>K. Let's see what it does. This is

01:31:24.505 --> 01:31:26.505
<v Speaker 2>a very nice hacker to leave us the

01:31:26.505 --> 01:31:28.430
<v Speaker 2>notes on what what he did.

01:31:32.590 --> 01:31:34.590
<v Speaker 2>So there's to dos that have been done.

01:31:34.590 --> 01:31:37.470
<v Speaker 2>Create Docker secret before port, protect against failed

01:31:37.470 --> 01:31:38.590
<v Speaker 2>Kube Cuddle calls,

01:31:39.724 --> 01:31:41.804
<v Speaker 2>Create a port which kills some cluster test

01:31:41.804 --> 01:31:44.684
<v Speaker 2>workloads, replicates itself and times.

01:31:46.045 --> 01:31:48.364
<v Speaker 2>Create a private docker registry image.

01:31:48.525 --> 01:31:49.084
<v Speaker 2>Copy

01:31:50.925 --> 01:31:52.844
<v Speaker 2>to worker. Run container.

01:31:54.360 --> 01:31:57.400
<v Speaker 2>K. It's on NerdCutl because you couldn't get

01:31:57.400 --> 01:31:59.079
<v Speaker 2>the thing to work. Okay. What

01:32:00.440 --> 01:32:01.719
<v Speaker 2>I think we can do, though, is just

01:32:01.719 --> 01:32:03.639
<v Speaker 2>we can throw away this

01:32:04.679 --> 01:32:06.679
<v Speaker 2>stop this container from running and then nuke

01:32:06.679 --> 01:32:10.280
<v Speaker 2>everything from the Kubernetes cluster. Right? And then

01:32:09.645 --> 01:32:10.605
<v Speaker 2>that should

01:32:11.085 --> 01:32:12.445
<v Speaker 0>Yep. Help us. But do we want to

01:32:12.445 --> 01:32:14.845
<v Speaker 2>know why it is stopping things from scaling,

01:32:14.845 --> 01:32:16.445
<v Speaker 2>or do we just first get rid of

01:32:16.445 --> 01:32:17.165
<v Speaker 2>the problem?

01:32:17.885 --> 01:32:19.565
<v Speaker 2>I think we should run. It's it's not

01:32:19.565 --> 01:32:21.005
<v Speaker 1>doing anything too intelligent.

01:32:21.165 --> 01:32:21.485
<v Speaker 1>K.

01:32:22.719 --> 01:32:24.959
<v Speaker 2>Yeah. Okay. Let's just get rid of it.

01:32:30.400 --> 01:32:32.079
<v Speaker 2>K. Good. K.

01:32:32.800 --> 01:32:34.480
<v Speaker 2>Let's now go back to the control plane

01:32:34.480 --> 01:32:35.360
<v Speaker 2>node, I suppose.

01:32:36.505 --> 01:32:37.305
<v Speaker 2>Right.

01:32:38.505 --> 01:32:40.505
<v Speaker 2>And then we can do your delete namespaces

01:32:40.505 --> 01:32:42.665
<v Speaker 2>command again that we did before.

01:32:44.505 --> 01:32:45.385
<v Speaker 2>This one.

01:32:47.865 --> 01:32:49.785
<v Speaker 2>And, hopefully, it should terminate this time.

01:32:53.380 --> 01:32:54.499
<v Speaker 2>Or does it?

01:32:55.619 --> 01:32:58.260
<v Speaker 0>Depends on many namespaces we have. Yeah. Everything

01:32:58.260 --> 01:33:00.020
<v Speaker 2>is cordoned as well. Right? So we shouldn't

01:33:00.020 --> 01:33:02.179
<v Speaker 2>have new things starting either. The work very

01:33:02.179 --> 01:33:03.860
<v Speaker 0>same. Cordoned. Yeah. K.

01:33:09.665 --> 01:33:11.585
<v Speaker 0>You're getting praised for your make file.

01:33:13.265 --> 01:33:15.985
<v Speaker 2>Yeah. If a make file, read me.

01:33:17.344 --> 01:33:18.465
<v Speaker 2>It's good good work.

01:33:22.410 --> 01:33:24.730
<v Speaker 2>This is taking a little hoping it was

01:33:24.730 --> 01:33:26.410
<v Speaker 0>just the only thing you had done was

01:33:26.410 --> 01:33:28.170
<v Speaker 0>scale our deployment to zero.

01:33:28.570 --> 01:33:30.969
<v Speaker 2>Yeah. Yeah. I was like, oh, yes. We

01:33:30.970 --> 01:33:32.570
<v Speaker 2>got it. It's easy.

01:33:33.370 --> 01:33:34.170
<v Speaker 2>We got this.

01:33:35.614 --> 01:33:37.855
<v Speaker 1>This tough to test without

01:33:38.175 --> 01:33:40.575
<v Speaker 1>having things go completely haywire.

01:33:40.575 --> 01:33:41.054
<v Speaker 1>So

01:33:41.935 --> 01:33:43.695
<v Speaker 1>I was I was I was very nervous

01:33:43.695 --> 01:33:45.135
<v Speaker 1>at that moment whether or not it would

01:33:45.135 --> 01:33:46.415
<v Speaker 1>actually work. Mhmm.

01:33:47.540 --> 01:33:49.380
<v Speaker 0>This is a lot of namespaces.

01:33:49.860 --> 01:33:52.980
<v Speaker 2>It's oh, you you cancel it. Turn it.

01:33:52.980 --> 01:33:53.540
<v Speaker 2>Yeah.

01:33:54.420 --> 01:33:56.180
<v Speaker 2>It's the number going down. That's the question.

01:33:56.180 --> 01:33:57.860
<v Speaker 2>Yeah. How many do we have? Yeah. Yeah.

01:33:57.940 --> 01:34:00.825
<v Speaker 0>Wanted to check. K. 3,086.

01:34:00.825 --> 01:34:01.945
<v Speaker 2>And if you run it,

01:34:04.665 --> 01:34:06.425
<v Speaker 2>it's going down. It's just gonna take a

01:34:06.425 --> 01:34:06.905
<v Speaker 2>while.

01:34:08.665 --> 01:34:10.745
<v Speaker 2>Well yeah. We have to get rid of

01:34:10.745 --> 01:34:12.744
<v Speaker 2>all of them first, I think. Yeah.

01:34:14.025 --> 01:34:17.305
<v Speaker 2>If you do dash dash weights

01:34:16.050 --> 01:34:19.489
<v Speaker 2>equals false, it might parallelize

01:34:20.130 --> 01:34:21.809
<v Speaker 2>it. Because now every time it's waiting for

01:34:21.809 --> 01:34:23.409
<v Speaker 2>the namespace to be cleaned up

01:34:24.610 --> 01:34:27.170
<v Speaker 2>before it executes the next command, so maybe

01:34:27.170 --> 01:34:27.969
<v Speaker 2>we can

01:34:28.210 --> 01:34:30.449
<v Speaker 1>Fire and forget. Exactly.

01:34:31.825 --> 01:34:35.425
<v Speaker 2>No. That didn't make it much more quicker.

01:34:35.425 --> 01:34:36.145
<v Speaker 2>Darn it.

01:34:38.385 --> 01:34:39.505
<v Speaker 2>We can maybe

01:34:40.225 --> 01:34:42.145
<v Speaker 2>XARX do it in parallel.

01:34:42.945 --> 01:34:44.465
<v Speaker 2>Is there a flag for XARX to do

01:34:44.465 --> 01:34:45.505
<v Speaker 2>things in parallel?

01:34:46.625 --> 01:34:49.010
<v Speaker 2>Can you use? I have no no no

01:34:49.010 --> 01:34:50.290
<v Speaker 0>idea. You

01:34:51.090 --> 01:34:53.010
<v Speaker 1>want me to issue the same command from

01:34:53.010 --> 01:34:54.210
<v Speaker 1>my laptop and see if we

01:34:55.010 --> 01:34:57.250
<v Speaker 0>No. I think it's going right.

01:34:57.730 --> 01:34:58.530
<v Speaker 1>Yeah. Yeah.

01:34:59.650 --> 01:35:00.290
<v Speaker 0>Slowly.

01:35:03.965 --> 01:35:05.965
<v Speaker 0>Is there a faster Yeah. I mean, because

01:35:06.605 --> 01:35:08.445
<v Speaker 1>that node is now cordoned,

01:35:08.765 --> 01:35:10.365
<v Speaker 1>none of those workloads should be able to

01:35:10.365 --> 01:35:12.365
<v Speaker 1>run and continue to self replicate. So I

01:35:12.365 --> 01:35:14.365
<v Speaker 1>I suspect that once we get them cleaned

01:35:14.365 --> 01:35:16.400
<v Speaker 1>up, everything will just work fine. But do

01:35:16.400 --> 01:35:18.960
<v Speaker 0>you modify the maximum pod limit on the

01:35:18.960 --> 01:35:19.599
<v Speaker 0>node?

01:35:24.320 --> 01:35:26.000
<v Speaker 0>Or no? I guess they're just queued up

01:35:26.000 --> 01:35:28.239
<v Speaker 0>while they wait on each other exiting. Alright?

01:35:30.415 --> 01:35:33.054
<v Speaker 2>The jobs. Yeah. I think Kubernetes make sure

01:35:33.054 --> 01:35:33.614
<v Speaker 2>that

01:35:34.895 --> 01:35:36.574
<v Speaker 2>it doesn't spawn all the jobs at the

01:35:36.574 --> 01:35:38.255
<v Speaker 2>same time. It queues them up.

01:35:39.614 --> 01:35:40.574
<v Speaker 2>Doesn't it?

01:35:41.935 --> 01:35:44.740
<v Speaker 2>I don't know, actually. Yeah. Not not familiar

01:35:44.740 --> 01:35:46.660
<v Speaker 0>with how that handles it either.

01:35:47.620 --> 01:35:49.380
<v Speaker 0>But I just need to wait another twenty,

01:35:49.380 --> 01:35:51.380
<v Speaker 0>thirty minutes for this to delete. Yeah.

01:35:53.300 --> 01:35:54.900
<v Speaker 2>But we we we we can do it

01:35:54.900 --> 01:35:57.375
<v Speaker 2>in parallel though, I think. Yeah. Well, let's

01:35:57.375 --> 01:35:59.295
<v Speaker 0>hope it or not. Let's leave that deleting.

01:35:59.295 --> 01:36:00.895
<v Speaker 0>Right? We're we're pretty confident we're not gonna

01:36:00.895 --> 01:36:02.335
<v Speaker 0>get that back. I've opened a new control

01:36:02.335 --> 01:36:03.775
<v Speaker 0>plane one. So let's try and get our

01:36:03.775 --> 01:36:05.135
<v Speaker 0>our deployment updated.

01:36:10.400 --> 01:36:13.119
<v Speaker 0>But we we can't encode on that node

01:36:13.119 --> 01:36:15.519
<v Speaker 0>probably until all those namespaces are away.

01:36:17.040 --> 01:36:18.559
<v Speaker 2>And we could edit

01:36:18.560 --> 01:36:21.920
<v Speaker 2>we'll add a toleration to our clustered thing

01:36:21.920 --> 01:36:24.295
<v Speaker 2>and just schedule it on the control plane.

01:36:24.295 --> 01:36:25.574
<v Speaker 2>Is that is that cheating?

01:36:27.415 --> 01:36:28.775
<v Speaker 0>No. No. I guess not.

01:36:29.015 --> 01:36:29.655
<v Speaker 0>Yeah.

01:36:34.775 --> 01:36:36.935
<v Speaker 0>Let's just try and wrap this up in

01:36:36.935 --> 01:36:38.455
<v Speaker 0>the next few minutes. I know we're a

01:36:38.455 --> 01:36:40.270
<v Speaker 0>little bit over, So let's see if we

01:36:40.270 --> 01:36:41.150
<v Speaker 0>can get through this.

01:36:46.190 --> 01:36:47.310
<v Speaker 0>Did you join?

01:36:48.430 --> 01:36:49.390
<v Speaker 2>Wait. One second.

01:37:02.284 --> 01:37:04.909
<v Speaker 2>I did not join. Wait. Which one is

01:37:04.909 --> 01:37:06.110
<v Speaker 2>it? The other one that, of course, created

01:37:06.110 --> 01:37:07.789
<v Speaker 2>a minute ago. Yep. I'm in.

01:37:13.230 --> 01:37:15.150
<v Speaker 1>Alright. My connection dropped for a minute. Hopefully

01:37:15.150 --> 01:37:17.070
<v Speaker 1>hopefully, you can hear me now. Oh, yeah.

01:37:17.070 --> 01:37:18.830
<v Speaker 2>Yep. We hear you. Great.

01:37:19.995 --> 01:37:21.915
<v Speaker 2>Do you want do we want to move

01:37:21.915 --> 01:37:23.915
<v Speaker 2>it to the control plane?

01:37:24.235 --> 01:37:24.475
<v Speaker 2>The

01:37:25.915 --> 01:37:28.315
<v Speaker 2>we can remove the no schedule thing from

01:37:28.315 --> 01:37:30.235
<v Speaker 2>the control plane, or we can add a

01:37:30.235 --> 01:37:31.435
<v Speaker 2>toleration to our

01:37:32.000 --> 01:37:32.800
<v Speaker 2>workloads.

01:37:32.800 --> 01:37:34.160
<v Speaker 2>Either works, I guess.

01:37:35.120 --> 01:37:35.840
<v Speaker 0>I

01:37:36.800 --> 01:37:38.480
<v Speaker 0>don't remember how to type a toleration at

01:37:38.480 --> 01:37:40.080
<v Speaker 0>the top of my head, do you? Yes.

01:37:40.080 --> 01:37:41.680
<v Speaker 2>No. So what I'm gonna do instead is

01:37:41.680 --> 01:37:44.000
<v Speaker 2>edit the note, the because then those jobs

01:37:44.000 --> 01:37:45.120
<v Speaker 0>make a schedule on it.

01:37:46.885 --> 01:37:48.805
<v Speaker 2>Oh, good point. So we cannot do that.

01:37:48.805 --> 01:37:50.085
<v Speaker 2>Yeah. Exactly. So I

01:37:50.485 --> 01:37:53.125
<v Speaker 2>I do. Let's let's key key k edit

01:37:53.125 --> 01:37:54.005
<v Speaker 2>the

01:37:54.245 --> 01:37:55.365
<v Speaker 2>control play note.

01:38:02.000 --> 01:38:03.999
<v Speaker 2>We can do it. We can do it.

01:38:08.560 --> 01:38:09.840
<v Speaker 2>Where are the things?

01:38:12.960 --> 01:38:15.120
<v Speaker 2>I think the syntax comment on is we

01:38:15.120 --> 01:38:16.560
<v Speaker 0>could have done x I x with a

01:38:16.560 --> 01:38:17.760
<v Speaker 0>dash p for parallel.

01:38:19.095 --> 01:38:21.415
<v Speaker 0>I'll try and speed that up just now.

01:38:21.495 --> 01:38:23.974
<v Speaker 2>And do p 16 or something. It's a

01:38:24.215 --> 01:38:26.455
<v Speaker 2>it's a very Yeah. We still got a

01:38:26.455 --> 01:38:27.335
<v Speaker 0>few to go.

01:38:30.775 --> 01:38:32.135
<v Speaker 1>2,000 or so.

01:38:32.855 --> 01:38:33.175
<v Speaker 0>Yeah.

01:38:33.770 --> 01:38:35.930
<v Speaker 0>Mean Yeah. Well, this machine has, like, 48

01:38:35.930 --> 01:38:37.929
<v Speaker 2>course. Right? So we can do 48.

01:38:39.770 --> 01:38:41.130
<v Speaker 2>Is this going faster?

01:38:43.050 --> 01:38:44.329
<v Speaker 0>I don't know.

01:38:45.930 --> 01:38:46.730
<v Speaker 2>In the meantime,

01:38:47.705 --> 01:38:48.665
<v Speaker 2>how

01:38:48.665 --> 01:38:50.344
<v Speaker 2>do I select this text?

01:38:51.225 --> 01:38:53.545
<v Speaker 2>Usually, I have a global buffer in Vim.

01:38:53.625 --> 01:38:54.745
<v Speaker 2>Now I don't know how to

01:38:55.705 --> 01:38:58.105
<v Speaker 2>like, it's actually selecting the text in in

01:38:58.105 --> 01:39:01.100
<v Speaker 2>Vim now instead of I I copied it

01:39:01.100 --> 01:39:01.980
<v Speaker 0>if that helps.

01:39:02.380 --> 01:39:03.020
<v Speaker 2>Okay.

01:39:04.060 --> 01:39:06.460
<v Speaker 2>So now we're just gonna edit the

01:39:07.100 --> 01:39:07.900
<v Speaker 2>deployment,

01:39:09.020 --> 01:39:11.260
<v Speaker 2>and then we're just gonna paste it in

01:39:11.260 --> 01:39:12.620
<v Speaker 2>the spec here.

01:39:17.594 --> 01:39:19.435
<v Speaker 2>And then we change the words taints to

01:39:19.435 --> 01:39:21.834
<v Speaker 2>tolerations, and then Is that it? Yeah.

01:39:22.395 --> 01:39:23.354
<v Speaker 2>I think so.

01:39:23.994 --> 01:39:25.994
<v Speaker 0>Oh, sorry. Off you go. I went K.

01:39:25.994 --> 01:39:26.715
<v Speaker 2>Right. Okay.

01:39:33.770 --> 01:39:36.969
<v Speaker 2>I think the Seven 1,700 to go. I

01:39:41.610 --> 01:39:43.210
<v Speaker 2>think this should help. Yeah.

01:39:48.225 --> 01:39:49.905
<v Speaker 0>Here we go. It's great.

01:39:50.945 --> 01:39:52.465
<v Speaker 1>We'll have to do the same for Postgres.

01:39:52.465 --> 01:39:52.945
<v Speaker 1>Right?

01:39:53.505 --> 01:39:54.705
<v Speaker 2>Yes. Correct.

01:39:56.305 --> 01:39:59.185
<v Speaker 2>Edit. Is that a stateful, Seth? It is.

01:40:02.300 --> 01:40:05.579
<v Speaker 2>It's,

01:40:05.579 --> 01:40:06.139
<v Speaker 2>again,

01:40:07.020 --> 01:40:09.020
<v Speaker 2>your turn to do your magic. Oh, yeah.

01:40:09.020 --> 01:40:11.820
<v Speaker 0>My magic. I'm the pester. That's where we

01:40:11.820 --> 01:40:12.380
<v Speaker 0>are. Right?

01:40:16.545 --> 01:40:19.265
<v Speaker 0>Well, you can do the rename. That's

01:40:19.265 --> 01:40:20.145
<v Speaker 0>your skill.

01:40:20.225 --> 01:40:21.105
<v Speaker 0>Exactly.

01:40:22.065 --> 01:40:23.665
<v Speaker 1>Do you need me to do anything here?

01:40:25.105 --> 01:40:29.265
<v Speaker 0>No. The tabs. The You've

01:40:29.265 --> 01:40:29.985
<v Speaker 0>done enough, Sid.

01:40:33.070 --> 01:40:34.270
<v Speaker 0>K. There you go.

01:40:36.350 --> 01:40:38.750
<v Speaker 2>We might have to Yeah. But I think

01:40:39.390 --> 01:40:41.469
<v Speaker 0>we'll need to do a little delete there.

01:40:41.630 --> 01:40:44.110
<v Speaker 0>Gotta reschedule. Because it needs needs it tries

01:40:44.110 --> 01:40:47.425
<v Speaker 2>to be friendly against stateful service. We we've

01:40:47.425 --> 01:40:48.705
<v Speaker 0>made that more difficult than we had to.

01:40:48.705 --> 01:40:50.145
<v Speaker 0>We could just have added node name to

01:40:50.145 --> 01:40:51.105
<v Speaker 0>both of those.

01:40:51.665 --> 01:40:53.185
<v Speaker 0>What is the control plan mode

01:40:54.465 --> 01:40:56.785
<v Speaker 0>rather than going through the scheduler. But

01:40:57.460 --> 01:40:59.700
<v Speaker 2>it's Okay. It's up, I guess. Well, it's

01:40:59.700 --> 01:41:01.380
<v Speaker 2>not ready yet, but yeah. Now it is.

01:41:01.380 --> 01:41:02.420
<v Speaker 2>Okay. We have it.

01:41:03.300 --> 01:41:04.900
<v Speaker 0>Alright. Do you wanna do the

01:41:05.300 --> 01:41:06.900
<v Speaker 0>do the image upgrade and then we'll do

01:41:06.900 --> 01:41:08.180
<v Speaker 0>the port forward? I don't think we need

01:41:08.180 --> 01:41:09.780
<v Speaker 0>to port forward to p one just

01:41:10.175 --> 01:41:12.895
<v Speaker 1>Yeah. I didn't really touch anything system wise,

01:41:12.895 --> 01:41:14.815
<v Speaker 1>so I suspect it'll work just fine.

01:41:15.935 --> 01:41:17.775
<v Speaker 2>Okay. Let's look at this version.

01:41:18.335 --> 01:41:20.255
<v Speaker 0>I'm just gonna for a little laugh, take

01:41:20.255 --> 01:41:21.295
<v Speaker 0>a look at our namespace.

01:41:23.430 --> 01:41:24.789
<v Speaker 0>1,200 to go.

01:41:26.230 --> 01:41:27.910
<v Speaker 0>I don't think that's gonna finish by the

01:41:27.910 --> 01:41:29.510
<v Speaker 0>time we wrap up.

01:41:34.390 --> 01:41:35.830
<v Speaker 0>Rule out deployment status.

01:41:37.114 --> 01:41:38.474
<v Speaker 0>Our status deployment.

01:41:39.114 --> 01:41:41.995
<v Speaker 2>Successfully rolled out. There we go. Well, let's

01:41:41.995 --> 01:41:43.114
<v Speaker 2>give it a shot.

01:41:46.235 --> 01:41:47.435
<v Speaker 0>Let's give it a shot.

01:41:59.400 --> 01:42:00.199
<v Speaker 0>That's the dance.

01:42:03.574 --> 01:42:04.454
<v Speaker 1>Nice work.

01:42:05.815 --> 01:42:08.775
<v Speaker 0>Damn it. Both of you. That was tough.

01:42:10.135 --> 01:42:10.855
<v Speaker 0>Yep.

01:42:12.855 --> 01:42:15.175
<v Speaker 1>Yeah. I like I like the the cordon

01:42:15.175 --> 01:42:15.894
<v Speaker 1>strategy.

01:42:15.975 --> 01:42:17.980
<v Speaker 1>My I I had the same idea as

01:42:17.980 --> 01:42:19.659
<v Speaker 1>Irian to fix it in terms of block

01:42:19.659 --> 01:42:21.979
<v Speaker 1>Docker Hub and and then clean things up.

01:42:23.500 --> 01:42:25.179
<v Speaker 0>Yeah. I I, you know,

01:42:25.659 --> 01:42:27.420
<v Speaker 0>I don't know if it's just, you know,

01:42:27.420 --> 01:42:29.685
<v Speaker 0>this sure or what, but it's it's it's

01:42:29.685 --> 01:42:31.445
<v Speaker 0>always so obvious that, yeah, we just have

01:42:31.445 --> 01:42:33.605
<v Speaker 0>to coordinate to stop this replication happening. Like,

01:42:33.605 --> 01:42:35.445
<v Speaker 0>we knew it was replicating, but still we

01:42:35.445 --> 01:42:36.084
<v Speaker 0>were focused

01:42:36.645 --> 01:42:39.445
<v Speaker 0>on trying to understand the why rather than

01:42:39.844 --> 01:42:40.564
<v Speaker 0>actually

01:42:40.724 --> 01:42:43.520
<v Speaker 2>stop First, stop stop the cause and then

01:42:43.520 --> 01:42:45.760
<v Speaker 2>investigate. Right? Instead of the other way around.

01:42:45.760 --> 01:42:48.159
<v Speaker 2>Now we've got ourselves in a situation where

01:42:48.560 --> 01:42:50.239
<v Speaker 2>we need to run delete for half an

01:42:50.239 --> 01:42:52.480
<v Speaker 2>hour. I I think that's the context that's

01:42:52.480 --> 01:42:54.000
<v Speaker 0>important. Right? We we know this is not

01:42:54.000 --> 01:42:56.000
<v Speaker 0>a real production service, so we don't actually

01:42:56.000 --> 01:42:58.545
<v Speaker 0>think about all of those other things first.

01:42:58.545 --> 01:42:59.585
<v Speaker 0>And I think I need to try and

01:42:59.585 --> 01:43:01.665
<v Speaker 0>flip that mindset in my head. Yeah. The

01:43:01.665 --> 01:43:02.785
<v Speaker 0>the card and

01:43:03.265 --> 01:43:04.225
<v Speaker 0>help, but

01:43:04.625 --> 01:43:06.385
<v Speaker 0>that was a pretty nefarious script.

01:43:08.385 --> 01:43:09.905
<v Speaker 2>That was So what did it do? We

01:43:09.905 --> 01:43:11.860
<v Speaker 2>actually didn't read it. And I guess the

01:43:11.860 --> 01:43:14.500
<v Speaker 2>whole API server thing was a we we

01:43:14.500 --> 01:43:17.140
<v Speaker 2>were just confused about some output that didn't

01:43:17.140 --> 01:43:18.740
<v Speaker 2>have anything to do with it. Yeah. Or

01:43:18.740 --> 01:43:20.660
<v Speaker 2>did it? Yeah. I mean, the the it's

01:43:20.660 --> 01:43:23.060
<v Speaker 1>just based on a KubeCTL container. I copied

01:43:23.060 --> 01:43:23.860
<v Speaker 1>in my credentials.

01:43:24.185 --> 01:43:26.745
<v Speaker 1>It pulls to see if the cluster deployment

01:43:26.745 --> 01:43:28.905
<v Speaker 1>has any pods. If it has pods, then

01:43:28.905 --> 01:43:30.985
<v Speaker 1>it basically flips a trigger and and from

01:43:30.985 --> 01:43:32.985
<v Speaker 1>then on, self replicates.

01:43:34.425 --> 01:43:37.579
<v Speaker 0>A worm. You gave us a worm. Yeah.

01:43:38.300 --> 01:43:40.460
<v Speaker 1>And so I've I I put it in

01:43:40.460 --> 01:43:42.380
<v Speaker 1>a container on the the worker because I

01:43:42.380 --> 01:43:44.300
<v Speaker 1>figured if I put it directly on the

01:43:44.300 --> 01:43:45.820
<v Speaker 1>worker, it might be easier to find. But

01:43:45.820 --> 01:43:47.500
<v Speaker 1>if it's just if you're just seeing, oh,

01:43:47.500 --> 01:43:49.340
<v Speaker 1>container d is running some stuff,

01:43:50.014 --> 01:43:50.974
<v Speaker 1>that seemed

01:43:51.215 --> 01:43:53.854
<v Speaker 1>seemed like it would look normal ish.

01:43:54.735 --> 01:43:55.374
<v Speaker 0>Yeah.

01:43:56.014 --> 01:43:58.255
<v Speaker 0>It was I thought yeah. I think

01:43:59.054 --> 01:44:00.735
<v Speaker 0>we knew there was a process, but trying

01:44:00.735 --> 01:44:02.895
<v Speaker 0>to find it was was pretty challenging.

01:44:03.920 --> 01:44:06.240
<v Speaker 0>Nice work, both of you. Yep. Very well

01:44:06.240 --> 01:44:06.880
<v Speaker 0>played.

01:44:07.600 --> 01:44:09.600
<v Speaker 0>Unfortunately, two really tough containers.

01:44:09.680 --> 01:44:11.040
<v Speaker 0>I'm gonna have to make sure whoever's on

01:44:11.040 --> 01:44:12.320
<v Speaker 0>next week makes it a lot easier for

01:44:12.320 --> 01:44:12.960
<v Speaker 0>me because I

01:44:15.200 --> 01:44:17.295
<v Speaker 2>We can then edit the deployment and scale

01:44:17.295 --> 01:44:18.495
<v Speaker 2>it up to one and then we can

01:44:18.495 --> 01:44:21.215
<v Speaker 2>celebrate. Like Yes. That that was it. I

01:44:21.215 --> 01:44:22.655
<v Speaker 0>need someone just to come on and just

01:44:22.655 --> 01:44:24.575
<v Speaker 0>do something really simple because

01:44:24.815 --> 01:44:26.575
<v Speaker 0>these are tough. Okay. They seem to be

01:44:26.575 --> 01:44:27.935
<v Speaker 0>just getting harder and harder.

01:44:28.440 --> 01:44:32.200
<v Speaker 0>But hopefully, our exploration is still providing viable

01:44:32.200 --> 01:44:34.840
<v Speaker 0>knowledge to to everyone else. And hopefully, not

01:44:34.840 --> 01:44:36.600
<v Speaker 0>giving too many people bad ideas for me

01:44:36.600 --> 01:44:39.000
<v Speaker 0>to break clusters. That would be unintended. And

01:44:39.000 --> 01:44:40.760
<v Speaker 2>and I do think that that will be

01:44:40.760 --> 01:44:43.585
<v Speaker 2>a side effect maybe. I don't know. Yeah.

01:44:43.585 --> 01:44:44.945
<v Speaker 0>I wonder how many people are gonna go

01:44:44.945 --> 01:44:47.345
<v Speaker 0>write their own little Warming container that does

01:44:47.345 --> 01:44:49.265
<v Speaker 0>self replication and bring it down the machine.

01:44:49.265 --> 01:44:51.185
<v Speaker 0>That's Well, so I I got the idea

01:44:51.185 --> 01:44:52.545
<v Speaker 1>for it because I I do some work

01:44:52.545 --> 01:44:55.470
<v Speaker 1>with Kubeflow, and I wrote a recursive Kubeflow

01:44:55.470 --> 01:44:57.790
<v Speaker 1>pipeline and it got out of hand on

01:44:57.790 --> 01:44:59.310
<v Speaker 1>me one time. And so the way that

01:44:59.310 --> 01:45:00.910
<v Speaker 1>I stopped that was to delete the image

01:45:00.910 --> 01:45:01.869
<v Speaker 1>that it was pulling

01:45:02.190 --> 01:45:04.349
<v Speaker 1>and then go clean stuff up. But

01:45:04.830 --> 01:45:08.110
<v Speaker 0>Yeah. I think our container d alias would

01:45:06.765 --> 01:45:08.605
<v Speaker 0>had a very similar effect there just to

01:45:08.605 --> 01:45:09.805
<v Speaker 0>stop it doing that.

01:45:11.165 --> 01:45:12.525
<v Speaker 0>I know we went over, but thank you

01:45:12.525 --> 01:45:14.125
<v Speaker 0>both for sticking with us. Thank you for

01:45:14.125 --> 01:45:16.845
<v Speaker 0>sharing your knowledge and horrible ideas with us.

01:45:16.845 --> 01:45:18.845
<v Speaker 0>And I hope you both had fun and

01:45:18.845 --> 01:45:21.219
<v Speaker 0>I'll speak to you all again later. Yeah.

01:45:21.219 --> 01:45:23.060
<v Speaker 1>It was fun. Thanks for having us. Alright.

01:45:23.060 --> 01:45:24.179
<v Speaker 0>Have a great day. I'll speak to you

01:45:24.179 --> 01:45:26.579
<v Speaker 0>soon. Bye. See you. Ciao. Ciao. Take care.
