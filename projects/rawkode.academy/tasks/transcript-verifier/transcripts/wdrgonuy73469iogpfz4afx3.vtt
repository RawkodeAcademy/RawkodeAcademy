WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 873e00a1-e7c1-4bcc-85fd-ce8dc3df60c8
Created: 2025-04-29T17:10:27.451Z
Duration: 871.9507
Channels: 1

00:00:16.095 --> 00:00:18.415
<v Speaker 0>Hello, and welcome back to the complete guide

00:00:18.415 --> 00:00:21.455
<v Speaker 0>to Teleport here at the Rawkode Academy.

00:00:22.575 --> 00:00:24.654
<v Speaker 0>In this second tutorial, we're gonna take a

00:00:24.654 --> 00:00:28.735
<v Speaker 0>look at using Teleport provided container images

00:00:28.020 --> 00:00:30.820
<v Speaker 0>and running Teleport locally on your own machine

00:00:30.820 --> 00:00:33.620
<v Speaker 0>using Docker for Mac, Docker for Windows, or

00:00:33.620 --> 00:00:35.940
<v Speaker 0>any container runtime on Linux distribution.

00:00:36.740 --> 00:00:39.460
<v Speaker 0>We will also explore using Docker Compose to

00:00:39.460 --> 00:00:42.254
<v Speaker 0>provide a lab like experience using some custom

00:00:42.254 --> 00:00:44.495
<v Speaker 0>images provided by Teleport as well.

00:00:44.894 --> 00:00:46.655
<v Speaker 0>We've got lots to cover today. There'll be

00:00:46.655 --> 00:00:48.815
<v Speaker 0>a whole lot of fun. Let's get started.

00:00:49.375 --> 00:00:51.375
<v Speaker 0>So as we do on these courses, we're

00:00:51.375 --> 00:00:53.295
<v Speaker 0>going to rely on the projects and documentation

00:00:53.295 --> 00:00:54.414
<v Speaker 0>as much as possible.

00:00:55.710 --> 00:00:58.270
<v Speaker 0>Let's jump over to Teleport's documentation right now.

00:01:00.110 --> 00:01:00.910
<v Speaker 0>Perfect.

00:01:01.949 --> 00:01:03.870
<v Speaker 0>So as we can see here, we have

00:01:03.870 --> 00:01:06.909
<v Speaker 0>an entire page dedicated as a to running

00:01:06.909 --> 00:01:09.229
<v Speaker 0>Teleport with Docker, which is great for us.

00:01:10.165 --> 00:01:11.765
<v Speaker 0>We can see that the images are hosted

00:01:11.765 --> 00:01:14.165
<v Speaker 0>on kuai.io and we have access to a

00:01:14.165 --> 00:01:16.165
<v Speaker 0>seven image, which is an alias to the

00:01:16.165 --> 00:01:18.805
<v Speaker 0>latest version of seven. X release,

00:01:18.965 --> 00:01:22.005
<v Speaker 0>but of course semantically versioned and tagged images

00:01:22.005 --> 00:01:23.685
<v Speaker 0>are available if that is a route that

00:01:23.685 --> 00:01:25.420
<v Speaker 0>you wish to take and one that I

00:01:25.420 --> 00:01:27.580
<v Speaker 0>would definitely encourage as much as possible.

00:01:28.780 --> 00:01:31.820
<v Speaker 0>Now there's one major difference from what happens

00:01:31.820 --> 00:01:35.100
<v Speaker 0>with Teleport running and a container image versus

00:01:35.340 --> 00:01:37.820
<v Speaker 0>the installation methods that we used on bare

00:01:37.820 --> 00:01:40.575
<v Speaker 0>metal machines on Red Hat, Debian and any

00:01:40.575 --> 00:01:42.255
<v Speaker 0>other distribution using curl.

00:01:42.975 --> 00:01:45.055
<v Speaker 0>If you watched the first tutorial,

00:01:45.215 --> 00:01:47.375
<v Speaker 0>you'll notice that we didn't configure Teleport in

00:01:47.375 --> 00:01:50.415
<v Speaker 0>any way. We just installed the package

00:01:50.575 --> 00:01:53.295
<v Speaker 0>and allowed the systemd unit fail to run

00:01:53.295 --> 00:01:53.775
<v Speaker 0>Teleport.

00:01:54.820 --> 00:01:56.980
<v Speaker 0>When this happened, Teleport detected that there was

00:01:56.980 --> 00:01:59.700
<v Speaker 0>no configuration and generated one for us.

00:02:00.420 --> 00:02:02.500
<v Speaker 0>However, we will not get the same experience

00:02:02.500 --> 00:02:04.340
<v Speaker 0>when running the container image.

00:02:04.740 --> 00:02:05.540
<v Speaker 0>Let's take a look.

00:02:06.465 --> 00:02:09.345
<v Speaker 0>So instead of starting with these commands, we're

00:02:09.345 --> 00:02:10.545
<v Speaker 0>just going to copy

00:02:11.665 --> 00:02:13.105
<v Speaker 0>the image name.

00:02:14.545 --> 00:02:16.305
<v Speaker 0>And if we run over to a terminal

00:02:16.305 --> 00:02:18.864
<v Speaker 0>and do a Docker container run dash rm

00:02:18.864 --> 00:02:21.620
<v Speaker 0>dash it, and we run this without any

00:02:21.620 --> 00:02:23.540
<v Speaker 0>other parameters, what we're telling

00:02:23.780 --> 00:02:26.340
<v Speaker 0>Docker or any other container runtime to do

00:02:26.420 --> 00:02:29.220
<v Speaker 0>is to pull this image and run everything

00:02:29.220 --> 00:02:30.580
<v Speaker 0>by the default.

00:02:30.820 --> 00:02:32.900
<v Speaker 0>This would be the entry point and command

00:02:32.900 --> 00:02:36.025
<v Speaker 0>specified inside of the Docker file or the

00:02:36.025 --> 00:02:37.705
<v Speaker 0>tool that we choose to generate it.

00:02:39.385 --> 00:02:41.225
<v Speaker 0>When we run this for the Teleport container

00:02:41.225 --> 00:02:43.465
<v Speaker 0>images, it's going to exit and tell us,

00:02:43.465 --> 00:02:45.545
<v Speaker 0>Hey, there was no configuration.

00:02:46.505 --> 00:02:48.185
<v Speaker 0>So the first major difference is in a

00:02:48.185 --> 00:02:51.990
<v Speaker 0>container environment, we must provide an explicit configuration.

00:02:52.550 --> 00:02:53.590
<v Speaker 0>And we're going to take a look at

00:02:53.590 --> 00:02:55.670
<v Speaker 0>how to generate that now also using the

00:02:55.670 --> 00:02:57.030
<v Speaker 0>same container image.

00:02:58.709 --> 00:03:01.110
<v Speaker 0>So the Teleport binary does ship with a

00:03:01.110 --> 00:03:02.710
<v Speaker 0>configure command, which will

00:03:02.870 --> 00:03:04.870
<v Speaker 0>print out a base configuration for us to

00:03:04.870 --> 00:03:07.174
<v Speaker 0>use. However, we may also want to understand

00:03:07.174 --> 00:03:09.814
<v Speaker 0>why this behavior is changed and we can

00:03:09.814 --> 00:03:11.974
<v Speaker 0>actually inspect the container image to see what

00:03:11.974 --> 00:03:13.254
<v Speaker 0>is going on underneath the hood.

00:03:18.560 --> 00:03:21.200
<v Speaker 0>If we do a Docker image and specs

00:03:21.200 --> 00:03:23.040
<v Speaker 0>passing in the image name, we'll be able

00:03:23.040 --> 00:03:25.280
<v Speaker 0>to see all the metadata from this container

00:03:25.280 --> 00:03:26.400
<v Speaker 0>image manifest.

00:03:26.640 --> 00:03:28.319
<v Speaker 0>The one that's important to us as the

00:03:28.319 --> 00:03:30.319
<v Speaker 0>entry point and the command, because we want

00:03:30.319 --> 00:03:32.079
<v Speaker 0>to know what the default actions are.

00:03:36.255 --> 00:03:38.015
<v Speaker 0>Now let's just quickly jump to the command,

00:03:38.015 --> 00:03:39.455
<v Speaker 0>which we can see is null.

00:03:39.775 --> 00:03:41.535
<v Speaker 0>And then the entry point, which we can

00:03:41.535 --> 00:03:42.095
<v Speaker 0>see

00:03:42.495 --> 00:03:45.455
<v Speaker 0>they're using a package called dumbinit, which is

00:03:45.455 --> 00:03:47.375
<v Speaker 0>an init system built for containers

00:03:47.455 --> 00:03:50.910
<v Speaker 0>to run Teleport Star and a very explicit

00:03:50.910 --> 00:03:54.030
<v Speaker 0>dash C pointing to a Teleport configuration.

00:03:55.310 --> 00:03:57.950
<v Speaker 0>So we could bypass this behavior by overriding

00:03:57.950 --> 00:04:00.510
<v Speaker 0>the entry point and calling our own Teleport

00:04:00.510 --> 00:04:01.230
<v Speaker 0>Star,

00:04:01.550 --> 00:04:03.950
<v Speaker 0>allowing the container image to generate that config

00:04:03.950 --> 00:04:04.430
<v Speaker 0>for us.

00:04:21.930 --> 00:04:23.370
<v Speaker 0>And while this works,

00:04:23.610 --> 00:04:26.330
<v Speaker 0>this is not really a great approach

00:04:26.569 --> 00:04:27.449
<v Speaker 0>because

00:04:27.449 --> 00:04:29.530
<v Speaker 0>that configuration is now inside of a running

00:04:29.530 --> 00:04:31.930
<v Speaker 0>container and should this container restart or stopped,

00:04:31.930 --> 00:04:33.210
<v Speaker 0>we are gonna lose it completely.

00:04:34.165 --> 00:04:36.485
<v Speaker 0>So in a container environment, we definitely want

00:04:36.485 --> 00:04:38.085
<v Speaker 0>to be able to pass in or mount

00:04:38.085 --> 00:04:39.205
<v Speaker 0>a configuration

00:04:39.205 --> 00:04:40.725
<v Speaker 0>file directly

00:04:40.805 --> 00:04:43.845
<v Speaker 0>or even both build and ship your own

00:04:43.845 --> 00:04:45.285
<v Speaker 0>custom images with that config.

00:04:45.890 --> 00:04:48.130
<v Speaker 0>I'd probably refrain from the latter for a

00:04:48.130 --> 00:04:50.770
<v Speaker 0>flexibility point of view, mentioned it at runtime,

00:04:50.770 --> 00:04:52.850
<v Speaker 0>it's going to open up possibilities to migrating

00:04:52.850 --> 00:04:53.810
<v Speaker 0>to

00:04:53.810 --> 00:04:54.610
<v Speaker 0>Kubernetes,

00:04:54.610 --> 00:04:55.330
<v Speaker 0>for example.

00:04:56.610 --> 00:04:58.930
<v Speaker 0>So we're going to cancel this and not

00:04:58.930 --> 00:04:59.650
<v Speaker 0>use that approach.

00:05:00.555 --> 00:05:02.155
<v Speaker 0>So let's take a look at modifying the

00:05:02.155 --> 00:05:03.595
<v Speaker 0>command that we just ran.

00:05:04.155 --> 00:05:05.995
<v Speaker 0>Well, this time instead of start, we're going

00:05:05.995 --> 00:05:07.995
<v Speaker 0>to use that configure sub command I mentioned

00:05:07.995 --> 00:05:08.635
<v Speaker 0>a moment ago.

00:05:12.880 --> 00:05:15.120
<v Speaker 0>And now we have a base configuration that

00:05:15.120 --> 00:05:18.080
<v Speaker 0>we can save locally for today's tutorial

00:05:18.160 --> 00:05:20.080
<v Speaker 0>and use and tweak as we move forward

00:05:20.080 --> 00:05:21.200
<v Speaker 0>with the exercises.

00:05:22.640 --> 00:05:24.560
<v Speaker 0>So I have copied and pasted

00:05:24.885 --> 00:05:27.285
<v Speaker 0>the config from the configure command

00:05:27.365 --> 00:05:30.325
<v Speaker 0>and saved that locally as teleport. Yml.

00:05:30.565 --> 00:05:32.085
<v Speaker 0>There is just going to make one change

00:05:32.085 --> 00:05:33.365
<v Speaker 0>to this configuration

00:05:33.445 --> 00:05:35.205
<v Speaker 0>and that is to remove the node name

00:05:35.205 --> 00:05:36.245
<v Speaker 0>from lane two.

00:05:36.805 --> 00:05:38.805
<v Speaker 0>This can be inferred by teleport at runtime

00:05:38.805 --> 00:05:40.450
<v Speaker 0>from the host name of the container or

00:05:40.450 --> 00:05:42.130
<v Speaker 0>machine that this is running on.

00:05:42.450 --> 00:05:44.210
<v Speaker 0>Okay, so let's jump back over to the

00:05:44.210 --> 00:05:45.170
<v Speaker 0>documentation.

00:05:46.610 --> 00:05:48.770
<v Speaker 0>Now that we have our default configuration,

00:05:48.850 --> 00:05:50.770
<v Speaker 0>we want to be able to run Teleport.

00:05:52.035 --> 00:05:53.395
<v Speaker 0>We're going to copy

00:05:53.475 --> 00:05:56.275
<v Speaker 0>this command to run Teleport

00:05:56.515 --> 00:05:58.115
<v Speaker 0>and to Versus Code

00:05:58.355 --> 00:06:00.595
<v Speaker 0>and make one or two modifications to get

00:06:00.595 --> 00:06:00.915
<v Speaker 0>started.

00:06:04.240 --> 00:06:06.560
<v Speaker 0>So something that has become a bit of

00:06:06.560 --> 00:06:08.720
<v Speaker 0>a rule at Rawkode Academy

00:06:09.360 --> 00:06:12.479
<v Speaker 0>is that we never ever name containers.

00:06:12.719 --> 00:06:14.639
<v Speaker 0>This becomes a piece of global state that

00:06:14.639 --> 00:06:16.159
<v Speaker 0>I am not really comfortable with in my

00:06:16.159 --> 00:06:18.719
<v Speaker 0>environment, so I'm going to immediately discard

00:06:19.199 --> 00:06:19.599
<v Speaker 0>name

00:06:20.215 --> 00:06:21.015
<v Speaker 0>Teleport.

00:06:21.895 --> 00:06:23.815
<v Speaker 0>We have two volumes being provided to the

00:06:23.815 --> 00:06:26.455
<v Speaker 0>container, one for the state of Teleport, which

00:06:26.455 --> 00:06:28.695
<v Speaker 0>is the environment Teleport and the other for

00:06:28.695 --> 00:06:30.535
<v Speaker 0>the configuration that we need to inject into

00:06:30.535 --> 00:06:31.015
<v Speaker 0>the system.

00:06:31.990 --> 00:06:33.750
<v Speaker 0>We're going to modify these in just a

00:06:33.750 --> 00:06:35.430
<v Speaker 0>second, but let me run over the other

00:06:35.430 --> 00:06:36.389
<v Speaker 0>flags first.

00:06:37.110 --> 00:06:39.669
<v Speaker 0>We have a few ports being exported or

00:06:39.669 --> 00:06:43.270
<v Speaker 0>exposed, sorry, to the whole system. 3,080 is

00:06:43.270 --> 00:06:44.789
<v Speaker 0>for the web UI,

00:06:45.944 --> 00:06:46.985
<v Speaker 0>3,025

00:06:46.985 --> 00:06:50.745
<v Speaker 0>is actually used for node communication, node SSH

00:06:50.745 --> 00:06:52.905
<v Speaker 0>communication within the cluster. So if we wish

00:06:52.905 --> 00:06:55.465
<v Speaker 0>to add other containers with other members, this

00:06:55.465 --> 00:06:56.344
<v Speaker 0>would be really important.

00:06:58.200 --> 00:06:59.800
<v Speaker 0>And 3,023

00:06:59.800 --> 00:07:02.440
<v Speaker 0>is the actual SSH port required for clients

00:07:02.440 --> 00:07:04.920
<v Speaker 0>to connect to the Teleport cluster.

00:07:06.040 --> 00:07:07.880
<v Speaker 0>So let's come back to our volumes.

00:07:08.600 --> 00:07:11.395
<v Speaker 0>I'm not a fan of using arbitrary directories

00:07:11.395 --> 00:07:13.715
<v Speaker 0>in my home file system again, because I

00:07:13.715 --> 00:07:15.715
<v Speaker 0>don't want any sort of global state and

00:07:15.715 --> 00:07:17.715
<v Speaker 0>I include file system as part of that.

00:07:17.715 --> 00:07:19.075
<v Speaker 0>So we're going to modify this to be

00:07:19.075 --> 00:07:20.115
<v Speaker 0>PWD

00:07:24.410 --> 00:07:25.930
<v Speaker 0>slash teleport.

00:07:26.250 --> 00:07:29.530
<v Speaker 0>Yml and make this path rather explicit too.

00:07:29.530 --> 00:07:31.850
<v Speaker 0>So this is going to pull through shell

00:07:31.850 --> 00:07:32.729
<v Speaker 0>interpolation,

00:07:32.729 --> 00:07:34.330
<v Speaker 0>my current working directory

00:07:34.410 --> 00:07:36.889
<v Speaker 0>and the teleport. Yml available there.

00:07:38.375 --> 00:07:39.335
<v Speaker 0>Now for

00:07:39.495 --> 00:07:42.375
<v Speaker 0>the state within a teleport system, I don't

00:07:42.375 --> 00:07:43.975
<v Speaker 0>want to mount that to a local file

00:07:43.975 --> 00:07:45.974
<v Speaker 0>system. So instead I'm going to use Docker

00:07:45.974 --> 00:07:46.775
<v Speaker 0>volume,

00:07:46.854 --> 00:07:48.375
<v Speaker 0>create teleport

00:07:48.694 --> 00:07:49.495
<v Speaker 0>data.

00:07:49.735 --> 00:07:52.055
<v Speaker 0>This gives me a named volume where a

00:07:51.750 --> 00:07:54.870
<v Speaker 0>state can be persisted across container restarts and

00:07:54.870 --> 00:07:56.390
<v Speaker 0>even recreations.

00:07:57.910 --> 00:08:00.630
<v Speaker 0>We provide the named volume name and see

00:08:00.630 --> 00:08:01.990
<v Speaker 0>that we wish to mount it to this

00:08:01.990 --> 00:08:02.470
<v Speaker 0>location.

00:08:04.425 --> 00:08:06.185
<v Speaker 0>I can now copy and paste all of

00:08:06.185 --> 00:08:08.345
<v Speaker 0>these commands or both of these commands

00:08:08.425 --> 00:08:09.705
<v Speaker 0>to my terminal.

00:08:09.865 --> 00:08:11.865
<v Speaker 0>We'll see the volume as created

00:08:12.185 --> 00:08:14.265
<v Speaker 0>and we should get a container running with

00:08:14.265 --> 00:08:15.545
<v Speaker 0>the configuration that we need.

00:08:16.910 --> 00:08:18.590
<v Speaker 0>Now we can verify that this is correct

00:08:18.590 --> 00:08:21.790
<v Speaker 0>by browsing to local host on port 3,080.

00:08:23.230 --> 00:08:26.270
<v Speaker 0>So new tab, local host 3,080,

00:08:27.150 --> 00:08:28.270
<v Speaker 0>add HTTPS.

00:08:29.794 --> 00:08:31.955
<v Speaker 0>This is in Chrome, it's Firefox system, so

00:08:31.955 --> 00:08:33.475
<v Speaker 0>we don't have to type this as unsafe.

00:08:33.475 --> 00:08:34.755
<v Speaker 0>We can do advanced

00:08:34.835 --> 00:08:35.955
<v Speaker 0>and accept.

00:08:36.755 --> 00:08:39.235
<v Speaker 0>And we now have the Teleport UI ready

00:08:39.235 --> 00:08:40.914
<v Speaker 0>for us to log in.

00:08:42.440 --> 00:08:44.519
<v Speaker 0>Okay, so there is one more thing I'd

00:08:44.519 --> 00:08:46.440
<v Speaker 0>like to cover in today's tutorial and that

00:08:46.440 --> 00:08:48.760
<v Speaker 0>is using Docker Compose

00:08:49.160 --> 00:08:53.079
<v Speaker 0>to provide a multi node configuration for Teleport,

00:08:53.079 --> 00:08:54.440
<v Speaker 0>as well as I use to explore all

00:08:54.440 --> 00:08:56.920
<v Speaker 0>the features available in the Teleport package.

00:08:58.345 --> 00:09:00.105
<v Speaker 0>Let's jump back over to the code and

00:09:00.105 --> 00:09:01.545
<v Speaker 0>I'll show you the changes that I have

00:09:01.545 --> 00:09:03.545
<v Speaker 0>made to allow this to happen.

00:09:04.505 --> 00:09:06.105
<v Speaker 0>The first thing that I have done is

00:09:06.105 --> 00:09:07.625
<v Speaker 0>create a Docker compose.

00:09:07.625 --> 00:09:08.505
<v Speaker 0>Yaml file.

00:09:09.600 --> 00:09:12.560
<v Speaker 0>I've defined a couple of volumes, one for

00:09:12.560 --> 00:09:13.839
<v Speaker 0>the certificates

00:09:13.839 --> 00:09:16.079
<v Speaker 0>to live in, which will be shared across

00:09:16.079 --> 00:09:17.600
<v Speaker 0>all the nodes in the cluster

00:09:18.160 --> 00:09:19.440
<v Speaker 0>and data,

00:09:19.440 --> 00:09:22.079
<v Speaker 0>which will allow the Teleport server to store

00:09:22.079 --> 00:09:23.839
<v Speaker 0>the state in a persistent manner.

00:09:25.305 --> 00:09:27.305
<v Speaker 0>The first thing we configure is the Teleport

00:09:27.305 --> 00:09:29.305
<v Speaker 0>server and you'll see this is very similar

00:09:29.305 --> 00:09:30.904
<v Speaker 0>to what we did previously.

00:09:31.464 --> 00:09:33.384
<v Speaker 0>We're using the Docker CLI.

00:09:33.785 --> 00:09:36.024
<v Speaker 0>We mount our server configuration,

00:09:36.264 --> 00:09:38.024
<v Speaker 0>our data volume and our certificates.

00:09:38.770 --> 00:09:40.610
<v Speaker 0>Now, in order to make this a

00:09:40.850 --> 00:09:44.050
<v Speaker 0>one command and up Docker compose environment, I

00:09:44.050 --> 00:09:45.810
<v Speaker 0>have added a health check,

00:09:45.810 --> 00:09:47.970
<v Speaker 0>which is going to periodically every two seconds

00:09:47.970 --> 00:09:51.490
<v Speaker 0>run TCTL status. TCTL status will exit zero

00:09:51.490 --> 00:09:53.735
<v Speaker 0>when the server is healthy and non zero

00:09:53.735 --> 00:09:54.775
<v Speaker 0>when it is not.

00:09:55.175 --> 00:09:57.335
<v Speaker 0>This allows us to have a dependency on

00:09:57.335 --> 00:09:59.095
<v Speaker 0>node one and node two.

00:09:59.335 --> 00:10:01.895
<v Speaker 0>These containers will only be started after the

00:10:01.895 --> 00:10:04.215
<v Speaker 0>Teleport server is happy, which will limit and

00:10:04.215 --> 00:10:06.215
<v Speaker 0>remove most of the error cases that you

00:10:06.215 --> 00:10:07.895
<v Speaker 0>could see in such an environment.

00:10:10.290 --> 00:10:11.570
<v Speaker 0>If we take a look at our Teleport

00:10:11.570 --> 00:10:14.530
<v Speaker 0>server config, again, is very similar to what

00:10:14.530 --> 00:10:16.450
<v Speaker 0>we've already been working with. However,

00:10:17.250 --> 00:10:19.730
<v Speaker 0>I have added something called a token to

00:10:19.730 --> 00:10:20.610
<v Speaker 0>the off service.

00:10:21.445 --> 00:10:23.204
<v Speaker 0>Now this is just hard coded because this

00:10:23.204 --> 00:10:25.285
<v Speaker 0>as a lab style environment and should never

00:10:25.285 --> 00:10:26.725
<v Speaker 0>be deployed to production.

00:10:27.125 --> 00:10:29.125
<v Speaker 0>But what it says is that we allow

00:10:29.125 --> 00:10:32.005
<v Speaker 0>anyone with a static token of Rawkode Academy

00:10:32.005 --> 00:10:34.565
<v Speaker 0>to authenticate against our server on a proxy

00:10:34.565 --> 00:10:35.445
<v Speaker 0>and node basis.

00:10:35.870 --> 00:10:38.269
<v Speaker 0>This allows other nodes to join if they

00:10:38.269 --> 00:10:40.270
<v Speaker 0>have access to the static token.

00:10:41.310 --> 00:10:44.910
<v Speaker 0>I have also generated a Teleport client configuration.

00:10:45.230 --> 00:10:47.310
<v Speaker 0>This is very similar to the server one.

00:10:47.310 --> 00:10:49.950
<v Speaker 0>However, we have the proxy service disabled,

00:10:50.545 --> 00:10:52.465
<v Speaker 0>the off service disabled.

00:10:52.625 --> 00:10:54.785
<v Speaker 0>We've left SSH service on. We still want

00:10:54.785 --> 00:10:55.985
<v Speaker 0>to be able to connect to the other

00:10:55.985 --> 00:10:57.185
<v Speaker 0>nodes on the cluster.

00:10:57.665 --> 00:10:59.905
<v Speaker 0>And I have now provided the hard coded

00:10:59.905 --> 00:11:01.665
<v Speaker 0>token and authentication

00:11:01.665 --> 00:11:02.865
<v Speaker 0>address for the server.

00:11:03.540 --> 00:11:06.100
<v Speaker 0>So the off token is Rawkode Academy and

00:11:06.100 --> 00:11:09.540
<v Speaker 0>off server is Teleport Dash Server on 03/2025.

00:11:09.940 --> 00:11:11.940
<v Speaker 0>This is just the name of the service

00:11:11.940 --> 00:11:14.180
<v Speaker 0>and the Docker Compose file.

00:11:15.665 --> 00:11:17.265
<v Speaker 0>Now what should happen is I'm going to

00:11:17.265 --> 00:11:19.585
<v Speaker 0>go to my terminal, run Docker Compose up,

00:11:19.585 --> 00:11:21.825
<v Speaker 0>we should see the Teleport server start first,

00:11:21.825 --> 00:11:23.745
<v Speaker 0>become healthy, and then the other two nodes

00:11:23.745 --> 00:11:24.945
<v Speaker 0>come online.

00:11:25.585 --> 00:11:26.465
<v Speaker 0>Let's see what happens.

00:11:38.880 --> 00:11:40.560
<v Speaker 0>So we can see the server is created

00:11:40.560 --> 00:11:42.720
<v Speaker 0>first. We don't have any node yet.

00:11:46.515 --> 00:11:48.355
<v Speaker 0>That's the server coming online

00:11:48.675 --> 00:11:50.355
<v Speaker 0>and we can see the nodes, the different

00:11:50.355 --> 00:11:52.435
<v Speaker 0>colors from the container log starting to show

00:11:52.435 --> 00:11:52.995
<v Speaker 0>up,

00:11:53.555 --> 00:11:55.715
<v Speaker 0>which gives me a pretty strong indication that

00:11:55.715 --> 00:11:57.075
<v Speaker 0>this is now worked.

00:11:57.715 --> 00:11:59.399
<v Speaker 0>But don't take my word for it, let's

00:11:59.399 --> 00:11:59.959
<v Speaker 0>check.

00:12:00.759 --> 00:12:02.360
<v Speaker 0>So we're going to jump over to here.

00:12:02.360 --> 00:12:03.800
<v Speaker 0>We're going to do HTTPS

00:12:03.800 --> 00:12:04.920
<v Speaker 0>localhost

00:12:04.920 --> 00:12:06.040
<v Speaker 0>3,080,

00:12:07.079 --> 00:12:09.000
<v Speaker 0>and we get the web interface for our

00:12:09.000 --> 00:12:09.879
<v Speaker 0>Teleport server.

00:12:10.835 --> 00:12:13.235
<v Speaker 0>Now we haven't created a user yet, so

00:12:13.235 --> 00:12:14.995
<v Speaker 0>we do need to jump over to our

00:12:14.995 --> 00:12:15.955
<v Speaker 0>terminal.

00:12:18.435 --> 00:12:20.355
<v Speaker 0>I'm going to have to do Docker container

00:12:20.355 --> 00:12:21.235
<v Speaker 0>ls

00:12:21.395 --> 00:12:23.635
<v Speaker 0>and I'm going to execute into our Teleport

00:12:23.635 --> 00:12:24.275
<v Speaker 0>server,

00:12:24.540 --> 00:12:26.140
<v Speaker 0>which is this one here.

00:12:27.339 --> 00:12:29.339
<v Speaker 0>Container EXPC.

00:12:32.139 --> 00:12:33.260
<v Speaker 0>We just want

00:12:33.500 --> 00:12:34.459
<v Speaker 0>a shell.

00:12:35.339 --> 00:12:37.500
<v Speaker 0>From here, I could do TCL users, add

00:12:37.500 --> 00:12:38.380
<v Speaker 0>roles,

00:12:38.620 --> 00:12:39.980
<v Speaker 0>admin, logins,

00:12:40.375 --> 00:12:41.175
<v Speaker 0>root,

00:12:42.215 --> 00:12:44.455
<v Speaker 0>and I'll add the Rawkode user. This is

00:12:44.455 --> 00:12:45.735
<v Speaker 0>going to give me a link that I

00:12:45.735 --> 00:12:47.015
<v Speaker 0>can copy and paste

00:12:47.335 --> 00:12:48.615
<v Speaker 0>into my browser.

00:12:48.855 --> 00:12:50.615
<v Speaker 0>I just need to remember to change the

00:12:50.615 --> 00:12:53.335
<v Speaker 0>container ID to local host

00:12:55.420 --> 00:12:57.580
<v Speaker 0>And now we can set a password. So

00:12:57.580 --> 00:12:58.780
<v Speaker 0>let's just let

00:12:59.020 --> 00:13:01.660
<v Speaker 0>one password to take care of this. Teleport

00:13:01.660 --> 00:13:02.380
<v Speaker 0>lab,

00:13:02.940 --> 00:13:05.580
<v Speaker 0>my username is Rawkode and save.

00:13:05.900 --> 00:13:07.180
<v Speaker 0>Now I can

00:13:07.865 --> 00:13:10.264
<v Speaker 0>click on this and have it scan the

00:13:10.264 --> 00:13:11.464
<v Speaker 0>QR code.

00:13:12.185 --> 00:13:14.105
<v Speaker 0>And I also need to copy the password

00:13:14.105 --> 00:13:14.985
<v Speaker 0>to here,

00:13:16.264 --> 00:13:17.625
<v Speaker 0>my 2FA

00:13:17.865 --> 00:13:18.745
<v Speaker 0>into here.

00:13:21.190 --> 00:13:23.670
<v Speaker 0>And we have now created an account.

00:13:31.670 --> 00:13:33.110
<v Speaker 0>So if I zoom in a little bit,

00:13:33.375 --> 00:13:36.735
<v Speaker 0>I have tested this environment and the state

00:13:36.735 --> 00:13:39.295
<v Speaker 0>has persisted into the data volume, which is

00:13:39.295 --> 00:13:41.295
<v Speaker 0>why we have a few extra nodes and

00:13:41.295 --> 00:13:43.135
<v Speaker 0>containers here. Whoops.

00:13:43.695 --> 00:13:45.775
<v Speaker 0>But we can see that everything seems to

00:13:45.775 --> 00:13:47.980
<v Speaker 0>be working as expected. And in fact, if

00:13:47.980 --> 00:13:49.740
<v Speaker 0>we take a look at the container IDs,

00:13:49.740 --> 00:13:52.140
<v Speaker 0>we have CC9 and 1B6,

00:13:52.380 --> 00:13:54.380
<v Speaker 0>that I should be able to click on

00:13:54.380 --> 00:13:55.180
<v Speaker 0>connect

00:13:55.260 --> 00:13:56.140
<v Speaker 0>and root.

00:13:56.700 --> 00:13:59.260
<v Speaker 0>And I know inside of my container environment

00:13:59.260 --> 00:14:00.779
<v Speaker 0>running a Teleport client

00:14:01.205 --> 00:14:03.925
<v Speaker 0>as part of my Teleport lab environment.

00:14:04.885 --> 00:14:06.885
<v Speaker 0>Nice and simple, this code will be published

00:14:06.885 --> 00:14:08.805
<v Speaker 0>and a link will be in the description

00:14:08.805 --> 00:14:10.965
<v Speaker 0>so you can use this Docker Compose web

00:14:10.965 --> 00:14:14.885
<v Speaker 0>the configurations to try this out yourself starting

00:14:14.459 --> 00:14:15.019
<v Speaker 0>now.

00:14:15.420 --> 00:14:16.939
<v Speaker 0>Go have some fun. We'll be back with

00:14:16.939 --> 00:14:18.620
<v Speaker 0>the server access workshop

00:14:18.699 --> 00:14:19.500
<v Speaker 0>tomorrow.

00:14:19.660 --> 00:14:21.100
<v Speaker 0>I'll see you all then. Have a great

00:14:21.100 --> 00:14:21.259
<v Speaker 0>day.
