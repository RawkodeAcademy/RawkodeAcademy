WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 71f5b7d0-1087-4b5f-a2aa-827909289834
Created: 2025-04-29T15:55:24.610Z
Duration: 473.4498
Channels: 1

00:00:00.080 --> 00:00:02.159
<v Speaker 0>This is time, so we do have forty

00:00:02.159 --> 00:00:03.919
<v Speaker 0>two minutes. So that's just for a few

00:00:03.919 --> 00:00:06.960
<v Speaker 0>minutes of whatever happens, but feel free to

00:00:06.960 --> 00:00:09.040
<v Speaker 0>take it away. Start typing, and best of

00:00:09.040 --> 00:00:10.480
<v Speaker 0>luck. Hello. So, yeah,

00:00:11.040 --> 00:00:13.759
<v Speaker 1>here we have the cluster. So let's see

00:00:14.105 --> 00:00:16.024
<v Speaker 1>the nodes that we have with what's going

00:00:16.024 --> 00:00:17.625
<v Speaker 1>on. So yeah. Okay.

00:00:17.625 --> 00:00:20.185
<v Speaker 1>So, yeah, let's check the pods that are

00:00:20.185 --> 00:00:21.064
<v Speaker 1>running there.

00:00:21.945 --> 00:00:24.425
<v Speaker 1>So, yeah, it seems the the pods of

00:00:24.425 --> 00:00:27.544
<v Speaker 1>the control plane of the the KubeSystem namespace

00:00:27.544 --> 00:00:30.070
<v Speaker 1>are all running and good. So, yeah, that's

00:00:30.070 --> 00:00:30.949
<v Speaker 1>good for us.

00:00:31.990 --> 00:00:34.390
<v Speaker 1>And, yeah, we have this pod that is

00:00:34.390 --> 00:00:37.510
<v Speaker 1>in crash load back, cough state. So probably

00:00:37.590 --> 00:00:39.030
<v Speaker 1>this is the one that we have to

00:00:39.030 --> 00:00:41.350
<v Speaker 1>fix now. We have the pod that is

00:00:41.350 --> 00:00:41.989
<v Speaker 1>failing, so

00:00:45.425 --> 00:00:47.265
<v Speaker 1>we can get the logs. So

00:00:48.145 --> 00:00:50.465
<v Speaker 1>get the pod the name of the pod.

00:00:53.745 --> 00:00:54.945
<v Speaker 1>Okay.

00:00:54.945 --> 00:00:56.145
<v Speaker 1>So let's describe

00:00:56.465 --> 00:00:57.665
<v Speaker 1>this pod

00:00:58.530 --> 00:01:01.809
<v Speaker 1>and see what we have there. I think

00:01:01.890 --> 00:01:04.849
<v Speaker 1>yeah. We have a sec SecCon security profile

00:01:04.849 --> 00:01:05.489
<v Speaker 1>there.

00:01:06.450 --> 00:01:08.850
<v Speaker 2>So Okay. Yeah. If if we have a

00:01:08.850 --> 00:01:10.530
<v Speaker 1>permission, then I problem.

00:01:10.850 --> 00:01:12.290
<v Speaker 1>Maybe this is related to

00:01:12.855 --> 00:01:13.415
<v Speaker 1>to.

00:01:14.855 --> 00:01:17.495
<v Speaker 1>Yeah. Yeah. We have the the notation here.

00:01:17.975 --> 00:01:19.735
<v Speaker 2>So And it's a custom one, so that's

00:01:19.735 --> 00:01:20.695
<v Speaker 2>suspicious too.

00:01:21.495 --> 00:01:22.135
<v Speaker 1>Yeah.

00:01:23.415 --> 00:01:25.655
<v Speaker 1>Okay. So, yeah, I think we can use

00:01:25.655 --> 00:01:28.375
<v Speaker 1>inspector gadget to understand what is going on

00:01:28.375 --> 00:01:30.220
<v Speaker 1>with this. Probably,

00:01:31.180 --> 00:01:33.180
<v Speaker 1>what is happening here is that the pod

00:01:33.180 --> 00:01:34.860
<v Speaker 1>is trying to use a Cisco that is

00:01:34.860 --> 00:01:36.140
<v Speaker 1>not allowed by day.

00:01:36.460 --> 00:01:38.780
<v Speaker 1>So in order to use Inspector Gadget, we

00:01:38.780 --> 00:01:41.420
<v Speaker 1>have to install this in in our cluster.

00:01:41.500 --> 00:01:42.060
<v Speaker 1>So, yeah,

00:01:42.805 --> 00:01:45.045
<v Speaker 1>the time of recording this video, this is

00:01:45.045 --> 00:01:47.125
<v Speaker 1>the latest commit that we have on our

00:01:47.125 --> 00:01:48.005
<v Speaker 1>main branch.

00:01:48.405 --> 00:01:49.445
<v Speaker 1>Right. So

00:01:50.165 --> 00:01:52.965
<v Speaker 1>by doing that, we installed the KubeCTL

00:01:52.965 --> 00:01:54.884
<v Speaker 1>client part. What we have to do right

00:01:54.884 --> 00:01:57.284
<v Speaker 1>now is to deploy Inspector Gadget in the

00:01:57.284 --> 00:01:59.740
<v Speaker 1>cluster. So I'm going to use deploy.

00:02:04.460 --> 00:02:07.180
<v Speaker 1>And with KubeCTL applied, we can

00:02:07.820 --> 00:02:08.620
<v Speaker 1>install

00:02:08.860 --> 00:02:11.500
<v Speaker 1>deploy the, yeah, the gadget in on the

00:02:11.820 --> 00:02:12.620
<v Speaker 1>on the cluster.

00:02:13.565 --> 00:02:14.765
<v Speaker 1>So, yep,

00:02:15.805 --> 00:02:17.005
<v Speaker 1>this is gadget.

00:02:18.285 --> 00:02:20.285
<v Speaker 1>I'll be set com.

00:02:21.485 --> 00:02:23.485
<v Speaker 1>So this is telling us that

00:02:24.285 --> 00:02:26.605
<v Speaker 1>there is a port running on this node,

00:02:27.230 --> 00:02:28.989
<v Speaker 1>the default namespace,

00:02:28.989 --> 00:02:30.829
<v Speaker 1>and this is in part the port that

00:02:30.829 --> 00:02:32.110
<v Speaker 1>was crashing before.

00:02:33.870 --> 00:02:35.950
<v Speaker 1>This is the name of the process that

00:02:35.950 --> 00:02:37.630
<v Speaker 1>was trying to

00:02:38.110 --> 00:02:39.150
<v Speaker 1>perform

00:02:39.310 --> 00:02:40.030
<v Speaker 1>a syscall.

00:02:41.555 --> 00:02:42.835
<v Speaker 1>This should be

00:02:43.555 --> 00:02:45.395
<v Speaker 1>yeah. I'm a little bit confused by the

00:02:45.395 --> 00:02:46.355
<v Speaker 1>output here.

00:02:47.235 --> 00:02:49.475
<v Speaker 0>This system call is not part of the

00:02:49.475 --> 00:02:50.835
<v Speaker 0>clustered spec,

00:02:52.115 --> 00:02:53.795
<v Speaker 0>but it's not the reason the pod is

00:02:53.795 --> 00:02:55.795
<v Speaker 0>crashing yet yet,

00:02:55.795 --> 00:02:56.194
<v Speaker 0>at least.

00:02:57.050 --> 00:02:59.210
<v Speaker 0>This is the two breaks

00:02:59.530 --> 00:03:01.210
<v Speaker 0>colliding together because

00:03:01.450 --> 00:03:03.530
<v Speaker 0>a very unfortunate side effect. But what else

00:03:03.530 --> 00:03:05.050
<v Speaker 0>would give you permission to write if it

00:03:05.050 --> 00:03:06.090
<v Speaker 0>wasn't a Cisco?

00:03:07.610 --> 00:03:09.210
<v Speaker 2>Well, capabilities.

00:03:09.290 --> 00:03:13.445
<v Speaker 2>Yeah. Alright. So we can trace capabilities?

00:03:14.005 --> 00:03:15.445
<v Speaker 1>This should be good.

00:03:17.205 --> 00:03:18.725
<v Speaker 1>Okay. Here we are.

00:03:22.485 --> 00:03:26.325
<v Speaker 1>Oh, so we have securitycontestcapability.all.

00:03:26.770 --> 00:03:28.370
<v Speaker 1>Yeah. This this is no good. We are

00:03:28.370 --> 00:03:30.770
<v Speaker 1>running the pod without any capability. Of course,

00:03:30.770 --> 00:03:32.610
<v Speaker 1>this is gonna fail. What we need to

00:03:32.610 --> 00:03:35.570
<v Speaker 1>understand right now is what are the capabilities

00:03:35.570 --> 00:03:36.850
<v Speaker 1>that are required

00:03:37.250 --> 00:03:38.370
<v Speaker 1>by this pod.

00:03:39.935 --> 00:03:42.095
<v Speaker 1>So, yeah, I think we can use the

00:03:42.095 --> 00:03:42.895
<v Speaker 1>capabilities

00:03:42.895 --> 00:03:45.615
<v Speaker 1>gadget to get a list of of the

00:03:45.615 --> 00:03:48.255
<v Speaker 1>capabilities that this bot is trying to use.

00:03:48.655 --> 00:03:51.855
<v Speaker 1>So we have Kubectl gadget capabilities.

00:03:54.680 --> 00:03:56.840
<v Speaker 1>We are only interested on this one.

00:03:58.120 --> 00:04:00.920
<v Speaker 1>Oh, here we are. Okay. Yeah. Okay. Okay.

00:04:00.920 --> 00:04:02.120
<v Speaker 2>Got it. That

00:04:03.719 --> 00:04:05.719
<v Speaker 1>and, yeah, this is the name of the

00:04:05.719 --> 00:04:06.200
<v Speaker 1>container,

00:04:06.845 --> 00:04:08.205
<v Speaker 1>the UID,

00:04:08.285 --> 00:04:10.445
<v Speaker 1>the PID inside the container.

00:04:10.525 --> 00:04:12.285
<v Speaker 1>This is the command that is trying to

00:04:12.285 --> 00:04:13.005
<v Speaker 1>do that.

00:04:13.965 --> 00:04:16.445
<v Speaker 1>And this should be the capability that this

00:04:16.445 --> 00:04:18.925
<v Speaker 1>is trying to use. NetBind service.

00:04:25.930 --> 00:04:27.770
<v Speaker 1>Does it look good to you?

00:04:28.490 --> 00:04:31.770
<v Speaker 2>Mhmm. Looks good to me. Ta da. Yay.

00:04:32.490 --> 00:04:33.450
<v Speaker 1>This is working.

00:04:33.849 --> 00:04:34.330
<v Speaker 2>It works.

00:04:34.875 --> 00:04:36.875
<v Speaker 0>I mean, saying it's working is a pretty

00:04:36.875 --> 00:04:39.035
<v Speaker 0>bold statement. But, you know, you you can

00:04:39.035 --> 00:04:42.235
<v Speaker 0>confirm that. Right? We wanted to curl from

00:04:42.315 --> 00:04:43.435
<v Speaker 2>30,000

00:04:43.595 --> 00:04:46.795
<v Speaker 2>localhost, 30,000. 30 thousand. Yep. We were trying

00:04:46.795 --> 00:04:47.675
<v Speaker 2>to to

00:04:47.995 --> 00:04:49.595
<v Speaker 2>verify that application is working.

00:04:50.420 --> 00:04:52.180
<v Speaker 2>So with this this call

00:04:52.820 --> 00:04:55.540
<v Speaker 2>Doesn't seem to work. Connection refused.

00:04:55.780 --> 00:04:58.100
<v Speaker 2>So there's there's something else that needs to

00:04:58.100 --> 00:04:58.660
<v Speaker 2>be fixed.

00:05:04.995 --> 00:05:06.355
<v Speaker 1>So this is

00:05:06.835 --> 00:05:08.355
<v Speaker 1>30,000 here,

00:05:08.595 --> 00:05:10.755
<v Speaker 1>and this should be The $80.80.

00:05:11.315 --> 00:05:12.915
<v Speaker 2>So what's the part?

00:05:14.355 --> 00:05:16.115
<v Speaker 1>Maybe we can list the

00:05:16.540 --> 00:05:17.740
<v Speaker 1>sockets

00:05:17.820 --> 00:05:20.300
<v Speaker 1>that are opening the port to check what

00:05:20.300 --> 00:05:22.300
<v Speaker 1>is the what is the real port name

00:05:22.300 --> 00:05:23.980
<v Speaker 1>that the port is using.

00:05:24.540 --> 00:05:25.900
<v Speaker 0>I like how you don't even look at

00:05:25.900 --> 00:05:27.260
<v Speaker 0>the manifest to see if it's got a

00:05:27.260 --> 00:05:29.020
<v Speaker 0>container port, and they're like, nope. Let's just

00:05:29.020 --> 00:05:31.020
<v Speaker 0>go and list all the ports that they

00:05:30.735 --> 00:05:31.615
<v Speaker 0>Excuse me.

00:05:33.935 --> 00:05:35.455
<v Speaker 2>I don't trust the manifest.

00:05:37.534 --> 00:05:39.854
<v Speaker 1>Let me try something. I think we can

00:05:39.854 --> 00:05:42.095
<v Speaker 1>just trace the the whole

00:05:43.294 --> 00:05:44.414
<v Speaker 1>namespace,

00:05:44.414 --> 00:05:46.254
<v Speaker 1>and that should be fine. Oh, I missed

00:05:46.254 --> 00:05:47.590
<v Speaker 1>the gadgets here.

00:05:50.870 --> 00:05:52.310
<v Speaker 2>Just deleted the pod.

00:05:53.270 --> 00:05:54.310
<v Speaker 2>Okay.

00:05:55.590 --> 00:05:56.230
<v Speaker 2>Seems

00:05:56.710 --> 00:05:57.590
<v Speaker 2>demonic.

00:05:57.590 --> 00:05:58.310
<v Speaker 0>Network.

00:05:58.870 --> 00:06:02.155
<v Speaker 1>So it's port six six six. Right? So

00:06:02.315 --> 00:06:04.315
<v Speaker 1>okay. What we can do right now is

00:06:04.315 --> 00:06:06.715
<v Speaker 1>to edit the service and change the port.

00:06:06.715 --> 00:06:08.395
<v Speaker 1>Think that's this is why.

00:06:09.035 --> 00:06:11.835
<v Speaker 0>Yep. Yep. Sounds good. Yep. Nice try. Okay.

00:06:12.955 --> 00:06:14.075
<v Speaker 2>Something doesn't work.

00:06:15.450 --> 00:06:18.570
<v Speaker 2>Another thing doesn't work. Your last break.

00:06:19.370 --> 00:06:20.010
<v Speaker 2>I

00:06:20.650 --> 00:06:21.370
<v Speaker 2>think

00:06:21.530 --> 00:06:23.530
<v Speaker 2>somebody said before that

00:06:23.770 --> 00:06:26.410
<v Speaker 2>seccomp wasn't the problem yet.

00:06:30.090 --> 00:06:31.505
<v Speaker 2>Can give us a clue.

00:06:32.465 --> 00:06:33.585
<v Speaker 1>Yeah. I think that's

00:06:38.145 --> 00:06:39.985
<v Speaker 1>I'll let you use that on the whole

00:06:39.985 --> 00:06:41.825
<v Speaker 1>namespace. I think this is okay.

00:06:42.545 --> 00:06:44.250
<v Speaker 0>I think what's interesting about this is that

00:06:44.250 --> 00:06:47.370
<v Speaker 0>Postgres traffic means your request has been received,

00:06:47.370 --> 00:06:48.810
<v Speaker 0>and the application is

00:06:49.770 --> 00:06:50.890
<v Speaker 0>trying to respond.

00:06:51.290 --> 00:06:53.450
<v Speaker 1>Okay. So, yeah, it doesn't seem to be

00:06:53.450 --> 00:06:55.050
<v Speaker 1>a problem with the networking

00:06:55.275 --> 00:06:57.355
<v Speaker 1>because the traffic is arriving there.

00:06:57.835 --> 00:06:59.595
<v Speaker 1>The full connection is established.

00:07:00.634 --> 00:07:02.794
<v Speaker 0>So I hadn't seen that TCP connect before.

00:07:02.794 --> 00:07:05.675
<v Speaker 0>That's awesome. Okay. I'm sending a request now.

00:07:06.155 --> 00:07:07.354
<v Speaker 2>It's shut down.

00:07:07.930 --> 00:07:10.090
<v Speaker 1>Can you try to send another request, please,

00:07:10.090 --> 00:07:12.569
<v Speaker 1>Diego? So I turn off the JSON output

00:07:12.569 --> 00:07:14.569
<v Speaker 1>so this is easier to read in this

00:07:14.569 --> 00:07:15.610
<v Speaker 1>small terminal.

00:07:16.250 --> 00:07:18.569
<v Speaker 2>Yeah. It is shut down. It was funny

00:07:18.569 --> 00:07:20.415
<v Speaker 2>that you said that the JSON is easier

00:07:20.415 --> 00:07:21.215
<v Speaker 2>to read.

00:07:23.294 --> 00:07:24.175
<v Speaker 2>Okay.

00:07:24.175 --> 00:07:26.415
<v Speaker 2>So maybe we need to edit the the

00:07:26.415 --> 00:07:27.535
<v Speaker 2>second profile.

00:07:27.695 --> 00:07:29.375
<v Speaker 0>And because the shutdown is never called, the

00:07:29.375 --> 00:07:31.055
<v Speaker 0>socket is never flushed, and the response is

00:07:31.055 --> 00:07:32.014
<v Speaker 0>never sent to the client.

00:07:33.150 --> 00:07:34.670
<v Speaker 2>Let's do it in

00:07:35.310 --> 00:07:36.430
<v Speaker 2>alphabetic order.

00:07:36.910 --> 00:07:38.190
<v Speaker 0>I appreciate that.

00:07:44.110 --> 00:07:44.750
<v Speaker 2>Right.

00:07:45.710 --> 00:07:47.470
<v Speaker 2>And then the cubel will apply the new

00:07:47.470 --> 00:07:48.350
<v Speaker 2>second profile.

00:07:48.764 --> 00:07:51.724
<v Speaker 1>Yeah. Yeah. Ta da. This is working. Yay.
