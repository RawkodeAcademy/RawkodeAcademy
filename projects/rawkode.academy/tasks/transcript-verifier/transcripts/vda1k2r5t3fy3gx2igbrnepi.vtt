WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: edcaebc6-2f10-46b2-ba58-857d0cc735d0
Created: 2025-04-29T22:45:47.342Z
Duration: 2742.0225
Channels: 1

00:01:58.215 --> 00:01:58.935
<v Speaker 0>Hello.

00:02:00.535 --> 00:02:01.575
<v Speaker 0>We are now live.

00:02:02.360 --> 00:02:03.480
<v Speaker 1>Outstanding.

00:02:03.800 --> 00:02:05.800
<v Speaker 0>Yeah. Thank you for joining me. It's such

00:02:05.800 --> 00:02:08.120
<v Speaker 0>short notice. I literally messaged you, like,

00:02:08.520 --> 00:02:09.800
<v Speaker 0>three minutes ago.

00:02:10.120 --> 00:02:13.320
<v Speaker 0>Probably less than that. I had just finished

00:02:13.320 --> 00:02:15.080
<v Speaker 1>my lunch and sat back down at my

00:02:15.080 --> 00:02:16.440
<v Speaker 1>desk when I got your message, and I

00:02:16.440 --> 00:02:17.560
<v Speaker 1>was like, yeah. Let's do this.

00:02:18.465 --> 00:02:20.705
<v Speaker 0>Yeah. This would be fun. So

00:02:21.504 --> 00:02:23.825
<v Speaker 0>we're gonna take a look at QuestDB today,

00:02:23.825 --> 00:02:25.504
<v Speaker 0>which is a time series database that you

00:02:25.504 --> 00:02:27.505
<v Speaker 0>joined recently. Do you wanna just

00:02:27.745 --> 00:02:29.504
<v Speaker 0>give us a quick thirty second pitch?

00:02:30.370 --> 00:02:31.890
<v Speaker 1>Sure. QuestDB

00:02:31.890 --> 00:02:32.690
<v Speaker 1>is

00:02:33.170 --> 00:02:33.970
<v Speaker 1>the

00:02:34.290 --> 00:02:35.090
<v Speaker 1>we're

00:02:35.090 --> 00:02:38.210
<v Speaker 1>we're the fastest open source time series database

00:02:38.210 --> 00:02:39.330
<v Speaker 1>out there right now.

00:02:40.530 --> 00:02:42.450
<v Speaker 1>It is blindingly fast,

00:02:43.655 --> 00:02:45.255
<v Speaker 1>written from scratch,

00:02:46.455 --> 00:02:48.775
<v Speaker 1>SQL based time series database.

00:02:49.095 --> 00:02:50.775
<v Speaker 1>So if you know SQL,

00:02:51.815 --> 00:02:52.855
<v Speaker 1>you're already

00:02:52.935 --> 00:02:54.055
<v Speaker 1>mostly there.

00:02:55.575 --> 00:02:58.215
<v Speaker 1>And it's really small, actually. It's even embeddable.

00:02:58.215 --> 00:03:01.320
<v Speaker 1>It's I think the entire download for it

00:03:01.320 --> 00:03:01.960
<v Speaker 1>is, like,

00:03:03.480 --> 00:03:04.680
<v Speaker 1>three megs

00:03:05.000 --> 00:03:07.000
<v Speaker 0>as long as you use if you're using

00:03:07.000 --> 00:03:09.000
<v Speaker 1>your own JVM. If you download it with

00:03:09.000 --> 00:03:10.360
<v Speaker 1>a j if you if you're using an

00:03:10.360 --> 00:03:12.200
<v Speaker 1>embedded JVM, it's a little more because you

00:03:12.200 --> 00:03:14.495
<v Speaker 1>gotta have the JVM, but it's really quite

00:03:14.495 --> 00:03:15.775
<v Speaker 1>small. Yeah.

00:03:16.575 --> 00:03:17.935
<v Speaker 0>Alright. Cool.

00:03:18.095 --> 00:03:22.335
<v Speaker 0>Well, I know SQL, SQL. So in theory,

00:03:22.495 --> 00:03:24.255
<v Speaker 0>I should get on to staying here. Right?

00:03:24.334 --> 00:03:25.295
<v Speaker 1>In theory, yes.

00:03:26.370 --> 00:03:28.370
<v Speaker 0>Alright. Let me bring up my screen then.

00:03:28.370 --> 00:03:29.650
<v Speaker 0>I think

00:03:30.290 --> 00:03:32.290
<v Speaker 0>there we go. So this is just the

00:03:32.370 --> 00:03:33.569
<v Speaker 0>the website.

00:03:33.569 --> 00:03:34.210
<v Speaker 0>So

00:03:34.690 --> 00:03:36.690
<v Speaker 0>fast equal series time series. I got some

00:03:36.690 --> 00:03:40.275
<v Speaker 0>docker commands, which is great. But recently, there

00:03:40.275 --> 00:03:42.595
<v Speaker 0>was the ability to deploy this to Kubernetes.

00:03:42.754 --> 00:03:44.515
<v Speaker 1>I wonder who did that for us.

00:03:45.075 --> 00:03:47.875
<v Speaker 0>Which I did out of curiosity more than

00:03:47.875 --> 00:03:49.555
<v Speaker 0>anything because I was like, hey. Let's let's

00:03:49.555 --> 00:03:50.675
<v Speaker 0>play with this. And

00:03:50.995 --> 00:03:52.675
<v Speaker 0>when I built the helm chart to deploy

00:03:52.675 --> 00:03:53.315
<v Speaker 0>it to Kubernetes,

00:03:53.730 --> 00:03:55.330
<v Speaker 0>you know, I I kinda looked at the

00:03:55.330 --> 00:03:57.330
<v Speaker 0>UI and kicked it around a little bit,

00:03:57.330 --> 00:03:59.890
<v Speaker 0>but I'm not really given it some proper

00:03:59.890 --> 00:04:01.890
<v Speaker 0>attention that it's a does it that it

00:04:01.890 --> 00:04:03.409
<v Speaker 0>deserves yet. And that's what I wanna do

00:04:03.409 --> 00:04:04.610
<v Speaker 0>just now. So

00:04:05.730 --> 00:04:08.515
<v Speaker 0>the chart is open source, of course, and

00:04:08.515 --> 00:04:09.795
<v Speaker 0>it is here.

00:04:11.475 --> 00:04:12.115
<v Speaker 0>So

00:04:13.795 --> 00:04:15.875
<v Speaker 0>let's just have a quick look.

00:04:17.875 --> 00:04:20.355
<v Speaker 0>I'm just gonna copy this entire values file.

00:04:20.355 --> 00:04:21.955
<v Speaker 0>I'm gonna tweak it. If it's ever I

00:04:21.955 --> 00:04:23.235
<v Speaker 0>don't know what it is. I'm just gonna

00:04:23.235 --> 00:04:25.050
<v Speaker 0>throw questions at you.

00:04:25.610 --> 00:04:27.050
<v Speaker 0>K. I will try and get this deployed

00:04:27.050 --> 00:04:28.330
<v Speaker 0>pretty quickly.

00:04:28.730 --> 00:04:29.370
<v Speaker 0>So

00:04:29.690 --> 00:04:31.449
<v Speaker 0>oh, I already cleaned up the chart. Oh,

00:04:31.449 --> 00:04:33.130
<v Speaker 0>I'm one step ahead of myself. Okay.

00:04:34.650 --> 00:04:37.370
<v Speaker 0>So that's all pretty self explanatory.

00:04:38.014 --> 00:04:40.095
<v Speaker 0>The tag there says 501. Did I make

00:04:40.095 --> 00:04:41.855
<v Speaker 0>that up, or it's on version five?

00:04:42.415 --> 00:04:45.294
<v Speaker 1>No. And I think we're you probably wanna

00:04:45.294 --> 00:04:47.375
<v Speaker 1>move it to 502.

00:04:50.230 --> 00:04:51.030
<v Speaker 0>K.

00:04:53.030 --> 00:04:55.430
<v Speaker 0>We don't wanna do any tweaking here.

00:04:56.150 --> 00:04:58.230
<v Speaker 0>Does the worker can't matter? What are these

00:04:58.230 --> 00:04:59.510
<v Speaker 0>JVM options?

00:05:00.790 --> 00:05:01.270
<v Speaker 1>No.

00:05:01.670 --> 00:05:03.350
<v Speaker 1>Those are not

00:05:03.685 --> 00:05:05.685
<v Speaker 1>JVM options that I know of. You can

00:05:05.685 --> 00:05:07.125
<v Speaker 1>use it. Leave that at two. It should

00:05:07.125 --> 00:05:08.165
<v Speaker 1>be fine. Yeah.

00:05:09.365 --> 00:05:11.845
<v Speaker 0>Persistence. Alright. So I'm just going to apply

00:05:11.845 --> 00:05:13.445
<v Speaker 0>this straight up. Let's let's just see what

00:05:13.445 --> 00:05:14.485
<v Speaker 1>happens. Yeah. Let's see what happens.

00:05:15.220 --> 00:05:17.060
<v Speaker 0>Around the house, it can happen. Right?

00:05:19.060 --> 00:05:21.460
<v Speaker 0>Well, manager, I'll fix that. It's because I've

00:05:21.460 --> 00:05:23.460
<v Speaker 0>got a very current version of helm. So

00:05:23.460 --> 00:05:24.900
<v Speaker 0>we're gonna do upgrade.

00:05:26.100 --> 00:05:26.500
<v Speaker 0>Install.

00:05:29.645 --> 00:05:30.525
<v Speaker 0>I'm

00:05:30.525 --> 00:05:31.965
<v Speaker 0>gonna have to fix that then.

00:05:34.125 --> 00:05:36.605
<v Speaker 0>Oh, it's a problem on a livestream. Right?

00:05:36.845 --> 00:05:37.725
<v Speaker 1>Oh, yeah.

00:05:38.925 --> 00:05:41.805
<v Speaker 0>So it's just complaining that we want a

00:05:41.805 --> 00:05:43.325
<v Speaker 0>metadata tag here.

00:05:43.740 --> 00:05:45.820
<v Speaker 0>I don't remember who's gonna actuate.

00:05:47.180 --> 00:05:48.060
<v Speaker 1>As my

00:05:48.220 --> 00:05:50.220
<v Speaker 1>well, the CEO of a company I used

00:05:50.220 --> 00:05:51.580
<v Speaker 1>to work for used to say, you know,

00:05:51.580 --> 00:05:53.500
<v Speaker 1>if if the demo works every time it's

00:05:53.500 --> 00:05:54.460
<v Speaker 1>a product, ship it.

00:05:57.275 --> 00:06:00.875
<v Speaker 0>Alright. Let's see. I have this header. Stack

00:06:00.875 --> 00:06:02.315
<v Speaker 0>Overflow generate.

00:06:02.315 --> 00:06:04.155
<v Speaker 0>I guess we can do that in cockpit,

00:06:04.155 --> 00:06:04.795
<v Speaker 0>can't we?

00:06:07.275 --> 00:06:09.115
<v Speaker 0>Put the temp directory.

00:06:10.715 --> 00:06:11.435
<v Speaker 0>Run this.

00:06:13.050 --> 00:06:14.410
<v Speaker 0>I need a name.

00:06:19.610 --> 00:06:21.690
<v Speaker 0>Oh, that's not the right command at all.

00:06:22.250 --> 00:06:24.090
<v Speaker 0>Be this is why it should never trust

00:06:24.090 --> 00:06:24.650
<v Speaker 0>that workflow.

00:06:27.235 --> 00:06:28.035
<v Speaker 0>So

00:06:30.435 --> 00:06:32.355
<v Speaker 0>just grab one of these charts, see what

00:06:32.355 --> 00:06:32.835
<v Speaker 0>I'm missing.

00:06:38.300 --> 00:06:39.020
<v Speaker 0>Nothing.

00:06:39.900 --> 00:06:41.900
<v Speaker 0>Maybe I'm just reading the error too quickly

00:06:41.900 --> 00:06:44.940
<v Speaker 0>for no one. Mhmm. Okay. Chart dot metadata

00:06:44.940 --> 00:06:46.139
<v Speaker 0>is required.

00:06:46.460 --> 00:06:48.220
<v Speaker 0>Found that for this chart then.

00:06:48.539 --> 00:06:50.060
<v Speaker 0>Well, that's not been updated in a while.

00:06:50.060 --> 00:06:50.940
<v Speaker 0>Let's pick a new one.

00:06:58.295 --> 00:07:00.615
<v Speaker 1>Maybe I'll learn something about Kubernetes watching you

00:07:00.615 --> 00:07:02.855
<v Speaker 1>do this. Maybe I'll actually learn how to

00:07:02.855 --> 00:07:03.415
<v Speaker 0>work myself.

00:07:06.889 --> 00:07:10.090
<v Speaker 0>Okay. Home container sources keyword. It's automatic data

00:07:10.090 --> 00:07:10.970
<v Speaker 0>at once.

00:07:11.370 --> 00:07:12.090
<v Speaker 0>Oh,

00:07:15.370 --> 00:07:17.449
<v Speaker 0>I'm being really, really silly right now.

00:07:25.975 --> 00:07:28.135
<v Speaker 0>Let's just Google the error. This is how

00:07:28.135 --> 00:07:30.215
<v Speaker 0>I spend most of my days anyway.

00:07:30.375 --> 00:07:32.215
<v Speaker 1>Googling error messages. Absolutely.

00:07:32.810 --> 00:07:34.250
<v Speaker 0>It's been one of those weeks where I

00:07:34.250 --> 00:07:35.690
<v Speaker 0>feel like I think I actually tweak it.

00:07:35.690 --> 00:07:37.450
<v Speaker 0>I'm just saying I spent 50% of my

00:07:37.450 --> 00:07:38.970
<v Speaker 0>time banging my head off the wall and

00:07:38.970 --> 00:07:41.930
<v Speaker 0>50% of my time asking questions. It's just

00:07:42.730 --> 00:07:44.250
<v Speaker 0>definitely one of those weeks.

00:07:46.585 --> 00:07:48.105
<v Speaker 0>And,

00:07:52.265 --> 00:07:54.105
<v Speaker 0>eventually, you get pretty good at skimming this

00:07:54.105 --> 00:07:54.425
<v Speaker 0>stuff.

00:07:59.550 --> 00:08:01.629
<v Speaker 1>How did anybody write anything before there was

00:08:01.629 --> 00:08:02.669
<v Speaker 1>Stack Overflow?

00:08:06.349 --> 00:08:08.990
<v Speaker 0>I don't know. Chart metadata.

00:08:09.389 --> 00:08:11.550
<v Speaker 0>I haven't seen a definitive answer into what

00:08:11.550 --> 00:08:12.270
<v Speaker 0>causes this.

00:08:15.974 --> 00:08:17.335
<v Speaker 0>Ah, have the wrong directory.

00:08:17.414 --> 00:08:19.655
<v Speaker 0>See? There we go. I'm not even in

00:08:19.655 --> 00:08:20.855
<v Speaker 0>the chart directory.

00:08:21.014 --> 00:08:21.335
<v Speaker 0>That's

00:08:22.294 --> 00:08:23.975
<v Speaker 1>Oh, well, that could be a problem.

00:08:24.215 --> 00:08:26.215
<v Speaker 1>Hey. While you're typing, I can show you

00:08:26.215 --> 00:08:27.815
<v Speaker 1>this little thing I built this week. Can

00:08:27.815 --> 00:08:28.294
<v Speaker 1>you see this?

00:08:30.500 --> 00:08:31.540
<v Speaker 0>Yes.

00:08:31.540 --> 00:08:33.620
<v Speaker 0>I have the graph on it. Yep.

00:08:34.179 --> 00:08:35.620
<v Speaker 1>Look how small it is.

00:08:37.299 --> 00:08:40.179
<v Speaker 0>Uh-huh. It's What's what's what's going on there?

00:08:40.179 --> 00:08:43.380
<v Speaker 1>It's particulate matter. It's a three micron particulate

00:08:43.380 --> 00:08:44.580
<v Speaker 1>matter

00:08:45.355 --> 00:08:47.595
<v Speaker 1>and sending it to QuestDB.

00:08:48.714 --> 00:08:49.915
<v Speaker 0>Ah, cool.

00:08:51.115 --> 00:08:53.194
<v Speaker 0>Okay. So we're past the first hurdle. It

00:08:53.194 --> 00:08:54.875
<v Speaker 0>turns out if you want to deploy a

00:08:54.875 --> 00:08:56.154
<v Speaker 0>Helm chart, then you have to tell it

00:08:56.154 --> 00:08:58.680
<v Speaker 0>where the Helm chart is. Like, go figure.

00:08:58.680 --> 00:09:01.320
<v Speaker 0>So Oh, yeah. Well, who would've guessed that?

00:09:02.200 --> 00:09:04.600
<v Speaker 0>It it's a Friday, like, ten to six

00:09:04.600 --> 00:09:06.440
<v Speaker 0>in the evening, so I'm gonna freak out

00:09:06.440 --> 00:09:07.960
<v Speaker 0>myself for that. Anyway,

00:09:08.760 --> 00:09:11.185
<v Speaker 0>we're gonna run, take it pods,

00:09:11.905 --> 00:09:14.785
<v Speaker 0>and we see that we have one QuestDB

00:09:14.785 --> 00:09:15.825
<v Speaker 0>running.

00:09:16.785 --> 00:09:20.145
<v Speaker 0>Awesome. So it does expose a UI. Right?

00:09:21.840 --> 00:09:24.640
<v Speaker 1>It does. 9,000.

00:09:24.640 --> 00:09:25.520
<v Speaker 1>Nine thousand.

00:09:26.240 --> 00:09:28.160
<v Speaker 0>I'm just gonna port forward to it, and

00:09:28.160 --> 00:09:29.920
<v Speaker 0>then we'll see what we're dealing with here.

00:09:29.920 --> 00:09:31.760
<v Speaker 0>So QuestDB

00:09:31.760 --> 00:09:32.880
<v Speaker 0>9,000,

00:09:35.285 --> 00:09:38.084
<v Speaker 0>and we can avoid those crappy errors I

00:09:38.084 --> 00:09:38.725
<v Speaker 0>was doing.

00:09:40.485 --> 00:09:42.084
<v Speaker 0>This is it. Here it is.

00:09:42.964 --> 00:09:44.644
<v Speaker 0>So do I get any metrics,

00:09:45.444 --> 00:09:47.204
<v Speaker 0>like, internal metrics, or am I gonna have

00:09:47.204 --> 00:09:48.565
<v Speaker 0>to start writing something to this?

00:09:49.279 --> 00:09:51.600
<v Speaker 1>That looks like internal metrics.

00:09:52.000 --> 00:09:53.920
<v Speaker 1>So just hit run. Yeah. You got internal

00:09:53.920 --> 00:09:54.800
<v Speaker 1>metrics.

00:09:56.560 --> 00:09:59.279
<v Speaker 0>Okay. I this is the telemetry stuff is

00:09:59.279 --> 00:10:00.800
<v Speaker 1>new, and I haven't looked at it yet.

00:10:01.115 --> 00:10:03.754
<v Speaker 1>So I don't know what you're what exactly

00:10:03.754 --> 00:10:05.995
<v Speaker 1>you're gonna be getting. If you wanna send

00:10:05.995 --> 00:10:08.074
<v Speaker 1>data to it, you're gonna have to expose

00:10:08.074 --> 00:10:09.675
<v Speaker 1>port 9,009.

00:10:13.194 --> 00:10:14.555
<v Speaker 0>That's not on the chart.

00:10:15.930 --> 00:10:18.010
<v Speaker 0>So are we messing up port from this?

00:10:19.290 --> 00:10:22.330
<v Speaker 1>The nine nine thousand nine is both the

00:10:22.330 --> 00:10:24.970
<v Speaker 1>TCP and the UDP port for influx line

00:10:24.970 --> 00:10:25.690
<v Speaker 1>protocol.

00:10:27.050 --> 00:10:29.130
<v Speaker 0>Oh, that has its own port. Right? At

00:10:29.130 --> 00:10:30.330
<v Speaker 0>least it can start to get a pill

00:10:30.330 --> 00:10:32.125
<v Speaker 0>request this evening then. So

00:10:32.925 --> 00:10:34.845
<v Speaker 0>we'll call this influx to be

00:10:36.285 --> 00:10:37.485
<v Speaker 0>in our port.

00:10:38.445 --> 00:10:40.205
<v Speaker 0>9009

00:10:41.885 --> 00:10:43.485
<v Speaker 0>and then protocol

00:10:43.770 --> 00:10:45.290
<v Speaker 0>I

00:10:46.650 --> 00:10:48.410
<v Speaker 0>don't know if you can add that twice.

00:10:48.890 --> 00:10:50.970
<v Speaker 0>Because unless I can't listen on both. Does

00:10:50.970 --> 00:10:54.010
<v Speaker 0>it? It will actually it well, I don't

00:10:54.010 --> 00:10:55.610
<v Speaker 1>know. On my machine, it will listen on

00:10:55.610 --> 00:10:56.970
<v Speaker 1>both ports as long as one of them

00:10:57.050 --> 00:10:58.330
<v Speaker 1>as long as they're different.

00:10:58.810 --> 00:11:00.084
<v Speaker 1>I know it works on my machine, so

00:11:00.084 --> 00:11:01.605
<v Speaker 1>I guess we should ship my machine.

00:11:02.324 --> 00:11:03.764
<v Speaker 0>Oh, it seems good. I didn't know you

00:11:03.764 --> 00:11:06.404
<v Speaker 0>could do that. See? I'm learning too. Alright.

00:11:07.045 --> 00:11:08.565
<v Speaker 0>But we described this.

00:11:09.444 --> 00:11:10.964
<v Speaker 0>We go to

00:11:13.960 --> 00:11:15.560
<v Speaker 0>send all these ports.

00:11:16.440 --> 00:11:18.120
<v Speaker 0>What's port? Alright.

00:11:18.279 --> 00:11:21.320
<v Speaker 0>Okay. Yeah. It's just taking the TCP, and

00:11:21.320 --> 00:11:23.640
<v Speaker 0>that's fine by me, though. So Yeah. That's

00:11:23.800 --> 00:11:24.040
<v Speaker 1>yeah.

00:11:26.875 --> 00:11:27.675
<v Speaker 0>Alright.

00:11:27.995 --> 00:11:30.235
<v Speaker 0>Calamity data is no fun. Let's

00:11:30.475 --> 00:11:33.355
<v Speaker 0>let's get something else in here. The torn.

00:11:35.355 --> 00:11:37.860
<v Speaker 0>Do we wanna stick in something big, or

00:11:37.860 --> 00:11:39.460
<v Speaker 0>do we wanna just kick the tires a

00:11:39.460 --> 00:11:41.140
<v Speaker 1>little bit? You can just if you just

00:11:41.140 --> 00:11:43.140
<v Speaker 1>turn on Telegraph,

00:11:43.140 --> 00:11:45.860
<v Speaker 1>you know, it automatically starts collecting just a

00:11:45.860 --> 00:11:46.980
<v Speaker 1>ton of stuff. Right?

00:11:51.024 --> 00:11:53.904
<v Speaker 0>Yeah. You're right. I'll probably do it inside

00:11:53.904 --> 00:11:54.545
<v Speaker 0>the

00:11:54.785 --> 00:11:56.065
<v Speaker 0>container, though.

00:11:57.345 --> 00:11:59.105
<v Speaker 0>I'll deploy it via helm,

00:11:59.265 --> 00:12:00.785
<v Speaker 0>or should I just run one locally? I

00:12:00.785 --> 00:12:02.225
<v Speaker 0>even have Totally up to you.

00:12:03.850 --> 00:12:05.610
<v Speaker 0>I see how it's for this. We can

00:12:05.610 --> 00:12:06.730
<v Speaker 0>always just do that.

00:12:07.370 --> 00:12:09.530
<v Speaker 0>And I'll just quickly put together a telegraph

00:12:09.530 --> 00:12:10.650
<v Speaker 0>configs in.

00:12:12.010 --> 00:12:12.730
<v Speaker 0>So

00:12:13.370 --> 00:12:13.930
<v Speaker 0>agent

00:12:14.330 --> 00:12:15.770
<v Speaker 0>interval

00:12:17.055 --> 00:12:18.015
<v Speaker 0>and

00:12:18.415 --> 00:12:19.855
<v Speaker 0>input CPU.

00:12:21.535 --> 00:12:22.095
<v Speaker 0>Then

00:12:25.295 --> 00:12:26.095
<v Speaker 0>disk.

00:12:26.415 --> 00:12:27.855
<v Speaker 0>Let's take a look at that. And I'm

00:12:27.855 --> 00:12:29.295
<v Speaker 0>using the end fuck TV output?

00:12:30.130 --> 00:12:32.450
<v Speaker 1>No. Actually, you're doing the

00:12:34.449 --> 00:12:36.529
<v Speaker 1>output. I believe it's the

00:12:36.769 --> 00:12:38.050
<v Speaker 1>socket. Let me look.

00:12:45.245 --> 00:12:46.845
<v Speaker 1>Oh, I don't yeah. I'm gonna have to

00:12:47.485 --> 00:12:48.925
<v Speaker 0>I'm sorry. I can fill up the docs

00:12:48.925 --> 00:12:50.765
<v Speaker 0>here. Kinda gonna get it up.

00:12:51.245 --> 00:12:53.485
<v Speaker 0>But I just need to send lane protocol

00:12:53.485 --> 00:12:56.285
<v Speaker 0>on a TCP socket. Right? That that's it.

00:12:56.285 --> 00:12:56.605
<v Speaker 0>So

00:12:57.660 --> 00:12:59.100
<v Speaker 0>I can work that out.

00:13:03.339 --> 00:13:04.460
<v Speaker 0>Copy that.

00:13:07.100 --> 00:13:08.060
<v Speaker 0>Uh-huh.

00:13:08.779 --> 00:13:09.660
<v Speaker 0>Copy

00:13:09.660 --> 00:13:09.980
<v Speaker 0>that.

00:13:11.465 --> 00:13:14.185
<v Speaker 0>So we wanna write to TTP

00:13:14.185 --> 00:13:16.825
<v Speaker 0>9009.

00:13:17.545 --> 00:13:20.025
<v Speaker 0>Yep. Because this is Kubernetes, we're gonna take

00:13:20.025 --> 00:13:22.185
<v Speaker 0>advantage of their services,

00:13:23.379 --> 00:13:25.620
<v Speaker 0>which means their QuestDB is available,

00:13:26.899 --> 00:13:28.500
<v Speaker 0>and we'll we need to expose the extra

00:13:28.500 --> 00:13:30.500
<v Speaker 0>port for that sign. And I'll push these

00:13:30.500 --> 00:13:32.100
<v Speaker 0>changes up as a PR to that chart

00:13:32.100 --> 00:13:33.620
<v Speaker 0>for other Okay. So

00:13:34.180 --> 00:13:36.339
<v Speaker 0>which means we're just looking for

00:13:36.740 --> 00:13:37.939
<v Speaker 0>QuestDB

00:13:38.425 --> 00:13:39.465
<v Speaker 0>909,

00:13:39.465 --> 00:13:41.785
<v Speaker 0>and I'll probably need to set the data

00:13:41.785 --> 00:13:42.665
<v Speaker 0>format.

00:13:44.105 --> 00:13:44.585
<v Speaker 0>Yep.

00:13:46.585 --> 00:13:48.265
<v Speaker 0>Anything else? That's it.

00:13:52.240 --> 00:13:54.160
<v Speaker 0>Okay. In fact, I installed that's for Bruce,

00:13:54.160 --> 00:13:55.840
<v Speaker 0>so we're not using that. So

00:13:56.640 --> 00:13:57.840
<v Speaker 0>we'll do that there.

00:13:58.320 --> 00:14:01.920
<v Speaker 0>Alright. Let's see what happens if I run

00:14:04.735 --> 00:14:05.695
<v Speaker 0>telegraph,

00:14:05.935 --> 00:14:06.575
<v Speaker 0>config

00:14:07.055 --> 00:14:08.095
<v Speaker 0>telegraph,

00:14:09.535 --> 00:14:12.255
<v Speaker 0>port forward dot extra port.

00:14:13.775 --> 00:14:16.095
<v Speaker 0>So, like, QuestDB

00:14:16.175 --> 00:14:17.375
<v Speaker 0>9,009.

00:14:18.899 --> 00:14:20.100
<v Speaker 0>Right. So

00:14:23.699 --> 00:14:26.019
<v Speaker 0>Telegraph isn't mourning yet, so that's maybe a

00:14:26.019 --> 00:14:26.820
<v Speaker 0>good sign.

00:14:28.500 --> 00:14:30.579
<v Speaker 1>That's a good sign if Telegraph's not either

00:14:30.579 --> 00:14:31.620
<v Speaker 1>mourning or crashing.

00:14:35.205 --> 00:14:36.885
<v Speaker 1>So just hit hit the

00:14:37.605 --> 00:14:39.925
<v Speaker 0>I need my second port forward to the

00:14:39.925 --> 00:14:40.885
<v Speaker 0>web interface.

00:14:41.125 --> 00:14:42.085
<v Speaker 1>Oh, yeah.

00:14:46.645 --> 00:14:47.605
<v Speaker 0>Well, look at that.

00:14:49.970 --> 00:14:52.690
<v Speaker 0>Alright. So what what's the table in QuestDB?

00:14:52.690 --> 00:14:54.850
<v Speaker 0>Is that a measurement and then flux?

00:14:55.570 --> 00:14:57.810
<v Speaker 1>Basically, yeah. Basically, yeah.

00:14:59.570 --> 00:15:00.930
<v Speaker 0>I can just run this.

00:15:01.644 --> 00:15:03.885
<v Speaker 0>Oh, there we go. And there we go.

00:15:04.045 --> 00:15:05.165
<v Speaker 1>Cool.

00:15:08.445 --> 00:15:09.245
<v Speaker 0>Alright.

00:15:10.045 --> 00:15:12.685
<v Speaker 1>Now here here's something that that I didn't

00:15:12.685 --> 00:15:14.685
<v Speaker 1>know when I did this the first time

00:15:14.685 --> 00:15:15.645
<v Speaker 1>was that

00:15:15.885 --> 00:15:16.524
<v Speaker 1>if you

00:15:17.380 --> 00:15:20.820
<v Speaker 1>actually create the table first and designate a

00:15:20.820 --> 00:15:22.420
<v Speaker 1>time a time stamp

00:15:23.220 --> 00:15:24.180
<v Speaker 1>column,

00:15:24.980 --> 00:15:25.620
<v Speaker 1>then

00:15:25.860 --> 00:15:27.779
<v Speaker 1>some of this Telegraph stuff doesn't work as

00:15:27.779 --> 00:15:28.820
<v Speaker 1>well because

00:15:29.060 --> 00:15:32.365
<v Speaker 1>it a Telegraph occasionally tries to do an

00:15:32.365 --> 00:15:33.725
<v Speaker 1>out of order insert.

00:15:35.565 --> 00:15:38.125
<v Speaker 1>Oh. And if you have a designated

00:15:38.125 --> 00:15:39.725
<v Speaker 1>time stamp column,

00:15:40.125 --> 00:15:42.205
<v Speaker 1>then you can't do right now, you can't

00:15:42.205 --> 00:15:43.565
<v Speaker 1>do out of order inserts.

00:15:45.839 --> 00:15:46.480
<v Speaker 0>Okay.

00:15:46.800 --> 00:15:48.720
<v Speaker 0>Alright. I'll try not to do that. Well

00:15:48.800 --> 00:15:49.360
<v Speaker 0>yeah.

00:15:50.640 --> 00:15:52.400
<v Speaker 1>But we're fixing that. Actually,

00:15:52.880 --> 00:15:53.840
<v Speaker 1>Vlad's been

00:15:54.160 --> 00:15:54.960
<v Speaker 1>been

00:15:55.839 --> 00:15:59.120
<v Speaker 1>working on out of order inserts

00:15:58.415 --> 00:16:00.175
<v Speaker 1>lately, and he hopes to have that done

00:16:00.175 --> 00:16:03.615
<v Speaker 1>pretty quickly. We also are hoping that our

00:16:04.735 --> 00:16:07.455
<v Speaker 1>Grafana plug in will be ready pretty quickly.

00:16:08.415 --> 00:16:11.454
<v Speaker 0>Okay. The copywriting here says twenty fourteen to

00:16:11.454 --> 00:16:11.935
<v Speaker 0>2020.

00:16:12.620 --> 00:16:15.180
<v Speaker 0>Yep. So QuestDB has been around a while?

00:16:15.420 --> 00:16:16.700
<v Speaker 1>Absolutely.

00:16:16.700 --> 00:16:19.660
<v Speaker 1>Yeah. Seven years, actually. Was it always open

00:16:19.660 --> 00:16:21.660
<v Speaker 0>source, or is that something that happened recently?

00:16:22.220 --> 00:16:24.300
<v Speaker 1>I'm not quite sure when. I think it

00:16:24.300 --> 00:16:26.940
<v Speaker 1>was mostly open source. Vlad basically started writing

00:16:26.940 --> 00:16:27.899
<v Speaker 1>this in his spare time.

00:16:29.155 --> 00:16:31.315
<v Speaker 1>And he wrote it and he basically wrote

00:16:31.315 --> 00:16:31.875
<v Speaker 1>it,

00:16:32.115 --> 00:16:33.715
<v Speaker 1>and then he was like, oh, well, you

00:16:33.715 --> 00:16:35.315
<v Speaker 1>know, what I did was shit. So he

00:16:35.315 --> 00:16:36.835
<v Speaker 1>threw the whole thing away and started over

00:16:36.835 --> 00:16:38.995
<v Speaker 1>again and rewrote the whole thing.

00:16:40.355 --> 00:16:41.555
<v Speaker 1>And and

00:16:42.940 --> 00:16:44.940
<v Speaker 1>because he was trying to get his basically,

00:16:44.940 --> 00:16:46.940
<v Speaker 1>the performance as close to the hardware as

00:16:46.940 --> 00:16:47.580
<v Speaker 1>possible.

00:16:47.980 --> 00:16:48.620
<v Speaker 1>Right?

00:16:50.300 --> 00:16:51.020
<v Speaker 0>Okay.

00:16:51.580 --> 00:16:52.220
<v Speaker 0>So

00:16:52.459 --> 00:16:53.980
<v Speaker 0>alright. Teach me then. How do I do

00:16:53.980 --> 00:16:56.540
<v Speaker 0>some time series stuff? How can I calculate

00:16:57.005 --> 00:16:58.765
<v Speaker 0>how can I just pull out a single

00:16:58.765 --> 00:17:00.524
<v Speaker 0>field? We set this as SQL. Right? Can

00:17:00.524 --> 00:17:01.565
<v Speaker 0>I just select?

00:17:01.725 --> 00:17:02.445
<v Speaker 1>Yep.

00:17:02.685 --> 00:17:03.725
<v Speaker 0>And the

00:17:04.204 --> 00:17:05.644
<v Speaker 0>usage idle

00:17:05.885 --> 00:17:07.004
<v Speaker 0>from CPU?

00:17:07.165 --> 00:17:07.804
<v Speaker 1>Yep.

00:17:08.285 --> 00:17:09.804
<v Speaker 0>Alright. Yep.

00:17:10.204 --> 00:17:10.684
<v Speaker 1>Boom.

00:17:12.369 --> 00:17:13.089
<v Speaker 0>Okay.

00:17:13.250 --> 00:17:15.250
<v Speaker 1>If you wanna see the time stamp, then

00:17:15.250 --> 00:17:16.049
<v Speaker 1>select

00:17:16.290 --> 00:17:20.049
<v Speaker 1>CPU idle and time stamp. Right? So

00:17:20.930 --> 00:17:21.890
<v Speaker 0>Okay.

00:17:21.890 --> 00:17:24.130
<v Speaker 0>So well, I'm gonna need the CPU.

00:17:24.525 --> 00:17:27.565
<v Speaker 0>I want usage idle and then change that.

00:17:27.805 --> 00:17:29.485
<v Speaker 0>I'll just comment that back out. I like

00:17:29.485 --> 00:17:30.684
<v Speaker 0>that I can just command

00:17:31.085 --> 00:17:31.804
<v Speaker 0>and

00:17:32.125 --> 00:17:33.485
<v Speaker 0>slash the comments.

00:17:34.525 --> 00:17:36.284
<v Speaker 0>Oh, let's get you to Yeah.

00:17:37.005 --> 00:17:38.525
<v Speaker 1>Nero did a really nice job on the

00:17:38.525 --> 00:17:39.965
<v Speaker 1>editor for the for this.

00:17:41.380 --> 00:17:42.820
<v Speaker 0>Yeah. Good.

00:17:43.620 --> 00:17:45.860
<v Speaker 0>Okay. Let's try something else then. So So

00:17:45.860 --> 00:17:47.540
<v Speaker 0>if you click on that down there that

00:17:47.540 --> 00:17:48.500
<v Speaker 1>says chart.

00:17:49.380 --> 00:17:50.179
<v Speaker 0>Uh-huh.

00:17:51.220 --> 00:17:51.860
<v Speaker 1>So

00:17:52.100 --> 00:17:52.900
<v Speaker 1>for labels,

00:17:53.375 --> 00:17:56.415
<v Speaker 1>under under that labels pull down, choose time

00:17:56.415 --> 00:17:57.455
<v Speaker 1>stamp and

00:17:59.615 --> 00:18:01.775
<v Speaker 1>remove time stamp from the series

00:18:02.575 --> 00:18:04.255
<v Speaker 1>there and now hit draw.

00:18:04.975 --> 00:18:05.455
<v Speaker 0>Move.

00:18:07.049 --> 00:18:08.649
<v Speaker 1>It's a bar chart. Change it to a

00:18:08.649 --> 00:18:10.169
<v Speaker 1>line chart and redraw it.

00:18:14.330 --> 00:18:15.289
<v Speaker 0>Okay.

00:18:17.690 --> 00:18:19.210
<v Speaker 0>So this is

00:18:19.450 --> 00:18:20.730
<v Speaker 0>alright. Okay. I got it. So

00:18:21.895 --> 00:18:23.975
<v Speaker 1>So it may be that you're pulling

00:18:25.175 --> 00:18:28.134
<v Speaker 1>go back to your your your grid view,

00:18:28.375 --> 00:18:31.415
<v Speaker 1>the table and see because says there's eight

00:18:31.415 --> 00:18:34.295
<v Speaker 0>CPUs. No. 15 CPUs. That so that's why

00:18:34.295 --> 00:18:36.695
<v Speaker 1>it looks like that. Yeah. Okay. So can

00:18:36.695 --> 00:18:36.855
<v Speaker 0>I

00:18:38.080 --> 00:18:39.279
<v Speaker 0>verify

00:18:39.840 --> 00:18:43.119
<v Speaker 1>Duo Duo where CPU zero where

00:18:43.279 --> 00:18:44.000
<v Speaker 1>CPU e

00:18:45.360 --> 00:18:46.879
<v Speaker 1>equals CPU zero?

00:18:47.919 --> 00:18:48.559
<v Speaker 0>What?

00:18:48.879 --> 00:18:49.759
<v Speaker 1>Single quote.

00:18:52.685 --> 00:18:53.325
<v Speaker 1>Yeah.

00:18:54.925 --> 00:18:57.165
<v Speaker 1>So now you only have CPU zero.

00:19:01.965 --> 00:19:02.525
<v Speaker 1>Here you go.

00:19:03.500 --> 00:19:04.220
<v Speaker 0>Okay.

00:19:04.620 --> 00:19:05.580
<v Speaker 0>That's

00:19:05.580 --> 00:19:07.660
<v Speaker 0>what I would expect. Right? Value change over

00:19:07.660 --> 00:19:09.420
<v Speaker 0>time. That's a little more reasonable. You what

00:19:09.420 --> 00:19:11.500
<v Speaker 1>you were seeing was eight CPUs all drawn

00:19:11.500 --> 00:19:13.020
<v Speaker 1>in the right in the same column.

00:19:14.140 --> 00:19:15.500
<v Speaker 0>Alright. So how do I how do I

00:19:15.500 --> 00:19:17.820
<v Speaker 0>translate the mean event of all my CPUs?

00:19:18.745 --> 00:19:20.504
<v Speaker 0>I do let's see.

00:19:20.985 --> 00:19:23.144
<v Speaker 0>Take that off. Can I just do mean?

00:19:25.544 --> 00:19:26.264
<v Speaker 1>Yep.

00:19:26.424 --> 00:19:27.465
<v Speaker 0>Oh, nope.

00:19:28.265 --> 00:19:29.544
<v Speaker 0>Not bad.

00:19:31.065 --> 00:19:34.160
<v Speaker 0>So how Okay. How how does this Yeah.

00:19:34.160 --> 00:19:35.039
<v Speaker 1>Try lowercase.

00:19:36.240 --> 00:19:38.320
<v Speaker 0>I think that red squiggle means bad, though.

00:19:38.320 --> 00:19:39.200
<v Speaker 0>Right? Yeah.

00:19:39.680 --> 00:19:41.200
<v Speaker 1>The red squiggle's bad.

00:19:42.080 --> 00:19:43.440
<v Speaker 0>See, I know that. I get that my

00:19:43.440 --> 00:19:45.279
<v Speaker 0>code all the Maybe you can do average.

00:19:46.720 --> 00:19:48.720
<v Speaker 0>Yeah. Average will work. Yep.

00:19:49.155 --> 00:19:50.995
<v Speaker 0>That's just a b t. Yep. There we

00:19:50.995 --> 00:19:51.715
<v Speaker 0>go. Okay.

00:19:53.395 --> 00:19:54.434
<v Speaker 0>Let's do that.

00:19:55.635 --> 00:19:56.835
<v Speaker 0>And that's the only one that'll give me

00:19:56.835 --> 00:19:57.475
<v Speaker 0>CP.

00:19:58.835 --> 00:20:00.755
<v Speaker 1>But you're in you're in chart mode, so

00:20:00.755 --> 00:20:01.795
<v Speaker 1>go back to

00:20:02.610 --> 00:20:03.970
<v Speaker 1>grid. There you go.

00:20:04.290 --> 00:20:06.289
<v Speaker 0>It's because I took off the

00:20:06.610 --> 00:20:07.410
<v Speaker 0>CPU

00:20:07.410 --> 00:20:09.810
<v Speaker 0>and times no. Time stuff is still there.

00:20:09.810 --> 00:20:10.050
<v Speaker 0>So

00:20:11.090 --> 00:20:12.450
<v Speaker 1>You can also do

00:20:14.065 --> 00:20:15.425
<v Speaker 1>right. You wanna take out yeah. There you

00:20:15.425 --> 00:20:16.785
<v Speaker 1>go. Here's your average.

00:20:17.425 --> 00:20:19.664
<v Speaker 0>Okay. So how if I had to move

00:20:19.825 --> 00:20:21.745
<v Speaker 0>the where, that will get me the average

00:20:21.745 --> 00:20:23.184
<v Speaker 0>of all GPUs?

00:20:24.465 --> 00:20:26.225
<v Speaker 1>Yeah. You don't wanna get one series or

00:20:26.225 --> 00:20:28.705
<v Speaker 0>would I get 16 series? I don't know.

00:20:28.705 --> 00:20:29.585
<v Speaker 1>You don't even need this.

00:20:31.560 --> 00:20:33.480
<v Speaker 0>Alright. Okay. So

00:20:34.920 --> 00:20:36.840
<v Speaker 0>I've got the average pair of CDs. I

00:20:36.840 --> 00:20:38.520
<v Speaker 0>guess that yeah. That feels natural. That's what

00:20:38.520 --> 00:20:39.160
<v Speaker 0>I would expect.

00:20:44.885 --> 00:20:46.245
<v Speaker 0>I'm trying to work out. What what would

00:20:46.245 --> 00:20:47.845
<v Speaker 0>I do if I wanted to group all

00:20:47.845 --> 00:20:50.245
<v Speaker 0>of those together and calculate the average then?

00:20:51.205 --> 00:20:52.164
<v Speaker 0>Just group

00:20:53.445 --> 00:20:54.085
<v Speaker 0>by

00:20:54.245 --> 00:20:55.685
<v Speaker 0>or would that group by the value of

00:20:55.685 --> 00:20:56.165
<v Speaker 0>the CPU?

00:20:58.360 --> 00:20:58.919
<v Speaker 1>So,

00:20:59.160 --> 00:21:01.960
<v Speaker 1>basically, our group by is is

00:21:02.120 --> 00:21:04.840
<v Speaker 1>no op because it it automatically

00:21:04.840 --> 00:21:05.320
<v Speaker 1>groups.

00:21:10.934 --> 00:21:11.654
<v Speaker 0>Okay.

00:21:13.575 --> 00:21:15.095
<v Speaker 0>So let's see.

00:21:15.415 --> 00:21:17.014
<v Speaker 0>If I take group,

00:21:19.175 --> 00:21:21.575
<v Speaker 0>we get this lovely documentation page. That's pretty

00:21:21.575 --> 00:21:22.295
<v Speaker 0>nice. Okay.

00:21:26.290 --> 00:21:28.450
<v Speaker 0>I can group by sensor ID.

00:21:28.850 --> 00:21:30.690
<v Speaker 0>I can do multiple fields

00:21:30.690 --> 00:21:32.130
<v Speaker 0>on the group by. Okay.

00:21:36.610 --> 00:21:37.410
<v Speaker 0>Nice.

00:21:37.410 --> 00:21:38.770
<v Speaker 0>And I think you have this for oh,

00:21:38.770 --> 00:21:40.345
<v Speaker 0>yeah. All the functions are here. Yeah. We

00:21:40.345 --> 00:21:43.065
<v Speaker 1>got all the all the support functions there.

00:21:43.465 --> 00:21:44.984
<v Speaker 0>Oh, show statement.

00:21:46.904 --> 00:21:49.625
<v Speaker 0>I can introspect the database. Let's have a

00:21:49.625 --> 00:21:51.225
<v Speaker 1>look. That's how you get the that's how

00:21:51.225 --> 00:21:53.225
<v Speaker 1>the tables are are

00:21:55.000 --> 00:21:56.360
<v Speaker 1>in that side.

00:21:57.240 --> 00:21:59.320
<v Speaker 1>You'll notice that that looks exactly like your

00:21:59.320 --> 00:22:00.600
<v Speaker 1>little sidebar there.

00:22:01.240 --> 00:22:03.800
<v Speaker 0>It does. That's how we get that. Yeah.

00:22:06.664 --> 00:22:08.025
<v Speaker 0>Actual columns

00:22:08.025 --> 00:22:08.984
<v Speaker 0>from

00:22:09.304 --> 00:22:10.504
<v Speaker 0>desk.

00:22:11.065 --> 00:22:12.664
<v Speaker 0>Ah, cool. Okay.

00:22:14.745 --> 00:22:16.504
<v Speaker 0>I like playing with new tools.

00:22:17.225 --> 00:22:19.784
<v Speaker 0>What's that? I like playing with new things.

00:22:19.784 --> 00:22:20.345
<v Speaker 0>I can just,

00:22:21.090 --> 00:22:22.530
<v Speaker 0>you know, that little bit of joy you

00:22:22.530 --> 00:22:23.809
<v Speaker 0>get when you work at something else or

00:22:23.809 --> 00:22:25.890
<v Speaker 0>learn something. Yep. So

00:22:26.450 --> 00:22:28.610
<v Speaker 1>So what you'll notice there is that we

00:22:28.610 --> 00:22:31.090
<v Speaker 1>have we're using symbol and not string.

00:22:34.065 --> 00:22:35.264
<v Speaker 0>And what does that mean?

00:22:35.505 --> 00:22:37.585
<v Speaker 1>So here's the here's the thing.

00:22:38.145 --> 00:22:39.424
<v Speaker 1>The way that

00:22:39.985 --> 00:22:41.505
<v Speaker 1>one of the way and I just had

00:22:41.505 --> 00:22:43.585
<v Speaker 1>the a like, an hour long talk with

00:22:43.585 --> 00:22:45.905
<v Speaker 1>Vlad. I'm in the process of of writing

00:22:45.905 --> 00:22:47.424
<v Speaker 1>this up as a blog post because it's

00:22:47.424 --> 00:22:49.025
<v Speaker 1>super interesting how he did this.

00:22:50.730 --> 00:22:52.809
<v Speaker 1>Everything is stored

00:22:52.810 --> 00:22:53.610
<v Speaker 1>as

00:22:55.290 --> 00:22:56.330
<v Speaker 1>eight bytes.

00:22:56.330 --> 00:22:59.850
<v Speaker 1>Right? So everything lines up on eight byte

00:22:59.850 --> 00:23:00.650
<v Speaker 1>columns.

00:23:00.970 --> 00:23:01.290
<v Speaker 1>Right?

00:23:02.995 --> 00:23:05.635
<v Speaker 1>So that it's really, really fast because we

00:23:05.635 --> 00:23:08.674
<v Speaker 1>know exactly where everything starts and stops. Right?

00:23:09.875 --> 00:23:11.154
<v Speaker 1>But strings

00:23:12.115 --> 00:23:14.595
<v Speaker 1>are weird because they can be any length.

00:23:15.490 --> 00:23:17.970
<v Speaker 1>So you can't store a string in exactly

00:23:17.970 --> 00:23:20.289
<v Speaker 1>eight bytes unless you're only gonna allow people

00:23:20.289 --> 00:23:22.130
<v Speaker 1>to store eight bytes worth of string data,

00:23:22.130 --> 00:23:23.570
<v Speaker 1>which is kind of limiting.

00:23:23.970 --> 00:23:25.169
<v Speaker 1>So so

00:23:25.409 --> 00:23:27.809
<v Speaker 1>what it does is we store it as

00:23:27.809 --> 00:23:28.769
<v Speaker 1>what's called a symbol.

00:23:29.705 --> 00:23:31.865
<v Speaker 1>And what it what it actually does is

00:23:31.865 --> 00:23:35.065
<v Speaker 1>it puts the the string data in a

00:23:35.065 --> 00:23:36.345
<v Speaker 1>different table,

00:23:37.385 --> 00:23:40.505
<v Speaker 1>and it stores the basically, a pointer to

00:23:40.505 --> 00:23:41.545
<v Speaker 1>that string

00:23:41.690 --> 00:23:43.289
<v Speaker 1>in in the

00:23:43.929 --> 00:23:44.970
<v Speaker 1>eight byte

00:23:45.130 --> 00:23:46.009
<v Speaker 1>column.

00:23:46.570 --> 00:23:48.570
<v Speaker 1>So it keeps everything lined up by eight

00:23:48.570 --> 00:23:50.330
<v Speaker 1>bytes, but now we know exactly where to

00:23:50.330 --> 00:23:51.610
<v Speaker 1>go to get the value.

00:23:52.410 --> 00:23:53.049
<v Speaker 1>Right?

00:23:53.290 --> 00:23:54.009
<v Speaker 0>Okay.

00:23:55.049 --> 00:23:56.809
<v Speaker 1>And it's making it up a lot.

00:24:00.005 --> 00:24:00.725
<v Speaker 0>Right.

00:24:00.965 --> 00:24:02.725
<v Speaker 0>Alright. That makes sense. I got it. I

00:24:02.725 --> 00:24:04.565
<v Speaker 0>got it. I got there. Just to give

00:24:04.565 --> 00:24:06.725
<v Speaker 0>back time. So one of the other things

00:24:06.725 --> 00:24:08.165
<v Speaker 1>that we talked about yesterday

00:24:08.645 --> 00:24:12.085
<v Speaker 1>I talked about yesterday with

00:24:10.640 --> 00:24:13.039
<v Speaker 1>Vlad and Patrick, one of the other engineers,

00:24:13.039 --> 00:24:13.519
<v Speaker 1>is

00:24:13.840 --> 00:24:16.399
<v Speaker 1>what they had been doing was,

00:24:17.360 --> 00:24:17.679
<v Speaker 1>you know

00:24:20.640 --> 00:24:23.039
<v Speaker 1>basically, we're we're memory mapping everything. Right?

00:24:24.475 --> 00:24:25.674
<v Speaker 0>Okay.

00:24:25.835 --> 00:24:27.835
<v Speaker 1>And what they had been doing was creating

00:24:27.835 --> 00:24:30.715
<v Speaker 1>pages in memory map of of memory map.

00:24:30.715 --> 00:24:31.835
<v Speaker 1>And then when you get to, you know,

00:24:31.835 --> 00:24:32.794
<v Speaker 1>when you get to the end of a

00:24:32.794 --> 00:24:34.554
<v Speaker 1>page, well, they create another page,

00:24:34.875 --> 00:24:36.875
<v Speaker 1>and there were all these, like, if

00:24:37.830 --> 00:24:40.150
<v Speaker 1>then else is to figure out which page

00:24:40.150 --> 00:24:42.230
<v Speaker 1>stuff was on and where stuff went on

00:24:42.230 --> 00:24:43.269
<v Speaker 1>page breaks.

00:24:43.590 --> 00:24:45.109
<v Speaker 1>And what they did

00:24:45.429 --> 00:24:48.150
<v Speaker 1>just, like, a week or two ago was

00:24:48.150 --> 00:24:48.950
<v Speaker 1>they

00:24:49.270 --> 00:24:52.230
<v Speaker 1>they instead of having multiple pages, they just

00:24:52.230 --> 00:24:54.375
<v Speaker 1>decided to make one ginormous

00:24:54.375 --> 00:24:55.815
<v Speaker 1>page. Right?

00:24:56.934 --> 00:24:59.014
<v Speaker 1>Two to the sixty fourth because it's a

00:24:59.014 --> 00:25:00.934
<v Speaker 1>64 bit database.

00:25:01.335 --> 00:25:03.575
<v Speaker 1>One page that's huge.

00:25:04.054 --> 00:25:05.770
<v Speaker 1>And then they don't have to try to

00:25:05.770 --> 00:25:07.690
<v Speaker 1>decide what page they have to look in

00:25:07.690 --> 00:25:09.370
<v Speaker 1>because it's all in one page.

00:25:09.770 --> 00:25:11.450
<v Speaker 1>And they don't have to allocate the whole

00:25:11.450 --> 00:25:13.289
<v Speaker 1>thing. They can just

00:25:13.770 --> 00:25:16.169
<v Speaker 1>when it gets full, they just, you know,

00:25:16.730 --> 00:25:18.809
<v Speaker 1>grow the same page figures. They don't have

00:25:18.809 --> 00:25:20.570
<v Speaker 1>to worry about where the page boundary is.

00:25:20.535 --> 00:25:22.375
<v Speaker 1>There's no more page boundaries.

00:25:24.135 --> 00:25:26.215
<v Speaker 1>And it turns out that if, you know,

00:25:26.215 --> 00:25:28.375
<v Speaker 1>all that branching around, if this is in

00:25:28.375 --> 00:25:29.735
<v Speaker 1>a page or if it's in the next

00:25:29.735 --> 00:25:31.735
<v Speaker 1>page and going from page to page was

00:25:31.735 --> 00:25:34.455
<v Speaker 1>really slowing things down, they got something like

00:25:34.455 --> 00:25:35.335
<v Speaker 1>a 60%

00:25:35.880 --> 00:25:37.000
<v Speaker 1>speed bump

00:25:37.160 --> 00:25:38.039
<v Speaker 1>by

00:25:38.280 --> 00:25:39.320
<v Speaker 1>doing this

00:25:39.560 --> 00:25:42.840
<v Speaker 1>this page thing, and they're doing something that

00:25:42.840 --> 00:25:45.240
<v Speaker 1>I'm I'm kind of a may I asked

00:25:45.400 --> 00:25:47.320
<v Speaker 1>Vlad yesterday. He's like, why didn't anybody else

00:25:47.320 --> 00:25:49.794
<v Speaker 1>think of this? Because a lot of other

00:25:49.794 --> 00:25:50.754
<v Speaker 1>databases

00:25:50.835 --> 00:25:53.234
<v Speaker 1>basically try to outsmart the kernel

00:25:54.034 --> 00:25:56.195
<v Speaker 1>and do a lot of this stuff,

00:25:56.515 --> 00:25:57.234
<v Speaker 1>you know,

00:25:57.794 --> 00:25:58.595
<v Speaker 1>themselves.

00:25:58.595 --> 00:26:00.674
<v Speaker 1>They take the job away from the kernel

00:26:01.960 --> 00:26:04.360
<v Speaker 1>and try to outsmart the colonel. But,

00:26:04.600 --> 00:26:06.760
<v Speaker 1>really, this is the colonel's job, right, is

00:26:06.760 --> 00:26:08.840
<v Speaker 1>to know exactly where everything is in memory

00:26:08.840 --> 00:26:10.600
<v Speaker 1>and on disk and how to get there

00:26:10.600 --> 00:26:11.240
<v Speaker 1>fast.

00:26:11.720 --> 00:26:13.320
<v Speaker 1>And so why not just let the colonel

00:26:13.320 --> 00:26:16.495
<v Speaker 1>do its job and not try to, you

00:26:16.495 --> 00:26:16.975
<v Speaker 1>know,

00:26:17.295 --> 00:26:19.855
<v Speaker 1>take a bit of memory from the kernel

00:26:19.855 --> 00:26:22.575
<v Speaker 1>and map it sideways into my database, and

00:26:22.575 --> 00:26:24.335
<v Speaker 1>then I have to reference that, which references

00:26:24.335 --> 00:26:26.575
<v Speaker 1>into the kernel, which gets the memory address.

00:26:26.575 --> 00:26:29.455
<v Speaker 1>Right? It adds another layer of indirection.

00:26:30.660 --> 00:26:32.660
<v Speaker 1>And so if they're not doing that, they're

00:26:32.660 --> 00:26:34.820
<v Speaker 1>basically just letting the kernel do its job

00:26:34.820 --> 00:26:36.500
<v Speaker 1>and not trying to be smarter than the

00:26:36.500 --> 00:26:39.220
<v Speaker 1>kernel, which they're not gonna be. Right? You're

00:26:39.220 --> 00:26:41.140
<v Speaker 1>basically not gonna be smarter than the kernel.

00:26:42.525 --> 00:26:44.605
<v Speaker 0>Okay. I think that's a very good take

00:26:44.605 --> 00:26:46.765
<v Speaker 0>home lesson. Don't try to be smarter than

00:26:46.765 --> 00:26:47.565
<v Speaker 0>the kernel.

00:26:47.805 --> 00:26:50.605
<v Speaker 0>So you cannot touch the performance with that.

00:26:50.605 --> 00:26:52.525
<v Speaker 0>Like, if I remember right, was it a

00:26:52.525 --> 00:26:54.925
<v Speaker 0>month ago? You you made, like, a is

00:26:54.925 --> 00:26:56.205
<v Speaker 0>it was a billion

00:26:56.910 --> 00:26:59.790
<v Speaker 0>points database public? I can't remember the details.

00:26:59.790 --> 00:27:00.990
<v Speaker 0>Do you wanna Yeah. You can go you

00:27:00.990 --> 00:27:02.750
<v Speaker 1>can actually go there right now. It's still

00:27:02.750 --> 00:27:03.390
<v Speaker 1>live.

00:27:03.630 --> 00:27:04.990
<v Speaker 0>What's the URL?

00:27:05.470 --> 00:27:09.630
<v Speaker 1>Try.questdp.i0port9thousand.

00:27:12.455 --> 00:27:14.935
<v Speaker 0>This is just a public QuestDB. And how

00:27:14.935 --> 00:27:15.975
<v Speaker 0>big is the dataset?

00:27:16.375 --> 00:27:17.415
<v Speaker 1>1,600,000,000

00:27:17.415 --> 00:27:19.735
<v Speaker 1>rows. If you just do click on if

00:27:19.735 --> 00:27:21.335
<v Speaker 1>if you just run trips.

00:27:23.815 --> 00:27:24.375
<v Speaker 1>Run that.

00:27:25.919 --> 00:27:27.679
<v Speaker 1>So you got 1,600,000,000

00:27:27.679 --> 00:27:30.719
<v Speaker 1>rows in what you get? Three milliseconds?

00:27:32.000 --> 00:27:32.960
<v Speaker 0>Execute

00:27:32.960 --> 00:27:34.159
<v Speaker 0>three milliseconds.

00:27:34.159 --> 00:27:37.360
<v Speaker 0>Network 20 so, yeah, tool 32. It's pretty

00:27:37.360 --> 00:27:37.679
<v Speaker 0>fast.

00:27:38.375 --> 00:27:41.414
<v Speaker 1>Three milliseconds to go get 1,600,000,000

00:27:41.414 --> 00:27:43.495
<v Speaker 1>rows, and there's some sample queries up under

00:27:43.495 --> 00:27:45.094
<v Speaker 1>there under example queries.

00:27:46.855 --> 00:27:49.254
<v Speaker 0>Ah, okay. So you can actually do an

00:27:49.254 --> 00:27:51.575
<v Speaker 1>average overall 1,600,000,000

00:27:51.575 --> 00:27:52.134
<v Speaker 1>rows,

00:27:53.600 --> 00:27:55.119
<v Speaker 1>like, the average distance.

00:27:55.120 --> 00:27:58.080
<v Speaker 1>Right? Well, let's do that average fare keyed

00:27:58.080 --> 00:27:59.359
<v Speaker 0>by passenger

00:27:59.440 --> 00:28:00.719
<v Speaker 0>cab. Right. So

00:28:02.639 --> 00:28:03.679
<v Speaker 0>alright. Go.

00:28:06.235 --> 00:28:08.395
<v Speaker 0>So I guess that's then works out how

00:28:08.395 --> 00:28:09.835
<v Speaker 0>many people that are in each of the

00:28:09.835 --> 00:28:12.475
<v Speaker 0>cab rates and then parts of average fare

00:28:12.475 --> 00:28:14.635
<v Speaker 0>is basically trying to figure out how zero

00:28:14.635 --> 00:28:17.195
<v Speaker 1>people in a cab cost average $10, but

00:28:17.195 --> 00:28:19.595
<v Speaker 1>I'm I'm you know? And what was the

00:28:19.595 --> 00:28:20.955
<v Speaker 1>speed of execution of that?

00:28:22.040 --> 00:28:23.880
<v Speaker 0>So that was

00:28:23.880 --> 00:28:26.840
<v Speaker 0>execute four hundred and forty nine milliseconds.

00:28:27.720 --> 00:28:28.360
<v Speaker 1>Right.

00:28:28.760 --> 00:28:31.320
<v Speaker 1>And that's not a that's not a simple

00:28:31.320 --> 00:28:32.200
<v Speaker 1>query. Right?

00:28:33.825 --> 00:28:35.904
<v Speaker 0>No. It's not. Definitely not.

00:28:39.024 --> 00:28:41.825
<v Speaker 0>Cool. So then But again, that's over 1,600,000,000

00:28:41.825 --> 00:28:42.304
<v Speaker 1>rows.

00:28:45.919 --> 00:28:48.080
<v Speaker 0>Let's see what else we've got. So is

00:28:48.080 --> 00:28:49.600
<v Speaker 0>there a command line interface, or do you

00:28:49.600 --> 00:28:51.200
<v Speaker 0>have to use the web interface?

00:28:52.000 --> 00:28:54.399
<v Speaker 1>Right. Well so you can

00:28:54.880 --> 00:28:57.760
<v Speaker 1>basically do a command line interface, but it's

00:28:57.760 --> 00:28:58.559
<v Speaker 1>it's

00:28:58.960 --> 00:29:01.520
<v Speaker 1>via it's basically you're running it via curl.

00:29:02.054 --> 00:29:02.614
<v Speaker 1>Right?

00:29:02.855 --> 00:29:05.014
<v Speaker 0>Alright. We don't have a straight command line

00:29:05.014 --> 00:29:05.815
<v Speaker 1>interface.

00:29:06.135 --> 00:29:06.695
<v Speaker 0>And what's

00:29:08.054 --> 00:29:09.975
<v Speaker 0>okay. Let's just I'm just gonna do this,

00:29:09.975 --> 00:29:11.575
<v Speaker 0>actually, because I wanna see what the edit

00:29:11.575 --> 00:29:13.735
<v Speaker 0>is. I'll do my local one rather than

00:29:13.975 --> 00:29:15.174
<v Speaker 1>Oh, so

00:29:16.455 --> 00:29:17.414
<v Speaker 1>it actually

00:29:17.830 --> 00:29:19.510
<v Speaker 1>there's two endpoints

00:29:19.830 --> 00:29:20.550
<v Speaker 1>for

00:29:23.430 --> 00:29:23.910
<v Speaker 1>if you

00:29:25.830 --> 00:29:28.150
<v Speaker 0>We can just scale it from here. Right?

00:29:29.990 --> 00:29:30.550
<v Speaker 0>There we go.

00:29:32.025 --> 00:29:34.105
<v Speaker 1>Yeah. And it's so it's either depending on

00:29:34.105 --> 00:29:36.505
<v Speaker 1>which endpoint, it's either returning a CSV or

00:29:36.505 --> 00:29:38.345
<v Speaker 1>it's returning a JSON.

00:29:39.865 --> 00:29:41.305
<v Speaker 0>So if I see

00:29:41.945 --> 00:29:44.585
<v Speaker 0>it's not normally a copy of curl.

00:29:45.670 --> 00:29:46.549
<v Speaker 0>What's here?

00:29:47.110 --> 00:29:47.830
<v Speaker 0>No.

00:29:49.190 --> 00:29:50.150
<v Speaker 0>Oh, there we go.

00:29:51.030 --> 00:29:53.750
<v Speaker 0>So let's pop over here. I'll just grab

00:29:53.750 --> 00:29:55.510
<v Speaker 0>a new tab, temp directory.

00:30:00.685 --> 00:30:01.404
<v Speaker 0>So

00:30:01.805 --> 00:30:04.045
<v Speaker 0>but it has the exact end point. It's

00:30:04.045 --> 00:30:06.684
<v Speaker 0>past let a bit of math here, columns.

00:30:07.165 --> 00:30:08.605
<v Speaker 0>Oh, no. Wait. That's just the query. So

00:30:08.605 --> 00:30:09.645
<v Speaker 0>show okay. Yeah.

00:30:10.679 --> 00:30:13.320
<v Speaker 1>So I believe I can't remember. There's there's

00:30:13.320 --> 00:30:15.799
<v Speaker 1>an exact endpoint, and then there's a an

00:30:15.799 --> 00:30:18.679
<v Speaker 1>EXP endpoint. And and one of them returns

00:30:18.679 --> 00:30:19.480
<v Speaker 1>CSV,

00:30:19.480 --> 00:30:21.399
<v Speaker 1>and one of them returns

00:30:24.835 --> 00:30:27.315
<v Speaker 1>JSON. It looks like is that one returning

00:30:27.315 --> 00:30:28.674
<v Speaker 1>JSON? Yes.

00:30:28.915 --> 00:30:31.075
<v Speaker 0>Yeah. That's it. We can put it through

00:30:31.075 --> 00:30:31.555
<v Speaker 0>Jake here.

00:30:36.880 --> 00:30:39.520
<v Speaker 0>What am I doing? And and and and

00:30:39.520 --> 00:30:40.240
<v Speaker 0>and

00:30:40.880 --> 00:30:41.440
<v Speaker 0>there

00:30:41.760 --> 00:30:42.480
<v Speaker 0>we go.

00:30:48.559 --> 00:30:49.360
<v Speaker 0>Yeah. Nice.

00:30:50.065 --> 00:30:51.905
<v Speaker 0>I like it when things return JSON. It

00:30:51.905 --> 00:30:54.305
<v Speaker 0>means I can What's that? I like it

00:30:54.305 --> 00:30:56.065
<v Speaker 0>when things return JSON because it just means

00:30:56.065 --> 00:30:57.745
<v Speaker 0>it's so easy to script against that. It's

00:30:57.745 --> 00:30:59.425
<v Speaker 0>so easy to consume it and use it

00:30:59.425 --> 00:31:02.000
<v Speaker 0>and, you know, forward onto other functions. Yeah.

00:31:02.000 --> 00:31:03.919
<v Speaker 1>It's really easy to deal with. And and

00:31:03.919 --> 00:31:06.240
<v Speaker 1>the the other endpoint will give you CSV

00:31:06.240 --> 00:31:07.440
<v Speaker 1>if that's what you want.

00:31:08.080 --> 00:31:09.519
<v Speaker 0>Which endpoint is that?

00:31:10.240 --> 00:31:12.079
<v Speaker 1>Now you're asking hard questions.

00:31:12.559 --> 00:31:14.000
<v Speaker 0>That's okay. It's not it's not important.

00:31:15.025 --> 00:31:16.545
<v Speaker 0>I got what I needed. I see some

00:31:16.545 --> 00:31:18.385
<v Speaker 0>JSON, and I executed the query on the

00:31:18.385 --> 00:31:21.424
<v Speaker 0>command line. So that's that's progress for me.

00:31:21.985 --> 00:31:22.705
<v Speaker 0>Alright.

00:31:24.065 --> 00:31:26.545
<v Speaker 0>What what should I be aware of? Like,

00:31:26.545 --> 00:31:27.905
<v Speaker 0>before we wrap up then, like,

00:31:29.130 --> 00:31:30.810
<v Speaker 0>what what have I not asked? What have

00:31:30.810 --> 00:31:32.250
<v Speaker 0>I not covered? What what do I need

00:31:32.250 --> 00:31:33.610
<v Speaker 0>to know about QuestDB?

00:31:37.290 --> 00:31:39.930
<v Speaker 1>In terms of, like, things to avoid or

00:31:39.930 --> 00:31:42.815
<v Speaker 1>things to do? Or Oh, no. Just even

00:31:42.815 --> 00:31:43.695
<v Speaker 0>superficially.

00:31:43.695 --> 00:31:46.255
<v Speaker 0>Like, is there anything that I've not touched

00:31:46.255 --> 00:31:48.095
<v Speaker 0>here that's really cool? I mean, I've just

00:31:48.095 --> 00:31:49.535
<v Speaker 0>kind of thrown a little bit of data

00:31:49.535 --> 00:31:50.335
<v Speaker 0>testing.

00:31:51.215 --> 00:31:53.295
<v Speaker 1>Yeah. I mean so I've got a version

00:31:53.295 --> 00:31:55.215
<v Speaker 1>running here on my laptop that I've been

00:31:55.215 --> 00:31:55.855
<v Speaker 1>sending

00:31:56.095 --> 00:31:58.640
<v Speaker 1>IoT data to, and it's got sort of,

00:31:58.640 --> 00:32:00.320
<v Speaker 1>like, 2,300,000

00:32:00.320 --> 00:32:02.080
<v Speaker 1>data points in it right now.

00:32:02.960 --> 00:32:04.080
<v Speaker 1>And it's still,

00:32:04.880 --> 00:32:06.559
<v Speaker 1>you know, I'm I'm getting,

00:32:06.960 --> 00:32:09.919
<v Speaker 1>you know, millisecond level responses

00:32:09.919 --> 00:32:11.280
<v Speaker 1>to queries on the data.

00:32:13.024 --> 00:32:14.144
<v Speaker 1>So it's

00:32:15.424 --> 00:32:15.904
<v Speaker 1>it's

00:32:16.225 --> 00:32:17.664
<v Speaker 1>one of the things that I really like

00:32:17.664 --> 00:32:19.184
<v Speaker 1>about it is that it's really small and

00:32:19.184 --> 00:32:21.424
<v Speaker 1>it's really fast. So it it's it's got

00:32:21.424 --> 00:32:22.865
<v Speaker 1>both small and fast.

00:32:25.140 --> 00:32:27.300
<v Speaker 1>And it's as you see, it's well, I

00:32:27.300 --> 00:32:28.820
<v Speaker 1>mean, I don't know about Kubernetes,

00:32:28.820 --> 00:32:30.420
<v Speaker 1>but it's super easy to deploy because you

00:32:30.420 --> 00:32:32.580
<v Speaker 1>basically just start the binary and it runs.

00:32:32.580 --> 00:32:33.140
<v Speaker 1>Right?

00:32:34.420 --> 00:32:36.900
<v Speaker 0>Yeah. The Kubernetes deployment was you know, it's

00:32:36.900 --> 00:32:38.900
<v Speaker 0>pretty standard. I think just I wasn't aware

00:32:38.900 --> 00:32:40.555
<v Speaker 0>of the Netflix DB protocol.

00:32:40.555 --> 00:32:41.755
<v Speaker 0>I had to go and add a few

00:32:41.755 --> 00:32:42.635
<v Speaker 0>things, but

00:32:43.195 --> 00:32:44.635
<v Speaker 0>Right. Well, that's to get

00:32:45.435 --> 00:32:47.995
<v Speaker 0>sorry. We've had influx DB line protocol for

00:32:47.995 --> 00:32:49.035
<v Speaker 1>UDP

00:32:49.115 --> 00:32:50.395
<v Speaker 1>for quite some time,

00:32:51.035 --> 00:32:53.435
<v Speaker 1>but we just added the TCP

00:32:53.600 --> 00:32:56.320
<v Speaker 1>version of it, which actually has made a

00:32:56.320 --> 00:32:57.920
<v Speaker 1>bunch of the stuff that I do for

00:32:57.920 --> 00:33:00.960
<v Speaker 1>IoT really a lot easier because

00:33:01.120 --> 00:33:02.720
<v Speaker 1>I don't have to

00:33:03.040 --> 00:33:05.360
<v Speaker 1>with UDP, I basically had to keep opening

00:33:05.360 --> 00:33:08.080
<v Speaker 1>and closing the the connection because you never

00:33:08.080 --> 00:33:08.320
<v Speaker 1>know.

00:33:09.515 --> 00:33:11.595
<v Speaker 1>And with the TCP one, I can basically

00:33:11.595 --> 00:33:14.715
<v Speaker 1>open a connection and it'll stay open for

00:33:14.715 --> 00:33:17.835
<v Speaker 1>literally days and just I I just write

00:33:17.835 --> 00:33:19.195
<v Speaker 1>data to it. Right?

00:33:19.434 --> 00:33:20.234
<v Speaker 0>Ah,

00:33:20.315 --> 00:33:22.720
<v Speaker 0>that's pretty cool. So I I write data

00:33:22.720 --> 00:33:24.960
<v Speaker 1>to it every second, and it just takes,

00:33:24.960 --> 00:33:27.600
<v Speaker 1>you know, takes tons and tons of data.

00:33:29.360 --> 00:33:30.159
<v Speaker 0>Okay.

00:33:30.160 --> 00:33:33.935
<v Speaker 0>Yeah. It definitely sounds interesting. I mean, when

00:33:33.935 --> 00:33:36.415
<v Speaker 0>you say that it's small and fast, like,

00:33:36.415 --> 00:33:38.735
<v Speaker 0>right away, I'm like, but it's the JVM.

00:33:39.455 --> 00:33:41.135
<v Speaker 0>And this is it doesn't compute to me,

00:33:41.135 --> 00:33:42.735
<v Speaker 0>but I can see that it's, you know,

00:33:42.735 --> 00:33:44.975
<v Speaker 0>small and fast. It's just Yeah. Not something

00:33:44.975 --> 00:33:46.575
<v Speaker 0>that I'm used to. And I as I

00:33:46.575 --> 00:33:47.535
<v Speaker 0>guess I'm not that

00:33:48.260 --> 00:33:49.940
<v Speaker 0>I haven't played with the GVM a lot

00:33:49.940 --> 00:33:52.340
<v Speaker 0>over the last even probably ten years. So

00:33:52.340 --> 00:33:53.940
<v Speaker 1>I'm not sure it has changed for the

00:33:53.940 --> 00:33:54.980
<v Speaker 0>better drastically.

00:33:55.060 --> 00:33:57.940
<v Speaker 1>So I you know, look, I started with

00:33:57.940 --> 00:33:59.860
<v Speaker 1>with Java in 1995

00:33:59.860 --> 00:34:01.780
<v Speaker 1>before it was called Java. So

00:34:02.515 --> 00:34:05.635
<v Speaker 1>I I'm well aware of the it's interpreted

00:34:05.635 --> 00:34:07.315
<v Speaker 1>so it's slow. Right?

00:34:07.955 --> 00:34:09.475
<v Speaker 1>But starting

00:34:10.275 --> 00:34:12.514
<v Speaker 1>really in the sort of the the

00:34:14.449 --> 00:34:16.290
<v Speaker 1>early two thousands maybe

00:34:17.489 --> 00:34:20.369
<v Speaker 1>with some of the just in time compiling.

00:34:20.369 --> 00:34:23.730
<v Speaker 1>And then certainly by the mid two thousands,

00:34:25.010 --> 00:34:27.969
<v Speaker 1>you were getting near native speed out of

00:34:27.969 --> 00:34:29.329
<v Speaker 1>the JVM.

00:34:29.775 --> 00:34:30.494
<v Speaker 1>Right?

00:34:30.734 --> 00:34:33.135
<v Speaker 1>I worked on a a very large storage

00:34:33.135 --> 00:34:35.934
<v Speaker 1>project at some labs, and they wrote the

00:34:35.934 --> 00:34:38.255
<v Speaker 1>whole thing in Java. And they were actually

00:34:38.255 --> 00:34:40.734
<v Speaker 1>getting better performance out of Java than they

00:34:40.734 --> 00:34:42.414
<v Speaker 1>were out of the stuff that they'd written

00:34:42.414 --> 00:34:42.895
<v Speaker 1>in c,

00:34:43.940 --> 00:34:44.659
<v Speaker 1>Right?

00:34:45.139 --> 00:34:45.780
<v Speaker 1>Which

00:34:46.579 --> 00:34:48.339
<v Speaker 1>shocked me. I didn't think that that was

00:34:48.339 --> 00:34:48.980
<v Speaker 1>possible.

00:34:49.299 --> 00:34:51.380
<v Speaker 1>And one of the things that Vlad has

00:34:51.380 --> 00:34:52.900
<v Speaker 1>done here is that one of the things

00:34:52.900 --> 00:34:55.299
<v Speaker 1>that gets you with the JVM is garbage

00:34:55.299 --> 00:34:56.019
<v Speaker 1>collection. Right?

00:34:57.094 --> 00:34:59.015
<v Speaker 1>Because you never know when the JVM is

00:34:59.015 --> 00:35:00.375
<v Speaker 1>gonna say, you know, hold on a second.

00:35:00.375 --> 00:35:02.214
<v Speaker 1>I gotta collect garbage, and it's gonna go

00:35:02.214 --> 00:35:04.615
<v Speaker 1>away while it collects garbage. This

00:35:05.095 --> 00:35:07.095
<v Speaker 1>is zero garbage collection.

00:35:08.214 --> 00:35:11.160
<v Speaker 1>So the JVM never stops to collect garbage

00:35:11.160 --> 00:35:13.480
<v Speaker 1>because it generates zero garbage.

00:35:15.319 --> 00:35:16.200
<v Speaker 0>Wow.

00:35:16.599 --> 00:35:19.079
<v Speaker 0>Yeah. C plus plus and zero garbage collection

00:35:19.079 --> 00:35:20.520
<v Speaker 0>Java. Yep.

00:35:21.160 --> 00:35:24.040
<v Speaker 0>Tiny memory footprint, vectorized QD execution.

00:35:24.535 --> 00:35:26.215
<v Speaker 0>I don't really know what that means, but

00:35:26.215 --> 00:35:27.495
<v Speaker 0>it sounds really impressive.

00:35:27.735 --> 00:35:30.055
<v Speaker 1>Well, basically, the queries are

00:35:31.735 --> 00:35:33.655
<v Speaker 1>are running parallel.

00:35:33.735 --> 00:35:34.295
<v Speaker 1>Right?

00:35:34.855 --> 00:35:36.695
<v Speaker 0>Ah, got it. Okay. Cool.

00:35:37.290 --> 00:35:39.530
<v Speaker 0>Oh, I guess that that's nicely with the

00:35:39.530 --> 00:35:42.650
<v Speaker 0>70 then, the fact that you can execute

00:35:42.970 --> 00:35:43.930
<v Speaker 0>is it single

00:35:44.650 --> 00:35:47.050
<v Speaker 0>instruction multiple data. Right? So you're executing the

00:35:47.050 --> 00:35:49.050
<v Speaker 0>same thing across data and different points of

00:35:49.050 --> 00:35:50.810
<v Speaker 0>memory. Yes. I think that's how it works.

00:35:51.065 --> 00:35:51.705
<v Speaker 1>Yeah.

00:35:52.185 --> 00:35:54.825
<v Speaker 1>And and that's one of the reasons that

00:35:54.825 --> 00:35:56.265
<v Speaker 1>some of it is written in c plus

00:35:56.265 --> 00:35:58.345
<v Speaker 1>plus and and is that it's

00:35:59.385 --> 00:36:01.785
<v Speaker 1>the performance of it is very, very, very

00:36:01.785 --> 00:36:03.945
<v Speaker 1>closely tied to the performance of the hardware.

00:36:04.240 --> 00:36:04.880
<v Speaker 1>Right?

00:36:05.040 --> 00:36:06.080
<v Speaker 1>So the faster

00:36:06.640 --> 00:36:08.880
<v Speaker 1>it's always true that the faster your hardware,

00:36:08.880 --> 00:36:10.640
<v Speaker 1>the faster your whatever it is is gonna

00:36:10.640 --> 00:36:11.200
<v Speaker 1>run.

00:36:11.440 --> 00:36:14.000
<v Speaker 1>But this is really, really close to, you

00:36:14.000 --> 00:36:15.280
<v Speaker 1>know, sort of optimal

00:36:15.680 --> 00:36:17.120
<v Speaker 1>hardware performance

00:36:17.484 --> 00:36:20.445
<v Speaker 1>because of how closely aligned it is to

00:36:20.525 --> 00:36:21.885
<v Speaker 1>memory memory

00:36:21.885 --> 00:36:22.845
<v Speaker 1>boundaries

00:36:22.845 --> 00:36:26.285
<v Speaker 1>and and such. So that it gets just

00:36:26.285 --> 00:36:27.965
<v Speaker 1>maximum performance

00:36:28.205 --> 00:36:28.925
<v Speaker 1>out of it.

00:36:31.160 --> 00:36:32.040
<v Speaker 0>Very cool.

00:36:32.359 --> 00:36:33.960
<v Speaker 0>I'm just looking at these

00:36:35.720 --> 00:36:36.920
<v Speaker 0>sample queries,

00:36:36.920 --> 00:36:39.480
<v Speaker 0>I guess. So this syntax here, that's that's

00:36:39.480 --> 00:36:41.640
<v Speaker 0>obviously some sort of magic string. So it's

00:36:41.640 --> 00:36:44.039
<v Speaker 0>saying where time stamp is what? Greater than

00:36:44.325 --> 00:36:45.925
<v Speaker 0>the fourteenth spot.

00:36:46.645 --> 00:36:47.845
<v Speaker 1>Minus two days.

00:36:48.805 --> 00:36:50.005
<v Speaker 0>So does that mean it goes from the

00:36:50.005 --> 00:36:51.525
<v Speaker 0>fourteenth to the sixteenth or the twelfth to

00:36:51.525 --> 00:36:53.365
<v Speaker 0>the fourteenth? It goes to the twelfth to

00:36:53.365 --> 00:36:54.165
<v Speaker 1>the fourteenth.

00:36:54.484 --> 00:36:55.605
<v Speaker 0>Nice syntax.

00:36:56.859 --> 00:36:58.700
<v Speaker 0>I guess the sample by, is this for

00:36:58.700 --> 00:36:59.820
<v Speaker 0>doing windowing?

00:36:59.820 --> 00:37:00.380
<v Speaker 0>Yep.

00:37:00.700 --> 00:37:01.580
<v Speaker 0>Nice.

00:37:02.859 --> 00:37:04.540
<v Speaker 0>Latest, that is that just getting me one

00:37:04.540 --> 00:37:05.180
<v Speaker 0>value?

00:37:06.300 --> 00:37:09.020
<v Speaker 1>Yeah. From that set from that one from

00:37:09.020 --> 00:37:09.740
<v Speaker 1>that one

00:37:10.460 --> 00:37:11.099
<v Speaker 0>Latest.

00:37:11.575 --> 00:37:12.455
<v Speaker 0>Right.

00:37:13.895 --> 00:37:14.615
<v Speaker 0>K.

00:37:18.055 --> 00:37:19.495
<v Speaker 0>Wait. That's a short call.

00:37:20.055 --> 00:37:20.855
<v Speaker 0>Oops.

00:37:21.095 --> 00:37:23.335
<v Speaker 0>Let's do something actually useful. So so that

00:37:23.415 --> 00:37:25.975
<v Speaker 0>Yeah. Let's your columns isn't useful,

00:37:26.135 --> 00:37:26.615
<v Speaker 1>isn't it?

00:37:27.839 --> 00:37:30.480
<v Speaker 0>Or the usage angle from

00:37:30.480 --> 00:37:31.440
<v Speaker 0>CPU.

00:37:33.119 --> 00:37:34.480
<v Speaker 0>Ah, sure. Okay.

00:37:34.720 --> 00:37:36.319
<v Speaker 0>If I kept the CPU, then I guess

00:37:36.319 --> 00:37:38.160
<v Speaker 0>that would probably make more sense. But

00:37:39.039 --> 00:37:40.640
<v Speaker 0>the syntax is

00:37:42.974 --> 00:37:44.255
<v Speaker 0>what's this last one?

00:37:45.055 --> 00:37:47.214
<v Speaker 0>As of join whether

00:37:48.815 --> 00:37:50.815
<v Speaker 1>So that will join

00:37:52.095 --> 00:37:55.040
<v Speaker 1>the two things together. It's basically a a

00:37:55.280 --> 00:37:56.880
<v Speaker 1>it's a kind of join, and I don't

00:37:56.880 --> 00:37:57.840
<v Speaker 1>ask me about

00:37:58.400 --> 00:38:00.880
<v Speaker 1>as of joins because I'm I'm terrible at

00:38:00.880 --> 00:38:01.600
<v Speaker 1>this. My

00:38:02.000 --> 00:38:04.880
<v Speaker 1>my SQL is is old and rusty, and

00:38:04.880 --> 00:38:06.480
<v Speaker 1>it's just getting back up to speed.

00:38:07.695 --> 00:38:09.935
<v Speaker 1>But I believe that you can run that

00:38:09.935 --> 00:38:10.655
<v Speaker 1>query.

00:38:11.775 --> 00:38:13.775
<v Speaker 1>Oh, no. Send it's sensors.

00:38:14.175 --> 00:38:15.775
<v Speaker 1>There is a in the

00:38:16.335 --> 00:38:17.375
<v Speaker 1>in the

00:38:18.575 --> 00:38:21.295
<v Speaker 1>try demo, I believe there is one that's

00:38:21.295 --> 00:38:22.175
<v Speaker 1>an as of join.

00:38:23.910 --> 00:38:26.150
<v Speaker 0>I mean, I'm gonna try and just do

00:38:26.150 --> 00:38:28.710
<v Speaker 0>it first. Out of complete curiosity. It's if

00:38:28.710 --> 00:38:30.310
<v Speaker 0>I do it as of join, can I

00:38:30.310 --> 00:38:31.190
<v Speaker 0>bring in

00:38:31.510 --> 00:38:32.230
<v Speaker 0>this?

00:38:32.470 --> 00:38:33.910
<v Speaker 0>Or does it need some sort of joining

00:38:33.910 --> 00:38:34.390
<v Speaker 0>field?

00:38:35.465 --> 00:38:37.225
<v Speaker 0>Ambiguous column name.

00:38:37.465 --> 00:38:39.865
<v Speaker 0>Now I'm assuming that's because the timestamp exists

00:38:39.865 --> 00:38:40.505
<v Speaker 0>some

00:38:40.665 --> 00:38:42.025
<v Speaker 0>no. Both?

00:38:42.905 --> 00:38:44.665
<v Speaker 0>Let me check. So CPU

00:38:46.745 --> 00:38:48.185
<v Speaker 1>Go look at the

00:38:48.345 --> 00:38:51.470
<v Speaker 1>at the QuestDB demo and see if we

00:38:51.470 --> 00:38:53.710
<v Speaker 1>can find an as of join in there.

00:38:56.990 --> 00:38:57.790
<v Speaker 0>Host.

00:38:57.790 --> 00:38:59.310
<v Speaker 0>I know it's host. I wanna I wanna

00:38:59.310 --> 00:39:00.990
<v Speaker 0>hack it before I go look up the

00:39:00.990 --> 00:39:01.950
<v Speaker 0>demo. Okay.

00:39:02.670 --> 00:39:05.775
<v Speaker 0>So how do I disambiguate then? Let's see.

00:39:06.015 --> 00:39:07.215
<v Speaker 0>That doesn't have any

00:39:11.295 --> 00:39:13.055
<v Speaker 0>I don't even want a horse.

00:39:14.415 --> 00:39:14.895
<v Speaker 0>Ah, tracks.

00:39:18.640 --> 00:39:20.320
<v Speaker 0>Alright. Let's go look it up.

00:39:21.040 --> 00:39:21.760
<v Speaker 0>So

00:39:27.440 --> 00:39:29.600
<v Speaker 0>and there's a mess up there. So we're

00:39:29.600 --> 00:39:32.080
<v Speaker 0>saying select all of each oh, you could

00:39:32.080 --> 00:39:34.935
<v Speaker 0>do math inside the select. Cool.

00:39:36.454 --> 00:39:39.174
<v Speaker 0>From trips as of joint gas prices.

00:39:39.174 --> 00:39:40.455
<v Speaker 0>What's that doing?

00:39:42.535 --> 00:39:43.895
<v Speaker 0>Oh, I broke it.

00:39:46.750 --> 00:39:49.470
<v Speaker 1>Just go reselect the the query and rerun

00:39:49.470 --> 00:39:49.950
<v Speaker 1>it.

00:39:54.269 --> 00:39:55.470
<v Speaker 0>I'm

00:39:56.349 --> 00:39:58.910
<v Speaker 0>sure I just typed something by mistake and

00:39:58.910 --> 00:40:02.085
<v Speaker 0>broke it. So this is grabbing

00:40:02.965 --> 00:40:04.165
<v Speaker 0>cab type,

00:40:04.165 --> 00:40:06.325
<v Speaker 0>which I guess is coming from the trip.

00:40:06.485 --> 00:40:07.285
<v Speaker 0>I

00:40:07.845 --> 00:40:10.085
<v Speaker 0>don't know. And then adding on the gas

00:40:10.085 --> 00:40:10.965
<v Speaker 0>price.

00:40:10.965 --> 00:40:11.685
<v Speaker 1>Yep.

00:40:12.005 --> 00:40:12.725
<v Speaker 0>Okay.

00:40:14.170 --> 00:40:16.330
<v Speaker 1>And it's joining and it and it's basically

00:40:16.490 --> 00:40:18.410
<v Speaker 1>I think it's joining them on

00:40:19.210 --> 00:40:20.330
<v Speaker 1>on the

00:40:22.330 --> 00:40:23.930
<v Speaker 1>pickup date and time.

00:40:24.650 --> 00:40:24.970
<v Speaker 1>Yeah.

00:40:28.495 --> 00:40:29.295
<v Speaker 0>Alright.

00:40:29.375 --> 00:40:30.015
<v Speaker 0>So

00:40:30.335 --> 00:40:31.935
<v Speaker 0>I won't put you on the spot because

00:40:31.935 --> 00:40:32.735
<v Speaker 0>I know

00:40:34.655 --> 00:40:36.655
<v Speaker 0>it's a tough question, but I wonder how

00:40:36.655 --> 00:40:38.655
<v Speaker 0>I can disambiguate that host field so that

00:40:38.655 --> 00:40:39.695
<v Speaker 0>I can do that join.

00:40:40.180 --> 00:40:41.940
<v Speaker 1>What's the what's the error? I can barely

00:40:42.020 --> 00:40:43.460
<v Speaker 1>I can't really see the error it's giving

00:40:43.460 --> 00:40:45.220
<v Speaker 1>you when you try to run that query.

00:40:45.380 --> 00:40:46.420
<v Speaker 0>Oh, sorry.

00:40:46.900 --> 00:40:48.980
<v Speaker 0>So it says ambiguous column name, and that's

00:40:48.980 --> 00:40:51.300
<v Speaker 0>because both the CPU I'm I'm assuming you

00:40:51.300 --> 00:40:52.660
<v Speaker 0>can correct me if I'm wrong. The CPU

00:40:52.660 --> 00:40:55.140
<v Speaker 0>and the disk tables both have a host

00:40:55.140 --> 00:40:55.540
<v Speaker 0>column.

00:40:59.675 --> 00:41:01.915
<v Speaker 0>Maybe that's just It oh, no. It looks

00:41:01.915 --> 00:41:04.075
<v Speaker 1>like it's complaining about the time stamp.

00:41:05.755 --> 00:41:06.395
<v Speaker 1>Oh.

00:41:07.115 --> 00:41:10.155
<v Speaker 1>That's the one that's under that that's Oh.

00:41:10.395 --> 00:41:10.875
<v Speaker 1>Square bit.

00:41:12.960 --> 00:41:14.640
<v Speaker 0>So if I just take that off?

00:41:17.440 --> 00:41:18.720
<v Speaker 0>And then it said I have no time

00:41:18.720 --> 00:41:20.000
<v Speaker 0>stamp. Right.

00:41:20.160 --> 00:41:22.880
<v Speaker 1>No. Put the put the time stamp in

00:41:22.880 --> 00:41:23.840
<v Speaker 1>the ASF join.

00:41:29.215 --> 00:41:31.615
<v Speaker 0>Like, comma, time stamp? Or Yep.

00:41:34.655 --> 00:41:36.575
<v Speaker 1>Nope. I didn't didn't leave that.

00:41:38.975 --> 00:41:40.415
<v Speaker 0>Let's try the documentation.

00:41:41.280 --> 00:41:43.120
<v Speaker 0>I just spent thirty seconds on this, and

00:41:43.120 --> 00:41:44.640
<v Speaker 0>then we'll just wrap up. I don't wanna

00:41:44.960 --> 00:41:46.880
<v Speaker 0>I I actually have twenty minutes, and we're

00:41:46.880 --> 00:41:48.800
<v Speaker 0>currently at forty two minutes into this.

00:41:51.200 --> 00:41:52.000
<v Speaker 0>So

00:41:54.895 --> 00:41:56.735
<v Speaker 0>right as of join.

00:42:03.055 --> 00:42:04.655
<v Speaker 0>Yeah. It's maybe too much for me to

00:42:04.655 --> 00:42:06.255
<v Speaker 0>try and consume here in that short.

00:42:07.770 --> 00:42:10.090
<v Speaker 0>I will play with that later, I think.

00:42:10.490 --> 00:42:11.210
<v Speaker 1>Okay.

00:42:11.850 --> 00:42:14.330
<v Speaker 0>Anyway, that seems cool. I like it. So

00:42:14.330 --> 00:42:17.690
<v Speaker 0>before we finish then, like, does QuestDB

00:42:17.690 --> 00:42:18.330
<v Speaker 0>have

00:42:18.650 --> 00:42:19.770
<v Speaker 0>cardinality problems?

00:42:20.405 --> 00:42:21.125
<v Speaker 1>No.

00:42:23.045 --> 00:42:24.805
<v Speaker 0>That was the fastest no I think I've

00:42:24.805 --> 00:42:25.845
<v Speaker 0>ever heard. So

00:42:27.205 --> 00:42:28.724
<v Speaker 1>yeah. You mean I didn't answer with it

00:42:28.724 --> 00:42:31.205
<v Speaker 1>depends? No. Because it's a it's a columnar

00:42:31.205 --> 00:42:32.085
<v Speaker 1>data store. Right?

00:42:33.140 --> 00:42:35.780
<v Speaker 1>So one of the problems with with cardinality

00:42:35.780 --> 00:42:38.580
<v Speaker 1>that you ran into with, say, in FlexDB

00:42:38.580 --> 00:42:42.180
<v Speaker 1>was that it basically created a series

00:42:42.260 --> 00:42:43.060
<v Speaker 1>for each

00:42:45.785 --> 00:42:47.785
<v Speaker 1>tag and datasets.

00:42:48.505 --> 00:42:49.065
<v Speaker 1>Right?

00:42:49.705 --> 00:42:52.185
<v Speaker 0>Mhmm. That's correct. And so that's where you've

00:42:52.185 --> 00:42:54.745
<v Speaker 1>got your cardinality was the number of tags

00:42:54.745 --> 00:42:57.145
<v Speaker 1>and the and the number of values. Right?

00:42:58.119 --> 00:43:00.680
<v Speaker 1>That's the sort of the the the easy

00:43:00.680 --> 00:43:03.560
<v Speaker 1>calculation of of cardinality is you multiply your

00:43:03.560 --> 00:43:05.800
<v Speaker 1>tag set by your value set, and that's

00:43:05.800 --> 00:43:07.240
<v Speaker 1>your cardinality. Right?

00:43:09.240 --> 00:43:11.080
<v Speaker 0>Right. Okay. And

00:43:11.960 --> 00:43:15.235
<v Speaker 0>So I guess. So what happens in in

00:43:15.235 --> 00:43:16.275
<v Speaker 1>QuestDB

00:43:16.275 --> 00:43:18.435
<v Speaker 1>is if you have a table like this

00:43:18.515 --> 00:43:20.435
<v Speaker 1>and you start sending

00:43:21.315 --> 00:43:23.075
<v Speaker 1>let's say, you, you know, you have a

00:43:23.075 --> 00:43:25.235
<v Speaker 1>sensor you're sending all your sensor data to

00:43:25.235 --> 00:43:26.595
<v Speaker 1>the same table. Right?

00:43:27.940 --> 00:43:30.180
<v Speaker 1>But not all your sensors are sending the

00:43:30.180 --> 00:43:31.300
<v Speaker 1>same values,

00:43:32.100 --> 00:43:35.380
<v Speaker 1>any missing value will just be filled with

00:43:35.380 --> 00:43:36.180
<v Speaker 1>a null.

00:43:36.340 --> 00:43:36.980
<v Speaker 1>Right?

00:43:37.780 --> 00:43:40.660
<v Speaker 1>So you'll have a table that is wider

00:43:40.660 --> 00:43:42.340
<v Speaker 1>with lots and lots of columns,

00:43:43.175 --> 00:43:45.734
<v Speaker 1>but a bunch of them are null depending

00:43:45.734 --> 00:43:48.295
<v Speaker 1>on what values are coming from what sensor.

00:43:49.095 --> 00:43:50.295
<v Speaker 0>Alright. Okay.

00:43:50.535 --> 00:43:51.175
<v Speaker 1>And,

00:43:51.494 --> 00:43:55.494
<v Speaker 1>every everything is on these eight byte boundaries,

00:43:55.494 --> 00:43:58.135
<v Speaker 1>so it's super fast to go

00:43:58.690 --> 00:44:00.050
<v Speaker 1>search through them.

00:44:01.890 --> 00:44:02.530
<v Speaker 0>Okay.

00:44:03.090 --> 00:44:03.970
<v Speaker 0>Interesting.

00:44:05.090 --> 00:44:06.610
<v Speaker 0>So I think

00:44:07.170 --> 00:44:09.170
<v Speaker 0>I'm definite my interest is peaked. I'm gonna

00:44:09.170 --> 00:44:10.370
<v Speaker 0>play with this more.

00:44:10.610 --> 00:44:13.075
<v Speaker 0>I won't pick up any more time today,

00:44:13.075 --> 00:44:14.515
<v Speaker 0>but I've been if you're happy to, and

00:44:14.515 --> 00:44:15.715
<v Speaker 0>I'll put you on the spot and ask

00:44:15.715 --> 00:44:18.435
<v Speaker 0>you here. But when the Grafana plug in

00:44:18.755 --> 00:44:21.555
<v Speaker 0>goes live, we'll do this again, and we'll

00:44:21.635 --> 00:44:23.955
<v Speaker 0>we'll have a play with that? Absolutely.

00:44:23.955 --> 00:44:27.099
<v Speaker 1>Yeah. And I'm I'm I am trust me.

00:44:27.099 --> 00:44:28.780
<v Speaker 1>I am, like, chomping at the bit to

00:44:28.780 --> 00:44:30.700
<v Speaker 1>get the Grafana plug in my hands on

00:44:30.700 --> 00:44:32.780
<v Speaker 1>the Grafana plug in. I'm gonna go poke

00:44:32.780 --> 00:44:34.780
<v Speaker 1>around in the and see if I can

00:44:34.780 --> 00:44:36.140
<v Speaker 1>actually grab it from

00:44:38.140 --> 00:44:39.339
<v Speaker 1>GitHub and and

00:44:39.835 --> 00:44:42.555
<v Speaker 1>build the the buggy version that's barely working

00:44:42.555 --> 00:44:44.155
<v Speaker 1>myself and make it work.

00:44:44.475 --> 00:44:45.275
<v Speaker 0>Alright.

00:44:45.835 --> 00:44:46.555
<v Speaker 0>Well,

00:44:46.715 --> 00:44:48.315
<v Speaker 0>thank you for joining me. I look forward

00:44:48.315 --> 00:44:51.115
<v Speaker 0>to our Grafana session, and enjoy your weekend.

00:44:51.115 --> 00:44:52.315
<v Speaker 0>I'll speak to you. I'll speak to again.

00:44:52.315 --> 00:44:54.330
<v Speaker 1>You too. It's great seeing you again. You

00:44:54.330 --> 00:44:55.210
<v Speaker 0>too, David. Bye. Bye.
