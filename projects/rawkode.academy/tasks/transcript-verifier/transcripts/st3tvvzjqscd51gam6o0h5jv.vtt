WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 2b80589d-f068-4371-b069-0c7e803825d6
Created: 2025-04-29T13:35:39.549Z
Duration: 2470.3079
Channels: 1

00:00:00.320 --> 00:00:03.040
<v Speaker 0>Okay. So welcome to the show, Rachel. Thank

00:00:03.040 --> 00:00:04.960
<v Speaker 0>you for dedicating some of your time to

00:00:04.960 --> 00:00:06.960
<v Speaker 0>sit down and have a conversation with me.

00:00:07.040 --> 00:00:08.960
<v Speaker 0>For the people listening at home, could you

00:00:08.960 --> 00:00:10.480
<v Speaker 0>tell us a little bit about you?

00:00:10.960 --> 00:00:11.599
<v Speaker 1>Sure.

00:00:12.160 --> 00:00:14.225
<v Speaker 1>So, yeah, my name is Rachel Sweeney.

00:00:14.545 --> 00:00:17.105
<v Speaker 1>I currently work at Book Technology. I've been

00:00:17.105 --> 00:00:19.265
<v Speaker 1>in the Kubernetes space for a number of

00:00:19.265 --> 00:00:20.625
<v Speaker 1>years now. And,

00:00:21.505 --> 00:00:23.665
<v Speaker 1>yeah, I live in the Maryland, Washington DC

00:00:23.665 --> 00:00:26.545
<v Speaker 1>area. Happy to, you know, dive into how

00:00:26.545 --> 00:00:29.080
<v Speaker 1>I got where I am today, but live

00:00:29.080 --> 00:00:30.360
<v Speaker 1>here with my wife.

00:00:31.000 --> 00:00:32.520
<v Speaker 1>Live on a boat about four months a

00:00:32.520 --> 00:00:34.840
<v Speaker 1>year. I like having an eclectic lifestyle.

00:00:34.840 --> 00:00:36.360
<v Speaker 1>So, yeah, I have a lot of varied

00:00:36.360 --> 00:00:37.080
<v Speaker 1>interests.

00:00:37.960 --> 00:00:39.239
<v Speaker 0>I mean, I could sit and talk about

00:00:39.239 --> 00:00:41.125
<v Speaker 0>living on a boat for four months of

00:00:41.125 --> 00:00:42.565
<v Speaker 0>the year for the next couple of hours,

00:00:42.565 --> 00:00:44.805
<v Speaker 0>but maybe that's a session for another day.

00:00:45.364 --> 00:00:47.684
<v Speaker 0>You said you've been in the cloud native

00:00:47.684 --> 00:00:49.925
<v Speaker 0>Kubernetes space for a number of years now.

00:00:49.925 --> 00:00:52.324
<v Speaker 0>What what led you to to where we

00:00:52.324 --> 00:00:54.910
<v Speaker 0>are today with this terrible mess of Kubernetes?

00:00:54.910 --> 00:00:57.550
<v Speaker 0>Like, what's your experience when why were you

00:00:57.550 --> 00:00:59.230
<v Speaker 0>unfortunate enough to end up in the Kubernetes

00:00:59.230 --> 00:01:00.910
<v Speaker 0>space? I always looked down on the Kubernetes

00:01:00.910 --> 00:01:02.350
<v Speaker 0>space, and I've I've had so much fun

00:01:02.350 --> 00:01:03.950
<v Speaker 0>in it. You know? It's it's tough. Right?

00:01:03.950 --> 00:01:05.870
<v Speaker 0>So I wanna know what made you the

00:01:05.870 --> 00:01:07.310
<v Speaker 0>engineer you are today and how you ended

00:01:07.310 --> 00:01:09.465
<v Speaker 0>up here. Yeah. It's a great question. So

00:01:09.465 --> 00:01:10.105
<v Speaker 1>I

00:01:10.505 --> 00:01:12.665
<v Speaker 1>did not have, I guess, like, a traditional

00:01:12.665 --> 00:01:13.865
<v Speaker 1>IT background.

00:01:13.865 --> 00:01:16.505
<v Speaker 1>I got a degree in Chinese history.

00:01:16.745 --> 00:01:18.825
<v Speaker 1>I worked as an executive assistant for a

00:01:18.825 --> 00:01:20.265
<v Speaker 1>number of years, and I spent a lot

00:01:20.265 --> 00:01:22.840
<v Speaker 1>of time, like, liaisoning with our board of

00:01:22.840 --> 00:01:25.479
<v Speaker 1>directors and kind of learning how, you know,

00:01:25.560 --> 00:01:27.799
<v Speaker 1>companies work, how you get value, and stuff

00:01:27.799 --> 00:01:30.280
<v Speaker 1>like that. And I'd always been big into

00:01:30.280 --> 00:01:32.440
<v Speaker 1>computers since I was probably three or four.

00:01:32.440 --> 00:01:34.200
<v Speaker 1>You know, I started programming when I was,

00:01:34.825 --> 00:01:37.385
<v Speaker 1>don't know, 12 or 13 and taking apart

00:01:37.385 --> 00:01:39.785
<v Speaker 1>and rebuilding computers and doing all that, like

00:01:39.785 --> 00:01:42.025
<v Speaker 1>trying to install Linux. And I knew that

00:01:42.025 --> 00:01:45.145
<v Speaker 1>I wanted to get into tech space professionally.

00:01:45.145 --> 00:01:47.385
<v Speaker 1>And as soon as I discovered the whole

00:01:47.385 --> 00:01:51.509
<v Speaker 1>DevOps philosophy and movement, it just immediately clicked.

00:01:51.509 --> 00:01:53.590
<v Speaker 1>I was like, there's so much value in

00:01:53.590 --> 00:01:55.429
<v Speaker 1>this, and it's just, you know, how do

00:01:55.429 --> 00:01:57.829
<v Speaker 1>we make things more efficient and just, like,

00:01:57.829 --> 00:01:59.509
<v Speaker 1>string together pipelines,

00:01:59.509 --> 00:02:01.750
<v Speaker 1>you know, orchestrate containers, and all that good

00:02:01.750 --> 00:02:01.909
<v Speaker 1>stuff.

00:02:02.575 --> 00:02:05.375
<v Speaker 1>And I very quickly went down that rabbit

00:02:05.375 --> 00:02:07.455
<v Speaker 1>hole of just, like, how do you use

00:02:07.455 --> 00:02:10.415
<v Speaker 1>things like Docker or Ansible and Chef and

00:02:10.415 --> 00:02:13.295
<v Speaker 1>got into Kubernetes and CICD pipelines.

00:02:14.175 --> 00:02:16.255
<v Speaker 1>And I was, fortunate to get a job

00:02:16.255 --> 00:02:18.380
<v Speaker 1>working at the Pew Research Center.

00:02:18.780 --> 00:02:21.660
<v Speaker 1>And when I was there, I was, essentially

00:02:21.660 --> 00:02:24.460
<v Speaker 1>the only DevOps engineer type person. We had

00:02:24.460 --> 00:02:27.100
<v Speaker 1>a data science engineer that did a lot

00:02:27.100 --> 00:02:29.020
<v Speaker 1>of, you know, stuff you would expect with

00:02:29.020 --> 00:02:30.060
<v Speaker 1>data science engineering.

00:02:30.425 --> 00:02:31.945
<v Speaker 1>And there was a lot of overlap with

00:02:31.945 --> 00:02:34.505
<v Speaker 1>his role into DevOps. And we knew that

00:02:34.505 --> 00:02:36.745
<v Speaker 1>we wanted to migrate to Kubernetes because we

00:02:36.745 --> 00:02:39.705
<v Speaker 1>were having some, I guess, scalability issues with

00:02:39.705 --> 00:02:41.305
<v Speaker 1>data collection. So

00:02:41.545 --> 00:02:43.320
<v Speaker 1>I, you know, took on the work of

00:02:43.320 --> 00:02:45.320
<v Speaker 1>figuring out, like, how do we deploy Kubernetes?

00:02:45.320 --> 00:02:47.240
<v Speaker 1>How do we migrate workloads over to it

00:02:47.240 --> 00:02:48.520
<v Speaker 1>and all that good stuff?

00:02:49.000 --> 00:02:50.760
<v Speaker 1>And after doing that for a couple of

00:02:50.760 --> 00:02:53.640
<v Speaker 1>years, I ended up going to Fairwinds,

00:02:53.640 --> 00:02:55.595
<v Speaker 1>which is a Kubernetes

00:02:55.595 --> 00:02:56.395
<v Speaker 1>centric

00:02:56.395 --> 00:02:57.115
<v Speaker 1>company.

00:02:57.355 --> 00:02:59.995
<v Speaker 1>You know, part of Fairwinds is focused on

00:02:59.995 --> 00:03:03.435
<v Speaker 1>consulting and standing up clusters for clients who

00:03:03.435 --> 00:03:04.955
<v Speaker 1>are new into that space,

00:03:05.355 --> 00:03:07.515
<v Speaker 1>and that's initially where I started as an

00:03:07.515 --> 00:03:08.075
<v Speaker 1>SRE.

00:03:09.020 --> 00:03:10.700
<v Speaker 1>And from there, it was, like, you know,

00:03:10.700 --> 00:03:13.099
<v Speaker 1>helping stand up clusters, making sure they're working

00:03:13.099 --> 00:03:15.340
<v Speaker 1>well, and how they should be handling a

00:03:15.340 --> 00:03:17.739
<v Speaker 1>lot of, like, ad hoc requests. Like, how

00:03:17.739 --> 00:03:19.900
<v Speaker 1>do I make sure I can, like, track

00:03:19.900 --> 00:03:22.060
<v Speaker 1>a client source IP all the way through

00:03:22.060 --> 00:03:23.180
<v Speaker 1>to my application

00:03:23.340 --> 00:03:25.275
<v Speaker 1>so it doesn't get lost in network address

00:03:25.275 --> 00:03:26.155
<v Speaker 1>translation,

00:03:26.235 --> 00:03:27.115
<v Speaker 1>stuff like that.

00:03:27.515 --> 00:03:28.955
<v Speaker 1>And, eventually, ended up on the,

00:03:29.595 --> 00:03:31.355
<v Speaker 1>the software as a service side of things

00:03:31.355 --> 00:03:33.754
<v Speaker 1>as a tech lead where I was, you

00:03:33.754 --> 00:03:36.635
<v Speaker 1>know, working to help out with our SaaS

00:03:36.635 --> 00:03:38.920
<v Speaker 1>product to get best practices in place for

00:03:38.920 --> 00:03:40.120
<v Speaker 1>a lot of our clients.

00:03:40.599 --> 00:03:42.680
<v Speaker 1>So, you know, we had a platform that

00:03:42.680 --> 00:03:46.040
<v Speaker 1>would surface up a lot of different information

00:03:46.040 --> 00:03:48.519
<v Speaker 1>in your clusters, whether it's, like, security or

00:03:48.519 --> 00:03:50.440
<v Speaker 1>best practices or costs.

00:03:50.519 --> 00:03:51.720
<v Speaker 1>And so a lot of that was, like,

00:03:51.985 --> 00:03:55.025
<v Speaker 1>helping clients install Falco in their clusters so

00:03:55.025 --> 00:03:57.185
<v Speaker 1>that they could get all that information

00:03:57.265 --> 00:03:59.425
<v Speaker 1>surfaced in one area or, like, how do

00:03:59.425 --> 00:04:02.065
<v Speaker 1>you right size workloads and all these different

00:04:02.065 --> 00:04:02.625
<v Speaker 1>things.

00:04:03.425 --> 00:04:05.185
<v Speaker 1>And then finally, you know, I'm I'm now

00:04:05.185 --> 00:04:07.769
<v Speaker 1>at Built Technologies as the tech lead to

00:04:07.769 --> 00:04:08.490
<v Speaker 1>migrate,

00:04:08.810 --> 00:04:10.970
<v Speaker 1>our stack over to Kubernetes

00:04:11.049 --> 00:04:13.050
<v Speaker 1>for a lot of various different reasons.

00:04:13.290 --> 00:04:14.569
<v Speaker 1>And so, yeah, that's kind of been the

00:04:14.569 --> 00:04:16.490
<v Speaker 1>journey that's gotten me there, and it's just,

00:04:17.289 --> 00:04:19.209
<v Speaker 1>really just following a lot of interest as

00:04:19.209 --> 00:04:21.370
<v Speaker 1>I dive deep into the Kubernetes rabbit hole

00:04:21.370 --> 00:04:23.335
<v Speaker 1>and, know, realize all the friction along the

00:04:23.335 --> 00:04:25.014
<v Speaker 1>way or the things that are the gotchas

00:04:25.014 --> 00:04:26.694
<v Speaker 1>that you need to know about. And, yeah,

00:04:26.694 --> 00:04:27.975
<v Speaker 1>it's been quite the journey.

00:04:29.175 --> 00:04:31.655
<v Speaker 0>Awesome. Thank you for sharing. It's funny because

00:04:31.655 --> 00:04:33.335
<v Speaker 0>as you were talking about all that, there

00:04:33.335 --> 00:04:35.094
<v Speaker 0>was a meme that popped up on Twitter

00:04:35.094 --> 00:04:36.535
<v Speaker 0>just this week that kinda

00:04:36.800 --> 00:04:38.560
<v Speaker 0>it it feels really familiar to the story

00:04:38.560 --> 00:04:41.040
<v Speaker 0>you're sharing. And it's the meme of, let's

00:04:41.040 --> 00:04:43.520
<v Speaker 0>adopt Kubernetes and there's a little logo. And

00:04:43.520 --> 00:04:45.280
<v Speaker 0>then the next bit of it is, like,

00:04:45.280 --> 00:04:46.640
<v Speaker 0>and here's all the stuff you need after

00:04:46.640 --> 00:04:47.840
<v Speaker 0>it. And there's, like, the Helm logo, the

00:04:47.840 --> 00:04:49.840
<v Speaker 0>Argo logo, the Flux logo, the Falco logo,

00:04:49.840 --> 00:04:52.474
<v Speaker 0>the PEXI logo. Like, just this this sort

00:04:52.474 --> 00:04:54.155
<v Speaker 0>of tools that we have in the cloud

00:04:54.155 --> 00:04:57.354
<v Speaker 0>native landscape because, unfortunately, just doing cube admin

00:04:57.354 --> 00:04:59.754
<v Speaker 0>in it is, like, step one of many,

00:04:59.754 --> 00:05:01.835
<v Speaker 0>many steps that you need to successfully run

00:05:01.835 --> 00:05:04.474
<v Speaker 0>and operate a Kubernetes cluster. Quite a pickle,

00:05:04.474 --> 00:05:06.620
<v Speaker 0>I think, we're in these days. So if

00:05:06.620 --> 00:05:08.380
<v Speaker 0>you could tell me about the challenges you've

00:05:08.380 --> 00:05:11.580
<v Speaker 0>seen with people adopting Kubernetes. Yeah. So some

00:05:11.580 --> 00:05:13.740
<v Speaker 1>of the challenges that come up with adopting

00:05:13.740 --> 00:05:16.060
<v Speaker 1>Kubernetes are, you know, there are a lot

00:05:16.060 --> 00:05:18.620
<v Speaker 1>of unknown unknowns, I guess, if you're not

00:05:18.620 --> 00:05:21.355
<v Speaker 1>in the Kubernetes space. And, you know, some

00:05:21.355 --> 00:05:23.835
<v Speaker 1>good examples of that are things like you

00:05:23.835 --> 00:05:25.195
<v Speaker 1>know, I could list off a a lot

00:05:25.195 --> 00:05:26.875
<v Speaker 1>of different phrases that you might not be

00:05:26.875 --> 00:05:28.955
<v Speaker 1>aware of if you haven't been in Kubernetes,

00:05:28.955 --> 00:05:31.995
<v Speaker 1>but, like, how are your pod topology constraints

00:05:31.995 --> 00:05:32.875
<v Speaker 1>configured?

00:05:32.955 --> 00:05:34.555
<v Speaker 1>And if you've never heard that before, you're

00:05:34.555 --> 00:05:36.475
<v Speaker 1>just like, what on earth is that? And,

00:05:36.770 --> 00:05:38.530
<v Speaker 1>you know, it's something that you can configure

00:05:38.530 --> 00:05:39.330
<v Speaker 1>behavior

00:05:39.330 --> 00:05:39.970
<v Speaker 1>to

00:05:40.210 --> 00:05:42.370
<v Speaker 1>make sure that your your workloads have as

00:05:42.370 --> 00:05:44.690
<v Speaker 1>much uptime as possible to be more resilient

00:05:44.690 --> 00:05:46.850
<v Speaker 1>in case, you know, certain sections of infrastructure

00:05:46.850 --> 00:05:47.730
<v Speaker 1>go down.

00:05:48.130 --> 00:05:49.795
<v Speaker 1>There's also things like, you know, what are

00:05:49.795 --> 00:05:51.315
<v Speaker 1>your image pull policies,

00:05:51.315 --> 00:05:52.835
<v Speaker 1>your network policies.

00:05:53.155 --> 00:05:55.315
<v Speaker 1>You know, going from Docker to Kubernetes,

00:05:55.635 --> 00:05:58.995
<v Speaker 1>it's actually less restrictive in terms of syscalls,

00:05:58.995 --> 00:06:01.075
<v Speaker 1>whereas I think Docker want blocks something like

00:06:01.280 --> 00:06:04.240
<v Speaker 1>a 28 syscalls and Kubernetes is probably in,

00:06:04.240 --> 00:06:06.640
<v Speaker 1>the sixties or so. And so if you're

00:06:06.640 --> 00:06:08.000
<v Speaker 1>making that migration,

00:06:08.160 --> 00:06:09.840
<v Speaker 1>are you aware of that? Do you know

00:06:09.840 --> 00:06:12.080
<v Speaker 1>that maybe you should be locking down some

00:06:12.080 --> 00:06:14.160
<v Speaker 1>more of these? And if so, why? And

00:06:14.160 --> 00:06:15.855
<v Speaker 1>just, you know, needing to know all of

00:06:15.855 --> 00:06:17.775
<v Speaker 1>those as you configure the behavior for the

00:06:17.775 --> 00:06:18.495
<v Speaker 1>platform.

00:06:19.295 --> 00:06:20.735
<v Speaker 1>And there's, you know, plenty of other things

00:06:20.735 --> 00:06:23.695
<v Speaker 1>like pod disruption budgets. And so I think

00:06:23.695 --> 00:06:26.975
<v Speaker 1>all of those things are the, like, steep

00:06:26.975 --> 00:06:30.010
<v Speaker 1>learning curve of Kubernetes where it is a

00:06:30.010 --> 00:06:32.810
<v Speaker 1>platform that will do exactly as you tell

00:06:32.810 --> 00:06:34.650
<v Speaker 1>it to. It will behave as you configure

00:06:34.650 --> 00:06:36.729
<v Speaker 1>it to, but you have to know how

00:06:36.729 --> 00:06:39.690
<v Speaker 1>to configure it. And so that knowledge gap

00:06:39.690 --> 00:06:41.690
<v Speaker 1>is often something that a lot of companies

00:06:41.690 --> 00:06:42.250
<v Speaker 1>struggle with.

00:06:43.205 --> 00:06:45.285
<v Speaker 1>I think there there used to be something

00:06:45.285 --> 00:06:46.725
<v Speaker 1>more of, like, you know, should I do

00:06:46.725 --> 00:06:48.645
<v Speaker 1>self hosted or managed? But I think for

00:06:48.645 --> 00:06:50.005
<v Speaker 1>most people in the cloud,

00:06:50.165 --> 00:06:52.085
<v Speaker 1>managed is a, you know, a way that

00:06:52.085 --> 00:06:53.525
<v Speaker 1>a lot of people go since it has

00:06:53.525 --> 00:06:55.540
<v Speaker 1>matured a lot, and there are reasons for

00:06:55.540 --> 00:06:56.980
<v Speaker 1>self hosted. But

00:06:57.940 --> 00:07:00.020
<v Speaker 1>and then, yeah, just going back to that

00:07:00.020 --> 00:07:03.060
<v Speaker 1>skill set piece where your developers now are

00:07:03.060 --> 00:07:05.380
<v Speaker 1>deploying to this platform, and do they know

00:07:05.380 --> 00:07:06.660
<v Speaker 1>how to configure

00:07:07.060 --> 00:07:08.980
<v Speaker 1>things if that's something that they're working in?

00:07:08.980 --> 00:07:11.164
<v Speaker 1>And, like, how much awareness do they have

00:07:11.164 --> 00:07:12.205
<v Speaker 1>for Kubernetes?

00:07:12.205 --> 00:07:14.044
<v Speaker 1>You know, I know at at Built, we

00:07:14.044 --> 00:07:16.925
<v Speaker 1>have a lot of, education material available for

00:07:16.925 --> 00:07:17.805
<v Speaker 1>developers.

00:07:17.805 --> 00:07:20.444
<v Speaker 1>So as we make this migration to Kubernetes,

00:07:20.444 --> 00:07:23.085
<v Speaker 1>they're going through initially, you know, courses on

00:07:23.085 --> 00:07:25.860
<v Speaker 1>Pluralsight, now in Udemy, and, a lot of

00:07:25.860 --> 00:07:27.700
<v Speaker 1>great YouTube videos that you put out and

00:07:27.700 --> 00:07:29.300
<v Speaker 1>just kind of, like, learning all these pieces

00:07:29.300 --> 00:07:30.580
<v Speaker 1>and what they need to be aware of

00:07:30.580 --> 00:07:31.700
<v Speaker 1>and going from there.

00:07:32.020 --> 00:07:33.060
<v Speaker 1>So I think those are a lot of

00:07:33.060 --> 00:07:34.260
<v Speaker 1>concerns that

00:07:34.660 --> 00:07:36.420
<v Speaker 1>you should be aware of going into it

00:07:36.420 --> 00:07:39.620
<v Speaker 1>and prepared to answer. Yeah. It sounds like

00:07:39.315 --> 00:07:40.915
<v Speaker 0>there are two key things there I picked

00:07:40.915 --> 00:07:42.195
<v Speaker 0>up on. It's it's one of them. It's

00:07:42.195 --> 00:07:44.755
<v Speaker 0>like almost everything in Kubernetes is some sort

00:07:44.755 --> 00:07:46.915
<v Speaker 0>of toggle or a bit of configuration.

00:07:46.915 --> 00:07:48.435
<v Speaker 0>You know, like you said, down to the

00:07:48.755 --> 00:07:51.315
<v Speaker 0>topology spread constraints. You've got disruption budgets. You've

00:07:51.315 --> 00:07:53.395
<v Speaker 0>got limit ranges. You've got quotas. You've got

00:07:53.475 --> 00:07:55.360
<v Speaker 0>do you wanna do seccomp filtering?

00:07:55.840 --> 00:07:59.360
<v Speaker 0>Endless, endless, endless, YAML, endless, endless, endless options.

00:07:59.360 --> 00:08:01.919
<v Speaker 0>And unless you have seen some stuff before,

00:08:02.639 --> 00:08:04.479
<v Speaker 0>I don't know. Like, do you even know

00:08:04.479 --> 00:08:05.759
<v Speaker 0>what half of these options are? Like you

00:08:05.759 --> 00:08:08.205
<v Speaker 0>said, the unknown unknowns. Like, if if I

00:08:08.205 --> 00:08:09.965
<v Speaker 0>had never had to configure these things before,

00:08:09.965 --> 00:08:11.564
<v Speaker 0>then they're just out of sight of mind

00:08:11.564 --> 00:08:13.004
<v Speaker 0>as well even though they exist. So that

00:08:13.085 --> 00:08:15.724
<v Speaker 0>again, that's maybe part education problem, but then

00:08:15.724 --> 00:08:17.884
<v Speaker 0>part you don't know these things until you

00:08:17.884 --> 00:08:19.724
<v Speaker 0>need to know them as well. Right? Like,

00:08:19.990 --> 00:08:21.509
<v Speaker 0>top of the head question here, you can

00:08:21.509 --> 00:08:23.110
<v Speaker 0>just say yes or no. But can people

00:08:23.110 --> 00:08:25.909
<v Speaker 0>be successful with Kubernetes by just having a

00:08:25.909 --> 00:08:28.069
<v Speaker 0>12 line deployment dot YAML with their image

00:08:28.069 --> 00:08:29.909
<v Speaker 0>in it? Like, how far is that gonna

00:08:29.909 --> 00:08:31.349
<v Speaker 0>get them and how deep do you need

00:08:31.349 --> 00:08:32.789
<v Speaker 0>to go to then? I guess it's a

00:08:32.789 --> 00:08:34.230
<v Speaker 0>scaling problem. I don't know.

00:08:35.395 --> 00:08:36.674
<v Speaker 1>Yeah. I think with,

00:08:37.395 --> 00:08:40.515
<v Speaker 1>just about everything in tech is it depends.

00:08:40.674 --> 00:08:42.595
<v Speaker 1>You know? It depends on, like, the complexity

00:08:42.595 --> 00:08:44.595
<v Speaker 1>of what you have and, like, maybe you

00:08:44.595 --> 00:08:46.595
<v Speaker 1>can start off slowly just like if you

00:08:46.595 --> 00:08:48.275
<v Speaker 1>know you want to move to Kubernetes, you

00:08:48.275 --> 00:08:49.875
<v Speaker 1>do just throw one thing up there in

00:08:49.875 --> 00:08:52.330
<v Speaker 1>the cluster and see how that works.

00:08:53.290 --> 00:08:54.889
<v Speaker 1>It it seems like there are a number

00:08:54.889 --> 00:08:57.930
<v Speaker 1>of of strategies for, like, organizations shifting to

00:08:57.930 --> 00:08:58.810
<v Speaker 1>Kubernetes,

00:08:58.810 --> 00:09:00.889
<v Speaker 1>whether you, you know, outsource it to have

00:09:00.889 --> 00:09:02.730
<v Speaker 1>somebody stand up a cluster for you and

00:09:02.730 --> 00:09:04.810
<v Speaker 1>make sure you have that, like, rock solid

00:09:05.045 --> 00:09:05.925
<v Speaker 1>foundation,

00:09:06.085 --> 00:09:08.325
<v Speaker 1>or maybe you hire a consulting company to

00:09:08.325 --> 00:09:10.805
<v Speaker 1>come in and get your knowledge gap, to

00:09:10.805 --> 00:09:13.285
<v Speaker 1>kinda close that so that you can deploy

00:09:13.285 --> 00:09:14.805
<v Speaker 1>things quickly to Kubernetes.

00:09:14.965 --> 00:09:17.125
<v Speaker 1>Or maybe you do just hire engineers that

00:09:17.125 --> 00:09:18.565
<v Speaker 1>already have those skill sets.

00:09:19.070 --> 00:09:20.910
<v Speaker 1>And so I think, you know, depending on

00:09:20.910 --> 00:09:22.910
<v Speaker 1>the scale of what you're doing and,

00:09:24.350 --> 00:09:26.510
<v Speaker 1>what you're trying to accomplish with Kubernetes, you

00:09:26.510 --> 00:09:28.910
<v Speaker 1>know, it really just depends. And, honestly, if

00:09:28.910 --> 00:09:30.270
<v Speaker 1>you if you don't have a ton of

00:09:30.270 --> 00:09:31.470
<v Speaker 1>scale or you don't have a lot of

00:09:31.470 --> 00:09:33.310
<v Speaker 1>complexity in your applications,

00:09:33.310 --> 00:09:35.755
<v Speaker 1>then, you know, maybe consider why are you

00:09:35.755 --> 00:09:38.154
<v Speaker 1>thinking about Kubernetes in the first place. Because,

00:09:38.315 --> 00:09:40.235
<v Speaker 1>like you said, there are so many toggles,

00:09:40.235 --> 00:09:42.074
<v Speaker 1>and it's kind of like, if you have

00:09:42.074 --> 00:09:43.675
<v Speaker 1>a startup and you have a very simple

00:09:43.675 --> 00:09:45.915
<v Speaker 1>use case, you're not just gonna, like, hop

00:09:45.915 --> 00:09:47.195
<v Speaker 1>in a fighter jet and, you know,

00:09:47.970 --> 00:09:50.529
<v Speaker 1>toggle every single switch when, like, a simple

00:09:50.529 --> 00:09:52.129
<v Speaker 1>plane would work to get you to your

00:09:52.129 --> 00:09:52.930
<v Speaker 1>destination.

00:09:53.649 --> 00:09:55.970
<v Speaker 1>Hopefully, that analogy made sense. But, yeah, like,

00:09:55.970 --> 00:09:57.170
<v Speaker 1>maybe you get to the point where you

00:09:57.170 --> 00:10:00.129
<v Speaker 1>need all the toggles, but initially, probably not.

00:10:00.705 --> 00:10:03.025
<v Speaker 0>Yeah. I mean, I think you're 100 right,

00:10:03.025 --> 00:10:04.545
<v Speaker 0>and the analogy is great. You know, I

00:10:04.545 --> 00:10:05.985
<v Speaker 0>take it a step further. Like, you know,

00:10:05.985 --> 00:10:07.745
<v Speaker 0>if people need to travel 60 miles down

00:10:07.745 --> 00:10:09.505
<v Speaker 0>the road, go on a train, not even

00:10:09.505 --> 00:10:11.025
<v Speaker 0>a plane before you jump on a fighter

00:10:11.025 --> 00:10:13.265
<v Speaker 0>jet. Like, the Cloud Run and Lambda can

00:10:13.265 --> 00:10:15.070
<v Speaker 0>get you substantial amount of the way depending

00:10:15.070 --> 00:10:17.070
<v Speaker 0>on the complexity of your application. But, yeah,

00:10:17.070 --> 00:10:19.150
<v Speaker 0>you're right. Like, it's it's definitely a a

00:10:19.150 --> 00:10:21.630
<v Speaker 0>fun problem. And I'm gonna kinda just talk

00:10:21.630 --> 00:10:24.350
<v Speaker 0>about clustered for ten seconds here because

00:10:24.670 --> 00:10:26.590
<v Speaker 0>what I thought was interesting is you said,

00:10:26.975 --> 00:10:28.575
<v Speaker 0>I said you could have 12 lines of

00:10:28.575 --> 00:10:29.855
<v Speaker 0>YAML. You said that could get you so

00:10:29.855 --> 00:10:30.975
<v Speaker 0>far. And I think we're both on the

00:10:30.975 --> 00:10:32.495
<v Speaker 0>same page there. And then you mentioned that

00:10:32.495 --> 00:10:34.255
<v Speaker 0>you could bring an external help, right, like

00:10:34.255 --> 00:10:36.415
<v Speaker 0>a company to help you with that migration

00:10:36.415 --> 00:10:37.295
<v Speaker 0>to Kubernetes.

00:10:37.535 --> 00:10:38.735
<v Speaker 0>And I was thinking in my head, if

00:10:38.735 --> 00:10:41.215
<v Speaker 0>you give a company that hasn't seen Kubernetes

00:10:41.215 --> 00:10:41.855
<v Speaker 0>before

00:10:42.170 --> 00:10:45.610
<v Speaker 0>a 300 line deployment YAML. And let's assume

00:10:45.610 --> 00:10:47.530
<v Speaker 0>as an example here. Right? There's a pre

00:10:47.530 --> 00:10:49.610
<v Speaker 0>stop hook that does a sleep for thirty

00:10:49.610 --> 00:10:51.610
<v Speaker 0>seconds. Now if you know what that's there

00:10:51.610 --> 00:10:54.650
<v Speaker 0>for, great. Right? But if you don't, it's

00:10:54.504 --> 00:10:56.024
<v Speaker 0>probably the first thing you're going to delete

00:10:56.024 --> 00:10:57.625
<v Speaker 0>and say, well, that's the purpose. Like, I

00:10:57.625 --> 00:10:58.824
<v Speaker 0>don't need why am I doing this sleep

00:10:58.824 --> 00:11:00.584
<v Speaker 0>for thirty seconds? That's ridiculous. Let's move it

00:11:00.584 --> 00:11:02.584
<v Speaker 0>out. But if people have seen clustered before,

00:11:02.584 --> 00:11:05.305
<v Speaker 0>they know that pods actually don't really handle

00:11:05.305 --> 00:11:07.064
<v Speaker 0>failure that well and the pre stop can

00:11:07.064 --> 00:11:08.665
<v Speaker 0>actually give you enough time for NGINX to

00:11:08.665 --> 00:11:10.610
<v Speaker 0>handle the connections that are currently in flight

00:11:10.610 --> 00:11:12.210
<v Speaker 0>before they get moved through. All these edge

00:11:12.210 --> 00:11:13.970
<v Speaker 0>cases. Right? Which is why I say clustered

00:11:13.970 --> 00:11:15.410
<v Speaker 0>is a great show. People should definitely go

00:11:15.410 --> 00:11:17.490
<v Speaker 0>check it out. But I don't know these

00:11:17.490 --> 00:11:20.290
<v Speaker 0>things from operating Kubernetes clusters and production. I

00:11:20.290 --> 00:11:22.210
<v Speaker 0>know these things from clustered as well. And

00:11:22.210 --> 00:11:23.090
<v Speaker 0>I think that's

00:11:23.345 --> 00:11:25.585
<v Speaker 0>a really cool way for people to learn.

00:11:25.585 --> 00:11:27.105
<v Speaker 0>Yeah. I'm gonna plug myself. I hope that's

00:11:27.105 --> 00:11:28.625
<v Speaker 0>allowed within the first five minutes of the

00:11:28.625 --> 00:11:30.545
<v Speaker 0>show. Yeah. I I mean, having been on

00:11:30.545 --> 00:11:33.905
<v Speaker 1>clustered, thoroughly enjoyed it, like, wonderful learning opportunity

00:11:33.905 --> 00:11:36.305
<v Speaker 1>and certainly watched a time just to, you

00:11:36.305 --> 00:11:38.545
<v Speaker 1>know, level up my own Kubernetes knowledge because

00:11:38.750 --> 00:11:41.149
<v Speaker 1>so many guests just have such creative ways

00:11:41.149 --> 00:11:43.389
<v Speaker 1>of bringing the clusters to their knees and,

00:11:43.389 --> 00:11:45.470
<v Speaker 1>like, could happen to you accidentally.

00:11:45.470 --> 00:11:47.149
<v Speaker 1>You know, you hopefully won't have somebody in

00:11:47.149 --> 00:11:50.029
<v Speaker 1>your cluster just, like, you know, toggling everything,

00:11:50.029 --> 00:11:52.190
<v Speaker 1>you know, in a a negative way, but

00:11:52.430 --> 00:11:53.390
<v Speaker 1>good to know.

00:11:54.029 --> 00:11:57.685
<v Speaker 0>Alright. So you've mentioned migrations a few times,

00:11:57.685 --> 00:11:59.045
<v Speaker 0>and that's a part of your new role

00:11:59.045 --> 00:12:01.205
<v Speaker 0>where you're working at Bell. So what I

00:12:01.285 --> 00:12:02.965
<v Speaker 0>I'd love to dive into is just

00:12:03.365 --> 00:12:05.125
<v Speaker 0>if you're happy to share information on what

00:12:05.125 --> 00:12:07.205
<v Speaker 0>the current landscape is and what your path

00:12:07.205 --> 00:12:09.445
<v Speaker 0>migrating to Kubernetes looks like, then, hopefully, we

00:12:09.445 --> 00:12:10.885
<v Speaker 0>can dive into that in a bit more

00:12:10.620 --> 00:12:12.860
<v Speaker 0>detail too. Sure. Absolutely.

00:12:13.900 --> 00:12:15.420
<v Speaker 1>So, yeah, it's funny when I when I

00:12:15.420 --> 00:12:17.660
<v Speaker 1>first interviewed at Bilt, one of the questions

00:12:17.660 --> 00:12:20.060
<v Speaker 1>I actually asked our one of our directors

00:12:20.060 --> 00:12:22.620
<v Speaker 1>was like, you know, why Kubernetes? Like, it

00:12:22.620 --> 00:12:24.220
<v Speaker 1>is so hard. Why do you actually wanna

00:12:24.220 --> 00:12:26.745
<v Speaker 1>migrate to Kubernetes? And, you know, a lot

00:12:26.745 --> 00:12:29.305
<v Speaker 1>of people will migrate for scalability issues and

00:12:29.305 --> 00:12:30.505
<v Speaker 1>stuff like that. But,

00:12:31.305 --> 00:12:33.625
<v Speaker 1>one of the the big reasons for us

00:12:33.625 --> 00:12:36.905
<v Speaker 1>moving to Kubernetes is that we started off

00:12:36.905 --> 00:12:39.945
<v Speaker 1>with a monolithic application as many companies do,

00:12:40.290 --> 00:12:43.009
<v Speaker 1>and it just, you know, became fairly complex.

00:12:43.009 --> 00:12:45.089
<v Speaker 1>And we started to break it down into

00:12:45.089 --> 00:12:46.130
<v Speaker 1>microservices.

00:12:46.209 --> 00:12:48.690
<v Speaker 1>And now all of those microservices,

00:12:48.690 --> 00:12:50.850
<v Speaker 1>they have their own dependencies in terms of

00:12:50.850 --> 00:12:52.050
<v Speaker 1>other microservices.

00:12:52.610 --> 00:12:55.250
<v Speaker 1>Each microservice has its dependency in terms of,

00:12:55.250 --> 00:12:57.295
<v Speaker 1>like, maybe they need a queue in the

00:12:57.295 --> 00:12:59.535
<v Speaker 1>cloud, maybe they need, like, a Kinesis stream

00:12:59.535 --> 00:13:01.695
<v Speaker 1>or a Kafka cluster or something.

00:13:02.095 --> 00:13:04.095
<v Speaker 1>And so with all of these

00:13:04.975 --> 00:13:07.455
<v Speaker 1>microservices being broken down and having all their

00:13:07.455 --> 00:13:08.815
<v Speaker 1>their dependencies,

00:13:09.170 --> 00:13:11.410
<v Speaker 1>there's a a certain amount of complexity that

00:13:11.410 --> 00:13:13.570
<v Speaker 1>has grown in, I guess, the the way

00:13:13.570 --> 00:13:16.130
<v Speaker 1>of simplifying. You know, simplifying things makes them

00:13:16.130 --> 00:13:18.050
<v Speaker 1>more complex, but more bite sized in a

00:13:18.050 --> 00:13:18.530
<v Speaker 1>way.

00:13:19.330 --> 00:13:22.450
<v Speaker 1>And so we ended up with custom internal

00:13:22.450 --> 00:13:23.810
<v Speaker 1>Python tooling

00:13:23.985 --> 00:13:25.985
<v Speaker 1>to manage these complexities.

00:13:26.305 --> 00:13:28.385
<v Speaker 1>And so we you know, for example, we

00:13:28.385 --> 00:13:32.065
<v Speaker 1>have one custom internal Python application that takes

00:13:32.065 --> 00:13:35.345
<v Speaker 1>care of deploying a stack of infrastructure to

00:13:35.345 --> 00:13:36.225
<v Speaker 1>a different environment,

00:13:36.639 --> 00:13:38.639
<v Speaker 1>whether it's like a staging environment,

00:13:38.800 --> 00:13:41.519
<v Speaker 1>production environment, or demo, and it takes care

00:13:41.519 --> 00:13:43.680
<v Speaker 1>of, like, all the secrets and config changes

00:13:43.680 --> 00:13:44.959
<v Speaker 1>across environments,

00:13:45.120 --> 00:13:46.800
<v Speaker 1>making sure all these pieces are where they

00:13:46.800 --> 00:13:48.800
<v Speaker 1>need to be, you know, running Terraform. It

00:13:48.800 --> 00:13:51.125
<v Speaker 1>does some Docker building and stuff. And that

00:13:51.125 --> 00:13:51.765
<v Speaker 1>has

00:13:52.085 --> 00:13:54.485
<v Speaker 1>you know, in that situation, it solved some

00:13:54.485 --> 00:13:56.165
<v Speaker 1>of that complexity, but now it's kind of

00:13:56.165 --> 00:13:58.805
<v Speaker 1>all been pushed into a Python app that

00:13:58.805 --> 00:14:01.285
<v Speaker 1>if you are not working at build, you

00:14:01.285 --> 00:14:02.565
<v Speaker 1>don't know how it works, and you kinda

00:14:02.565 --> 00:14:04.270
<v Speaker 1>have to come in and, you know, put

00:14:04.270 --> 00:14:07.070
<v Speaker 1>things into there. And when things grow or

00:14:07.070 --> 00:14:09.390
<v Speaker 1>slowly shape in a different direction, you now

00:14:09.390 --> 00:14:10.990
<v Speaker 1>have to write more code in order to

00:14:10.990 --> 00:14:12.350
<v Speaker 1>be able to support that.

00:14:13.310 --> 00:14:15.310
<v Speaker 1>And then the, I think the thing that

00:14:15.310 --> 00:14:18.505
<v Speaker 1>kind of triggered the Kubernetes migration is the

00:14:18.505 --> 00:14:20.345
<v Speaker 1>complexity of those applications

00:14:20.345 --> 00:14:21.945
<v Speaker 1>got to a point where

00:14:22.105 --> 00:14:24.345
<v Speaker 1>developers were no longer able to do development

00:14:24.345 --> 00:14:25.865
<v Speaker 1>on their local machine.

00:14:26.185 --> 00:14:28.105
<v Speaker 1>And so now if you need, you know,

00:14:28.185 --> 00:14:30.745
<v Speaker 1>n number of microservices, let's just say 10,

00:14:30.745 --> 00:14:32.264
<v Speaker 1>it's like a small stack you're working with,

00:14:32.660 --> 00:14:35.460
<v Speaker 1>They all have all these AWS infrastructure pieces.

00:14:35.780 --> 00:14:37.620
<v Speaker 1>You know, where do you do that development?

00:14:37.700 --> 00:14:40.820
<v Speaker 1>And in our case, we have another internal

00:14:40.820 --> 00:14:44.100
<v Speaker 1>Python tool that stands up a, essentially, a

00:14:44.100 --> 00:14:46.580
<v Speaker 1>virtual machine and, you know, provisions everything you

00:14:46.580 --> 00:14:49.335
<v Speaker 1>need. All of the the Terraform is there,

00:14:49.335 --> 00:14:51.655
<v Speaker 1>and all of your, containers are being run

00:14:51.655 --> 00:14:52.215
<v Speaker 1>there.

00:14:52.535 --> 00:14:55.815
<v Speaker 1>And that Python app has just been,

00:14:56.695 --> 00:14:58.855
<v Speaker 1>I guess, time consuming in terms of the

00:14:58.855 --> 00:15:00.855
<v Speaker 1>number of tickets that it's created for helping

00:15:00.855 --> 00:15:03.670
<v Speaker 1>developers when things start to break or, you

00:15:03.670 --> 00:15:05.590
<v Speaker 1>know, some developers don't use it anymore because

00:15:05.590 --> 00:15:07.750
<v Speaker 1>it's complex and it has its issues. And

00:15:07.750 --> 00:15:08.310
<v Speaker 1>so

00:15:08.630 --> 00:15:10.630
<v Speaker 1>that's something where, you know,

00:15:11.190 --> 00:15:11.670
<v Speaker 1>we're

00:15:12.070 --> 00:15:15.510
<v Speaker 1>this Kubernetes team is helping developers move faster

00:15:15.510 --> 00:15:18.735
<v Speaker 1>since we want them to release features to

00:15:18.735 --> 00:15:21.535
<v Speaker 1>our customers as fast as they possibly can.

00:15:21.935 --> 00:15:24.814
<v Speaker 1>And right now, this developer environment is slowing

00:15:24.814 --> 00:15:26.574
<v Speaker 1>them down, and it's something that we can

00:15:26.574 --> 00:15:27.295
<v Speaker 1>solve.

00:15:27.694 --> 00:15:30.175
<v Speaker 1>And so with migrating to Kubernetes,

00:15:30.175 --> 00:15:32.520
<v Speaker 1>we are able to package up a lot

00:15:32.520 --> 00:15:35.240
<v Speaker 1>of that complexity in things like Helm charts.

00:15:35.320 --> 00:15:37.480
<v Speaker 1>We're also bundling it with cross planes. So

00:15:37.480 --> 00:15:39.960
<v Speaker 1>if a microservice needs, you know, five different

00:15:39.960 --> 00:15:42.040
<v Speaker 1>pieces of infrastructure in AWS,

00:15:42.120 --> 00:15:44.695
<v Speaker 1>it's all packaged in that Helm chart. And

00:15:44.695 --> 00:15:46.135
<v Speaker 1>so now you can,

00:15:46.855 --> 00:15:49.014
<v Speaker 1>kind of just build the collection of Helm

00:15:49.014 --> 00:15:51.095
<v Speaker 1>charts that you need where you can say,

00:15:51.095 --> 00:15:53.735
<v Speaker 1>you know, I need j, k, l, z,

00:15:53.735 --> 00:15:55.894
<v Speaker 1>y, and b. Those are the microservices I

00:15:55.894 --> 00:15:57.975
<v Speaker 1>need. And if you, you know, deploy them

00:15:57.975 --> 00:15:59.415
<v Speaker 1>all at once, you're gonna get all of

00:15:59.415 --> 00:16:01.500
<v Speaker 1>the infrastructure that you need. We've got it

00:16:01.500 --> 00:16:03.660
<v Speaker 1>set up in a namespace for developers, and

00:16:03.660 --> 00:16:04.620
<v Speaker 1>then they're using,

00:16:05.180 --> 00:16:07.340
<v Speaker 1>you know, DevSpace to be able to

00:16:07.740 --> 00:16:09.580
<v Speaker 1>do development as if they were doing it

00:16:09.580 --> 00:16:12.060
<v Speaker 1>locally. And so for us, that has been

00:16:12.375 --> 00:16:14.135
<v Speaker 1>for the developers that are on there right

00:16:14.135 --> 00:16:15.895
<v Speaker 1>now, like, it is a a huge time

00:16:15.895 --> 00:16:18.375
<v Speaker 1>saving effort even for the ones that were

00:16:18.375 --> 00:16:20.935
<v Speaker 1>able to do development locally, which is quite

00:16:20.935 --> 00:16:21.815
<v Speaker 1>surprising.

00:16:21.815 --> 00:16:24.535
<v Speaker 1>But that's been, yeah, that's been the big

00:16:24.535 --> 00:16:26.660
<v Speaker 1>push to migrate to Kubernetes at Build, and

00:16:26.660 --> 00:16:29.300
<v Speaker 1>it's been going great so far. So Nice.

00:16:29.380 --> 00:16:31.780
<v Speaker 0>What I think is it's interesting there is,

00:16:31.780 --> 00:16:33.540
<v Speaker 0>like, from the people that I've spoken to

00:16:33.540 --> 00:16:35.140
<v Speaker 0>in the past, like, when they're moving to

00:16:35.140 --> 00:16:38.045
<v Speaker 0>Kubernetes, it's generally because of, like, microservice service

00:16:38.045 --> 00:16:39.884
<v Speaker 0>adoption and they've got all of these containers

00:16:39.884 --> 00:16:41.964
<v Speaker 0>and they need some sort of orchestration.

00:16:41.964 --> 00:16:43.725
<v Speaker 0>But it sounds like the journey that Bel

00:16:43.725 --> 00:16:45.005
<v Speaker 0>Air on is kind of actually a bit

00:16:45.005 --> 00:16:46.605
<v Speaker 0>more twofold. You know, it's kind of part

00:16:46.605 --> 00:16:48.845
<v Speaker 0>taking legacy code, breaking it down, making it

00:16:48.845 --> 00:16:49.884
<v Speaker 0>more maintainable and moving forward.

00:16:50.540 --> 00:16:52.540
<v Speaker 0>But also the self-service

00:16:52.540 --> 00:16:55.340
<v Speaker 0>platforming side of it, like, given developers that

00:16:55.340 --> 00:16:55.980
<v Speaker 0>ability

00:16:56.220 --> 00:16:59.020
<v Speaker 0>to have a cross plane resource, get a

00:16:59.020 --> 00:17:01.580
<v Speaker 0>Kinesis thing and get ups that along with

00:17:01.580 --> 00:17:03.485
<v Speaker 0>the code that they're shipping. I mean, that's

00:17:03.485 --> 00:17:05.484
<v Speaker 0>just a really strong enabler for teams. Right?

00:17:05.484 --> 00:17:07.165
<v Speaker 0>And like you said, it allows them to

00:17:07.165 --> 00:17:09.885
<v Speaker 0>deliver features to customers quicker. And I think

00:17:09.885 --> 00:17:12.365
<v Speaker 0>that's a one of those understated things with

00:17:12.365 --> 00:17:14.684
<v Speaker 0>Kubernetes. It's it's normally all all we have

00:17:14.684 --> 00:17:17.085
<v Speaker 0>containers. We have operational complexity. Let's do that.

00:17:17.085 --> 00:17:19.480
<v Speaker 0>But, actually, if you do it right with

00:17:19.480 --> 00:17:21.559
<v Speaker 0>the right people and you build a platform,

00:17:21.720 --> 00:17:24.040
<v Speaker 0>is you you give a really strong foundation

00:17:24.040 --> 00:17:26.599
<v Speaker 0>for companies to iterate and evolve faster than

00:17:26.599 --> 00:17:28.679
<v Speaker 0>their competition. Yeah. That's a great point.

00:17:29.000 --> 00:17:31.160
<v Speaker 1>And thinking too about how, you know, we're

00:17:31.385 --> 00:17:34.505
<v Speaker 1>creating new microservices every single month and being

00:17:34.505 --> 00:17:36.585
<v Speaker 1>able to support that. You know, if we

00:17:36.905 --> 00:17:38.585
<v Speaker 1>automate a lot of that to where Home

00:17:38.585 --> 00:17:40.585
<v Speaker 1>Chart just gets created and, you know, the

00:17:40.585 --> 00:17:43.625
<v Speaker 1>cross plane APIs are already there, we don't

00:17:43.625 --> 00:17:45.225
<v Speaker 1>need to be in the loop for these

00:17:45.225 --> 00:17:47.980
<v Speaker 1>developers. And there are going to be cases

00:17:47.980 --> 00:17:49.740
<v Speaker 1>where they always are going to need us

00:17:49.740 --> 00:17:51.020
<v Speaker 1>in the loop. But if we can get,

00:17:51.020 --> 00:17:54.220
<v Speaker 1>like, 80% of the developers just self-service, like,

00:17:54.220 --> 00:17:56.620
<v Speaker 1>that is such a powerful thing for getting

00:17:56.620 --> 00:17:58.940
<v Speaker 1>features out to customers as fast as possible.

00:18:00.295 --> 00:18:01.975
<v Speaker 1>One other thing I might add,

00:18:02.295 --> 00:18:03.815
<v Speaker 1>really quickly is,

00:18:04.135 --> 00:18:06.455
<v Speaker 1>you know, one of the the situations we

00:18:06.455 --> 00:18:09.255
<v Speaker 1>had with our custom internal Python tooling is

00:18:09.495 --> 00:18:11.735
<v Speaker 1>a lot of the orchestration

00:18:11.735 --> 00:18:13.975
<v Speaker 1>of containers is something that we were building

00:18:13.975 --> 00:18:17.070
<v Speaker 1>into that into that Python app and things

00:18:17.070 --> 00:18:18.510
<v Speaker 1>like how do you handle

00:18:18.990 --> 00:18:21.870
<v Speaker 1>end to end encryption with things like MTLS.

00:18:22.030 --> 00:18:23.790
<v Speaker 1>You know, we've rolled our own version of

00:18:23.790 --> 00:18:25.230
<v Speaker 1>that, but now we have to maintain it

00:18:25.230 --> 00:18:28.105
<v Speaker 1>and support it. And it's been really fun

00:18:28.105 --> 00:18:31.705
<v Speaker 1>seeing the Kubernetes ecosystem grow up and mature

00:18:31.945 --> 00:18:34.105
<v Speaker 1>where there are so many off the shelf

00:18:34.105 --> 00:18:35.065
<v Speaker 1>solutions

00:18:35.304 --> 00:18:37.385
<v Speaker 1>that people used to have to code their

00:18:37.385 --> 00:18:38.505
<v Speaker 1>own solution for.

00:18:39.160 --> 00:18:40.840
<v Speaker 1>And so it it does seem like, you

00:18:40.840 --> 00:18:42.360
<v Speaker 1>know, if your company is spending more and

00:18:42.360 --> 00:18:45.960
<v Speaker 1>more time coding custom solution for things that

00:18:45.960 --> 00:18:47.640
<v Speaker 1>could be just had off the shelf with

00:18:47.640 --> 00:18:50.120
<v Speaker 1>Kubernetes, like, maybe that's the time to take

00:18:50.120 --> 00:18:51.720
<v Speaker 1>a look and see, should we be migrating

00:18:51.720 --> 00:18:54.120
<v Speaker 1>to this since we have these complexities that

00:18:54.120 --> 00:18:55.804
<v Speaker 1>are growing? Awesome.

00:18:55.805 --> 00:18:58.125
<v Speaker 0>Just because you talked about how the Kubernetes

00:18:58.125 --> 00:19:01.085
<v Speaker 0>communities, they're they're evolving, they're producing software. Like,

00:19:01.085 --> 00:19:02.845
<v Speaker 0>the MTLS one is a great example. Right?

00:19:02.845 --> 00:19:04.525
<v Speaker 0>You know, Linkerd came out and just said,

00:19:04.525 --> 00:19:05.885
<v Speaker 0>hey. Run us in your cluster, and you

00:19:05.885 --> 00:19:08.125
<v Speaker 0>get automatic MTLS for free, which is is

00:19:08.125 --> 00:19:08.445
<v Speaker 0>wonderful.

00:19:09.059 --> 00:19:10.820
<v Speaker 0>So, you know, kind of diving in on

00:19:10.820 --> 00:19:13.380
<v Speaker 0>that a little bit, like, the CNCF landscape

00:19:13.380 --> 00:19:16.179
<v Speaker 0>has dozens, hundreds of projects depending on how

00:19:16.179 --> 00:19:18.740
<v Speaker 0>deep you look. Are there three to five

00:19:18.740 --> 00:19:20.100
<v Speaker 0>off the top of your head that are

00:19:20.100 --> 00:19:22.245
<v Speaker 0>just a must have installs for all Kubernetes

00:19:22.245 --> 00:19:24.645
<v Speaker 0>clusters? Yeah. There are so many things in

00:19:24.645 --> 00:19:25.845
<v Speaker 1>the ecosystem,

00:19:25.845 --> 00:19:28.485
<v Speaker 1>you know, from, like, edge case things to

00:19:28.485 --> 00:19:29.765
<v Speaker 1>common core things.

00:19:30.245 --> 00:19:31.605
<v Speaker 1>And I think some of the big ones

00:19:31.605 --> 00:19:32.805
<v Speaker 1>that most

00:19:32.805 --> 00:19:34.965
<v Speaker 1>people are gonna start to encounter is, you

00:19:34.965 --> 00:19:37.620
<v Speaker 1>know, do I deploy these things to Kubernetes

00:19:37.620 --> 00:19:38.499
<v Speaker 1>clusters?

00:19:38.500 --> 00:19:41.460
<v Speaker 1>What does my CICD pipeline look like? You

00:19:41.460 --> 00:19:44.020
<v Speaker 1>know, maybe if you had a, CD tool

00:19:44.020 --> 00:19:44.739
<v Speaker 1>before,

00:19:45.059 --> 00:19:45.700
<v Speaker 1>it's

00:19:45.940 --> 00:19:48.659
<v Speaker 1>may work well with Kubernetes. It may not,

00:19:48.659 --> 00:19:51.434
<v Speaker 1>but tools like Argo CD and Flux are

00:19:51.434 --> 00:19:53.195
<v Speaker 1>two great ones to take a look at.

00:19:53.195 --> 00:19:56.235
<v Speaker 1>You know, they're designed specifically for deploying to

00:19:56.235 --> 00:19:59.274
<v Speaker 1>Kubernetes clusters. And so those are really big

00:19:59.274 --> 00:20:00.794
<v Speaker 1>ones that are gonna help with just all

00:20:00.794 --> 00:20:02.634
<v Speaker 1>kinds of things even if you want things

00:20:02.634 --> 00:20:05.610
<v Speaker 1>like, you know, blue green deployments or canary

00:20:05.610 --> 00:20:08.730
<v Speaker 1>deployments or just how you configure that behavior.

00:20:08.730 --> 00:20:10.649
<v Speaker 1>You know, they're gonna help you support stuff

00:20:10.649 --> 00:20:12.570
<v Speaker 1>like that. And so those are things I

00:20:12.570 --> 00:20:14.409
<v Speaker 1>think that most people end up looking at.

00:20:15.394 --> 00:20:18.355
<v Speaker 1>Another is how do you actually deploy all

00:20:18.355 --> 00:20:20.434
<v Speaker 1>of this YAML that you have? You know,

00:20:20.434 --> 00:20:22.274
<v Speaker 1>you're quickly you're just gonna become a YAML

00:20:22.274 --> 00:20:24.914
<v Speaker 1>engineer as there's all these toggles to set.

00:20:25.154 --> 00:20:27.075
<v Speaker 1>And do you want to package that up

00:20:27.075 --> 00:20:29.509
<v Speaker 1>in something like Helms that you can, you

00:20:29.509 --> 00:20:31.590
<v Speaker 1>know, version it, release it, and just have

00:20:31.590 --> 00:20:33.429
<v Speaker 1>all of these, you know, defaults set in

00:20:33.429 --> 00:20:35.269
<v Speaker 1>place? Or do you wanna use something like

00:20:35.269 --> 00:20:37.429
<v Speaker 1>customize so you can just patch and override

00:20:37.429 --> 00:20:39.109
<v Speaker 1>certain values as needed?

00:20:39.350 --> 00:20:41.669
<v Speaker 1>Those are two things that, I think most

00:20:41.669 --> 00:20:43.029
<v Speaker 1>people are gonna encounter as well.

00:20:43.975 --> 00:20:47.094
<v Speaker 1>There's so many other things out there. Like,

00:20:47.575 --> 00:20:49.894
<v Speaker 1>another one which I think is really cool

00:20:49.894 --> 00:20:51.414
<v Speaker 1>is just tools like

00:20:52.294 --> 00:20:53.894
<v Speaker 1>you know, it used to be things like

00:20:53.894 --> 00:20:56.855
<v Speaker 1>the like, horizontal pod autoscalers and stuff, and

00:20:56.855 --> 00:20:58.375
<v Speaker 1>you still do have that. But tools like

00:20:58.375 --> 00:21:00.960
<v Speaker 1>KEDA are really cool where you can, you

00:21:00.960 --> 00:21:02.720
<v Speaker 1>know, scale out depending on, like, the depth

00:21:02.720 --> 00:21:04.800
<v Speaker 1>of your queue size or something, or there's

00:21:04.800 --> 00:21:07.920
<v Speaker 1>just so many custom triggers for when might

00:21:07.920 --> 00:21:10.400
<v Speaker 1>you want your application to scale out. And

00:21:10.400 --> 00:21:11.600
<v Speaker 1>I think a lot of people

00:21:11.920 --> 00:21:14.320
<v Speaker 1>will probably end up encountering and using something

00:21:14.320 --> 00:21:16.415
<v Speaker 1>like that. And if you're not in Kubernetes,

00:21:16.415 --> 00:21:18.095
<v Speaker 1>you know, how do you solve that issue?

00:21:18.095 --> 00:21:20.175
<v Speaker 1>Going back to that ecosystem thing, it's like,

00:21:20.175 --> 00:21:21.775
<v Speaker 1>do you end up coding your own version

00:21:21.775 --> 00:21:23.695
<v Speaker 1>of Keta that you then have to maintain?

00:21:23.695 --> 00:21:25.615
<v Speaker 1>And so that's a really fun one that

00:21:25.615 --> 00:21:29.100
<v Speaker 1>I enjoy as well. Awesome. Alright. Let's dive

00:21:29.100 --> 00:21:31.340
<v Speaker 0>a little bit deeper into the migration story

00:21:31.340 --> 00:21:31.980
<v Speaker 0>then.

00:21:32.300 --> 00:21:35.500
<v Speaker 0>So how far into the Kubernetes migration are

00:21:35.500 --> 00:21:37.820
<v Speaker 0>you with built at the moment? Yeah. So

00:21:37.820 --> 00:21:39.020
<v Speaker 1>we are,

00:21:39.820 --> 00:21:42.380
<v Speaker 1>you know, we've been working on migrating

00:21:42.934 --> 00:21:45.415
<v Speaker 1>developers over to the Kubernetes cluster, and we've

00:21:45.415 --> 00:21:48.455
<v Speaker 1>got, you know, over a hundred different microservices

00:21:48.455 --> 00:21:50.135
<v Speaker 1>that we need to deploy. And so we've

00:21:50.135 --> 00:21:52.215
<v Speaker 1>started kind of tackling them one at a

00:21:52.215 --> 00:21:54.135
<v Speaker 1>time and just figuring out, like, what are

00:21:54.135 --> 00:21:57.495
<v Speaker 1>the best practices that we want for this

00:21:56.830 --> 00:21:59.150
<v Speaker 1>these different applications and how do we deploy

00:21:59.150 --> 00:21:59.630
<v Speaker 1>them?

00:22:00.110 --> 00:22:01.790
<v Speaker 1>And we've got our clusters. You know, we've

00:22:01.790 --> 00:22:04.510
<v Speaker 1>got these environments stood up. We have a

00:22:04.510 --> 00:22:06.590
<v Speaker 1>bar for, you know, what do we need

00:22:06.590 --> 00:22:08.510
<v Speaker 1>to do in order to bring developers onto

00:22:08.510 --> 00:22:10.525
<v Speaker 1>it? And then separately, what do we need

00:22:10.525 --> 00:22:12.525
<v Speaker 1>to do for it to be production ready?

00:22:12.525 --> 00:22:14.525
<v Speaker 1>And so a lot of those production concerns,

00:22:14.765 --> 00:22:16.765
<v Speaker 1>we're not focused on them just yet since

00:22:16.765 --> 00:22:19.085
<v Speaker 1>our our biggest bottleneck is how do we

00:22:19.085 --> 00:22:22.045
<v Speaker 1>get developers as productive as fast as possible?

00:22:22.525 --> 00:22:25.370
<v Speaker 1>And so we've currently got one full team,

00:22:25.370 --> 00:22:27.690
<v Speaker 1>I wanna say about 30 developers on it,

00:22:27.690 --> 00:22:29.850
<v Speaker 1>and, you know, it's already saving them. I

00:22:29.850 --> 00:22:31.610
<v Speaker 1>think, like I think they said there was

00:22:31.610 --> 00:22:33.610
<v Speaker 1>something in particular that took seven minutes, and

00:22:33.610 --> 00:22:34.650
<v Speaker 1>now they're able to cut it down to

00:22:34.650 --> 00:22:36.250
<v Speaker 1>one minute. And it's just, like, something that

00:22:36.250 --> 00:22:39.175
<v Speaker 1>happens every single day across these 30 developers.

00:22:39.175 --> 00:22:41.255
<v Speaker 1>And it's just become part of their daily

00:22:41.255 --> 00:22:44.055
<v Speaker 1>workflow where they could do development locally, but

00:22:44.055 --> 00:22:46.215
<v Speaker 1>they're all working in Kubernetes because it is

00:22:46.215 --> 00:22:49.015
<v Speaker 1>a lot faster. And we are also onboarding

00:22:49.015 --> 00:22:51.735
<v Speaker 1>another team in the coming weeks. We're gonna

00:22:51.735 --> 00:22:53.335
<v Speaker 1>work with one of the senior engineers there,

00:22:53.690 --> 00:22:55.530
<v Speaker 1>make sure his stack looks the way it

00:22:55.530 --> 00:22:57.130
<v Speaker 1>should and acts the way it should, and

00:22:57.130 --> 00:22:59.049
<v Speaker 1>then slowly roll it out to the rest

00:22:59.049 --> 00:23:00.090
<v Speaker 1>of the developers.

00:23:00.330 --> 00:23:02.570
<v Speaker 1>So, hopefully, over the next few quarters, we'll

00:23:02.570 --> 00:23:05.049
<v Speaker 1>just be migrating all of the developers over.

00:23:05.049 --> 00:23:07.385
<v Speaker 1>And then as we're doing that, building out

00:23:07.385 --> 00:23:09.865
<v Speaker 1>automations that we don't have to manually

00:23:10.025 --> 00:23:12.265
<v Speaker 1>do this every single time of converting their

00:23:12.265 --> 00:23:14.105
<v Speaker 1>application into a home chart and all that

00:23:14.105 --> 00:23:16.985
<v Speaker 1>and, you know, kind of scripting out what

00:23:16.985 --> 00:23:20.105
<v Speaker 1>does that translation look like from their application

00:23:20.105 --> 00:23:23.039
<v Speaker 1>being deployed in ECS before to now being

00:23:23.039 --> 00:23:24.559
<v Speaker 1>deployed in Kubernetes.

00:23:24.559 --> 00:23:26.960
<v Speaker 1>And so, yeah, currently in that process of

00:23:26.960 --> 00:23:28.480
<v Speaker 1>migrating developers over.

00:23:28.880 --> 00:23:29.999
<v Speaker 0>Okay. So

00:23:30.320 --> 00:23:33.440
<v Speaker 0>the old system was container based on ECS.

00:23:33.695 --> 00:23:36.335
<v Speaker 0>You've now built this platform. You're encouraging people

00:23:36.335 --> 00:23:38.095
<v Speaker 0>to come over and deploy to Kubernetes.

00:23:38.895 --> 00:23:39.534
<v Speaker 0>You know,

00:23:39.934 --> 00:23:41.775
<v Speaker 0>I I don't wanna say, oh, it's easy.

00:23:41.775 --> 00:23:43.934
<v Speaker 0>They're already on containers. Right? Because obviously, there's

00:23:43.934 --> 00:23:45.535
<v Speaker 0>all the devil's in the details with all

00:23:45.535 --> 00:23:47.510
<v Speaker 0>of these things. So what have been some

00:23:47.510 --> 00:23:49.270
<v Speaker 0>of the main challenges that the developers have

00:23:49.270 --> 00:23:51.190
<v Speaker 0>experienced as you bring them across to the

00:23:51.190 --> 00:23:51.989
<v Speaker 0>new Shiny?

00:23:52.309 --> 00:23:53.269
<v Speaker 1>Yeah. I think,

00:23:53.669 --> 00:23:55.509
<v Speaker 1>I guess there's a couple. So

00:23:55.750 --> 00:23:56.950
<v Speaker 1>one is,

00:23:57.190 --> 00:23:57.830
<v Speaker 1>you know,

00:23:58.230 --> 00:23:59.755
<v Speaker 1>what is the incentive for them to go

00:23:59.755 --> 00:24:01.835
<v Speaker 1>to Kubernetes or, like, why should they? And,

00:24:01.835 --> 00:24:03.755
<v Speaker 1>you know, in their old environment, it was

00:24:03.755 --> 00:24:04.635
<v Speaker 1>problematic,

00:24:04.635 --> 00:24:06.075
<v Speaker 1>some of them gave up on using it.

00:24:06.075 --> 00:24:08.075
<v Speaker 1>And then we had, like, a share or

00:24:08.075 --> 00:24:10.715
<v Speaker 1>we have a shared ops environment, and so

00:24:10.794 --> 00:24:14.060
<v Speaker 1>developers kind of take turns deploying their code

00:24:14.060 --> 00:24:16.620
<v Speaker 1>to that shared environment to test things out

00:24:16.700 --> 00:24:17.980
<v Speaker 1>and then roll it back.

00:24:18.300 --> 00:24:20.059
<v Speaker 1>And so from that standpoint,

00:24:20.060 --> 00:24:20.940
<v Speaker 1>you know, they

00:24:21.340 --> 00:24:23.820
<v Speaker 1>won't have to fight over resources anymore in

00:24:23.820 --> 00:24:26.380
<v Speaker 1>Kubernetes, and so there's a huge draw there

00:24:26.380 --> 00:24:28.380
<v Speaker 1>for them to get into into Kubernetes,

00:24:28.835 --> 00:24:30.675
<v Speaker 1>It's like a big incentive that they they're

00:24:30.675 --> 00:24:32.274
<v Speaker 1>ready for, they're excited for.

00:24:32.675 --> 00:24:34.915
<v Speaker 1>And then for the, you know, 30 or

00:24:34.915 --> 00:24:36.674
<v Speaker 1>so people that are in there right now,

00:24:36.995 --> 00:24:38.995
<v Speaker 1>I think, initially, a lot of it is

00:24:38.995 --> 00:24:41.555
<v Speaker 1>just knowing, like, you know, how do I

00:24:41.795 --> 00:24:43.330
<v Speaker 1>like, right now, we just have, you know,

00:24:43.330 --> 00:24:45.650
<v Speaker 1>ephemeral or not ephemeral, but we have, like,

00:24:45.650 --> 00:24:48.210
<v Speaker 1>MySQL running in the cluster. It's got, like,

00:24:48.210 --> 00:24:50.290
<v Speaker 1>an EBS volume backing it, so there is

00:24:50.290 --> 00:24:53.330
<v Speaker 1>persistence there. But it's still somewhat ephemeral. Like,

00:24:53.330 --> 00:24:55.250
<v Speaker 1>it's not like an RDS instance that's gonna

00:24:55.250 --> 00:24:56.370
<v Speaker 1>be there for a long time.

00:24:57.475 --> 00:24:59.075
<v Speaker 1>And so some of the things are like,

00:24:59.075 --> 00:25:00.595
<v Speaker 1>how do I access that? You know, if

00:25:00.595 --> 00:25:02.115
<v Speaker 1>I wanna do a migration, what does that

00:25:02.115 --> 00:25:03.315
<v Speaker 1>look like? And how do I get these

00:25:03.315 --> 00:25:04.114
<v Speaker 1>endpoints,

00:25:04.115 --> 00:25:06.195
<v Speaker 1>etcetera? Just like, how do I think about

00:25:06.195 --> 00:25:08.354
<v Speaker 1>how to do what I was doing before?

00:25:08.434 --> 00:25:10.434
<v Speaker 1>And then, you know, if I wanna deploy

00:25:10.434 --> 00:25:13.060
<v Speaker 1>maybe a different microservice or it's not behaving

00:25:13.060 --> 00:25:15.140
<v Speaker 1>the way I expected it to, how do

00:25:15.140 --> 00:25:17.700
<v Speaker 1>I reset that and stuff? And so I

00:25:17.700 --> 00:25:19.380
<v Speaker 1>know there was a sprint or two where

00:25:19.380 --> 00:25:21.780
<v Speaker 1>I just spent, you know, hours and hours

00:25:21.780 --> 00:25:24.260
<v Speaker 1>working on documentation to just try and answer

00:25:24.260 --> 00:25:26.180
<v Speaker 1>all of those questions so that they had

00:25:26.535 --> 00:25:29.495
<v Speaker 1>exactly what they need to, you know, self-service

00:25:29.495 --> 00:25:31.255
<v Speaker 1>themselves as much as possible.

00:25:31.735 --> 00:25:33.095
<v Speaker 1>And, you know, I think a few weeks

00:25:33.095 --> 00:25:35.175
<v Speaker 1>after onboarding those 30 developers,

00:25:35.255 --> 00:25:37.575
<v Speaker 1>it kinda got quiet, and it's like, does

00:25:37.575 --> 00:25:38.935
<v Speaker 1>that mean they're not using it? Like, what

00:25:38.935 --> 00:25:40.600
<v Speaker 1>does that mean? And I it's kind of

00:25:40.600 --> 00:25:42.360
<v Speaker 1>a good sign because they're they were using

00:25:42.360 --> 00:25:43.720
<v Speaker 1>it, and it was just kind of working

00:25:43.720 --> 00:25:45.559
<v Speaker 1>for them. And we'd have questions pop up

00:25:45.559 --> 00:25:47.559
<v Speaker 1>every now and then, but for the most

00:25:47.559 --> 00:25:50.120
<v Speaker 1>point or for the most yeah. They're fairly

00:25:50.120 --> 00:25:51.799
<v Speaker 1>resourceful, and I've just been able to solve

00:25:51.799 --> 00:25:53.639
<v Speaker 1>a lot of those issues once we did

00:25:53.639 --> 00:25:55.804
<v Speaker 1>that prep work of making sure that they

00:25:55.804 --> 00:25:57.645
<v Speaker 1>had everything that we thought they would need.

00:25:57.645 --> 00:25:59.085
<v Speaker 1>And then if they didn't, you know, we

00:25:59.085 --> 00:26:01.804
<v Speaker 1>added that to that that base of documentation

00:26:01.804 --> 00:26:03.485
<v Speaker 1>and tooling so that they were able to

00:26:03.485 --> 00:26:04.524
<v Speaker 1>support themselves.

00:26:05.245 --> 00:26:08.445
<v Speaker 0>Wow. So you actually provided documentation before migrating

00:26:08.445 --> 00:26:11.380
<v Speaker 0>people over? A bit of both. Yeah. We,

00:26:12.100 --> 00:26:14.100
<v Speaker 1>for a few like, we had some very

00:26:14.100 --> 00:26:17.380
<v Speaker 1>rough skeleton documentation for, like, the the brave

00:26:17.380 --> 00:26:19.860
<v Speaker 1>people that started it first, and then they

00:26:19.860 --> 00:26:22.340
<v Speaker 1>had, you know, 50 questions or so. And,

00:26:22.340 --> 00:26:23.620
<v Speaker 1>you know, we took that and kind of

00:26:23.620 --> 00:26:24.845
<v Speaker 1>just slowly

00:26:24.845 --> 00:26:26.925
<v Speaker 1>added that to the documentation so we didn't

00:26:26.925 --> 00:26:27.645
<v Speaker 1>have 30

00:26:28.125 --> 00:26:30.605
<v Speaker 1>people asking 50 questions and, you know, so

00:26:30.605 --> 00:26:32.045
<v Speaker 1>on as we onboard more.

00:26:32.605 --> 00:26:34.365
<v Speaker 0>Yeah. I mean, it's a it's a great

00:26:34.365 --> 00:26:35.885
<v Speaker 0>idea of what I should probably try myself

00:26:35.885 --> 00:26:38.580
<v Speaker 0>sometime, but I'm I'm always too keen to

00:26:38.580 --> 00:26:40.260
<v Speaker 0>do the engineering stuff and I'm always a

00:26:40.260 --> 00:26:41.779
<v Speaker 0>bit lax on the documentation.

00:26:42.260 --> 00:26:43.620
<v Speaker 0>A bad trait of my own that I

00:26:43.620 --> 00:26:45.780
<v Speaker 0>should definitely resolve at some point. I'm curious

00:26:45.780 --> 00:26:46.659
<v Speaker 0>about them.

00:26:46.900 --> 00:26:48.740
<v Speaker 0>You know, you've got these target developers on

00:26:48.740 --> 00:26:49.299
<v Speaker 0>the platform.

00:26:49.875 --> 00:26:51.555
<v Speaker 0>You used to do SRE.

00:26:51.555 --> 00:26:53.635
<v Speaker 0>I mean, are you the sole reliability

00:26:53.635 --> 00:26:55.875
<v Speaker 0>team for this cluster? Is that something you're

00:26:55.875 --> 00:26:57.475
<v Speaker 0>training up the dev team to do? Is

00:26:57.475 --> 00:26:59.315
<v Speaker 0>there another team that takes ownership of that?

00:26:59.315 --> 00:27:01.154
<v Speaker 0>Like, what does that look like within built?

00:27:01.315 --> 00:27:02.515
<v Speaker 1>Yeah. So we have,

00:27:03.420 --> 00:27:05.980
<v Speaker 1>I wanna say, 12 engineers,

00:27:05.980 --> 00:27:07.580
<v Speaker 1>you know, that typically do,

00:27:07.980 --> 00:27:10.300
<v Speaker 1>DevOps type stuff or, you know, follow that

00:27:10.300 --> 00:27:11.740
<v Speaker 1>philosophy. And so

00:27:11.980 --> 00:27:12.540
<v Speaker 1>the,

00:27:12.940 --> 00:27:16.300
<v Speaker 1>team structure recently is probably about five are,

00:27:16.300 --> 00:27:18.380
<v Speaker 1>you know, SREs focused on all of that.

00:27:19.035 --> 00:27:21.915
<v Speaker 1>And then I wanna say five, six others

00:27:21.915 --> 00:27:23.195
<v Speaker 1>are focused

00:27:23.195 --> 00:27:24.155
<v Speaker 1>primarily

00:27:24.155 --> 00:27:25.595
<v Speaker 1>around Kubernetes

00:27:25.595 --> 00:27:29.195
<v Speaker 1>and getting developers onto Kubernetes while also supporting

00:27:29.275 --> 00:27:31.355
<v Speaker 1>some of the traditional ways of doing things.

00:27:32.660 --> 00:27:35.140
<v Speaker 1>Most of the engineers

00:27:35.140 --> 00:27:37.140
<v Speaker 1>that are on that team that's focused on

00:27:37.140 --> 00:27:40.500
<v Speaker 1>Kubernetes and getting people over have come from

00:27:40.500 --> 00:27:43.139
<v Speaker 1>companies where they've worked with Kubernetes before.

00:27:43.539 --> 00:27:45.465
<v Speaker 1>So I don't think there might be a

00:27:45.465 --> 00:27:47.545
<v Speaker 1>a handful of people that haven't worked with

00:27:47.545 --> 00:27:49.065
<v Speaker 1>it before, but most of the people on

00:27:49.065 --> 00:27:52.025
<v Speaker 1>the team do have experiences at other companies,

00:27:52.025 --> 00:27:52.904
<v Speaker 1>big and small.

00:27:53.705 --> 00:27:56.425
<v Speaker 1>And so that has been, just amazing. Like,

00:27:56.425 --> 00:27:58.105
<v Speaker 1>they're wonderful people to work with, and they

00:27:58.105 --> 00:28:01.500
<v Speaker 1>have such amazing ideas that, you know, oftentimes,

00:28:01.500 --> 00:28:03.500
<v Speaker 1>I would never even have imagined. And so

00:28:03.500 --> 00:28:06.060
<v Speaker 1>it's it's been really rewarding working with them.

00:28:06.060 --> 00:28:08.300
<v Speaker 1>And I think the you know, roughly 12

00:28:08.300 --> 00:28:11.180
<v Speaker 1>of us are supporting those, maybe a 50

00:28:11.180 --> 00:28:13.420
<v Speaker 1>developers while we work up to this to,

00:28:13.420 --> 00:28:15.075
<v Speaker 1>you know, help them be more productive.

00:28:15.475 --> 00:28:17.875
<v Speaker 0>Wow. So do you have any tips? You

00:28:17.875 --> 00:28:20.355
<v Speaker 0>know, I'm assuming, you know, Kubernetes migrations are

00:28:20.355 --> 00:28:22.275
<v Speaker 0>something that a lot of organizations, a lot

00:28:22.275 --> 00:28:24.275
<v Speaker 0>of teams are are doing. Not all of

00:28:24.275 --> 00:28:26.170
<v Speaker 0>them are fortunate enough to have, you know,

00:28:26.170 --> 00:28:27.930
<v Speaker 0>a team of 12 or 15 people to

00:28:27.930 --> 00:28:30.410
<v Speaker 0>kind of help that be reliable and onboard

00:28:30.410 --> 00:28:32.490
<v Speaker 0>them. But I'm curious, like,

00:28:33.290 --> 00:28:34.410
<v Speaker 0>just because it's all at the top of

00:28:34.410 --> 00:28:35.290
<v Speaker 0>my head. You know, I'm working with a

00:28:35.290 --> 00:28:37.370
<v Speaker 0>company right now. There's just five developers. They're

00:28:37.370 --> 00:28:38.330
<v Speaker 0>migrating to Kubernetes.

00:28:38.674 --> 00:28:40.674
<v Speaker 0>The why is of doing that? That's another

00:28:40.674 --> 00:28:42.835
<v Speaker 0>story. We could touch on that later. But,

00:28:42.835 --> 00:28:44.515
<v Speaker 0>you know, they want like, if they wanted

00:28:44.515 --> 00:28:46.275
<v Speaker 0>some great advice that says, how do we

00:28:46.275 --> 00:28:48.195
<v Speaker 0>make sure that we don't destroy our own

00:28:48.195 --> 00:28:50.434
<v Speaker 0>cluster, destroy our data, deploying our own workloads

00:28:50.434 --> 00:28:52.880
<v Speaker 0>onto? Like, what are the safeguards that you

00:28:52.880 --> 00:28:55.840
<v Speaker 0>can encourage them to do as someone who's

00:28:55.840 --> 00:28:57.600
<v Speaker 0>been quite successful, it sounds like, with a

00:28:57.600 --> 00:28:59.039
<v Speaker 0>migration? Yeah. I think

00:29:00.400 --> 00:29:02.240
<v Speaker 1>probably just looking at, you know, what are

00:29:02.240 --> 00:29:04.240
<v Speaker 1>the best practices out there and what are

00:29:04.240 --> 00:29:06.365
<v Speaker 1>the the you know, there's so many good

00:29:06.365 --> 00:29:09.164
<v Speaker 1>articles and YouTube videos and thoughts about, like,

00:29:09.164 --> 00:29:10.924
<v Speaker 1>how to get started in this space

00:29:11.245 --> 00:29:13.404
<v Speaker 1>and just thinking about, like, what are those

00:29:13.404 --> 00:29:15.164
<v Speaker 1>core things that I need to be concerned

00:29:15.164 --> 00:29:17.245
<v Speaker 1>with and going from there. If it is

00:29:17.245 --> 00:29:19.820
<v Speaker 1>something that you are new to, then maybe

00:29:19.820 --> 00:29:21.740
<v Speaker 1>it is worth kind of just, like, dipping

00:29:21.740 --> 00:29:23.660
<v Speaker 1>your toe in in terms of getting stuff

00:29:23.660 --> 00:29:25.660
<v Speaker 1>spun up, making sure you're comfortable with it,

00:29:25.660 --> 00:29:27.019
<v Speaker 1>and seeing what that looks like.

00:29:28.700 --> 00:29:31.180
<v Speaker 1>I've always, you know, been fortunate, I guess,

00:29:31.180 --> 00:29:33.365
<v Speaker 1>to, like, reach out the community, and I

00:29:33.365 --> 00:29:35.365
<v Speaker 1>think that's a a huge thing that's very

00:29:35.365 --> 00:29:37.764
<v Speaker 1>helpful as well is make sure you are

00:29:37.764 --> 00:29:39.284
<v Speaker 1>engaged in the community.

00:29:39.445 --> 00:29:41.924
<v Speaker 1>I think we are very lucky to have

00:29:42.005 --> 00:29:44.404
<v Speaker 1>so many, you know, really smart people in

00:29:44.404 --> 00:29:46.690
<v Speaker 1>the community at our fingertips, whether it's on

00:29:46.690 --> 00:29:48.770
<v Speaker 1>Twitter, on Slack, on Discord.

00:29:49.010 --> 00:29:50.690
<v Speaker 1>You know, know when I found your Discord,

00:29:50.690 --> 00:29:52.850
<v Speaker 1>you know, to shamelessly plug that, but there's

00:29:52.850 --> 00:29:54.850
<v Speaker 1>just so many wonderful people in there that

00:29:54.850 --> 00:29:56.370
<v Speaker 1>if you throw a question out there, they're

00:29:56.370 --> 00:29:58.530
<v Speaker 1>happy to answer. And, you know, there's book

00:29:58.530 --> 00:30:00.290
<v Speaker 1>clubs you can join and stuff like that.

00:30:00.290 --> 00:30:02.245
<v Speaker 1>And so I feel like just, you know,

00:30:02.245 --> 00:30:04.565
<v Speaker 1>making sure that you are educating yourselves and

00:30:04.565 --> 00:30:05.605
<v Speaker 1>focusing on,

00:30:05.845 --> 00:30:07.525
<v Speaker 1>you know, a lot of those best practices

00:30:07.525 --> 00:30:09.524
<v Speaker 1>is definitely a good way to start.

00:30:10.085 --> 00:30:12.725
<v Speaker 1>And that's assuming that you are coming to

00:30:12.725 --> 00:30:14.645
<v Speaker 1>this new and you don't have, you know,

00:30:14.645 --> 00:30:17.060
<v Speaker 1>external people that are are helping out with

00:30:17.060 --> 00:30:18.019
<v Speaker 1>that. So

00:30:18.180 --> 00:30:19.780
<v Speaker 1>I think that's probably the harder way to

00:30:19.780 --> 00:30:22.580
<v Speaker 1>do it is just having internal people, like,

00:30:22.580 --> 00:30:25.299
<v Speaker 1>skill up without any outside consultation.

00:30:25.300 --> 00:30:25.860
<v Speaker 1>So

00:30:26.500 --> 00:30:27.940
<v Speaker 0>Yeah. I think that's really important.

00:30:28.975 --> 00:30:30.974
<v Speaker 0>The cloud native and Kubernetes

00:30:31.134 --> 00:30:31.934
<v Speaker 0>communities,

00:30:32.335 --> 00:30:34.894
<v Speaker 0>the code themselves, the projects. Right? They're they're

00:30:34.894 --> 00:30:38.414
<v Speaker 0>evolving constantly. Like, the Kubernetes and cloud native

00:30:38.414 --> 00:30:40.335
<v Speaker 0>today is not the Kubernetes and cloud native

00:30:40.335 --> 00:30:42.575
<v Speaker 0>of even three, six, nine months ago. Like,

00:30:42.575 --> 00:30:44.860
<v Speaker 0>everything is just the wheels are in motion

00:30:44.860 --> 00:30:46.780
<v Speaker 0>and maybe sometimes a little bit too fast.

00:30:46.780 --> 00:30:49.180
<v Speaker 0>So I I couldn't imagine trying to build

00:30:49.180 --> 00:30:51.660
<v Speaker 0>a platform without always keeping up to date

00:30:51.660 --> 00:30:53.820
<v Speaker 0>with what's happening, reading new books, watching new

00:30:53.820 --> 00:30:55.420
<v Speaker 0>videos. I I I just don't even think

00:30:55.420 --> 00:30:56.140
<v Speaker 0>it would be possible.

00:30:57.764 --> 00:31:00.245
<v Speaker 0>Like the Kubernetes APIs change fast. So, you

00:31:00.245 --> 00:31:01.845
<v Speaker 0>know, the project released. It used to be

00:31:01.845 --> 00:31:03.445
<v Speaker 0>for five times a year. It's now four

00:31:03.445 --> 00:31:04.725
<v Speaker 0>times. No. It used to be four times

00:31:04.725 --> 00:31:06.004
<v Speaker 0>a year. It's now three times a year.

00:31:06.004 --> 00:31:06.884
<v Speaker 0>Deprecations

00:31:06.884 --> 00:31:08.884
<v Speaker 0>as we're all aware happened second fast in

00:31:08.884 --> 00:31:11.300
<v Speaker 0>the Kubernetes landscape. So, yeah, I don't think

00:31:11.300 --> 00:31:12.580
<v Speaker 0>you can stick your head in the sand

00:31:12.580 --> 00:31:13.940
<v Speaker 0>and just say, we have a cluster. The

00:31:13.940 --> 00:31:14.740
<v Speaker 0>job is done.

00:31:15.140 --> 00:31:16.580
<v Speaker 0>It's just not gonna work that way. Yeah.

00:31:16.580 --> 00:31:17.620
<v Speaker 1>It's it's funny.

00:31:17.780 --> 00:31:19.220
<v Speaker 1>Every time I look at the

00:31:19.540 --> 00:31:20.740
<v Speaker 1>like, what are the new things in the

00:31:20.740 --> 00:31:23.700
<v Speaker 1>CNCF? I'm just, like, always blown away by

00:31:23.700 --> 00:31:25.380
<v Speaker 1>how many new ones are in there. And

00:31:25.825 --> 00:31:27.585
<v Speaker 1>you know, when we migrated to or when

00:31:27.585 --> 00:31:29.425
<v Speaker 1>we started, figuring out, like, how do we

00:31:29.425 --> 00:31:31.505
<v Speaker 1>want developers to work in Kubernetes,

00:31:31.665 --> 00:31:33.905
<v Speaker 1>there were just so many tools between, like,

00:31:33.985 --> 00:31:35.265
<v Speaker 1>you know, Telepresence,

00:31:35.265 --> 00:31:37.585
<v Speaker 1>you have Tilt, you have Dead Space, Scaffold,

00:31:37.585 --> 00:31:37.905
<v Speaker 1>just

00:31:38.419 --> 00:31:40.100
<v Speaker 1>so many tools on the scene just for

00:31:40.100 --> 00:31:41.700
<v Speaker 1>this one little area of how do you

00:31:41.700 --> 00:31:44.100
<v Speaker 1>solve this problem. Yeah, definitely a lot to

00:31:44.100 --> 00:31:46.179
<v Speaker 1>keep up with. Yeah. Definitely.

00:31:46.340 --> 00:31:49.059
<v Speaker 0>Alright. Let's flip that question around then.

00:31:49.220 --> 00:31:51.140
<v Speaker 0>You know? Sorry. How long have you been

00:31:51.140 --> 00:31:54.054
<v Speaker 0>at built? Been about maybe eight, nine months,

00:31:54.054 --> 00:31:55.014
<v Speaker 1>right around there.

00:31:55.655 --> 00:31:56.215
<v Speaker 0>Yeah.

00:31:56.855 --> 00:31:58.695
<v Speaker 0>I'm assuming that few things have maybe been

00:31:58.695 --> 00:32:00.775
<v Speaker 0>wrong in that time. Is there anything that

00:32:00.775 --> 00:32:02.455
<v Speaker 0>comes to top of mind that you could,

00:32:02.455 --> 00:32:04.695
<v Speaker 0>like, share? Like, any failure stories that we've

00:32:04.695 --> 00:32:06.535
<v Speaker 0>been able to learn from? Or has if

00:32:06.409 --> 00:32:08.330
<v Speaker 0>you just been extremely lucky and everything's been,

00:32:08.330 --> 00:32:09.850
<v Speaker 0>like, five stars all the way through? Yeah.

00:32:09.850 --> 00:32:11.210
<v Speaker 1>I think what's been challenging

00:32:11.769 --> 00:32:12.409
<v Speaker 1>is,

00:32:13.049 --> 00:32:14.409
<v Speaker 1>figuring out,

00:32:14.809 --> 00:32:15.929
<v Speaker 1>you know, which

00:32:16.169 --> 00:32:18.010
<v Speaker 1>there are so many options in the cloud

00:32:18.010 --> 00:32:19.850
<v Speaker 1>space and which one to go with. And

00:32:19.850 --> 00:32:22.605
<v Speaker 1>so we've gone through a lot of POCs

00:32:22.605 --> 00:32:24.764
<v Speaker 1>of trying all these different tools and seeing

00:32:24.764 --> 00:32:26.204
<v Speaker 1>which ones work best.

00:32:26.524 --> 00:32:28.524
<v Speaker 1>And sometimes it is hard because they are,

00:32:28.684 --> 00:32:30.524
<v Speaker 1>they both do such a good job at

00:32:30.524 --> 00:32:31.325
<v Speaker 1>what it is.

00:32:31.965 --> 00:32:34.284
<v Speaker 1>I think, also, when we first got started

00:32:34.284 --> 00:32:36.950
<v Speaker 1>with cross plane, you know, it's a there's

00:32:36.950 --> 00:32:38.710
<v Speaker 1>a lot to that tool, and, like, it

00:32:38.710 --> 00:32:40.470
<v Speaker 1>it has so much value in what it

00:32:40.470 --> 00:32:42.470
<v Speaker 1>can deliver once you get everything up and

00:32:42.470 --> 00:32:44.630
<v Speaker 1>running. But getting it up and running is

00:32:44.630 --> 00:32:47.750
<v Speaker 1>pretty challenging into itself, and that was something

00:32:47.750 --> 00:32:49.270
<v Speaker 1>that we struggled with for a bit where

00:32:49.270 --> 00:32:50.390
<v Speaker 1>we're like, you know, how do we do

00:32:50.390 --> 00:32:51.830
<v Speaker 1>this? How do we solve this and all

00:32:51.830 --> 00:32:51.990
<v Speaker 1>that?

00:32:53.025 --> 00:32:54.385
<v Speaker 1>And in that situation,

00:32:54.625 --> 00:32:58.305
<v Speaker 1>our manager, Jacob, he reached out to AWS,

00:32:58.305 --> 00:32:59.505
<v Speaker 1>and it turns out that they had a

00:32:59.505 --> 00:33:01.505
<v Speaker 1>program. You know, if you're in AWS to

00:33:01.505 --> 00:33:02.225
<v Speaker 1>essentially

00:33:02.385 --> 00:33:04.305
<v Speaker 1>work with a number of, you know, amazing

00:33:04.305 --> 00:33:07.105
<v Speaker 1>people, like, I think Carlos Santana and Christina

00:33:07.105 --> 00:33:09.240
<v Speaker 1>and a number of other wonderful people there.

00:33:09.240 --> 00:33:10.760
<v Speaker 1>And they helped us, like, get up to

00:33:10.760 --> 00:33:13.720
<v Speaker 1>speed with cross plane and how to like,

00:33:13.720 --> 00:33:15.240
<v Speaker 1>what are the best practices there?

00:33:15.400 --> 00:33:17.480
<v Speaker 1>How should we think about structuring this, and

00:33:17.480 --> 00:33:19.000
<v Speaker 1>what are the patterns that this will look

00:33:19.000 --> 00:33:21.400
<v Speaker 1>like? You know, we've come across this technical

00:33:21.400 --> 00:33:23.000
<v Speaker 1>issue. How do we solve it, or what's

00:33:23.000 --> 00:33:25.015
<v Speaker 1>the best way to solve it? Some of

00:33:25.015 --> 00:33:27.015
<v Speaker 1>it is challenging because it is, you know,

00:33:27.015 --> 00:33:29.495
<v Speaker 1>a fairly new tool, and so some of

00:33:29.495 --> 00:33:31.575
<v Speaker 1>the best practices are still being figured out.

00:33:31.575 --> 00:33:34.135
<v Speaker 1>But that's one where we probably flailed around

00:33:34.135 --> 00:33:35.895
<v Speaker 1>for a little while, and then, thankfully, we

00:33:35.895 --> 00:33:38.055
<v Speaker 1>were able to get some help from AWS

00:33:38.055 --> 00:33:40.630
<v Speaker 1>in that regard. And that's something that was

00:33:40.710 --> 00:33:42.470
<v Speaker 1>has been tremendously helpful.

00:33:43.830 --> 00:33:45.190
<v Speaker 1>I'm trying to think because I know it

00:33:45.190 --> 00:33:47.670
<v Speaker 1>hasn't been entirely smooth sailing. You know, there's

00:33:47.670 --> 00:33:49.510
<v Speaker 1>certainly things where, like, I wish we'd done

00:33:49.510 --> 00:33:50.390
<v Speaker 1>them sooner.

00:33:50.630 --> 00:33:53.190
<v Speaker 1>Some of those being, you know, more automation

00:33:53.190 --> 00:33:55.295
<v Speaker 1>around things, like getting home charts up and

00:33:55.295 --> 00:33:56.895
<v Speaker 1>running. You know, I probably should have done

00:33:56.895 --> 00:33:58.895
<v Speaker 1>that a little bit sooner, but some of

00:33:58.895 --> 00:34:00.735
<v Speaker 1>that also has probably just come from as

00:34:00.735 --> 00:34:02.255
<v Speaker 1>we migrate them over, we figure out what

00:34:02.255 --> 00:34:04.255
<v Speaker 1>we can automate and just kind of iterate

00:34:04.255 --> 00:34:05.534
<v Speaker 1>from there. And so,

00:34:05.934 --> 00:34:07.295
<v Speaker 1>yeah, it's been a lot of a lot

00:34:07.295 --> 00:34:10.290
<v Speaker 1>of hurdles for, you know, built complex

00:34:10.610 --> 00:34:11.650
<v Speaker 1>infrastructure.

00:34:12.130 --> 00:34:14.930
<v Speaker 0>Okay. Have you ever executed your disaster recovery

00:34:14.930 --> 00:34:15.650
<v Speaker 0>plan?

00:34:16.450 --> 00:34:17.730
<v Speaker 1>So we have,

00:34:18.210 --> 00:34:20.770
<v Speaker 1>for the ops side of things, we certainly

00:34:20.770 --> 00:34:22.530
<v Speaker 1>do. When I say ops, I'm just referring

00:34:22.530 --> 00:34:25.185
<v Speaker 1>to, like, our traditional, like, ECS,

00:34:25.185 --> 00:34:27.425
<v Speaker 1>custom internal Python for all that.

00:34:27.745 --> 00:34:30.465
<v Speaker 1>For the developer side of things, you know,

00:34:30.465 --> 00:34:32.065
<v Speaker 1>we've got those two bars of, like, what

00:34:32.065 --> 00:34:33.665
<v Speaker 1>do we need to get developers on board,

00:34:33.665 --> 00:34:35.025
<v Speaker 1>what do we need for prod?

00:34:35.345 --> 00:34:37.665
<v Speaker 1>And the prod threshold is where things like

00:34:37.665 --> 00:34:39.780
<v Speaker 1>the disaster recovery plan, you know, we certainly

00:34:39.780 --> 00:34:41.220
<v Speaker 1>need to have that in place and practice

00:34:41.220 --> 00:34:43.940
<v Speaker 1>before then. And so at this moment, it's

00:34:43.940 --> 00:34:45.540
<v Speaker 1>not as high of a priority as getting

00:34:45.540 --> 00:34:48.100
<v Speaker 1>the developers on board. So short answer is

00:34:48.100 --> 00:34:48.660
<v Speaker 1>no.

00:34:50.100 --> 00:34:50.660
<v Speaker 0>So

00:34:50.945 --> 00:34:52.864
<v Speaker 0>working with developers in the in the past.

00:34:52.864 --> 00:34:55.264
<v Speaker 0>Right? They're doing this migration to Kubernetes. Sometimes

00:34:55.264 --> 00:34:56.864
<v Speaker 0>it's a migration to containers.

00:34:57.105 --> 00:34:59.905
<v Speaker 0>Their old development environments have have changed. Right?

00:34:59.905 --> 00:35:02.785
<v Speaker 0>They don't just do composer install, a gem

00:35:02.785 --> 00:35:05.025
<v Speaker 0>install, a gem bundle, or a a pep

00:35:05.025 --> 00:35:07.780
<v Speaker 0>install. They now have all of these containers.

00:35:07.780 --> 00:35:09.700
<v Speaker 0>And if they're moving to Kubernetes, the chassis

00:35:09.700 --> 00:35:12.099
<v Speaker 0>either move into some sort of service oriented

00:35:12.099 --> 00:35:15.220
<v Speaker 0>architecture, maybe even microservice or arc microservice

00:35:15.220 --> 00:35:16.420
<v Speaker 0>oriented architecture.

00:35:16.819 --> 00:35:18.740
<v Speaker 0>The development environment gets a lot more complicated

00:35:18.740 --> 00:35:20.900
<v Speaker 0>to the point where working locally maybe isn't

00:35:20.900 --> 00:35:23.115
<v Speaker 0>an option anymore. So I'm curious

00:35:23.435 --> 00:35:25.275
<v Speaker 0>what is the setup look like and how

00:35:25.275 --> 00:35:27.435
<v Speaker 0>are you just handling that complexity about?

00:35:27.835 --> 00:35:30.235
<v Speaker 1>Yeah. So what we've got right now is

00:35:30.395 --> 00:35:31.835
<v Speaker 1>we have developers

00:35:31.835 --> 00:35:32.475
<v Speaker 1>that,

00:35:33.115 --> 00:35:34.890
<v Speaker 1>in the old environment, it would spin up

00:35:34.890 --> 00:35:37.609
<v Speaker 1>the entire stack of everything that you would

00:35:37.770 --> 00:35:40.090
<v Speaker 1>could potentially develop on it built,

00:35:40.410 --> 00:35:43.609
<v Speaker 1>and most developers don't need everything. Sometimes they

00:35:43.609 --> 00:35:44.970
<v Speaker 1>do, but not always.

00:35:45.369 --> 00:35:47.130
<v Speaker 1>And so in this new situation,

00:35:47.530 --> 00:35:50.315
<v Speaker 1>you only spin up in the cluster exactly

00:35:50.315 --> 00:35:51.195
<v Speaker 1>what you need.

00:35:51.515 --> 00:35:53.275
<v Speaker 1>So if you want to, you know, do

00:35:53.275 --> 00:35:54.954
<v Speaker 1>development on microservice

00:35:54.954 --> 00:35:57.035
<v Speaker 1>a, in order to do that, you have

00:35:57.035 --> 00:35:59.674
<v Speaker 1>a dependency of microservice like b, c, d,

00:35:59.674 --> 00:36:02.075
<v Speaker 1>e, f, and all of their AWS infrastructure.

00:36:02.799 --> 00:36:04.240
<v Speaker 1>And so but all you care about is

00:36:04.240 --> 00:36:06.240
<v Speaker 1>microservice a, and that's what you wanna develop

00:36:06.240 --> 00:36:08.400
<v Speaker 1>on. And so with that, that's where we

00:36:08.400 --> 00:36:10.880
<v Speaker 1>can spin up just that stack of resources

00:36:10.880 --> 00:36:13.040
<v Speaker 1>in their, namespace.

00:36:13.359 --> 00:36:15.200
<v Speaker 1>And then from there, now that they've got

00:36:15.200 --> 00:36:17.765
<v Speaker 1>all their dependencies in place, they're going to

00:36:17.765 --> 00:36:20.565
<v Speaker 1>want to do development on that microservice.

00:36:20.965 --> 00:36:22.485
<v Speaker 1>And using DevSpace,

00:36:22.485 --> 00:36:24.725
<v Speaker 1>as soon as they type DevSpace dev,

00:36:24.885 --> 00:36:26.645
<v Speaker 1>what it does when it kicks off that

00:36:26.645 --> 00:36:28.565
<v Speaker 1>script is it actually,

00:36:29.390 --> 00:36:31.390
<v Speaker 1>it starts off where, like, you know, you've

00:36:31.390 --> 00:36:32.990
<v Speaker 1>already got your home file installed for the

00:36:32.990 --> 00:36:35.550
<v Speaker 1>microservice that you want to work on, and

00:36:35.550 --> 00:36:38.110
<v Speaker 1>DevSpace is essentially just gonna, like, do an

00:36:38.110 --> 00:36:40.350
<v Speaker 1>upgrade install over that, and it's gonna put

00:36:40.350 --> 00:36:42.350
<v Speaker 1>some of its magic in there. And it's

00:36:42.350 --> 00:36:44.714
<v Speaker 1>going to sync everything that you have locally

00:36:44.714 --> 00:36:47.755
<v Speaker 1>that you define that you wanted synced remotely,

00:36:47.755 --> 00:36:49.835
<v Speaker 1>and it's gonna place that into your remote

00:36:49.835 --> 00:36:50.555
<v Speaker 1>container.

00:36:51.194 --> 00:36:54.075
<v Speaker 1>And so at this point, the developer actually

00:36:54.075 --> 00:36:57.035
<v Speaker 1>has the experience that it is local because

00:36:57.035 --> 00:37:00.010
<v Speaker 1>they can work in Versus Code or IntelliJ

00:37:00.010 --> 00:37:02.329
<v Speaker 1>or whatever they're using. And as soon as

00:37:02.329 --> 00:37:05.369
<v Speaker 1>they, like, make changes and save them locally,

00:37:05.369 --> 00:37:07.050
<v Speaker 1>it's gonna sync it remotely.

00:37:07.130 --> 00:37:08.730
<v Speaker 1>And then that way, they're able to test

00:37:08.730 --> 00:37:11.450
<v Speaker 1>their changes against all of those other microservice

00:37:11.450 --> 00:37:12.170
<v Speaker 1>dependencies,

00:37:12.605 --> 00:37:14.684
<v Speaker 1>and they can just iterate a lot faster

00:37:14.684 --> 00:37:17.325
<v Speaker 1>where they've got all this remote stack. And,

00:37:17.484 --> 00:37:19.325
<v Speaker 1>yeah, it just comes off as if it

00:37:19.325 --> 00:37:21.405
<v Speaker 1>is a, like, local environment.

00:37:21.565 --> 00:37:24.125
<v Speaker 0>Awesome. That's DevSpace by Loft. Right? That's the

00:37:24.125 --> 00:37:26.444
<v Speaker 0>same project? Yep. Which I think is in

00:37:26.444 --> 00:37:28.684
<v Speaker 1>the CNCF now. I wanna say they just

00:37:29.460 --> 00:37:31.300
<v Speaker 0>yeah. Yeah. I think it was donated to

00:37:31.300 --> 00:37:33.380
<v Speaker 0>the CNCF. That's awesome. Very cool. Yeah. It's

00:37:33.380 --> 00:37:35.540
<v Speaker 0>one of those things that I personally struggle

00:37:35.540 --> 00:37:39.380
<v Speaker 0>with. Development environments in Kubernetes is definitely challenging.

00:37:39.380 --> 00:37:40.820
<v Speaker 0>And I think we're really lucky right now

00:37:40.820 --> 00:37:43.380
<v Speaker 0>to have things like DevSpace and Telepresence and

00:37:43.380 --> 00:37:43.940
<v Speaker 0>Scaffold.

00:37:44.475 --> 00:37:46.395
<v Speaker 0>And I'm sure there's many more that I'm

00:37:46.395 --> 00:37:49.915
<v Speaker 0>forgetting. So yeah. Definitely awesome. We've covered, like,

00:37:49.915 --> 00:37:52.155
<v Speaker 0>challenges. We've covered some benefits,

00:37:52.875 --> 00:37:54.715
<v Speaker 0>things that you're getting things that went wrong,

00:37:54.715 --> 00:37:56.475
<v Speaker 0>things that are going really well. And I'm

00:37:56.475 --> 00:37:58.075
<v Speaker 0>just curious, you know, you're nine months into

00:37:58.075 --> 00:38:00.580
<v Speaker 0>this migration. Developers are being onboarded, so I'm

00:38:00.580 --> 00:38:02.020
<v Speaker 0>assuming the answer is yes, but I'll let

00:38:02.020 --> 00:38:03.859
<v Speaker 0>you go into more detail. Like, is this

00:38:03.859 --> 00:38:04.980
<v Speaker 0>a net positive

00:38:05.300 --> 00:38:08.340
<v Speaker 0>adopting Kubernetes going through the trials and tribulations

00:38:08.340 --> 00:38:09.300
<v Speaker 0>of having

00:38:09.619 --> 00:38:12.580
<v Speaker 0>services and containers and the cloud with all

00:38:12.580 --> 00:38:13.460
<v Speaker 0>this ephemerality?

00:38:13.944 --> 00:38:14.345
<v Speaker 1>It

00:38:14.744 --> 00:38:15.545
<v Speaker 1>build,

00:38:15.545 --> 00:38:18.744
<v Speaker 1>certainly. And, yeah, I think, obviously, that's gonna

00:38:18.744 --> 00:38:21.385
<v Speaker 1>vary from company to company, but the

00:38:21.704 --> 00:38:22.585
<v Speaker 1>complexity

00:38:22.585 --> 00:38:24.984
<v Speaker 1>is not going away, and it's only continuing

00:38:24.984 --> 00:38:27.750
<v Speaker 1>to grow. And so, you know, wrangling that

00:38:27.750 --> 00:38:28.630
<v Speaker 1>complexity

00:38:28.630 --> 00:38:31.590
<v Speaker 1>is just getting more and more expensive in

00:38:31.590 --> 00:38:33.510
<v Speaker 1>the way that we were doing things, certainly

00:38:33.510 --> 00:38:35.270
<v Speaker 1>around in developer environments.

00:38:35.590 --> 00:38:37.590
<v Speaker 1>And so by, you know, doing this work

00:38:37.590 --> 00:38:40.390
<v Speaker 1>now and allowing developers to have these environments,

00:38:40.865 --> 00:38:43.025
<v Speaker 1>they're able to move a lot faster, which

00:38:43.025 --> 00:38:45.424
<v Speaker 1>saves them time, gets more features out a

00:38:45.424 --> 00:38:47.984
<v Speaker 1>lot faster, and, you know, ultimately just helps

00:38:47.984 --> 00:38:49.825
<v Speaker 1>out with the the business value of, like,

00:38:49.825 --> 00:38:51.265
<v Speaker 1>why does this company exist?

00:38:51.424 --> 00:38:53.424
<v Speaker 1>It's to meet the needs of our customers,

00:38:53.424 --> 00:38:55.130
<v Speaker 1>and the faster we can create features for

00:38:55.130 --> 00:38:57.210
<v Speaker 1>that, the better it is. And so that

00:38:57.210 --> 00:38:58.970
<v Speaker 1>is a problem that it is, you know,

00:38:58.970 --> 00:39:00.970
<v Speaker 1>starting to solve today with a lot of

00:39:00.970 --> 00:39:02.410
<v Speaker 1>these you know, with the teams that are

00:39:02.410 --> 00:39:03.130
<v Speaker 1>on board.

00:39:03.610 --> 00:39:05.450
<v Speaker 1>And so I think that's just gonna continue

00:39:05.450 --> 00:39:06.650
<v Speaker 1>to pay dividends,

00:39:06.730 --> 00:39:07.610
<v Speaker 1>especially as it matures,

00:39:08.085 --> 00:39:10.085
<v Speaker 1>the platform gets better, and, you know, new

00:39:10.085 --> 00:39:12.724
<v Speaker 1>microservices come on board. Maybe we change some

00:39:12.724 --> 00:39:14.885
<v Speaker 1>of that architecture of how the apps are

00:39:14.885 --> 00:39:17.285
<v Speaker 1>configured. And, you know, with all of that,

00:39:17.285 --> 00:39:19.845
<v Speaker 1>just continuing to reduce the time that it

00:39:19.845 --> 00:39:22.405
<v Speaker 1>takes developers to get features out to customers,

00:39:22.724 --> 00:39:24.950
<v Speaker 1>this is certainly a net positive.

00:39:25.030 --> 00:39:25.430
<v Speaker 1>So

00:39:26.470 --> 00:39:28.150
<v Speaker 0>Wow. I mean, I kinda wanna end the

00:39:28.150 --> 00:39:30.150
<v Speaker 0>episode there because, like, that last thirty seconds,

00:39:30.150 --> 00:39:31.670
<v Speaker 0>so I'm by the CNCF should be paying

00:39:31.670 --> 00:39:32.390
<v Speaker 0>you for.

00:39:33.750 --> 00:39:35.589
<v Speaker 1>I'm getting royalties. Who's saying?

00:39:37.665 --> 00:39:39.905
<v Speaker 0>Alright. Well, thank you for sharing your story.

00:39:39.905 --> 00:39:41.265
<v Speaker 0>It's been really insightful.

00:39:41.265 --> 00:39:43.745
<v Speaker 0>And just learning about this migration, the way

00:39:43.745 --> 00:39:45.185
<v Speaker 0>that you're doing that. I love that you've

00:39:45.185 --> 00:39:47.265
<v Speaker 0>mentioned tools all the way through. I can

00:39:47.265 --> 00:39:49.265
<v Speaker 0>just imagine people sitting there writing these down

00:39:49.265 --> 00:39:50.465
<v Speaker 0>and going to check them out when they

00:39:50.465 --> 00:39:52.305
<v Speaker 0>get a chance. So thank you so much

00:39:52.305 --> 00:39:54.760
<v Speaker 0>for that. I'll now give you the opportunity

00:39:54.760 --> 00:39:57.000
<v Speaker 0>to plug yourself, your blog, your Twitter, your

00:39:57.000 --> 00:39:59.240
<v Speaker 0>LinkedIn, your company, anything you want. Feel free

00:39:59.240 --> 00:40:01.240
<v Speaker 0>to to share away. Sure.

00:40:01.720 --> 00:40:03.160
<v Speaker 1>Yeah. I guess the first shout out I

00:40:03.160 --> 00:40:05.000
<v Speaker 1>would give is, you know, just to Build.

00:40:05.000 --> 00:40:07.000
<v Speaker 1>It's been a, you know, an amazing place

00:40:07.000 --> 00:40:09.285
<v Speaker 1>to work with some incredible talent here.

00:40:09.605 --> 00:40:11.685
<v Speaker 1>Unfortunately, we're not hiring DevOps people at the

00:40:11.685 --> 00:40:13.925
<v Speaker 1>moment, but if an availability comes up, I

00:40:13.925 --> 00:40:16.645
<v Speaker 1>would definitely encourage people to reach out. And

00:40:16.645 --> 00:40:18.645
<v Speaker 1>I found that I've been learning so much

00:40:18.645 --> 00:40:21.380
<v Speaker 1>here recently, and it's just really fun. There's

00:40:21.380 --> 00:40:22.980
<v Speaker 1>so many great people to work with and

00:40:22.980 --> 00:40:25.780
<v Speaker 1>fun challenges, and so that's really allowed me

00:40:25.780 --> 00:40:27.540
<v Speaker 1>to thrive, and that's been fun.

00:40:28.180 --> 00:40:30.340
<v Speaker 1>Also, Fairwinds. You know, if you're entering the

00:40:30.340 --> 00:40:33.940
<v Speaker 1>Kubernetes space, Fairwinds has so many great open

00:40:33.940 --> 00:40:34.820
<v Speaker 1>source tools.

00:40:35.305 --> 00:40:36.985
<v Speaker 1>There's things like Polaris.

00:40:36.985 --> 00:40:38.585
<v Speaker 1>There's things like Goldilocks,

00:40:38.585 --> 00:40:39.305
<v Speaker 1>Pluto.

00:40:39.545 --> 00:40:41.305
<v Speaker 1>The list goes on and on. You know?

00:40:41.305 --> 00:40:43.465
<v Speaker 1>And whether you want to know best practices

00:40:43.465 --> 00:40:45.465
<v Speaker 1>or you wanna right size containers,

00:40:45.625 --> 00:40:47.465
<v Speaker 1>there's a lot of great stuff that Fairwinds

00:40:47.465 --> 00:40:48.185
<v Speaker 1>produces.

00:40:48.425 --> 00:40:50.390
<v Speaker 1>They also have a great SaaS product, you

00:40:50.390 --> 00:40:51.990
<v Speaker 1>know, if that's something that, you know, as

00:40:51.990 --> 00:40:54.390
<v Speaker 1>the complexity grows and you have many clusters,

00:40:54.390 --> 00:40:56.630
<v Speaker 1>how do you get visibility into that? There's

00:40:56.630 --> 00:40:58.390
<v Speaker 1>just a lot of wonderful things coming out

00:40:58.390 --> 00:41:00.390
<v Speaker 1>of Fairwinds to help people manage all of

00:41:00.390 --> 00:41:02.493
<v Speaker 1>that. And so, yeah, those are definitely things

00:41:02.493 --> 00:41:04.733
<v Speaker 1>I would encourage people to look into and

00:41:04.813 --> 00:41:05.373
<v Speaker 1>yeah.

00:41:05.613 --> 00:41:07.933
<v Speaker 0>Alright. Awesome. Well, thank you very much for

00:41:07.933 --> 00:41:09.533
<v Speaker 0>your time. I hope we speak again soon.

00:41:09.533 --> 00:41:10.173
<v Speaker 0>Have a great day.
