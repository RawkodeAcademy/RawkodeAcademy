WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: f1e3126d-244b-4907-a2cb-c493cb414eef
Created: 2025-04-29T16:45:11.578Z
Duration: 576.68567
Channels: 1

00:00:05.520 --> 00:00:06.320
<v Speaker 0>Hello,

00:00:06.879 --> 00:00:09.200
<v Speaker 0>and welcome to tutorial two

00:00:10.320 --> 00:00:13.839
<v Speaker 0>part three of the complete gate to InfluxDB

00:00:14.000 --> 00:00:14.240
<v Speaker 0>two.

00:00:16.184 --> 00:00:16.985
<v Speaker 0>Today,

00:00:16.985 --> 00:00:18.664
<v Speaker 0>we're gonna take a look at what happens

00:00:18.664 --> 00:00:22.025
<v Speaker 0>after you first install or run InfluxDB.

00:00:22.105 --> 00:00:24.185
<v Speaker 0>We're going to run through the setup and

00:00:24.185 --> 00:00:26.105
<v Speaker 0>do a high level exploration

00:00:26.105 --> 00:00:28.505
<v Speaker 0>of the user interface and the different components

00:00:28.980 --> 00:00:30.740
<v Speaker 0>just to give you enough that you can

00:00:30.740 --> 00:00:33.379
<v Speaker 0>start to experiment and play with InfluxDB

00:00:33.540 --> 00:00:34.660
<v Speaker 0>on your own.

00:00:36.660 --> 00:00:37.860
<v Speaker 0>So let's get started.

00:00:39.699 --> 00:00:42.020
<v Speaker 0>Now I have just run InfluxD

00:00:42.395 --> 00:00:44.394
<v Speaker 0>like we did on the previous lesson.

00:00:45.035 --> 00:00:47.195
<v Speaker 0>Only I have not started on get started

00:00:47.195 --> 00:00:48.954
<v Speaker 0>yet, which we have to do now.

00:00:49.434 --> 00:00:52.555
<v Speaker 0>The thing that's important here is that InfluxDB

00:00:52.555 --> 00:00:53.354
<v Speaker 0>two does

00:00:53.914 --> 00:00:57.560
<v Speaker 0>not allow you to run or operate it

00:00:57.560 --> 00:01:00.840
<v Speaker 0>without configuring your first admin user.

00:01:01.160 --> 00:01:02.280
<v Speaker 0>Authentication

00:01:02.280 --> 00:01:03.960
<v Speaker 0>cannot be disabled.

00:01:04.760 --> 00:01:06.600
<v Speaker 0>You have to provide a username,

00:01:07.745 --> 00:01:09.585
<v Speaker 0>a secure password,

00:01:09.585 --> 00:01:11.665
<v Speaker 0>preferably not password one two three,

00:01:12.785 --> 00:01:14.945
<v Speaker 0>followed by an organization

00:01:14.945 --> 00:01:17.265
<v Speaker 0>name and a bucket name.

00:01:17.665 --> 00:01:18.705
<v Speaker 0>Let's talk about that.

00:01:21.210 --> 00:01:22.090
<v Speaker 0>InfluxDB

00:01:22.090 --> 00:01:25.210
<v Speaker 0>two point is multi tenant by default and

00:01:25.210 --> 00:01:26.650
<v Speaker 0>that your data,

00:01:27.130 --> 00:01:28.170
<v Speaker 0>dashboards,

00:01:28.729 --> 00:01:30.010
<v Speaker 0>your metrics

00:01:30.010 --> 00:01:31.450
<v Speaker 0>can all be

00:01:32.490 --> 00:01:34.090
<v Speaker 0>separated by organisations.

00:01:35.765 --> 00:01:38.805
<v Speaker 0>For today, I will create an organisation called

00:01:38.805 --> 00:01:39.685
<v Speaker 0>Rawkode.

00:01:40.565 --> 00:01:41.845
<v Speaker 0>Then we have buckets.

00:01:41.925 --> 00:01:43.445
<v Speaker 0>So we have to create our first bucket

00:01:43.445 --> 00:01:45.045
<v Speaker 0>as part of our organisation.

00:01:45.525 --> 00:01:48.165
<v Speaker 0>And buckets can be thought of like databases

00:01:48.245 --> 00:01:50.645
<v Speaker 0>in your more traditional database system.

00:01:51.670 --> 00:01:55.030
<v Speaker 0>Buckets and a time series database, specifically InfluxDB,

00:01:55.030 --> 00:01:56.630
<v Speaker 0>have retention policies.

00:01:56.950 --> 00:01:58.710
<v Speaker 0>So you use buckets as a way to

00:01:58.710 --> 00:02:01.750
<v Speaker 0>determine when data within that bucket should automatically

00:02:01.750 --> 00:02:02.710
<v Speaker 0>be expired.

00:02:03.865 --> 00:02:06.185
<v Speaker 0>For today, we will call this

00:02:06.585 --> 00:02:07.384
<v Speaker 0>tutorial.

00:02:10.185 --> 00:02:11.945
<v Speaker 0>That is us set up.

00:02:12.265 --> 00:02:13.944
<v Speaker 0>We could now log out and log back

00:02:13.944 --> 00:02:15.145
<v Speaker 0>in if we really wanted.

00:02:16.560 --> 00:02:17.680
<v Speaker 0>So InfluxDB

00:02:17.680 --> 00:02:19.440
<v Speaker 0>has a few different options that allow you

00:02:19.440 --> 00:02:20.400
<v Speaker 0>to get started.

00:02:20.800 --> 00:02:23.760
<v Speaker 0>You can go through some local metric collections.

00:02:24.000 --> 00:02:27.120
<v Speaker 0>You can start to specify and configure Telegraph,

00:02:27.280 --> 00:02:28.720
<v Speaker 0>or you could just say, I will do

00:02:28.720 --> 00:02:30.320
<v Speaker 0>this later, which is what we're going to

00:02:30.320 --> 00:02:30.880
<v Speaker 0>choose now.

00:02:32.135 --> 00:02:34.295
<v Speaker 0>So this is the user interface and this

00:02:34.295 --> 00:02:36.055
<v Speaker 0>is the getting started page.

00:02:36.295 --> 00:02:38.055
<v Speaker 0>We can use the load your data, build

00:02:38.055 --> 00:02:40.215
<v Speaker 0>a dashboard, or set up alerting buttons to

00:02:40.215 --> 00:02:40.775
<v Speaker 0>get,

00:02:41.015 --> 00:02:41.655
<v Speaker 0>well,

00:02:41.815 --> 00:02:43.975
<v Speaker 0>to get started on each of those tasks.

00:02:44.775 --> 00:02:46.519
<v Speaker 0>What we're gonna do first is just take

00:02:46.519 --> 00:02:48.120
<v Speaker 0>a look at the data tab.

00:02:49.400 --> 00:02:51.319
<v Speaker 0>So InfluxDB

00:02:51.319 --> 00:02:53.799
<v Speaker 0>has really great support across all of these

00:02:53.799 --> 00:02:56.680
<v Speaker 0>different client libraries and Telegraph plugins to start

00:02:56.680 --> 00:02:59.475
<v Speaker 0>getting metrics into your system. So it doesn't

00:02:59.475 --> 00:03:02.435
<v Speaker 0>matter what your stack is in your organization.

00:03:02.915 --> 00:03:04.755
<v Speaker 0>There is a pretty good chance that you

00:03:04.755 --> 00:03:07.635
<v Speaker 0>can get data into your InfluxDB two instance

00:03:08.035 --> 00:03:08.755
<v Speaker 0>pretty quickly.

00:03:10.690 --> 00:03:12.370
<v Speaker 0>We can click on buckets and we see

00:03:12.370 --> 00:03:14.530
<v Speaker 0>our bucket here, our tutorial one was created

00:03:14.530 --> 00:03:17.170
<v Speaker 0>with a retention policy of forever.

00:03:17.330 --> 00:03:19.250
<v Speaker 0>This means that any data that we write

00:03:19.250 --> 00:03:21.810
<v Speaker 0>to the tutorial bucket will never be expired.

00:03:23.085 --> 00:03:25.245
<v Speaker 0>Let's just create one more bucket

00:03:25.565 --> 00:03:27.005
<v Speaker 0>and we'll call this

00:03:28.605 --> 00:03:29.805
<v Speaker 0>five ms

00:03:31.245 --> 00:03:33.005
<v Speaker 0>and the

00:03:34.205 --> 00:03:36.285
<v Speaker 0>shortest retention policy is one hour, so we'll

00:03:36.285 --> 00:03:37.725
<v Speaker 0>call it one hour and

00:03:37.725 --> 00:03:38.525
<v Speaker 0>we will click create.

00:03:39.340 --> 00:03:40.860
<v Speaker 0>You can see now we have our one

00:03:40.860 --> 00:03:42.700
<v Speaker 0>hour bucket with our retention policy of one

00:03:42.700 --> 00:03:43.260
<v Speaker 0>hour.

00:03:44.460 --> 00:03:47.340
<v Speaker 0>Now, what happens here is InfluxDB runs compactions

00:03:47.340 --> 00:03:49.500
<v Speaker 0>at a regular interval and we'll look for

00:03:49.500 --> 00:03:51.944
<v Speaker 0>shards within each of these buckets that are

00:03:51.944 --> 00:03:53.705
<v Speaker 0>older than the time that we allow through

00:03:53.705 --> 00:03:56.584
<v Speaker 0>retention policy and also be automatically deleted for

00:03:56.584 --> 00:03:57.145
<v Speaker 0>us.

00:03:57.545 --> 00:03:59.545
<v Speaker 0>In future episodes of this course, we'll be

00:03:59.545 --> 00:04:01.065
<v Speaker 0>looking at how to downsample

00:04:01.065 --> 00:04:03.305
<v Speaker 0>and change the resolution of our data to

00:04:03.305 --> 00:04:05.545
<v Speaker 0>allow us to move it between buckets

00:04:06.040 --> 00:04:08.280
<v Speaker 0>that we can have high frequency, high resolution

00:04:08.280 --> 00:04:09.960
<v Speaker 0>data that lives for a short amount of

00:04:09.960 --> 00:04:11.960
<v Speaker 0>time and then aggregate it into other buckets

00:04:11.960 --> 00:04:13.880
<v Speaker 0>which live for a longer amount of time.

00:04:14.040 --> 00:04:15.720
<v Speaker 0>We talked about this briefly

00:04:15.800 --> 00:04:18.200
<v Speaker 0>in the very first part of this course,

00:04:18.200 --> 00:04:19.880
<v Speaker 0>an introduction to time series.

00:04:20.425 --> 00:04:22.185
<v Speaker 0>So stay tuned for that video.

00:04:23.465 --> 00:04:26.105
<v Speaker 0>The Telegraph UI allows us to very quickly

00:04:26.105 --> 00:04:28.345
<v Speaker 0>create a Telegraph configuration.

00:04:29.225 --> 00:04:30.985
<v Speaker 0>We can click on the components that we

00:04:30.985 --> 00:04:33.545
<v Speaker 0>have in our system and it will actually,

00:04:33.705 --> 00:04:34.825
<v Speaker 0>if we click continue,

00:04:35.650 --> 00:04:37.650
<v Speaker 0>allow us to configure

00:04:38.610 --> 00:04:39.250
<v Speaker 0>where

00:04:39.889 --> 00:04:41.570
<v Speaker 0>our Docker socket is.

00:04:42.130 --> 00:04:43.250
<v Speaker 0>For Kubernetes,

00:04:43.330 --> 00:04:44.849
<v Speaker 0>we can specify the URL.

00:04:48.925 --> 00:04:50.845
<v Speaker 0>Not the right port, but it's okay.

00:04:51.085 --> 00:04:52.285
<v Speaker 0>For NGINX,

00:04:53.405 --> 00:04:56.205
<v Speaker 0>and this does require your NGINX to have

00:04:56.205 --> 00:04:56.845
<v Speaker 0>the

00:04:57.245 --> 00:04:58.925
<v Speaker 0>stats plugin enabled.

00:04:59.165 --> 00:05:00.845
<v Speaker 0>We configure Redis. Now I'm not going to

00:05:00.845 --> 00:05:02.205
<v Speaker 0>do all of these because we don't need

00:05:02.205 --> 00:05:04.580
<v Speaker 0>them all. What I'm going to do is

00:05:04.580 --> 00:05:05.460
<v Speaker 0>disable

00:05:06.259 --> 00:05:06.980
<v Speaker 0>these.

00:05:07.060 --> 00:05:10.260
<v Speaker 0>We'll have our system. We'll select the one

00:05:10.979 --> 00:05:12.180
<v Speaker 0>hour bucket

00:05:12.340 --> 00:05:14.180
<v Speaker 0>and click continue. And we could give this

00:05:14.180 --> 00:05:16.260
<v Speaker 0>a name. We'll just call this system

00:05:16.979 --> 00:05:17.460
<v Speaker 0>monitoring.

00:05:19.535 --> 00:05:21.695
<v Speaker 0>This now gives us an InfluxDB

00:05:21.695 --> 00:05:22.495
<v Speaker 0>token

00:05:22.655 --> 00:05:24.975
<v Speaker 0>that we can export to our environment.

00:05:25.535 --> 00:05:27.535
<v Speaker 0>And a really cool feature of Telegraph that

00:05:27.535 --> 00:05:28.895
<v Speaker 0>we haven't covered yet,

00:05:29.215 --> 00:05:30.495
<v Speaker 0>and we will be in the next video

00:05:30.495 --> 00:05:32.415
<v Speaker 0>in a bit more detail, is the remote

00:05:32.415 --> 00:05:33.535
<v Speaker 0>configuration

00:05:33.360 --> 00:05:36.000
<v Speaker 0>where you can specify the URL to pull

00:05:36.319 --> 00:05:37.919
<v Speaker 0>your Telegraph config.

00:05:39.199 --> 00:05:41.599
<v Speaker 0>We can click finish here. Now the alternative

00:05:41.599 --> 00:05:43.199
<v Speaker 0>approach if you don't want to use the

00:05:43.199 --> 00:05:45.039
<v Speaker 0>remote configuration is to click on this one

00:05:45.039 --> 00:05:45.360
<v Speaker 0>more time,

00:05:46.075 --> 00:05:48.155
<v Speaker 0>and you can download it or copy and

00:05:48.155 --> 00:05:49.835
<v Speaker 0>paste it. And you'll see this is the

00:05:49.835 --> 00:05:52.155
<v Speaker 0>TOML required for each of the plugins that

00:05:52.155 --> 00:05:52.955
<v Speaker 0>we use.

00:05:53.755 --> 00:05:55.835
<v Speaker 0>Now you will still have to export your

00:05:55.835 --> 00:05:58.235
<v Speaker 0>Influx token to your environment for this configuration

00:05:58.235 --> 00:05:58.715
<v Speaker 0>to work.

00:06:01.740 --> 00:06:03.260
<v Speaker 0>Next, we have scrapers.

00:06:03.900 --> 00:06:05.100
<v Speaker 0>So InfluxDB

00:06:05.100 --> 00:06:07.660
<v Speaker 0>has built in support for fetching metrics from

00:06:07.660 --> 00:06:10.540
<v Speaker 0>remote endpoints. This works really well for Prometheus

00:06:10.540 --> 00:06:12.380
<v Speaker 0>endpoints that you have available where you want

00:06:12.380 --> 00:06:13.580
<v Speaker 0>to be able to scrape them on a

00:06:13.580 --> 00:06:14.300
<v Speaker 0>regular cadence,

00:06:15.175 --> 00:06:16.455
<v Speaker 0>but we're not going to be using that

00:06:16.455 --> 00:06:17.015
<v Speaker 0>today.

00:06:17.655 --> 00:06:19.415
<v Speaker 0>Lastly, on the data tab, we have the

00:06:19.415 --> 00:06:22.135
<v Speaker 0>ability to manage our tokens. This is my

00:06:22.135 --> 00:06:24.215
<v Speaker 0>initial admin token that was created when I

00:06:24.215 --> 00:06:25.335
<v Speaker 0>created the user,

00:06:25.655 --> 00:06:27.815
<v Speaker 0>and this is my generated token for the

00:06:27.815 --> 00:06:31.400
<v Speaker 0>Influx config that we generated through the UI.

00:06:34.040 --> 00:06:35.960
<v Speaker 0>Next, we have the Explore tab.

00:06:36.120 --> 00:06:38.200
<v Speaker 0>From here, we can begin to explore the

00:06:38.200 --> 00:06:39.960
<v Speaker 0>metrics that we have in our system.

00:06:40.200 --> 00:06:42.360
<v Speaker 0>Now, we don't have any metrics because we're

00:06:42.360 --> 00:06:43.640
<v Speaker 0>not collecting anything yet,

00:06:44.575 --> 00:06:46.895
<v Speaker 0>but we will be covering using the Explore

00:06:46.895 --> 00:06:49.135
<v Speaker 0>API and Avedio validation.

00:06:51.215 --> 00:06:54.495
<v Speaker 0>Next, have boards, which allows us to visualise

00:06:54.495 --> 00:06:55.295
<v Speaker 0>our data.

00:06:55.695 --> 00:06:58.890
<v Speaker 0>Now, because we generated our first Telegraph configuration

00:06:58.890 --> 00:07:02.250
<v Speaker 0>through the UI, this dashboard was added automatically.

00:07:02.650 --> 00:07:04.730
<v Speaker 0>Now if I were to begin running Telegraph,

00:07:04.730 --> 00:07:06.810
<v Speaker 0>we would see metrics and visualizations begin to

00:07:06.810 --> 00:07:07.610
<v Speaker 0>come in here.

00:07:09.530 --> 00:07:11.370
<v Speaker 0>The next tab we have is tasks.

00:07:11.805 --> 00:07:13.805
<v Speaker 0>We will be spending a significant

00:07:14.205 --> 00:07:16.285
<v Speaker 0>amount of effort playing with tasks over the

00:07:16.285 --> 00:07:17.325
<v Speaker 0>next week or two

00:07:17.725 --> 00:07:19.965
<v Speaker 0>because it's key to the way that we

00:07:19.965 --> 00:07:23.245
<v Speaker 0>work with downsampling and alerting our InfluxDB system.

00:07:23.900 --> 00:07:26.620
<v Speaker 0>Tasks allow us to write flux scripts that

00:07:26.620 --> 00:07:28.700
<v Speaker 0>can fetch and manipulate the data within our

00:07:28.700 --> 00:07:31.580
<v Speaker 0>database and use them to drive decisions and

00:07:31.580 --> 00:07:33.740
<v Speaker 0>automations in our infrastructure.

00:07:34.540 --> 00:07:36.780
<v Speaker 0>The next workshop will be this week, and

00:07:36.780 --> 00:07:38.620
<v Speaker 0>it will be focusing on writing your first

00:07:38.620 --> 00:07:40.715
<v Speaker 0>flux. Make sure to catch that.

00:07:43.435 --> 00:07:46.075
<v Speaker 0>Next, have the alerts tab. The alerts tab

00:07:46.075 --> 00:07:49.035
<v Speaker 0>allows us to then use our metrics to

00:07:49.035 --> 00:07:51.595
<v Speaker 0>be able to trigger notifications to Slack,

00:07:51.675 --> 00:07:54.520
<v Speaker 0>email, HTTP endpoints, and more,

00:07:54.920 --> 00:07:56.840
<v Speaker 0>so that we can understand and

00:07:57.160 --> 00:07:58.360
<v Speaker 0>trigger pagers,

00:07:58.440 --> 00:08:02.040
<v Speaker 0>send Slack messages, just get someone's attention when

00:08:02.040 --> 00:08:03.560
<v Speaker 0>we have an anomaly within our system.

00:08:05.015 --> 00:08:06.055
<v Speaker 0>And lastly,

00:08:06.135 --> 00:08:08.055
<v Speaker 0>we have our settings tab.

00:08:08.855 --> 00:08:11.335
<v Speaker 0>InfluxDB allows us to define variables that can

00:08:11.335 --> 00:08:13.015
<v Speaker 0>be used in our Flux scripts.

00:08:13.655 --> 00:08:15.895
<v Speaker 0>You can see here that the variable can

00:08:15.895 --> 00:08:18.215
<v Speaker 0>be of type query, map, or CSV.

00:08:18.215 --> 00:08:20.720
<v Speaker 0>So there's multiple ways to provide static values

00:08:20.720 --> 00:08:22.880
<v Speaker 0>or dynamic values from a query

00:08:23.600 --> 00:08:26.640
<v Speaker 0>to your Flux tasks and queries.

00:08:28.880 --> 00:08:31.520
<v Speaker 0>One of the coolest things about InfluxDB's

00:08:31.520 --> 00:08:34.400
<v Speaker 0>latest version, version two, is templates.

00:08:35.235 --> 00:08:37.875
<v Speaker 0>We will be spending also a significant amount

00:08:37.875 --> 00:08:40.434
<v Speaker 0>of time on using the GetOps pattern to

00:08:40.434 --> 00:08:42.674
<v Speaker 0>apply our telegraph configurations,

00:08:42.674 --> 00:08:44.595
<v Speaker 0>our dashboards and our tasks

00:08:44.755 --> 00:08:46.115
<v Speaker 0>using InfluxDB

00:08:46.115 --> 00:08:46.835
<v Speaker 0>two templates.

00:08:47.259 --> 00:08:48.860
<v Speaker 0>But we won't be looking at this today,

00:08:48.860 --> 00:08:50.060
<v Speaker 0>but we will have a really cool video

00:08:50.060 --> 00:08:51.339
<v Speaker 0>on that coming soon.

00:08:52.139 --> 00:08:54.060
<v Speaker 0>And lastly, we have the ability to manage

00:08:54.060 --> 00:08:55.019
<v Speaker 0>our labels.

00:08:55.500 --> 00:08:57.579
<v Speaker 0>Labels can be applied to any dashboard and

00:08:57.579 --> 00:08:58.940
<v Speaker 0>task, notebook, etcetera.

00:09:00.254 --> 00:09:03.774
<v Speaker 0>Cool feature. It just helps us manage

00:09:03.774 --> 00:09:06.815
<v Speaker 0>and structure the resources that we have available

00:09:06.815 --> 00:09:09.535
<v Speaker 0>in our InfluxDB two system.

00:09:10.815 --> 00:09:12.574
<v Speaker 0>So that's again in CertiKate.

00:09:12.654 --> 00:09:14.815
<v Speaker 0>Stay tuned. There'll be more videos coming really

00:09:14.815 --> 00:09:15.055
<v Speaker 0>soon.

00:09:16.150 --> 00:09:17.670
<v Speaker 0>I'll speak to you later. Have a great

00:09:17.670 --> 00:09:17.910
<v Speaker 0>day.
