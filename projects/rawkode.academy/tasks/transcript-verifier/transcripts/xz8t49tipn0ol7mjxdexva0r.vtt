WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 5a1de86e-4be1-44f5-a326-19c8e9cb63dc
Created: 2025-06-05T21:57:05.413Z
Duration: 2371.2654
Channels: 1

00:00:00.160 --> 00:00:03.280
<v Speaker 0>Atlantis is my second favorite spin off of

00:00:03.280 --> 00:00:04.560
<v Speaker 0>the Stargate series,

00:00:04.960 --> 00:00:07.200
<v Speaker 0>but that's not what this episode is about.

00:00:07.359 --> 00:00:08.959
<v Speaker 1>Wait. What was your first?

00:00:09.679 --> 00:00:12.400
<v Speaker 1>In all seriousness though, David couldn't even stop

00:00:12.400 --> 00:00:15.395
<v Speaker 1>asking questions because it was so interesting. Terraform

00:00:15.395 --> 00:00:18.355
<v Speaker 0>automation is a very important aspect of production

00:00:18.355 --> 00:00:19.155
<v Speaker 0>engineering,

00:00:19.155 --> 00:00:21.395
<v Speaker 0>so I was genuinely excited. You weren't the

00:00:21.395 --> 00:00:23.075
<v Speaker 1>only one. Today, we got to talk with

00:00:23.075 --> 00:00:25.474
<v Speaker 1>one of the maintainers of Project Atlantis,

00:00:25.555 --> 00:00:28.515
<v Speaker 1>a Terraform pull request automation system. So let's

00:00:28.515 --> 00:00:31.610
<v Speaker 0>go deep, deep undersea and explore the wonderful

00:00:31.610 --> 00:00:33.130
<v Speaker 0>world of Atlantis.

00:00:33.850 --> 00:00:34.970
<v Speaker 1>Not Stargate.

00:00:35.130 --> 00:00:38.650
<v Speaker 1>Alright. While David is having some tea, we

00:00:38.650 --> 00:00:41.050
<v Speaker 1>are welcoming a new guest today

00:00:41.210 --> 00:00:43.370
<v Speaker 1>to talk a little bit about the Atlantis

00:00:43.370 --> 00:00:43.770
<v Speaker 1>project.

00:00:44.225 --> 00:00:45.905
<v Speaker 1>Pepe, do you want to introduce yourself and

00:00:45.905 --> 00:00:46.785
<v Speaker 1>tell us a little bit about Sure.

00:00:47.664 --> 00:00:49.425
<v Speaker 2>I'm, my name is Pepe.

00:00:49.425 --> 00:00:51.184
<v Speaker 2>Well, it's my nickname. My real name is

00:00:51.184 --> 00:00:53.105
<v Speaker 2>Jose, but everybody calls me Pepe in the

00:00:53.105 --> 00:00:55.105
<v Speaker 2>tech industry. So let's let's let's give it

00:00:55.105 --> 00:00:55.984
<v Speaker 2>a Pepe.

00:00:56.144 --> 00:00:57.985
<v Speaker 2>I have been with the Atlantis project for

00:00:57.985 --> 00:00:58.305
<v Speaker 2>about

00:00:59.180 --> 00:01:01.899
<v Speaker 2>four years almost, I think. I am not

00:01:01.899 --> 00:01:04.540
<v Speaker 2>the original developer of the Atlantis project. I

00:01:04.540 --> 00:01:05.740
<v Speaker 2>inherited from,

00:01:06.060 --> 00:01:09.100
<v Speaker 2>Luke and Mishra, which both work in HashiCorp

00:01:09.100 --> 00:01:11.420
<v Speaker 2>right now. And I became involved with the

00:01:11.420 --> 00:01:11.659
<v Speaker 2>project

00:01:12.365 --> 00:01:13.725
<v Speaker 2>due to the fact that I needed a

00:01:13.725 --> 00:01:15.645
<v Speaker 2>feature really badly. And I was like, I

00:01:15.645 --> 00:01:17.244
<v Speaker 2>need to do this. And I used to

00:01:17.244 --> 00:01:18.365
<v Speaker 2>work in Sonatype,

00:01:18.365 --> 00:01:19.884
<v Speaker 2>which is a has a lot of open

00:01:19.884 --> 00:01:23.005
<v Speaker 2>source projects. And basically they support me to

00:01:23.005 --> 00:01:25.165
<v Speaker 2>introduce the feature and somehow I end up

00:01:25.165 --> 00:01:26.990
<v Speaker 2>with owning the project with

00:01:27.550 --> 00:01:30.190
<v Speaker 2>Dylan and Chiryu that are the other core

00:01:30.190 --> 00:01:32.590
<v Speaker 2>maintainers of the project. Yeah. I know you

00:01:32.590 --> 00:01:33.630
<v Speaker 0>said HashiCorp.

00:01:33.950 --> 00:01:36.350
<v Speaker 2>Yes. Yes. Yeah, yeah, yeah. I was gonna

00:01:36.350 --> 00:01:38.190
<v Speaker 0>say, I know you said HashiCorp, but all

00:01:38.190 --> 00:01:39.070
<v Speaker 0>I heard was IBM.

00:01:41.125 --> 00:01:43.685
<v Speaker 1>Brutal, brutal. There was a big discussion at

00:01:43.685 --> 00:01:45.045
<v Speaker 2>some point. We were kind of nervous at

00:01:45.045 --> 00:01:47.445
<v Speaker 2>some point about it because the Atlantis was

00:01:47.445 --> 00:01:49.204
<v Speaker 2>created in Vancouver,

00:01:49.204 --> 00:01:49.685
<v Speaker 2>literally

00:01:50.085 --> 00:01:51.765
<v Speaker 2>half a block away where I used to

00:01:51.765 --> 00:01:53.524
<v Speaker 2>work. So maybe me and

00:01:53.685 --> 00:01:55.365
<v Speaker 2>Luke and Mishra eat it in the same

00:01:55.365 --> 00:01:56.325
<v Speaker 2>restaurant in the corner

00:01:57.220 --> 00:01:59.220
<v Speaker 2>of the Raywall Street because it was created

00:01:59.220 --> 00:02:00.180
<v Speaker 2>by Hootsuite.

00:02:00.500 --> 00:02:02.420
<v Speaker 2>So when they were in Hootsuite,

00:02:02.420 --> 00:02:04.260
<v Speaker 2>they created Atlantis.

00:02:04.500 --> 00:02:06.420
<v Speaker 2>And then they open sourced it. Hootsuite was

00:02:06.420 --> 00:02:08.259
<v Speaker 2>happy to do that. And then it became

00:02:08.259 --> 00:02:09.540
<v Speaker 2>an open source project.

00:02:09.940 --> 00:02:10.259
<v Speaker 2>And then

00:02:11.635 --> 00:02:14.515
<v Speaker 2>Mishra Luke moved to HashiCorp. And when I

00:02:14.515 --> 00:02:17.075
<v Speaker 2>joined the Atlantis project was a bit it

00:02:17.075 --> 00:02:18.435
<v Speaker 2>didn't have much activity

00:02:18.755 --> 00:02:20.995
<v Speaker 2>because where I used to work in Sonatype,

00:02:20.995 --> 00:02:23.235
<v Speaker 2>we have a lot of open source libraries.

00:02:23.890 --> 00:02:26.210
<v Speaker 2>I ask what if we, because we're using

00:02:26.210 --> 00:02:27.650
<v Speaker 2>Atlantis, what if we actually

00:02:28.050 --> 00:02:30.690
<v Speaker 2>fork Atlantis under Sonotype and we maintain it

00:02:30.690 --> 00:02:31.650
<v Speaker 2>and they were okay.

00:02:31.970 --> 00:02:32.850
<v Speaker 2>There's a bunch of

00:02:33.410 --> 00:02:34.690
<v Speaker 2>Golang developers there.

00:02:36.285 --> 00:02:38.045
<v Speaker 2>And I was not a Golang developer at

00:02:38.045 --> 00:02:40.205
<v Speaker 2>all. And I'm not a Golang developer. I

00:02:40.205 --> 00:02:42.525
<v Speaker 2>can't call myself a Golang developer. And so

00:02:42.525 --> 00:02:45.165
<v Speaker 2>I learned Golang just to build this feature

00:02:45.565 --> 00:02:47.645
<v Speaker 2>and that's when basically that spark kind of

00:02:47.645 --> 00:02:50.670
<v Speaker 2>like looked to add, try to find out

00:02:50.670 --> 00:02:52.910
<v Speaker 2>more contributors.

00:02:53.470 --> 00:02:55.709
<v Speaker 2>And so this was basically the first time

00:02:55.709 --> 00:02:59.230
<v Speaker 2>that Atlantis ever had external contributors except for

00:02:59.230 --> 00:03:02.190
<v Speaker 2>Mishra and Luke. And that's how we became

00:03:02.190 --> 00:03:04.430
<v Speaker 2>part of the project. And well, a few

00:03:04.430 --> 00:03:07.125
<v Speaker 2>years after that, after the change of license

00:03:07.125 --> 00:03:08.485
<v Speaker 2>of Terraform,

00:03:09.205 --> 00:03:10.645
<v Speaker 2>we got an exception

00:03:10.645 --> 00:03:12.085
<v Speaker 2>from HashiCorp

00:03:12.085 --> 00:03:14.965
<v Speaker 2>for because we have the binary of Terraform

00:03:14.965 --> 00:03:16.725
<v Speaker 2>within the Atlantis image.

00:03:16.965 --> 00:03:18.565
<v Speaker 2>So we were not sure if that was

00:03:18.565 --> 00:03:20.005
<v Speaker 2>in breach

00:03:20.590 --> 00:03:21.710
<v Speaker 2>the new license.

00:03:23.310 --> 00:03:25.150
<v Speaker 2>And then at the same time, that's when

00:03:25.150 --> 00:03:27.950
<v Speaker 2>we start asking the question, should we move

00:03:27.950 --> 00:03:29.150
<v Speaker 2>it to the CNCF?

00:03:29.550 --> 00:03:31.630
<v Speaker 2>Should we apply to be a CNCF project?

00:03:33.045 --> 00:03:35.525
<v Speaker 2>And that's when basically

00:03:35.844 --> 00:03:38.245
<v Speaker 2>Luke dropped from the project and give us

00:03:38.245 --> 00:03:40.004
<v Speaker 2>ownership of the whole project to the three

00:03:40.004 --> 00:03:41.445
<v Speaker 2>of us. Awesome.

00:03:41.924 --> 00:03:44.564
<v Speaker 0>For anyone listening, let's make two assumptions right

00:03:44.564 --> 00:03:46.805
<v Speaker 0>now. One, they know what TerraForm is. And

00:03:46.805 --> 00:03:48.939
<v Speaker 0>two, they don't know what Atlantis is. Can

00:03:48.939 --> 00:03:50.459
<v Speaker 0>you give us the kind of the rundown

00:03:50.459 --> 00:03:52.540
<v Speaker 0>of what is Atlantis and how do people

00:03:52.540 --> 00:03:55.900
<v Speaker 0>integrate it? Yeah. So Atlantis is basically,

00:03:56.859 --> 00:03:58.379
<v Speaker 2>I would say maybe one of the first,

00:03:58.379 --> 00:04:00.859
<v Speaker 2>if not the first, GitOps workflow integration

00:04:01.535 --> 00:04:03.695
<v Speaker 2>with Terraform. So

00:04:03.855 --> 00:04:05.215
<v Speaker 2>the idea is that

00:04:05.535 --> 00:04:09.055
<v Speaker 2>developers don't have to go and use, you

00:04:09.055 --> 00:04:11.215
<v Speaker 2>know, their local environments or a local or

00:04:11.215 --> 00:04:13.775
<v Speaker 2>another tool to run their Terraform workflows to

00:04:13.775 --> 00:04:14.815
<v Speaker 2>deploy their infrastructure.

00:04:15.549 --> 00:04:17.149
<v Speaker 2>And was moving

00:04:17.550 --> 00:04:20.269
<v Speaker 2>that responsibility or that tooling to the left,

00:04:20.269 --> 00:04:23.470
<v Speaker 2>closer to the developers. So Atlas integrates with

00:04:23.470 --> 00:04:24.509
<v Speaker 2>the VCS,

00:04:24.509 --> 00:04:27.150
<v Speaker 2>which could be GitHub, GitLab, Azure DevOps,

00:04:27.870 --> 00:04:28.430
<v Speaker 2>GitT,

00:04:29.105 --> 00:04:30.305
<v Speaker 2>and Bitbucket.

00:04:30.625 --> 00:04:33.345
<v Speaker 2>And basically you create a webhook configuration in

00:04:33.345 --> 00:04:36.225
<v Speaker 2>your repo and then the user, the developer

00:04:36.225 --> 00:04:39.505
<v Speaker 2>can just basically interact with Atlantis commands

00:04:39.665 --> 00:04:42.220
<v Speaker 2>and so comments within the PR and Atlantis

00:04:42.220 --> 00:04:45.020
<v Speaker 2>will respond with the Terraform plan against the

00:04:45.020 --> 00:04:47.500
<v Speaker 2>workflow that is defined. Atlantis can do it

00:04:47.500 --> 00:04:49.819
<v Speaker 2>automatically like if you have a few Terraform

00:04:49.819 --> 00:04:51.979
<v Speaker 2>files in the repo, it has auto discovery,

00:04:51.979 --> 00:04:53.340
<v Speaker 2>auto planning

00:04:53.659 --> 00:04:55.819
<v Speaker 2>and it discovers those files and then it

00:04:55.819 --> 00:04:58.505
<v Speaker 2>will basically tell you, hey, here's your plan.

00:04:58.505 --> 00:05:00.825
<v Speaker 2>And it will create a formatted comment within

00:05:00.825 --> 00:05:02.665
<v Speaker 2>your PR so you can see it and

00:05:02.665 --> 00:05:05.065
<v Speaker 2>then people that review the PR can see

00:05:05.065 --> 00:05:06.665
<v Speaker 2>it too. And then it's like, this is

00:05:06.665 --> 00:05:07.625
<v Speaker 2>what supposed to

00:05:09.305 --> 00:05:11.065
<v Speaker 2>what TerraForm wants to plan.

00:05:11.389 --> 00:05:12.910
<v Speaker 2>And then you can have a better idea

00:05:12.910 --> 00:05:13.870
<v Speaker 2>of what the

00:05:14.830 --> 00:05:16.750
<v Speaker 2>outcome of that PR is going to be.

00:05:16.750 --> 00:05:18.510
<v Speaker 2>So then you get kind of like a

00:05:18.510 --> 00:05:20.270
<v Speaker 2>sense of what it's going to look like

00:05:20.270 --> 00:05:21.630
<v Speaker 2>in the current infrastructure

00:05:21.630 --> 00:05:24.365
<v Speaker 2>after the PR is merged when the deployment

00:05:24.365 --> 00:05:26.605
<v Speaker 2>happens. So all the interaction is based on

00:05:26.605 --> 00:05:28.285
<v Speaker 2>command. So you do Atlantis plan and then

00:05:28.285 --> 00:05:29.325
<v Speaker 2>you get the comment.

00:05:29.725 --> 00:05:31.965
<v Speaker 2>If you don't have, if you have

00:05:32.685 --> 00:05:34.365
<v Speaker 2>auto plan enabled, it will do it by

00:05:34.365 --> 00:05:34.925
<v Speaker 2>itself.

00:05:35.805 --> 00:05:37.885
<v Speaker 2>And then if after the reviews, after rules

00:05:37.885 --> 00:05:39.889
<v Speaker 2>that you have in your repo, Atlantis will

00:05:39.889 --> 00:05:42.370
<v Speaker 2>look at those rules in the VCS and

00:05:42.370 --> 00:05:44.130
<v Speaker 2>then it will say, okay, well now this

00:05:44.130 --> 00:05:45.890
<v Speaker 2>is approved, it's ready for merge.

00:05:46.210 --> 00:05:47.729
<v Speaker 2>And then you run Atlantis apply and then

00:05:47.729 --> 00:05:50.930
<v Speaker 2>it runs Terraform apply for you. And Atlantis

00:05:50.930 --> 00:05:53.625
<v Speaker 2>is not a wrapper. Atlantis just runs your

00:05:53.625 --> 00:05:55.625
<v Speaker 2>binary of Terraform. So people use it to

00:05:55.625 --> 00:05:56.985
<v Speaker 2>run CDKTF.

00:05:57.465 --> 00:05:59.465
<v Speaker 2>Some people use it to run TeraGrant. Some

00:05:59.465 --> 00:06:01.145
<v Speaker 2>people use it to run Atmos from Cloud

00:06:01.145 --> 00:06:03.545
<v Speaker 2>Policy. So you can actually run anything that

00:06:03.545 --> 00:06:06.140
<v Speaker 2>outputs a Terraform plan at some point. So

00:06:06.140 --> 00:06:07.820
<v Speaker 2>you can glue a lot of scripts in

00:06:07.820 --> 00:06:09.980
<v Speaker 2>between, run policies and a bunch of other

00:06:09.980 --> 00:06:12.780
<v Speaker 2>things. That's basically what Atlanta said. You can

00:06:12.780 --> 00:06:14.140
<v Speaker 2>extend it quite a lot,

00:06:14.780 --> 00:06:17.820
<v Speaker 2>but in an essence it's basically GitOps

00:06:17.820 --> 00:06:19.500
<v Speaker 2>interaction with your terfont workflows.

00:06:20.345 --> 00:06:22.745
<v Speaker 0>I I never knew that angle. I use

00:06:22.745 --> 00:06:24.105
<v Speaker 0>CDKTF

00:06:24.425 --> 00:06:26.425
<v Speaker 0>quite a lot these days, and I like

00:06:26.585 --> 00:06:28.105
<v Speaker 0>I've not used it in production, but I

00:06:28.105 --> 00:06:29.865
<v Speaker 0>like the Atlas project and it's use of

00:06:29.865 --> 00:06:32.745
<v Speaker 0>HTL for database schemas and migrations. Mhmm. And

00:06:32.745 --> 00:06:34.185
<v Speaker 0>I don't even think for a second that

00:06:34.185 --> 00:06:36.330
<v Speaker 0>you could run Atlantis as your kind of

00:06:36.330 --> 00:06:38.570
<v Speaker 0>CICD glue at that point to get kind

00:06:38.570 --> 00:06:40.490
<v Speaker 0>of visibility into what is going to change.

00:06:40.490 --> 00:06:42.490
<v Speaker 0>Yeah. And I just want to focus on

00:06:42.490 --> 00:06:44.729
<v Speaker 0>kind of that one statement. It's like, for

00:06:44.729 --> 00:06:47.370
<v Speaker 0>anyone listening to that description, was great, right?

00:06:47.370 --> 00:06:49.530
<v Speaker 0>The take home is Atlantis seems to be

00:06:49.835 --> 00:06:51.835
<v Speaker 0>that window into what will change if I

00:06:51.835 --> 00:06:54.075
<v Speaker 0>merge this pull request. Is that that correct?

00:06:54.075 --> 00:06:54.555
<v Speaker 0>Exactly

00:06:55.355 --> 00:06:57.355
<v Speaker 2>correct. Yeah. Yeah. Yeah. It's kind of like

00:06:57.355 --> 00:06:59.755
<v Speaker 2>the snapshot of like, what is this PR

00:06:59.755 --> 00:07:01.195
<v Speaker 2>going to change of my infrastructure?

00:07:01.990 --> 00:07:04.789
<v Speaker 2>Obviously, is we can get into discussions about,

00:07:04.789 --> 00:07:07.189
<v Speaker 2>you know, apply before merge and apply after

00:07:07.189 --> 00:07:11.110
<v Speaker 2>merge, which Atlantis is applied before merge,

00:07:11.430 --> 00:07:13.350
<v Speaker 2>which has these drawbacks. But

00:07:13.669 --> 00:07:16.150
<v Speaker 2>basically, at the point that the command was

00:07:16.150 --> 00:07:19.215
<v Speaker 2>done, the infrastructure looked like that and your

00:07:19.215 --> 00:07:21.775
<v Speaker 2>code was trying to change that

00:07:22.015 --> 00:07:24.095
<v Speaker 2>snapshot of time of the infrastructure in that

00:07:24.095 --> 00:07:25.855
<v Speaker 2>moment. Yeah. I guess this goes down to

00:07:25.855 --> 00:07:28.255
<v Speaker 0>that wonderful naive assumption that many people make.

00:07:28.255 --> 00:07:29.775
<v Speaker 0>If they merge a pull request, the code

00:07:29.775 --> 00:07:30.895
<v Speaker 0>that's going to end up in the main

00:07:30.895 --> 00:07:32.095
<v Speaker 0>branch is the code that was in the

00:07:32.095 --> 00:07:34.230
<v Speaker 0>PR, and that's not always the case. That's

00:07:34.230 --> 00:07:36.310
<v Speaker 2>correct. Because in the between, this kind of

00:07:36.310 --> 00:07:38.390
<v Speaker 2>like tab up versus spaces conversation.

00:07:38.550 --> 00:07:40.150
<v Speaker 2>In any tool

00:07:40.390 --> 00:07:42.790
<v Speaker 2>that relates to Terraform

00:07:42.870 --> 00:07:44.870
<v Speaker 2>due to the state and how the state

00:07:44.870 --> 00:07:47.430
<v Speaker 2>works, because the state is not a synchronous

00:07:47.430 --> 00:07:48.230
<v Speaker 2>entity

00:07:48.505 --> 00:07:52.345
<v Speaker 2>where by itself will actually check the status

00:07:52.345 --> 00:07:54.825
<v Speaker 2>of the infrastructure is only by triggers.

00:07:55.225 --> 00:07:58.905
<v Speaker 2>The any tool that uses a GitOps flow

00:07:59.145 --> 00:08:02.710
<v Speaker 2>will have a delay between what reality is,

00:08:02.710 --> 00:08:05.350
<v Speaker 2>which is your infrastructure, live infrastructure with the

00:08:05.350 --> 00:08:05.990
<v Speaker 2>VR.

00:08:06.230 --> 00:08:07.990
<v Speaker 2>So if someone goes in and has the

00:08:07.990 --> 00:08:10.150
<v Speaker 2>ability to change manually something

00:08:10.550 --> 00:08:12.950
<v Speaker 2>that you want to change in your plan,

00:08:12.950 --> 00:08:15.430
<v Speaker 2>that plan is already out of date. Damn

00:08:15.430 --> 00:08:18.365
<v Speaker 0>those click offers. But anyway, you

00:08:18.525 --> 00:08:21.005
<v Speaker 0>don't work for IBM, right? No, I don't.

00:08:21.005 --> 00:08:22.765
<v Speaker 2>I don't. I work for a consulting Cool.

00:08:23.565 --> 00:08:25.405
<v Speaker 0>So I can say, does Atlantis work with

00:08:25.405 --> 00:08:26.285
<v Speaker 0>OpenToFu?

00:08:26.365 --> 00:08:28.605
<v Speaker 2>Yes, it does. Yeah. Yeah. Yeah. Yeah. So

00:08:28.605 --> 00:08:30.685
<v Speaker 2>we we added OpenToFu

00:08:30.685 --> 00:08:33.330
<v Speaker 2>support. Actually, this is a bit of a

00:08:33.330 --> 00:08:36.770
<v Speaker 2>misconception about Atlantis or maybe it's not well

00:08:36.770 --> 00:08:39.330
<v Speaker 2>documented, maybe it's our fault too. So you

00:08:39.330 --> 00:08:41.170
<v Speaker 2>can run anything in Atlantis

00:08:41.170 --> 00:08:43.010
<v Speaker 2>that produces Terraform

00:08:43.265 --> 00:08:45.185
<v Speaker 2>plan output, a plan file.

00:08:45.505 --> 00:08:48.225
<v Speaker 2>As long as it runs Terraform, you generate

00:08:48.225 --> 00:08:50.385
<v Speaker 2>a Terraform plan file, you can do anything

00:08:50.385 --> 00:08:52.465
<v Speaker 2>you want. You can create a Jira ticket

00:08:52.465 --> 00:08:53.345
<v Speaker 2>in between

00:08:53.585 --> 00:08:55.425
<v Speaker 2>and then run Terraform. You can do all

00:08:55.425 --> 00:08:57.345
<v Speaker 2>the stuff because you can add your custom

00:08:57.345 --> 00:08:59.480
<v Speaker 2>workflow with your custom script. A lot of

00:08:59.480 --> 00:09:00.920
<v Speaker 2>people even use connections

00:09:00.920 --> 00:09:02.440
<v Speaker 2>with AD to figure it out if the

00:09:02.440 --> 00:09:03.720
<v Speaker 2>users are part of a group in AD

00:09:03.720 --> 00:09:04.440
<v Speaker 2>before

00:09:04.600 --> 00:09:06.519
<v Speaker 2>the plan gets run and a bunch of

00:09:06.519 --> 00:09:09.399
<v Speaker 2>things. You can customize this really heavily. So

00:09:09.399 --> 00:09:12.360
<v Speaker 2>you can run anything. So before we actually,

00:09:12.360 --> 00:09:15.175
<v Speaker 2>we had official OpenTofu support,

00:09:15.415 --> 00:09:17.814
<v Speaker 2>people already were using OpenTofu because you can

00:09:17.814 --> 00:09:20.375
<v Speaker 2>customize the workflow to just run the Tofu

00:09:20.375 --> 00:09:22.935
<v Speaker 2>binary instead of the terfone binary.

00:09:23.254 --> 00:09:23.894
<v Speaker 2>So that

00:09:24.214 --> 00:09:25.975
<v Speaker 2>there's a blog post in our site about

00:09:25.975 --> 00:09:27.254
<v Speaker 2>that. And then we release

00:09:27.670 --> 00:09:30.630
<v Speaker 2>Open Tofu official support. And what I mean

00:09:30.630 --> 00:09:32.790
<v Speaker 2>by official support is that now that Atlantis

00:09:32.790 --> 00:09:34.390
<v Speaker 2>is able to download

00:09:34.470 --> 00:09:35.590
<v Speaker 2>automatically

00:09:35.830 --> 00:09:37.750
<v Speaker 2>the version of Open Tofu that you describe

00:09:37.750 --> 00:09:39.670
<v Speaker 2>in the workflow

00:09:39.830 --> 00:09:40.630
<v Speaker 2>required versions.

00:09:41.215 --> 00:09:43.055
<v Speaker 2>So that's the difference between kind of like

00:09:43.055 --> 00:09:45.135
<v Speaker 2>official and non official support is that we

00:09:45.135 --> 00:09:46.815
<v Speaker 2>were out to download because we had that

00:09:46.815 --> 00:09:48.895
<v Speaker 2>capability for Terraform and we want to offer

00:09:48.895 --> 00:09:51.775
<v Speaker 2>the same in OpenTof. Do you find that

00:09:51.855 --> 00:09:53.935
<v Speaker 1>you have like some usage stats at this

00:09:53.935 --> 00:09:56.300
<v Speaker 1>point where you can say like, okay, you

00:09:56.300 --> 00:09:59.579
<v Speaker 1>know, 50% of people are using OpenTofu versus

00:09:59.500 --> 00:10:00.620
<v Speaker 1>I'm

00:10:00.620 --> 00:10:02.140
<v Speaker 1>actually kind of curious if you have Actually,

00:10:02.779 --> 00:10:04.540
<v Speaker 2>I do. They're

00:10:04.620 --> 00:10:05.420
<v Speaker 2>not up

00:10:06.220 --> 00:10:07.100
<v Speaker 2>to date

00:10:07.420 --> 00:10:08.940
<v Speaker 2>because we did a survey

00:10:09.899 --> 00:10:10.620
<v Speaker 2>a while back.

00:10:11.415 --> 00:10:13.654
<v Speaker 2>We I remember sending these

00:10:14.855 --> 00:10:15.735
<v Speaker 2>screenshot

00:10:16.615 --> 00:10:18.935
<v Speaker 2>to the OpenTofu

00:10:19.575 --> 00:10:20.615
<v Speaker 2>Slack channel

00:10:20.855 --> 00:10:22.535
<v Speaker 2>because at that point

00:10:22.855 --> 00:10:24.055
<v Speaker 2>OpenTofu was,

00:10:24.830 --> 00:10:25.390
<v Speaker 2>I

00:10:26.110 --> 00:10:28.350
<v Speaker 2>can't recall the version of Open Tofu,

00:10:28.750 --> 00:10:30.670
<v Speaker 2>but there was about 20 or 30% of

00:10:30.670 --> 00:10:32.510
<v Speaker 2>the people were using our Open Tofu at

00:10:32.510 --> 00:10:33.550
<v Speaker 2>that point already.

00:10:33.790 --> 00:10:35.630
<v Speaker 2>So that's,

00:10:35.630 --> 00:10:38.134
<v Speaker 2>that's way higher than I was very surprised

00:10:38.134 --> 00:10:40.935
<v Speaker 2>because at that point, OpenTofu was like super,

00:10:40.935 --> 00:10:43.014
<v Speaker 2>super early stages and people were already using

00:10:43.014 --> 00:10:44.454
<v Speaker 2>it. I was like, wow, that's that's crazy

00:10:44.454 --> 00:10:45.814
<v Speaker 2>that a lot of people are using it.

00:10:45.814 --> 00:10:48.214
<v Speaker 2>So, yeah. Yeah. Alright. I'm going to ask

00:10:48.214 --> 00:10:50.375
<v Speaker 0>a flippant question. Please don't hate me too

00:10:50.375 --> 00:10:51.254
<v Speaker 0>much. Right? But I

00:10:51.975 --> 00:10:52.855
<v Speaker 0>Atlantis

00:10:53.040 --> 00:10:55.600
<v Speaker 0>is a wrapper, if you will, of TerraForm

00:10:55.600 --> 00:10:57.920
<v Speaker 0>or Open Tofu, etcetera. Uh-huh. Basically, it just

00:10:57.920 --> 00:11:00.240
<v Speaker 0>gets planned out and then post to a

00:11:00.240 --> 00:11:02.560
<v Speaker 0>comment. That's right. But you've been maintaining this

00:11:02.560 --> 00:11:04.320
<v Speaker 0>project for four years. I'm assuming it's got

00:11:04.320 --> 00:11:07.045
<v Speaker 0>a forward trajectory. Things are changing. Like, is

00:11:07.045 --> 00:11:08.805
<v Speaker 0>it not done? Like what comes next? Like

00:11:08.805 --> 00:11:09.125
<v Speaker 0>what are you

00:11:10.405 --> 00:11:12.645
<v Speaker 2>Yeah. That's a hard question to answer right

00:11:12.645 --> 00:11:15.365
<v Speaker 2>now. We literally have a meeting last week

00:11:15.365 --> 00:11:17.845
<v Speaker 2>or two weeks ago to talk about the

00:11:17.845 --> 00:11:19.445
<v Speaker 2>future. This is a problem. We are all

00:11:20.310 --> 00:11:23.670
<v Speaker 2>working on we have our day jobs as

00:11:23.670 --> 00:11:25.990
<v Speaker 2>many, many or pretty much 99%

00:11:25.990 --> 00:11:28.390
<v Speaker 2>of every contributor on an open source project,

00:11:28.550 --> 00:11:30.070
<v Speaker 2>they do not work a hundred percent of

00:11:30.070 --> 00:11:31.910
<v Speaker 2>the time at the project. So, and a

00:11:31.910 --> 00:11:33.590
<v Speaker 2>lot of us have changed kind of like

00:11:33.590 --> 00:11:34.550
<v Speaker 2>responsibilities

00:11:34.550 --> 00:11:36.925
<v Speaker 2>within our jobs. So, or we are more

00:11:36.925 --> 00:11:39.644
<v Speaker 2>busy than before or less busy, but we

00:11:39.644 --> 00:11:41.245
<v Speaker 2>need to focus on learning something new or

00:11:41.245 --> 00:11:43.245
<v Speaker 2>whatever. So we are all kind of like

00:11:43.245 --> 00:11:45.805
<v Speaker 2>in transition period where, we are trying to

00:11:45.805 --> 00:11:47.005
<v Speaker 2>figure out what are we going to do.

00:11:47.005 --> 00:11:49.245
<v Speaker 2>There's new people that join us

00:11:49.700 --> 00:11:51.460
<v Speaker 2>and they are core contributors,

00:11:51.460 --> 00:11:53.700
<v Speaker 2>not yet maintainers. So we are hoping that

00:11:53.700 --> 00:11:55.460
<v Speaker 2>they will have the time to join us

00:11:55.460 --> 00:11:56.420
<v Speaker 2>as a maintainer.

00:11:56.740 --> 00:11:57.860
<v Speaker 2>There's a lot of commitment.

00:11:58.260 --> 00:12:00.260
<v Speaker 2>It's a lot of code. We support all

00:12:00.260 --> 00:12:02.260
<v Speaker 2>those VCSs that I mentioned.

00:12:02.500 --> 00:12:05.205
<v Speaker 2>It's hard to keep up with the API

00:12:05.205 --> 00:12:07.765
<v Speaker 2>changes of the VCS. And then on top

00:12:07.765 --> 00:12:10.565
<v Speaker 2>of that, try to move towards the future.

00:12:10.565 --> 00:12:12.245
<v Speaker 2>The future of LightLand is right now.

00:12:12.645 --> 00:12:14.325
<v Speaker 2>The short term feature is that we are

00:12:14.325 --> 00:12:16.565
<v Speaker 2>going to release version one point zero as

00:12:16.565 --> 00:12:17.285
<v Speaker 2>official.

00:12:17.845 --> 00:12:19.125
<v Speaker 2>Due

00:12:19.125 --> 00:12:20.940
<v Speaker 2>to the fact that it has been used

00:12:20.940 --> 00:12:23.180
<v Speaker 2>in production for many, many years already, but

00:12:23.180 --> 00:12:25.899
<v Speaker 2>we didn't ever move to basically

00:12:25.899 --> 00:12:27.980
<v Speaker 2>follow Semper correctly.

00:12:27.980 --> 00:12:30.699
<v Speaker 2>We are already in production, therefore we should

00:12:30.699 --> 00:12:33.955
<v Speaker 2>have in version one point zero. But for

00:12:33.955 --> 00:12:35.635
<v Speaker 2>that we need to do some work because,

00:12:35.875 --> 00:12:38.115
<v Speaker 2>you know, the docs, for example, don't reflect

00:12:38.115 --> 00:12:40.355
<v Speaker 2>versioning of the features. So we want to

00:12:40.355 --> 00:12:43.075
<v Speaker 2>reflect that. We already deprecated a bunch of

00:12:43.075 --> 00:12:43.715
<v Speaker 2>old,

00:12:43.955 --> 00:12:47.555
<v Speaker 2>configs and parameters that we don't support anymore.

00:12:47.555 --> 00:12:49.450
<v Speaker 2>So we did that work. So there's a

00:12:49.450 --> 00:12:50.570
<v Speaker 2>few other things that we need to do

00:12:50.570 --> 00:12:52.490
<v Speaker 2>to get to like release one point zero

00:12:52.490 --> 00:12:53.610
<v Speaker 2>and then

00:12:53.930 --> 00:12:57.370
<v Speaker 2>two point zero will be basically what we

00:12:57.450 --> 00:12:58.810
<v Speaker 2>would like to see in the future. But

00:12:58.810 --> 00:13:01.050
<v Speaker 2>for that we need a lot of more

00:13:01.050 --> 00:13:03.865
<v Speaker 2>maintainers to help us out. So ideally what

00:13:03.865 --> 00:13:06.024
<v Speaker 2>will happen with Atlantis is that it's going

00:13:06.024 --> 00:13:08.505
<v Speaker 2>to be a queuing system for PRs

00:13:08.665 --> 00:13:11.464
<v Speaker 2>that will be synchronous to the cluster.

00:13:11.785 --> 00:13:14.264
<v Speaker 2>So ideally what will happen is that we

00:13:14.264 --> 00:13:16.740
<v Speaker 2>will use something like, I don't know, Teporo

00:13:16.740 --> 00:13:18.740
<v Speaker 2>or something like that, that will be able

00:13:18.740 --> 00:13:20.019
<v Speaker 2>to manage queues

00:13:20.180 --> 00:13:20.820
<v Speaker 2>of

00:13:21.060 --> 00:13:24.899
<v Speaker 2>PRs, incoming PRs for multiple VCSs

00:13:25.060 --> 00:13:26.980
<v Speaker 2>at the same time. And then they can

00:13:26.980 --> 00:13:27.700
<v Speaker 2>basically

00:13:27.940 --> 00:13:30.660
<v Speaker 2>have worker nodes that will run the plan

00:13:30.925 --> 00:13:32.765
<v Speaker 2>and there will be some sort of metadata

00:13:32.765 --> 00:13:35.725
<v Speaker 2>share storage where if the node goes down,

00:13:35.725 --> 00:13:37.805
<v Speaker 2>we still can find information and so on

00:13:37.805 --> 00:13:39.165
<v Speaker 2>and have statuses

00:13:39.165 --> 00:13:41.405
<v Speaker 2>globally across the whole cluster,

00:13:41.725 --> 00:13:42.685
<v Speaker 2>which is not true.

00:13:43.490 --> 00:13:45.970
<v Speaker 2>Right now you can run multiple Atlantis instances

00:13:45.970 --> 00:13:47.250
<v Speaker 2>in HII

00:13:47.569 --> 00:13:48.209
<v Speaker 2>mode,

00:13:48.930 --> 00:13:50.930
<v Speaker 2>but it's a bit tricky and a bit

00:13:50.930 --> 00:13:53.250
<v Speaker 2>slow because you need shared storage and things

00:13:53.250 --> 00:13:56.209
<v Speaker 2>like that. So hopefully we can get to

00:13:56.209 --> 00:13:57.009
<v Speaker 2>that point.

00:13:57.250 --> 00:14:00.985
<v Speaker 2>Interestingly enough, the Atlantis project was a

00:14:01.705 --> 00:14:03.865
<v Speaker 2>huge amount of contribution

00:14:03.865 --> 00:14:04.905
<v Speaker 2>from Lyft.

00:14:05.225 --> 00:14:07.945
<v Speaker 2>There were two developers from Lyft. Lyft used

00:14:07.945 --> 00:14:09.625
<v Speaker 2>Atlantis quite heavily

00:14:09.785 --> 00:14:10.425
<v Speaker 2>internally.

00:14:11.000 --> 00:14:12.680
<v Speaker 2>And a lot of the features, some of

00:14:12.680 --> 00:14:14.600
<v Speaker 2>the features that we have right now, for

00:14:14.600 --> 00:14:16.680
<v Speaker 2>example live logs and things like that, are

00:14:16.680 --> 00:14:18.760
<v Speaker 2>actually due to their contributions.

00:14:18.920 --> 00:14:20.680
<v Speaker 2>And at some point they wanted to actually

00:14:20.680 --> 00:14:24.839
<v Speaker 2>create something called an Autelus under our repo

00:14:25.325 --> 00:14:28.125
<v Speaker 2>and to be able to use Temporal as

00:14:28.125 --> 00:14:29.805
<v Speaker 2>a queuing system for Atlantis. So that was

00:14:29.805 --> 00:14:32.125
<v Speaker 2>what they were building inside. So we were

00:14:32.125 --> 00:14:34.845
<v Speaker 2>basically going to move towards that. But then

00:14:35.085 --> 00:14:37.245
<v Speaker 2>there were some disagreements between HashiCorp and then

00:14:37.245 --> 00:14:39.725
<v Speaker 2>that could not happen. Hopefully, you know, in

00:14:39.725 --> 00:14:41.910
<v Speaker 2>the future that's where we will get to.

00:14:41.910 --> 00:14:44.230
<v Speaker 2>Where we can have like a more distributed

00:14:44.230 --> 00:14:47.029
<v Speaker 2>system for Atlantis instead of having like Atlantis

00:14:47.029 --> 00:14:49.350
<v Speaker 2>actually scales really well vertically.

00:14:49.589 --> 00:14:52.149
<v Speaker 2>We have people that have, 500 PRs a

00:14:52.149 --> 00:14:54.995
<v Speaker 2>day going through an Atlantis server and

00:14:54.995 --> 00:14:58.755
<v Speaker 2>only one Atlantis server. So for multiple environments.

00:14:58.755 --> 00:15:00.675
<v Speaker 2>So it really, really is really

00:15:00.995 --> 00:15:01.795
<v Speaker 2>performance.

00:15:02.115 --> 00:15:03.955
<v Speaker 2>But obviously all of that depends on how

00:15:03.955 --> 00:15:04.515
<v Speaker 2>you

00:15:04.915 --> 00:15:07.075
<v Speaker 2>structure your data from projects and so on.

00:15:07.795 --> 00:15:09.290
<v Speaker 2>Yeah. I guess

00:15:09.770 --> 00:15:11.610
<v Speaker 0>I wanna make sure I captured the kind

00:15:11.610 --> 00:15:14.170
<v Speaker 0>of problem statement there correctly, right? Like GitHub

00:15:14.170 --> 00:15:16.490
<v Speaker 0>now has merge queues. So we have some

00:15:16.490 --> 00:15:18.490
<v Speaker 0>sort of guarantee that well, we do have

00:15:18.490 --> 00:15:20.330
<v Speaker 0>guarantees that pull requests be merged in a

00:15:20.330 --> 00:15:22.644
<v Speaker 0>certain order. So it's not the TerraForm apply,

00:15:22.644 --> 00:15:24.485
<v Speaker 0>I think, that is causing problems here, right?

00:15:24.485 --> 00:15:26.805
<v Speaker 0>Correct me if I'm wrong. The challenge that

00:15:26.805 --> 00:15:29.045
<v Speaker 0>you have and why horizontal scale and temporal

00:15:29.045 --> 00:15:31.445
<v Speaker 0>may be really useful is that if you've

00:15:31.445 --> 00:15:33.365
<v Speaker 0>got multiple PRs being opened at the same

00:15:33.365 --> 00:15:35.285
<v Speaker 0>time and they're all running a TerraForm plan,

00:15:35.810 --> 00:15:38.690
<v Speaker 0>those will be very different depending on when

00:15:38.690 --> 00:15:40.610
<v Speaker 0>they're actioned sequentially. Or even if they happen

00:15:40.610 --> 00:15:41.970
<v Speaker 0>at the same time, the plans would actually

00:15:41.970 --> 00:15:42.850
<v Speaker 0>be incorrect.

00:15:43.010 --> 00:15:44.769
<v Speaker 0>Yeah. And that's the problem that if you

00:15:44.769 --> 00:15:45.490
<v Speaker 0>push this,

00:15:45.810 --> 00:15:47.649
<v Speaker 0>well, I guess if you push it through

00:15:47.970 --> 00:15:49.889
<v Speaker 0>temporal or some sort of queuing system,

00:15:50.535 --> 00:15:52.615
<v Speaker 0>still doesn't give you a guaranteed output, but

00:15:52.615 --> 00:15:54.295
<v Speaker 0>it's going be a more consistent. I don't

00:15:54.295 --> 00:15:56.454
<v Speaker 2>know. That's a tough problem. Yeah, the problem

00:15:56.454 --> 00:15:57.334
<v Speaker 2>is mostly

00:15:58.055 --> 00:16:00.375
<v Speaker 2>which Atlantis server picks the BR.

00:16:01.014 --> 00:16:03.415
<v Speaker 2>And if that Atlantis server dies and then

00:16:03.415 --> 00:16:04.135
<v Speaker 2>someone

00:16:04.535 --> 00:16:05.894
<v Speaker 2>runs another command,

00:16:06.930 --> 00:16:09.170
<v Speaker 2>will we have enough information to continue the

00:16:09.170 --> 00:16:10.370
<v Speaker 2>work that was lost?

00:16:11.330 --> 00:16:11.810
<v Speaker 2>Or

00:16:12.450 --> 00:16:15.250
<v Speaker 2>the other problem is that parallelism

00:16:15.250 --> 00:16:19.090
<v Speaker 2>in terraform plants is hard within one specific

00:16:19.090 --> 00:16:21.375
<v Speaker 2>instance. Like if you run multiple plans of

00:16:21.375 --> 00:16:23.055
<v Speaker 2>the same repo in your computer, it's actually

00:16:23.055 --> 00:16:23.695
<v Speaker 2>tricky.

00:16:24.015 --> 00:16:27.135
<v Speaker 2>You could potentially lock the project completely and

00:16:27.135 --> 00:16:28.815
<v Speaker 2>then the next person will not, if you

00:16:28.815 --> 00:16:30.815
<v Speaker 2>have login enabled, will not be able to

00:16:30.815 --> 00:16:31.615
<v Speaker 2>use it.

00:16:32.410 --> 00:16:34.170
<v Speaker 2>You can use WorkSpaces and do things like

00:16:34.170 --> 00:16:35.850
<v Speaker 2>that. So so there is a bunch of

00:16:35.850 --> 00:16:38.970
<v Speaker 2>problems that the queue and and worker nodes

00:16:38.970 --> 00:16:39.930
<v Speaker 2>could solve

00:16:40.490 --> 00:16:41.290
<v Speaker 2>that

00:16:41.290 --> 00:16:44.650
<v Speaker 2>not only pertains to the Terraform plan in

00:16:44.650 --> 00:16:46.730
<v Speaker 2>itself, but but to who

00:16:47.365 --> 00:16:50.965
<v Speaker 2>manages that request at that particular moment. And

00:16:50.965 --> 00:16:52.965
<v Speaker 2>if we can run multiple PRs from the

00:16:52.965 --> 00:16:54.165
<v Speaker 2>same repo, for example,

00:16:54.485 --> 00:16:56.565
<v Speaker 2>in multiple different servers, you know, and then

00:16:56.565 --> 00:17:00.390
<v Speaker 2>synchronize that metadata back. Okay. So how deep

00:17:00.390 --> 00:17:02.950
<v Speaker 0>is the GET and GitHub integration then? And

00:17:02.950 --> 00:17:04.150
<v Speaker 0>the use case is the one that I

00:17:04.150 --> 00:17:05.349
<v Speaker 0>kind of just talked about. If we've got

00:17:05.349 --> 00:17:06.470
<v Speaker 0>two pill requests,

00:17:06.790 --> 00:17:08.550
<v Speaker 0>they run a plan and then one gets

00:17:08.550 --> 00:17:10.150
<v Speaker 0>merged. We're now at the point where pill

00:17:10.150 --> 00:17:11.030
<v Speaker 0>request B

00:17:11.595 --> 00:17:13.755
<v Speaker 0>is out of sync with the main branch.

00:17:13.755 --> 00:17:15.275
<v Speaker 0>Yeah. I could go to the pull request

00:17:15.275 --> 00:17:16.395
<v Speaker 0>and say rebase,

00:17:16.395 --> 00:17:18.315
<v Speaker 0>which would trigger the rebuild because the actual

00:17:18.315 --> 00:17:21.035
<v Speaker 0>pull request was updated. But does Atlantis have

00:17:21.035 --> 00:17:22.874
<v Speaker 0>enough understanding to block

00:17:23.115 --> 00:17:25.194
<v Speaker 0>or at least warn the user before merging

00:17:25.194 --> 00:17:26.880
<v Speaker 0>that pull request? Well, that would be very

00:17:26.880 --> 00:17:28.400
<v Speaker 2>tricky with multiple servers.

00:17:28.800 --> 00:17:30.400
<v Speaker 2>So that will be a challenge if we

00:17:30.400 --> 00:17:32.480
<v Speaker 2>move to that worker type of node, no,

00:17:32.480 --> 00:17:34.640
<v Speaker 2>that would be very tricky. We have different

00:17:34.640 --> 00:17:38.640
<v Speaker 2>modes of repo settings for like divergent and

00:17:38.640 --> 00:17:40.735
<v Speaker 2>so on. I will say that they are

00:17:40.735 --> 00:17:42.975
<v Speaker 2>not as stable as you would think. Or

00:17:42.975 --> 00:17:44.815
<v Speaker 2>I wouldn't say not as stable, is that

00:17:44.815 --> 00:17:46.894
<v Speaker 2>the definition of divergent

00:17:46.895 --> 00:17:49.215
<v Speaker 2>for certain people is different of what we

00:17:49.215 --> 00:17:51.055
<v Speaker 2>offer in the code. And that's where it

00:17:51.055 --> 00:17:51.855
<v Speaker 2>gets a bit tricky.

00:17:52.520 --> 00:17:53.719
<v Speaker 2>And so,

00:17:54.039 --> 00:17:56.360
<v Speaker 2>yeah. So the problem about merging or the

00:17:56.360 --> 00:17:58.519
<v Speaker 2>workflow, how you work with your repo

00:17:58.919 --> 00:18:01.320
<v Speaker 2>will directly affect how, you know, the multiple

00:18:01.320 --> 00:18:04.039
<v Speaker 2>worker nodes will interact too. So those all

00:18:04.039 --> 00:18:05.880
<v Speaker 2>those kind of like design decisions are going

00:18:05.880 --> 00:18:08.600
<v Speaker 2>to be really hard to get there. But

00:18:08.085 --> 00:18:10.645
<v Speaker 2>I mean, it is possible. So it's a

00:18:10.645 --> 00:18:12.485
<v Speaker 2>matter of like having enough people to like,

00:18:12.485 --> 00:18:14.405
<v Speaker 2>you know, sit down, write it down and

00:18:14.405 --> 00:18:16.804
<v Speaker 2>test it and figure it out. But we

00:18:16.804 --> 00:18:18.484
<v Speaker 2>are not the only ones that, you know,

00:18:18.965 --> 00:18:20.645
<v Speaker 2>want to see something like that. A lot

00:18:20.645 --> 00:18:22.790
<v Speaker 2>of people, there is a huge issue in

00:18:22.790 --> 00:18:23.670
<v Speaker 2>Atlantis.

00:18:23.670 --> 00:18:25.190
<v Speaker 2>I have been there for many, many years

00:18:25.190 --> 00:18:27.429
<v Speaker 2>of people talking about how can we get

00:18:27.430 --> 00:18:29.350
<v Speaker 2>Atlantis to be a real

00:18:30.310 --> 00:18:33.190
<v Speaker 2>instead of, you know, having to do this

00:18:33.190 --> 00:18:35.110
<v Speaker 2>kind of like shared storage and we have

00:18:35.110 --> 00:18:37.510
<v Speaker 2>ready support for locking and some metadata.

00:18:38.044 --> 00:18:40.285
<v Speaker 2>So it kinda works, but it doesn't actually

00:18:40.285 --> 00:18:42.285
<v Speaker 2>do it in a huge scale for like

00:18:42.285 --> 00:18:44.124
<v Speaker 2>people that has, you know, 500,

00:18:44.605 --> 00:18:46.605
<v Speaker 2>a thousand PRs a day from multiple teams

00:18:46.605 --> 00:18:48.285
<v Speaker 2>and things like that. So that will be

00:18:48.285 --> 00:18:49.965
<v Speaker 2>the goal. Yeah. But it's going to be

00:18:49.965 --> 00:18:52.410
<v Speaker 2>tricky. That's for sure. And the multiple VCS,

00:18:52.650 --> 00:18:54.890
<v Speaker 2>thing is it's a huge deal for us.

00:18:54.890 --> 00:18:56.570
<v Speaker 2>You will not believe how complicated

00:18:57.210 --> 00:19:00.170
<v Speaker 2>it gets from one VCS client library we

00:19:00.170 --> 00:19:02.170
<v Speaker 2>have to the other one. So from GitLab

00:19:02.170 --> 00:19:03.049
<v Speaker 2>to GitHub.

00:19:03.210 --> 00:19:04.410
<v Speaker 2>What is a status

00:19:04.835 --> 00:19:07.554
<v Speaker 2>of a simple status. What is

00:19:08.195 --> 00:19:10.595
<v Speaker 2>done status? How is defined within the VCS?

00:19:10.595 --> 00:19:11.635
<v Speaker 2>It's always a problem.

00:19:12.195 --> 00:19:14.835
<v Speaker 2>And what consists of mergeable PR

00:19:14.915 --> 00:19:16.195
<v Speaker 2>within GitLab,

00:19:16.195 --> 00:19:18.595
<v Speaker 2>Azure DevOps and GitHub? They're totally different.

00:19:19.430 --> 00:19:21.830
<v Speaker 2>So that part is actually really hard. We

00:19:21.830 --> 00:19:24.150
<v Speaker 2>would love to see more contribution

00:19:24.150 --> 00:19:28.550
<v Speaker 2>from the VCSMs themselves into Atlantis, but that's

00:19:28.550 --> 00:19:30.309
<v Speaker 2>a hard one. We do have contributions from

00:19:30.309 --> 00:19:33.190
<v Speaker 2>GitLab actually, because GitLab uses Atlantis internally.

00:19:34.075 --> 00:19:36.555
<v Speaker 2>So every now and then we actually do

00:19:36.555 --> 00:19:38.555
<v Speaker 2>have PRs from GitLab

00:19:38.555 --> 00:19:42.075
<v Speaker 2>going into change certain definitions because the

00:19:42.475 --> 00:19:44.155
<v Speaker 2>API change and so on. So,

00:19:44.635 --> 00:19:46.795
<v Speaker 2>yeah. And another part of the two point

00:19:46.795 --> 00:19:48.955
<v Speaker 2>zero and the feature is like create

00:19:48.955 --> 00:19:50.475
<v Speaker 2>a

00:19:49.790 --> 00:19:51.629
<v Speaker 2>pluggable PCS interface

00:19:51.870 --> 00:19:54.030
<v Speaker 2>so that people that has other type of

00:19:54.030 --> 00:19:56.590
<v Speaker 2>PCSs or they want to, you know, for

00:19:56.590 --> 00:19:59.630
<v Speaker 2>example, play with version two of the GitHub

00:19:59.630 --> 00:20:02.350
<v Speaker 2>API or GitHub API can do it easily

00:20:02.350 --> 00:20:04.344
<v Speaker 2>without breaking the core. So,

00:20:04.745 --> 00:20:06.745
<v Speaker 2>that's another thing that we are thinking about.

00:20:06.745 --> 00:20:08.345
<v Speaker 2>So, many, many things in the list of,

00:20:08.345 --> 00:20:10.184
<v Speaker 2>like, what we would like to see for

00:20:10.184 --> 00:20:11.144
<v Speaker 2>two point zero.

00:20:11.705 --> 00:20:12.264
<v Speaker 1>So,

00:20:12.825 --> 00:20:14.105
<v Speaker 1>I'm gonna be the one to ask it

00:20:14.105 --> 00:20:16.184
<v Speaker 1>because I know David is thinking it. Is

00:20:16.184 --> 00:20:18.580
<v Speaker 1>Rust anywhere in that conversation?

00:20:18.980 --> 00:20:21.780
<v Speaker 1>Mostly I'm trolling David, but you know. Yeah.

00:20:21.780 --> 00:20:24.340
<v Speaker 2>I asked that question not long ago to

00:20:24.419 --> 00:20:26.580
<v Speaker 2>the other core contributors and we were talking

00:20:26.580 --> 00:20:27.940
<v Speaker 2>about it. I guess the answer is kind

00:20:27.940 --> 00:20:29.460
<v Speaker 2>of simple in a way if you think

00:20:29.460 --> 00:20:31.460
<v Speaker 2>about it because we are a CSCF project

00:20:31.460 --> 00:20:31.780
<v Speaker 2>now

00:20:32.385 --> 00:20:34.385
<v Speaker 2>and we are moving to the incubation project

00:20:34.385 --> 00:20:35.825
<v Speaker 2>and then hopefully at some point we are

00:20:35.825 --> 00:20:39.105
<v Speaker 2>going to be released as a CNCF

00:20:39.105 --> 00:20:39.664
<v Speaker 2>project.

00:20:40.145 --> 00:20:41.265
<v Speaker 2>The ecosystem

00:20:41.265 --> 00:20:44.705
<v Speaker 2>in the CNCF is Golang and that's a

00:20:44.785 --> 00:20:45.585
<v Speaker 2>simple answer for

00:20:46.740 --> 00:20:48.820
<v Speaker 2>Yeah, so if Rust would have had a

00:20:48.820 --> 00:20:51.940
<v Speaker 2>major, I guess, appearance within the

00:20:52.340 --> 00:20:53.059
<v Speaker 2>other

00:20:54.660 --> 00:20:55.860
<v Speaker 2>CNCF projects,

00:20:56.020 --> 00:20:58.020
<v Speaker 2>it will be an easier sell for in

00:20:58.020 --> 00:20:58.340
<v Speaker 2>that case.

00:20:59.155 --> 00:20:59.635
<v Speaker 2>So,

00:21:00.195 --> 00:21:01.635
<v Speaker 2>and there is a lot of things that

00:21:01.635 --> 00:21:04.275
<v Speaker 2>we are within the ecosystem of the CNCF

00:21:04.275 --> 00:21:05.315
<v Speaker 2>that support,

00:21:05.395 --> 00:21:07.635
<v Speaker 2>I guess, you know, Golang more than others.

00:21:08.755 --> 00:21:10.915
<v Speaker 2>So if I was going to maybe ask

00:21:10.915 --> 00:21:13.155
<v Speaker 2>for help for something within

00:21:14.150 --> 00:21:15.190
<v Speaker 2>Atlantis,

00:21:15.190 --> 00:21:16.630
<v Speaker 2>which is really in Golang, I might have

00:21:16.630 --> 00:21:19.110
<v Speaker 2>more luck finding someone within the CNCF to

00:21:19.110 --> 00:21:20.789
<v Speaker 2>help us out than

00:21:21.510 --> 00:21:22.710
<v Speaker 2>compared with Rust.

00:21:23.990 --> 00:21:25.029
<v Speaker 2>It's a choice.

00:21:25.270 --> 00:21:27.350
<v Speaker 2>It's a total choice. I mean, don't have

00:21:27.350 --> 00:21:29.455
<v Speaker 2>to write it in Golang if you want

00:21:29.455 --> 00:21:30.655
<v Speaker 2>to do it in C. Mean, there's a

00:21:30.655 --> 00:21:32.335
<v Speaker 2>lot of stuff that are written in C

00:21:32.335 --> 00:21:34.975
<v Speaker 2>and other languages, but Golang is the main

00:21:34.975 --> 00:21:36.815
<v Speaker 2>language within the Censor projects.

00:21:37.375 --> 00:21:39.215
<v Speaker 1>I have thoughts on that, but I'll

00:21:39.455 --> 00:21:41.455
<v Speaker 1>say that for later. I mean, you also

00:21:41.455 --> 00:21:42.735
<v Speaker 0>are consuming Terraform.

00:21:43.020 --> 00:21:45.500
<v Speaker 0>I'm assuming as a Go module, right?

00:21:46.620 --> 00:21:49.260
<v Speaker 2>Know those No, actually download the binary. No,

00:21:49.260 --> 00:21:51.900
<v Speaker 2>we download the Oh, okay. So that's when

00:21:52.140 --> 00:21:54.620
<v Speaker 2>Terraform got changed in license, that's why we

00:21:54.620 --> 00:21:55.500
<v Speaker 2>didn't have an issue

00:21:57.545 --> 00:22:00.265
<v Speaker 2>HashiCorp or one of the reasons, but yeah,

00:22:00.265 --> 00:22:02.425
<v Speaker 2>so we just download the binary. That's what

00:22:02.425 --> 00:22:03.785
<v Speaker 2>we do. And then we just run against

00:22:03.785 --> 00:22:07.225
<v Speaker 2>it. That's all we do. All right. Well,

00:22:07.385 --> 00:22:08.745
<v Speaker 0>I'm going to come back to some more

00:22:08.745 --> 00:22:10.505
<v Speaker 0>hard questions then because

00:22:10.860 --> 00:22:13.100
<v Speaker 0>Atlantis is obviously a very cool project. It's

00:22:13.100 --> 00:22:15.420
<v Speaker 0>in the CNCF. It has, you know, of

00:22:15.420 --> 00:22:16.299
<v Speaker 0>contributors,

00:22:16.380 --> 00:22:18.140
<v Speaker 0>power of momentum to one point zero and

00:22:18.140 --> 00:22:20.299
<v Speaker 0>the future two point zero. Right? But we're

00:22:20.299 --> 00:22:22.619
<v Speaker 0>talking about a project that has the ability

00:22:22.700 --> 00:22:23.420
<v Speaker 0>to execute

00:22:23.975 --> 00:22:24.775
<v Speaker 0>TerraForm,

00:22:24.775 --> 00:22:26.775
<v Speaker 0>which is obviously downloaded as a binary. So

00:22:26.775 --> 00:22:28.294
<v Speaker 0>there's one security

00:22:28.775 --> 00:22:30.455
<v Speaker 0>concern there. I'm sure there's checks and balances

00:22:30.455 --> 00:22:32.455
<v Speaker 0>in place, but, know, we'll get there. That

00:22:32.455 --> 00:22:34.295
<v Speaker 0>also has the ability to run against all

00:22:34.295 --> 00:22:36.695
<v Speaker 0>of my cloud native infrastructure, whether that be

00:22:36.695 --> 00:22:40.140
<v Speaker 0>on AWS, GCP. Yep. Any integrations, Datadogs, New

00:22:40.140 --> 00:22:41.980
<v Speaker 0>Relics, anything I can use Terraform these days,

00:22:41.980 --> 00:22:43.820
<v Speaker 0>which is pretty much everything.

00:22:44.220 --> 00:22:45.980
<v Speaker 0>So you've got access to all of my

00:22:45.980 --> 00:22:46.700
<v Speaker 0>credentials,

00:22:46.940 --> 00:22:48.059
<v Speaker 0>security concern.

00:22:48.140 --> 00:22:50.059
<v Speaker 0>And we've put this into a repository, which

00:22:50.059 --> 00:22:51.980
<v Speaker 0>may or may not be a open source

00:22:51.980 --> 00:22:54.885
<v Speaker 0>publicly available repository with CICD runs with log

00:22:54.885 --> 00:22:57.605
<v Speaker 0>outputs and the ability for people to execute

00:22:57.605 --> 00:23:00.164
<v Speaker 0>commands or comments, which I'm assuming that's how

00:23:00.325 --> 00:23:01.684
<v Speaker 0>Atlantis is orchestrated.

00:23:01.684 --> 00:23:04.164
<v Speaker 0>Security concern. So maybe you can guide me

00:23:04.164 --> 00:23:04.804
<v Speaker 0>through

00:23:05.220 --> 00:23:06.980
<v Speaker 0>what checks and balances are in place to

00:23:06.980 --> 00:23:09.460
<v Speaker 0>make sure that Atlantis as a secure project

00:23:09.460 --> 00:23:11.940
<v Speaker 0>for me to run-in my production infrastructure,

00:23:12.020 --> 00:23:14.580
<v Speaker 0>whether it's open source or not. Yeah, I

00:23:14.580 --> 00:23:16.899
<v Speaker 2>think that the official answer is

00:23:17.140 --> 00:23:18.580
<v Speaker 2>you need to follow the

00:23:19.294 --> 00:23:20.095
<v Speaker 2>cloud

00:23:20.414 --> 00:23:24.335
<v Speaker 2>provider guidelines or security to when

00:23:24.414 --> 00:23:27.054
<v Speaker 2>running any telephone code. Doesn't matter if you

00:23:27.054 --> 00:23:28.095
<v Speaker 2>run an Atlantis.

00:23:28.335 --> 00:23:30.655
<v Speaker 2>So those guidelines need to be already in

00:23:30.655 --> 00:23:33.135
<v Speaker 2>your project to be secure because we run

00:23:33.135 --> 00:23:36.159
<v Speaker 2>whatever you want within your terraform project. So

00:23:36.159 --> 00:23:38.239
<v Speaker 2>if you're running local exec and then

00:23:38.480 --> 00:23:41.200
<v Speaker 2>doing Bitcoin mining, we can't stop it.

00:23:41.759 --> 00:23:43.759
<v Speaker 2>That will be in your code within

00:23:44.320 --> 00:23:45.519
<v Speaker 2>your terraform project.

00:23:45.919 --> 00:23:46.479
<v Speaker 2>So

00:23:47.200 --> 00:23:47.919
<v Speaker 2>after

00:23:48.399 --> 00:23:49.679
<v Speaker 2>Atlantis runs

00:23:50.095 --> 00:23:52.815
<v Speaker 2>and gets the credentials somehow for the to

00:23:52.815 --> 00:23:54.575
<v Speaker 2>pass it to the provider, kind of like

00:23:54.655 --> 00:23:56.255
<v Speaker 2>that's kind of like the first

00:23:56.255 --> 00:23:57.535
<v Speaker 2>big security

00:23:57.935 --> 00:24:00.175
<v Speaker 2>problem that you want to solve, then

00:24:00.575 --> 00:24:02.415
<v Speaker 2>we run any code that is there. So

00:24:03.370 --> 00:24:06.650
<v Speaker 2>it is crucially important that whatever gets to

00:24:06.650 --> 00:24:09.530
<v Speaker 2>the repo, it is obviously has some sort

00:24:09.530 --> 00:24:11.610
<v Speaker 2>of check and balances within the company or

00:24:11.610 --> 00:24:13.769
<v Speaker 2>the project or whatever is public or not.

00:24:14.010 --> 00:24:16.825
<v Speaker 2>And that the code is, you know, set

00:24:16.825 --> 00:24:17.945
<v Speaker 2>to be safe.

00:24:18.345 --> 00:24:20.665
<v Speaker 2>And for that you can use any tools

00:24:20.665 --> 00:24:21.865
<v Speaker 2>for IEC,

00:24:21.865 --> 00:24:24.025
<v Speaker 2>you know, security checks, you know, static code

00:24:24.025 --> 00:24:27.785
<v Speaker 2>analysis tools like Snyk, Fossa or whatever supports

00:24:27.785 --> 00:24:28.265
<v Speaker 2>Terraform.

00:24:28.770 --> 00:24:31.410
<v Speaker 2>And after that then it becomes kind of

00:24:31.410 --> 00:24:33.890
<v Speaker 2>like an interaction between how do you deploy

00:24:33.890 --> 00:24:34.690
<v Speaker 2>Atlantis

00:24:34.690 --> 00:24:36.770
<v Speaker 2>into the cloud provider and how you are

00:24:36.770 --> 00:24:38.610
<v Speaker 2>interacting with your cloud provider. And that is

00:24:38.610 --> 00:24:40.290
<v Speaker 2>where kind of like the

00:24:40.735 --> 00:24:43.774
<v Speaker 2>well architected framework type of doc will come

00:24:43.774 --> 00:24:44.494
<v Speaker 2>into

00:24:44.735 --> 00:24:47.135
<v Speaker 2>consideration and then realize, okay, how is it

00:24:47.135 --> 00:24:49.774
<v Speaker 2>safe what is the safest way to pass

00:24:49.774 --> 00:24:51.534
<v Speaker 2>to a CICD pipeline

00:24:51.615 --> 00:24:52.495
<v Speaker 2>credentials

00:24:52.495 --> 00:24:55.455
<v Speaker 2>to then run Terraform? And Atlantis will fit

00:24:55.455 --> 00:24:58.470
<v Speaker 2>in between there. So usually what people will

00:24:58.470 --> 00:24:58.950
<v Speaker 2>do,

00:24:59.510 --> 00:25:00.150
<v Speaker 2>will deploy

00:25:00.630 --> 00:25:01.430
<v Speaker 2>Atlantis

00:25:01.430 --> 00:25:02.790
<v Speaker 2>in GCP

00:25:02.790 --> 00:25:04.309
<v Speaker 2>or Azure or

00:25:04.950 --> 00:25:07.510
<v Speaker 2>AWS and they will use role assumption. And

00:25:07.510 --> 00:25:09.750
<v Speaker 2>then the role assumption may some people use

00:25:09.750 --> 00:25:12.150
<v Speaker 2>a centralized account, management account where they have

00:25:12.514 --> 00:25:14.434
<v Speaker 2>an Atlantis server

00:25:14.434 --> 00:25:17.394
<v Speaker 2>or deployment that basically has good mode to

00:25:17.394 --> 00:25:18.834
<v Speaker 2>assume roles everywhere.

00:25:19.075 --> 00:25:21.715
<v Speaker 2>Then their responsibility of having

00:25:21.715 --> 00:25:22.274
<v Speaker 2>the

00:25:23.075 --> 00:25:25.315
<v Speaker 2>roles set up properly so that you don't

00:25:25.315 --> 00:25:28.190
<v Speaker 2>allow all the services, for example, or all

00:25:28.190 --> 00:25:31.230
<v Speaker 2>the Lambdas and you actually create your role

00:25:31.230 --> 00:25:32.190
<v Speaker 2>policies

00:25:32.430 --> 00:25:35.309
<v Speaker 2>to constrain the least access possible

00:25:35.550 --> 00:25:38.030
<v Speaker 2>is the responsibility of the person that, you

00:25:38.030 --> 00:25:40.350
<v Speaker 2>know, is maintaining the REST account. So that's

00:25:40.350 --> 00:25:42.975
<v Speaker 2>why I say it's not just Atlantis,

00:25:43.135 --> 00:25:45.535
<v Speaker 2>it's actually far more important than how the

00:25:45.535 --> 00:25:46.815
<v Speaker 2>project is being built.

00:25:47.055 --> 00:25:49.215
<v Speaker 2>We think with like the security constraints

00:25:49.375 --> 00:25:51.455
<v Speaker 2>and recommendation of the cloud provider and how

00:25:51.455 --> 00:25:53.934
<v Speaker 2>the cloud provider recommends you to then

00:25:54.255 --> 00:25:54.735
<v Speaker 2>assume

00:25:55.270 --> 00:25:59.029
<v Speaker 2>those different role levels to then interact

00:25:59.270 --> 00:26:01.830
<v Speaker 2>with, so that you can interact with the

00:26:01.830 --> 00:26:02.710
<v Speaker 2>cloud provider.

00:26:03.030 --> 00:26:05.350
<v Speaker 2>Atlantis does have some checks in the sense

00:26:05.350 --> 00:26:06.549
<v Speaker 2>of like, for example,

00:26:07.670 --> 00:26:09.110
<v Speaker 2>it doesn't allow you to

00:26:09.590 --> 00:26:10.390
<v Speaker 2>bypass

00:26:10.390 --> 00:26:11.190
<v Speaker 2>or

00:26:11.565 --> 00:26:13.325
<v Speaker 2>to traverse

00:26:13.325 --> 00:26:15.724
<v Speaker 2>your directory where the BR is.

00:26:16.205 --> 00:26:18.364
<v Speaker 2>So because at some point there was

00:26:19.325 --> 00:26:22.445
<v Speaker 2>the possibility to be able to graph files

00:26:22.445 --> 00:26:24.990
<v Speaker 2>outside of your repo. So we have now

00:26:24.990 --> 00:26:27.950
<v Speaker 2>a setting that defaults to only allow the

00:26:27.950 --> 00:26:30.590
<v Speaker 2>PR repository to be looked at.

00:26:30.910 --> 00:26:32.190
<v Speaker 2>And if you want to inject files, there

00:26:32.190 --> 00:26:33.470
<v Speaker 2>is other methods

00:26:33.470 --> 00:26:35.630
<v Speaker 2>to do so. But they would only be

00:26:35.630 --> 00:26:38.215
<v Speaker 2>pertained to that checkout. Because Atlantis,

00:26:38.375 --> 00:26:39.575
<v Speaker 2>it does is when it gets an event,

00:26:39.575 --> 00:26:41.335
<v Speaker 2>a webhookit event, the first thing it does

00:26:41.335 --> 00:26:43.174
<v Speaker 2>is checks the code of that repo, that

00:26:43.174 --> 00:26:44.215
<v Speaker 2>PR, that

00:26:44.535 --> 00:26:46.934
<v Speaker 2>commit hash. And so it downloads the repo,

00:26:46.934 --> 00:26:49.770
<v Speaker 2>creates a repository structure within Atlantis and that's

00:26:49.770 --> 00:26:50.970
<v Speaker 2>where all your code lists and all the

00:26:50.970 --> 00:26:52.570
<v Speaker 2>commands live and where the plan file is

00:26:52.570 --> 00:26:54.170
<v Speaker 2>going to be. Everything is there.

00:26:54.570 --> 00:26:56.810
<v Speaker 2>So now you cannot obviously traverse in between

00:26:56.810 --> 00:27:00.410
<v Speaker 2>directories. In very old versions you could potentially

00:27:00.890 --> 00:27:02.975
<v Speaker 2>do that. And then one thing that I

00:27:02.975 --> 00:27:05.215
<v Speaker 2>will say that Atlantix could do better and

00:27:05.215 --> 00:27:08.735
<v Speaker 2>that we don't really have a good way

00:27:08.735 --> 00:27:10.174
<v Speaker 2>to do so. A lot of people solve

00:27:10.174 --> 00:27:11.374
<v Speaker 2>these problems with

00:27:11.455 --> 00:27:14.095
<v Speaker 2>policy as code. So we have policy checks,

00:27:14.269 --> 00:27:15.309
<v Speaker 2>So you can run

00:27:16.350 --> 00:27:17.709
<v Speaker 2>conf test policies

00:27:18.029 --> 00:27:20.029
<v Speaker 2>against your code. So then you can check

00:27:20.029 --> 00:27:23.230
<v Speaker 2>against provider versions and what kind of providers

00:27:23.230 --> 00:27:24.109
<v Speaker 2>are allowed

00:27:24.429 --> 00:27:26.750
<v Speaker 2>because we have a mechanism called free workflow

00:27:26.750 --> 00:27:28.429
<v Speaker 2>hooks where you can run any type of

00:27:28.815 --> 00:27:30.334
<v Speaker 2>tooling or script

00:27:30.654 --> 00:27:33.054
<v Speaker 2>before Atlantis actually runs. So then you can

00:27:33.054 --> 00:27:34.815
<v Speaker 2>do all those checks yourself.

00:27:35.135 --> 00:27:36.255
<v Speaker 2>But it will be nice to see, for

00:27:36.255 --> 00:27:38.014
<v Speaker 2>example, that we add some sort of way

00:27:38.014 --> 00:27:40.575
<v Speaker 2>to list the providers that are allowed to

00:27:40.575 --> 00:27:41.695
<v Speaker 2>run within

00:27:41.774 --> 00:27:45.350
<v Speaker 2>Atlantis and then Atlantis will actually not run

00:27:45.430 --> 00:27:47.190
<v Speaker 2>that project if it has those,

00:27:47.670 --> 00:27:49.430
<v Speaker 2>kind of like an extension of the policy

00:27:49.430 --> 00:27:51.510
<v Speaker 2>checks, but in an easy configurable

00:27:51.670 --> 00:27:54.150
<v Speaker 2>setting. We don't currently have that. And that

00:27:54.150 --> 00:27:55.430
<v Speaker 2>has been kind of like one of the

00:27:55.430 --> 00:27:57.445
<v Speaker 2>things that's like, hey, it would be nice

00:27:57.445 --> 00:27:58.965
<v Speaker 2>if we could potentially

00:27:58.965 --> 00:28:01.044
<v Speaker 2>do that because one of the biggest issues

00:28:01.044 --> 00:28:01.684
<v Speaker 2>in,

00:28:01.924 --> 00:28:04.245
<v Speaker 2>I guess, that I see as a consultant

00:28:04.245 --> 00:28:06.485
<v Speaker 2>and I have seen it from comments in

00:28:06.485 --> 00:28:07.445
<v Speaker 2>the Slack is that

00:28:08.880 --> 00:28:10.880
<v Speaker 2>they have the Atlantis server, they have this,

00:28:10.880 --> 00:28:12.800
<v Speaker 2>all this set up with all these roles

00:28:12.800 --> 00:28:13.760
<v Speaker 2>and permissions.

00:28:14.160 --> 00:28:16.480
<v Speaker 2>But now anyone that creates a PR can

00:28:16.480 --> 00:28:18.400
<v Speaker 2>add a provider or can add a new

00:28:18.400 --> 00:28:19.120
<v Speaker 2>resource

00:28:19.200 --> 00:28:21.520
<v Speaker 2>that will execute something and they want to

00:28:21.885 --> 00:28:24.205
<v Speaker 2>not allow anyone to do so, but they

00:28:24.205 --> 00:28:26.445
<v Speaker 2>don't have those capabilities maybe at the VCS

00:28:26.445 --> 00:28:28.205
<v Speaker 2>level because they don't have admin rights to

00:28:28.205 --> 00:28:29.645
<v Speaker 2>that or whatever, but they want to do

00:28:29.645 --> 00:28:31.565
<v Speaker 2>it in the Atlantic side, but they can't.

00:28:31.725 --> 00:28:33.725
<v Speaker 2>So that's when they get crafty and then

00:28:33.725 --> 00:28:35.725
<v Speaker 2>create a pre workflow script and so on.

00:28:35.970 --> 00:28:38.049
<v Speaker 2>So I think that there is more work

00:28:38.049 --> 00:28:38.929
<v Speaker 2>to do there.

00:28:39.409 --> 00:28:41.809
<v Speaker 2>But like I said before, since Atlantis is

00:28:41.809 --> 00:28:44.049
<v Speaker 2>just runs your binary of terform,

00:28:44.289 --> 00:28:46.130
<v Speaker 2>I guess the best way for you to

00:28:46.130 --> 00:28:47.489
<v Speaker 2>accommodate for

00:28:47.890 --> 00:28:51.010
<v Speaker 2>any security issues is to actually download, maybe

00:28:51.010 --> 00:28:51.890
<v Speaker 2>create your own image,

00:28:52.825 --> 00:28:54.345
<v Speaker 2>put all the tooling that you want to

00:28:54.345 --> 00:28:56.424
<v Speaker 2>wrap around your Teflon projects with. And then

00:28:56.424 --> 00:28:58.264
<v Speaker 2>maybe if you want, you create a custom

00:28:58.264 --> 00:29:00.825
<v Speaker 2>workflow that will run those tools before

00:29:01.225 --> 00:29:03.465
<v Speaker 2>your project actually runs through Atlantis.

00:29:03.465 --> 00:29:05.465
<v Speaker 2>And then you can kind of like avoid

00:29:05.465 --> 00:29:08.470
<v Speaker 2>some of those kind of like middleman

00:29:08.710 --> 00:29:09.669
<v Speaker 2>injection

00:29:09.750 --> 00:29:11.510
<v Speaker 2>attacks, let's say, if we want to call

00:29:11.510 --> 00:29:14.230
<v Speaker 2>them that way, to avoid those kind of

00:29:14.470 --> 00:29:17.669
<v Speaker 2>like raw user issues, which are more

00:29:18.390 --> 00:29:21.350
<v Speaker 2>common than not actually in all the GitOps

00:29:21.350 --> 00:29:21.750
<v Speaker 2>tooling.

00:29:22.415 --> 00:29:25.535
<v Speaker 2>So, yeah. Interesting. That's a great answer. You

00:29:25.535 --> 00:29:27.455
<v Speaker 0>covered a lot more there than I was

00:29:27.455 --> 00:29:27.294
<v Speaker 2>expecting you No,

00:29:28.975 --> 00:29:30.495
<v Speaker 2>no, that's great. Right? Because what we want

00:29:30.495 --> 00:29:32.575
<v Speaker 0>is people to be, we want them to

00:29:32.575 --> 00:29:34.095
<v Speaker 0>be excited by the project. We want them

00:29:34.095 --> 00:29:35.615
<v Speaker 0>to get value from it. And from that,

00:29:35.615 --> 00:29:37.310
<v Speaker 0>you need to make sure that their security

00:29:37.310 --> 00:29:38.830
<v Speaker 0>posture is in the right place and that

00:29:38.830 --> 00:29:40.590
<v Speaker 0>they're comfortable with this kind of workload running.

00:29:40.590 --> 00:29:42.269
<v Speaker 0>Right? Because the more automation we bring,

00:29:42.670 --> 00:29:44.429
<v Speaker 0>the more that attack surface

00:29:44.590 --> 00:29:46.510
<v Speaker 0>expands. Absolutely. Yeah. But let's

00:29:46.830 --> 00:29:49.710
<v Speaker 0>let's assume people listening. This sounds great. I

00:29:49.710 --> 00:29:51.950
<v Speaker 0>I'm happy with my security posture.

00:29:52.355 --> 00:29:54.595
<v Speaker 0>I wanna start running this. A couple of

00:29:54.595 --> 00:29:56.515
<v Speaker 0>times now you've mentioned the concept of an

00:29:56.515 --> 00:29:58.995
<v Speaker 0>Atlantis server. And I wanna just understand, is

00:29:58.995 --> 00:30:00.195
<v Speaker 0>that a prerequisite

00:30:00.195 --> 00:30:02.195
<v Speaker 0>for people to get started or can they

00:30:02.195 --> 00:30:03.875
<v Speaker 0>just use a GitHub action to run some

00:30:03.875 --> 00:30:06.595
<v Speaker 0>sort of Atlantis binary? Like, what is that

00:30:06.990 --> 00:30:09.710
<v Speaker 0>getting started process? We actually do have in

00:30:09.710 --> 00:30:11.470
<v Speaker 2>our survey, we do have a lot of

00:30:11.470 --> 00:30:13.150
<v Speaker 2>people that wants to see an Atlantis GitHub

00:30:13.150 --> 00:30:14.830
<v Speaker 2>actions, but we don't have that yet. So

00:30:14.830 --> 00:30:16.509
<v Speaker 2>Atlantis is a binary

00:30:16.750 --> 00:30:18.670
<v Speaker 2>that you need to run listening into a

00:30:18.670 --> 00:30:21.464
<v Speaker 2>port, to listen to, webhook requests.

00:30:21.865 --> 00:30:22.825
<v Speaker 2>So, no

00:30:23.544 --> 00:30:25.625
<v Speaker 2>matter where you run it, some people have

00:30:25.625 --> 00:30:27.625
<v Speaker 2>run it in even app run and things

00:30:27.625 --> 00:30:28.264
<v Speaker 2>like that,

00:30:28.664 --> 00:30:30.424
<v Speaker 2>you it has to be listening as a

00:30:30.424 --> 00:30:31.544
<v Speaker 2>D1 somewhere.

00:30:31.784 --> 00:30:35.279
<v Speaker 2>So, most probably most people use container to

00:30:35.279 --> 00:30:38.159
<v Speaker 2>do that in any type of flavored cloud,

00:30:38.159 --> 00:30:40.480
<v Speaker 2>flavored service that can run a container, which

00:30:40.480 --> 00:30:41.359
<v Speaker 2>are many.

00:30:41.759 --> 00:30:43.919
<v Speaker 2>And we do offer a help chart for

00:30:43.919 --> 00:30:45.919
<v Speaker 2>people that are running Kubernetes so that they

00:30:45.919 --> 00:30:47.955
<v Speaker 2>can install the help chart. So, at the

00:30:47.955 --> 00:30:49.235
<v Speaker 2>end of the day, you have to have

00:30:49.235 --> 00:30:50.915
<v Speaker 2>that this binary

00:30:50.915 --> 00:30:53.075
<v Speaker 2>running and listening import forty one forty one,

00:30:53.075 --> 00:30:54.115
<v Speaker 2>which is the default.

00:30:54.275 --> 00:30:56.835
<v Speaker 2>And then that will become your Atlantis instance

00:30:56.835 --> 00:30:57.634
<v Speaker 2>basically.

00:30:57.875 --> 00:30:59.554
<v Speaker 2>And you will have to configure that your

00:30:59.554 --> 00:31:01.875
<v Speaker 2>Atlantis instance

00:31:02.700 --> 00:31:04.379
<v Speaker 2>to be able to fulfill

00:31:04.620 --> 00:31:07.100
<v Speaker 2>kind of like the forecast of, you know,

00:31:07.100 --> 00:31:09.100
<v Speaker 2>PRs and plans that

00:31:09.419 --> 00:31:11.580
<v Speaker 2>you might have, depending on the size of

00:31:11.580 --> 00:31:12.379
<v Speaker 2>your project.

00:31:12.860 --> 00:31:13.900
<v Speaker 2>And size

00:31:14.555 --> 00:31:17.595
<v Speaker 2>is a word that is used very widely

00:31:17.595 --> 00:31:18.475
<v Speaker 2>within

00:31:18.875 --> 00:31:19.675
<v Speaker 2>GitOps,

00:31:19.675 --> 00:31:22.075
<v Speaker 2>but there is a size of Terraform project

00:31:22.475 --> 00:31:24.955
<v Speaker 2>that is very important to be able to

00:31:24.955 --> 00:31:25.995
<v Speaker 2>size your instance

00:31:26.570 --> 00:31:27.850
<v Speaker 2>or your server.

00:31:28.090 --> 00:31:31.210
<v Speaker 1>So can you run Atlantis using Atlantis?

00:31:31.450 --> 00:31:33.850
<v Speaker 1>Is that what I'm hearing, basically? No. Well,

00:31:34.970 --> 00:31:36.810
<v Speaker 2>I'm controlling a little bit. No. No. No.

00:31:36.810 --> 00:31:38.809
<v Speaker 2>Actually, that's a good question. You so

00:31:39.615 --> 00:31:41.695
<v Speaker 2>funny enough, a lot of people do. So,

00:31:41.855 --> 00:31:44.175
<v Speaker 2>a lot of people have, for example, help

00:31:44.175 --> 00:31:45.375
<v Speaker 2>chart integration

00:31:45.695 --> 00:31:46.735
<v Speaker 2>in

00:31:46.735 --> 00:31:49.855
<v Speaker 2>a pipeline in Terraform that then updates itself.

00:31:50.175 --> 00:31:50.894
<v Speaker 2>Great.

00:31:51.055 --> 00:31:52.895
<v Speaker 2>Okay. So, yes. I had to ask because

00:31:52.895 --> 00:31:54.735
<v Speaker 1>I thought that that would be really entertaining

00:31:54.735 --> 00:31:56.600
<v Speaker 1>if it's true. Yeah, yeah, Actually in many

00:31:56.600 --> 00:31:59.399
<v Speaker 2>projects that I set up, Atlantis was

00:31:59.640 --> 00:32:02.759
<v Speaker 2>basically resource zero of the infrastructure

00:32:03.159 --> 00:32:05.399
<v Speaker 2>and it will run within this account that

00:32:05.399 --> 00:32:07.320
<v Speaker 2>I was mentioning before that will assume roles

00:32:07.320 --> 00:32:09.545
<v Speaker 2>in all the different accounts. And Atlantis will

00:32:09.545 --> 00:32:12.105
<v Speaker 2>actually create the first resources in every single

00:32:12.105 --> 00:32:14.105
<v Speaker 2>account. So in a way Atlantis was the

00:32:14.105 --> 00:32:15.065
<v Speaker 2>bootstrapping

00:32:15.305 --> 00:32:17.305
<v Speaker 2>of all the other accounts. But at the

00:32:17.305 --> 00:32:19.465
<v Speaker 2>same time I needed to update Atlantis after

00:32:19.465 --> 00:32:21.705
<v Speaker 2>the accounts were created to like update maps

00:32:21.705 --> 00:32:24.480
<v Speaker 2>and things like that. And basically you could

00:32:24.480 --> 00:32:26.160
<v Speaker 2>potentially run-in the

00:32:27.040 --> 00:32:27.520
<v Speaker 2>repo

00:32:28.560 --> 00:32:31.440
<v Speaker 2>Atlantis plan and you will actually update itself

00:32:31.440 --> 00:32:32.560
<v Speaker 2>with the new values.

00:32:32.720 --> 00:32:34.800
<v Speaker 2>As long as these are not destructive things

00:32:34.800 --> 00:32:36.800
<v Speaker 2>that you're doing within the Terraform code, then

00:32:36.800 --> 00:32:38.955
<v Speaker 2>it should be fine. Otherwise you will destroy

00:32:38.955 --> 00:32:39.595
<v Speaker 2>itself.

00:32:39.835 --> 00:32:42.955
<v Speaker 2>That could happen. It's potentially possible.

00:32:43.035 --> 00:32:44.634
<v Speaker 0>I think I have one more question.

00:32:45.195 --> 00:32:45.835
<v Speaker 0>So

00:32:47.355 --> 00:32:48.075
<v Speaker 0>again,

00:32:48.155 --> 00:32:49.434
<v Speaker 0>under the assumption,

00:32:49.674 --> 00:32:51.995
<v Speaker 0>the interest of the audience has peaked. This

00:32:51.995 --> 00:32:52.875
<v Speaker 0>sounds really cool.

00:32:54.000 --> 00:32:55.680
<v Speaker 0>Let's assume there's tens of people that go,

00:32:55.680 --> 00:32:57.039
<v Speaker 0>I wanna go do this tomorrow.

00:32:57.440 --> 00:32:59.040
<v Speaker 0>Is there ever a use case or ever

00:32:59.040 --> 00:33:00.800
<v Speaker 0>an instance where you would tell any of

00:33:00.800 --> 00:33:02.720
<v Speaker 0>those people, no, Atlantis is not the right

00:33:02.720 --> 00:33:05.520
<v Speaker 0>project for you. They should all Terraform be

00:33:05.520 --> 00:33:07.360
<v Speaker 0>under management of Atlantis,

00:33:07.360 --> 00:33:09.764
<v Speaker 0>or is there way until you have these

00:33:09.764 --> 00:33:12.644
<v Speaker 0>certain constraints and then it becomes important? Yeah,

00:33:12.644 --> 00:33:14.404
<v Speaker 2>that's a very good question.

00:33:15.365 --> 00:33:17.524
<v Speaker 1>You weren't really planning on having this tough

00:33:17.524 --> 00:33:20.164
<v Speaker 1>question on the podcast for you. You're just

00:33:20.164 --> 00:33:21.764
<v Speaker 0>too confident. Was like, he's getting the hard

00:33:21.764 --> 00:33:24.325
<v Speaker 0>questions today. That's a very good question. I

00:33:23.910 --> 00:33:26.870
<v Speaker 2>think that is not an Atlantis responsibility.

00:33:27.190 --> 00:33:30.710
<v Speaker 2>I think that is a business decision,

00:33:31.270 --> 00:33:33.830
<v Speaker 2>security constrained decision within

00:33:34.150 --> 00:33:36.470
<v Speaker 2>the person's project, company project and so on.

00:33:36.795 --> 00:33:39.755
<v Speaker 2>You take that decision before you use Atlantis.

00:33:39.755 --> 00:33:41.435
<v Speaker 2>And then you decide if you want

00:33:41.755 --> 00:33:44.315
<v Speaker 2>or any type of key of automation tooling

00:33:44.475 --> 00:33:46.155
<v Speaker 2>connected to that project.

00:33:46.395 --> 00:33:49.355
<v Speaker 2>I mean, for example, we could potentially say

00:33:49.355 --> 00:33:50.155
<v Speaker 2>that

00:33:50.850 --> 00:33:53.649
<v Speaker 2>a project that is creating

00:33:54.610 --> 00:33:56.450
<v Speaker 2>new, for example, let's let's talk about it

00:33:56.450 --> 00:33:57.330
<v Speaker 2>because

00:33:57.330 --> 00:33:59.410
<v Speaker 2>I'm more familiar with it. But imagine that

00:33:59.410 --> 00:34:02.049
<v Speaker 2>I'm creating the AWS accounts and I'm setting

00:34:02.049 --> 00:34:03.250
<v Speaker 2>up SCPs,

00:34:03.250 --> 00:34:05.570
<v Speaker 2>service control policies within the account

00:34:06.025 --> 00:34:06.985
<v Speaker 2>and so on.

00:34:07.385 --> 00:34:08.985
<v Speaker 2>You might want to say,

00:34:09.225 --> 00:34:10.665
<v Speaker 2>you know, at some point or maybe the

00:34:10.665 --> 00:34:12.425
<v Speaker 2>security team will say, you know what, we

00:34:12.425 --> 00:34:13.705
<v Speaker 2>want to manage that.

00:34:14.425 --> 00:34:16.905
<v Speaker 2>But we don't want that as a GitOps

00:34:16.905 --> 00:34:20.185
<v Speaker 2>approach because we run those so infrequently that

00:34:20.185 --> 00:34:22.160
<v Speaker 2>we will prefer to actually do it in

00:34:22.160 --> 00:34:24.080
<v Speaker 2>a pipeline that is very simplistic,

00:34:24.480 --> 00:34:26.480
<v Speaker 2>but we don't want Atlantis in between. We

00:34:26.480 --> 00:34:29.120
<v Speaker 2>want to provide to Atlantis the required access

00:34:29.120 --> 00:34:32.000
<v Speaker 2>and that's about it, which is more like

00:34:32.000 --> 00:34:33.760
<v Speaker 2>in a brownfield scenario.

00:34:33.760 --> 00:34:36.614
<v Speaker 2>And that happens quite often where, where the

00:34:36.614 --> 00:34:39.175
<v Speaker 2>security posture of the company doesn't allow,

00:34:39.574 --> 00:34:42.135
<v Speaker 2>you know, you to run semi automated tools

00:34:42.135 --> 00:34:44.535
<v Speaker 2>or a high security

00:34:45.094 --> 00:34:48.135
<v Speaker 2>or high access level telephone project.

00:34:48.789 --> 00:34:51.670
<v Speaker 2>So that depends mostly on that. That you

00:34:51.670 --> 00:34:53.349
<v Speaker 2>cannot run anything at that. You can run

00:34:53.349 --> 00:34:55.429
<v Speaker 2>absolutely every single piece of code in Atlantis.

00:34:55.829 --> 00:34:57.510
<v Speaker 2>And I have done the same kind of

00:34:57.510 --> 00:35:01.029
<v Speaker 2>like workflow of creating SCPs and creating accounts

00:35:01.029 --> 00:35:03.565
<v Speaker 2>and so on within Atlantis. But that Atlantis

00:35:03.565 --> 00:35:05.325
<v Speaker 2>basically had got access.

00:35:06.045 --> 00:35:08.365
<v Speaker 2>If you're okay with that, then that's fine,

00:35:08.365 --> 00:35:11.085
<v Speaker 2>which is true to every other project out

00:35:11.085 --> 00:35:14.045
<v Speaker 2>there, Terraform Cloud, Terra made anything that can

00:35:14.045 --> 00:35:15.885
<v Speaker 2>automate Terraform workflows.

00:35:15.885 --> 00:35:17.819
<v Speaker 2>Okay. I've got one more now just because

00:35:17.819 --> 00:35:20.059
<v Speaker 0>we're talking about gut access mode. Right? Let's

00:35:20.059 --> 00:35:20.700
<v Speaker 0>say

00:35:21.180 --> 00:35:21.660
<v Speaker 0>I

00:35:22.539 --> 00:35:24.460
<v Speaker 0>mean, if they pop in my head, I'm

00:35:24.460 --> 00:35:26.299
<v Speaker 0>gonna ask them. That's that's my to my

00:35:26.299 --> 00:35:27.740
<v Speaker 0>own detriment. But if

00:35:27.900 --> 00:35:30.494
<v Speaker 0>I run Atlantis, let's use AWS because that's

00:35:30.494 --> 00:35:32.255
<v Speaker 0>the one you just mentioned. Right? And I

00:35:32.255 --> 00:35:34.494
<v Speaker 0>I assign a role to that instance. I'm

00:35:34.494 --> 00:35:36.494
<v Speaker 0>assuming I can use, you know, you said

00:35:36.494 --> 00:35:37.855
<v Speaker 0>assume role a couple of times now. Right?

00:35:37.855 --> 00:35:39.775
<v Speaker 0>But workload identity, I can say this workload

00:35:39.775 --> 00:35:41.454
<v Speaker 0>can assume this role because it is this

00:35:41.454 --> 00:35:42.175
<v Speaker 0>workload.

00:35:42.255 --> 00:35:44.640
<v Speaker 0>So, I mean, again, we're you know, it's

00:35:44.640 --> 00:35:46.240
<v Speaker 0>not deflection, but when we talk about the

00:35:46.240 --> 00:35:48.160
<v Speaker 0>security of Atlantis, it does just come down

00:35:48.160 --> 00:35:50.640
<v Speaker 0>to good cloud practices, the standard things you

00:35:50.640 --> 00:35:52.960
<v Speaker 0>would have to do regardless of whether Atlantis

00:35:52.960 --> 00:35:54.880
<v Speaker 0>or not. That's so correct. So, it's not

00:35:54.880 --> 00:35:56.815
<v Speaker 2>that's why I said, you know, that's what

00:35:56.815 --> 00:35:58.495
<v Speaker 2>people, we get a lot of questions of

00:35:58.495 --> 00:36:00.495
<v Speaker 2>companies like they send me a Slack messages

00:36:00.495 --> 00:36:01.455
<v Speaker 2>directly. Hey,

00:36:02.175 --> 00:36:03.535
<v Speaker 2>you know, we want to use it, but

00:36:03.535 --> 00:36:06.495
<v Speaker 2>it's not PCI compliant or it's not HIPAA

00:36:06.495 --> 00:36:08.810
<v Speaker 2>compliant or is it, but that's not, is

00:36:09.290 --> 00:36:11.370
<v Speaker 2>it the advantage responsibility? What does it, the

00:36:11.370 --> 00:36:12.890
<v Speaker 2>line needs to be drawn?

00:36:13.770 --> 00:36:15.610
<v Speaker 2>And a lot of people actually get confused.

00:36:15.610 --> 00:36:17.450
<v Speaker 2>Oh, but Atlantis will have all these access.

00:36:17.450 --> 00:36:19.530
<v Speaker 2>No, no, no. You are giving access to

00:36:19.530 --> 00:36:20.330
<v Speaker 2>Atlantis.

00:36:20.410 --> 00:36:22.565
<v Speaker 2>That just doesn't have any access. It doesn't

00:36:22.565 --> 00:36:24.404
<v Speaker 2>want you to set up AWS. We don't

00:36:24.404 --> 00:36:26.644
<v Speaker 2>have an AWS client within the library. We

00:36:26.644 --> 00:36:29.045
<v Speaker 2>just run Terraform and your Terraform that is

00:36:29.045 --> 00:36:30.644
<v Speaker 2>in your binary. So if you create your

00:36:30.644 --> 00:36:32.644
<v Speaker 2>image, you have to put Terraform there. Otherwise

00:36:32.644 --> 00:36:34.325
<v Speaker 2>it doesn't run. We don't have a client

00:36:34.325 --> 00:36:35.125
<v Speaker 2>built in and go.

00:36:35.829 --> 00:36:36.309
<v Speaker 2>So,

00:36:36.790 --> 00:36:39.109
<v Speaker 2>and that's where people actually get confused because

00:36:39.109 --> 00:36:41.349
<v Speaker 2>they think that Atlantis is the one that

00:36:41.349 --> 00:36:43.190
<v Speaker 2>has access, but in reality it's the same

00:36:43.190 --> 00:36:45.670
<v Speaker 2>as me as the administrator, the DevOps person

00:36:45.670 --> 00:36:47.030
<v Speaker 2>or platform engineer

00:36:47.030 --> 00:36:49.109
<v Speaker 2>that has access to run terraform is the

00:36:49.109 --> 00:36:51.385
<v Speaker 2>same deal. It's not different. The difference, I

00:36:51.385 --> 00:36:54.025
<v Speaker 2>guess, is that that automated tooling, which in

00:36:54.025 --> 00:36:55.385
<v Speaker 2>this case will be Atlantis,

00:36:55.385 --> 00:36:57.464
<v Speaker 2>have more most probably will have more access

00:36:57.464 --> 00:36:59.465
<v Speaker 2>than you running locally.

00:36:59.865 --> 00:37:00.345
<v Speaker 2>But

00:37:02.400 --> 00:37:04.400
<v Speaker 2>would be it. One thing that you could

00:37:04.400 --> 00:37:06.799
<v Speaker 2>do in Atlantis, which we recommend most of

00:37:06.799 --> 00:37:08.640
<v Speaker 2>the time is to run multiple Atlantis

00:37:08.960 --> 00:37:10.000
<v Speaker 2>installations

00:37:10.000 --> 00:37:12.880
<v Speaker 2>or containers, the servers in different accounts. That's

00:37:12.880 --> 00:37:15.520
<v Speaker 2>for sure we always recommend. If someone asks,

00:37:16.015 --> 00:37:18.815
<v Speaker 2>if you really want to make the blast

00:37:18.815 --> 00:37:20.255
<v Speaker 2>radius of access,

00:37:20.415 --> 00:37:21.055
<v Speaker 2>I guess,

00:37:21.615 --> 00:37:23.375
<v Speaker 2>the Atlantis server smaller,

00:37:23.695 --> 00:37:25.775
<v Speaker 2>just run an Atlantis server in each account.

00:37:26.255 --> 00:37:28.975
<v Speaker 2>So that then we have a way in

00:37:28.975 --> 00:37:31.490
<v Speaker 2>Atlantis to configure multiple Atlantis servers using the

00:37:31.490 --> 00:37:33.170
<v Speaker 2>same repo. So if you have a mono

00:37:33.170 --> 00:37:34.930
<v Speaker 2>repo to do all those

00:37:35.010 --> 00:37:36.130
<v Speaker 2>things, you can actually

00:37:36.530 --> 00:37:37.810
<v Speaker 2>use Atlantis

00:37:37.810 --> 00:37:40.130
<v Speaker 2>configuration to be able to say Atlantis

00:37:40.130 --> 00:37:41.090
<v Speaker 2>dev

00:37:41.090 --> 00:37:42.850
<v Speaker 2>plan and then it would just run plan

00:37:42.850 --> 00:37:44.130
<v Speaker 2>on dev and so on. And then you

00:37:44.130 --> 00:37:46.724
<v Speaker 2>can apply and follow approval process and approval

00:37:46.724 --> 00:37:49.045
<v Speaker 2>rules within the repo. That will be actually

00:37:49.045 --> 00:37:51.525
<v Speaker 2>the best approach and a lot of people

00:37:51.525 --> 00:37:52.725
<v Speaker 2>do that

00:37:53.045 --> 00:37:53.925
<v Speaker 2>currently.

00:37:54.405 --> 00:37:55.525
<v Speaker 2>Obviously

00:37:55.765 --> 00:37:57.444
<v Speaker 2>it depends on your VCS, if it supports

00:37:57.444 --> 00:38:00.244
<v Speaker 2>multiple webhooks and things like that. Some VCSs

00:38:00.244 --> 00:38:01.045
<v Speaker 2>are different.

00:38:02.780 --> 00:38:04.540
<v Speaker 2>You know, GitHub and GitLab, for example, are,

00:38:04.540 --> 00:38:06.940
<v Speaker 2>you know, that's totally normal and people do

00:38:06.940 --> 00:38:07.500
<v Speaker 2>that.

00:38:08.380 --> 00:38:10.700
<v Speaker 0>I mean, I'll only challenge one thing there.

00:38:10.700 --> 00:38:12.300
<v Speaker 0>It's not the best approach. The best approach

00:38:12.300 --> 00:38:13.820
<v Speaker 0>is to have no infrastructure and no code.

00:38:14.335 --> 00:38:16.575
<v Speaker 2>Correct. Yeah. And the best security is disconnect

00:38:16.575 --> 00:38:17.535
<v Speaker 2>the RJ45

00:38:17.535 --> 00:38:19.855
<v Speaker 2>from your rack. That's it. Pull Exactly. That's

00:38:19.855 --> 00:38:21.135
<v Speaker 0>it. Just turn it all off.

00:38:21.455 --> 00:38:23.375
<v Speaker 0>And I think on that note, we have

00:38:23.455 --> 00:38:25.295
<v Speaker 0>had a wonderful episode. So

00:38:25.455 --> 00:38:27.535
<v Speaker 0>any last words for our audience before we

00:38:27.535 --> 00:38:29.060
<v Speaker 0>let you go today? Well, I guess that

00:38:29.060 --> 00:38:31.380
<v Speaker 2>if anyone wants to use Atlantis and or

00:38:31.380 --> 00:38:33.780
<v Speaker 2>has any questions about it, we are always

00:38:33.780 --> 00:38:35.300
<v Speaker 2>very active in the Slack channel and the

00:38:35.300 --> 00:38:36.180
<v Speaker 2>CNCF,

00:38:36.500 --> 00:38:37.620
<v Speaker 2>in the Atlantis channel.

00:38:38.020 --> 00:38:39.620
<v Speaker 2>So you're welcome to join,

00:38:39.940 --> 00:38:42.175
<v Speaker 2>ask questions, try it out. I would try

00:38:42.175 --> 00:38:44.415
<v Speaker 2>to, you know, guide you within my time

00:38:44.415 --> 00:38:46.895
<v Speaker 2>limits and anything that you're

00:38:46.895 --> 00:38:47.855
<v Speaker 2>trying to do,

00:38:48.175 --> 00:38:49.694
<v Speaker 2>and we will do the best to help

00:38:49.694 --> 00:38:50.415
<v Speaker 2>you out,

00:38:50.734 --> 00:38:52.255
<v Speaker 2>you know, with the community.

00:38:52.494 --> 00:38:53.930
<v Speaker 2>Yeah. Very nice.

00:38:54.250 --> 00:38:56.089
<v Speaker 1>Well, thank you so much for joining us.

00:38:56.089 --> 00:38:58.010
<v Speaker 1>We're really happy to have had you. Yeah.

00:38:58.010 --> 00:38:59.690
<v Speaker 2>Thank you for the interview. That's amazing. It

00:38:59.690 --> 00:39:01.849
<v Speaker 2>was pretty good time. So thank you. Thanks

00:39:01.849 --> 00:39:03.609
<v Speaker 1>for joining us. If you want to keep

00:39:03.609 --> 00:39:06.010
<v Speaker 0>up with us, consider subscribing to the podcast

00:39:06.245 --> 00:39:08.645
<v Speaker 0>on your favorite podcasting app or even go

00:39:08.645 --> 00:39:11.045
<v Speaker 0>to CloudNativeCompass.fm.

00:39:11.045 --> 00:39:12.405
<v Speaker 1>And if you want us to talk with

00:39:12.405 --> 00:39:15.285
<v Speaker 1>someone specific or cover a specific topic,

00:39:15.525 --> 00:39:17.605
<v Speaker 1>reach out to us on any social media

00:39:17.605 --> 00:39:20.500
<v Speaker 1>platform. Until next time when exploring the cloud

00:39:20.500 --> 00:39:21.540
<v Speaker 0>native landscape

00:39:21.619 --> 00:39:22.500
<v Speaker 0>on three.

00:39:22.660 --> 00:39:24.340
<v Speaker 1>On three. One,

00:39:24.579 --> 00:39:25.220
<v Speaker 0>two,

00:39:25.380 --> 00:39:26.020
<v Speaker 0>three.

00:39:26.420 --> 00:39:28.339
<v Speaker 0>Don't forget your compass. Forget your compass.
