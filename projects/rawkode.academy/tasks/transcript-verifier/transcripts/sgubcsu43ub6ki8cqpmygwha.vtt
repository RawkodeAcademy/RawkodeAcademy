WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: d1d134c5-7214-4b29-9970-e9496323f17f
Created: 2025-06-05T21:51:14.581Z
Duration: 5368.6597
Channels: 1

00:00:06.640 --> 00:00:11.280
<v Speaker 0>Welcome to the Chiro Show where open source

00:00:11.280 --> 00:00:12.799
<v Speaker 0>make systems

00:00:25.770 --> 00:00:27.770
<v Speaker 0>the key. Daverwolf's

00:00:27.770 --> 00:00:28.730
<v Speaker 0>engineers

00:00:28.810 --> 00:00:32.010
<v Speaker 0>gather around the best infrastructure

00:00:32.010 --> 00:00:33.930
<v Speaker 0>tool we found.

00:00:36.330 --> 00:00:37.450
<v Speaker 0>KAIROS,

00:00:37.610 --> 00:00:38.970
<v Speaker 0>KAIROS,

00:00:39.130 --> 00:00:41.210
<v Speaker 0>making it simple and clean.

00:00:55.140 --> 00:00:56.660
<v Speaker 0>Star us.

00:00:56.660 --> 00:00:58.820
<v Speaker 0>There's so much more.

00:01:04.019 --> 00:01:07.700
<v Speaker 0>From edge computing to the cloud of heights,

00:01:07.700 --> 00:01:09.460
<v Speaker 0>there is an architect.

00:01:10.020 --> 00:01:11.125
<v Speaker 0>See why

00:01:11.285 --> 00:01:13.205
<v Speaker 0>open source contributors

00:01:13.205 --> 00:01:14.645
<v Speaker 0>join the fight.

00:01:14.885 --> 00:01:17.365
<v Speaker 0>The future of infrastructure

00:01:17.445 --> 00:01:19.205
<v Speaker 0>starts tonight.

00:01:21.285 --> 00:01:23.605
<v Speaker 0>So grab your coffee,

00:01:23.605 --> 00:01:24.405
<v Speaker 0>settle

00:02:14.705 --> 00:02:17.905
<v Speaker 1>Hello, and welcome back to the Rawkode Academy.

00:02:17.905 --> 00:02:20.305
<v Speaker 1>I'm your host, David Flanagan, also known across

00:02:20.305 --> 00:02:21.745
<v Speaker 1>the Internet as Rawkode.

00:02:21.905 --> 00:02:24.065
<v Speaker 1>And this is an episode of Rawkode Live,

00:02:24.580 --> 00:02:26.420
<v Speaker 1>a show where we take a look at

00:02:26.420 --> 00:02:28.580
<v Speaker 1>amazing and interesting and fun

00:02:28.900 --> 00:02:31.220
<v Speaker 1>all of the above cloud native projects to

00:02:31.220 --> 00:02:33.060
<v Speaker 1>help make your cloud native lives all that

00:02:33.060 --> 00:02:35.300
<v Speaker 1>little bit easier. And today, we're taking a

00:02:35.300 --> 00:02:37.780
<v Speaker 1>look at a pretty cool project called Kairos.

00:02:38.444 --> 00:02:40.685
<v Speaker 1>To guide us today, we are joined by

00:02:42.285 --> 00:02:45.885
<v Speaker 1>two fantabulous guests from Spectral Cloud and contributors

00:02:45.885 --> 00:02:48.045
<v Speaker 1>and maintainers of the Kairos project.

00:02:48.205 --> 00:02:48.845
<v Speaker 1>Hello.

00:02:49.245 --> 00:02:51.565
<v Speaker 1>Welcome to the show. This is Mauro and

00:02:51.565 --> 00:02:53.004
<v Speaker 1>Ettore. How are you both?

00:02:53.860 --> 00:02:55.060
<v Speaker 1>Hello, everyone.

00:02:56.100 --> 00:02:57.780
<v Speaker 1>Hey, everyone. Thank you.

00:02:58.100 --> 00:03:00.260
<v Speaker 1>All right. Let's

00:03:00.260 --> 00:03:01.940
<v Speaker 1>take a wee minute just to say hello

00:03:01.940 --> 00:03:04.100
<v Speaker 1>and introduce yourselves. We'll start at the top

00:03:04.100 --> 00:03:05.780
<v Speaker 1>right there with you, Mauro, and then move

00:03:05.780 --> 00:03:06.900
<v Speaker 1>down. Please take it away.

00:03:07.795 --> 00:03:08.355
<v Speaker 2>Yeah.

00:03:08.595 --> 00:03:11.395
<v Speaker 2>So hi, everyone. I'm Mauro. I'm originally from

00:03:11.395 --> 00:03:12.275
<v Speaker 2>Guatemala,

00:03:12.275 --> 00:03:14.355
<v Speaker 2>but I've been living in Europe, for a

00:03:14.355 --> 00:03:16.195
<v Speaker 2>while now, currently in Belgium.

00:03:17.155 --> 00:03:17.635
<v Speaker 2>And,

00:03:17.955 --> 00:03:19.075
<v Speaker 2>yeah, I'm working

00:03:19.820 --> 00:03:22.300
<v Speaker 2>at SpectraCloud as a staff engineer at the

00:03:22.300 --> 00:03:22.780
<v Speaker 2>moment

00:03:23.500 --> 00:03:24.540
<v Speaker 2>with Tore.

00:03:24.540 --> 00:03:27.180
<v Speaker 2>He's my boss, so I hope this goes

00:03:27.180 --> 00:03:27.740
<v Speaker 2>well.

00:03:30.620 --> 00:03:32.060
<v Speaker 2>I'm trying to

00:03:32.460 --> 00:03:34.620
<v Speaker 2>put out the word for KAROS in different

00:03:34.620 --> 00:03:36.655
<v Speaker 2>events. So KCDs,

00:03:36.655 --> 00:03:37.535
<v Speaker 2>KubeCon,

00:03:37.694 --> 00:03:39.695
<v Speaker 2>me expect to see me there.

00:03:40.094 --> 00:03:43.534
<v Speaker 2>And I'm part of maintainer part, I guess,

00:03:43.534 --> 00:03:46.415
<v Speaker 2>DevRel or something like that within the team.

00:03:47.295 --> 00:03:49.534
<v Speaker 2>Yeah. And on my free time,

00:03:50.360 --> 00:03:53.320
<v Speaker 2>if I have any because of the newborn,

00:03:53.959 --> 00:03:56.360
<v Speaker 2>I I try to go out running

00:03:56.680 --> 00:03:58.840
<v Speaker 2>or playing the guitar a little bit. That's

00:03:58.840 --> 00:03:59.320
<v Speaker 2>it.

00:04:00.040 --> 00:04:01.400
<v Speaker 1>Awesome. Thank you so much.

00:04:03.045 --> 00:04:05.125
<v Speaker 3>Yeah. I'm Ettore Giacinto.

00:04:05.364 --> 00:04:08.004
<v Speaker 3>I'm from Italy. I'm head of open source

00:04:08.004 --> 00:04:09.205
<v Speaker 3>at SpectroCloud.

00:04:09.925 --> 00:04:11.285
<v Speaker 3>I basically created

00:04:11.685 --> 00:04:13.285
<v Speaker 3>Kairos at the beginning.

00:04:13.925 --> 00:04:16.005
<v Speaker 3>And, yeah, since then, it grew as a

00:04:16.005 --> 00:04:16.404
<v Speaker 3>very

00:04:17.089 --> 00:04:17.730
<v Speaker 3>much

00:04:18.050 --> 00:04:19.810
<v Speaker 3>bigger open source project.

00:04:20.850 --> 00:04:22.210
<v Speaker 3>I really like

00:04:22.450 --> 00:04:24.130
<v Speaker 3>working in the open,

00:04:24.850 --> 00:04:26.370
<v Speaker 3>and I've been also very

00:04:27.090 --> 00:04:28.690
<v Speaker 3>passionate open source contributor.

00:04:29.665 --> 00:04:31.905
<v Speaker 3>So, for instance, I was an ex Gentle

00:04:31.905 --> 00:04:33.025
<v Speaker 3>developer also.

00:04:33.665 --> 00:04:36.305
<v Speaker 3>So I like to put my hands in

00:04:36.305 --> 00:04:37.824
<v Speaker 3>the lower stack of the system. I like

00:04:37.824 --> 00:04:39.425
<v Speaker 3>to understand every single piece.

00:04:40.065 --> 00:04:40.945
<v Speaker 3>I've been also

00:04:41.264 --> 00:04:42.545
<v Speaker 3>playing with AI.

00:04:42.705 --> 00:04:45.100
<v Speaker 3>So maybe some of you know maybe local

00:04:45.100 --> 00:04:47.900
<v Speaker 3>AI or I've been contributing to Lama c

00:04:47.900 --> 00:04:48.700
<v Speaker 3>plus plus

00:04:49.900 --> 00:04:51.260
<v Speaker 3>And, yeah, that's

00:04:51.420 --> 00:04:53.180
<v Speaker 3>that's a little bit about me.

00:04:53.980 --> 00:04:55.820
<v Speaker 1>Awesome. Very nice. Italy.

00:04:56.460 --> 00:04:58.540
<v Speaker 3>Italy and then and then have it run

00:04:58.540 --> 00:04:58.860
<v Speaker 3>there.

00:05:00.715 --> 00:05:02.395
<v Speaker 1>Nice. Awesome. Italy

00:05:02.955 --> 00:05:03.515
<v Speaker 1>and

00:05:03.995 --> 00:05:05.435
<v Speaker 1>currently Belgium.

00:05:05.435 --> 00:05:07.435
<v Speaker 1>I mean, if if you're in Belgium, I

00:05:07.435 --> 00:05:09.675
<v Speaker 1>hope you like beer. Right? Yeah. Yeah. Yeah.

00:05:09.675 --> 00:05:10.875
<v Speaker 2>Definitely. I mean,

00:05:11.770 --> 00:05:14.169
<v Speaker 2>it's part of the reasons, not the only

00:05:14.169 --> 00:05:14.729
<v Speaker 2>one.

00:05:15.210 --> 00:05:16.969
<v Speaker 1>Yeah. I mean, Italy has some good beer

00:05:16.969 --> 00:05:18.650
<v Speaker 1>too, but I think in Europe, Belgium is

00:05:18.650 --> 00:05:20.169
<v Speaker 1>probably one of the places to go. The

00:05:20.169 --> 00:05:22.009
<v Speaker 1>the challenge with Belgian beer is you have

00:05:22.009 --> 00:05:23.530
<v Speaker 1>two and then you're ready for your bed.

00:05:23.530 --> 00:05:25.210
<v Speaker 1>At least I don't know. That is true.

00:05:25.305 --> 00:05:27.465
<v Speaker 2>Yeah. Yeah. Like, it's funny when people don't

00:05:27.465 --> 00:05:30.025
<v Speaker 2>know that fact and think they can just

00:05:30.025 --> 00:05:32.345
<v Speaker 2>drink their beers like they do somewhere else.

00:05:33.544 --> 00:05:36.185
<v Speaker 1>No. Low alcohol beer in Belgium is, 6%.

00:05:36.185 --> 00:05:36.824
<v Speaker 1>Right? So

00:05:37.544 --> 00:05:37.785
<v Speaker 1>Yeah.

00:05:38.569 --> 00:05:39.450
<v Speaker 1>Anyway,

00:05:39.930 --> 00:05:41.930
<v Speaker 1>so today we're taking a look at Kairos.

00:05:41.930 --> 00:05:43.130
<v Speaker 1>Which one of you would like to kick

00:05:43.130 --> 00:05:44.650
<v Speaker 1>things off and just tell us a little

00:05:44.650 --> 00:05:46.490
<v Speaker 1>bit of a high level what is the

00:05:46.490 --> 00:05:47.530
<v Speaker 1>Kairos project?

00:05:50.665 --> 00:05:52.745
<v Speaker 2>Maybe you do it, Tore, because, I mean,

00:05:52.745 --> 00:05:53.865
<v Speaker 2>you have the whole thing behind Yeah.

00:05:56.665 --> 00:05:57.145
<v Speaker 3>So,

00:05:57.785 --> 00:06:01.225
<v Speaker 3>basically, Kairos is a metalinux distribution.

00:06:01.305 --> 00:06:01.785
<v Speaker 3>So

00:06:02.820 --> 00:06:05.460
<v Speaker 3>it's a way to streamline

00:06:06.580 --> 00:06:08.020
<v Speaker 3>the management

00:06:08.180 --> 00:06:09.380
<v Speaker 3>of an OS.

00:06:10.180 --> 00:06:11.460
<v Speaker 3>The peculiarity

00:06:11.460 --> 00:06:15.380
<v Speaker 3>is that it's vendor neutral. So it doesn't

00:06:15.860 --> 00:06:17.140
<v Speaker 3>really have any,

00:06:18.555 --> 00:06:21.275
<v Speaker 3>I would say, dependency on a specific OS,

00:06:21.595 --> 00:06:24.475
<v Speaker 3>which basically means you can use it as

00:06:25.275 --> 00:06:27.595
<v Speaker 3>a layer of your infrastructure.

00:06:27.915 --> 00:06:30.315
<v Speaker 3>So if you are trying to build an

00:06:30.315 --> 00:06:31.515
<v Speaker 3>immutable infrastructure,

00:06:32.380 --> 00:06:35.180
<v Speaker 3>you can combine it with other pieces. So

00:06:35.180 --> 00:06:36.380
<v Speaker 3>for instance, if you

00:06:36.860 --> 00:06:38.940
<v Speaker 3>you're used to use Ubuntu, you can use

00:06:38.940 --> 00:06:39.820
<v Speaker 3>Ubuntu

00:06:39.820 --> 00:06:41.020
<v Speaker 3>plus KIROS.

00:06:41.260 --> 00:06:44.060
<v Speaker 3>And what you'll keep, it's an immutable system

00:06:44.060 --> 00:06:44.540
<v Speaker 3>at the end.

00:06:45.885 --> 00:06:47.965
<v Speaker 3>Immutable system, it's very

00:06:48.605 --> 00:06:49.245
<v Speaker 3>much

00:06:50.685 --> 00:06:53.405
<v Speaker 3>different from a standard Linux system because you

00:06:53.405 --> 00:06:55.885
<v Speaker 3>cannot really write on all the the folders

00:06:55.885 --> 00:06:58.125
<v Speaker 3>that you are typically used to. So you

00:06:58.125 --> 00:07:01.229
<v Speaker 3>cannot just install a new software with, so

00:07:01.229 --> 00:07:02.510
<v Speaker 3>to say, apt get.

00:07:03.389 --> 00:07:04.510
<v Speaker 3>We're going to

00:07:05.870 --> 00:07:07.310
<v Speaker 3>upgrade

00:07:07.310 --> 00:07:09.550
<v Speaker 3>the system every time. So this is how

00:07:09.550 --> 00:07:10.750
<v Speaker 3>it works with

00:07:11.550 --> 00:07:12.270
<v Speaker 3>providing

00:07:12.910 --> 00:07:15.805
<v Speaker 3>updates or changes to our running system. So

00:07:15.805 --> 00:07:18.845
<v Speaker 3>you do that with this AB mechanism,

00:07:18.845 --> 00:07:21.085
<v Speaker 3>similar to Android phones, right? So where you

00:07:21.085 --> 00:07:23.325
<v Speaker 3>have a new updates coming in and you

00:07:23.325 --> 00:07:25.245
<v Speaker 3>say, yes, I want to install the new

00:07:25.245 --> 00:07:26.285
<v Speaker 3>updates. So the

00:07:26.845 --> 00:07:29.565
<v Speaker 3>phone goes off, it applies the upgrade, and

00:07:29.565 --> 00:07:31.440
<v Speaker 3>you start with the new system. So this

00:07:31.440 --> 00:07:33.040
<v Speaker 3>is how

00:07:33.120 --> 00:07:35.360
<v Speaker 3>Kairos basically transform

00:07:35.360 --> 00:07:36.080
<v Speaker 3>any

00:07:36.400 --> 00:07:38.639
<v Speaker 3>other base operative system too,

00:07:39.520 --> 00:07:41.760
<v Speaker 3>if that makes sense. So if you have

00:07:42.639 --> 00:07:43.520
<v Speaker 3>OpenSUSE,

00:07:43.520 --> 00:07:46.080
<v Speaker 3>you have Alpine, it doesn't really matter. You're

00:07:46.080 --> 00:07:48.765
<v Speaker 3>going to upgrade those systems in the same

00:07:48.765 --> 00:07:49.965
<v Speaker 3>consistent way.

00:07:50.445 --> 00:07:50.925
<v Speaker 3>And

00:07:51.965 --> 00:07:54.445
<v Speaker 3>on top of that, you can manage that

00:07:54.445 --> 00:07:56.045
<v Speaker 3>very easily with Kubernetes.

00:07:56.045 --> 00:07:59.165
<v Speaker 3>So you will find in the Kairos documentation

00:07:59.485 --> 00:08:00.365
<v Speaker 3>a lot of

00:08:01.669 --> 00:08:04.550
<v Speaker 3>references to run it with Kubernetes, because when

00:08:04.550 --> 00:08:05.910
<v Speaker 3>it comes to managing

00:08:07.590 --> 00:08:09.430
<v Speaker 3>fleets of machines,

00:08:10.870 --> 00:08:12.710
<v Speaker 3>then it comes very handy to use also

00:08:12.710 --> 00:08:15.350
<v Speaker 3>Kubernetes as a management platform

00:08:15.350 --> 00:08:16.229
<v Speaker 3>for upgrades.

00:08:18.264 --> 00:08:18.985
<v Speaker 1>Okay.

00:08:19.305 --> 00:08:21.065
<v Speaker 1>So I I've got a few questions. You

00:08:21.065 --> 00:08:24.264
<v Speaker 1>know, I think immutable Linux distributions for the

00:08:24.264 --> 00:08:26.504
<v Speaker 1>average cloud native developer, we're all familiar with

00:08:26.504 --> 00:08:28.504
<v Speaker 1>maybe one or two, maybe not having shipped

00:08:28.504 --> 00:08:30.420
<v Speaker 1>them to prod, but know, I think the

00:08:30.420 --> 00:08:32.580
<v Speaker 1>original one in this space was core OS

00:08:32.580 --> 00:08:34.419
<v Speaker 1>from way back in the day Cool. Which

00:08:34.419 --> 00:08:36.340
<v Speaker 1>was built on top of RPM

00:08:36.340 --> 00:08:37.220
<v Speaker 1>West Street.

00:08:37.620 --> 00:08:40.340
<v Speaker 1>And then modern times, we've got flat car,

00:08:40.340 --> 00:08:41.460
<v Speaker 1>which I think is very similar.

00:08:42.335 --> 00:08:43.375
<v Speaker 1>But the reason

00:08:43.855 --> 00:08:46.095
<v Speaker 1>they're they're built on RPM OS tree, which

00:08:46.095 --> 00:08:48.575
<v Speaker 1>means they're probably stuck to Fedora and, you

00:08:48.575 --> 00:08:50.335
<v Speaker 1>know, Red Hat Lake distributions.

00:08:50.415 --> 00:08:52.815
<v Speaker 1>But you've mentioned Ubuntu already and almost that

00:08:52.815 --> 00:08:54.975
<v Speaker 1>this is gastro agnostic.

00:08:55.360 --> 00:08:57.600
<v Speaker 1>So I'm going to assume that Kairos isn't

00:08:57.600 --> 00:08:59.840
<v Speaker 1>using RPM OS three under the hood, and

00:08:59.840 --> 00:09:02.960
<v Speaker 1>maybe you're doing a different pattern for AB

00:09:03.920 --> 00:09:05.280
<v Speaker 1>upgrades. Can you maybe go into that in

00:09:05.280 --> 00:09:06.160
<v Speaker 1>a bit more detail?

00:09:06.800 --> 00:09:09.040
<v Speaker 3>Yeah. Correct. So we do have

00:09:09.825 --> 00:09:13.105
<v Speaker 3>specific engine built for upgrades. So it's

00:09:13.425 --> 00:09:15.345
<v Speaker 3>based on container images.

00:09:15.425 --> 00:09:15.905
<v Speaker 3>So

00:09:16.545 --> 00:09:18.545
<v Speaker 3>every time you are doing an upgrade, you're

00:09:18.545 --> 00:09:19.585
<v Speaker 3>actually

00:09:19.825 --> 00:09:23.505
<v Speaker 3>pulling an OCI image, which contains the upgrades.

00:09:24.029 --> 00:09:24.670
<v Speaker 3>So,

00:09:25.149 --> 00:09:26.750
<v Speaker 3>maybe it's done like in a one to

00:09:26.750 --> 00:09:27.310
<v Speaker 3>one

00:09:28.430 --> 00:09:30.829
<v Speaker 3>mapping. So, the same image that you can

00:09:30.990 --> 00:09:33.790
<v Speaker 3>run with Portman or Docker or whatever you

00:09:33.790 --> 00:09:35.870
<v Speaker 3>prefer, it's the same image that it's going

00:09:35.870 --> 00:09:38.670
<v Speaker 3>to be applied in AB style on the

00:09:38.670 --> 00:09:38.910
<v Speaker 3>host.

00:09:40.375 --> 00:09:42.055
<v Speaker 3>And by the way, yes, it follows also

00:09:42.055 --> 00:09:44.535
<v Speaker 3>some of the concept of core OS and

00:09:45.255 --> 00:09:48.055
<v Speaker 3>for instance, also K3 OS, which was kind

00:09:48.055 --> 00:09:48.935
<v Speaker 3>of very

00:09:49.095 --> 00:09:49.975
<v Speaker 3>inflated,

00:09:50.135 --> 00:09:52.215
<v Speaker 3>I would say, because we have Cloud config

00:09:52.215 --> 00:09:54.520
<v Speaker 3>support as well. So there is like this

00:09:54.520 --> 00:09:55.320
<v Speaker 3>kind of

00:09:55.720 --> 00:09:57.400
<v Speaker 3>configuration mechanism

00:09:58.200 --> 00:09:59.160
<v Speaker 3>extended

00:10:00.200 --> 00:10:02.360
<v Speaker 3>that allows to configure the system.

00:10:03.640 --> 00:10:04.600
<v Speaker 3>And yeah, basically

00:10:05.560 --> 00:10:07.480
<v Speaker 3>it goes to the point that,

00:10:07.640 --> 00:10:08.520
<v Speaker 3>like you said, it's

00:10:09.334 --> 00:10:13.334
<v Speaker 3>distribution agnostic. So it doesn't really depends on

00:10:13.334 --> 00:10:14.295
<v Speaker 3>Red Hat,

00:10:15.334 --> 00:10:16.695
<v Speaker 3>RPMs or

00:10:17.014 --> 00:10:17.815
<v Speaker 3>DEPS.

00:10:18.375 --> 00:10:20.454
<v Speaker 3>For instance, we have Alpine flavors.

00:10:21.670 --> 00:10:23.830
<v Speaker 2>Yeah. Maybe if I can add a little

00:10:23.830 --> 00:10:24.550
<v Speaker 2>bit there.

00:10:25.190 --> 00:10:28.310
<v Speaker 2>One interesting fact, in my opinion, that we

00:10:28.310 --> 00:10:30.709
<v Speaker 2>have there is that the new image that

00:10:30.709 --> 00:10:33.190
<v Speaker 2>you're building is always built outside of the

00:10:33.190 --> 00:10:36.295
<v Speaker 2>running system. Some of these mechanisms like OS

00:10:36.295 --> 00:10:36.695
<v Speaker 2>root

00:10:37.255 --> 00:10:37.975
<v Speaker 2>or

00:10:38.215 --> 00:10:41.335
<v Speaker 2>AB Root, sorry, or OS three are

00:10:42.055 --> 00:10:44.535
<v Speaker 2>when you're applying those changes, you're applying it

00:10:44.535 --> 00:10:46.820
<v Speaker 2>on the passive image that you have so

00:10:46.820 --> 00:10:48.900
<v Speaker 2>that when you restart, then you that's the

00:10:48.900 --> 00:10:50.580
<v Speaker 2>image that you're gonna get next.

00:10:51.140 --> 00:10:53.620
<v Speaker 2>But that means that you would not have

00:10:55.380 --> 00:10:57.540
<v Speaker 2>an image to go back in case something

00:10:57.540 --> 00:10:59.220
<v Speaker 2>goes wrong with the current image that you

00:10:59.220 --> 00:11:00.954
<v Speaker 2>have. In our case, what we,

00:11:01.595 --> 00:11:03.675
<v Speaker 2>our approach is to say you always have

00:11:03.675 --> 00:11:05.514
<v Speaker 2>this passive image that you can,

00:11:05.915 --> 00:11:08.314
<v Speaker 2>in case something goes wrong in in an

00:11:08.314 --> 00:11:10.475
<v Speaker 2>upgrade, you you you go back into that

00:11:10.475 --> 00:11:12.954
<v Speaker 2>one. And worst case scenario, you can always

00:11:12.954 --> 00:11:13.675
<v Speaker 2>have

00:11:13.910 --> 00:11:14.630
<v Speaker 2>the

00:11:15.110 --> 00:11:16.390
<v Speaker 2>recovery image

00:11:16.710 --> 00:11:19.190
<v Speaker 2>so that you can do the

00:11:20.390 --> 00:11:21.270
<v Speaker 2>Ninja

00:11:22.230 --> 00:11:24.150
<v Speaker 2>OS management stuff. Right?

00:11:25.830 --> 00:11:26.790
<v Speaker 1>Okay.

00:11:26.790 --> 00:11:27.190
<v Speaker 1>Nice.

00:11:28.154 --> 00:11:29.755
<v Speaker 1>So one of the things that caught my

00:11:29.755 --> 00:11:31.675
<v Speaker 1>eye on on the website is and I

00:11:31.675 --> 00:11:33.514
<v Speaker 1>haven't seen this a lot before, but when

00:11:33.514 --> 00:11:35.755
<v Speaker 1>you talk about immutable images and OCI, right,

00:11:35.755 --> 00:11:37.195
<v Speaker 1>these things can tend to get a little

00:11:37.195 --> 00:11:37.755
<v Speaker 1>bit

00:11:38.795 --> 00:11:40.875
<v Speaker 1>crazy size wise. People

00:11:40.875 --> 00:11:43.435
<v Speaker 1>are not great at optimizing container

00:11:43.435 --> 00:11:44.770
<v Speaker 1>files generally.

00:11:45.090 --> 00:11:47.810
<v Speaker 1>But Kairos claims to also be an edge

00:11:47.810 --> 00:11:50.210
<v Speaker 1>operating system, and I wonder how you balance

00:11:50.210 --> 00:11:50.770
<v Speaker 1>that,

00:11:51.090 --> 00:11:53.330
<v Speaker 1>you know, giving people the ability to ship

00:11:53.330 --> 00:11:55.970
<v Speaker 1>essentially container images as operating systems, but also

00:11:55.970 --> 00:11:57.890
<v Speaker 1>keep them lightweight and ship them to the

00:11:57.890 --> 00:11:58.210
<v Speaker 1>edge. Like,

00:11:59.195 --> 00:12:01.115
<v Speaker 1>is Kairos different from the other tools that

00:12:01.115 --> 00:12:02.315
<v Speaker 1>I've tried this in the past?

00:12:05.835 --> 00:12:07.995
<v Speaker 3>Well, that's a good question. I would say

00:12:07.995 --> 00:12:09.755
<v Speaker 3>there are few things that we do.

00:12:12.100 --> 00:12:15.060
<v Speaker 3>First, maybe the most interesting one is you

00:12:15.060 --> 00:12:17.140
<v Speaker 3>don't need to always ship everything in a

00:12:17.140 --> 00:12:18.100
<v Speaker 3>single image.

00:12:18.500 --> 00:12:19.460
<v Speaker 3>While we do,

00:12:21.140 --> 00:12:24.260
<v Speaker 3>I would say, that from one source up,

00:12:25.895 --> 00:12:28.375
<v Speaker 3>You can also split down the system with

00:12:28.375 --> 00:12:30.215
<v Speaker 3>system the ACS extensions.

00:12:30.295 --> 00:12:33.255
<v Speaker 3>So there are extension mechanisms that allows you

00:12:33.255 --> 00:12:36.535
<v Speaker 3>to pack part of the image separately out

00:12:36.535 --> 00:12:39.175
<v Speaker 3>of the container image building process.

00:12:39.335 --> 00:12:40.055
<v Speaker 3>However,

00:12:40.455 --> 00:12:41.415
<v Speaker 3>when we treat

00:12:42.370 --> 00:12:43.490
<v Speaker 3>container images,

00:12:43.890 --> 00:12:46.290
<v Speaker 3>we don't consider all the layers, so to

00:12:46.290 --> 00:12:48.930
<v Speaker 3>say, we just flatten the image that it's

00:12:48.930 --> 00:12:52.130
<v Speaker 3>being used, if that makes sense. So in

00:12:52.130 --> 00:12:52.930
<v Speaker 3>terms of,

00:12:53.970 --> 00:12:54.770
<v Speaker 3>if you are

00:12:55.455 --> 00:12:58.095
<v Speaker 3>maybe not well used to optimize size of

00:12:58.095 --> 00:13:00.335
<v Speaker 3>images, you don't really have to take care

00:13:00.335 --> 00:13:02.095
<v Speaker 3>of that unless

00:13:02.735 --> 00:13:05.535
<v Speaker 3>you are adding a lot of panels that

00:13:05.535 --> 00:13:07.455
<v Speaker 3>you mean to have in the image. So

00:13:07.455 --> 00:13:09.535
<v Speaker 3>for instance, for a specific use case that

00:13:09.535 --> 00:13:11.510
<v Speaker 3>you have, I don't for instance, I'm thinking

00:13:11.510 --> 00:13:12.150
<v Speaker 3>about

00:13:13.670 --> 00:13:15.350
<v Speaker 3>NVIDIA Jetson

00:13:15.350 --> 00:13:17.510
<v Speaker 3>SDK or these kind of things that might

00:13:17.510 --> 00:13:20.310
<v Speaker 3>be big. So those can be either in

00:13:20.310 --> 00:13:22.709
<v Speaker 3>the image or either as an extension that

00:13:22.709 --> 00:13:23.430
<v Speaker 3>you can

00:13:23.815 --> 00:13:26.295
<v Speaker 3>basically sideload install separately,

00:13:26.295 --> 00:13:28.055
<v Speaker 3>like if I have to talk into

00:13:28.295 --> 00:13:29.175
<v Speaker 3>Android

00:13:29.815 --> 00:13:30.615
<v Speaker 3>words.

00:13:31.095 --> 00:13:31.575
<v Speaker 3>So

00:13:31.975 --> 00:13:34.135
<v Speaker 3>something that you install separately

00:13:34.775 --> 00:13:37.815
<v Speaker 3>and you manage separately out of the OS

00:13:37.815 --> 00:13:38.455
<v Speaker 3>lifecycle.

00:13:40.460 --> 00:13:42.940
<v Speaker 2>One thing that I've been thinking lately is

00:13:42.940 --> 00:13:45.180
<v Speaker 2>that the way I see Keras is like

00:13:45.180 --> 00:13:46.620
<v Speaker 2>it's kind of an OS

00:13:46.860 --> 00:13:47.580
<v Speaker 2>that

00:13:48.780 --> 00:13:50.540
<v Speaker 2>when you don't need to go into the

00:13:50.540 --> 00:13:52.785
<v Speaker 2>details, it steps out of your way. You

00:13:52.785 --> 00:13:54.865
<v Speaker 2>know? Like, we we try to come with

00:13:54.865 --> 00:13:56.065
<v Speaker 2>good

00:13:56.065 --> 00:13:58.785
<v Speaker 2>standards. Like, in this case, for example, you

00:13:58.785 --> 00:14:01.745
<v Speaker 2>will base it from the way minimal

00:14:01.745 --> 00:14:03.824
<v Speaker 2>Ubuntu image, and that's what you would be

00:14:03.824 --> 00:14:04.945
<v Speaker 2>building on. But

00:14:07.139 --> 00:14:09.379
<v Speaker 2>in the case where you really need to

00:14:09.379 --> 00:14:11.540
<v Speaker 2>go to the details,

00:14:11.540 --> 00:14:14.500
<v Speaker 2>for example, you'd you really need a small

00:14:14.500 --> 00:14:17.220
<v Speaker 2>image, you can go and remove firmware yourself

00:14:17.620 --> 00:14:19.620
<v Speaker 2>that that you're not going to need. So

00:14:21.074 --> 00:14:22.995
<v Speaker 2>it's as flexible in that way, we could

00:14:22.995 --> 00:14:23.475
<v Speaker 2>say.

00:14:25.394 --> 00:14:27.714
<v Speaker 1>Okay. Two more questions, and then we will

00:14:27.714 --> 00:14:29.314
<v Speaker 1>get hands on the keyboard and then start

00:14:29.314 --> 00:14:31.154
<v Speaker 1>getting people through the documentation.

00:14:31.634 --> 00:14:33.795
<v Speaker 1>Now right on the homepage of Keras, it

00:14:33.795 --> 00:14:36.170
<v Speaker 1>says you take your Linux system and a

00:14:36.170 --> 00:14:37.850
<v Speaker 1>Kubernetes distribution.

00:14:38.170 --> 00:14:39.450
<v Speaker 1>Is KAIROS

00:14:39.690 --> 00:14:41.930
<v Speaker 1>for building bespoke Kubernetes

00:14:42.089 --> 00:14:43.850
<v Speaker 1>images, or is it could it just be

00:14:43.850 --> 00:14:46.089
<v Speaker 1>generic Linux images? Like, who is this applicable

00:14:46.089 --> 00:14:47.690
<v Speaker 1>to? Who should be paying attention to the

00:14:47.690 --> 00:14:48.010
<v Speaker 1>project?

00:14:50.605 --> 00:14:54.125
<v Speaker 3>That's a great question. So it really doesn't

00:14:54.125 --> 00:14:54.845
<v Speaker 3>have,

00:14:57.405 --> 00:15:00.365
<v Speaker 3>I would say, a specific preference. It

00:15:00.365 --> 00:15:03.290
<v Speaker 3>really is suited to use it with Kubernetes

00:15:03.290 --> 00:15:06.170
<v Speaker 3>because of the management layer we discussed about.

00:15:06.250 --> 00:15:07.290
<v Speaker 3>You can really

00:15:08.250 --> 00:15:09.370
<v Speaker 3>use it for

00:15:09.690 --> 00:15:12.810
<v Speaker 3>any project that can be even kiosks

00:15:13.770 --> 00:15:15.770
<v Speaker 3>or appliance mode

00:15:15.770 --> 00:15:17.450
<v Speaker 3>or running virtual machines.

00:15:18.535 --> 00:15:21.895
<v Speaker 3>And these are all use cases that we

00:15:22.055 --> 00:15:24.775
<v Speaker 3>see in the community as well. So it's

00:15:24.775 --> 00:15:25.575
<v Speaker 3>not really

00:15:25.895 --> 00:15:29.255
<v Speaker 3>about Kubernetes by per se, but it's whatever

00:15:29.255 --> 00:15:30.295
<v Speaker 3>you want to

00:15:31.579 --> 00:15:34.060
<v Speaker 3>simplify the management of Linux

00:15:34.060 --> 00:15:34.779
<v Speaker 3>OS.

00:15:36.060 --> 00:15:37.899
<v Speaker 3>And it comes also with,

00:15:40.380 --> 00:15:41.420
<v Speaker 3>I would say,

00:15:42.300 --> 00:15:45.815
<v Speaker 3>nice features to have, like trusted boot or

00:15:45.815 --> 00:15:46.935
<v Speaker 3>high security

00:15:47.014 --> 00:15:47.894
<v Speaker 3>mechanism,

00:15:47.894 --> 00:15:48.295
<v Speaker 3>like

00:15:48.695 --> 00:15:49.654
<v Speaker 3>Ben is

00:15:50.375 --> 00:15:52.935
<v Speaker 3>quoting in the chat. Thanks, Ben.

00:15:53.415 --> 00:15:55.495
<v Speaker 3>And, yeah, exactly. So there

00:15:55.975 --> 00:15:58.535
<v Speaker 3>are many, many feature set that you gain

00:15:58.535 --> 00:16:00.750
<v Speaker 3>by just using Kairos on top of a

00:16:00.750 --> 00:16:01.950
<v Speaker 3>standard distro.

00:16:03.310 --> 00:16:04.110
<v Speaker 1>Nice.

00:16:04.910 --> 00:16:07.790
<v Speaker 1>Yeah. So Ben, as in the comments saying,

00:16:07.790 --> 00:16:09.630
<v Speaker 1>you know, it's it's nice to hear you

00:16:09.630 --> 00:16:12.365
<v Speaker 1>talk about system based system extensions because a

00:16:12.365 --> 00:16:13.965
<v Speaker 1>lot of people kind of just don't mention

00:16:13.965 --> 00:16:16.045
<v Speaker 1>them and forget they exist or don't want

00:16:16.045 --> 00:16:17.645
<v Speaker 1>them to exist. Yes. But I think they're

00:16:17.645 --> 00:16:19.485
<v Speaker 1>a very powerful thing. And in fact, you

00:16:19.485 --> 00:16:21.725
<v Speaker 1>know, Leonard Potter rings article that he wrote

00:16:21.725 --> 00:16:23.325
<v Speaker 1>many years now, but fitting all of this

00:16:23.325 --> 00:16:25.820
<v Speaker 1>together to build, like, the ideal Linux distribution.

00:16:25.820 --> 00:16:27.500
<v Speaker 1>I feel we're getting so close in the

00:16:27.500 --> 00:16:28.380
<v Speaker 1>modern day. So

00:16:29.339 --> 00:16:31.820
<v Speaker 1>yeah. Ben is also in using Keras without

00:16:31.820 --> 00:16:32.700
<v Speaker 1>Kubernetes

00:16:32.700 --> 00:16:35.500
<v Speaker 1>at scale. So that is awesome. Always nice

00:16:35.500 --> 00:16:36.779
<v Speaker 1>to hear from people that are using the

00:16:36.779 --> 00:16:37.019
<v Speaker 1>project.

00:16:38.445 --> 00:16:39.965
<v Speaker 1>Now the last question before we go hands

00:16:39.965 --> 00:16:42.445
<v Speaker 1>on is a leading question. But, you know,

00:16:42.445 --> 00:16:43.965
<v Speaker 1>when we talk about who should be paying

00:16:43.965 --> 00:16:46.525
<v Speaker 1>attention to this, right, we've got different classes

00:16:46.525 --> 00:16:47.965
<v Speaker 1>of cloud native developers.

00:16:48.285 --> 00:16:49.405
<v Speaker 1>There are the people that go on to

00:16:49.405 --> 00:16:50.765
<v Speaker 1>the EC two console. They spin up an

00:16:50.765 --> 00:16:52.365
<v Speaker 1>Ubuntu box. They run a few commands in

00:16:52.365 --> 00:16:53.565
<v Speaker 1>a shell, and that's their production.

00:16:54.180 --> 00:16:56.020
<v Speaker 1>Then there's the opposite end where the people

00:16:56.260 --> 00:16:58.660
<v Speaker 1>our infrastructure is code, building bespoke images, looking

00:16:58.660 --> 00:17:01.940
<v Speaker 1>for immutability, etcetera. Right? Is Kairos a project

00:17:01.940 --> 00:17:04.579
<v Speaker 1>that can be adopted full spectrum of cloud

00:17:04.579 --> 00:17:07.059
<v Speaker 1>native developers? Anyone from single

00:17:07.140 --> 00:17:10.405
<v Speaker 1>VM on EC two to at scale production.

00:17:11.205 --> 00:17:12.485
<v Speaker 1>And bear in mind, we're about to go

00:17:12.485 --> 00:17:14.725
<v Speaker 1>hands on, so we're hoping that we we

00:17:14.725 --> 00:17:16.565
<v Speaker 1>get a correct answer here. Right? But it's

00:17:16.565 --> 00:17:18.325
<v Speaker 1>applicable to everyone. Is it easy enough for

00:17:18.325 --> 00:17:20.405
<v Speaker 1>people to pick up and ship to prod?

00:17:22.040 --> 00:17:24.919
<v Speaker 3>I would say so because we have also

00:17:25.240 --> 00:17:28.119
<v Speaker 3>called images published. Right? So we have the

00:17:28.119 --> 00:17:30.600
<v Speaker 3>full spectrum covered in that case.

00:17:30.840 --> 00:17:31.399
<v Speaker 3>Of

00:17:32.360 --> 00:17:32.600
<v Speaker 3>course,

00:17:34.475 --> 00:17:35.915
<v Speaker 3>we are going to have

00:17:37.115 --> 00:17:38.635
<v Speaker 3>I'm not going to lie. I mean,

00:17:39.275 --> 00:17:42.315
<v Speaker 3>the cloud aspect, there are some optimization that

00:17:42.315 --> 00:17:45.674
<v Speaker 3>we want to take specifically into integrating with

00:17:45.675 --> 00:17:48.715
<v Speaker 3>copy, because currently we have management

00:17:48.870 --> 00:17:50.870
<v Speaker 3>mechanism that allows to

00:17:51.590 --> 00:17:54.390
<v Speaker 3>manage the fleet in a much more granular

00:17:54.390 --> 00:17:56.870
<v Speaker 3>way, I would say, because CAPI doesn't quite

00:17:56.870 --> 00:17:58.070
<v Speaker 3>fit to this

00:17:58.470 --> 00:18:00.549
<v Speaker 3>paradigm. So we're going to

00:18:00.870 --> 00:18:02.710
<v Speaker 3>work on this integration more closer.

00:18:05.294 --> 00:18:08.735
<v Speaker 3>But yeah. I mean, it really have the

00:18:08.735 --> 00:18:11.375
<v Speaker 3>all the best and whistles to to be

00:18:11.375 --> 00:18:13.934
<v Speaker 3>from development to to production.

00:18:14.654 --> 00:18:16.734
<v Speaker 3>And it's been used also, yeah, of course,

00:18:16.735 --> 00:18:17.294
<v Speaker 3>at the edge.

00:18:18.890 --> 00:18:20.650
<v Speaker 2>Yeah. I would I would add just that.

00:18:20.650 --> 00:18:21.289
<v Speaker 2>Is

00:18:21.690 --> 00:18:24.409
<v Speaker 2>if you are comfortable at the OS level,

00:18:24.490 --> 00:18:25.769
<v Speaker 2>then, hopefully,

00:18:25.770 --> 00:18:26.409
<v Speaker 2>yes.

00:18:26.809 --> 00:18:28.570
<v Speaker 2>Would be mainly people who are really just

00:18:28.570 --> 00:18:31.414
<v Speaker 2>at the platform level and up who

00:18:31.495 --> 00:18:33.895
<v Speaker 2>rather have something where they can just click

00:18:33.895 --> 00:18:35.895
<v Speaker 2>that might feel it's a bit of a

00:18:35.895 --> 00:18:37.815
<v Speaker 2>stretch, I would say. But,

00:18:38.535 --> 00:18:40.375
<v Speaker 2>yeah, we we try to simply file as

00:18:40.375 --> 00:18:41.815
<v Speaker 2>you were the saying

00:18:42.820 --> 00:18:45.220
<v Speaker 2>from Leonard Potter. In all of these concepts

00:18:45.220 --> 00:18:47.060
<v Speaker 2>that are there, we don't throw them in

00:18:47.060 --> 00:18:48.740
<v Speaker 2>your face. Right? Like, you don't need to

00:18:48.740 --> 00:18:51.060
<v Speaker 2>learn all those things in order to use

00:18:51.060 --> 00:18:53.620
<v Speaker 2>Kairos. Right? We did the

00:18:54.180 --> 00:18:57.060
<v Speaker 2>hard work, the homework to go investigate how

00:18:57.060 --> 00:18:59.395
<v Speaker 2>those things work and make the Keras agent

00:18:59.395 --> 00:19:00.595
<v Speaker 2>do them for you.

00:19:02.435 --> 00:19:03.155
<v Speaker 1>Perfect.

00:19:03.475 --> 00:19:05.475
<v Speaker 1>Well, I think it's about time we share

00:19:05.475 --> 00:19:07.075
<v Speaker 1>my screen and see how far we can

00:19:07.075 --> 00:19:08.755
<v Speaker 1>get with the Keras project.

00:19:12.419 --> 00:19:14.979
<v Speaker 1>Alright. Let's get my screen up here.

00:19:20.179 --> 00:19:20.979
<v Speaker 1>Perfect.

00:19:21.299 --> 00:19:24.019
<v Speaker 1>So for anyone who wants to learn more,

00:19:25.115 --> 00:19:27.595
<v Speaker 1>you can go to kairos.io.

00:19:27.595 --> 00:19:30.235
<v Speaker 1>This is a CNCF sandbox project.

00:19:30.235 --> 00:19:32.715
<v Speaker 1>Maybe we'll talk about the that process later

00:19:32.715 --> 00:19:35.035
<v Speaker 1>on. And there is a quick start guide,

00:19:35.035 --> 00:19:36.875
<v Speaker 1>which on Rawkode Live is my favorite button

00:19:36.875 --> 00:19:39.179
<v Speaker 1>because that's where we wanna show how to

00:19:39.179 --> 00:19:40.619
<v Speaker 1>get started with the project.

00:19:41.340 --> 00:19:42.620
<v Speaker 1>And there there are quite a lot of

00:19:42.700 --> 00:19:44.539
<v Speaker 1>no. Maybe not a lot. There are some

00:19:44.539 --> 00:19:45.340
<v Speaker 1>prerequisites

00:19:45.340 --> 00:19:46.779
<v Speaker 1>to get started for KAIROS. And this is

00:19:46.779 --> 00:19:48.380
<v Speaker 1>one of the challenging things for a project

00:19:48.380 --> 00:19:50.380
<v Speaker 1>like this is that you do need virtual

00:19:50.380 --> 00:19:52.700
<v Speaker 1>machines and other things. Right? It's not just

00:19:52.700 --> 00:19:55.104
<v Speaker 1>Docker run and off you go. So

00:19:55.745 --> 00:19:57.904
<v Speaker 1>for anyone who does want to follow along,

00:19:57.985 --> 00:19:59.744
<v Speaker 1>just make sure you follow the documentation.

00:20:00.304 --> 00:20:02.145
<v Speaker 1>I'm gonna use the virtual machine manager that's

00:20:02.145 --> 00:20:04.144
<v Speaker 1>not listed here, but hopefully that's alright.

00:20:04.544 --> 00:20:06.065
<v Speaker 1>And I I actually sat and watched this

00:20:06.065 --> 00:20:07.265
<v Speaker 1>video earlier. I've got to say this is

00:20:07.265 --> 00:20:09.150
<v Speaker 1>a good demo. Like this showed me like

00:20:09.150 --> 00:20:10.750
<v Speaker 1>any question I had was answered by this

00:20:10.750 --> 00:20:13.550
<v Speaker 1>video. You know Cool. Feel free to go

00:20:13.550 --> 00:20:15.310
<v Speaker 1>check that out for anyone watching as well.

00:20:15.310 --> 00:20:16.430
<v Speaker 1>And I'll make sure that the links to

00:20:16.430 --> 00:20:18.350
<v Speaker 1>all of this are in the description for

00:20:18.350 --> 00:20:18.990
<v Speaker 1>later.

00:20:20.190 --> 00:20:21.790
<v Speaker 1>Now because I don't trust my Internet, I

00:20:21.790 --> 00:20:23.630
<v Speaker 1>have downloaded this ISO here

00:20:24.465 --> 00:20:26.145
<v Speaker 1>in advance. That's the only thing I've really

00:20:26.145 --> 00:20:26.625
<v Speaker 1>done.

00:20:27.184 --> 00:20:30.305
<v Speaker 1>And we're gonna create a virtual machine and

00:20:30.305 --> 00:20:31.184
<v Speaker 1>get started.

00:20:31.425 --> 00:20:33.425
<v Speaker 1>Now before I pull up the the kind

00:20:33.425 --> 00:20:35.184
<v Speaker 1>of VM manager and stuff like that, like,

00:20:35.184 --> 00:20:37.280
<v Speaker 1>what is what is the take home for

00:20:37.280 --> 00:20:38.880
<v Speaker 1>people when they work for this get started

00:20:38.880 --> 00:20:41.520
<v Speaker 1>guide? Right? What is the what will they

00:20:41.520 --> 00:20:42.399
<v Speaker 1>achieve

00:20:42.960 --> 00:20:45.040
<v Speaker 1>by following this guide, what will they understand?

00:20:45.040 --> 00:20:45.920
<v Speaker 1>Who wants to tackle that?

00:20:48.705 --> 00:20:49.345
<v Speaker 2>Basically,

00:20:49.585 --> 00:20:51.664
<v Speaker 2>you will get a system

00:20:51.745 --> 00:20:54.065
<v Speaker 2>running with, Kubernetes,

00:20:54.705 --> 00:20:56.865
<v Speaker 2>but this one will be immutable. You don't

00:20:56.865 --> 00:20:59.184
<v Speaker 2>have to worry about how it was made

00:20:59.184 --> 00:21:01.780
<v Speaker 2>immutable. You don't have to worry about spinning

00:21:01.780 --> 00:21:03.940
<v Speaker 2>up and configuring Kubernetes.

00:21:03.940 --> 00:21:06.260
<v Speaker 2>It's all running there for you.

00:21:07.700 --> 00:21:10.419
<v Speaker 1>Nice. So I'm gonna get a Kubernetes cluster

00:21:10.500 --> 00:21:11.940
<v Speaker 1>from this virtual machine.

00:21:12.260 --> 00:21:13.539
<v Speaker 1>I like Kubernetes.

00:21:14.180 --> 00:21:15.540
<v Speaker 1>So I just select this.

00:21:18.175 --> 00:21:19.215
<v Speaker 1>And

00:21:19.855 --> 00:21:20.735
<v Speaker 1>there were

00:21:21.215 --> 00:21:23.215
<v Speaker 1>memory limits. Am I gonna be okay with

00:21:23.215 --> 00:21:24.815
<v Speaker 1>the two twenty, I think? Or should I

00:21:24.895 --> 00:21:27.695
<v Speaker 2>I would put 40 for storage just in

00:21:27.695 --> 00:21:28.255
<v Speaker 2>case.

00:21:28.735 --> 00:21:30.415
<v Speaker 1>Yeah. I think it did say 35, didn't

00:21:30.415 --> 00:21:31.295
<v Speaker 1>it, in the documentation?

00:21:33.190 --> 00:21:34.470
<v Speaker 1>I know I I know I don't need

00:21:34.470 --> 00:21:35.990
<v Speaker 1>to throw 32 gig of RAM at this,

00:21:35.990 --> 00:21:37.990
<v Speaker 1>but I will. I've got I have a

00:21:37.990 --> 00:21:39.670
<v Speaker 1>20 gig of RAM in this machine. I

00:21:39.670 --> 00:21:42.070
<v Speaker 1>I never use it. So today's the day.

00:21:43.190 --> 00:21:44.230
<v Speaker 1>Go. Alright.

00:21:48.904 --> 00:21:49.544
<v Speaker 2>Then

00:21:50.585 --> 00:21:52.505
<v Speaker 2>in in the getting started, we go through

00:21:52.505 --> 00:21:54.745
<v Speaker 2>the interactive install. So if you can select

00:21:54.745 --> 00:21:57.225
<v Speaker 2>that one, that would be the best. Yeah.

00:21:57.225 --> 00:21:58.424
<v Speaker 1>I was wondering if I can make this

00:21:58.424 --> 00:21:58.745
<v Speaker 1>bigger.

00:22:00.190 --> 00:22:01.150
<v Speaker 1>Let's see.

00:22:02.510 --> 00:22:03.710
<v Speaker 1>Yeah. That's fine.

00:22:04.110 --> 00:22:07.070
<v Speaker 1>Where is can I change fonts or anything?

00:22:09.710 --> 00:22:11.390
<v Speaker 1>I don't use Numboxes often.

00:22:14.645 --> 00:22:17.125
<v Speaker 2>Maybe in the three dots, it allows you

00:22:17.125 --> 00:22:17.684
<v Speaker 2>to

00:22:18.325 --> 00:22:18.725
<v Speaker 1>Yeah.

00:22:29.550 --> 00:22:31.950
<v Speaker 2>Not really. Oh, or configuration.

00:22:31.950 --> 00:22:34.110
<v Speaker 2>No. That's Oh, that's for LibVert. It's not

00:22:34.110 --> 00:22:35.230
<v Speaker 1>for these. Yeah.

00:22:36.030 --> 00:22:37.790
<v Speaker 1>I don't wanna go mess them with that.

00:22:37.790 --> 00:22:38.190
<v Speaker 1>Maybe.

00:22:41.875 --> 00:22:42.595
<v Speaker 2>No.

00:22:42.995 --> 00:22:44.355
<v Speaker 2>Unfortunately,

00:22:44.435 --> 00:22:46.995
<v Speaker 2>I think we started in not the interactive

00:22:46.995 --> 00:22:47.635
<v Speaker 2>mode.

00:22:48.195 --> 00:22:50.595
<v Speaker 2>So just just to mention, there are different

00:22:50.595 --> 00:22:51.795
<v Speaker 2>ways to configure

00:22:52.195 --> 00:22:54.960
<v Speaker 2>Kairos system. This is the default one, which

00:22:54.960 --> 00:22:57.360
<v Speaker 2>would spin up. And let's say that you're

00:22:57.360 --> 00:22:58.640
<v Speaker 2>in an edge location,

00:22:58.960 --> 00:23:01.920
<v Speaker 2>you can, take a screenshot of that QR

00:23:01.920 --> 00:23:03.920
<v Speaker 2>code and give it to,

00:23:04.320 --> 00:23:07.025
<v Speaker 2>the terminal in another system, and then you

00:23:07.025 --> 00:23:08.865
<v Speaker 2>would configure it, you know, to to simplify

00:23:08.865 --> 00:23:10.945
<v Speaker 2>things because this system might not have a

00:23:10.945 --> 00:23:12.624
<v Speaker 2>keyword or something like that.

00:23:15.904 --> 00:23:18.304
<v Speaker 1>Alright. So should I start this again then?

00:23:18.385 --> 00:23:20.304
<v Speaker 2>Yeah. Okay. Got it.

00:23:22.400 --> 00:23:24.000
<v Speaker 1>Can't believe I broke it already. I'm only

00:23:24.000 --> 00:23:24.960
<v Speaker 1>two minutes in.

00:23:26.960 --> 00:23:28.400
<v Speaker 1>I guess I could just shut it down

00:23:28.400 --> 00:23:29.920
<v Speaker 1>and start it again. Yeah.

00:23:35.625 --> 00:23:39.545
<v Speaker 1>Alright. So The interactive one, the third. There

00:23:39.545 --> 00:23:40.665
<v Speaker 1>we go. Yep.

00:23:43.385 --> 00:23:45.785
<v Speaker 2>And this one, we really made it thinking

00:23:45.785 --> 00:23:48.500
<v Speaker 2>on someone who is coming for the first

00:23:48.500 --> 00:23:51.060
<v Speaker 2>time to the system. This is probably not

00:23:51.060 --> 00:23:52.100
<v Speaker 2>what the

00:23:52.180 --> 00:23:54.419
<v Speaker 2>power user of Kairos will ever

00:23:54.900 --> 00:23:56.980
<v Speaker 2>use. This is the ones we use every

00:23:56.980 --> 00:23:58.660
<v Speaker 2>time we're testing the system just for a

00:23:58.660 --> 00:23:59.300
<v Speaker 2>quick setup.

00:24:00.475 --> 00:24:02.715
<v Speaker 2>It will make a couple of questions like

00:24:02.715 --> 00:24:04.794
<v Speaker 2>like it's doing right now,

00:24:05.355 --> 00:24:05.994
<v Speaker 2>asking

00:24:06.475 --> 00:24:08.794
<v Speaker 2>in which device you want to install. By

00:24:08.794 --> 00:24:10.715
<v Speaker 2>default, it will find the

00:24:11.434 --> 00:24:13.754
<v Speaker 2>device with the biggest space in your system.

00:24:13.835 --> 00:24:15.995
<v Speaker 2>So you can just hit enter

00:24:15.540 --> 00:24:17.300
<v Speaker 2>if you wanna install there, or you can

00:24:17.300 --> 00:24:18.900
<v Speaker 2>select the one you prefer.

00:24:22.180 --> 00:24:24.020
<v Speaker 1>Do I want to create any users?

00:24:24.660 --> 00:24:26.580
<v Speaker 2>Right. And in this case, for example, we

00:24:26.580 --> 00:24:28.260
<v Speaker 2>can say, yes. We want to create a

00:24:28.260 --> 00:24:31.164
<v Speaker 2>user, but many times for systems

00:24:31.404 --> 00:24:31.885
<v Speaker 2>in

00:24:32.284 --> 00:24:35.005
<v Speaker 2>at the edge or now that we're talking

00:24:35.005 --> 00:24:37.804
<v Speaker 2>about this special purpose of bringing systems on

00:24:37.804 --> 00:24:39.885
<v Speaker 2>the cloud, many times we say we don't

00:24:39.885 --> 00:24:42.125
<v Speaker 2>even want SSH in. Right? Like, we

00:24:42.800 --> 00:24:44.640
<v Speaker 2>want those systems to be as secure as

00:24:44.640 --> 00:24:47.360
<v Speaker 2>possible, and one one way of making the

00:24:47.440 --> 00:24:50.640
<v Speaker 2>that is by not including any users. But

00:24:50.640 --> 00:24:52.240
<v Speaker 2>if you're just starting and want to play

00:24:52.240 --> 00:24:54.720
<v Speaker 2>with it, having a user is a good

00:24:54.720 --> 00:24:55.759
<v Speaker 2>way to test it.

00:24:56.480 --> 00:24:56.960
<v Speaker 1>Alright.

00:24:58.035 --> 00:24:59.875
<v Speaker 1>And we'll call our user Kairos.

00:25:00.115 --> 00:25:03.235
<v Speaker 2>Password we normally put Kairos. Yep. I'll do

00:25:03.235 --> 00:25:03.715
<v Speaker 1>that.

00:25:04.595 --> 00:25:07.795
<v Speaker 2>Then here, if you have your keys on

00:25:07.795 --> 00:25:10.355
<v Speaker 2>GitHub, you can put your

00:25:10.355 --> 00:25:12.515
<v Speaker 2>GitHub user and it will fetch them for

00:25:12.515 --> 00:25:14.410
<v Speaker 2>you. Otherwise, you can just hit enter and

00:25:14.410 --> 00:25:16.650
<v Speaker 2>it will not put anything there.

00:25:19.130 --> 00:25:20.970
<v Speaker 1>Yeah. Maybe SSH should now be good because

00:25:20.970 --> 00:25:22.410
<v Speaker 1>I can change my own font size then.

00:25:22.410 --> 00:25:23.049
<v Speaker 2>Indeed.

00:25:23.610 --> 00:25:26.010
<v Speaker 1>Alright. Maybe user and admin, I'm gonna say

00:25:26.010 --> 00:25:29.450
<v Speaker 1>yes. Yeah. And do we want full mesh

00:25:28.875 --> 00:25:29.675
<v Speaker 1>support?

00:25:29.675 --> 00:25:32.235
<v Speaker 2>In this case, I would say no. But

00:25:32.795 --> 00:25:35.514
<v Speaker 2>generally, when we spin up multiple machines,

00:25:35.675 --> 00:25:37.755
<v Speaker 2>you have the ability to have a mesh

00:25:37.755 --> 00:25:40.555
<v Speaker 2>network between them so that they can decide

00:25:40.555 --> 00:25:43.275
<v Speaker 2>who is the control plane and which ones

00:25:43.275 --> 00:25:43.915
<v Speaker 2>are the workers.

00:25:44.850 --> 00:25:45.570
<v Speaker 1>Okay.

00:25:45.970 --> 00:25:47.730
<v Speaker 1>And do we want k three s? If

00:25:47.730 --> 00:25:49.170
<v Speaker 1>I say no, do I get another option

00:25:49.170 --> 00:25:51.330
<v Speaker 1>or should I say yes? Here, I would

00:25:51.330 --> 00:25:52.130
<v Speaker 2>say yes.

00:25:53.410 --> 00:25:55.730
<v Speaker 2>It's also possible to do k c r

00:25:55.730 --> 00:25:56.210
<v Speaker 2>s, but

00:25:57.285 --> 00:25:59.525
<v Speaker 2>for for the sake of testing,

00:25:59.605 --> 00:26:01.925
<v Speaker 2>we've run many more times K three s

00:26:01.925 --> 00:26:04.085
<v Speaker 2>since it was the one we had since

00:26:04.085 --> 00:26:05.685
<v Speaker 2>the beginning of the project. I would go

00:26:05.685 --> 00:26:06.885
<v Speaker 2>with that one for now.

00:26:07.685 --> 00:26:10.085
<v Speaker 1>Alright. I've also said my settings are okay,

00:26:10.085 --> 00:26:11.765
<v Speaker 1>and now we have a machine,

00:26:12.330 --> 00:26:14.809
<v Speaker 1>I guess, booting. That's correct. So if you

00:26:14.809 --> 00:26:17.210
<v Speaker 2>saw there was a blue part there, that

00:26:17.210 --> 00:26:19.609
<v Speaker 2>is the cloud config that the

00:26:21.610 --> 00:26:22.409
<v Speaker 2>installation,

00:26:22.570 --> 00:26:25.765
<v Speaker 2>created for us. And and that's the main

00:26:25.765 --> 00:26:28.005
<v Speaker 2>way in which we're going to configure Kairos

00:26:28.005 --> 00:26:30.725
<v Speaker 2>system. It's just a traditional cloud in it

00:26:30.725 --> 00:26:31.445
<v Speaker 2>like,

00:26:32.405 --> 00:26:33.524
<v Speaker 2>syntax.

00:26:33.925 --> 00:26:36.645
<v Speaker 2>And then right now, it's, just going to

00:26:36.645 --> 00:26:39.205
<v Speaker 2>do everything Kairos related

00:26:39.450 --> 00:26:41.690
<v Speaker 2>to make sure that you have the proper

00:26:43.049 --> 00:26:44.570
<v Speaker 2>partitions on your system.

00:26:45.210 --> 00:26:45.849
<v Speaker 1>Yeah.

00:26:46.730 --> 00:26:48.090
<v Speaker 1>And I feel I should just have used

00:26:48.090 --> 00:26:49.529
<v Speaker 1>KVM, and this would have been a bit

00:26:49.529 --> 00:26:50.409
<v Speaker 1>more interesting,

00:26:50.649 --> 00:26:52.330
<v Speaker 1>at least a bit more readable for you

00:26:52.330 --> 00:26:52.490
<v Speaker 1>all.

00:26:55.255 --> 00:26:56.934
<v Speaker 1>We have a box now. Right? Is that

00:26:56.934 --> 00:26:57.414
<v Speaker 1>it?

00:26:58.375 --> 00:27:01.015
<v Speaker 1>On Node That's that's correct. So now you

00:27:01.015 --> 00:27:03.095
<v Speaker 2>could just reboot and then

00:27:03.735 --> 00:27:06.134
<v Speaker 2>we it would it should spin on

00:27:07.095 --> 00:27:08.695
<v Speaker 2>an install Kairos system.

00:27:09.640 --> 00:27:10.519
<v Speaker 2>Okay.

00:27:13.640 --> 00:27:15.480
<v Speaker 1>Oh, I can't spell or take.

00:27:18.280 --> 00:27:18.760
<v Speaker 1>Alright.

00:27:21.255 --> 00:27:23.895
<v Speaker 2>Also, sometimes when you're testing this, make sure

00:27:23.895 --> 00:27:25.735
<v Speaker 2>to remove the CD,

00:27:26.215 --> 00:27:28.855
<v Speaker 2>because otherwise, it's gonna just go again

00:27:29.015 --> 00:27:32.054
<v Speaker 2>and do that. It happens all the time

00:27:32.935 --> 00:27:36.055
<v Speaker 2>because not all the systems have that automatically.

00:27:37.549 --> 00:27:39.149
<v Speaker 1>Go away. Here we go.

00:27:41.470 --> 00:27:44.350
<v Speaker 1>Don't know why they can't change the oh,

00:27:44.350 --> 00:27:44.749
<v Speaker 1>wait.

00:27:45.790 --> 00:27:47.630
<v Speaker 1>Preferences. Just let me do it. No. It's

00:27:47.630 --> 00:27:48.350
<v Speaker 1>the same sentence.

00:27:50.505 --> 00:27:51.225
<v Speaker 1>Alright.

00:27:51.865 --> 00:27:54.345
<v Speaker 1>Now we have Kairos recovery,

00:27:54.345 --> 00:27:56.825
<v Speaker 1>remote recovery, state reset. So let's put this

00:27:56.825 --> 00:27:57.385
<v Speaker 1>up.

00:27:57.705 --> 00:27:58.424
<v Speaker 2>Correct.

00:27:58.505 --> 00:28:00.745
<v Speaker 2>And yeah. So those main

00:28:01.305 --> 00:28:04.010
<v Speaker 2>options that you see there is basically the

00:28:04.010 --> 00:28:06.570
<v Speaker 2>interaction that you get with Kairos. You get

00:28:06.570 --> 00:28:08.570
<v Speaker 2>your active system, which is the one that

00:28:08.570 --> 00:28:11.450
<v Speaker 2>you're normally gonna be putting on. The passive

00:28:11.450 --> 00:28:12.169
<v Speaker 2>one,

00:28:12.330 --> 00:28:14.890
<v Speaker 2>which is in case something went wrong with

00:28:14.890 --> 00:28:16.970
<v Speaker 2>an upgrade, for example, or you're gonna go

00:28:16.970 --> 00:28:19.125
<v Speaker 2>to your previous system

00:28:19.125 --> 00:28:21.365
<v Speaker 2>and then the recovery in case something goes

00:28:21.365 --> 00:28:22.565
<v Speaker 2>really, really wrong.

00:28:23.765 --> 00:28:25.765
<v Speaker 1>Alright. So, I mean, the docs cover everything

00:28:25.765 --> 00:28:27.525
<v Speaker 1>we've just done. All the questions are here

00:28:27.525 --> 00:28:28.645
<v Speaker 1>and the answers,

00:28:28.885 --> 00:28:31.445
<v Speaker 1>even the reminder to eject the CD. And

00:28:32.005 --> 00:28:33.690
<v Speaker 1>now we've done the first boot. So in

00:28:33.690 --> 00:28:35.929
<v Speaker 1>theory, we should be able to SSH now

00:28:35.929 --> 00:28:38.330
<v Speaker 1>into our machine once we have an IP

00:28:38.330 --> 00:28:39.129
<v Speaker 1>address.

00:28:39.210 --> 00:28:39.849
<v Speaker 1>Correct.

00:28:40.570 --> 00:28:41.529
<v Speaker 1>Alright.

00:28:44.090 --> 00:28:46.010
<v Speaker 1>Whenever the IP would be available in the

00:28:46.010 --> 00:28:48.010
<v Speaker 1>logs. It doesn't look like it.

00:28:51.465 --> 00:28:52.904
<v Speaker 1>See if I can get the IP.

00:28:54.985 --> 00:28:56.345
<v Speaker 1>Should have used KVM.

00:29:03.890 --> 00:29:04.610
<v Speaker 1>So I can

00:29:05.490 --> 00:29:07.330
<v Speaker 1>hey. I I picked the password. Right? So

00:29:07.330 --> 00:29:09.890
<v Speaker 1>let's just kairos. Yeah. Kairos.

00:29:09.810 --> 00:29:10.530
<v Speaker 1>Put in there.

00:29:13.264 --> 00:29:15.264
<v Speaker 1>So I can see we've got our CNI

00:29:15.264 --> 00:29:17.745
<v Speaker 1>interface. We've got Flannel, and we've got our

00:29:17.745 --> 00:29:21.424
<v Speaker 1>local IP address here. So 100215.

00:29:25.950 --> 00:29:28.749
<v Speaker 1>I'll get it on your tab. So SSH

00:29:29.790 --> 00:29:32.909
<v Speaker 1>KAOS 100215.

00:29:35.790 --> 00:29:37.390
<v Speaker 1>I'm assuming I can work to that from

00:29:37.390 --> 00:29:38.510
<v Speaker 1>my local machine, right?

00:29:39.995 --> 00:29:40.794
<v Speaker 2>It

00:29:41.034 --> 00:29:43.994
<v Speaker 2>depends on the network, I guess, that the

00:29:44.875 --> 00:29:46.554
<v Speaker 2>virtual machine manager

00:29:47.434 --> 00:29:48.315
<v Speaker 2>sets.

00:29:50.554 --> 00:29:52.075
<v Speaker 1>Yeah. I don't think we got a route.

00:29:52.980 --> 00:29:55.060
<v Speaker 2>Yeah. You will probably need a 1 90

00:29:55.060 --> 00:29:55.779
<v Speaker 2>2

00:29:56.980 --> 00:29:58.420
<v Speaker 2>in order to access it.

00:30:07.095 --> 00:30:08.534
<v Speaker 1>Let's see what I've got.

00:30:08.855 --> 00:30:11.174
<v Speaker 2>Maybe grep pro 192.

00:30:12.135 --> 00:30:13.734
<v Speaker 1>I'm not seeing one.

00:30:15.495 --> 00:30:16.054
<v Speaker 2>Yeah.

00:30:16.695 --> 00:30:18.214
<v Speaker 2>So maybe not.

00:30:18.455 --> 00:30:19.255
<v Speaker 2>Good question.

00:30:22.389 --> 00:30:24.549
<v Speaker 1>I don't even have oh, come on.

00:30:28.230 --> 00:30:29.509
<v Speaker 1>Alright.

00:30:31.029 --> 00:30:32.070
<v Speaker 1>I broke it.

00:30:33.190 --> 00:30:35.590
<v Speaker 1>I should have looked into numboxes before doing

00:30:35.590 --> 00:30:35.909
<v Speaker 1>this.

00:30:37.645 --> 00:30:39.405
<v Speaker 1>I mean, I could always add a root,

00:30:39.405 --> 00:30:40.925
<v Speaker 1>right? But it depends on what the link

00:30:40.925 --> 00:30:42.925
<v Speaker 1>is. And I don't wanna spend too much

00:30:42.925 --> 00:30:43.485
<v Speaker 1>time

00:30:46.125 --> 00:30:48.525
<v Speaker 1>debugging and trying to work this out. But

00:30:48.525 --> 00:30:49.805
<v Speaker 1>let me quickly

00:30:53.370 --> 00:30:54.169
<v Speaker 1>IP.

00:30:54.410 --> 00:30:55.690
<v Speaker 1>Oh, we did link.

00:30:56.650 --> 00:30:58.650
<v Speaker 1>So I was expecting some sort of bridge

00:30:58.650 --> 00:31:00.330
<v Speaker 1>or something, but it hasn't done any of

00:31:00.330 --> 00:31:00.809
<v Speaker 1>that. Right?

00:31:03.025 --> 00:31:05.425
<v Speaker 2>Sorry. What was that? I was expecting it

00:31:05.425 --> 00:31:08.384
<v Speaker 1>to create some sort of device,

00:31:08.385 --> 00:31:10.865
<v Speaker 1>bridge device here or tunnel or whatever. Right?

00:31:10.865 --> 00:31:12.705
<v Speaker 1>And to the virtual machine, but it hasn't

00:31:12.705 --> 00:31:13.825
<v Speaker 1>done any of that.

00:31:14.304 --> 00:31:14.625
<v Speaker 1>So

00:31:15.830 --> 00:31:18.230
<v Speaker 3>No. The default of I think if it's

00:31:18.230 --> 00:31:20.230
<v Speaker 3>boxes, it's using at the end KVM or

00:31:20.230 --> 00:31:22.150
<v Speaker 3>KN with using user

00:31:23.830 --> 00:31:26.070
<v Speaker 3>mode network, which is completely

00:31:26.070 --> 00:31:27.510
<v Speaker 3>isolated from the host then.

00:31:28.445 --> 00:31:30.605
<v Speaker 1>Alright. There goes that plan. Bleach.

00:31:33.325 --> 00:31:36.125
<v Speaker 1>Shall we pop over to your machine where

00:31:36.125 --> 00:31:37.805
<v Speaker 1>we can see a working demo rather than

00:31:37.805 --> 00:31:39.404
<v Speaker 1>my Sure. One?

00:31:40.125 --> 00:31:40.765
<v Speaker 2>Feel free.

00:31:43.540 --> 00:31:45.620
<v Speaker 2>Let me know when you see my screen.

00:31:45.860 --> 00:31:48.500
<v Speaker 1>Yeah, I'll just swap that right now.

00:31:50.660 --> 00:31:53.140
<v Speaker 1>All right, we got it. All right. So

00:31:53.300 --> 00:31:55.059
<v Speaker 2>I am just creating,

00:31:55.860 --> 00:31:58.340
<v Speaker 2>I am using Copilot here and

00:31:58.515 --> 00:31:59.794
<v Speaker 2>it will just

00:32:01.715 --> 00:32:04.195
<v Speaker 2>same thing spinning up PM,

00:32:05.155 --> 00:32:06.355
<v Speaker 2>create and run.

00:32:08.355 --> 00:32:10.675
<v Speaker 2>And we should be able to see it

00:32:10.675 --> 00:32:13.395
<v Speaker 2>here. Again, also interactive install.

00:32:14.970 --> 00:32:16.409
<v Speaker 1>Sorry. What software is this?

00:32:16.810 --> 00:32:19.130
<v Speaker 2>This is called Copilot,

00:32:19.530 --> 00:32:21.130
<v Speaker 2>if I remember correctly.

00:32:21.530 --> 00:32:23.690
<v Speaker 2>Poor guys because now Copilot, I guess, is

00:32:23.690 --> 00:32:25.690
<v Speaker 2>a bad name to have, but they chose

00:32:25.690 --> 00:32:26.250
<v Speaker 2>it before.

00:32:29.284 --> 00:32:29.924
<v Speaker 2>And

00:32:30.245 --> 00:32:33.445
<v Speaker 2>it allows me to manage my workstation

00:32:33.445 --> 00:32:36.164
<v Speaker 2>because I'm normally working from

00:32:38.404 --> 00:32:39.764
<v Speaker 2>Apple computer.

00:32:40.885 --> 00:32:42.804
<v Speaker 2>Okay. So

00:32:42.804 --> 00:32:45.480
<v Speaker 2>let me move this thing at the bottom

00:32:45.480 --> 00:32:47.400
<v Speaker 2>that doesn't let me see.

00:32:47.720 --> 00:32:48.760
<v Speaker 2>Oops. Sorry.

00:32:51.000 --> 00:32:51.960
<v Speaker 2>There.

00:32:52.520 --> 00:32:53.080
<v Speaker 2>Okay.

00:32:53.320 --> 00:32:55.960
<v Speaker 2>Create users. Yes. Kairos. Kairos.

00:32:57.000 --> 00:32:57.320
<v Speaker 2>Again,

00:32:58.475 --> 00:32:59.434
<v Speaker 2>GitHub.

00:32:59.675 --> 00:33:00.075
<v Speaker 2>That

00:33:01.755 --> 00:33:03.755
<v Speaker 2>should add my keys. Admin,

00:33:03.755 --> 00:33:04.395
<v Speaker 2>yes.

00:33:05.035 --> 00:33:07.195
<v Speaker 2>No mesh support at the moment. Yes. K

00:33:07.195 --> 00:33:10.395
<v Speaker 2>three s. Settings. Okay. Yes. Like I was

00:33:10.395 --> 00:33:11.835
<v Speaker 2>saying, it created at the top

00:33:13.140 --> 00:33:13.940
<v Speaker 2>cloud

00:33:14.020 --> 00:33:15.540
<v Speaker 2>in it like configuration,

00:33:15.540 --> 00:33:16.899
<v Speaker 2>and now it's going through

00:33:17.300 --> 00:33:18.500
<v Speaker 2>all the different

00:33:19.460 --> 00:33:22.180
<v Speaker 2>stuff that it needs to do. Let me

00:33:22.180 --> 00:33:23.620
<v Speaker 2>also get back to

00:33:23.940 --> 00:33:25.300
<v Speaker 2>where we are here.

00:33:26.755 --> 00:33:28.995
<v Speaker 2>Then we're gonna need to reboot,

00:33:29.155 --> 00:33:31.955
<v Speaker 2>and then we SSH into the system.

00:33:34.195 --> 00:33:36.115
<v Speaker 2>And I can see

00:33:36.755 --> 00:33:37.235
<v Speaker 2>here,

00:33:38.840 --> 00:33:40.840
<v Speaker 2>Already, I'm getting an IP.

00:33:41.560 --> 00:33:43.240
<v Speaker 2>So I'm gonna go into

00:33:44.200 --> 00:33:45.400
<v Speaker 2>my terminal.

00:33:47.160 --> 00:33:47.560
<v Speaker 2>Okay.

00:33:50.515 --> 00:33:53.554
<v Speaker 2>So let's see how this is going. Yep.

00:33:53.635 --> 00:33:54.595
<v Speaker 2>Reboot.

00:33:56.115 --> 00:33:59.475
<v Speaker 2>Let's wait a bit. Kaira's already there.

00:34:01.715 --> 00:34:03.475
<v Speaker 1>Yeah. So while you were spinning this up,

00:34:03.475 --> 00:34:05.730
<v Speaker 1>I did check the documentation on Numboxes. And

00:34:05.730 --> 00:34:07.330
<v Speaker 1>all you need to do is install LibVert

00:34:07.330 --> 00:34:09.330
<v Speaker 1>daemon config network and start the system d

00:34:09.330 --> 00:34:12.130
<v Speaker 1>service. But we'll we'll continue on your machine.

00:34:12.130 --> 00:34:14.610
<v Speaker 3>So Okay. It wasn't it wasn't easy fix.

00:34:14.690 --> 00:34:15.090
<v Speaker 2>And

00:34:16.449 --> 00:34:17.650
<v Speaker 2>it's coming up now.

00:34:25.554 --> 00:34:27.714
<v Speaker 2>Alright. So now I can s s h

00:34:27.714 --> 00:34:29.315
<v Speaker 2>in. As you see, I didn't have to

00:34:29.315 --> 00:34:30.594
<v Speaker 2>add the password

00:34:30.594 --> 00:34:31.795
<v Speaker 2>because it already

00:34:31.875 --> 00:34:33.155
<v Speaker 2>fetched my

00:34:33.315 --> 00:34:34.114
<v Speaker 2>credentials

00:34:34.355 --> 00:34:35.955
<v Speaker 2>my my key from GitHub.

00:34:37.130 --> 00:34:39.130
<v Speaker 2>And now here, I can

00:34:39.450 --> 00:34:40.170
<v Speaker 2>basically

00:34:40.410 --> 00:34:43.610
<v Speaker 2>ask Root to something like k nine s,

00:34:45.530 --> 00:34:46.090
<v Speaker 2>where

00:34:46.570 --> 00:34:47.450
<v Speaker 2>I can

00:34:48.135 --> 00:34:49.655
<v Speaker 2>show, for example,

00:34:49.735 --> 00:34:50.455
<v Speaker 2>the

00:34:50.614 --> 00:34:53.495
<v Speaker 2>cluster that is spinning up at the moment.

00:34:53.975 --> 00:34:56.534
<v Speaker 2>And that's basically it. Now you can play

00:34:56.534 --> 00:34:57.735
<v Speaker 2>with your cluster.

00:34:58.375 --> 00:35:00.535
<v Speaker 1>So the default image is shipping KNI nest

00:35:00.535 --> 00:35:00.935
<v Speaker 1>as well?

00:35:01.640 --> 00:35:05.160
<v Speaker 2>Yeah. It's something that we're constantly discussing, like

00:35:05.160 --> 00:35:08.280
<v Speaker 2>what should be in the base image.

00:35:08.360 --> 00:35:11.000
<v Speaker 2>For some people, it should be about stripping

00:35:11.000 --> 00:35:12.040
<v Speaker 2>it completely.

00:35:12.360 --> 00:35:15.144
<v Speaker 2>We think that at least to get a

00:35:15.144 --> 00:35:16.904
<v Speaker 2>bit of an idea, play with it, it's

00:35:16.904 --> 00:35:18.984
<v Speaker 2>nice to have it. But, yeah, we we

00:35:18.984 --> 00:35:21.065
<v Speaker 2>haven't decided whether we should remove it or

00:35:21.065 --> 00:35:23.785
<v Speaker 2>not. So is kubectl there or do I

00:35:23.785 --> 00:35:25.785
<v Speaker 1>need to use k three s kubectl?

00:35:25.785 --> 00:35:25.944
<v Speaker 1>Like

00:35:26.904 --> 00:35:28.025
<v Speaker 2>Kube

00:35:27.990 --> 00:35:30.950
<v Speaker 2>CTL is here, so you can,

00:35:32.950 --> 00:35:35.110
<v Speaker 2>I guess, do this? Yeah.

00:35:35.590 --> 00:35:37.350
<v Speaker 1>Cool. Alright. Yep.

00:35:37.910 --> 00:35:40.390
<v Speaker 1>Michael in the chat is asking, is this

00:35:40.390 --> 00:35:43.510
<v Speaker 1>similar to Talos? So maybe we could talk

00:35:43.510 --> 00:35:46.205
<v Speaker 1>about how are how are these different.

00:35:48.285 --> 00:35:50.525
<v Speaker 2>That's a very good question.

00:35:51.405 --> 00:35:53.405
<v Speaker 2>I don't know if you wanna dive deep

00:35:53.405 --> 00:35:55.405
<v Speaker 2>deep into that one, Tore.

00:35:58.340 --> 00:35:59.380
<v Speaker 3>Yeah, I mean,

00:36:00.740 --> 00:36:01.620
<v Speaker 3>there is some,

00:36:02.580 --> 00:36:03.540
<v Speaker 3>I would say,

00:36:04.340 --> 00:36:06.900
<v Speaker 3>crossing of the paths into the two projects

00:36:06.900 --> 00:36:09.635
<v Speaker 3>because they are both trying to deliver on

00:36:09.635 --> 00:36:10.835
<v Speaker 3>OS which is

00:36:11.555 --> 00:36:12.995
<v Speaker 3>focused on

00:36:13.315 --> 00:36:14.275
<v Speaker 3>workloads.

00:36:14.755 --> 00:36:15.395
<v Speaker 3>However,

00:36:15.555 --> 00:36:18.995
<v Speaker 3>Keras is, first, not restricted to Kubernetes

00:36:19.395 --> 00:36:20.515
<v Speaker 3>and it's not

00:36:20.835 --> 00:36:23.840
<v Speaker 3>a Linux OS by per se. It's a

00:36:23.840 --> 00:36:26.400
<v Speaker 3>meta Linux distribution that you can put on

00:36:26.400 --> 00:36:27.840
<v Speaker 3>top of any distro.

00:36:30.160 --> 00:36:31.040
<v Speaker 3>Talos

00:36:32.800 --> 00:36:36.000
<v Speaker 3>is a complete Linux distro while

00:36:36.705 --> 00:36:38.705
<v Speaker 3>Keras is not. So they're

00:36:38.705 --> 00:36:39.585
<v Speaker 3>kind of

00:36:40.065 --> 00:36:42.785
<v Speaker 3>similar in the sense that both let you

00:36:43.425 --> 00:36:46.305
<v Speaker 3>a system with Kubernetes in that sense,

00:36:46.545 --> 00:36:47.985
<v Speaker 3>but they do it in a very different

00:36:47.985 --> 00:36:48.225
<v Speaker 3>way.

00:36:50.110 --> 00:36:50.750
<v Speaker 3>And,

00:36:51.790 --> 00:36:54.350
<v Speaker 3>yeah, it it really depends, I guess, on

00:36:54.350 --> 00:36:56.270
<v Speaker 3>the use case here.

00:36:56.910 --> 00:36:58.910
<v Speaker 4>Yeah. I mean, I can add some more

00:36:58.910 --> 00:37:01.310
<v Speaker 1>context there. I'm quite familiar with with Talos

00:37:01.310 --> 00:37:02.270
<v Speaker 1>as well. I mean,

00:37:03.335 --> 00:37:06.695
<v Speaker 1>you know, Kairos and Talos, from my perspective,

00:37:06.934 --> 00:37:09.815
<v Speaker 1>both give me an immutable distribution.

00:37:09.974 --> 00:37:12.214
<v Speaker 1>But Talos is very opinionated in the way

00:37:12.214 --> 00:37:13.494
<v Speaker 1>they do it and that they take over

00:37:13.494 --> 00:37:16.135
<v Speaker 1>PED one. Right? So they only expose

00:37:16.410 --> 00:37:19.690
<v Speaker 1>a gRPC API for communicating with the server

00:37:19.690 --> 00:37:21.130
<v Speaker 1>over Talos control.

00:37:21.369 --> 00:37:23.850
<v Speaker 1>You cannot SSH in. That's not an option.

00:37:24.809 --> 00:37:26.650
<v Speaker 1>And, you know, there's no system d or

00:37:26.650 --> 00:37:29.075
<v Speaker 1>anything like that. So the learning curve can

00:37:29.075 --> 00:37:30.835
<v Speaker 1>quite be quite steep because you have to

00:37:30.835 --> 00:37:32.915
<v Speaker 1>relearn how to do the the basics.

00:37:33.875 --> 00:37:35.875
<v Speaker 1>Whereas what I'm seeing so far from Kairos

00:37:35.875 --> 00:37:36.595
<v Speaker 1>is

00:37:36.914 --> 00:37:38.355
<v Speaker 1>I get to bring my own,

00:37:38.835 --> 00:37:41.260
<v Speaker 1>you know, Linux distribution, but I get the

00:37:41.260 --> 00:37:43.420
<v Speaker 1>perks and the benefits of having something that

00:37:43.420 --> 00:37:44.620
<v Speaker 1>is immutable.

00:37:45.260 --> 00:37:46.460
<v Speaker 1>You know? And then

00:37:46.940 --> 00:37:49.020
<v Speaker 1>there's other things I I think we're gonna

00:37:49.020 --> 00:37:50.380
<v Speaker 1>get to. I'm not sure, but, you know,

00:37:50.380 --> 00:37:51.820
<v Speaker 1>there's to build their own

00:37:52.780 --> 00:37:55.335
<v Speaker 1>version of Talos can be quite challenging. And

00:37:55.335 --> 00:37:57.095
<v Speaker 1>I'm curious to see how that works with

00:37:57.095 --> 00:37:59.575
<v Speaker 1>Kairos. Like, how do I actually bring my

00:37:59.575 --> 00:38:01.415
<v Speaker 1>own distribution and how do I configure things

00:38:01.415 --> 00:38:03.015
<v Speaker 1>to my own liking and stuff like that?

00:38:03.015 --> 00:38:04.295
<v Speaker 1>So maybe we'll get to that in just

00:38:04.295 --> 00:38:04.855
<v Speaker 1>a moment.

00:38:05.415 --> 00:38:08.215
<v Speaker 2>Yeah. Maybe it's important to mention

00:38:08.850 --> 00:38:12.050
<v Speaker 2>what something we've noticed is that many projects

00:38:12.050 --> 00:38:13.170
<v Speaker 2>or companies

00:38:13.570 --> 00:38:15.810
<v Speaker 2>don't have the luxury of being in a

00:38:15.810 --> 00:38:17.090
<v Speaker 2>completely greenfield

00:38:17.090 --> 00:38:19.890
<v Speaker 2>project, so to speak, or or something modern

00:38:20.050 --> 00:38:22.210
<v Speaker 2>that is already cloud native

00:38:22.370 --> 00:38:22.850
<v Speaker 2>ready.

00:38:23.385 --> 00:38:25.705
<v Speaker 2>So they actually require

00:38:25.865 --> 00:38:27.945
<v Speaker 2>either multiple workloads,

00:38:28.265 --> 00:38:30.265
<v Speaker 2>and some of them might be legacy and

00:38:30.265 --> 00:38:32.825
<v Speaker 2>only run on Linux, but not on Kubernetes.

00:38:32.985 --> 00:38:34.825
<v Speaker 2>Moving to Kubernetes might be,

00:38:35.145 --> 00:38:37.305
<v Speaker 2>too costly for them or simply not an

00:38:37.305 --> 00:38:37.545
<v Speaker 2>option.

00:38:38.170 --> 00:38:40.570
<v Speaker 2>Or we also see cases where

00:38:41.370 --> 00:38:45.530
<v Speaker 2>some companies are already spending money on licenses

00:38:45.530 --> 00:38:47.210
<v Speaker 2>with a certain provider.

00:38:48.090 --> 00:38:50.730
<v Speaker 2>So in all of these scenarios, Kairos can

00:38:50.730 --> 00:38:51.930
<v Speaker 2>adapt to you.

00:38:53.355 --> 00:38:55.835
<v Speaker 2>Well, as you say in the other option

00:38:55.835 --> 00:38:59.115
<v Speaker 2>with Talos, it's more opinionated in that sense.

00:38:59.115 --> 00:39:01.035
<v Speaker 2>The the result of what you can do

00:39:01.115 --> 00:39:03.835
<v Speaker 2>is probably the same to some degree with

00:39:03.835 --> 00:39:06.555
<v Speaker 2>both distros, at least when it's on the

00:39:06.555 --> 00:39:07.355
<v Speaker 2>Kubernetes side.

00:39:08.030 --> 00:39:08.590
<v Speaker 2>But

00:39:09.790 --> 00:39:11.470
<v Speaker 2>we do it in a flexible way where,

00:39:11.470 --> 00:39:12.990
<v Speaker 2>for example, if you need to

00:39:13.950 --> 00:39:16.030
<v Speaker 2>I don't know. Even if for you, it's

00:39:16.030 --> 00:39:18.430
<v Speaker 2>important, the know how of your engineers,

00:39:18.430 --> 00:39:20.605
<v Speaker 2>and you cannot just let go of all

00:39:20.605 --> 00:39:23.165
<v Speaker 2>that you've built on Ubuntu,

00:39:23.165 --> 00:39:25.725
<v Speaker 2>then you can continue working on Ubuntu. Yeah.

00:39:26.285 --> 00:39:27.005
<v Speaker 3>Yeah.

00:39:27.085 --> 00:39:29.165
<v Speaker 3>Clear example could be, for instance, we do

00:39:29.165 --> 00:39:31.485
<v Speaker 3>provide support for Nvidia

00:39:31.485 --> 00:39:32.285
<v Speaker 3>JX Orin,

00:39:48.755 --> 00:39:51.315
<v Speaker 3>your OS. But then you get all the

00:39:51.315 --> 00:39:53.475
<v Speaker 3>benefits of using an immutable OS,

00:39:53.635 --> 00:39:55.235
<v Speaker 3>AB system upgrades,

00:39:55.235 --> 00:39:57.795
<v Speaker 3>and yada yada. So you get that extra

00:39:57.795 --> 00:39:59.395
<v Speaker 3>layer also on

00:40:00.275 --> 00:40:02.915
<v Speaker 3>a situation where you typically wouldn't do, even

00:40:02.915 --> 00:40:05.720
<v Speaker 3>with Raspberry Pi. You could deploy Keras on

00:40:05.720 --> 00:40:06.440
<v Speaker 3>Raspberry,

00:40:06.760 --> 00:40:08.200
<v Speaker 3>and you can get all the OSs you

00:40:08.200 --> 00:40:10.520
<v Speaker 3>want and switch between OSs

00:40:10.680 --> 00:40:13.080
<v Speaker 3>by providing a different container image.

00:40:13.320 --> 00:40:14.680
<v Speaker 3>So this is the kind of

00:40:15.400 --> 00:40:17.725
<v Speaker 3>vision that Keras accomplishes.

00:40:17.725 --> 00:40:20.125
<v Speaker 3>And it doesn't matter what OS it is.

00:40:20.445 --> 00:40:21.005
<v Speaker 3>So

00:40:21.565 --> 00:40:24.365
<v Speaker 3>you could literally take whatever

00:40:24.445 --> 00:40:26.605
<v Speaker 3>OS is out there or even build your

00:40:26.605 --> 00:40:29.725
<v Speaker 3>own OS. You could build your Linux from

00:40:29.725 --> 00:40:32.410
<v Speaker 3>scratch and put Keras on top so you

00:40:32.410 --> 00:40:34.250
<v Speaker 3>don't have to handle the upgrades

00:40:34.490 --> 00:40:36.250
<v Speaker 3>for your OS. Right?

00:40:37.450 --> 00:40:39.450
<v Speaker 1>Alright. Let's get into some of those details

00:40:39.450 --> 00:40:41.370
<v Speaker 1>there because those are pretty bold claims.

00:40:41.610 --> 00:40:42.810
<v Speaker 1>Firstly,

00:40:43.130 --> 00:40:45.625
<v Speaker 1>Michael said Talos wasn't an option because of

00:40:45.625 --> 00:40:46.984
<v Speaker 1>CNI limitations.

00:40:46.984 --> 00:40:49.305
<v Speaker 1>So I'm gonna assume the conversation here is

00:40:49.305 --> 00:40:50.185
<v Speaker 1>that with

00:40:51.385 --> 00:40:53.785
<v Speaker 1>sorry. The buzzer with Kairos, you can use

00:40:53.785 --> 00:40:55.465
<v Speaker 1>any CNI implementation.

00:40:55.545 --> 00:40:58.440
<v Speaker 3>Yes. Yeah. Correct. You can use any Kubernetes

00:40:58.440 --> 00:40:59.480
<v Speaker 3>distribution.

00:40:59.480 --> 00:41:00.600
<v Speaker 3>So we currently

00:41:01.000 --> 00:41:01.640
<v Speaker 3>support

00:41:02.600 --> 00:41:05.320
<v Speaker 3>KZeros and K3s, but we have also

00:41:05.560 --> 00:41:08.680
<v Speaker 3>community providers like Kube admin. So Kube admin

00:41:08.680 --> 00:41:09.640
<v Speaker 3>is supported as well.

00:41:10.525 --> 00:41:12.445
<v Speaker 3>And you can build whatever

00:41:12.445 --> 00:41:16.445
<v Speaker 3>provider for your specific Kubernetes distribution and have

00:41:16.445 --> 00:41:18.765
<v Speaker 3>the configuration bits you really need

00:41:19.325 --> 00:41:22.445
<v Speaker 3>from the whole OS stack. So if you

00:41:22.445 --> 00:41:25.645
<v Speaker 3>need some dependency in the system, you can

00:41:25.040 --> 00:41:26.560
<v Speaker 3>just bring this in.

00:41:28.000 --> 00:41:28.880
<v Speaker 3>Yep.

00:41:29.680 --> 00:41:31.520
<v Speaker 1>Now when you say you can bring

00:41:31.839 --> 00:41:34.080
<v Speaker 1>any Linux distribution even to the point of

00:41:34.080 --> 00:41:36.080
<v Speaker 1>saying Linux from scratch, which is oh, I'll

00:41:36.080 --> 00:41:38.095
<v Speaker 1>pop back over to here just now.

00:41:38.415 --> 00:41:40.415
<v Speaker 4>Even, like, building your own learnings from scratch.

00:41:40.415 --> 00:41:42.015
<v Speaker 4>Right? I'm I'm curious to understand how this

00:41:42.015 --> 00:41:43.135
<v Speaker 4>works. So say,

00:41:43.535 --> 00:41:45.135
<v Speaker 4>I want to bring our Linux into the

00:41:45.135 --> 00:41:47.135
<v Speaker 4>mix, and I wanna get that one running

00:41:47.135 --> 00:41:49.055
<v Speaker 4>with with iOS. What is it you're doing

00:41:49.055 --> 00:41:51.215
<v Speaker 1>to that Linux distribution to give us

00:41:51.670 --> 00:41:54.550
<v Speaker 1>less automation and configurability and immutability?

00:41:55.430 --> 00:41:57.350
<v Speaker 3>That's a good question. So

00:41:58.470 --> 00:42:00.790
<v Speaker 3>Keras basically tries to identify which

00:42:01.190 --> 00:42:01.750
<v Speaker 3>system

00:42:02.470 --> 00:42:03.430
<v Speaker 3>you need to use

00:42:03.714 --> 00:42:04.355
<v Speaker 3>on

00:42:05.555 --> 00:42:07.234
<v Speaker 3>the image. And based on that, it's going

00:42:07.234 --> 00:42:09.795
<v Speaker 3>to install the required services.

00:42:10.115 --> 00:42:11.795
<v Speaker 3>On top of that, it's going to start

00:42:11.795 --> 00:42:13.555
<v Speaker 3>the Keras agent binaries

00:42:13.875 --> 00:42:16.675
<v Speaker 3>and some configuration that might be required

00:42:17.155 --> 00:42:19.474
<v Speaker 3>for the OS

00:42:18.720 --> 00:42:20.240
<v Speaker 3>to function properly,

00:42:20.240 --> 00:42:21.360
<v Speaker 3>like configuration,

00:42:21.360 --> 00:42:22.720
<v Speaker 3>system settings,

00:42:22.720 --> 00:42:24.720
<v Speaker 3>like users and these kinds of things.

00:42:25.440 --> 00:42:26.240
<v Speaker 3>So it doesn't

00:42:27.760 --> 00:42:29.760
<v Speaker 3>It tries to play with the tools that

00:42:29.760 --> 00:42:30.880
<v Speaker 3>are already there.

00:42:31.200 --> 00:42:33.520
<v Speaker 3>So I can bring you an example. So

00:42:32.985 --> 00:42:35.545
<v Speaker 3>Linux from scratch is a good example because

00:42:36.105 --> 00:42:39.145
<v Speaker 3>I've been exactly targeting that in my mind

00:42:39.145 --> 00:42:40.265
<v Speaker 3>from the beginning.

00:42:42.105 --> 00:42:43.305
<v Speaker 3>So as I was saying, I'm an next

00:42:43.305 --> 00:42:45.705
<v Speaker 3>game to developer. So I was always doing

00:42:45.705 --> 00:42:48.450
<v Speaker 3>my Linux from scratch. Right? And this system

00:42:48.450 --> 00:42:50.850
<v Speaker 3>should have been working also on that. It's

00:42:50.850 --> 00:42:53.650
<v Speaker 3>very much important. So Alpine works as well

00:42:53.650 --> 00:42:55.650
<v Speaker 3>because we don't do any

00:42:55.890 --> 00:42:56.770
<v Speaker 3>magic.

00:42:56.850 --> 00:42:58.210
<v Speaker 3>Basically, we just

00:42:58.450 --> 00:43:01.090
<v Speaker 3>do a very clean layout. It depends on

00:43:01.090 --> 00:43:03.215
<v Speaker 3>boot loaders. So for instance, we do support

00:43:03.215 --> 00:43:05.295
<v Speaker 3>GRUB and System Deboot,

00:43:05.775 --> 00:43:08.975
<v Speaker 3>and we leverage heavily on those to do

00:43:08.975 --> 00:43:10.495
<v Speaker 3>the operation that we need to do.

00:43:11.855 --> 00:43:13.135
<v Speaker 3>So to say a little bit of the

00:43:13.135 --> 00:43:15.775
<v Speaker 3>logic, it's moved to the bootloader rather than

00:43:15.775 --> 00:43:18.119
<v Speaker 3>OS to make it more agnostic when we

00:43:18.119 --> 00:43:20.760
<v Speaker 3>do lifecycle management like upgrades.

00:43:21.720 --> 00:43:24.839
<v Speaker 2>And it's obviously not magic. Right? Like, there

00:43:24.839 --> 00:43:27.319
<v Speaker 2>are limitations to where we can run. Right

00:43:27.319 --> 00:43:30.839
<v Speaker 2>now, it's only Systemd and OpenRC

00:43:30.839 --> 00:43:32.675
<v Speaker 2>as init systems.

00:43:33.075 --> 00:43:35.555
<v Speaker 2>But at least the code is written in

00:43:35.555 --> 00:43:38.355
<v Speaker 2>a way that it's you can expand it.

00:43:38.355 --> 00:43:41.475
<v Speaker 2>Right? Like, if you really need to run

00:43:41.475 --> 00:43:44.355
<v Speaker 2>on a different init system, then it's just

00:43:44.355 --> 00:43:47.160
<v Speaker 2>a matter of telling the Kairos agent how

00:43:47.160 --> 00:43:48.760
<v Speaker 2>that init system works.

00:43:49.560 --> 00:43:52.520
<v Speaker 2>But the same thing for package management. Right?

00:43:52.520 --> 00:43:55.000
<v Speaker 2>Like, if you bring your own distribution that

00:43:55.000 --> 00:43:56.840
<v Speaker 2>you created and you also create

00:43:57.295 --> 00:43:59.455
<v Speaker 2>a different package manager, of course, we're not

00:43:59.455 --> 00:44:02.655
<v Speaker 2>gonna know how to install those packages. But

00:44:03.215 --> 00:44:06.255
<v Speaker 2>the the mechanism to just extend that is

00:44:06.255 --> 00:44:07.215
<v Speaker 2>right there,

00:44:07.535 --> 00:44:09.775
<v Speaker 2>and it makes it easy to to have

00:44:09.775 --> 00:44:12.660
<v Speaker 2>all the features of Kairos in your own

00:44:12.660 --> 00:44:13.460
<v Speaker 2>OS.

00:44:15.700 --> 00:44:18.340
<v Speaker 1>Okay. So with that in mind then, if

00:44:18.340 --> 00:44:21.460
<v Speaker 1>I said, let's share my screen and build

00:44:21.460 --> 00:44:24.420
<v Speaker 1>a custom Kairos image that we can boot.

00:44:24.420 --> 00:44:25.940
<v Speaker 1>Is that something we can do in the

00:44:25.940 --> 00:44:27.185
<v Speaker 1>next thirty minutes?

00:44:28.945 --> 00:44:30.705
<v Speaker 2>Mhmm. I mean, yeah.

00:44:31.345 --> 00:44:33.425
<v Speaker 2>Part part if we continue in the getting

00:44:33.425 --> 00:44:34.225
<v Speaker 2>started,

00:44:34.625 --> 00:44:37.265
<v Speaker 2>that's a bit of where we want to

00:44:39.110 --> 00:44:40.470
<v Speaker 2>what we want to do.

00:44:41.670 --> 00:44:43.670
<v Speaker 2>Let me see if I have it here.

00:44:49.190 --> 00:44:51.750
<v Speaker 2>So the the second section of the getting

00:44:51.750 --> 00:44:53.190
<v Speaker 2>started, the building and upgrading

00:44:54.455 --> 00:44:56.535
<v Speaker 2>will tell you how to

00:44:57.335 --> 00:45:00.055
<v Speaker 2>create a new Kairos image based on an

00:45:00.055 --> 00:45:02.855
<v Speaker 2>existing Kairos image. And then at the bottom,

00:45:03.175 --> 00:45:03.895
<v Speaker 2>it says

00:45:04.855 --> 00:45:06.295
<v Speaker 2>build from scratch guide.

00:45:08.380 --> 00:45:10.540
<v Speaker 2>And that that's the

00:45:10.540 --> 00:45:12.780
<v Speaker 2>documentation we would need to follow if we

00:45:12.780 --> 00:45:13.900
<v Speaker 2>wanted to do that.

00:45:15.740 --> 00:45:16.460
<v Speaker 1>Alright.

00:45:17.500 --> 00:45:19.420
<v Speaker 1>Let let me share my screen again. So

00:45:19.740 --> 00:45:20.460
<v Speaker 2>Yep.

00:45:20.700 --> 00:45:22.060
<v Speaker 1>Let's go

00:45:23.915 --> 00:45:26.475
<v Speaker 1>back over here. And your screen is still

00:45:26.475 --> 00:45:27.995
<v Speaker 1>on. Let me swap that over.

00:45:30.315 --> 00:45:32.795
<v Speaker 1>Alright. So I did follow your instructions there.

00:45:32.795 --> 00:45:34.155
<v Speaker 1>We don't need to start with bells from

00:45:34.155 --> 00:45:36.599
<v Speaker 1>scratch. I mean, there are examples in the

00:45:36.599 --> 00:45:38.200
<v Speaker 1>repo and I think we'll definitely take a

00:45:38.200 --> 00:45:39.000
<v Speaker 1>look at them.

00:45:40.760 --> 00:45:42.599
<v Speaker 1>But let's go with the

00:45:43.880 --> 00:45:45.240
<v Speaker 2>Getting started. Yeah.

00:45:45.640 --> 00:45:48.039
<v Speaker 1>Yeah. Like, just, you know, just taking a

00:45:48.039 --> 00:45:50.520
<v Speaker 1>base image and then enriching it for some

00:45:50.520 --> 00:45:52.545
<v Speaker 1>ways. So the things that pop into my

00:45:52.545 --> 00:45:54.625
<v Speaker 1>head right off the bat are, okay, what

00:45:54.625 --> 00:45:56.145
<v Speaker 1>what are the bases that I can start

00:45:56.145 --> 00:45:57.905
<v Speaker 1>with? What are you building these images for

00:45:57.905 --> 00:45:59.905
<v Speaker 1>to get people started quickly?

00:46:01.984 --> 00:46:04.145
<v Speaker 2>Yeah. For exam the the example that I

00:46:04.145 --> 00:46:06.720
<v Speaker 2>have there is, let's say that for some

00:46:06.720 --> 00:46:09.600
<v Speaker 2>reason, you need Ruby in the system that

00:46:09.600 --> 00:46:11.280
<v Speaker 2>Keras doesn't provide.

00:46:11.600 --> 00:46:13.520
<v Speaker 2>And in order to do that, all you

00:46:13.520 --> 00:46:14.800
<v Speaker 2>would need to do is

00:46:16.000 --> 00:46:18.880
<v Speaker 2>use us from one of our Keras images,

00:46:19.295 --> 00:46:21.455
<v Speaker 2>then in the next step of the Dockerfile,

00:46:21.455 --> 00:46:23.935
<v Speaker 2>you would say, okay. App get update, app

00:46:23.935 --> 00:46:25.055
<v Speaker 2>get install

00:46:25.055 --> 00:46:25.775
<v Speaker 2>Ruby,

00:46:26.255 --> 00:46:28.575
<v Speaker 2>and then do a normal Docker build for

00:46:28.575 --> 00:46:29.535
<v Speaker 2>that image,

00:46:29.775 --> 00:46:32.255
<v Speaker 2>and you're pretty much done. Now you can

00:46:32.255 --> 00:46:35.130
<v Speaker 2>give this image that you've created to the

00:46:35.130 --> 00:46:35.849
<v Speaker 2>previous

00:46:38.569 --> 00:46:41.289
<v Speaker 2>machine that we just installed, and it will

00:46:41.289 --> 00:46:43.849
<v Speaker 2>upgrade to that system that now has Ruby

00:46:43.849 --> 00:46:44.490
<v Speaker 2>in it.

00:46:45.289 --> 00:46:45.930
<v Speaker 1>Nice.

00:46:46.250 --> 00:46:48.010
<v Speaker 1>So I see as a base choice of

00:46:48.010 --> 00:46:50.005
<v Speaker 1>operating system, people can come to this page

00:46:50.005 --> 00:46:51.685
<v Speaker 1>and then go for OpenSUSE,

00:46:51.685 --> 00:46:54.645
<v Speaker 1>Rocky Linux, Fedora, Alpine, Debian, etcetera.

00:46:54.805 --> 00:46:57.045
<v Speaker 1>I'm gonna keep things simple just because I

00:46:57.045 --> 00:46:58.165
<v Speaker 1>did do

00:46:59.285 --> 00:47:01.285
<v Speaker 1>a pull because it was a chunky sized

00:47:01.285 --> 00:47:03.125
<v Speaker 1>image. This Ubuntu base

00:47:03.430 --> 00:47:05.750
<v Speaker 1>is two and a half gig. So why

00:47:05.750 --> 00:47:06.550
<v Speaker 1>don't we

00:47:07.990 --> 00:47:09.990
<v Speaker 1>just tweak this a little bit?

00:47:10.870 --> 00:47:13.270
<v Speaker 1>And then okay. I can't I mean, I

00:47:13.270 --> 00:47:14.710
<v Speaker 1>could pod man it. I'll just do docker

00:47:14.710 --> 00:47:16.310
<v Speaker 1>to keep it simple. I don't wanna make

00:47:16.310 --> 00:47:16.870
<v Speaker 1>things

00:47:17.435 --> 00:47:18.875
<v Speaker 1>hard on myself again.

00:47:19.755 --> 00:47:20.315
<v Speaker 1>And

00:47:20.715 --> 00:47:22.075
<v Speaker 1>I'll grab this.

00:47:24.955 --> 00:47:26.155
<v Speaker 1>What happened there?

00:47:27.195 --> 00:47:27.835
<v Speaker 1>So

00:47:28.875 --> 00:47:29.675
<v Speaker 1>we did from.

00:47:30.170 --> 00:47:32.490
<v Speaker 1>Yep. Kui ubuntu

00:47:32.570 --> 00:47:35.370
<v Speaker 1>tag. One thing to notice here is if

00:47:35.370 --> 00:47:36.970
<v Speaker 3>you pick pick images

00:47:36.970 --> 00:47:38.170
<v Speaker 3>with the core,

00:47:39.770 --> 00:47:42.970
<v Speaker 3>you don't get basically the the Kubernetes distribution

00:47:43.164 --> 00:47:44.605
<v Speaker 3>and Kubectl

00:47:44.605 --> 00:47:47.644
<v Speaker 3>and K9s and etcetera, etcetera. Yeah. So there

00:47:47.644 --> 00:47:47.884
<v Speaker 3>are

00:47:49.164 --> 00:47:51.565
<v Speaker 1>Sorry, Nicole. No. No. Just

00:47:51.805 --> 00:47:54.045
<v Speaker 3>just to clarify, basically, with images that they're

00:47:54.045 --> 00:47:56.125
<v Speaker 3>using now, we're going to lose K9s or

00:47:56.125 --> 00:47:57.085
<v Speaker 3>K3s,

00:47:57.164 --> 00:47:58.684
<v Speaker 3>K3s if we do upgrades.

00:47:59.300 --> 00:48:01.220
<v Speaker 1>I I get that. I'm I'm I'm okay

00:48:01.220 --> 00:48:02.980
<v Speaker 1>with that. I just wanna kinda show people

00:48:02.980 --> 00:48:04.980
<v Speaker 1>how they can go from a Dockerfile to

00:48:04.980 --> 00:48:07.460
<v Speaker 1>an ISO to building the thing, right, for

00:48:07.460 --> 00:48:09.940
<v Speaker 1>some means. So, I mean, I'm a I'm

00:48:09.940 --> 00:48:10.420
<v Speaker 1>hoping

00:48:11.140 --> 00:48:13.805
<v Speaker 1>and assuming that anyone watching this is already

00:48:13.805 --> 00:48:16.365
<v Speaker 1>quite comfortable putting together Dockerfile. Right? I mean,

00:48:16.365 --> 00:48:18.125
<v Speaker 1>we can just do the classic example

00:48:18.444 --> 00:48:20.765
<v Speaker 1>of now we have NGINX running inside of

00:48:20.765 --> 00:48:22.365
<v Speaker 1>a container. So

00:48:22.605 --> 00:48:24.684
<v Speaker 1>with that, what I could do then,

00:48:25.569 --> 00:48:28.289
<v Speaker 1>it's just a docker image build dash t.

00:48:28.289 --> 00:48:29.890
<v Speaker 1>Let's call this Rawkode

00:48:30.369 --> 00:48:33.170
<v Speaker 1>engine x. You're you're gonna need to publish

00:48:33.170 --> 00:48:35.810
<v Speaker 2>it so that the system can consume it.

00:48:36.450 --> 00:48:38.369
<v Speaker 2>If the system has Internet, I don't I

00:48:38.369 --> 00:48:40.645
<v Speaker 2>haven't checked it. If can can you validate

00:48:40.645 --> 00:48:42.244
<v Speaker 2>if the VM has Internet?

00:48:44.164 --> 00:48:45.045
<v Speaker 1>Well,

00:48:45.045 --> 00:48:46.964
<v Speaker 1>I mean okay. So you were suggesting that

00:48:46.964 --> 00:48:48.484
<v Speaker 1>we built up the VM that I already

00:48:48.484 --> 00:48:50.405
<v Speaker 1>got run got working

00:48:50.405 --> 00:48:52.645
<v Speaker 1>and tell it to rebase off of another

00:48:52.645 --> 00:48:54.645
<v Speaker 1>image. I was gonna say, like,

00:48:55.160 --> 00:48:57.320
<v Speaker 1>the step that is missing from my mind

00:48:57.320 --> 00:48:58.840
<v Speaker 1>is if I do this

00:48:59.480 --> 00:49:01.880
<v Speaker 2>Mhmm. Tell me about Buildx. That's okay. I

00:49:01.880 --> 00:49:03.720
<v Speaker 1>get a container image. But if I want

00:49:03.720 --> 00:49:05.560
<v Speaker 1>to create that as an ISO, is that

00:49:05.560 --> 00:49:07.320
<v Speaker 1>the default flow or are you saying you

00:49:07.320 --> 00:49:09.765
<v Speaker 1>would boot Kairos core and then tell it

00:49:09.765 --> 00:49:11.925
<v Speaker 1>to consume a Docker image as an additional

00:49:11.925 --> 00:49:12.485
<v Speaker 1>layer?

00:49:12.885 --> 00:49:15.205
<v Speaker 1>Maybe I just not understanding that. Well, both

00:49:15.205 --> 00:49:16.405
<v Speaker 2>work, actually.

00:49:16.885 --> 00:49:18.885
<v Speaker 2>It it's a totally valid flow,

00:49:19.685 --> 00:49:20.565
<v Speaker 2>the one you're describing.

00:49:21.540 --> 00:49:24.020
<v Speaker 1>Okay. So is it easy now for me

00:49:24.020 --> 00:49:26.740
<v Speaker 1>on my standard Linux machine to say, okay,

00:49:26.740 --> 00:49:29.380
<v Speaker 1>let's convert Rawkode NGINX to an ISO that

00:49:29.380 --> 00:49:31.460
<v Speaker 1>I can just DD onto some cloud

00:49:31.700 --> 00:49:32.740
<v Speaker 1>virtual machine?

00:49:33.300 --> 00:49:34.260
<v Speaker 1>Is that

00:49:34.885 --> 00:49:37.045
<v Speaker 1>a common workflow or would you say

00:49:37.365 --> 00:49:39.765
<v Speaker 1>publishing the container image and using that as

00:49:39.765 --> 00:49:41.445
<v Speaker 1>a layer on another

00:49:41.445 --> 00:49:44.725
<v Speaker 1>Kairos as the preferred approach? Like, what should

00:49:44.725 --> 00:49:45.285
<v Speaker 1>people

00:49:45.525 --> 00:49:47.365
<v Speaker 1>aspire to if they wanna ship this stuff

00:49:47.365 --> 00:49:47.925
<v Speaker 1>to production?

00:49:52.180 --> 00:49:54.260
<v Speaker 3>So

00:49:55.859 --> 00:49:58.500
<v Speaker 3>we have dedicated tooling for that. So from

00:49:58.500 --> 00:50:00.660
<v Speaker 3>the container image, basically,

00:50:01.539 --> 00:50:03.619
<v Speaker 3>you can build all the artifacts you need.

00:50:03.619 --> 00:50:04.500
<v Speaker 3>So for upgrades,

00:50:04.875 --> 00:50:07.035
<v Speaker 3>you are okay with the container image only.

00:50:07.035 --> 00:50:09.355
<v Speaker 3>So up to this point, you just publish

00:50:09.355 --> 00:50:11.355
<v Speaker 3>the container image to a registry,

00:50:11.435 --> 00:50:13.195
<v Speaker 3>and then you would point the node to

00:50:13.195 --> 00:50:14.075
<v Speaker 3>that image.

00:50:14.235 --> 00:50:16.955
<v Speaker 3>If you would instead of, you know, create

00:50:16.955 --> 00:50:17.915
<v Speaker 3>an ISO,

00:50:18.075 --> 00:50:20.450
<v Speaker 3>there is the Aurora boot two that you

00:50:20.450 --> 00:50:23.329
<v Speaker 3>can point the image like this one, and

00:50:23.329 --> 00:50:25.890
<v Speaker 3>it will create an ISO out from this.

00:50:26.849 --> 00:50:28.609
<v Speaker 4>Alright. What Came

00:50:30.450 --> 00:50:31.730
<v Speaker 3>with the WebUI.

00:50:31.890 --> 00:50:33.970
<v Speaker 3>You can open the WebUI to

00:50:34.494 --> 00:50:36.015
<v Speaker 3>drive this in front.

00:50:37.135 --> 00:50:38.975
<v Speaker 1>What did you say? It was called Aurora.

00:50:39.135 --> 00:50:39.775
<v Speaker 2>Yep.

00:50:41.135 --> 00:50:43.695
<v Speaker 1>Aurora BIM? That's right? Yep. That's correct.

00:50:44.655 --> 00:50:47.055
<v Speaker 1>Alright. All the way to the bottom,

00:50:47.295 --> 00:50:48.655
<v Speaker 2>there is a WebUI.

00:50:48.655 --> 00:50:49.135
<v Speaker 2>Or, otherwise,

00:50:49.930 --> 00:50:52.090
<v Speaker 2>if you wanna use the CLI,

00:50:53.290 --> 00:50:56.970
<v Speaker 2>there's there are examples offline ISO build from

00:50:56.970 --> 00:50:57.850
<v Speaker 2>container images.

00:51:01.625 --> 00:51:03.065
<v Speaker 1>Alright. I mean, I'm happy to use a

00:51:03.065 --> 00:51:05.464
<v Speaker 1>web UI, but now that I'm seeing unified

00:51:05.464 --> 00:51:07.464
<v Speaker 1>kernel images in secure bit, I mean, my

00:51:07.464 --> 00:51:09.464
<v Speaker 1>interest is more than peaked. Like, we're getting

00:51:09.464 --> 00:51:10.905
<v Speaker 1>into the fun stuff now.

00:51:11.785 --> 00:51:12.345
<v Speaker 1>Alright.

00:51:13.145 --> 00:51:14.265
<v Speaker 1>Where was that web UI?

00:51:16.040 --> 00:51:17.240
<v Speaker 1>Oh, I don't see.

00:51:17.640 --> 00:51:20.520
<v Speaker 2>Ben says OCI is a %

00:51:20.520 --> 00:51:23.160
<v Speaker 2>easier with Kairos upgrade. I guess I guess

00:51:23.160 --> 00:51:25.880
<v Speaker 2>we're used to that flow as well.

00:51:27.765 --> 00:51:30.085
<v Speaker 2>But, yeah, in this case, it's it's a

00:51:30.085 --> 00:51:33.125
<v Speaker 2>total valid approach that you want to create

00:51:33.125 --> 00:51:35.605
<v Speaker 2>your ISOs because I don't know. You need

00:51:35.605 --> 00:51:36.965
<v Speaker 2>to send them through

00:51:37.845 --> 00:51:38.805
<v Speaker 2>USBs

00:51:38.805 --> 00:51:41.530
<v Speaker 2>for people to go and up upload because

00:51:41.530 --> 00:51:43.530
<v Speaker 2>they don't have Internet in those boxes. Right?

00:51:43.530 --> 00:51:45.370
<v Speaker 2>So it's a completely valid

00:51:45.690 --> 00:51:46.410
<v Speaker 2>flow.

00:51:48.490 --> 00:51:49.850
<v Speaker 1>Okay. So I've

00:51:50.089 --> 00:51:51.609
<v Speaker 1>so I clicked on this create a custom

00:51:51.609 --> 00:51:53.210
<v Speaker 1>cloud image. We you know, we've kind of

00:51:53.210 --> 00:51:55.050
<v Speaker 1>done this step already.

00:51:55.050 --> 00:51:55.530
<v Speaker 1>So

00:51:55.905 --> 00:51:56.865
<v Speaker 1>we added

00:51:56.945 --> 00:51:57.985
<v Speaker 1>NGINX.

00:51:58.465 --> 00:52:00.225
<v Speaker 1>Now I can use docker run

00:52:01.665 --> 00:52:04.705
<v Speaker 1>to then create the ISO. So this is

00:52:04.705 --> 00:52:05.345
<v Speaker 1>using

00:52:05.905 --> 00:52:07.665
<v Speaker 1>oh, we got a different registry now. Right?

00:52:07.665 --> 00:52:10.250
<v Speaker 1>So the Aurora boot isn't on Quay. It's

00:52:10.250 --> 00:52:12.010
<v Speaker 1>on Scarf SH. I don't know where that

00:52:12.010 --> 00:52:12.570
<v Speaker 1>is.

00:52:12.970 --> 00:52:14.970
<v Speaker 2>Oh, yeah. That you can if you don't

00:52:14.970 --> 00:52:16.650
<v Speaker 2>want to see that, you can just at

00:52:16.650 --> 00:52:19.450
<v Speaker 2>the top of the page next to the

00:52:19.450 --> 00:52:20.330
<v Speaker 2>sun,

00:52:20.490 --> 00:52:22.730
<v Speaker 2>you can see you can select not to

00:52:22.730 --> 00:52:23.770
<v Speaker 2>have that on the left.

00:52:25.285 --> 00:52:28.405
<v Speaker 2>This one, yeah. Personal use and then you

00:52:28.485 --> 00:52:29.765
<v Speaker 2>will see the Query.

00:52:30.005 --> 00:52:30.885
<v Speaker 4>Yeah.

00:52:30.885 --> 00:52:31.925
<v Speaker 4>All right. Okay.

00:52:32.805 --> 00:52:35.765
<v Speaker 1>Nice. So this just takes my current working

00:52:35.765 --> 00:52:37.285
<v Speaker 1>directory, it makes it a build.

00:52:39.020 --> 00:52:41.180
<v Speaker 1>Oh, no. It's create it's taking a build

00:52:41.180 --> 00:52:41.980
<v Speaker 1>directory,

00:52:42.140 --> 00:52:43.580
<v Speaker 1>bending it to Aurora, but

00:52:44.619 --> 00:52:45.660
<v Speaker 1>sets

00:52:45.820 --> 00:52:46.860
<v Speaker 1>these things.

00:52:47.339 --> 00:52:48.220
<v Speaker 1>Alright.

00:52:49.180 --> 00:52:50.540
<v Speaker 1>I don't know what that's doing. I'm just

00:52:50.540 --> 00:52:53.265
<v Speaker 1>gonna run it. I'm feeling brave today. You

00:52:53.585 --> 00:52:55.984
<v Speaker 2>just need to put the name of your

00:52:55.984 --> 00:52:56.945
<v Speaker 2>image in

00:52:57.505 --> 00:52:59.424
<v Speaker 2>where it says my custom image and we

00:52:59.424 --> 00:53:01.985
<v Speaker 2>will need to have because this one wants

00:53:02.305 --> 00:53:04.464
<v Speaker 2>Cloud config, we would need to create a

00:53:04.464 --> 00:53:05.345
<v Speaker 2>Cloud config as well.

00:53:06.549 --> 00:53:08.789
<v Speaker 1>Alright. So I don't have a build directory.

00:53:08.789 --> 00:53:11.269
<v Speaker 1>Is that okay? Yeah. That's okay because it's

00:53:11.269 --> 00:53:13.510
<v Speaker 2>adding it on top of your current

00:53:14.309 --> 00:53:15.270
<v Speaker 2>directory.

00:53:15.990 --> 00:53:16.869
<v Speaker 1>Alright.

00:53:16.869 --> 00:53:19.190
<v Speaker 1>I run a weird shell, so I will

00:53:19.190 --> 00:53:21.190
<v Speaker 1>need to have this come through bash.

00:53:23.075 --> 00:53:24.115
<v Speaker 1>My image

00:53:24.755 --> 00:53:26.115
<v Speaker 1>now is it gonna have

00:53:27.155 --> 00:53:30.275
<v Speaker 1>access to my local Docker image context?

00:53:30.515 --> 00:53:32.275
<v Speaker 1>Or will I actually need to push this

00:53:32.275 --> 00:53:34.595
<v Speaker 1>so well? Okay. In the second line, we

00:53:34.595 --> 00:53:36.994
<v Speaker 2>added the Docker socket, so you should have

00:53:36.994 --> 00:53:39.530
<v Speaker 2>access to them. Yeah. Okay. Can I just

00:53:39.530 --> 00:53:41.130
<v Speaker 1>remove the Cloud config and say we don't

00:53:41.130 --> 00:53:42.010
<v Speaker 1>care about that?

00:53:42.730 --> 00:53:43.770
<v Speaker 2>Yeah.

00:53:43.770 --> 00:53:44.890
<v Speaker 2>I don't know if we're going to be

00:53:44.890 --> 00:53:46.490
<v Speaker 2>able to log in, but

00:53:49.210 --> 00:53:51.530
<v Speaker 1>All right. Okay. So But you can. Technically,

00:53:51.530 --> 00:53:52.010
<v Speaker 2>you can.

00:53:55.425 --> 00:53:56.625
<v Speaker 1>Sorry,

00:53:57.265 --> 00:53:59.505
<v Speaker 1>I've went completely off script and now we're

00:53:59.505 --> 00:54:01.105
<v Speaker 1>just going No, that's fantastic.

00:54:03.265 --> 00:54:04.865
<v Speaker 1>There's Cloud Config.

00:54:05.425 --> 00:54:07.425
<v Speaker 2>Yeah. You can take an example of Cloud

00:54:07.425 --> 00:54:09.680
<v Speaker 2>Config probably from the getting I think in

00:54:09.680 --> 00:54:11.359
<v Speaker 2>the getting started I put it It's up,

00:54:11.359 --> 00:54:13.519
<v Speaker 3>no? There is no example up in the

00:54:13.519 --> 00:54:16.400
<v Speaker 3>docs, no? There was. There there

00:54:17.200 --> 00:54:18.960
<v Speaker 1>definitely was something.

00:54:19.279 --> 00:54:21.215
<v Speaker 1>I remember looking at it and seeing the

00:54:20.895 --> 00:54:21.295
<v Speaker 2>Yeah.

00:54:23.295 --> 00:54:25.775
<v Speaker 2>In the getting started, if you're pressing configuration,

00:54:25.775 --> 00:54:28.095
<v Speaker 2>go down and you will see one.

00:54:29.615 --> 00:54:30.095
<v Speaker 1>Perfect.

00:54:33.380 --> 00:54:36.660
<v Speaker 1>So let's just call this cloud config.

00:54:36.820 --> 00:54:37.620
<v Speaker 1>Put my

00:54:39.380 --> 00:54:41.620
<v Speaker 1>username in so I get my keys.

00:54:42.180 --> 00:54:43.700
<v Speaker 1>I'm

00:54:43.700 --> 00:54:45.060
<v Speaker 1>okay with all of that. Alright.

00:54:47.135 --> 00:54:50.015
<v Speaker 1>That's Now, the path and the build here

00:54:50.015 --> 00:54:50.975
<v Speaker 1>is this

00:54:52.975 --> 00:54:54.495
<v Speaker 1>because this is this

00:54:54.735 --> 00:54:55.855
<v Speaker 1>is a parameter

00:54:55.855 --> 00:54:58.655
<v Speaker 1>to the container image. So is this within

00:54:58.655 --> 00:54:59.295
<v Speaker 1>the context?

00:54:59.960 --> 00:55:00.839
<v Speaker 2>Yeah.

00:55:00.839 --> 00:55:02.680
<v Speaker 2>You're going to have to add it. So

00:55:02.680 --> 00:55:04.839
<v Speaker 2>I need to add another volume

00:55:04.920 --> 00:55:05.800
<v Speaker 2>at the Yeah.

00:55:07.000 --> 00:55:08.520
<v Speaker 1>All right. We can do that.

00:55:08.920 --> 00:55:11.960
<v Speaker 1>So I can just do PWD

00:55:13.855 --> 00:55:14.735
<v Speaker 1>and

00:55:14.735 --> 00:55:16.095
<v Speaker 1>call that cloud

00:55:16.335 --> 00:55:17.215
<v Speaker 1>like so.

00:55:18.095 --> 00:55:20.255
<v Speaker 1>And I call it cloudconfig.com.

00:55:20.255 --> 00:55:20.975
<v Speaker 2>Yeah.

00:55:21.295 --> 00:55:21.775
<v Speaker 1>Okay.

00:55:25.140 --> 00:55:26.020
<v Speaker 1>Let's see.

00:55:27.940 --> 00:55:31.220
<v Speaker 2>Cool. Cool. Hopefully Aurora isn't too big. No,

00:55:31.220 --> 00:55:32.819
<v Speaker 2>no. I think this one is a lot

00:55:32.819 --> 00:55:33.780
<v Speaker 2>smaller.

00:55:34.500 --> 00:55:36.180
<v Speaker 1>All right. So Michael was also in the

00:55:36.180 --> 00:55:38.420
<v Speaker 1>comments saying, Okay, what have I involved off

00:55:38.420 --> 00:55:39.460
<v Speaker 1>of a hypervisor?

00:55:39.460 --> 00:55:41.195
<v Speaker 1>I don't want container inception.

00:55:41.675 --> 00:55:43.115
<v Speaker 1>Oh, I mean, I think that's the path

00:55:43.115 --> 00:55:45.595
<v Speaker 1>we're on now actually. Right? So I mean,

00:55:45.595 --> 00:55:46.475
<v Speaker 1>you could do this

00:55:47.435 --> 00:55:48.795
<v Speaker 1>in a hypervisor?

00:55:50.315 --> 00:55:52.155
<v Speaker 1>Maybe I don't understand the question, Michael. Feel

00:55:52.155 --> 00:55:52.715
<v Speaker 1>free to

00:55:53.220 --> 00:55:54.740
<v Speaker 1>expand on that a little bit.

00:55:56.180 --> 00:55:58.340
<v Speaker 2>What if I'm building off of a hypervisor?

00:55:58.340 --> 00:55:58.820
<v Speaker 2>Like,

00:55:59.619 --> 00:56:01.619
<v Speaker 2>Michael, do you mean, like, you already are

00:56:01.619 --> 00:56:02.740
<v Speaker 2>in a VM?

00:56:02.820 --> 00:56:05.380
<v Speaker 2>Do you want to start building VMs within

00:56:05.380 --> 00:56:06.900
<v Speaker 2>it? Or or what does it mean?

00:56:09.565 --> 00:56:12.525
<v Speaker 1>Yeah. Possibly. But that seems like completely container

00:56:13.485 --> 00:56:14.925
<v Speaker 1>what if you wanna build off of an

00:56:14.925 --> 00:56:17.165
<v Speaker 1>ISO? Okay. So what if they're from statement

00:56:17.165 --> 00:56:19.885
<v Speaker 1>as another ISO rather than a container image?

00:56:20.360 --> 00:56:21.400
<v Speaker 2>No.

00:56:23.000 --> 00:56:24.760
<v Speaker 2>I think that would be a problem. Right,

00:56:24.760 --> 00:56:25.960
<v Speaker 2>Tore? Our

00:56:26.760 --> 00:56:30.360
<v Speaker 2>concept is starting always from Yeah. Container. Yeah.

00:56:31.080 --> 00:56:32.760
<v Speaker 3>Is a container image in

00:56:33.240 --> 00:56:35.560
<v Speaker 3>KARO's world. You have

00:56:36.015 --> 00:56:38.815
<v Speaker 3>basically, you start always from a container, right?

00:56:38.815 --> 00:56:40.734
<v Speaker 3>From the container image, you get all the

00:56:40.734 --> 00:56:42.015
<v Speaker 3>final artifacts,

00:56:42.015 --> 00:56:44.815
<v Speaker 3>including raw disks image for cloud

00:56:47.135 --> 00:56:48.015
<v Speaker 3>providers,

00:56:48.255 --> 00:56:49.615
<v Speaker 3>like even OpenStack,

00:56:49.615 --> 00:56:50.095
<v Speaker 3>for example,

00:56:50.660 --> 00:56:52.020
<v Speaker 3>or ISO,

00:56:52.180 --> 00:56:54.660
<v Speaker 3>but always from the same container image.

00:56:54.820 --> 00:56:55.540
<v Speaker 2>Yeah.

00:56:57.780 --> 00:57:00.100
<v Speaker 1>Alright. I broke it. I mean, it seemed

00:57:00.100 --> 00:57:01.460
<v Speaker 1>to do quite well. It got the cloud

00:57:01.460 --> 00:57:02.340
<v Speaker 1>config

00:57:02.805 --> 00:57:04.805
<v Speaker 1>and then it was trying to dump the

00:57:04.805 --> 00:57:06.165
<v Speaker 1>azure for us.

00:57:06.724 --> 00:57:07.925
<v Speaker 2>Does

00:57:07.925 --> 00:57:10.965
<v Speaker 2>it need permission to run with sudo maybe?

00:57:11.765 --> 00:57:13.845
<v Speaker 2>If you're writing in

00:57:17.460 --> 00:57:19.220
<v Speaker 2>Oh, no. Value too large.

00:57:20.500 --> 00:57:21.940
<v Speaker 2>Maybe the space

00:57:21.940 --> 00:57:22.740
<v Speaker 3>somewhere?

00:57:24.020 --> 00:57:25.620
<v Speaker 3>Maybe too large for the file.

00:57:28.195 --> 00:57:29.474
<v Speaker 2>Just

00:57:29.474 --> 00:57:32.355
<v Speaker 2>to keep elaborating maybe on what Michael is

00:57:32.355 --> 00:57:33.155
<v Speaker 2>asking.

00:57:33.635 --> 00:57:34.835
<v Speaker 2>So if

00:57:35.075 --> 00:57:36.675
<v Speaker 2>whatever distro

00:57:36.675 --> 00:57:38.515
<v Speaker 2>you are you want to use, let's say,

00:57:38.515 --> 00:57:40.835
<v Speaker 2>Proximox, I I don't know how they build

00:57:40.835 --> 00:57:41.555
<v Speaker 2>their images.

00:57:42.080 --> 00:57:44.720
<v Speaker 2>If they don't provide a container image,

00:57:44.880 --> 00:57:47.040
<v Speaker 2>then no. You would you would need to

00:57:47.040 --> 00:57:49.040
<v Speaker 2>figure out how to create a container image

00:57:49.040 --> 00:57:50.880
<v Speaker 2>out of their images first.

00:57:52.080 --> 00:57:52.640
<v Speaker 2>Yeah.

00:57:53.440 --> 00:57:55.760
<v Speaker 3>But generally speaking, you can build a container

00:57:55.760 --> 00:57:59.265
<v Speaker 3>image from scratch, virtually from anything. So

00:58:01.345 --> 00:58:02.705
<v Speaker 3>I don't know if that explain.

00:58:11.770 --> 00:58:13.290
<v Speaker 2>Too large also.

00:58:13.770 --> 00:58:16.250
<v Speaker 3>No. So, Michael, okay. Now I get to

00:58:16.250 --> 00:58:18.730
<v Speaker 3>the point. So Keras is not running as

00:58:18.730 --> 00:58:20.970
<v Speaker 3>a container. So the OS itself

00:58:21.770 --> 00:58:24.809
<v Speaker 3>is not using a container engine to start

00:58:25.065 --> 00:58:26.105
<v Speaker 3>in the system,

00:58:27.224 --> 00:58:30.585
<v Speaker 3>but it's rather using OCI and container images

00:58:30.585 --> 00:58:31.865
<v Speaker 3>only as a

00:58:33.464 --> 00:58:34.505
<v Speaker 3>way to deliver

00:58:35.704 --> 00:58:36.505
<v Speaker 3>upgrades

00:58:36.505 --> 00:58:37.305
<v Speaker 3>or

00:58:37.464 --> 00:58:38.825
<v Speaker 3>create artifacts.

00:58:39.280 --> 00:58:40.320
<v Speaker 3>So

00:58:40.320 --> 00:58:41.440
<v Speaker 3>from Proxmox,

00:58:41.440 --> 00:58:43.200
<v Speaker 3>you get so you have yeah, yeah. So

00:58:43.200 --> 00:58:45.520
<v Speaker 3>you create a standard VM and that's it.

00:58:45.520 --> 00:58:46.640
<v Speaker 3>I mean, is no

00:58:47.120 --> 00:58:49.760
<v Speaker 3>container line engine running the container image. So

00:58:49.760 --> 00:58:52.000
<v Speaker 3>the container image

00:58:51.605 --> 00:58:55.365
<v Speaker 3>became your bootable system at that point. And

00:58:56.164 --> 00:58:58.325
<v Speaker 3>from that container image you start to build

00:58:58.325 --> 00:59:00.484
<v Speaker 3>off all the other artifacts you need. And

00:59:00.484 --> 00:59:03.125
<v Speaker 3>Aurora boot for instance lets you build the

00:59:03.125 --> 00:59:05.125
<v Speaker 3>ISOs, there are all these key images for

00:59:05.125 --> 00:59:06.484
<v Speaker 3>cloud or drives

00:59:06.849 --> 00:59:09.810
<v Speaker 3>a net booting installation tool. So you can

00:59:09.810 --> 00:59:12.690
<v Speaker 3>also use it for booting several

00:59:13.250 --> 00:59:15.650
<v Speaker 3>games or machines that are configured to boot

00:59:15.650 --> 00:59:16.690
<v Speaker 3>from the network.

00:59:17.010 --> 00:59:19.890
<v Speaker 3>Well, it also supports this way which doesn't

00:59:19.890 --> 00:59:21.650
<v Speaker 3>require network configuration.

00:59:21.650 --> 00:59:21.970
<v Speaker 3>So

00:59:22.575 --> 00:59:25.295
<v Speaker 3>it only requires that the DHCP server

00:59:25.295 --> 00:59:27.695
<v Speaker 3>support the DHCP proxy requests.

00:59:27.855 --> 00:59:29.535
<v Speaker 3>So if that's true, then you don't need

00:59:29.535 --> 00:59:31.775
<v Speaker 3>even to set up any TFTP server.

00:59:33.375 --> 00:59:34.175
<v Speaker 1>Nice.

00:59:35.375 --> 00:59:36.734
<v Speaker 1>Alright. Michael is

00:59:37.190 --> 00:59:39.670
<v Speaker 1>double high fiving, so that looks like he's

00:59:39.670 --> 00:59:41.510
<v Speaker 1>happy with that answer. So

00:59:43.030 --> 00:59:45.030
<v Speaker 1>have you seen my error before?

00:59:45.750 --> 00:59:47.190
<v Speaker 2>I'm not sure.

00:59:49.430 --> 00:59:51.510
<v Speaker 2>Happy to build it here if you want

00:59:51.510 --> 00:59:52.550
<v Speaker 2>on my side.

00:59:53.244 --> 00:59:56.765
<v Speaker 3>What they see, it's like having permission to

00:59:57.244 --> 00:59:58.285
<v Speaker 3>yeah. Elchon.

00:59:58.285 --> 00:59:59.485
<v Speaker 3>So it looks like

00:59:59.885 --> 01:00:01.245
<v Speaker 3>you cannot do

01:00:02.365 --> 01:00:03.165
<v Speaker 3>can

01:00:06.925 --> 01:00:07.244
<v Speaker 3>you do?

01:00:08.079 --> 01:00:10.960
<v Speaker 3>Maybe it's simply because ask. Can you do

01:00:10.960 --> 01:00:13.119
<v Speaker 3>sudo docker run? I'm trying to run this

01:00:13.119 --> 01:00:13.760
<v Speaker 3>as

01:00:14.079 --> 01:00:15.839
<v Speaker 3>sudo just to be sure because maybe the

01:00:15.839 --> 01:00:18.640
<v Speaker 3>operation doing on build folder does require a

01:00:18.640 --> 01:00:19.760
<v Speaker 3>little bit more permission.

01:00:21.675 --> 01:00:24.075
<v Speaker 1>Alright. But it's it's something weird or or

01:00:24.075 --> 01:00:26.315
<v Speaker 3>you'd have to run privilege it otherwise.

01:00:26.475 --> 01:00:28.155
<v Speaker 3>Yeah. Because it's

01:00:31.035 --> 01:00:32.395
<v Speaker 1>Yeah. I wonder if it would work with

01:00:32.395 --> 01:00:32.955
<v Speaker 1>pod man.

01:00:35.800 --> 01:00:39.080
<v Speaker 2>This looks better. Right? Stayed a bit longer

01:00:39.080 --> 01:00:39.960
<v Speaker 2>already.

01:00:45.000 --> 01:00:45.880
<v Speaker 2>Oh, no.

01:00:47.480 --> 01:00:48.440
<v Speaker 3>It's weird.

01:00:51.445 --> 01:00:53.365
<v Speaker 1>Alright. I'm gonna try it with Podman just

01:00:53.365 --> 01:00:54.725
<v Speaker 1>because I'm curious now.

01:00:54.965 --> 01:00:57.845
<v Speaker 1>I always use Podman, but I installed Docker

01:00:57.845 --> 01:01:00.725
<v Speaker 1>for this just because the documentation normally mentioned

01:01:00.725 --> 01:01:02.485
<v Speaker 1>it. I'm

01:01:02.565 --> 01:01:02.885
<v Speaker 1>curious.

01:01:10.970 --> 01:01:13.050
<v Speaker 1>I feel like I should tidy up that

01:01:14.410 --> 01:01:15.610
<v Speaker 1>builder entry.

01:01:18.730 --> 01:01:19.930
<v Speaker 1>And if it

01:01:20.295 --> 01:01:21.255
<v Speaker 1>it can't type.

01:01:21.734 --> 01:01:23.335
<v Speaker 1>If it doesn't work, it's fine. We can

01:01:23.335 --> 01:01:25.415
<v Speaker 1>always pop over to your machine and take

01:01:25.415 --> 01:01:26.695
<v Speaker 1>a look at that. But

01:01:26.935 --> 01:01:29.095
<v Speaker 1>I am definitely curious now.

01:01:29.255 --> 01:01:31.335
<v Speaker 1>But we grabbed that code in it.

01:01:31.974 --> 01:01:33.494
<v Speaker 1>We were on the building page.

01:01:35.890 --> 01:01:36.690
<v Speaker 1>So

01:01:36.850 --> 01:01:38.770
<v Speaker 1>where

01:01:42.050 --> 01:01:44.930
<v Speaker 1>is that Aurora bit stuff? Oh, yeah. No.

01:01:44.930 --> 01:01:47.010
<v Speaker 2>That we found in the Aurora bit.

01:01:47.410 --> 01:01:49.170
<v Speaker 0>Oh, yeah. No. Where where was it?

01:01:49.775 --> 01:01:50.575
<v Speaker 2>You

01:01:50.895 --> 01:01:53.775
<v Speaker 2>took one from a different place, I think.

01:01:53.775 --> 01:01:55.935
<v Speaker 2>I don't remember. I did. You're right. I

01:01:55.935 --> 01:01:56.495
<v Speaker 1>did.

01:01:56.975 --> 01:01:59.375
<v Speaker 1>Building custom cloud images. Okay. So Oh, yeah.

01:02:02.380 --> 01:02:03.820
<v Speaker 1>Oh, so you can even build the base

01:02:03.820 --> 01:02:06.220
<v Speaker 1>image by starting with a vanilla distro. Alright.

01:02:06.220 --> 01:02:08.460
<v Speaker 1>That's nice. Yeah. Yeah. But I'm definitely gonna

01:02:08.460 --> 01:02:10.780
<v Speaker 1>be hacking together some sort of Kairos arch

01:02:10.780 --> 01:02:11.900
<v Speaker 1>hybrid now.

01:02:12.140 --> 01:02:14.700
<v Speaker 2>Yeah. I think once you're really into the

01:02:14.700 --> 01:02:17.145
<v Speaker 2>hang of Keras, this is probably the way

01:02:17.145 --> 01:02:18.905
<v Speaker 2>you're going to be building most of your

01:02:18.905 --> 01:02:19.625
<v Speaker 2>images. Yeah.

01:02:22.505 --> 01:02:24.505
<v Speaker 1>Okay. So we're actually got some information here

01:02:24.505 --> 01:02:26.985
<v Speaker 1>on state sizing. This feels relevant to the

01:02:26.985 --> 01:02:29.550
<v Speaker 1>error message we're getting, potentially.

01:02:30.110 --> 01:02:32.110
<v Speaker 2>Did we put actually the

01:02:32.510 --> 01:02:34.830
<v Speaker 2>state We we didn't include no. We didn't

01:02:34.830 --> 01:02:36.430
<v Speaker 1>include that state size.

01:02:36.990 --> 01:02:39.790
<v Speaker 2>Because normally we we don't, I think.

01:02:40.685 --> 01:02:41.965
<v Speaker 1>Oh, and there was a cloud on it

01:02:41.965 --> 01:02:43.005
<v Speaker 1>right here too. So

01:02:43.805 --> 01:02:44.605
<v Speaker 2>Oh, yeah.

01:02:47.725 --> 01:02:49.325
<v Speaker 1>I got the same with pod man. Do

01:02:49.325 --> 01:02:50.925
<v Speaker 1>you wanna will I pop your screen up

01:02:50.925 --> 01:02:52.125
<v Speaker 1>and we'll take a look at a working

01:02:52.125 --> 01:02:53.005
<v Speaker 1>one? Sure.

01:02:53.580 --> 01:02:54.380
<v Speaker 1>Alright.

01:02:56.300 --> 01:02:58.460
<v Speaker 2>But I had prepared

01:02:58.460 --> 01:03:00.620
<v Speaker 2>is actually the other

01:03:03.340 --> 01:03:04.300
<v Speaker 2>type of

01:03:07.815 --> 01:03:08.935
<v Speaker 2>SSH

01:03:08.935 --> 01:03:10.855
<v Speaker 2>model. So you're gonna show us an upgrade

01:03:10.855 --> 01:03:13.495
<v Speaker 1>to the existing one? Yeah. So

01:03:15.335 --> 01:03:16.855
<v Speaker 2>if I go here,

01:03:19.974 --> 01:03:22.615
<v Speaker 2>I have an image here

01:03:23.430 --> 01:03:26.310
<v Speaker 2>based on one of the Keras existing images.

01:03:26.630 --> 01:03:28.150
<v Speaker 2>And then I'm going to install, in this

01:03:28.150 --> 01:03:29.110
<v Speaker 2>case, Ruby.

01:03:29.270 --> 01:03:31.750
<v Speaker 2>And then I can say docker build

01:03:32.790 --> 01:03:33.590
<v Speaker 2>tag.

01:03:33.990 --> 01:03:35.990
<v Speaker 2>And we can call this d t l

01:03:35.990 --> 01:03:37.110
<v Speaker 2>dot s h

01:03:37.510 --> 01:03:39.165
<v Speaker 2>row code.

01:03:40.285 --> 01:03:43.485
<v Speaker 2>And then we put 24

01:03:43.485 --> 01:03:44.925
<v Speaker 2>on it and

01:03:46.205 --> 01:03:46.845
<v Speaker 2>dot.

01:03:47.885 --> 01:03:49.565
<v Speaker 2>Now we push it.

01:03:50.525 --> 01:03:52.685
<v Speaker 2>Oh, I don't know how long this will

01:03:52.685 --> 01:03:53.005
<v Speaker 2>take.

01:03:55.940 --> 01:03:58.180
<v Speaker 2>Didn't think of that, but hopefully not so

01:03:58.180 --> 01:03:59.940
<v Speaker 2>much because I was playing with it.

01:04:00.260 --> 01:04:01.619
<v Speaker 2>Oh, yeah. You can see that I was

01:04:01.619 --> 01:04:04.180
<v Speaker 2>playing with it. So a lot of the

01:04:05.300 --> 01:04:08.425
<v Speaker 2>layers were already there. TTL.sh

01:04:08.425 --> 01:04:10.185
<v Speaker 1>is such a great service. Yeah. I don't

01:04:10.185 --> 01:04:11.944
<v Speaker 1>even know who's responsible for it, but I

01:04:11.944 --> 01:04:14.265
<v Speaker 1>use that, like, every workshop or conference I

01:04:14.265 --> 01:04:16.105
<v Speaker 1>go to. It's just so handy.

01:04:16.425 --> 01:04:18.585
<v Speaker 2>Yeah. It's so good. I I don't know

01:04:18.585 --> 01:04:20.585
<v Speaker 2>how they offer it, but I'm happy that

01:04:20.585 --> 01:04:20.984
<v Speaker 2>they do.

01:04:21.579 --> 01:04:24.859
<v Speaker 2>Okay. So now we have this image here.

01:04:24.859 --> 01:04:28.540
<v Speaker 2>Right? And I can just jump into

01:04:29.260 --> 01:04:31.820
<v Speaker 2>our machine that we already had

01:04:32.059 --> 01:04:34.700
<v Speaker 2>here. If you remember, it was running

01:04:37.085 --> 01:04:38.765
<v Speaker 2>this Kubernetes

01:04:38.765 --> 01:04:39.725
<v Speaker 2>instance.

01:04:40.285 --> 01:04:43.325
<v Speaker 2>And here, we have the Keras agent,

01:04:43.645 --> 01:04:45.885
<v Speaker 2>and you can say upgrade

01:04:49.060 --> 01:04:50.740
<v Speaker 2>source OCI

01:04:51.060 --> 01:04:52.900
<v Speaker 2>and then paste

01:04:53.300 --> 01:04:55.700
<v Speaker 2>the image that you want to

01:04:56.099 --> 01:04:57.060
<v Speaker 2>upgrade to.

01:04:58.500 --> 01:05:00.580
<v Speaker 1>Well, that's running. I'm I'm curious about the

01:05:00.580 --> 01:05:03.995
<v Speaker 1>immutability aspect there. So how how

01:05:04.315 --> 01:05:06.155
<v Speaker 1>does this work? Is it just a immutable

01:05:06.155 --> 01:05:08.395
<v Speaker 1>file system? Have you just toggle it? Is

01:05:08.395 --> 01:05:09.995
<v Speaker 1>it don't accept right? It's like

01:05:10.395 --> 01:05:12.555
<v Speaker 1>is there what's going on here?

01:05:13.835 --> 01:05:14.715
<v Speaker 2>Basically,

01:05:14.715 --> 01:05:15.275
<v Speaker 2>have this

01:05:16.155 --> 01:05:18.075
<v Speaker 2>I think the best place to go would

01:05:18.075 --> 01:05:20.450
<v Speaker 2>be I think in the computation, we have

01:05:20.450 --> 01:05:22.530
<v Speaker 2>some some image about

01:05:22.770 --> 01:05:23.570
<v Speaker 2>how

01:05:23.650 --> 01:05:25.410
<v Speaker 2>this process goes.

01:05:25.650 --> 01:05:26.690
<v Speaker 2>A B,

01:05:26.849 --> 01:05:28.210
<v Speaker 2>what is it upgrade?

01:05:29.730 --> 01:05:31.569
<v Speaker 2>But maybe you can explain in the meantime,

01:05:31.569 --> 01:05:33.915
<v Speaker 2>it's alright that way. Yeah.

01:05:33.915 --> 01:05:34.955
<v Speaker 3>Basically,

01:05:36.075 --> 01:05:37.035
<v Speaker 3>there are

01:05:37.755 --> 01:05:40.235
<v Speaker 3>so it works differently based on the

01:05:41.435 --> 01:05:44.955
<v Speaker 3>if the system is using configured for trusted

01:05:44.955 --> 01:05:46.475
<v Speaker 3>boot or not. So

01:05:46.869 --> 01:05:48.470
<v Speaker 3>on trusted boot,

01:05:49.030 --> 01:05:49.830
<v Speaker 3>you have

01:05:50.470 --> 01:05:53.350
<v Speaker 3>the whole system as FEI files,

01:05:53.990 --> 01:05:56.230
<v Speaker 3>and that means you're going to have

01:05:56.869 --> 01:05:59.430
<v Speaker 3>an active and passive and the recovery

01:05:59.765 --> 01:06:02.245
<v Speaker 3>FEI file in the system, those are actually

01:06:02.245 --> 01:06:04.725
<v Speaker 3>handled in this moment. If you are not

01:06:04.725 --> 01:06:06.565
<v Speaker 3>using TrustedBoot instead,

01:06:07.205 --> 01:06:09.765
<v Speaker 3>those will be images that are mounted

01:06:10.565 --> 01:06:12.245
<v Speaker 3>read only in the system.

01:06:12.805 --> 01:06:13.845
<v Speaker 3>And they are

01:06:14.260 --> 01:06:15.780
<v Speaker 3>images that are created

01:06:16.980 --> 01:06:17.940
<v Speaker 3>the fly,

01:06:18.500 --> 01:06:20.660
<v Speaker 3>so the container image is pulled and

01:06:20.980 --> 01:06:22.740
<v Speaker 3>the image file is being created from the

01:06:22.740 --> 01:06:25.220
<v Speaker 3>container image in the system. And then

01:06:26.260 --> 01:06:28.660
<v Speaker 3>there is an internal component that we call

01:06:28.660 --> 01:06:29.940
<v Speaker 3>IMUCORE

01:06:29.755 --> 01:06:30.875
<v Speaker 3>in Kairos,

01:06:31.115 --> 01:06:34.635
<v Speaker 3>which does the mounting during the boot sequence.

01:06:34.635 --> 01:06:37.035
<v Speaker 3>And for instance, when it's running in Trusted

01:06:37.035 --> 01:06:39.595
<v Speaker 3>Boot, actually ImmuCore runs as a unit system

01:06:40.075 --> 01:06:42.555
<v Speaker 3>from the early stages and then hands over

01:06:42.555 --> 01:06:46.170
<v Speaker 3>to System B when hands into user mode.

01:06:46.730 --> 01:06:48.730
<v Speaker 3>And yeah, this is basically in a nutshell

01:06:48.730 --> 01:06:49.850
<v Speaker 3>what Maury is

01:06:50.330 --> 01:06:53.050
<v Speaker 3>showing you what's going to happen. Yeah, here

01:06:53.050 --> 01:06:56.170
<v Speaker 2>you have the active, passive and transition image.

01:06:56.170 --> 01:06:57.770
<v Speaker 2>Basically, we're putting everything,

01:06:58.775 --> 01:07:01.575
<v Speaker 2>like like moving things around. Right? Your active

01:07:01.655 --> 01:07:04.615
<v Speaker 2>becomes the passive. Then what we're building is

01:07:04.615 --> 01:07:07.895
<v Speaker 2>the transition image. And then once this finishes,

01:07:08.055 --> 01:07:10.055
<v Speaker 2>it goes into active. That means that if

01:07:10.055 --> 01:07:11.095
<v Speaker 2>for some reason

01:07:11.495 --> 01:07:12.855
<v Speaker 2>this process failed,

01:07:13.370 --> 01:07:15.610
<v Speaker 2>you can always go back to the previous

01:07:15.610 --> 01:07:17.050
<v Speaker 2>one that was working.

01:07:19.610 --> 01:07:21.690
<v Speaker 2>And then we can reboot again.

01:07:23.450 --> 01:07:25.530
<v Speaker 3>On top of that, there are also boot

01:07:25.530 --> 01:07:26.890
<v Speaker 3>assessment strategies,

01:07:28.635 --> 01:07:29.275
<v Speaker 3>which

01:07:29.515 --> 01:07:32.315
<v Speaker 3>basically detects if the active system is not

01:07:32.315 --> 01:07:34.955
<v Speaker 3>working properly and it will select the password.

01:07:34.955 --> 01:07:36.715
<v Speaker 3>So if the upgrade here

01:07:36.875 --> 01:07:37.755
<v Speaker 3>would have

01:07:37.995 --> 01:07:40.720
<v Speaker 3>succeeded but the image is bad, so it

01:07:40.720 --> 01:07:42.320
<v Speaker 3>doesn't boot correctly,

01:07:43.040 --> 01:07:45.520
<v Speaker 3>the system would basically detect that.

01:07:48.400 --> 01:07:49.040
<v Speaker 3>Nice.

01:07:50.880 --> 01:07:52.400
<v Speaker 1>So what we should see here when you

01:07:52.400 --> 01:07:54.240
<v Speaker 1>log in is that you have the Ruby

01:07:54.240 --> 01:07:55.600
<v Speaker 1>tool. Correct. Yep.

01:07:56.285 --> 01:07:58.525
<v Speaker 2>And then, like I was saying, once once

01:07:58.525 --> 01:07:59.885
<v Speaker 2>you get more

01:08:00.445 --> 01:08:01.325
<v Speaker 2>into

01:08:02.925 --> 01:08:03.965
<v Speaker 2>you probably

01:08:05.245 --> 01:08:08.045
<v Speaker 2>sorry. Ruby dash v, I think it is.

01:08:08.045 --> 01:08:09.869
<v Speaker 2>Yeah. We can see that we have Ruby

01:08:09.869 --> 01:08:12.670
<v Speaker 2>installed. Well, once you get more into Kairos,

01:08:12.670 --> 01:08:14.430
<v Speaker 2>this might be a bit not

01:08:14.430 --> 01:08:16.350
<v Speaker 2>the way you want to handle your images

01:08:16.350 --> 01:08:17.069
<v Speaker 2>because

01:08:17.389 --> 01:08:19.789
<v Speaker 2>we have a way to keeping track

01:08:20.029 --> 01:08:20.989
<v Speaker 2>of the OS.

01:08:26.675 --> 01:08:27.314
<v Speaker 2>Cairo

01:08:28.835 --> 01:08:29.715
<v Speaker 2>wait.

01:08:31.715 --> 01:08:33.314
<v Speaker 2>So we we have a way of keeping

01:08:33.314 --> 01:08:35.795
<v Speaker 2>track of the image that you

01:08:35.955 --> 01:08:37.235
<v Speaker 2>are spinning into.

01:08:37.729 --> 01:08:39.890
<v Speaker 2>And you might want to have your own

01:08:39.890 --> 01:08:42.529
<v Speaker 2>versioning here. Right? Your own cadence.

01:08:42.530 --> 01:08:44.689
<v Speaker 2>Like, we we release our images

01:08:44.930 --> 01:08:46.770
<v Speaker 2>when we have, I don't know, new features

01:08:46.770 --> 01:08:49.090
<v Speaker 2>of our patches. But maybe you have a

01:08:49.090 --> 01:08:50.609
<v Speaker 2>higher security

01:08:50.930 --> 01:08:53.765
<v Speaker 2>level. Right? Like, maybe you're patching things much

01:08:53.765 --> 01:08:56.965
<v Speaker 2>faster than someone else or than us in

01:08:56.965 --> 01:08:58.245
<v Speaker 2>this case. So

01:08:59.045 --> 01:09:01.765
<v Speaker 2>you you also can go into the

01:09:04.645 --> 01:09:06.484
<v Speaker 2>we saw this with the

01:09:07.330 --> 01:09:08.289
<v Speaker 2>building

01:09:08.449 --> 01:09:10.050
<v Speaker 2>from scratch guide

01:09:10.370 --> 01:09:12.289
<v Speaker 2>where you're going to be passing

01:09:13.330 --> 01:09:14.289
<v Speaker 2>the version

01:09:15.569 --> 01:09:17.729
<v Speaker 2>oh, yay. Where where did I go?

01:09:19.755 --> 01:09:21.435
<v Speaker 2>I get lost a bit.

01:09:24.314 --> 01:09:26.635
<v Speaker 2>Yeah. When you pass the version, this will

01:09:26.635 --> 01:09:28.555
<v Speaker 2>be the version of your system that you

01:09:28.555 --> 01:09:30.635
<v Speaker 2>will see here. So then you can keep

01:09:30.635 --> 01:09:32.155
<v Speaker 2>your own cadence of images.

01:09:35.340 --> 01:09:38.300
<v Speaker 3>Yeah. And that's what it takes, basically. What

01:09:38.300 --> 01:09:39.899
<v Speaker 3>you're seeing now,

01:09:40.779 --> 01:09:43.659
<v Speaker 3>Marius yeah. Marius showing you is that

01:09:44.219 --> 01:09:46.219
<v Speaker 3>in in just those few lines, you pull

01:09:46.219 --> 01:09:47.899
<v Speaker 3>the Ubuntu image as a base,

01:09:48.585 --> 01:09:51.064
<v Speaker 3>and you use the Keras init tool, which

01:09:51.064 --> 01:09:54.344
<v Speaker 3>converts that image into a Keras based image,

01:09:54.985 --> 01:09:56.184
<v Speaker 3>which what

01:09:56.985 --> 01:09:59.465
<v Speaker 3>I was previously mentioning, it means it's going

01:09:59.465 --> 01:10:01.945
<v Speaker 3>to start some base packages that are needed.

01:10:01.945 --> 01:10:03.625
<v Speaker 3>For instance, if it was Alpine, it would

01:10:03.625 --> 01:10:04.185
<v Speaker 3>start

01:10:04.720 --> 01:10:07.360
<v Speaker 3>things that are necessary for booting properly.

01:10:08.160 --> 01:10:10.560
<v Speaker 3>For instance, if it's trusted boot, it would

01:10:10.560 --> 01:10:11.280
<v Speaker 3>need

01:10:11.440 --> 01:10:14.640
<v Speaker 3>systemd component. If it's not trusted boot, it

01:10:14.640 --> 01:10:16.960
<v Speaker 3>will need grab. So it would Yeah. Pull

01:10:16.960 --> 01:10:18.480
<v Speaker 3>grab in, these kind of things.

01:10:20.425 --> 01:10:21.224
<v Speaker 1>Cool.

01:10:22.505 --> 01:10:23.545
<v Speaker 1>Very interesting.

01:10:25.145 --> 01:10:28.025
<v Speaker 2>That was this one here. So basically, here

01:10:28.025 --> 01:10:30.264
<v Speaker 2>we went through the whole process of

01:10:30.665 --> 01:10:32.185
<v Speaker 2>maintaining the images. But, yeah,

01:10:32.840 --> 01:10:35.239
<v Speaker 2>at some point, you obviously want to have

01:10:37.239 --> 01:10:39.559
<v Speaker 2>a better way to keep in track because

01:10:39.559 --> 01:10:41.800
<v Speaker 2>you probably want to put this on your

01:10:41.800 --> 01:10:43.880
<v Speaker 2>pipeline. Right? You don't wanna be doing those

01:10:43.880 --> 01:10:44.360
<v Speaker 2>manually,

01:10:44.685 --> 01:10:47.405
<v Speaker 2>which is exactly what what we're

01:10:47.405 --> 01:10:49.085
<v Speaker 2>doing, putting it on the on the pipeline.

01:10:49.085 --> 01:10:51.565
<v Speaker 2>And for that, we have the if you

01:10:51.565 --> 01:10:53.005
<v Speaker 2>see the repository,

01:10:54.045 --> 01:10:56.045
<v Speaker 2>our image is as simple.

01:10:56.890 --> 01:10:59.530
<v Speaker 2>Our Dockerfile is this, and that's it.

01:11:00.010 --> 01:11:02.090
<v Speaker 2>This produces all the different

01:11:02.890 --> 01:11:04.410
<v Speaker 2>Ubuntu OpenSUSE

01:11:04.410 --> 01:11:07.210
<v Speaker 2>with or without k three s or k

01:11:07.210 --> 01:11:08.090
<v Speaker 2>zero s.

01:11:08.410 --> 01:11:11.130
<v Speaker 2>All the different versions are done just with

01:11:11.130 --> 01:11:12.355
<v Speaker 2>this simple

01:11:12.835 --> 01:11:13.795
<v Speaker 2>structure

01:11:13.875 --> 01:11:15.875
<v Speaker 2>because at the end of the day,

01:11:17.875 --> 01:11:20.114
<v Speaker 2>you can base from anything

01:11:20.275 --> 01:11:22.435
<v Speaker 2>you tell it to start. Right?

01:11:24.435 --> 01:11:25.155
<v Speaker 1>Cool. Yeah.

01:11:27.090 --> 01:11:28.690
<v Speaker 1>Alright. Let's talk about

01:11:29.890 --> 01:11:32.690
<v Speaker 1>the the project itself then. Right? I will

01:11:32.690 --> 01:11:34.130
<v Speaker 1>pop us back over here.

01:11:35.489 --> 01:11:37.249
<v Speaker 4>I think what we've shown people

01:11:37.489 --> 01:11:39.090
<v Speaker 4>is that building

01:11:39.675 --> 01:11:41.595
<v Speaker 4>your own Linux distribution

01:11:41.595 --> 01:11:45.515
<v Speaker 4>for loading and Kubernetes isn't that hard. We've

01:11:45.515 --> 01:11:47.195
<v Speaker 4>never had a chance. The fact that this

01:11:47.195 --> 01:11:48.554
<v Speaker 4>is all based on the

01:11:49.115 --> 01:11:51.755
<v Speaker 4>OCI artifact and container fail.

01:11:52.250 --> 01:11:54.010
<v Speaker 4>It's easy for anyone to come along and

01:11:54.010 --> 01:11:56.330
<v Speaker 4>start customizing that, which has been hard for

01:11:56.330 --> 01:11:59.530
<v Speaker 4>many years. Right? Nobody ever really enjoyed building

01:11:59.530 --> 01:12:00.970
<v Speaker 4>virtual machine MQ. I

01:12:05.645 --> 01:12:07.085
<v Speaker 1>had a quick look on GAP. I see

01:12:07.085 --> 01:12:09.085
<v Speaker 1>this is a a gold project open source.

01:12:09.085 --> 01:12:10.525
<v Speaker 4>It's a CNCF sandbox.

01:12:11.085 --> 01:12:13.885
<v Speaker 1>You know People wanted to contribute and start

01:12:13.885 --> 01:12:16.045
<v Speaker 1>having some fun with Kairos. What is the

01:12:16.045 --> 01:12:18.765
<v Speaker 1>best way for them to get involved and

01:12:18.765 --> 01:12:20.525
<v Speaker 1>help shape the future of the project?

01:12:23.410 --> 01:12:25.810
<v Speaker 2>Yeah. I think there are many areas in

01:12:25.970 --> 01:12:27.010
<v Speaker 2>where Kairos

01:12:28.690 --> 01:12:29.490
<v Speaker 2>opportunities

01:12:29.490 --> 01:12:31.570
<v Speaker 2>where you can get involved in the project.

01:12:34.435 --> 01:12:36.675
<v Speaker 2>There is for for example, if there's a

01:12:36.675 --> 01:12:38.755
<v Speaker 2>distro that we're not tackling,

01:12:38.755 --> 01:12:40.275
<v Speaker 2>you could bring that in

01:12:41.155 --> 01:12:42.114
<v Speaker 2>documentation,

01:12:42.115 --> 01:12:42.915
<v Speaker 2>of course.

01:12:44.435 --> 01:12:45.555
<v Speaker 2>I I think

01:12:46.115 --> 01:12:46.915
<v Speaker 2>the

01:12:47.710 --> 01:12:49.710
<v Speaker 2>interesting part that we didn't get to talk

01:12:49.710 --> 01:12:52.750
<v Speaker 2>about is that one way of installing things

01:12:52.750 --> 01:12:55.149
<v Speaker 2>in Keras is bringing in bundles.

01:12:55.230 --> 01:12:57.710
<v Speaker 2>So let's say you wanna have Calico already

01:12:57.710 --> 01:12:58.909
<v Speaker 2>pre installed

01:12:58.989 --> 01:13:00.750
<v Speaker 2>in your Kubernetes

01:13:00.750 --> 01:13:03.065
<v Speaker 2>stack. You can just say

01:13:03.465 --> 01:13:06.025
<v Speaker 2>bundle and put Calico.

01:13:06.665 --> 01:13:08.825
<v Speaker 2>All of that right now we have it

01:13:08.985 --> 01:13:10.345
<v Speaker 2>as a community

01:13:11.145 --> 01:13:11.705
<v Speaker 2>support.

01:13:12.025 --> 01:13:14.025
<v Speaker 2>And so it really depends on

01:13:14.585 --> 01:13:17.145
<v Speaker 2>the community to come and suggest

01:13:17.280 --> 01:13:18.719
<v Speaker 2>and and ideally

01:13:18.719 --> 01:13:21.039
<v Speaker 2>open up PR with the project that they

01:13:21.039 --> 01:13:22.479
<v Speaker 2>want to see there.

01:13:22.800 --> 01:13:25.520
<v Speaker 2>And and and that way, we can grow

01:13:25.520 --> 01:13:28.559
<v Speaker 2>the different options that people can get almost

01:13:29.360 --> 01:13:31.359
<v Speaker 2>from the ground when when they

01:13:31.840 --> 01:13:32.800
<v Speaker 2>spin up a new

01:13:33.395 --> 01:13:34.514
<v Speaker 2>Kairos machine.

01:13:34.915 --> 01:13:37.955
<v Speaker 2>So, yeah, there are many different areas. We

01:13:37.955 --> 01:13:38.434
<v Speaker 2>we

01:13:40.035 --> 01:13:42.275
<v Speaker 2>we have, for example, office hours. You can

01:13:42.275 --> 01:13:44.995
<v Speaker 2>show up and just make questions or suggestions

01:13:44.995 --> 01:13:45.635
<v Speaker 2>or

01:13:46.835 --> 01:13:49.140
<v Speaker 2>yeah. Like, just like we're having right now

01:13:49.140 --> 01:13:50.340
<v Speaker 2>this conversation,

01:13:50.660 --> 01:13:52.820
<v Speaker 2>we're than happy to to have it with

01:13:52.820 --> 01:13:53.460
<v Speaker 2>you.

01:13:55.300 --> 01:13:55.780
<v Speaker 2>And

01:13:57.700 --> 01:13:59.620
<v Speaker 2>We're we're open source. You there are many

01:13:59.620 --> 01:14:01.220
<v Speaker 2>ways in in which you can

01:14:02.020 --> 01:14:02.900
<v Speaker 2>come and contribute.

01:14:03.675 --> 01:14:06.235
<v Speaker 1>Alright. The bundle concept is interesting.

01:14:06.474 --> 01:14:07.114
<v Speaker 1>So

01:14:08.395 --> 01:14:10.474
<v Speaker 1>assuming I want to build an image that

01:14:10.474 --> 01:14:11.034
<v Speaker 1>has,

01:14:11.675 --> 01:14:12.314
<v Speaker 1>you know,

01:14:13.114 --> 01:14:15.514
<v Speaker 1>journal d log forward and baked into it,

01:14:15.514 --> 01:14:17.594
<v Speaker 1>then I can configure an OCI layer that

01:14:17.594 --> 01:14:19.820
<v Speaker 1>just does that. If I want to install

01:14:19.820 --> 01:14:21.659
<v Speaker 1>Cilium, I'm assuming I can have something that

01:14:21.659 --> 01:14:24.139
<v Speaker 1>does that. If I want to make maybe

01:14:24.139 --> 01:14:25.260
<v Speaker 1>I want it to have

01:14:26.139 --> 01:14:27.420
<v Speaker 1>tail scale on it and I want it

01:14:27.420 --> 01:14:29.020
<v Speaker 1>to join my tail net, I'm assuming there

01:14:29.020 --> 01:14:29.820
<v Speaker 1>could be a layer for that.

01:14:30.525 --> 01:14:32.445
<v Speaker 1>How do the bundles work then? Do you

01:14:32.445 --> 01:14:34.285
<v Speaker 1>have to have guarantees that they all come

01:14:34.285 --> 01:14:36.045
<v Speaker 1>from the same base,

01:14:36.125 --> 01:14:38.045
<v Speaker 1>or does it not really matter? I I'm

01:14:38.045 --> 01:14:39.405
<v Speaker 1>curious about how that works.

01:14:43.005 --> 01:14:44.205
<v Speaker 3>Bundles are basically,

01:14:45.640 --> 01:14:48.280
<v Speaker 3>again, distributed also CI images.

01:14:50.200 --> 01:14:52.920
<v Speaker 3>Anybody can actually create bundles. So it doesn't

01:14:52.920 --> 01:14:53.639
<v Speaker 3>really

01:14:54.280 --> 01:14:56.680
<v Speaker 3>restrict in any way on how you can

01:14:56.680 --> 01:14:57.880
<v Speaker 3>also distribute bundles.

01:14:58.445 --> 01:14:59.405
<v Speaker 3>Right? So

01:14:59.725 --> 01:15:02.765
<v Speaker 3>the bundles are a mechanism in Keras to

01:15:02.765 --> 01:15:03.565
<v Speaker 3>have

01:15:03.565 --> 01:15:06.685
<v Speaker 3>additional way to supply configuration for the system

01:15:06.685 --> 01:15:07.565
<v Speaker 3>or

01:15:09.325 --> 01:15:10.925
<v Speaker 3>ways how the system should

01:15:12.620 --> 01:15:14.860
<v Speaker 3>change the way how it works because it

01:15:14.860 --> 01:15:17.340
<v Speaker 3>can also extend the cloud config mechanism. So

01:15:17.340 --> 01:15:19.820
<v Speaker 3>with a bundle, you can feed cloud config

01:15:19.820 --> 01:15:21.580
<v Speaker 3>during installation, for instance,

01:15:21.980 --> 01:15:25.180
<v Speaker 3>and doing other things. So bundles is the

01:15:25.180 --> 01:15:25.660
<v Speaker 3>way

01:15:26.825 --> 01:15:28.505
<v Speaker 3>to run configuration,

01:15:28.505 --> 01:15:31.145
<v Speaker 3>you can do that by distributing the bundle

01:15:31.145 --> 01:15:33.305
<v Speaker 3>as OCI image, but also just as a

01:15:33.305 --> 01:15:34.585
<v Speaker 3>simple tarballs

01:15:34.985 --> 01:15:36.665
<v Speaker 3>if you want to. So there is really

01:15:36.665 --> 01:15:37.705
<v Speaker 3>no restriction.

01:15:38.025 --> 01:15:40.825
<v Speaker 3>And we have a community bundles repository where

01:15:40.825 --> 01:15:42.025
<v Speaker 3>community

01:15:43.280 --> 01:15:45.440
<v Speaker 3>can contribute new bundles,

01:15:45.600 --> 01:15:47.600
<v Speaker 3>but also providers. So for instance, we have

01:15:47.600 --> 01:15:48.720
<v Speaker 1>the kubeadmin

01:15:49.120 --> 01:15:49.920
<v Speaker 3>provider,

01:15:50.080 --> 01:15:51.360
<v Speaker 3>which enables

01:15:55.775 --> 01:15:59.215
<v Speaker 3>Keras to to use QB admin or microcades,

01:15:59.375 --> 01:16:02.015
<v Speaker 3>for instance, well. So there are other Kubernetes

01:16:02.015 --> 01:16:03.695
<v Speaker 3>distribution. This this is all

01:16:04.975 --> 01:16:06.575
<v Speaker 3>all kind of

01:16:08.110 --> 01:16:11.150
<v Speaker 3>feature requests or even, you know, contribution that

01:16:11.150 --> 01:16:14.430
<v Speaker 3>we are welcome to to have. So even

01:16:14.590 --> 01:16:16.670
<v Speaker 3>get to know how where you would be

01:16:16.670 --> 01:16:20.030
<v Speaker 3>interested to see more support in terms of

01:16:20.030 --> 01:16:22.430
<v Speaker 3>also of Kubernetes support, but not only.

01:16:23.165 --> 01:16:25.405
<v Speaker 2>Yeah. Maybe one thing that

01:16:25.725 --> 01:16:28.205
<v Speaker 2>I guess is the first one I'm I'm

01:16:28.205 --> 01:16:30.525
<v Speaker 2>doing in an open source project is

01:16:31.165 --> 01:16:33.805
<v Speaker 2>because normally you invite end users. Right? Like,

01:16:33.805 --> 01:16:36.525
<v Speaker 2>come bring bring your suggestions or your or

01:16:36.525 --> 01:16:37.965
<v Speaker 2>or the features that you want to see

01:16:37.965 --> 01:16:40.580
<v Speaker 2>in the project. But in our case, being

01:16:40.580 --> 01:16:41.219
<v Speaker 2>a

01:16:41.940 --> 01:16:43.300
<v Speaker 2>CNCF project,

01:16:43.300 --> 01:16:46.340
<v Speaker 2>I would also invite other CNCF projects to

01:16:46.340 --> 01:16:47.460
<v Speaker 2>join us because

01:16:48.420 --> 01:16:52.020
<v Speaker 2>recently we had the experience that people

01:16:52.020 --> 01:16:53.620
<v Speaker 2>from K0S

01:16:53.325 --> 01:16:56.365
<v Speaker 2>said like, Hey, wait, why isn't K0s

01:16:57.165 --> 01:16:57.805
<v Speaker 2>having

01:16:58.045 --> 01:16:59.805
<v Speaker 2>the same level of

01:17:00.605 --> 01:17:03.645
<v Speaker 2>integration as K3s, for example? And they came

01:17:03.645 --> 01:17:05.005
<v Speaker 2>and started putting

01:17:05.405 --> 01:17:07.805
<v Speaker 2>PRs and we worked together, and now

01:17:08.340 --> 01:17:10.260
<v Speaker 2>the system improved

01:17:10.260 --> 01:17:12.580
<v Speaker 2>thanks to that. And I I think there

01:17:12.580 --> 01:17:15.060
<v Speaker 2>are so many projects out there if you

01:17:15.060 --> 01:17:17.300
<v Speaker 2>see the landscape, right, like the typical joke

01:17:17.300 --> 01:17:19.619
<v Speaker 2>in every presentation about the size of the

01:17:19.619 --> 01:17:20.340
<v Speaker 2>landscape.

01:17:20.580 --> 01:17:23.315
<v Speaker 2>But it's true. I mean, is there is

01:17:23.315 --> 01:17:26.275
<v Speaker 2>so much it is so hard to take

01:17:26.275 --> 01:17:28.355
<v Speaker 2>the time to understand them and integrate them

01:17:28.355 --> 01:17:29.635
<v Speaker 2>properly in a project.

01:17:29.955 --> 01:17:31.074
<v Speaker 2>So if

01:17:31.155 --> 01:17:33.875
<v Speaker 2>the people from those projects come and work

01:17:33.875 --> 01:17:36.640
<v Speaker 2>together with us in this case, then Kairos

01:17:36.640 --> 01:17:39.920
<v Speaker 2>can give the best experience for the Kairos

01:17:39.920 --> 01:17:40.639
<v Speaker 2>users

01:17:41.600 --> 01:17:42.560
<v Speaker 2>to to

01:17:42.960 --> 01:17:45.440
<v Speaker 2>get a glimpse on their projects as well.

01:17:47.760 --> 01:17:48.640
<v Speaker 1>Awesome. Thank you.

01:17:49.905 --> 01:17:50.864
<v Speaker 1>I was also

01:17:51.105 --> 01:17:53.025
<v Speaker 1>scanning your bundle docs there as well. And

01:17:53.025 --> 01:17:54.945
<v Speaker 1>that's a really cool approach to doing this.

01:17:54.945 --> 01:17:56.545
<v Speaker 1>It did raise one question, and I don't

01:17:56.545 --> 01:17:57.745
<v Speaker 1>want us to go on much longer, but

01:17:57.745 --> 01:17:59.265
<v Speaker 1>it'll also end up just sat here with

01:17:59.265 --> 01:18:00.865
<v Speaker 1>the last loads and loads and and loads

01:18:00.865 --> 01:18:01.505
<v Speaker 1>more questions.

01:18:02.850 --> 01:18:04.930
<v Speaker 1>Some of these bundle ideas and, again, I'm

01:18:04.930 --> 01:18:07.170
<v Speaker 1>looking at the community bundles repository as well.

01:18:07.170 --> 01:18:08.449
<v Speaker 1>Right? Some of these things

01:18:09.730 --> 01:18:12.370
<v Speaker 1>probably need configured or need access to some

01:18:12.370 --> 01:18:13.890
<v Speaker 1>sort of secret material.

01:18:14.210 --> 01:18:17.170
<v Speaker 1>Is there a best path forward for working

01:18:17.170 --> 01:18:19.785
<v Speaker 1>this? What is the you know, typically with,

01:18:19.785 --> 01:18:22.345
<v Speaker 1>like, deploying a virtual machine or a container,

01:18:22.345 --> 01:18:24.665
<v Speaker 1>some sort of handoff. Right? You see, now

01:18:24.665 --> 01:18:27.465
<v Speaker 1>you're a workload within this workload identity pool.

01:18:27.465 --> 01:18:28.825
<v Speaker 1>You could speak to a secret manager in

01:18:28.825 --> 01:18:30.585
<v Speaker 1>the cloud and and do stuff that way.

01:18:30.585 --> 01:18:32.300
<v Speaker 1>I'm assuming that would probably still work. But

01:18:32.300 --> 01:18:34.300
<v Speaker 1>what about the edge scenarios or the bare

01:18:34.300 --> 01:18:35.260
<v Speaker 1>metal scenarios?

01:18:35.500 --> 01:18:37.739
<v Speaker 1>How like, is this a path that's been

01:18:37.739 --> 01:18:39.820
<v Speaker 1>solved, a problem that's been solved yet or

01:18:39.820 --> 01:18:40.380
<v Speaker 1>not?

01:18:40.700 --> 01:18:42.060
<v Speaker 1>I know that's a big question, but I

01:18:42.060 --> 01:18:43.260
<v Speaker 1>hope I kinda got that across.

01:18:45.505 --> 01:18:47.105
<v Speaker 2>It makes a lot of sense.

01:18:47.985 --> 01:18:49.185
<v Speaker 2>I would say

01:18:51.665 --> 01:18:53.744
<v Speaker 2>you have a limit, right? Like if

01:18:54.865 --> 01:18:57.600
<v Speaker 2>you're talking about the edge, you could air

01:18:57.600 --> 01:18:58.719
<v Speaker 2>gap everything,

01:18:59.520 --> 01:19:00.480
<v Speaker 2>put it there,

01:19:01.280 --> 01:19:01.920
<v Speaker 2>and and

01:19:02.560 --> 01:19:04.480
<v Speaker 2>you would have, like, this small

01:19:04.880 --> 01:19:07.360
<v Speaker 2>network that the system would have access to.

01:19:07.360 --> 01:19:08.160
<v Speaker 2>Of course,

01:19:08.960 --> 01:19:11.360
<v Speaker 2>you would have limitations there on how

01:19:12.835 --> 01:19:15.795
<v Speaker 2>if there's a password there somehow ends up

01:19:15.795 --> 01:19:17.074
<v Speaker 2>in the hands of someone,

01:19:17.315 --> 01:19:19.795
<v Speaker 2>you can't you can't do much at that

01:19:19.795 --> 01:19:22.275
<v Speaker 2>point. What we're working on, and there is

01:19:22.275 --> 01:19:24.835
<v Speaker 2>some functionality already in Keras, is that you

01:19:24.835 --> 01:19:27.315
<v Speaker 2>can do remote attestation. So if there is

01:19:27.570 --> 01:19:30.130
<v Speaker 2>connection to server,

01:19:31.490 --> 01:19:32.770
<v Speaker 2>you could potentially

01:19:33.170 --> 01:19:36.210
<v Speaker 2>tell the system to not boot if you're

01:19:36.210 --> 01:19:38.210
<v Speaker 2>using the trusted boot mechanism.

01:19:38.450 --> 01:19:42.285
<v Speaker 2>But if if you're not at that high

01:19:42.285 --> 01:19:44.285
<v Speaker 2>degree of security,

01:19:44.285 --> 01:19:45.965
<v Speaker 2>I would say, it's very hard because at

01:19:45.965 --> 01:19:47.085
<v Speaker 2>the end of the day, it's a Linux

01:19:47.085 --> 01:19:48.525
<v Speaker 2>box. Right? Yeah.

01:19:49.885 --> 01:19:51.565
<v Speaker 1>So I'm assuming if I wanted to do

01:19:51.565 --> 01:19:52.605
<v Speaker 1>an Kubernetes

01:19:52.765 --> 01:19:55.645
<v Speaker 1>cluster with KTS running on Keras images, I'm

01:19:55.645 --> 01:19:57.500
<v Speaker 1>just stuffing that joint token into the cloud

01:19:57.500 --> 01:19:59.580
<v Speaker 1>config. Is that is that the answer?

01:19:59.980 --> 01:20:02.780
<v Speaker 2>Yep. Yeah. Got it. And there's nothing wrong

01:20:02.780 --> 01:20:04.540
<v Speaker 1>with that. Right? You just you've gotta understand

01:20:04.540 --> 01:20:06.940
<v Speaker 1>your security posture to make that safe to

01:20:06.940 --> 01:20:08.060
<v Speaker 1>do so. I mean, this is how the

01:20:08.060 --> 01:20:10.775
<v Speaker 1>cluster API project works as well. That's just

01:20:10.775 --> 01:20:13.335
<v Speaker 1>so yeah. And people won't be won't be

01:20:13.335 --> 01:20:15.975
<v Speaker 1>too disfamiliar with that. What what we've seen

01:20:15.975 --> 01:20:18.935
<v Speaker 2>for example in a project is people who

01:20:18.935 --> 01:20:19.574
<v Speaker 2>had

01:20:20.375 --> 01:20:23.175
<v Speaker 2>it was an edge project and they had

01:20:23.255 --> 01:20:23.975
<v Speaker 2>some sort of,

01:20:24.720 --> 01:20:25.520
<v Speaker 2>I don't know,

01:20:26.160 --> 01:20:29.040
<v Speaker 2>remote device, let's say, a phone that had

01:20:29.040 --> 01:20:30.559
<v Speaker 2>connection to the server.

01:20:31.200 --> 01:20:34.000
<v Speaker 2>And through that connection, they would allow,

01:20:35.200 --> 01:20:36.320
<v Speaker 2>to say, okay.

01:20:37.040 --> 01:20:39.280
<v Speaker 2>If you see the connection, then the system

01:20:39.280 --> 01:20:41.735
<v Speaker 2>can keep performing. If the connection is cut

01:20:41.735 --> 01:20:43.655
<v Speaker 2>or the you get connection to a different

01:20:43.655 --> 01:20:44.534
<v Speaker 2>service,

01:20:44.855 --> 01:20:48.215
<v Speaker 2>then, you you cannot continue performing. Something like

01:20:48.215 --> 01:20:50.375
<v Speaker 2>that. But you would have to come up

01:20:50.375 --> 01:20:53.415
<v Speaker 2>with, most of these solutions depending on on

01:20:53.415 --> 01:20:54.295
<v Speaker 2>the scenario.

01:20:55.015 --> 01:20:56.850
<v Speaker 2>I don't think we have something out of

01:20:56.850 --> 01:20:58.290
<v Speaker 2>the box

01:20:58.530 --> 01:21:00.290
<v Speaker 2>per se, right, Tottori?

01:21:04.210 --> 01:21:06.770
<v Speaker 3>So we don't have a mechanism to recognize

01:21:07.595 --> 01:21:09.995
<v Speaker 3>hosts that are down, but we have the

01:21:09.995 --> 01:21:12.955
<v Speaker 3>a k management service that allows you to

01:21:12.955 --> 01:21:13.915
<v Speaker 3>isolate

01:21:14.075 --> 01:21:16.475
<v Speaker 3>machines of a cluster from booting.

01:21:16.875 --> 01:21:19.195
<v Speaker 3>So you can basically build on top of

01:21:19.195 --> 01:21:21.595
<v Speaker 3>that because it's a controller.

01:21:21.595 --> 01:21:22.715
<v Speaker 3>So you can

01:21:22.980 --> 01:21:25.540
<v Speaker 3>still use that in Kubernetes and control which

01:21:25.540 --> 01:21:26.820
<v Speaker 3>machine basically

01:21:27.300 --> 01:21:30.500
<v Speaker 3>can boot or not boot in a cluster.

01:21:30.500 --> 01:21:33.380
<v Speaker 3>So you can do this kind of hardcore

01:21:33.380 --> 01:21:36.020
<v Speaker 3>configuration, I would say, if you are strict

01:21:36.020 --> 01:21:37.140
<v Speaker 3>in security terms.

01:21:38.735 --> 01:21:40.415
<v Speaker 3>And, yeah, I mean, this is this is

01:21:40.415 --> 01:21:42.255
<v Speaker 3>one of the most, I would say,

01:21:43.615 --> 01:21:45.615
<v Speaker 3>interesting area when you can when we are

01:21:45.615 --> 01:21:47.295
<v Speaker 3>looking for security features

01:21:47.935 --> 01:21:50.255
<v Speaker 3>among also with trusted boot support

01:21:50.415 --> 01:21:51.135
<v Speaker 3>that we have.

01:21:52.510 --> 01:21:54.670
<v Speaker 1>Alright. I'm gonna say I'm gonna keep saying

01:21:54.670 --> 01:21:56.590
<v Speaker 1>one last question, but, you know, I'm I'm

01:21:56.590 --> 01:21:58.989
<v Speaker 1>just I'm curious and I'm having fun. Cool.

01:21:58.989 --> 01:22:01.150
<v Speaker 3>Cool. Are you actually running

01:22:01.550 --> 01:22:03.310
<v Speaker 1>Cloud in it on a machine, or is

01:22:03.310 --> 01:22:05.709
<v Speaker 1>your KAIROS agent responsible

01:22:05.710 --> 01:22:06.750
<v Speaker 1>for handling that?

01:22:09.095 --> 01:22:11.095
<v Speaker 3>Running, sorry? Running cloud. Are

01:22:11.575 --> 01:22:13.655
<v Speaker 1>you actually running cloud in it or is

01:22:13.655 --> 01:22:16.455
<v Speaker 1>the Keras agent consuming the cloud config and

01:22:16.455 --> 01:22:19.415
<v Speaker 1>executing it? Oh, it's the Keras agent consuming

01:22:19.415 --> 01:22:21.950
<v Speaker 3>the cloud config. Yeah, it's not the real

01:22:21.950 --> 01:22:23.790
<v Speaker 3>cloud init. No, no, it's very

01:22:24.910 --> 01:22:26.270
<v Speaker 3>So we provide

01:22:26.590 --> 01:22:28.430
<v Speaker 3>Yeah, it's very good question. It's like we

01:22:28.430 --> 01:22:31.070
<v Speaker 3>provide a compatibility layer to cloud init

01:22:31.230 --> 01:22:31.950
<v Speaker 3>basically.

01:22:32.190 --> 01:22:34.295
<v Speaker 1>Yeah, that's amazing. Because that, you know, that

01:22:34.295 --> 01:22:36.935
<v Speaker 1>means that instead of stuffing secrets into my

01:22:36.935 --> 01:22:39.095
<v Speaker 1>cloud config, I mean, I could contribute something

01:22:39.095 --> 01:22:40.455
<v Speaker 1>to the Keras agent.

01:22:40.615 --> 01:22:42.935
<v Speaker 1>They could pull the cloud config remotely,

01:22:42.935 --> 01:22:44.855
<v Speaker 1>and then I can make assertions against MAC

01:22:44.855 --> 01:22:46.775
<v Speaker 1>addresses and say, okay. You are allowed to

01:22:46.935 --> 01:22:49.790
<v Speaker 1>obviously Yes. It's slightly better posture. It's not

01:22:49.790 --> 01:22:52.190
<v Speaker 1>great, but one step at a time. Right?

01:22:52.190 --> 01:22:53.230
<v Speaker 1>So I've got ideas. I

01:22:53.710 --> 01:22:56.350
<v Speaker 1>I've I've got ideas. Very good point. Yeah.

01:22:56.830 --> 01:22:57.869
<v Speaker 1>Alright.

01:22:58.030 --> 01:22:59.390
<v Speaker 1>I don't wanna take up any more of

01:22:59.390 --> 01:23:01.054
<v Speaker 1>your time. We've been at this now for

01:23:01.054 --> 01:23:02.255
<v Speaker 1>nearly an hour and a half. I would

01:23:02.255 --> 01:23:04.815
<v Speaker 1>just say, firstly, it's such a cool project.

01:23:05.295 --> 01:23:06.975
<v Speaker 1>The smile on my face throughout this has

01:23:06.975 --> 01:23:09.215
<v Speaker 1>been completely genuine. I can't wait to start

01:23:09.215 --> 01:23:11.054
<v Speaker 1>kicking the tires and having fun with this.

01:23:12.175 --> 01:23:14.574
<v Speaker 1>I would also say the documentation has been

01:23:14.574 --> 01:23:16.310
<v Speaker 1>fantastic. I don't think there's ever been a

01:23:16.310 --> 01:23:18.950
<v Speaker 1>time where I've asked a question that Mauro's

01:23:18.950 --> 01:23:20.070
<v Speaker 1>not been able to open the docs page

01:23:20.070 --> 01:23:21.989
<v Speaker 1>and say, here's the thing here. And that

01:23:21.989 --> 01:23:24.470
<v Speaker 1>is very rare for our project. So kudos

01:23:24.470 --> 01:23:27.350
<v Speaker 1>on that. Nice. And let's assume that people

01:23:27.350 --> 01:23:29.670
<v Speaker 1>watching this, they're smiling too. They wanna check

01:23:29.670 --> 01:23:30.150
<v Speaker 1>this out.

01:23:30.685 --> 01:23:33.005
<v Speaker 1>They know either CNCF sandbox project. Right? There's

01:23:33.005 --> 01:23:34.205
<v Speaker 1>a lot of them these days. They may

01:23:34.205 --> 01:23:36.365
<v Speaker 1>want some confidence that there's forward momentum with

01:23:36.365 --> 01:23:38.285
<v Speaker 1>the project. Maybe you can give us an

01:23:38.285 --> 01:23:40.205
<v Speaker 1>idea just in the last few minutes about

01:23:40.205 --> 01:23:41.325
<v Speaker 1>what is the

01:23:41.485 --> 01:23:43.565
<v Speaker 1>future and the road map for Kairos.

01:23:44.620 --> 01:23:47.100
<v Speaker 1>And yeah, anything else you can share would

01:23:47.100 --> 01:23:47.980
<v Speaker 1>be fantastic.

01:23:49.580 --> 01:23:50.460
<v Speaker 3>Yes.

01:23:50.460 --> 01:23:51.179
<v Speaker 3>Basically,

01:23:52.300 --> 01:23:55.500
<v Speaker 3>most of the focusing point would be on

01:23:55.980 --> 01:23:58.940
<v Speaker 3>streamlining the factory usage of Kairos. So what

01:23:58.940 --> 01:24:02.275
<v Speaker 3>you have just been going with the documentation,

01:24:02.995 --> 01:24:05.395
<v Speaker 3>like building images is going to be streamlined

01:24:05.395 --> 01:24:06.114
<v Speaker 3>a lot.

01:24:06.515 --> 01:24:09.155
<v Speaker 3>So, we didn't show it off today, but

01:24:09.155 --> 01:24:11.475
<v Speaker 3>we are working on a web UI that

01:24:11.475 --> 01:24:12.515
<v Speaker 3>lets you build

01:24:12.675 --> 01:24:14.195
<v Speaker 3>every combination

01:24:14.355 --> 01:24:14.675
<v Speaker 3>of

01:24:15.380 --> 01:24:16.420
<v Speaker 3>artifacts.

01:24:16.820 --> 01:24:19.300
<v Speaker 3>So, you start from a container image, you

01:24:19.300 --> 01:24:22.260
<v Speaker 3>go through this very high level

01:24:23.620 --> 01:24:26.340
<v Speaker 3>process where you get all the artifacts you

01:24:26.340 --> 01:24:26.580
<v Speaker 3>need,

01:24:28.195 --> 01:24:31.075
<v Speaker 3>including also things like, again, I keep repeating,

01:24:31.075 --> 01:24:34.115
<v Speaker 3>but trusted boot, but it's in that sense,

01:24:35.155 --> 01:24:37.075
<v Speaker 3>when we talk about trusted boot, things get

01:24:37.075 --> 01:24:39.235
<v Speaker 3>complex quickly when you have to deal with

01:24:39.235 --> 01:24:42.440
<v Speaker 3>building artifacts. So, it's something very much appreciated

01:24:42.440 --> 01:24:43.800
<v Speaker 3>when you look at that.

01:24:44.120 --> 01:24:47.000
<v Speaker 3>And with that, also, are planning to have

01:24:47.880 --> 01:24:51.400
<v Speaker 3>our own Keras operator, which provides the compatibility

01:24:51.400 --> 01:24:52.680
<v Speaker 3>layer with copy.

01:24:52.840 --> 01:24:53.960
<v Speaker 3>So currently,

01:24:55.364 --> 01:24:57.764
<v Speaker 3>we don't have our known operator in doing

01:24:57.764 --> 01:25:00.324
<v Speaker 3>that. We rely on system upgrade controller for

01:25:00.324 --> 01:25:02.244
<v Speaker 3>doing upgrades in Kubernetes.

01:25:03.925 --> 01:25:05.684
<v Speaker 3>But we are just using it as a

01:25:05.684 --> 01:25:06.804
<v Speaker 3>tool because of course

01:25:07.980 --> 01:25:10.219
<v Speaker 3>it's providing the features that we need for

01:25:10.219 --> 01:25:11.659
<v Speaker 3>doing the upgrades.

01:25:11.739 --> 01:25:13.019
<v Speaker 3>And yeah, we are

01:25:13.500 --> 01:25:15.579
<v Speaker 3>going to have our own solution on top

01:25:15.579 --> 01:25:18.539
<v Speaker 3>of that, that allows us to pilot that

01:25:18.539 --> 01:25:21.485
<v Speaker 3>also from a copy perspective

01:25:21.724 --> 01:25:23.564
<v Speaker 3>and integrate with

01:25:23.885 --> 01:25:27.565
<v Speaker 3>our factory lane. So that's very much important.

01:25:27.565 --> 01:25:30.925
<v Speaker 3>So you can start from defining your OS

01:25:31.005 --> 01:25:32.525
<v Speaker 3>to having bootstrapped

01:25:32.525 --> 01:25:34.284
<v Speaker 3>bare metal clusters

01:25:34.284 --> 01:25:34.925
<v Speaker 3>too,

01:25:35.485 --> 01:25:37.560
<v Speaker 3>with almost zero configuration.

01:25:37.560 --> 01:25:40.120
<v Speaker 3>So this is our vision going to the

01:25:40.120 --> 01:25:42.599
<v Speaker 3>process from build from scratch

01:25:42.679 --> 01:25:44.920
<v Speaker 3>the system you want, keep repeating that as

01:25:44.920 --> 01:25:47.960
<v Speaker 3>many time you want for doing automated upgrades

01:25:47.960 --> 01:25:49.320
<v Speaker 3>and consume that

01:25:49.880 --> 01:25:50.840
<v Speaker 3>from the cluster.

01:25:52.985 --> 01:25:53.704
<v Speaker 1>Nice.

01:25:55.065 --> 01:25:57.224
<v Speaker 1>Alright. Well, again, thank you so much for

01:25:57.224 --> 01:26:00.105
<v Speaker 1>your time, both of you. Any final parting

01:26:00.105 --> 01:26:00.585
<v Speaker 1>words?

01:26:04.340 --> 01:26:05.219
<v Speaker 2>Contribute. Actually,

01:26:05.940 --> 01:26:08.260
<v Speaker 2>thank you. Thank you for your time. It

01:26:08.260 --> 01:26:09.300
<v Speaker 3>was very nice.

01:26:09.699 --> 01:26:10.659
<v Speaker 2>That was a nice

01:26:11.619 --> 01:26:12.179
<v Speaker 3>Yeah.

01:26:12.579 --> 01:26:14.739
<v Speaker 3>And, I mean, I'm happy that documentation kind

01:26:14.739 --> 01:26:15.780
<v Speaker 3>of worked today.

01:26:17.460 --> 01:26:18.980
<v Speaker 3>No. I mean, jokes

01:26:18.980 --> 01:26:20.885
<v Speaker 3>aside, I mean, thank you. Thank you a

01:26:20.885 --> 01:26:23.045
<v Speaker 3>lot for your time. Yep. Much appreciated. It

01:26:23.045 --> 01:26:25.365
<v Speaker 2>was a good time. Have fun. And if

01:26:25.365 --> 01:26:27.445
<v Speaker 2>you need help with Kairos, just join our

01:26:27.445 --> 01:26:30.165
<v Speaker 2>channels. And, we're there in the CNCF,

01:26:30.325 --> 01:26:31.125
<v Speaker 2>Slack.

01:26:31.845 --> 01:26:32.565
<v Speaker 2>Just reach out.

01:26:33.720 --> 01:26:35.480
<v Speaker 1>All right. Well, thank you again for your

01:26:35.480 --> 01:26:37.400
<v Speaker 1>time. Thank you to everyone who watched. Also

01:26:37.400 --> 01:26:39.560
<v Speaker 1>the links to the channels, the GitHub, etcetera

01:26:39.560 --> 01:26:41.000
<v Speaker 1>will be in the description

01:26:41.160 --> 01:26:43.960
<v Speaker 1>very, very soon. Yeah, have a great day

01:26:43.960 --> 01:26:45.160
<v Speaker 1>and a great rest of your week and

01:26:45.160 --> 01:26:47.195
<v Speaker 1>we'll see you all next time. Thanks. You

01:26:47.195 --> 01:26:49.034
<v Speaker 3>too. Ciao. Thank you. Ciao.

01:27:58.920 --> 01:28:02.760
<v Speaker 0>The Q and A, we've learned so much

01:28:02.760 --> 01:28:04.599
<v Speaker 0>in every way.

01:28:06.199 --> 01:28:09.000
<v Speaker 0>Thanks for watching Rawkode

01:28:09.000 --> 01:28:09.880
<v Speaker 0>Academy

01:28:09.880 --> 01:28:11.080
<v Speaker 0>and Rawkode

01:28:11.080 --> 01:28:12.599
<v Speaker 0>Live today.

01:28:14.360 --> 01:28:15.239
<v Speaker 0>Kairos
