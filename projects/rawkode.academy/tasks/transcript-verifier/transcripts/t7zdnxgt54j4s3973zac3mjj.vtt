WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: be27658b-5490-4842-941b-d8edd2483395
Created: 2025-04-29T13:55:26.835Z
Duration: 1478.6184
Channels: 1

00:00:00.160 --> 00:00:01.359
<v Speaker 0>I have a problem.

00:00:02.399 --> 00:00:05.040
<v Speaker 0>I like to experiment and play with infrastructure

00:00:05.040 --> 00:00:06.400
<v Speaker 0>as code tools.

00:00:06.560 --> 00:00:08.160
<v Speaker 0>And in fact, I don't just use code

00:00:08.160 --> 00:00:10.799
<v Speaker 0>for infrastructure. I use code for everything.

00:00:11.040 --> 00:00:13.360
<v Speaker 0>Setting up my personal email addresses,

00:00:13.360 --> 00:00:16.904
<v Speaker 0>configure DNS records, deploying Kubernetes clusters,

00:00:16.985 --> 00:00:18.585
<v Speaker 0>you name it. As you may be aware,

00:00:18.585 --> 00:00:19.705
<v Speaker 0>I used to work for a company called

00:00:19.705 --> 00:00:21.625
<v Speaker 0>Pulumi. They're one of the leaders in the

00:00:21.625 --> 00:00:24.505
<v Speaker 0>infrastructure's code tool, but not the leader. So

00:00:24.505 --> 00:00:26.024
<v Speaker 0>since I've left Pulumi,

00:00:26.105 --> 00:00:27.305
<v Speaker 0>I've been wanting to make sure that I

00:00:27.305 --> 00:00:30.024
<v Speaker 0>keep up my skills with these other tools,

00:00:30.025 --> 00:00:31.589
<v Speaker 0>notably Terraform,

00:00:31.589 --> 00:00:32.870
<v Speaker 0>Terraform CDK,

00:00:33.030 --> 00:00:33.989
<v Speaker 0>CDKs,

00:00:34.070 --> 00:00:35.110
<v Speaker 0>and Crossplane.

00:00:35.670 --> 00:00:36.309
<v Speaker 0>However,

00:00:36.550 --> 00:00:38.070
<v Speaker 0>when you start to use more than one

00:00:38.070 --> 00:00:40.949
<v Speaker 0>infrastructure as code tool, you have a problem.

00:00:40.949 --> 00:00:42.790
<v Speaker 0>As you start to use a micro stack

00:00:42.790 --> 00:00:43.350
<v Speaker 0>pattern,

00:00:44.655 --> 00:00:47.055
<v Speaker 0>using Pulumi c to spin up a Kubernetes

00:00:47.055 --> 00:00:50.335
<v Speaker 0>cluster, Terraform to manage DNS records, CDK to

00:00:50.335 --> 00:00:52.895
<v Speaker 0>deploy to the Kubernetes cluster and so on.

00:00:53.535 --> 00:00:56.095
<v Speaker 0>You have this explicit set of dependencies,

00:00:56.095 --> 00:00:59.055
<v Speaker 0>which are quite hard to make explicit inside

00:00:59.055 --> 00:01:00.015
<v Speaker 0>of a code pipeline.

00:01:00.790 --> 00:01:03.590
<v Speaker 0>These can typically be in different repositories

00:01:03.750 --> 00:01:07.350
<v Speaker 0>and chaining repository actions together is already very

00:01:07.350 --> 00:01:09.350
<v Speaker 0>tedious. So there has to be something out

00:01:09.350 --> 00:01:11.510
<v Speaker 0>there to help make our lives easier.

00:01:11.750 --> 00:01:12.390
<v Speaker 0>Right?

00:01:12.790 --> 00:01:13.270
<v Speaker 0>Exactly.

00:01:13.795 --> 00:01:16.675
<v Speaker 0>Today, we're gonna take a look at Env0.

00:01:16.835 --> 00:01:20.515
<v Speaker 0>Let's dive in. First up, what is Env0?

00:01:20.515 --> 00:01:21.235
<v Speaker 0>Well,

00:01:21.635 --> 00:01:24.995
<v Speaker 0>it is a tool for infrastructure as code,

00:01:25.555 --> 00:01:27.795
<v Speaker 0>but not an infrastructure as code tool.

00:01:28.250 --> 00:01:30.729
<v Speaker 0>What do I mean? Well, you can't use

00:01:30.729 --> 00:01:32.490
<v Speaker 0>Env0 to provision

00:01:32.650 --> 00:01:34.329
<v Speaker 0>cloud infrastructure,

00:01:34.890 --> 00:01:37.369
<v Speaker 0>but you can use an infrastructure as code

00:01:37.369 --> 00:01:39.770
<v Speaker 0>tool like Pulumi and Terraform and CDK

00:01:40.345 --> 00:01:42.744
<v Speaker 0>and have m zero act as an orchestration

00:01:42.744 --> 00:01:44.185
<v Speaker 0>or workflow layer.

00:01:44.744 --> 00:01:47.704
<v Speaker 0>M zero can even manage your Terraform state

00:01:48.265 --> 00:01:50.024
<v Speaker 0>if you need somewhere to keep it safe.

00:01:50.024 --> 00:01:51.145
<v Speaker 0>So we're gonna take a look at a

00:01:51.145 --> 00:01:51.945
<v Speaker 0>demo today

00:01:52.290 --> 00:01:54.450
<v Speaker 0>where I've got like a real world example

00:01:54.450 --> 00:01:57.010
<v Speaker 0>of me personally wanting to spin up a

00:01:57.010 --> 00:01:59.490
<v Speaker 0>Kubernetes cluster and for today I'll use Civo

00:01:59.490 --> 00:02:00.770
<v Speaker 0>Cloud and I'm going to do it with

00:02:00.770 --> 00:02:03.890
<v Speaker 0>Pulumi. But I also have another stack,

00:02:04.130 --> 00:02:05.090
<v Speaker 0>an application

00:02:05.410 --> 00:02:07.250
<v Speaker 0>that maybe wants to deploy something to this

00:02:07.250 --> 00:02:07.650
<v Speaker 0>cluster.

00:02:08.074 --> 00:02:10.475
<v Speaker 0>But step one is actually to connect

00:02:10.794 --> 00:02:12.395
<v Speaker 0>a IP address

00:02:12.795 --> 00:02:14.715
<v Speaker 0>with the DNS record

00:02:15.035 --> 00:02:17.675
<v Speaker 0>because my applications aren't that good if I

00:02:17.675 --> 00:02:19.275
<v Speaker 0>can't route traffic to them publicly.

00:02:20.730 --> 00:02:22.890
<v Speaker 0>So let's dive into the code and take

00:02:22.890 --> 00:02:25.129
<v Speaker 0>a look at how m zero works. So

00:02:25.129 --> 00:02:26.730
<v Speaker 0>let's take a look at the Pulumi stack

00:02:26.730 --> 00:02:27.450
<v Speaker 0>first.

00:02:27.530 --> 00:02:30.650
<v Speaker 0>This is a very simple Pulumi program.

00:02:31.689 --> 00:02:33.530
<v Speaker 0>We import the Civo package.

00:02:33.610 --> 00:02:34.650
<v Speaker 0>We create a firewall.

00:02:35.025 --> 00:02:36.465
<v Speaker 0>We create a cluster.

00:02:37.105 --> 00:02:39.985
<v Speaker 0>I'm reserving an IP address so that I

00:02:39.985 --> 00:02:41.345
<v Speaker 0>can use an annotation

00:02:41.345 --> 00:02:41.905
<v Speaker 0>on

00:02:42.305 --> 00:02:44.545
<v Speaker 0>the ingress controller and tell it to use

00:02:44.545 --> 00:02:46.385
<v Speaker 0>this IP address within the cluster.

00:02:47.025 --> 00:02:50.379
<v Speaker 0>Lastly, I export the load balancer IP and

00:02:50.379 --> 00:02:51.660
<v Speaker 0>the kube config

00:02:51.980 --> 00:02:53.659
<v Speaker 0>just in case I want to use these

00:02:53.659 --> 00:02:55.100
<v Speaker 0>in another stack.

00:02:55.340 --> 00:02:57.100
<v Speaker 0>Now this is a very traditional

00:02:57.500 --> 00:02:59.260
<v Speaker 0>Pulumi program. In fact,

00:02:59.659 --> 00:03:01.659
<v Speaker 0>there's no concept of n zero here at

00:03:01.659 --> 00:03:02.060
<v Speaker 0>all

00:03:02.504 --> 00:03:05.065
<v Speaker 0>except for the Env0.

00:03:05.144 --> 00:03:05.945
<v Speaker 0>Yaml.

00:03:07.064 --> 00:03:08.825
<v Speaker 0>Now, we just need a little bit of

00:03:08.825 --> 00:03:11.144
<v Speaker 0>information here that tells Env0 how to get

00:03:11.144 --> 00:03:13.065
<v Speaker 0>ready to run this Pulumi stack.

00:03:13.385 --> 00:03:15.224
<v Speaker 0>It already knows how to do a Pulumi

00:03:15.224 --> 00:03:16.880
<v Speaker 0>up. It already knows how to do a

00:03:16.880 --> 00:03:19.040
<v Speaker 0>Pulumi preview and it already knows how to

00:03:19.040 --> 00:03:20.400
<v Speaker 0>do Pulumi destroy.

00:03:21.200 --> 00:03:23.280
<v Speaker 0>What it doesn't know is whether your Pulumi

00:03:23.280 --> 00:03:26.880
<v Speaker 0>program is JavaScript or TypeScript or Node. Js,

00:03:27.600 --> 00:03:28.480
<v Speaker 0>Python,

00:03:28.720 --> 00:03:29.120
<v Speaker 0>Java,

00:03:29.525 --> 00:03:30.325
<v Speaker 0>Go,

00:03:30.565 --> 00:03:31.205
<v Speaker 0>etcetera.

00:03:31.525 --> 00:03:33.125
<v Speaker 0>So what we're actually doing in the m

00:03:33.125 --> 00:03:36.005
<v Speaker 0>zero dot yaml is providing some steps for

00:03:36.005 --> 00:03:37.525
<v Speaker 0>deploy and destroy.

00:03:38.085 --> 00:03:40.085
<v Speaker 0>And all we're saying is that after we

00:03:40.085 --> 00:03:42.885
<v Speaker 0>set up any variables, run an NPM install

00:03:43.250 --> 00:03:45.569
<v Speaker 0>because we need all of the NPM, all

00:03:45.569 --> 00:03:47.970
<v Speaker 0>the node packages to be available for Pulumi

00:03:47.970 --> 00:03:49.250
<v Speaker 0>to run successfully.

00:03:49.810 --> 00:03:52.210
<v Speaker 0>And this is just a simple debug command,

00:03:52.290 --> 00:03:54.530
<v Speaker 0>but before we run a Pulumi login, it

00:03:54.530 --> 00:03:56.370
<v Speaker 0>may be useful to having your logs the

00:03:56.370 --> 00:03:57.090
<v Speaker 0>Pulumi version.

00:03:57.615 --> 00:03:58.895
<v Speaker 0>So let's do that.

00:03:59.615 --> 00:04:02.575
<v Speaker 0>We also repeat the same steps for destroy.

00:04:02.895 --> 00:04:03.535
<v Speaker 0>Next,

00:04:03.695 --> 00:04:05.615
<v Speaker 0>we have a Terraform program and

00:04:06.015 --> 00:04:08.895
<v Speaker 0>there is nothing m zero about this directory.

00:04:09.535 --> 00:04:11.455
<v Speaker 0>You'll see here that I have a civil

00:04:11.455 --> 00:04:13.055
<v Speaker 0>token and a Cloudflare token.

00:04:14.230 --> 00:04:16.949
<v Speaker 0>We then specify the Terraform provider block and

00:04:16.949 --> 00:04:19.510
<v Speaker 0>we say that we require civil and Cloudflare.

00:04:19.990 --> 00:04:22.870
<v Speaker 0>We then configure our civil and Cloudflare providers

00:04:23.669 --> 00:04:25.510
<v Speaker 0>and then using two data lookups.

00:04:26.165 --> 00:04:28.965
<v Speaker 0>One, I'm looking up the Cloudflare zone for

00:04:28.965 --> 00:04:30.805
<v Speaker 0>the Rawkode Academy domain.

00:04:31.925 --> 00:04:34.165
<v Speaker 0>Next, I'm doing a lookup against Civo Cloud

00:04:34.165 --> 00:04:36.805
<v Speaker 0>to grab the load balancer IP address.

00:04:37.205 --> 00:04:37.685
<v Speaker 0>Lastly,

00:04:38.370 --> 00:04:40.450
<v Speaker 0>I create a Cloudflare record.

00:04:40.530 --> 00:04:42.370
<v Speaker 0>If you've used Terraform before,

00:04:42.610 --> 00:04:44.770
<v Speaker 0>none of this is particularly new.

00:04:45.330 --> 00:04:47.650
<v Speaker 0>And we don't need any m zero yaml

00:04:47.650 --> 00:04:49.970
<v Speaker 0>here because Terraform is Terraform.

00:04:50.130 --> 00:04:52.665
<v Speaker 0>It's HCL based. We don't need node modules.

00:04:52.665 --> 00:04:55.305
<v Speaker 0>We don't need Python modules, etcetera. When we

00:04:55.305 --> 00:04:57.625
<v Speaker 0>have dependent stacks like this, we need to

00:04:57.625 --> 00:05:00.104
<v Speaker 0>be able to define a workflow that says,

00:05:00.104 --> 00:05:02.585
<v Speaker 0>well, we need the platform to exist first

00:05:02.824 --> 00:05:05.410
<v Speaker 0>before we do anything else. And this case,

00:05:05.410 --> 00:05:07.570
<v Speaker 0>we want to spin up this evil cloud

00:05:07.570 --> 00:05:09.730
<v Speaker 0>Kubernetes instance, and then

00:05:10.130 --> 00:05:13.090
<v Speaker 0>hook up the DNS record. Why? Because there's

00:05:13.090 --> 00:05:14.050
<v Speaker 0>a dependency.

00:05:14.530 --> 00:05:16.850
<v Speaker 0>The DNS record needs the IP address of

00:05:16.850 --> 00:05:18.930
<v Speaker 0>the load balancer before it can begin.

00:05:20.315 --> 00:05:22.715
<v Speaker 0>So you'll notice in the top level of

00:05:22.715 --> 00:05:23.835
<v Speaker 0>this repository,

00:05:24.235 --> 00:05:25.675
<v Speaker 0>we have an m0.

00:05:25.835 --> 00:05:27.435
<v Speaker 0>Workflow. Yaml.

00:05:28.715 --> 00:05:30.555
<v Speaker 0>And all we're specifying here is a list

00:05:30.555 --> 00:05:33.195
<v Speaker 0>of environments and any dependencies that we have.

00:05:33.910 --> 00:05:35.750
<v Speaker 0>It's a small bit of glue, but it

00:05:35.750 --> 00:05:37.750
<v Speaker 0>does powerful, powerful things.

00:05:38.630 --> 00:05:41.510
<v Speaker 0>First one, we define the platform is called

00:05:41.510 --> 00:05:43.910
<v Speaker 0>platform with a template of platform.

00:05:44.390 --> 00:05:45.670
<v Speaker 0>Don't worry if you don't know what the

00:05:45.670 --> 00:05:47.145
<v Speaker 0>template is. We're gonna take a look at

00:05:47.145 --> 00:05:49.145
<v Speaker 0>that through the m zero UI in just

00:05:49.145 --> 00:05:49.785
<v Speaker 0>a moment.

00:05:50.905 --> 00:05:53.305
<v Speaker 0>Next, we have an environment called DNS,

00:05:54.025 --> 00:05:56.105
<v Speaker 0>which has a name of DNS, a template

00:05:56.105 --> 00:05:57.065
<v Speaker 0>of DNS

00:05:57.225 --> 00:06:00.665
<v Speaker 0>and it needs the platform to run first.

00:06:01.400 --> 00:06:03.879
<v Speaker 0>This is how we encode our dependency and

00:06:03.879 --> 00:06:06.440
<v Speaker 0>guarantee the running order of these two stacks.

00:06:06.840 --> 00:06:09.639
<v Speaker 0>Not only that, when we do a destroy,

00:06:09.800 --> 00:06:12.039
<v Speaker 0>it'll run them in reverse making sure all

00:06:12.039 --> 00:06:15.639
<v Speaker 0>the dependent stacks are destroyed first before any

00:06:15.639 --> 00:06:16.439
<v Speaker 0>of the base layers.

00:06:17.325 --> 00:06:18.685
<v Speaker 0>Pretty neat. Right?

00:06:19.005 --> 00:06:21.165
<v Speaker 0>So let's pop over to the m zero

00:06:21.165 --> 00:06:21.885
<v Speaker 0>UI

00:06:22.045 --> 00:06:24.365
<v Speaker 0>and get this up and running. Here we

00:06:24.365 --> 00:06:26.845
<v Speaker 0>have the m zero UI and I've created

00:06:26.845 --> 00:06:28.445
<v Speaker 0>a project called

00:06:28.445 --> 00:06:29.005
<v Speaker 0>level up.

00:06:30.120 --> 00:06:31.880
<v Speaker 0>If you click on level up, we'll see

00:06:31.880 --> 00:06:33.880
<v Speaker 0>that we have no environments.

00:06:34.760 --> 00:06:36.680
<v Speaker 0>Just a moment ago, we took a look

00:06:36.680 --> 00:06:38.840
<v Speaker 0>at the m0.workflow.yaml

00:06:38.840 --> 00:06:40.680
<v Speaker 0>which listed the environments.

00:06:41.400 --> 00:06:44.724
<v Speaker 0>We have or we want a platform environment

00:06:44.724 --> 00:06:46.485
<v Speaker 0>and a DNS environment.

00:06:47.044 --> 00:06:49.365
<v Speaker 0>And those had something called templates.

00:06:50.724 --> 00:06:52.565
<v Speaker 0>So let's go to organization

00:06:52.565 --> 00:06:53.525
<v Speaker 0>templates,

00:06:54.565 --> 00:06:57.044
<v Speaker 0>where I've already configured our platform and DNS.

00:06:57.740 --> 00:06:59.900
<v Speaker 0>But let's click on settings and see what

00:06:59.900 --> 00:07:00.780
<v Speaker 0>they look like.

00:07:01.900 --> 00:07:03.900
<v Speaker 0>First, a template we have to tell it

00:07:03.900 --> 00:07:07.020
<v Speaker 0>which infrastructure as code tool we are using.

00:07:07.420 --> 00:07:09.420
<v Speaker 0>You'll see here I've selected Pulumi.

00:07:09.955 --> 00:07:11.955
<v Speaker 0>However, I could have picked Kubernetes,

00:07:11.955 --> 00:07:12.835
<v Speaker 0>CloudFormation,

00:07:12.835 --> 00:07:15.395
<v Speaker 0>a workflow, Terraform, or Terraform.

00:07:16.195 --> 00:07:18.035
<v Speaker 0>But let's go back to Pulumi.

00:07:18.275 --> 00:07:20.275
<v Speaker 0>We got the template a name here and

00:07:20.275 --> 00:07:22.675
<v Speaker 0>calling it platform just because that's what I

00:07:22.675 --> 00:07:24.355
<v Speaker 0>have in my m0.yaml.

00:07:25.040 --> 00:07:27.200
<v Speaker 0>Feel free to provide a description if you

00:07:27.200 --> 00:07:27.680
<v Speaker 0>want.

00:07:28.720 --> 00:07:30.640
<v Speaker 0>You then get to select the version of

00:07:30.640 --> 00:07:32.400
<v Speaker 0>Pulumi that you wish to use. I am

00:07:32.400 --> 00:07:33.840
<v Speaker 0>going to use latest.

00:07:34.480 --> 00:07:36.960
<v Speaker 0>You get to define reshi logic on failure,

00:07:36.960 --> 00:07:39.200
<v Speaker 0>whether to do it on deploy, destroy or

00:07:39.200 --> 00:07:39.520
<v Speaker 0>both.

00:07:40.525 --> 00:07:42.925
<v Speaker 0>And if you need an SSH key to

00:07:42.925 --> 00:07:45.245
<v Speaker 0>access any of your code because they're in

00:07:45.245 --> 00:07:46.605
<v Speaker 0>private repositories,

00:07:46.605 --> 00:07:48.445
<v Speaker 0>you can configure that as so.

00:07:49.245 --> 00:07:51.165
<v Speaker 0>Next, we click on VCS.

00:07:51.805 --> 00:07:53.885
<v Speaker 0>Here, we have to point it to the

00:07:53.885 --> 00:07:54.445
<v Speaker 0>repository.

00:07:55.470 --> 00:07:58.270
<v Speaker 0>For today's example, I'm using gitlab.com

00:07:58.270 --> 00:08:00.990
<v Speaker 0>and I've already authorized myself as a user.

00:08:02.030 --> 00:08:03.870
<v Speaker 0>From here, we can type in the name

00:08:03.870 --> 00:08:05.150
<v Speaker 0>of our repository.

00:08:05.390 --> 00:08:09.070
<v Speaker 0>For this, it's Rawkode Academy DevOps tutorials m

00:08:09.070 --> 00:08:09.470
<v Speaker 0>zero.

00:08:11.055 --> 00:08:12.495
<v Speaker 0>We choose the branch that we want it

00:08:12.495 --> 00:08:15.055
<v Speaker 0>to run against. Main is a pretty stable

00:08:15.055 --> 00:08:15.615
<v Speaker 0>choice.

00:08:16.175 --> 00:08:17.375
<v Speaker 0>And then if

00:08:17.775 --> 00:08:20.414
<v Speaker 0>the code, the infrastructure is code that you

00:08:20.414 --> 00:08:22.735
<v Speaker 0>want to run as this template lives and

00:08:22.735 --> 00:08:25.055
<v Speaker 0>a sub directory like mines and the Pulumi

00:08:25.055 --> 00:08:25.455
<v Speaker 0>directory,

00:08:26.300 --> 00:08:27.500
<v Speaker 0>you could that here.

00:08:27.900 --> 00:08:29.980
<v Speaker 0>Next, we specify the variables.

00:08:30.620 --> 00:08:32.220
<v Speaker 0>So I know that I want to store

00:08:32.220 --> 00:08:35.020
<v Speaker 0>my state using Pulumi cloud. So I need

00:08:35.020 --> 00:08:37.420
<v Speaker 0>a Pulumi access token key.

00:08:37.820 --> 00:08:39.820
<v Speaker 0>And you can paste in your own value

00:08:39.820 --> 00:08:40.220
<v Speaker 0>there.

00:08:41.485 --> 00:08:44.284
<v Speaker 0>My Pulumi code also speaks to the Civo

00:08:44.284 --> 00:08:45.165
<v Speaker 0>API.

00:08:45.565 --> 00:08:47.964
<v Speaker 0>Now, I could use Pulumi secrets, but instead

00:08:47.964 --> 00:08:50.365
<v Speaker 0>I've opted to use Pulumi token as part

00:08:50.365 --> 00:08:52.845
<v Speaker 0>of the environment variables where I've also saved

00:08:52.845 --> 00:08:53.805
<v Speaker 0>an API token.

00:08:55.790 --> 00:08:58.110
<v Speaker 0>Lastly, we tell it the projects are allowed

00:08:58.110 --> 00:08:59.550
<v Speaker 0>to consume this template.

00:09:00.270 --> 00:09:02.430
<v Speaker 0>I don't need to save this because nothing

00:09:02.430 --> 00:09:03.470
<v Speaker 0>has changed.

00:09:04.830 --> 00:09:07.230
<v Speaker 0>For DNS, we'll open it up. You'll see

00:09:07.230 --> 00:09:09.310
<v Speaker 0>it's configured as a Terraform template.

00:09:10.055 --> 00:09:12.615
<v Speaker 0>The name is DNS and just like Pulumi,

00:09:12.615 --> 00:09:14.615
<v Speaker 0>I get the version, the retry logic and

00:09:14.615 --> 00:09:15.975
<v Speaker 0>any SSH key.

00:09:17.175 --> 00:09:19.654
<v Speaker 0>This is pointed to the same repository,

00:09:19.654 --> 00:09:22.615
<v Speaker 0>the m zero DevOps tutorial repository

00:09:22.110 --> 00:09:23.550
<v Speaker 0>on the same branch,

00:09:23.630 --> 00:09:25.709
<v Speaker 0>but the directory the code lives in is

00:09:25.709 --> 00:09:26.270
<v Speaker 0>different.

00:09:26.670 --> 00:09:28.830
<v Speaker 0>In this case, it's Terraform.

00:09:30.269 --> 00:09:31.390
<v Speaker 0>On variables,

00:09:31.709 --> 00:09:33.230
<v Speaker 0>almost the exact same thing.

00:09:33.950 --> 00:09:34.430
<v Speaker 0>However,

00:09:35.015 --> 00:09:37.175
<v Speaker 0>I was able to use this wonderful load

00:09:37.175 --> 00:09:39.495
<v Speaker 0>variables from code button and we'll take a

00:09:39.495 --> 00:09:40.855
<v Speaker 0>look at that in just a moment.

00:09:41.575 --> 00:09:44.135
<v Speaker 0>But m zero has really good knowledge and

00:09:44.135 --> 00:09:46.295
<v Speaker 0>understanding of Terraform programs.

00:09:46.775 --> 00:09:48.455
<v Speaker 0>If you add a new variable block to

00:09:48.455 --> 00:09:50.730
<v Speaker 0>the code, you can tell emcee to scan

00:09:50.730 --> 00:09:52.730
<v Speaker 0>it and make it available on the UI.

00:09:53.290 --> 00:09:54.170
<v Speaker 0>And lastly,

00:09:54.490 --> 00:09:57.290
<v Speaker 0>we've set the project to level up two.

00:09:58.970 --> 00:10:02.490
<v Speaker 0>So let's pop back to our project environments.

00:10:03.024 --> 00:10:05.985
<v Speaker 0>Here I'm gonna say create new environment.

00:10:06.464 --> 00:10:08.305
<v Speaker 0>Now we have a choice of just using

00:10:08.305 --> 00:10:10.305
<v Speaker 0>our two templates, but then there wouldn't be

00:10:10.305 --> 00:10:12.465
<v Speaker 0>any dependencies mapping between the two.

00:10:13.105 --> 00:10:15.185
<v Speaker 0>So instead I'm going to say use a

00:10:15.185 --> 00:10:16.225
<v Speaker 0>version control system.

00:10:17.339 --> 00:10:20.459
<v Speaker 0>And this time I'm not specifically configuring Terraform

00:10:20.459 --> 00:10:23.100
<v Speaker 0>or Pulumi, but instead a workflow.

00:10:24.699 --> 00:10:26.700
<v Speaker 0>It's in the same repository

00:10:27.019 --> 00:10:28.540
<v Speaker 0>with the same user,

00:10:29.420 --> 00:10:30.220
<v Speaker 0>m0

00:10:32.745 --> 00:10:33.625
<v Speaker 0>like so.

00:10:34.105 --> 00:10:35.945
<v Speaker 0>I want to use the same branch, only

00:10:35.945 --> 00:10:38.665
<v Speaker 0>this time the m zero workflow file is

00:10:38.665 --> 00:10:40.345
<v Speaker 0>in the top level directory.

00:10:40.505 --> 00:10:42.425
<v Speaker 0>We can indicate that with a dot.

00:10:44.505 --> 00:10:47.450
<v Speaker 0>I click next. We don't need any variables

00:10:47.450 --> 00:10:49.610
<v Speaker 0>and we can give this any environment name

00:10:49.610 --> 00:10:50.650
<v Speaker 0>that we want.

00:10:51.130 --> 00:10:52.890
<v Speaker 0>I'm going to call this production.

00:10:52.970 --> 00:10:55.290
<v Speaker 0>You can provide a workflow workspace name if

00:10:55.290 --> 00:10:57.450
<v Speaker 0>you want, however, is not mandatory.

00:10:58.005 --> 00:11:00.405
<v Speaker 0>We have a default checkbox on which will

00:11:00.405 --> 00:11:01.525
<v Speaker 0>say redeploy

00:11:01.525 --> 00:11:03.205
<v Speaker 0>every time we push to get.

00:11:03.525 --> 00:11:06.085
<v Speaker 0>M zero actually has really good integration with

00:11:06.085 --> 00:11:08.245
<v Speaker 0>GitHub and GitLab and that when you open

00:11:08.245 --> 00:11:10.485
<v Speaker 0>a pull or merge request, you will get

00:11:10.485 --> 00:11:12.565
<v Speaker 0>a comment with the plan results.

00:11:13.200 --> 00:11:15.200
<v Speaker 0>We'll see that in a moment too.

00:11:16.240 --> 00:11:18.480
<v Speaker 0>If you want to enable drift detection, this

00:11:18.480 --> 00:11:20.640
<v Speaker 0>takes a cron syntax

00:11:21.440 --> 00:11:22.320
<v Speaker 0>like so.

00:11:23.200 --> 00:11:25.760
<v Speaker 0>However, the minimum time or the minimum drift

00:11:25.760 --> 00:11:27.440
<v Speaker 0>interval is one hour.

00:11:27.760 --> 00:11:29.815
<v Speaker 0>So we'll say to run at five past

00:11:29.815 --> 00:11:31.095
<v Speaker 0>every hour

00:11:31.815 --> 00:11:33.095
<v Speaker 0>and click done.

00:11:33.495 --> 00:11:36.214
<v Speaker 0>As part of this new environment, this new

00:11:36.214 --> 00:11:37.095
<v Speaker 0>workflow,

00:11:37.095 --> 00:11:39.334
<v Speaker 0>a run for both of our templates will

00:11:39.334 --> 00:11:39.894
<v Speaker 0>now begin.

00:11:46.280 --> 00:11:46.840
<v Speaker 0>So,

00:11:47.240 --> 00:11:48.920
<v Speaker 0>we'll come back in just a moment when

00:11:48.920 --> 00:11:50.680
<v Speaker 0>it's completed. Okay.

00:11:50.840 --> 00:11:52.760
<v Speaker 0>The workflow run is finished.

00:11:53.320 --> 00:11:55.160
<v Speaker 0>We scroll down. We'll see that the platform

00:11:55.160 --> 00:11:57.125
<v Speaker 0>has a tick and the DNS has a

00:11:57.125 --> 00:12:00.404
<v Speaker 0>tick. This means that both runs completed successfully.

00:12:01.365 --> 00:12:03.365
<v Speaker 0>Looking at the platform, we can see the

00:12:03.365 --> 00:12:04.084
<v Speaker 0>clone,

00:12:04.324 --> 00:12:06.005
<v Speaker 0>loads the MZ file,

00:12:06.404 --> 00:12:08.485
<v Speaker 0>does some preview and stuff.

00:12:09.360 --> 00:12:11.760
<v Speaker 0>And eventually, we have the longest part of

00:12:11.760 --> 00:12:14.400
<v Speaker 0>the run, the Pulumi up at three minutes.

00:12:15.840 --> 00:12:17.600
<v Speaker 0>We can expand that and see all of

00:12:17.600 --> 00:12:18.800
<v Speaker 0>the Pulumi output

00:12:19.120 --> 00:12:20.880
<v Speaker 0>as well as the resources,

00:12:22.035 --> 00:12:24.995
<v Speaker 0>as well as the explicit outputs we defined

00:12:24.995 --> 00:12:26.195
<v Speaker 0>in code.

00:12:27.635 --> 00:12:30.755
<v Speaker 0>So, let's make a change to this repository.

00:12:31.235 --> 00:12:34.675
<v Speaker 0>First, we want to see the variable scan.

00:12:36.350 --> 00:12:37.870
<v Speaker 0>So we're gonna add a new variable to

00:12:37.870 --> 00:12:40.190
<v Speaker 0>the Terraform and we'll call this

00:12:41.310 --> 00:12:44.590
<v Speaker 0>name. Not very original, but it'll it'll do.

00:12:44.830 --> 00:12:47.790
<v Speaker 0>Let's also add a comment to our DNS

00:12:47.790 --> 00:12:48.270
<v Speaker 0>record.

00:12:49.904 --> 00:12:51.665
<v Speaker 0>And we'll just say hello

00:12:53.185 --> 00:12:55.345
<v Speaker 0>and zero.

00:12:56.865 --> 00:12:58.785
<v Speaker 0>And let's make a small modification to the

00:12:58.785 --> 00:12:59.985
<v Speaker 0>Pulumi program

00:13:00.305 --> 00:13:03.345
<v Speaker 0>and we're just gonna request an extra IP

00:13:03.345 --> 00:13:03.985
<v Speaker 0>address

00:13:04.560 --> 00:13:06.880
<v Speaker 0>and we'll call this platform

00:13:07.520 --> 00:13:08.400
<v Speaker 0>app.

00:13:08.960 --> 00:13:11.760
<v Speaker 0>So let's be a good citizen within our

00:13:11.760 --> 00:13:12.640
<v Speaker 0>organization

00:13:13.040 --> 00:13:14.480
<v Speaker 0>and create a branch.

00:13:15.360 --> 00:13:16.240
<v Speaker 0>New

00:13:16.400 --> 00:13:17.200
<v Speaker 0>million

00:13:17.360 --> 00:13:18.160
<v Speaker 0>dollar

00:13:18.240 --> 00:13:19.360
<v Speaker 0>idea.

00:13:21.265 --> 00:13:22.785
<v Speaker 0>We can do a git add.

00:13:23.825 --> 00:13:25.985
<v Speaker 0>Be the worst developer in the world and

00:13:25.985 --> 00:13:27.105
<v Speaker 0>commit changes.

00:13:27.745 --> 00:13:29.905
<v Speaker 0>And we'll do a git push. So let's

00:13:29.905 --> 00:13:32.225
<v Speaker 0>pop over to GitLab and open the merge

00:13:32.225 --> 00:13:32.625
<v Speaker 0>request.

00:13:34.510 --> 00:13:35.470
<v Speaker 0>And create.

00:13:36.430 --> 00:13:38.430
<v Speaker 0>If we click on changes, we'll see the

00:13:38.430 --> 00:13:41.390
<v Speaker 0>two modifications that we made or three modifications

00:13:41.390 --> 00:13:43.390
<v Speaker 0>that we made to our program.

00:13:44.350 --> 00:13:46.030
<v Speaker 0>And if we pop over to pipelines,

00:13:47.185 --> 00:13:50.065
<v Speaker 0>we haven't configured any CICD for this. There

00:13:50.065 --> 00:13:53.425
<v Speaker 0>is no dot GitLab YAML workflow file.

00:13:53.584 --> 00:13:56.385
<v Speaker 0>This is m zero speaking to GitLab

00:13:56.464 --> 00:13:58.305
<v Speaker 0>as a GitLab application.

00:13:59.505 --> 00:14:00.704
<v Speaker 0>And if we click

00:14:01.130 --> 00:14:02.490
<v Speaker 0>on our pipeline,

00:14:02.810 --> 00:14:04.649
<v Speaker 0>we'll see that m zero is running a

00:14:04.649 --> 00:14:05.290
<v Speaker 0>plan

00:14:05.850 --> 00:14:08.010
<v Speaker 0>for our production environment.

00:14:08.970 --> 00:14:10.490
<v Speaker 0>So let's click on it.

00:14:12.170 --> 00:14:14.330
<v Speaker 0>And we'll see that it's already succeeded.

00:14:16.255 --> 00:14:18.095
<v Speaker 0>And if we look at the Pulumi preview,

00:14:18.095 --> 00:14:19.695
<v Speaker 0>we'll see that we have one resource to

00:14:19.695 --> 00:14:20.335
<v Speaker 0>create.

00:14:21.855 --> 00:14:24.655
<v Speaker 0>So let's go back to our merge request.

00:14:24.975 --> 00:14:26.255
<v Speaker 0>And if we scroll down,

00:14:26.655 --> 00:14:27.535
<v Speaker 0>we have comments.

00:14:28.930 --> 00:14:29.570
<v Speaker 0>One,

00:14:29.889 --> 00:14:32.130
<v Speaker 0>we can see that Pulumi wants to add

00:14:32.130 --> 00:14:35.010
<v Speaker 0>one resource and four are unchanged.

00:14:35.649 --> 00:14:37.250
<v Speaker 0>And if we expand Oh,

00:14:38.529 --> 00:14:40.930
<v Speaker 0>someone forgot to set a default value. So

00:14:40.930 --> 00:14:41.970
<v Speaker 0>let's do that now.

00:14:43.635 --> 00:14:45.555
<v Speaker 0>Let's pop open our Terraform.

00:14:49.555 --> 00:14:50.915
<v Speaker 0>Set default,

00:14:53.475 --> 00:14:54.195
<v Speaker 0>David,

00:14:56.035 --> 00:14:56.835
<v Speaker 0>add,

00:14:58.115 --> 00:14:58.675
<v Speaker 0>commit

00:14:59.939 --> 00:15:00.899
<v Speaker 0>and push.

00:15:01.540 --> 00:15:03.699
<v Speaker 0>So let's open the merge request.

00:15:04.740 --> 00:15:06.100
<v Speaker 0>We click the button

00:15:07.060 --> 00:15:08.660
<v Speaker 0>and we say create.

00:15:13.385 --> 00:15:14.665
<v Speaker 0>And what's happening,

00:15:15.145 --> 00:15:17.385
<v Speaker 0>mZero has a GitLab application,

00:15:17.545 --> 00:15:19.865
<v Speaker 0>which has injected a pipeline for us. We

00:15:19.865 --> 00:15:22.665
<v Speaker 0>have not created a GitLab workflow file.

00:15:22.825 --> 00:15:24.745
<v Speaker 0>This is all handled for you by using

00:15:24.745 --> 00:15:25.625
<v Speaker 0>mZero.

00:15:26.025 --> 00:15:27.305
<v Speaker 0>If we click on the pipeline,

00:15:28.379 --> 00:15:30.620
<v Speaker 0>we'll see that it's running our DNS and

00:15:30.620 --> 00:15:34.220
<v Speaker 0>platform jobs as part of our production environment.

00:15:35.500 --> 00:15:37.180
<v Speaker 0>You can click on this and it will

00:15:37.180 --> 00:15:38.060
<v Speaker 0>take you to m zero.

00:15:40.875 --> 00:15:42.475
<v Speaker 0>And here we can see that this plan

00:15:42.475 --> 00:15:45.274
<v Speaker 0>was a success. If we scroll down, we'll

00:15:45.274 --> 00:15:47.435
<v Speaker 0>see that the Terraform plan

00:15:47.915 --> 00:15:50.955
<v Speaker 0>wants to update the Cloudflare record with the

00:15:50.955 --> 00:15:52.075
<v Speaker 0>comment that we added.

00:15:53.180 --> 00:15:56.060
<v Speaker 0>So let's browse back to our merge request.

00:15:58.380 --> 00:15:59.820
<v Speaker 0>And if we scroll down,

00:16:03.980 --> 00:16:05.340
<v Speaker 0>we'll see that we don't have to comment

00:16:05.340 --> 00:16:05.660
<v Speaker 0>yet.

00:16:06.495 --> 00:16:08.815
<v Speaker 0>So let's just give that another second.

00:16:08.975 --> 00:16:10.655
<v Speaker 0>There we have it. Now we have our

00:16:10.655 --> 00:16:13.215
<v Speaker 0>comments. The Pulumi plan has succeeded and it

00:16:13.215 --> 00:16:15.375
<v Speaker 0>wants to create one more resource, which is,

00:16:15.375 --> 00:16:17.375
<v Speaker 0>of course, our new reserved IP.

00:16:18.350 --> 00:16:20.350
<v Speaker 0>Down here for the Terraform job, we see

00:16:20.350 --> 00:16:22.430
<v Speaker 0>that one resource needs to change.

00:16:23.470 --> 00:16:25.470
<v Speaker 0>So, I'm not gonna wait. I'm just going

00:16:25.470 --> 00:16:26.990
<v Speaker 0>to merge this immediately.

00:16:29.390 --> 00:16:29.950
<v Speaker 0>And done.

00:16:30.775 --> 00:16:33.095
<v Speaker 0>So let's head back to M 0.

00:16:33.495 --> 00:16:36.055
<v Speaker 0>And you'll see that our production environment already

00:16:36.055 --> 00:16:37.895
<v Speaker 0>has a deploy in progress.

00:16:38.455 --> 00:16:40.775
<v Speaker 0>Now that our merge request has been merged,

00:16:40.775 --> 00:16:43.095
<v Speaker 0>it's going to run the Pulumi up and

00:16:43.095 --> 00:16:44.375
<v Speaker 0>the Terraform apply.

00:16:45.240 --> 00:16:47.160
<v Speaker 0>Let's just give that a moment.

00:16:47.720 --> 00:16:48.360
<v Speaker 0>Well,

00:16:50.440 --> 00:16:51.800
<v Speaker 0>Let's head back over

00:16:52.760 --> 00:16:54.520
<v Speaker 0>to our project templates

00:16:55.000 --> 00:16:57.480
<v Speaker 0>and click on settings for DNS.

00:16:58.885 --> 00:17:00.325
<v Speaker 0>Let's go to variables

00:17:00.485 --> 00:17:02.085
<v Speaker 0>and you'll see that we still have our

00:17:02.085 --> 00:17:04.644
<v Speaker 0>Civo token and our Cloudflare token,

00:17:04.805 --> 00:17:07.125
<v Speaker 0>but we did add that extra variable to

00:17:07.125 --> 00:17:08.484
<v Speaker 0>our Terraform code.

00:17:09.045 --> 00:17:11.524
<v Speaker 0>So let's click load variables

00:17:11.525 --> 00:17:12.244
<v Speaker 0>from code.

00:17:13.090 --> 00:17:14.450
<v Speaker 0>I love that feature.

00:17:14.930 --> 00:17:17.970
<v Speaker 0>It has scanned our HCL detected that we

00:17:17.970 --> 00:17:20.290
<v Speaker 0>have key of name with a default value

00:17:20.290 --> 00:17:21.170
<v Speaker 0>David,

00:17:21.570 --> 00:17:23.250
<v Speaker 0>which we can override

00:17:23.250 --> 00:17:24.210
<v Speaker 0>like so

00:17:24.610 --> 00:17:25.890
<v Speaker 0>and hit save.

00:17:26.610 --> 00:17:27.810
<v Speaker 0>So as we've seen so far,

00:17:28.505 --> 00:17:30.025
<v Speaker 0>we can take multiple

00:17:30.025 --> 00:17:30.985
<v Speaker 0>infrastructure

00:17:31.705 --> 00:17:33.385
<v Speaker 0>as code tools,

00:17:33.385 --> 00:17:34.265
<v Speaker 0>repositories,

00:17:34.265 --> 00:17:35.465
<v Speaker 0>or subdirectories,

00:17:36.105 --> 00:17:38.985
<v Speaker 0>build workflows with explicit dependencies.

00:17:40.025 --> 00:17:42.585
<v Speaker 0>This part's great for the options that we've

00:17:42.585 --> 00:17:45.770
<v Speaker 0>already seen on the m zero UI.

00:17:45.930 --> 00:17:46.970
<v Speaker 0>Terraform,

00:17:46.970 --> 00:17:48.890
<v Speaker 0>Terraform, Pulumi,

00:17:48.970 --> 00:17:50.010
<v Speaker 0>CloudFormation.

00:17:50.650 --> 00:17:53.130
<v Speaker 0>But what about CDKTF?

00:17:53.610 --> 00:17:56.169
<v Speaker 0>I'm a big fan of Terraform CDK.

00:17:56.330 --> 00:17:58.090
<v Speaker 0>So let's see an action as part of

00:17:58.090 --> 00:17:59.050
<v Speaker 0>m zero's workflow.

00:18:00.515 --> 00:18:01.154
<v Speaker 0>First,

00:18:02.035 --> 00:18:04.835
<v Speaker 0>we'll create a directory called CDKTF,

00:18:04.914 --> 00:18:07.315
<v Speaker 0>where we'll run CDKTF

00:18:07.315 --> 00:18:08.195
<v Speaker 0>in it.

00:18:09.475 --> 00:18:11.395
<v Speaker 0>Let's go with TypeScript,

00:18:12.660 --> 00:18:15.620
<v Speaker 0>and the name and description is just fine.

00:18:16.100 --> 00:18:18.340
<v Speaker 0>Now we're not going to use Terraform Cloud

00:18:18.660 --> 00:18:20.900
<v Speaker 0>because m zero is actually managing all of

00:18:20.900 --> 00:18:22.500
<v Speaker 0>our state files in the background.

00:18:22.980 --> 00:18:25.620
<v Speaker 0>We didn't actually specify any state storage for

00:18:25.620 --> 00:18:28.095
<v Speaker 0>the previous Terraform program and nor do you

00:18:28.095 --> 00:18:28.815
<v Speaker 0>need to.

00:18:30.015 --> 00:18:32.095
<v Speaker 0>Now for this example, I'm gonna keep it

00:18:32.095 --> 00:18:34.655
<v Speaker 0>relatively contrived and we're going to use the

00:18:34.655 --> 00:18:35.774
<v Speaker 0>random provider.

00:18:37.135 --> 00:18:38.894
<v Speaker 0>Let's go back to our code.

00:18:39.295 --> 00:18:40.975
<v Speaker 0>We have our new directory,

00:18:41.135 --> 00:18:42.255
<v Speaker 0>a main dot ts,

00:18:42.900 --> 00:18:43.940
<v Speaker 0>and we have

00:18:44.740 --> 00:18:46.100
<v Speaker 0>an empty stack.

00:18:46.900 --> 00:18:48.980
<v Speaker 0>Now, we don't actually have to add anything

00:18:48.980 --> 00:18:51.060
<v Speaker 0>to the stack in order to show it

00:18:51.060 --> 00:18:52.980
<v Speaker 0>working with m zero.

00:18:53.540 --> 00:18:55.780
<v Speaker 0>We can actually just go to the CLI

00:18:56.340 --> 00:18:58.180
<v Speaker 0>and ensure that CDKTF

00:18:58.180 --> 00:18:59.674
<v Speaker 0>synth runs,

00:19:00.155 --> 00:19:01.195
<v Speaker 0>which it does.

00:19:01.515 --> 00:19:03.915
<v Speaker 0>Now the way that CDKTF works is you

00:19:03.915 --> 00:19:05.995
<v Speaker 0>write your code in TypeScript, you run a

00:19:05.995 --> 00:19:08.475
<v Speaker 0>synth, and it generates HCL

00:19:08.955 --> 00:19:11.595
<v Speaker 0>for a normal standard Terraform run.

00:19:12.670 --> 00:19:15.230
<v Speaker 0>So let's configure m zero to do this

00:19:15.230 --> 00:19:16.030
<v Speaker 0>too.

00:19:16.110 --> 00:19:18.590
<v Speaker 0>Let's go to our code and we'll create

00:19:18.830 --> 00:19:20.270
<v Speaker 0>an m zero

00:19:20.590 --> 00:19:21.310
<v Speaker 0>dot yaml.

00:19:25.434 --> 00:19:27.195
<v Speaker 0>We'll go to the Pulumi one

00:19:28.475 --> 00:19:30.794
<v Speaker 0>and copy it to make this a little

00:19:30.794 --> 00:19:31.594
<v Speaker 0>bit faster.

00:19:32.154 --> 00:19:34.794
<v Speaker 0>We'll delete destroy for now

00:19:35.995 --> 00:19:37.914
<v Speaker 0>and just focus on

00:19:38.260 --> 00:19:40.899
<v Speaker 0>deploy setup variables after.

00:19:41.539 --> 00:19:43.779
<v Speaker 0>Here we're doing our NPM install.

00:19:44.500 --> 00:19:46.900
<v Speaker 0>What we can also do an NPM install

00:19:46.900 --> 00:19:47.700
<v Speaker 0>global

00:19:47.780 --> 00:19:48.980
<v Speaker 0>CDKTF

00:19:48.980 --> 00:19:49.860
<v Speaker 0>CLI.

00:19:50.275 --> 00:19:52.755
<v Speaker 0>Now because this is a global install, it

00:19:52.755 --> 00:19:53.794
<v Speaker 0>will require

00:19:53.795 --> 00:19:54.595
<v Speaker 0>sudo.

00:19:55.955 --> 00:19:59.075
<v Speaker 0>From here, you can actually just run CDKTF

00:19:59.075 --> 00:19:59.955
<v Speaker 0>since.

00:20:00.915 --> 00:20:03.315
<v Speaker 0>However, we want to copy all of the

00:20:03.315 --> 00:20:06.460
<v Speaker 0>generated code and to the current directory.

00:20:06.940 --> 00:20:09.020
<v Speaker 0>We just need to put the stack name

00:20:09.020 --> 00:20:12.220
<v Speaker 0>in here. If you're unsure, run the CDKTF

00:20:12.220 --> 00:20:13.340
<v Speaker 0>locally,

00:20:13.420 --> 00:20:15.019
<v Speaker 0>the CDKTF synth,

00:20:15.260 --> 00:20:17.260
<v Speaker 0>because you can just expand the dot out

00:20:17.260 --> 00:20:20.140
<v Speaker 0>directory, the stack, you'll see the stack name

00:20:20.235 --> 00:20:21.835
<v Speaker 0>and then we have our JSON.

00:20:23.515 --> 00:20:25.674
<v Speaker 0>And we want to grab that to the

00:20:25.674 --> 00:20:27.195
<v Speaker 0>current working directory.

00:20:28.395 --> 00:20:30.475
<v Speaker 0>And we'll want to copy this

00:20:30.955 --> 00:20:31.755
<v Speaker 0>for destroy,

00:20:35.730 --> 00:20:38.210
<v Speaker 0>Like so. So let's modify

00:20:38.290 --> 00:20:39.730
<v Speaker 0>our workflow file.

00:20:40.130 --> 00:20:42.690
<v Speaker 0>Now we can add CDKTF,

00:20:44.290 --> 00:20:45.970
<v Speaker 0>name CDKTF,

00:20:46.610 --> 00:20:48.850
<v Speaker 0>template name CDKTF.

00:20:50.975 --> 00:20:53.054
<v Speaker 0>And we'll see that this needs

00:20:54.014 --> 00:20:54.974
<v Speaker 0>platform

00:20:55.934 --> 00:20:56.974
<v Speaker 0>and DNS.

00:20:57.615 --> 00:20:59.695
<v Speaker 0>In fact, let's remove the DNS

00:21:00.495 --> 00:21:02.174
<v Speaker 0>and we'll see that m zero will run

00:21:02.174 --> 00:21:04.495
<v Speaker 0>these stacks in parallel, which is also kind

00:21:04.495 --> 00:21:06.929
<v Speaker 0>of cool. So, let's commit this

00:21:07.010 --> 00:21:07.650
<v Speaker 0>and push.

00:21:23.615 --> 00:21:25.535
<v Speaker 0>So if we come back to our project,

00:21:26.335 --> 00:21:27.375
<v Speaker 0>we will have

00:21:28.095 --> 00:21:30.015
<v Speaker 0>our production environment.

00:21:31.055 --> 00:21:33.295
<v Speaker 0>Now it's inactive and passed, but if we

00:21:33.295 --> 00:21:35.215
<v Speaker 0>click on deployments, we'll see that our last

00:21:35.215 --> 00:21:36.175
<v Speaker 0>run failed.

00:21:36.700 --> 00:21:38.860
<v Speaker 0>And it's failing because we do not have

00:21:38.860 --> 00:21:41.020
<v Speaker 0>the template CDKTF.

00:21:41.580 --> 00:21:43.820
<v Speaker 0>Let's go to organization templates

00:21:45.020 --> 00:21:46.299
<v Speaker 0>and create new.

00:21:46.940 --> 00:21:48.780
<v Speaker 0>Now because we want us to run the

00:21:48.780 --> 00:21:49.740
<v Speaker 0>Terraform eventually,

00:21:50.245 --> 00:21:51.924
<v Speaker 0>we just select Terraform.

00:21:53.125 --> 00:21:55.284
<v Speaker 0>We call this CDKTF

00:21:57.524 --> 00:21:59.605
<v Speaker 0>to match what we put in a workflow

00:21:59.605 --> 00:22:00.404
<v Speaker 0>YAML.

00:22:01.365 --> 00:22:02.644
<v Speaker 0>And click next

00:22:03.205 --> 00:22:05.044
<v Speaker 0>and configure

00:22:05.370 --> 00:22:06.649
<v Speaker 0>a repository

00:22:06.810 --> 00:22:07.929
<v Speaker 0>one last time.

00:22:08.170 --> 00:22:11.929
<v Speaker 0>And the directory for this is CDKTF.

00:22:14.010 --> 00:22:16.010
<v Speaker 0>Now we don't need any variables, so we

00:22:16.010 --> 00:22:17.930
<v Speaker 0>don't need to parse anything here. So let's

00:22:17.930 --> 00:22:19.690
<v Speaker 0>just click next

00:22:19.875 --> 00:22:20.995
<v Speaker 0>and done.

00:22:22.515 --> 00:22:23.394
<v Speaker 0>Awesome.

00:22:24.115 --> 00:22:26.195
<v Speaker 0>Let's go back to our project environment.

00:22:27.555 --> 00:22:28.274
<v Speaker 0>Click

00:22:29.155 --> 00:22:31.235
<v Speaker 0>and we'll see this field run here.

00:22:31.875 --> 00:22:33.555
<v Speaker 0>Let's kick off a new one.

00:22:35.540 --> 00:22:36.659
<v Speaker 0>Main branch

00:22:39.460 --> 00:22:40.419
<v Speaker 0>and run.

00:22:41.860 --> 00:22:43.139
<v Speaker 0>Fingers crossed.

00:22:44.740 --> 00:22:46.260
<v Speaker 0>And now we can see from the graph

00:22:46.260 --> 00:22:48.340
<v Speaker 0>that the platform is running and that our

00:22:48.340 --> 00:22:50.420
<v Speaker 0>DNS and CDK Terraform

00:22:51.115 --> 00:22:52.315
<v Speaker 0>are dependents.

00:22:54.875 --> 00:22:56.635
<v Speaker 0>So let's give that a few moments to

00:22:56.635 --> 00:22:57.274
<v Speaker 0>finish.

00:22:58.554 --> 00:22:59.355
<v Speaker 0>Ta da.

00:23:02.315 --> 00:23:04.475
<v Speaker 0>Now we have m zero workflows

00:23:05.560 --> 00:23:08.600
<v Speaker 0>handling dependencies and workflows for Pulumi,

00:23:08.600 --> 00:23:10.920
<v Speaker 0>Terraform, and Terraform CDK.

00:23:11.640 --> 00:23:12.360
<v Speaker 0>Sweet.

00:23:12.440 --> 00:23:14.679
<v Speaker 0>So m zero is a really cool tool.

00:23:15.960 --> 00:23:18.280
<v Speaker 0>As you explore infrastructure as code,

00:23:18.985 --> 00:23:21.784
<v Speaker 0>mZero gives you a few key benefits.

00:23:22.985 --> 00:23:26.264
<v Speaker 0>One, it understands Terraform pretty damn well.

00:23:26.904 --> 00:23:28.745
<v Speaker 0>You don't have to worry about your state

00:23:28.745 --> 00:23:31.784
<v Speaker 0>file anymore. Let mZero worry about it for

00:23:31.784 --> 00:23:32.024
<v Speaker 0>you.

00:23:33.980 --> 00:23:36.460
<v Speaker 0>It can also scan and pull out variables

00:23:36.460 --> 00:23:38.460
<v Speaker 0>and bring them into a UI for you

00:23:38.460 --> 00:23:39.339
<v Speaker 0>to configure.

00:23:39.659 --> 00:23:41.500
<v Speaker 0>It gives you a nice graph of all

00:23:41.500 --> 00:23:43.419
<v Speaker 0>the resources that are being created,

00:23:43.659 --> 00:23:46.379
<v Speaker 0>integrates through your source control system for pull

00:23:46.379 --> 00:23:47.740
<v Speaker 0>request updates and plans,

00:23:48.905 --> 00:23:52.265
<v Speaker 0>and handles all the workflows and dependencies across

00:23:52.265 --> 00:23:53.144
<v Speaker 0>these tools.

00:23:54.184 --> 00:23:55.864
<v Speaker 0>I can't state that enough.

00:23:56.105 --> 00:23:58.745
<v Speaker 0>As you adopt infrastructure as code tools, these

00:23:58.745 --> 00:24:00.665
<v Speaker 0>dependencies are always very implicit.

00:24:01.350 --> 00:24:03.990
<v Speaker 0>We always have the big bang problem.

00:24:04.390 --> 00:24:05.750
<v Speaker 0>What if I wanna spin up a new

00:24:05.750 --> 00:24:07.110
<v Speaker 0>environment from scratch?

00:24:07.590 --> 00:24:09.750
<v Speaker 0>Well, it's not a single Pulumi run. It's

00:24:09.750 --> 00:24:11.509
<v Speaker 0>not a single Terraform run.

00:24:11.670 --> 00:24:13.350
<v Speaker 0>It's actually many of the above.

00:24:14.285 --> 00:24:16.125
<v Speaker 0>The m zero brings a way for us

00:24:16.125 --> 00:24:17.644
<v Speaker 0>to codify that too,

00:24:17.965 --> 00:24:19.164
<v Speaker 0>which is pretty neat.

00:24:19.965 --> 00:24:21.645
<v Speaker 0>Go check out m zero at the links

00:24:21.645 --> 00:24:23.804
<v Speaker 0>in the description below and on the screen

00:24:23.804 --> 00:24:24.605
<v Speaker 0>now.

00:24:25.005 --> 00:24:28.684
<v Speaker 0>The code is available at gitlab.com/RawkodeAcademy,

00:24:29.690 --> 00:24:31.610
<v Speaker 0>where by the time you watch this, I'll

00:24:31.610 --> 00:24:33.289
<v Speaker 0>have cleaned up the commit history.

00:24:33.450 --> 00:24:34.250
<v Speaker 0>Promise.

00:24:34.890 --> 00:24:36.570
<v Speaker 0>So go have some fun. We'll catch you

00:24:36.570 --> 00:24:37.130
<v Speaker 0>all next time.
