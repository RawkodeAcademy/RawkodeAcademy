WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 149cc2cc-87c0-4c19-ae25-99ea56307af8
Created: 2025-04-29T15:28:20.209Z
Duration: 6445.5527
Channels: 1

00:02:43.865 --> 00:02:46.665
<v Speaker 0>Hello, and welcome back to the Rawkode Academy.

00:02:47.070 --> 00:02:48.030
<v Speaker 0>Russell,

00:02:48.110 --> 00:02:49.950
<v Speaker 0>save the throne and tell us that hello

00:02:49.950 --> 00:02:51.230
<v Speaker 0>at least. Thank you.

00:02:51.710 --> 00:02:53.630
<v Speaker 0>Alright. My name is David Flanagan, also known

00:02:53.630 --> 00:02:55.390
<v Speaker 0>as Rawkode, and I'm your host for today's

00:02:55.390 --> 00:02:57.870
<v Speaker 0>Rawkode live session. Today, we're taking a look

00:02:57.870 --> 00:02:58.990
<v Speaker 0>at OpenUnison,

00:02:59.535 --> 00:03:03.055
<v Speaker 0>a tool to bring identity management to Kubernetes.

00:03:04.175 --> 00:03:06.175
<v Speaker 0>Now, guiding us today on our journey of

00:03:06.175 --> 00:03:07.375
<v Speaker 0>OpenUnison,

00:03:07.455 --> 00:03:08.415
<v Speaker 0>is

00:03:09.055 --> 00:03:10.975
<v Speaker 0>my friend Mark. Hey, Mark. How's it going?

00:03:11.295 --> 00:03:14.040
<v Speaker 1>Good. Hey, David. How are doing? I am

00:03:14.040 --> 00:03:16.120
<v Speaker 0>doing very, very well. I get to sit

00:03:16.120 --> 00:03:18.280
<v Speaker 0>and play with some Kubernetes software. So I'm

00:03:18.440 --> 00:03:20.360
<v Speaker 1>That's always a good day. I'm I'm pretty

00:03:20.360 --> 00:03:21.000
<v Speaker 0>excited.

00:03:22.040 --> 00:03:23.880
<v Speaker 0>Why don't you say hello and tell us

00:03:23.880 --> 00:03:25.160
<v Speaker 0>a little bit about yourself, please?

00:03:25.905 --> 00:03:27.825
<v Speaker 1>Sure. So my name is Mark Borschin. I

00:03:27.825 --> 00:03:29.105
<v Speaker 1>am the CTO

00:03:29.505 --> 00:03:31.665
<v Speaker 1>and cofounder of Trello Security

00:03:32.065 --> 00:03:35.585
<v Speaker 1>and also the primary author of OpenUnison.

00:03:36.225 --> 00:03:37.505
<v Speaker 1>A little bit of

00:03:38.310 --> 00:03:39.910
<v Speaker 1>where you might have seen me around. I'm

00:03:39.910 --> 00:03:42.390
<v Speaker 1>usually in, like, the SIGAuth

00:03:42.550 --> 00:03:45.670
<v Speaker 1>or really anywhere in in the Kubernetes Slack

00:03:45.670 --> 00:03:47.750
<v Speaker 1>answering questions wherever I can.

00:03:49.269 --> 00:03:52.390
<v Speaker 1>I've made contributions to the Kate's documentation.

00:03:53.504 --> 00:03:56.224
<v Speaker 1>I added some contributions to, like, the dashboard

00:03:56.224 --> 00:03:57.745
<v Speaker 1>around impersonation.

00:03:58.784 --> 00:04:01.185
<v Speaker 1>Have made some contributions. So I've been I've

00:04:01.185 --> 00:04:03.025
<v Speaker 1>been around the community for quite some time.

00:04:03.584 --> 00:04:06.144
<v Speaker 1>Also, I'm gonna do some shameless self promotion

00:04:06.144 --> 00:04:06.465
<v Speaker 1>here.

00:04:08.870 --> 00:04:09.830
<v Speaker 1>Coauthor

00:04:09.830 --> 00:04:10.470
<v Speaker 1>of

00:04:10.870 --> 00:04:11.670
<v Speaker 1>Kubernetes,

00:04:11.670 --> 00:04:13.670
<v Speaker 1>an enterprise guide second edition.

00:04:13.830 --> 00:04:14.390
<v Speaker 1>Nice.

00:04:14.790 --> 00:04:15.590
<v Speaker 1>So

00:04:15.910 --> 00:04:16.390
<v Speaker 1>lot

00:04:17.750 --> 00:04:19.190
<v Speaker 1>of discussion

00:04:19.190 --> 00:04:20.470
<v Speaker 1>of advanced

00:04:21.225 --> 00:04:23.785
<v Speaker 1>Kubernetes topics. So authentication,

00:04:23.785 --> 00:04:24.745
<v Speaker 1>authorization,

00:04:26.105 --> 00:04:27.705
<v Speaker 1>global load balancing.

00:04:28.745 --> 00:04:30.825
<v Speaker 1>We get into Istio,

00:04:31.145 --> 00:04:32.265
<v Speaker 1>and then

00:04:34.770 --> 00:04:37.169
<v Speaker 1>we actually got rid of pod security policies

00:04:37.169 --> 00:04:39.330
<v Speaker 1>and replaced it with open gatekeeper.

00:04:40.530 --> 00:04:42.770
<v Speaker 1>So a a lot of very advanced

00:04:43.729 --> 00:04:45.650
<v Speaker 1>at the end, we also get into

00:04:45.810 --> 00:04:48.770
<v Speaker 1>building out a whole automated GitOps platform,

00:04:49.565 --> 00:04:51.965
<v Speaker 1>which is a lot of fun. So definitely

00:04:52.365 --> 00:04:53.885
<v Speaker 1>would encourage you to take a look at

00:04:53.885 --> 00:04:55.085
<v Speaker 1>the book on Amazon.

00:04:56.205 --> 00:04:56.605
<v Speaker 1>So

00:04:57.485 --> 00:05:00.045
<v Speaker 1>yeah. So that's that's all about me.

00:05:00.365 --> 00:05:02.205
<v Speaker 0>Alright. Let let me throw the low hanging

00:05:02.205 --> 00:05:03.885
<v Speaker 0>fruit question out then by default.

00:05:04.610 --> 00:05:06.850
<v Speaker 0>Sure. I think Kubernetes enterprise ready at the

00:05:06.850 --> 00:05:07.410
<v Speaker 0>box?

00:05:09.490 --> 00:05:10.610
<v Speaker 1>Right. Yeah.

00:05:13.010 --> 00:05:15.330
<v Speaker 1>You know, it it's actually a really great

00:05:15.330 --> 00:05:16.450
<v Speaker 1>question because

00:05:16.850 --> 00:05:17.650
<v Speaker 1>what

00:05:18.375 --> 00:05:19.495
<v Speaker 1>the there there's

00:05:20.535 --> 00:05:22.535
<v Speaker 1>I've always felt that there's a fundamental difference

00:05:22.535 --> 00:05:24.295
<v Speaker 1>between enterprise IT

00:05:24.455 --> 00:05:25.175
<v Speaker 1>and

00:05:25.655 --> 00:05:28.215
<v Speaker 1>service provider IT. So if you if you're

00:05:28.215 --> 00:05:30.055
<v Speaker 1>talking about folks like,

00:05:30.535 --> 00:05:32.319
<v Speaker 1>you know, Airbnb

00:05:32.319 --> 00:05:33.600
<v Speaker 1>and Netflix

00:05:33.600 --> 00:05:35.600
<v Speaker 1>and all of these great businesses there, you

00:05:35.600 --> 00:05:37.280
<v Speaker 1>know, Uber,

00:05:38.160 --> 00:05:40.560
<v Speaker 1>you know, they they they scale these massive

00:05:40.560 --> 00:05:41.360
<v Speaker 1>services,

00:05:42.000 --> 00:05:44.505
<v Speaker 1>and everything is focused on that service. Right?

00:05:44.505 --> 00:05:46.665
<v Speaker 1>Every every microservice that they build, if it's

00:05:46.665 --> 00:05:48.665
<v Speaker 1>Airbnb, ultimately, it's getting you to book the

00:05:48.665 --> 00:05:50.745
<v Speaker 1>road. Yep. You know, if it's Uber, it's

00:05:50.745 --> 00:05:52.345
<v Speaker 1>getting the ride or ordering the meal. If

00:05:52.345 --> 00:05:54.664
<v Speaker 1>it's Netflix, it's to watch the video. Everything

00:05:54.664 --> 00:05:55.945
<v Speaker 1>is focused on that.

00:05:56.425 --> 00:05:59.225
<v Speaker 1>Whereas in the enterprise

00:05:59.225 --> 00:05:59.625
<v Speaker 1>world,

00:06:00.560 --> 00:06:04.480
<v Speaker 1>you have a thing that the IT supports,

00:06:04.480 --> 00:06:05.600
<v Speaker 1>but the IT

00:06:05.920 --> 00:06:08.080
<v Speaker 1>is not the end product.

00:06:08.480 --> 00:06:10.160
<v Speaker 1>So if you're talking about a bank, for

00:06:10.160 --> 00:06:10.880
<v Speaker 1>example,

00:06:11.680 --> 00:06:13.760
<v Speaker 1>it's you know, you have to have IT.

00:06:13.760 --> 00:06:15.495
<v Speaker 1>It's incredibly important, but at the end of

00:06:15.495 --> 00:06:17.575
<v Speaker 1>the day, it's there to support the business

00:06:17.575 --> 00:06:20.135
<v Speaker 1>trend, you know, the the the money transactions.

00:06:21.735 --> 00:06:23.575
<v Speaker 1>You know, you talk about government agencies. We

00:06:23.575 --> 00:06:24.855
<v Speaker 1>do a lot of work in in different

00:06:24.855 --> 00:06:25.655
<v Speaker 1>governments,

00:06:25.975 --> 00:06:28.599
<v Speaker 1>and there are different departments that have different

00:06:28.599 --> 00:06:31.400
<v Speaker 1>missions, and IT is there to support them.

00:06:31.720 --> 00:06:33.720
<v Speaker 1>And so that ends up creating a very

00:06:33.720 --> 00:06:35.400
<v Speaker 1>siloed organization,

00:06:36.280 --> 00:06:39.080
<v Speaker 1>and then that siloed organization then translates down

00:06:39.080 --> 00:06:42.014
<v Speaker 1>to IT. So where in some place like

00:06:42.014 --> 00:06:44.735
<v Speaker 1>an Uber or another service provider,

00:06:44.975 --> 00:06:48.255
<v Speaker 1>you have everybody's working towards that same goal.

00:06:48.655 --> 00:06:50.495
<v Speaker 1>In in most enterprises,

00:06:50.815 --> 00:06:52.095
<v Speaker 1>you have silos

00:06:52.095 --> 00:06:52.735
<v Speaker 1>where

00:06:52.974 --> 00:06:55.455
<v Speaker 1>you as a manager are responsible for a

00:06:55.455 --> 00:06:59.110
<v Speaker 1>a thing. Right? Maybe it's maybe it's registration.

00:06:59.110 --> 00:07:01.110
<v Speaker 1>Maybe it's marketing, whatever that is, and you

00:07:01.110 --> 00:07:02.870
<v Speaker 1>have apps that support it.

00:07:03.350 --> 00:07:04.550
<v Speaker 1>But at the end of the day, your

00:07:04.550 --> 00:07:07.030
<v Speaker 1>bonus, what you get paid for is based

00:07:07.030 --> 00:07:09.350
<v Speaker 1>purely on what you're delivering.

00:07:09.905 --> 00:07:11.905
<v Speaker 1>And so you wanna minimize

00:07:11.905 --> 00:07:12.945
<v Speaker 1>the amount

00:07:13.185 --> 00:07:14.705
<v Speaker 1>of outside

00:07:16.705 --> 00:07:17.505
<v Speaker 1>interference,

00:07:17.505 --> 00:07:18.544
<v Speaker 1>outside risk.

00:07:18.625 --> 00:07:20.305
<v Speaker 1>Right? You wanna own as much of that

00:07:20.305 --> 00:07:21.264
<v Speaker 1>as possible.

00:07:21.505 --> 00:07:23.824
<v Speaker 1>And so most enterprises, you get a a

00:07:23.824 --> 00:07:25.900
<v Speaker 1>couple of phenomena where you get a lot

00:07:25.900 --> 00:07:26.860
<v Speaker 1>of replication.

00:07:28.060 --> 00:07:29.980
<v Speaker 1>You know? So, like, I've been I've been

00:07:29.980 --> 00:07:32.460
<v Speaker 1>preaching multi tenancy in Kubernetes since

00:07:32.860 --> 00:07:34.060
<v Speaker 1>01/13

00:07:34.060 --> 00:07:36.060
<v Speaker 1>was RBAC, I think, when RBAC.

00:07:36.780 --> 00:07:37.980
<v Speaker 1>I think that was RBAC.

00:07:39.015 --> 00:07:41.015
<v Speaker 1>You know, I I had a I had

00:07:41.015 --> 00:07:42.695
<v Speaker 1>a booth. Tremolo had a booth at the

00:07:42.695 --> 00:07:43.255
<v Speaker 1>first

00:07:43.735 --> 00:07:45.735
<v Speaker 1>KubeCon that was in Seattle when it still

00:07:45.735 --> 00:07:47.975
<v Speaker 1>fit in a hotel

00:07:48.295 --> 00:07:49.175
<v Speaker 1>ballroom,

00:07:49.335 --> 00:07:50.935
<v Speaker 1>you know, in in the lobby.

00:07:51.175 --> 00:07:53.975
<v Speaker 1>And I was talking to people about multitenant

00:07:53.970 --> 00:07:56.210
<v Speaker 1>Kubernetes, and they were looking at me like,

00:07:56.210 --> 00:07:57.490
<v Speaker 1>are you insane?

00:07:57.490 --> 00:07:59.250
<v Speaker 1>Just have another cluster.

00:07:59.490 --> 00:08:00.290
<v Speaker 1>You

00:08:00.690 --> 00:08:02.450
<v Speaker 1>know? And and that works great when you

00:08:02.450 --> 00:08:04.770
<v Speaker 1>have a lot of Kubernetes talent to manage

00:08:04.770 --> 00:08:05.250
<v Speaker 1>it.

00:08:05.570 --> 00:08:06.850
<v Speaker 1>You know, I don't know if you're aware

00:08:06.850 --> 00:08:08.290
<v Speaker 1>of this, David, but it's very hard to

00:08:08.290 --> 00:08:10.535
<v Speaker 1>debug Kubernetes clusters if they break.

00:08:12.135 --> 00:08:14.215
<v Speaker 1>You might have heard that once you've I've

00:08:14.215 --> 00:08:17.015
<v Speaker 0>got some experience there. Just a Yeah. Exactly.

00:08:17.975 --> 00:08:19.655
<v Speaker 1>You know, setting them up is pretty easy

00:08:19.655 --> 00:08:21.415
<v Speaker 1>these days. But if they break,

00:08:21.919 --> 00:08:23.680
<v Speaker 1>that's where things get really hard.

00:08:24.000 --> 00:08:25.600
<v Speaker 1>And most enterprises

00:08:26.160 --> 00:08:27.760
<v Speaker 1>just don't have the talent.

00:08:28.160 --> 00:08:30.400
<v Speaker 1>You know, the people don't have the knowledge.

00:08:30.400 --> 00:08:32.159
<v Speaker 1>So be like, oh, I spun up this

00:08:32.159 --> 00:08:34.880
<v Speaker 1>Kubernetes cluster, and it works great. And then

00:08:34.880 --> 00:08:37.600
<v Speaker 1>it breaks, and it's like, okay. Now what?

00:08:38.215 --> 00:08:40.215
<v Speaker 1>You know, if it's managed, it's a little

00:08:40.215 --> 00:08:41.095
<v Speaker 1>bit easier.

00:08:41.255 --> 00:08:41.815
<v Speaker 1>But,

00:08:42.375 --> 00:08:43.495
<v Speaker 1>you know so so

00:08:44.054 --> 00:08:46.215
<v Speaker 1>the when you get into enterprise,

00:08:46.295 --> 00:08:49.255
<v Speaker 1>you're dealing as much with silos as you

00:08:49.255 --> 00:08:50.535
<v Speaker 1>are with technology.

00:08:51.009 --> 00:08:53.089
<v Speaker 1>And in the Kubernetes world,

00:08:53.329 --> 00:08:56.449
<v Speaker 1>that tends to manifest itself in a couple

00:08:56.449 --> 00:08:58.130
<v Speaker 1>ways. One is multi tenancy.

00:08:58.370 --> 00:09:00.769
<v Speaker 1>You know, do I go with multiple clusters,

00:09:01.009 --> 00:09:02.050
<v Speaker 1>or do I go with,

00:09:02.449 --> 00:09:05.329
<v Speaker 1>know, many small clusters, which, you know, tends

00:09:05.329 --> 00:09:06.769
<v Speaker 1>to be people's first instinct,

00:09:07.145 --> 00:09:08.425
<v Speaker 1>or larger

00:09:09.385 --> 00:09:12.265
<v Speaker 1>small a smaller number of larger clusters.

00:09:14.345 --> 00:09:17.225
<v Speaker 1>And, you know, the the there's definitely been

00:09:17.225 --> 00:09:20.720
<v Speaker 1>a drift towards that multitenancy world, especially in

00:09:20.720 --> 00:09:22.320
<v Speaker 1>the last couple of years as as the

00:09:22.320 --> 00:09:23.760
<v Speaker 1>technology has improved

00:09:24.000 --> 00:09:26.000
<v Speaker 1>because you can provide that,

00:09:26.800 --> 00:09:28.560
<v Speaker 1>you know, that that silo.

00:09:29.200 --> 00:09:31.440
<v Speaker 1>And then the other thing is the this

00:09:31.440 --> 00:09:32.639
<v Speaker 1>move from

00:09:34.375 --> 00:09:36.695
<v Speaker 1>expecting Kubernetes to always be

00:09:37.334 --> 00:09:39.975
<v Speaker 1>interacted with by a CICD pipeline.

00:09:40.615 --> 00:09:42.694
<v Speaker 1>You know, in in in the services world,

00:09:42.694 --> 00:09:44.855
<v Speaker 1>it's always, well, I don't want people interacting

00:09:44.855 --> 00:09:45.975
<v Speaker 1>with clusters.

00:09:46.855 --> 00:09:49.420
<v Speaker 1>Okay. Well, that there is a lot of

00:09:49.420 --> 00:09:51.740
<v Speaker 1>value to that, especially in the microservices world.

00:09:51.740 --> 00:09:52.940
<v Speaker 1>But in the enterprise, you got a lot

00:09:52.940 --> 00:09:53.980
<v Speaker 1>of monoliths.

00:09:54.620 --> 00:09:55.260
<v Speaker 1>And

00:09:55.660 --> 00:09:57.740
<v Speaker 1>the people who own those monoliths,

00:09:57.740 --> 00:10:00.700
<v Speaker 1>if you tell them you can't log in

00:10:00.700 --> 00:10:01.500
<v Speaker 1>to the pod,

00:10:02.395 --> 00:10:03.435
<v Speaker 1>oh, you're

00:10:03.995 --> 00:10:05.995
<v Speaker 1>get to explain that one to the CIO

00:10:05.995 --> 00:10:07.355
<v Speaker 1>when there's a problem.

00:10:09.275 --> 00:10:09.835
<v Speaker 1>So it

00:10:10.475 --> 00:10:12.875
<v Speaker 1>it's developing the technology in a way to

00:10:12.875 --> 00:10:14.635
<v Speaker 1>deal with those silos. And that's what we

00:10:14.635 --> 00:10:15.995
<v Speaker 1>spend a lot of time with in the

00:10:15.995 --> 00:10:18.880
<v Speaker 1>book is what are the technologies that you

00:10:18.880 --> 00:10:21.200
<v Speaker 1>need to know to properly handle these silos?

00:10:21.200 --> 00:10:23.440
<v Speaker 1>Because what what I'll often see when I

00:10:23.440 --> 00:10:25.440
<v Speaker 1>go and I talk to either a government

00:10:25.440 --> 00:10:27.840
<v Speaker 1>agency or a company that's getting started with

00:10:28.000 --> 00:10:30.240
<v Speaker 1>even DevOps in general, not even just Kubernetes,

00:10:30.585 --> 00:10:33.225
<v Speaker 1>is they have this big grandiose idea of

00:10:33.225 --> 00:10:35.465
<v Speaker 1>a PaaS that they wanna build. And they

00:10:35.465 --> 00:10:37.385
<v Speaker 1>say, we're gonna build it, and it's going

00:10:37.385 --> 00:10:38.185
<v Speaker 1>to be a

00:10:38.505 --> 00:10:39.625
<v Speaker 1>product.

00:10:40.665 --> 00:10:41.305
<v Speaker 1>And

00:10:41.545 --> 00:10:43.625
<v Speaker 1>usually consultants who are saying, we're gonna build

00:10:43.625 --> 00:10:44.680
<v Speaker 1>a product for you.

00:10:45.400 --> 00:10:47.240
<v Speaker 1>And it's gonna be this product,

00:10:47.560 --> 00:10:50.920
<v Speaker 1>and it's gonna be, you know, choose from

00:10:50.920 --> 00:10:53.000
<v Speaker 1>column a, column b, column c, and that's

00:10:53.000 --> 00:10:53.480
<v Speaker 1>it.

00:10:53.800 --> 00:10:56.760
<v Speaker 1>And, you know, we're gonna maintain and manage

00:10:56.760 --> 00:10:57.560
<v Speaker 1>everything for you.

00:10:58.805 --> 00:11:01.205
<v Speaker 1>And when you get into enterprise,

00:11:01.685 --> 00:11:03.605
<v Speaker 1>you start running into all these little corner

00:11:03.605 --> 00:11:05.765
<v Speaker 1>cases and edge cases, and all of a

00:11:05.765 --> 00:11:07.445
<v Speaker 1>sudden, we the team that owns this

00:11:07.765 --> 00:11:08.645
<v Speaker 1>becomes

00:11:09.365 --> 00:11:11.045
<v Speaker 1>the people who are the roadblock.

00:11:12.430 --> 00:11:15.070
<v Speaker 1>And so they're the ones answering the question,

00:11:15.070 --> 00:11:16.910
<v Speaker 1>well, why hasn't this been done yet? If

00:11:16.910 --> 00:11:19.470
<v Speaker 1>I just had a VPC, I could do

00:11:19.470 --> 00:11:19.950
<v Speaker 1>this.

00:11:20.350 --> 00:11:21.790
<v Speaker 1>Well, we do it this way to make

00:11:21.790 --> 00:11:23.950
<v Speaker 1>your life easier, but you're not making my

00:11:23.950 --> 00:11:24.830
<v Speaker 1>life easier.

00:11:25.625 --> 00:11:27.305
<v Speaker 1>And so then it swings to the other

00:11:27.305 --> 00:11:29.145
<v Speaker 1>way where, like, you know what? We're just

00:11:29.145 --> 00:11:31.065
<v Speaker 1>gonna give you an empty cluster and be

00:11:31.065 --> 00:11:31.865
<v Speaker 1>done with it.

00:11:32.425 --> 00:11:34.985
<v Speaker 1>And whatever happens, that's totally on you. So

00:11:34.985 --> 00:11:37.225
<v Speaker 1>you get these pendulum swings back and forth.

00:11:37.569 --> 00:11:40.129
<v Speaker 1>Whereas the beautiful thing about Kubernetes, and this

00:11:40.129 --> 00:11:41.970
<v Speaker 1>one of the reasons I I I've always

00:11:41.970 --> 00:11:42.930
<v Speaker 1>loved it.

00:11:43.810 --> 00:11:46.690
<v Speaker 1>And and, you know, Kelsey Hightower nailed it

00:11:46.690 --> 00:11:47.810
<v Speaker 1>right on the head as the way he

00:11:47.810 --> 00:11:50.769
<v Speaker 1>usually does. It's a platform for building platforms.

00:11:51.009 --> 00:11:51.570
<v Speaker 1>So

00:11:51.810 --> 00:11:52.690
<v Speaker 1>you can go

00:11:53.385 --> 00:11:55.945
<v Speaker 1>kind of that PaaS route if you really

00:11:55.945 --> 00:11:56.825
<v Speaker 1>want to,

00:11:57.385 --> 00:11:59.065
<v Speaker 1>or you can go the open route or

00:11:59.065 --> 00:12:00.585
<v Speaker 1>you can go anywhere in between, and there's

00:12:00.585 --> 00:12:02.265
<v Speaker 1>a lot of flexibility there.

00:12:02.825 --> 00:12:04.665
<v Speaker 1>And so that's that's the approach we take

00:12:04.665 --> 00:12:05.385
<v Speaker 1>in the book is,

00:12:05.920 --> 00:12:08.560
<v Speaker 1>you know, the authentication, the authorization.

00:12:10.080 --> 00:12:12.640
<v Speaker 1>Yeah. When when we start talking about backups,

00:12:12.640 --> 00:12:14.240
<v Speaker 1>you know, it's not the sexiest thing in

00:12:14.240 --> 00:12:15.760
<v Speaker 1>the world, but you gotta do it.

00:12:16.160 --> 00:12:16.720
<v Speaker 1>Right?

00:12:17.440 --> 00:12:19.120
<v Speaker 1>And then even when we start getting into

00:12:19.120 --> 00:12:21.065
<v Speaker 1>GitOps, we start talking about, okay. Well, what

00:12:21.065 --> 00:12:22.985
<v Speaker 1>does multi tenancy look like in Kubernetes? Because

00:12:22.985 --> 00:12:24.185
<v Speaker 1>it ain't just Kubernetes.

00:12:24.584 --> 00:12:26.425
<v Speaker 1>You know, you've got something that's storing your

00:12:26.425 --> 00:12:29.065
<v Speaker 1>Git, right, especially if you're talking about GitOps.

00:12:29.065 --> 00:12:31.305
<v Speaker 1>You've got a GitOps controller, so you're talking

00:12:31.305 --> 00:12:33.305
<v Speaker 1>usually Argo or Flux. So what does that

00:12:33.305 --> 00:12:34.825
<v Speaker 1>look like in a multi tenant situation?

00:12:35.379 --> 00:12:36.339
<v Speaker 1>You

00:12:36.579 --> 00:12:38.180
<v Speaker 1>know? And then what are the policies that

00:12:38.180 --> 00:12:40.019
<v Speaker 1>you gotta think of, you know, like,

00:12:40.899 --> 00:12:43.220
<v Speaker 1>you know, change control boards. How do you

00:12:43.220 --> 00:12:45.940
<v Speaker 1>do cloud native change control boards? That's fun.

00:12:46.180 --> 00:12:49.139
<v Speaker 1>Or, you know, dealing with privileged access accounts.

00:12:49.139 --> 00:12:50.339
<v Speaker 1>And and so

00:12:51.045 --> 00:12:52.885
<v Speaker 1>so yeah. So we we get a note

00:12:52.885 --> 00:12:55.445
<v Speaker 1>to a lot of those very advanced enterprise

00:12:55.445 --> 00:12:56.325
<v Speaker 1>topics

00:12:56.485 --> 00:12:58.805
<v Speaker 1>that don't don't always come up when when

00:12:58.805 --> 00:13:00.325
<v Speaker 1>you're reading through the blogs.

00:13:01.125 --> 00:13:01.925
<v Speaker 0>Awesome.

00:13:02.404 --> 00:13:04.485
<v Speaker 0>That was a lot of information there.

00:13:05.685 --> 00:13:07.990
<v Speaker 0>And what I what I love is that,

00:13:07.990 --> 00:13:09.670
<v Speaker 0>you know, I I haven't spent a lot

00:13:09.670 --> 00:13:11.830
<v Speaker 0>of time in the enterprise environment. I, you

00:13:11.830 --> 00:13:13.430
<v Speaker 0>know, I haven't worked for a bank since,

00:13:13.430 --> 00:13:15.430
<v Speaker 0>what, 2012

00:13:15.430 --> 00:13:17.350
<v Speaker 0>maybe. So just, you know, before my my

00:13:17.350 --> 00:13:18.870
<v Speaker 0>Kubernetes days, before Kubernetes.

00:13:20.215 --> 00:13:21.335
<v Speaker 0>And a lot of the things you were

00:13:21.335 --> 00:13:24.295
<v Speaker 0>saying there kinda gave me little flashbacks, and

00:13:24.295 --> 00:13:25.495
<v Speaker 0>I said, oh, shit. Yeah. That was the

00:13:25.495 --> 00:13:27.175
<v Speaker 0>thing. And, like Is that why I saw

00:13:27.175 --> 00:13:29.095
<v Speaker 1>that cold look of terror on your face?

00:13:29.655 --> 00:13:31.175
<v Speaker 0>Well, yeah. But it's it's made me realize

00:13:31.175 --> 00:13:32.550
<v Speaker 0>that I have a lot of bias in

00:13:32.550 --> 00:13:34.470
<v Speaker 0>the discussions that I have these days because,

00:13:34.470 --> 00:13:37.030
<v Speaker 0>like you said, right, I feel from the

00:13:37.030 --> 00:13:38.550
<v Speaker 0>conversations that I have and the people that

00:13:38.550 --> 00:13:41.110
<v Speaker 0>I speak to at events is that the

00:13:41.350 --> 00:13:44.310
<v Speaker 0>dogmatic advice these days is to have lots

00:13:44.310 --> 00:13:45.670
<v Speaker 0>and lots of small clusters.

00:13:46.325 --> 00:13:48.165
<v Speaker 0>But when you think about it from the

00:13:48.165 --> 00:13:50.725
<v Speaker 0>enterprise perspective, like, that's a lot of authentication

00:13:50.725 --> 00:13:52.725
<v Speaker 0>batteries, and that's a lot of moving targets.

00:13:52.725 --> 00:13:55.125
<v Speaker 0>And that's the the I mean, even the

00:13:55.125 --> 00:13:55.925
<v Speaker 0>process

00:13:56.565 --> 00:13:57.845
<v Speaker 0>around handling that,

00:13:58.430 --> 00:14:00.110
<v Speaker 0>I can see why they would push towards

00:14:00.110 --> 00:14:03.230
<v Speaker 0>actually, no. I want large clusters because usually

00:14:03.230 --> 00:14:04.990
<v Speaker 0>they have the money as well to throw

00:14:04.990 --> 00:14:07.069
<v Speaker 0>at this high this kind of hardware build

00:14:07.069 --> 00:14:09.149
<v Speaker 0>or data center or even just give it

00:14:09.149 --> 00:14:11.149
<v Speaker 0>all to AWS. But, yeah, they would want

00:14:11.149 --> 00:14:12.910
<v Speaker 0>fewer clusters because it's less for them to

00:14:12.910 --> 00:14:13.790
<v Speaker 0>build process

00:14:14.615 --> 00:14:16.935
<v Speaker 0>and isolation around. So I never yeah.

00:14:17.335 --> 00:14:18.935
<v Speaker 0>You're flipping around a lot of the bias

00:14:18.935 --> 00:14:20.214
<v Speaker 0>that I had in my head just because

00:14:20.214 --> 00:14:22.135
<v Speaker 0>I haven't been working with those kind of

00:14:22.135 --> 00:14:23.654
<v Speaker 0>clients or those kind of people in such

00:14:23.654 --> 00:14:25.335
<v Speaker 0>a long time, but it makes a lot

00:14:25.335 --> 00:14:25.654
<v Speaker 0>of sense.

00:14:26.760 --> 00:14:29.000
<v Speaker 0>And get up, small eternity, like, for fuck's

00:14:29.000 --> 00:14:31.480
<v Speaker 0>sake. Like, that is such a beast as

00:14:31.480 --> 00:14:33.320
<v Speaker 0>well. Like, I mean, I don't even think

00:14:33.320 --> 00:14:35.480
<v Speaker 0>it was recent it was very recently, I

00:14:35.480 --> 00:14:37.400
<v Speaker 0>think, ArgoCD even supported

00:14:37.480 --> 00:14:40.280
<v Speaker 0>deploying it within a single namespace. It still

00:14:40.524 --> 00:14:43.005
<v Speaker 1>does. Like, it kinda does.

00:14:43.084 --> 00:14:44.045
<v Speaker 1>One

00:14:44.925 --> 00:14:46.524
<v Speaker 1>of the challenges with Argo

00:14:46.925 --> 00:14:49.565
<v Speaker 1>and I love Argo. Argo like, if if

00:14:49.565 --> 00:14:50.925
<v Speaker 1>I have a choice as to what I'm

00:14:50.925 --> 00:14:53.245
<v Speaker 1>gonna go with and I'm actually we might

00:14:53.245 --> 00:14:55.005
<v Speaker 1>even see a little demo with Argo today.

00:14:56.370 --> 00:14:58.050
<v Speaker 1>I like Argo because

00:14:58.210 --> 00:15:00.370
<v Speaker 1>coming from the enterprise world, I love my

00:15:00.370 --> 00:15:01.970
<v Speaker 1>GUIs. Yeah. I really do.

00:15:02.530 --> 00:15:04.530
<v Speaker 1>I know I'm in the minority in this

00:15:04.530 --> 00:15:07.170
<v Speaker 1>land, but I I I love a good

00:15:07.170 --> 00:15:08.610
<v Speaker 1>GUI. It makes my life easier.

00:15:09.235 --> 00:15:11.955
<v Speaker 1>You know, we we don't just do product.

00:15:11.955 --> 00:15:14.035
<v Speaker 1>We also do operations for some of our

00:15:14.035 --> 00:15:14.755
<v Speaker 1>customers.

00:15:15.155 --> 00:15:15.715
<v Speaker 1>And

00:15:17.155 --> 00:15:18.675
<v Speaker 1>I can tell you there have been many

00:15:18.675 --> 00:15:21.155
<v Speaker 1>a time where I have pulled up the

00:15:21.155 --> 00:15:22.675
<v Speaker 1>Kubernetes dashboard

00:15:22.835 --> 00:15:23.715
<v Speaker 1>securely

00:15:23.715 --> 00:15:24.675
<v Speaker 1>on this thing

00:15:25.100 --> 00:15:26.620
<v Speaker 1>and done something important,

00:15:27.100 --> 00:15:27.500
<v Speaker 1>and

00:15:28.860 --> 00:15:29.980
<v Speaker 1>it works great.

00:15:30.300 --> 00:15:30.780
<v Speaker 1>Yeah.

00:15:31.500 --> 00:15:32.620
<v Speaker 1>You know? So

00:15:33.100 --> 00:15:35.260
<v Speaker 1>I I do like Argo. The the issue

00:15:35.260 --> 00:15:36.140
<v Speaker 1>with Argo

00:15:36.300 --> 00:15:37.900
<v Speaker 1>with multitenancy that

00:15:38.275 --> 00:15:40.355
<v Speaker 1>that people miss is

00:15:40.515 --> 00:15:41.955
<v Speaker 1>Argo uses

00:15:42.195 --> 00:15:45.075
<v Speaker 1>the a cluster admin service account for all

00:15:45.075 --> 00:15:46.355
<v Speaker 1>of its synchronization.

00:15:46.995 --> 00:15:49.155
<v Speaker 1>And so if

00:15:49.155 --> 00:15:53.120
<v Speaker 1>you get if if you don't predefine

00:15:53.120 --> 00:15:55.200
<v Speaker 1>in Argo's RBAC

00:15:55.280 --> 00:15:58.080
<v Speaker 1>or in the project which objects can be

00:15:58.080 --> 00:15:58.800
<v Speaker 1>synced,

00:15:59.520 --> 00:16:02.080
<v Speaker 1>you could check-in, like, a

00:16:03.120 --> 00:16:05.120
<v Speaker 1>resource quota update as an example.

00:16:05.785 --> 00:16:08.265
<v Speaker 1>And Argo will sync it

00:16:08.665 --> 00:16:10.665
<v Speaker 1>because there's no RBAC

00:16:10.665 --> 00:16:13.225
<v Speaker 1>there. Well, these get ops operators, like, the

00:16:13.225 --> 00:16:14.905
<v Speaker 0>root and the cluster. I mean, the only

00:16:14.905 --> 00:16:17.305
<v Speaker 0>difference between them and Teller, which we all

00:16:17.305 --> 00:16:19.480
<v Speaker 0>kicked out really quickly, is that Teller has

00:16:19.480 --> 00:16:21.400
<v Speaker 0>a whole API. Teller. People could run from

00:16:21.400 --> 00:16:24.280
<v Speaker 0>their own machines, and GitOps doesn't. But still,

00:16:24.360 --> 00:16:26.760
<v Speaker 0>I mean, it it's written in your cluster.

00:16:26.760 --> 00:16:27.160
<v Speaker 0>Yeah.

00:16:27.640 --> 00:16:29.000
<v Speaker 1>I mean, there there are

00:16:29.320 --> 00:16:32.360
<v Speaker 1>so, like, Anthos actually does do it correctly.

00:16:33.775 --> 00:16:34.735
<v Speaker 1>Anthos

00:16:34.975 --> 00:16:36.495
<v Speaker 0>Centimeters, contact manager?

00:16:36.655 --> 00:16:39.135
<v Speaker 0>Does mean? Manager. Thank you. Where they actually

00:16:39.135 --> 00:16:41.775
<v Speaker 1>let you specify for each namespace

00:16:41.775 --> 00:16:43.855
<v Speaker 1>a different service account to use.

00:16:44.175 --> 00:16:47.455
<v Speaker 1>I think we've works or Flux does that

00:16:47.455 --> 00:16:47.855
<v Speaker 1>too.

00:16:49.890 --> 00:16:53.490
<v Speaker 1>What the Argo folks originally had a like,

00:16:53.490 --> 00:16:55.410
<v Speaker 1>they actually had a PR to do it,

00:16:55.810 --> 00:16:57.970
<v Speaker 1>and then they gave up on it when

00:16:57.970 --> 00:17:01.650
<v Speaker 1>application sets got merged because that actually solved

00:17:01.650 --> 00:17:03.090
<v Speaker 1>what they thought was the problem.

00:17:05.234 --> 00:17:05.875
<v Speaker 1>But

00:17:07.555 --> 00:17:09.395
<v Speaker 1>yeah. I I have also not run into

00:17:09.395 --> 00:17:10.994
<v Speaker 1>a lot of folks besides me who think

00:17:10.994 --> 00:17:13.875
<v Speaker 1>that Argo should be a multi tenant system.

00:17:14.275 --> 00:17:15.795
<v Speaker 1>I still tend to be a little ahead

00:17:15.795 --> 00:17:16.835
<v Speaker 1>of the curve on that one.

00:17:18.640 --> 00:17:19.279
<v Speaker 1>But

00:17:19.760 --> 00:17:21.440
<v Speaker 1>yeah. It's you know?

00:17:21.920 --> 00:17:23.679
<v Speaker 1>And and it's not just Argo. Right? I

00:17:23.679 --> 00:17:25.119
<v Speaker 1>mean, you think about a cluster.

00:17:25.920 --> 00:17:28.720
<v Speaker 1>Your cluster is more than just Kubernetes. Right?

00:17:28.800 --> 00:17:30.480
<v Speaker 1>You've got monitoring.

00:17:31.475 --> 00:17:33.235
<v Speaker 1>You've got you know, and and that monitoring

00:17:33.235 --> 00:17:34.755
<v Speaker 1>system has identities.

00:17:34.835 --> 00:17:35.395
<v Speaker 1>Mhmm.

00:17:35.715 --> 00:17:37.555
<v Speaker 1>You've got yeah. Even if you're just using

00:17:37.555 --> 00:17:40.915
<v Speaker 1>Prometheus and Grafana, you want everybody seeing it.

00:17:42.035 --> 00:17:42.675
<v Speaker 1>You've got,

00:17:44.799 --> 00:17:46.720
<v Speaker 1>you know, you've got your GitOps controller. You

00:17:46.720 --> 00:17:48.399
<v Speaker 1>might have GitLab running locally.

00:17:48.880 --> 00:17:49.599
<v Speaker 1>Right?

00:17:50.240 --> 00:17:51.440
<v Speaker 1>You know? And then

00:17:51.919 --> 00:17:54.000
<v Speaker 1>if you're running Istio, KeyOwl, he's got a

00:17:54.000 --> 00:17:55.760
<v Speaker 1>dashboard. Well, you need security around that.

00:17:57.325 --> 00:17:59.485
<v Speaker 1>You know, traffic has its own dashboard. You

00:17:59.485 --> 00:18:01.645
<v Speaker 1>probably wanna have some security around that. So

00:18:01.645 --> 00:18:04.365
<v Speaker 1>a lot of things end up piling into

00:18:04.365 --> 00:18:06.124
<v Speaker 1>this very, very quickly.

00:18:06.205 --> 00:18:08.605
<v Speaker 1>Yep. And and the hardest part is really

00:18:08.605 --> 00:18:09.164
<v Speaker 1>just

00:18:10.120 --> 00:18:12.999
<v Speaker 1>figuring out where the identities all fit together.

00:18:14.360 --> 00:18:16.359
<v Speaker 1>You know? So, like, you know,

00:18:17.640 --> 00:18:19.240
<v Speaker 1>I kinda like to talk about, you know,

00:18:19.240 --> 00:18:21.400
<v Speaker 1>supply chain security is the the big buzzword

00:18:21.400 --> 00:18:23.159
<v Speaker 1>now. Right? Like, it's s bombs.

00:18:24.565 --> 00:18:26.405
<v Speaker 1>And that stuff's really important. Don't get me

00:18:26.405 --> 00:18:28.485
<v Speaker 1>wrong. Yep. I've been beating that drum for

00:18:28.485 --> 00:18:29.765
<v Speaker 1>a long time,

00:18:30.565 --> 00:18:31.205
<v Speaker 1>but

00:18:31.525 --> 00:18:34.805
<v Speaker 1>identity management is a core piece of supply

00:18:34.805 --> 00:18:36.565
<v Speaker 1>chain security that a lot of people don't

00:18:36.565 --> 00:18:37.125
<v Speaker 1>think about.

00:18:38.320 --> 00:18:40.559
<v Speaker 1>I'm actually doing a workshop

00:18:40.559 --> 00:18:43.039
<v Speaker 1>with John Osborne from ChainGuard

00:18:43.120 --> 00:18:46.080
<v Speaker 1>at the B Sides Northern Virginia next Friday.

00:18:46.080 --> 00:18:47.919
<v Speaker 1>So if anybody's watching in DC,

00:18:48.639 --> 00:18:49.679
<v Speaker 1>would love to see you

00:18:51.125 --> 00:18:52.885
<v Speaker 1>about supply chain security.

00:18:53.125 --> 00:18:53.765
<v Speaker 1>And,

00:18:54.005 --> 00:18:55.765
<v Speaker 1>you know, if you think about

00:18:56.245 --> 00:18:58.965
<v Speaker 1>GitOps, you've got GitHub repos.

00:18:59.285 --> 00:19:00.965
<v Speaker 1>You've got your cluster.

00:19:01.125 --> 00:19:02.725
<v Speaker 1>You've got a GitOps controller.

00:19:03.600 --> 00:19:06.000
<v Speaker 1>Well, the GitOps controller has to talk to

00:19:06.000 --> 00:19:08.400
<v Speaker 1>your GitHub repo. What identity are you gonna

00:19:08.400 --> 00:19:08.879
<v Speaker 1>use?

00:19:10.640 --> 00:19:13.600
<v Speaker 1>You have a GitHub action that creates a

00:19:13.600 --> 00:19:14.320
<v Speaker 1>container

00:19:14.400 --> 00:19:16.720
<v Speaker 1>and pushes that container into a registry.

00:19:17.595 --> 00:19:19.274
<v Speaker 1>What identity are you gonna use?

00:19:19.835 --> 00:19:22.715
<v Speaker 1>Are you gonna use a static key? I

00:19:22.715 --> 00:19:23.434
<v Speaker 1>hope not.

00:19:25.115 --> 00:19:27.674
<v Speaker 1>You know, you've got and and then building

00:19:27.674 --> 00:19:28.475
<v Speaker 1>these things.

00:19:28.875 --> 00:19:30.670
<v Speaker 1>How are you gonna automate that? Because you

00:19:30.670 --> 00:19:32.350
<v Speaker 1>don't want to build that stuff manually.

00:19:33.070 --> 00:19:35.550
<v Speaker 1>And so the that that's all built in

00:19:35.550 --> 00:19:38.350
<v Speaker 1>to you know, identity management's a big part

00:19:38.350 --> 00:19:40.110
<v Speaker 1>of that that I

00:19:40.990 --> 00:19:42.590
<v Speaker 1>think a lot of people are missing when

00:19:42.590 --> 00:19:45.315
<v Speaker 1>when they talk about supply chain security. And

00:19:45.315 --> 00:19:47.475
<v Speaker 1>that that's really where where, you know, I'm

00:19:47.475 --> 00:19:48.675
<v Speaker 1>hoping to show you a little bit of

00:19:48.675 --> 00:19:50.835
<v Speaker 1>that today where where really our sweet spot

00:19:50.835 --> 00:19:51.475
<v Speaker 1>hits.

00:19:51.715 --> 00:19:54.595
<v Speaker 0>Well, you have no set. Supplies in security

00:19:54.595 --> 00:19:56.755
<v Speaker 0>five times, and we've had two VCs phone

00:19:56.755 --> 00:19:57.715
<v Speaker 0>in and offer each other. Yeah.

00:20:00.490 --> 00:20:02.010
<v Speaker 1>Alright. That's okay. They won't give me any

00:20:02.010 --> 00:20:02.490
<v Speaker 1>money.

00:20:03.850 --> 00:20:04.570
<v Speaker 0>No.

00:20:05.530 --> 00:20:08.090
<v Speaker 0>Identity is obviously a big thing. Multi currency

00:20:08.090 --> 00:20:09.850
<v Speaker 0>is is definitely you know, we have a

00:20:09.850 --> 00:20:11.610
<v Speaker 0>SEC dedicated to it now. We're trying to

00:20:11.610 --> 00:20:13.610
<v Speaker 0>improve this in the Kubernetes. I mean

00:20:13.850 --> 00:20:14.170
<v Speaker 1>Yep.

00:20:14.755 --> 00:20:16.595
<v Speaker 0>Is there software out there that can help

00:20:16.595 --> 00:20:19.235
<v Speaker 0>us with this chaotic problem within a Kubernetes

00:20:19.235 --> 00:20:21.955
<v Speaker 0>system? It's funny that you asked that, David.

00:20:21.955 --> 00:20:23.075
<v Speaker 1>Yes. There is.

00:20:23.554 --> 00:20:25.395
<v Speaker 1>So what does OpenUnison do? So I haven't

00:20:25.395 --> 00:20:27.395
<v Speaker 1>really talked a lot about what OpenUnison does.

00:20:28.920 --> 00:20:29.560
<v Speaker 1>So,

00:20:29.880 --> 00:20:31.880
<v Speaker 1>you know, the open source identity management, which

00:20:31.880 --> 00:20:33.800
<v Speaker 1>can mean a bazillion different things.

00:20:35.160 --> 00:20:38.200
<v Speaker 1>Our largest implementations are actually have nothing to

00:20:38.200 --> 00:20:39.800
<v Speaker 1>do with Kubernetes.

00:20:41.174 --> 00:20:43.894
<v Speaker 1>We started off Trello Security started off nice

00:20:43.894 --> 00:20:45.334
<v Speaker 1>Metallica shirt, by the way.

00:20:46.534 --> 00:20:50.134
<v Speaker 1>Kubernetes start or Trello Security started off as

00:20:50.134 --> 00:20:53.174
<v Speaker 1>a idea to simplify authentication

00:20:53.174 --> 00:20:54.455
<v Speaker 1>using reverse proxies.

00:20:55.190 --> 00:20:57.269
<v Speaker 1>So that should sound a little familiar.

00:20:58.630 --> 00:20:59.269
<v Speaker 1>And

00:20:59.990 --> 00:21:02.150
<v Speaker 1>the original idea was actually to use Kerberos

00:21:02.150 --> 00:21:03.350
<v Speaker 1>to eliminate

00:21:03.670 --> 00:21:05.590
<v Speaker 1>agents. And yeah. Yeah.

00:21:06.230 --> 00:21:07.670
<v Speaker 1>It failed miserably.

00:21:07.670 --> 00:21:08.310
<v Speaker 1>It was great.

00:21:09.765 --> 00:21:10.405
<v Speaker 1>And

00:21:11.525 --> 00:21:14.085
<v Speaker 1>we ended up growing up from there from

00:21:14.085 --> 00:21:15.205
<v Speaker 1>doing authentication

00:21:15.205 --> 00:21:17.765
<v Speaker 1>to doing just in time provisioning. So a

00:21:17.765 --> 00:21:20.325
<v Speaker 1>user logs in, and we automatically update

00:21:20.885 --> 00:21:22.165
<v Speaker 1>things, applications.

00:21:23.530 --> 00:21:26.090
<v Speaker 1>And then that grew into a larger workflow

00:21:26.090 --> 00:21:27.770
<v Speaker 1>engine, then we got into the user provisioning

00:21:27.770 --> 00:21:28.409
<v Speaker 1>game.

00:21:28.810 --> 00:21:31.290
<v Speaker 1>And so we we grew up from a

00:21:31.290 --> 00:21:32.890
<v Speaker 1>simplistic authentication

00:21:32.890 --> 00:21:33.610
<v Speaker 1>engine

00:21:33.690 --> 00:21:35.450
<v Speaker 1>to really powerful

00:21:35.610 --> 00:21:36.650
<v Speaker 1>identity system.

00:21:38.065 --> 00:21:40.144
<v Speaker 1>And so, for instance, I'm gonna be talking

00:21:40.144 --> 00:21:40.704
<v Speaker 1>in

00:21:41.585 --> 00:21:43.184
<v Speaker 1>a couple weeks at

00:21:43.345 --> 00:21:46.704
<v Speaker 1>kube con or Kubernetes Community Days DC

00:21:46.865 --> 00:21:49.424
<v Speaker 1>and then also at kube con in Detroit

00:21:49.424 --> 00:21:51.904
<v Speaker 1>about a public safety system we manage here

00:21:51.904 --> 00:21:54.200
<v Speaker 1>in the DC region, Washington DC in The

00:21:54.200 --> 00:21:56.679
<v Speaker 1>US for for all of our international friends,

00:21:58.440 --> 00:22:00.520
<v Speaker 1>that is built on top of Kubernetes.

00:22:00.600 --> 00:22:03.240
<v Speaker 1>But the system itself is actually has nothing

00:22:03.240 --> 00:22:05.560
<v Speaker 1>to do with DevOps or Kubernetes. It's all

00:22:05.560 --> 00:22:07.320
<v Speaker 1>about managing public safety systems.

00:22:08.085 --> 00:22:10.645
<v Speaker 1>So our our largest implementations are in kind

00:22:10.645 --> 00:22:13.205
<v Speaker 1>of the more generic enterprise identity world.

00:22:14.485 --> 00:22:17.045
<v Speaker 1>I just found this niche in DevOps and

00:22:17.045 --> 00:22:19.285
<v Speaker 1>Kubernetes and and said, you know, nobody else

00:22:19.285 --> 00:22:21.125
<v Speaker 1>is really doing a lot here. So it's

00:22:21.125 --> 00:22:23.200
<v Speaker 1>probably a place where I can create a

00:22:23.200 --> 00:22:23.840
<v Speaker 1>niche.

00:22:24.640 --> 00:22:26.320
<v Speaker 1>And so in

00:22:26.640 --> 00:22:28.639
<v Speaker 1>02/2016,

00:22:29.200 --> 00:22:31.039
<v Speaker 1>we came out with a namespace as a

00:22:31.039 --> 00:22:31.679
<v Speaker 1>service

00:22:32.559 --> 00:22:33.440
<v Speaker 1>utility

00:22:33.440 --> 00:22:35.679
<v Speaker 1>that allowed you to integrate any kind of

00:22:35.679 --> 00:22:36.480
<v Speaker 1>authentication

00:22:36.480 --> 00:22:37.760
<v Speaker 1>into Kubernetes

00:22:38.105 --> 00:22:41.145
<v Speaker 1>and allowed users to just log in, request

00:22:41.145 --> 00:22:42.025
<v Speaker 1>namespaces,

00:22:42.025 --> 00:22:44.745
<v Speaker 1>and and admins could approve it. And this

00:22:44.745 --> 00:22:45.304
<v Speaker 1>was

00:22:46.665 --> 00:22:48.665
<v Speaker 1>light years ahead of what people wanted at

00:22:48.665 --> 00:22:49.304
<v Speaker 1>the time.

00:22:50.265 --> 00:22:52.025
<v Speaker 1>And so we took that, and we slimmed

00:22:52.025 --> 00:22:53.789
<v Speaker 1>it down. We said, okay. Let's just create

00:22:53.789 --> 00:22:55.950
<v Speaker 1>a simple authentication portal, something that's quick and

00:22:55.950 --> 00:22:57.469
<v Speaker 1>easy to deploy.

00:22:58.350 --> 00:23:00.589
<v Speaker 1>Most of our users work with,

00:23:02.110 --> 00:23:04.749
<v Speaker 1>you know, an external identity provider.

00:23:04.909 --> 00:23:07.475
<v Speaker 1>So something like Azure AD and Okta or

00:23:07.475 --> 00:23:08.835
<v Speaker 1>an active directory.

00:23:08.995 --> 00:23:10.595
<v Speaker 1>We have a few GitHub users.

00:23:10.835 --> 00:23:12.595
<v Speaker 1>Most of our open source users

00:23:14.355 --> 00:23:16.995
<v Speaker 1>or or most of the GitHub users are

00:23:16.995 --> 00:23:19.235
<v Speaker 1>in the open source world. They're they're they're

00:23:19.235 --> 00:23:20.675
<v Speaker 1>not so much in the enterprise world.

00:23:22.230 --> 00:23:25.030
<v Speaker 1>And we we we always strive to make

00:23:25.030 --> 00:23:28.070
<v Speaker 1>it as simple as possible to deploy with

00:23:28.070 --> 00:23:28.870
<v Speaker 1>requiring

00:23:28.870 --> 00:23:31.910
<v Speaker 1>as few external dependencies as possible. So we

00:23:31.910 --> 00:23:33.750
<v Speaker 1>we went through kind of an interesting journey

00:23:33.750 --> 00:23:36.070
<v Speaker 1>where and and we're kinda going full circuit

00:23:36.070 --> 00:23:38.565
<v Speaker 1>is we started with a

00:23:39.285 --> 00:23:41.445
<v Speaker 1>container that you would launch that would do

00:23:41.445 --> 00:23:43.685
<v Speaker 1>all the work and deploy it because this

00:23:43.685 --> 00:23:45.445
<v Speaker 1>was still Helm two territory.

00:23:46.325 --> 00:23:48.245
<v Speaker 1>Then we created an operator when that's what

00:23:48.245 --> 00:23:51.000
<v Speaker 1>all the cool kids were doing. Yep. And

00:23:51.000 --> 00:23:53.480
<v Speaker 1>that that helped, but it was still kind

00:23:53.480 --> 00:23:54.840
<v Speaker 1>of bit of a bear.

00:23:55.800 --> 00:23:57.640
<v Speaker 1>And then as we're getting more deployments, we

00:23:57.640 --> 00:23:59.800
<v Speaker 1>found that most of the problems people were

00:23:59.800 --> 00:24:02.440
<v Speaker 1>having had absolutely nothing to do with OpenUnison

00:24:02.440 --> 00:24:06.495
<v Speaker 1>and with certificates, load balancers, host names, IPs.

00:24:07.375 --> 00:24:08.174
<v Speaker 1>And so

00:24:08.655 --> 00:24:11.134
<v Speaker 1>we we kinda took a step back,

00:24:11.535 --> 00:24:14.495
<v Speaker 1>and we created Helm charts to simplify it.

00:24:14.575 --> 00:24:16.895
<v Speaker 0>Yes. But we ended up having, like, three

00:24:16.895 --> 00:24:18.495
<v Speaker 1>Helm charts because

00:24:19.390 --> 00:24:22.110
<v Speaker 1>anybody who tells you there's eventual consistency in

00:24:22.110 --> 00:24:24.029
<v Speaker 1>Kubernetes is lying to you.

00:24:24.429 --> 00:24:26.350
<v Speaker 1>I know it's another controversial

00:24:26.350 --> 00:24:27.549
<v Speaker 1>one that a lot of people don't agree

00:24:27.549 --> 00:24:28.830
<v Speaker 1>with me with, but if you've ever had

00:24:28.830 --> 00:24:31.070
<v Speaker 1>to deal with a custom admission controller, you'll

00:24:31.070 --> 00:24:31.630
<v Speaker 1>know what I mean.

00:24:33.205 --> 00:24:34.165
<v Speaker 1>And so

00:24:34.405 --> 00:24:36.885
<v Speaker 1>we ended up saying, okay. Let's

00:24:37.365 --> 00:24:40.005
<v Speaker 1>let's simplify that even further. So we we

00:24:40.005 --> 00:24:43.045
<v Speaker 1>keep created the OU control command

00:24:43.765 --> 00:24:46.005
<v Speaker 1>to really automate as much as we could.

00:24:47.570 --> 00:24:49.330
<v Speaker 1>And so that that was one side of

00:24:49.330 --> 00:24:51.170
<v Speaker 1>it. We said, okay. Let's create this portal

00:24:51.170 --> 00:24:52.850
<v Speaker 1>that's really simple to deploy.

00:24:53.170 --> 00:24:54.690
<v Speaker 1>The other half of it that we wanted

00:24:54.690 --> 00:24:57.010
<v Speaker 1>to do was we wanted to make it

00:24:57.010 --> 00:24:59.490
<v Speaker 1>so that you didn't have to distribute anything

00:25:00.375 --> 00:25:03.255
<v Speaker 1>for authentication into your cluster. So we didn't

00:25:03.255 --> 00:25:05.015
<v Speaker 1>want you to have to download a kubectl

00:25:05.015 --> 00:25:06.375
<v Speaker 1>configuration file.

00:25:06.455 --> 00:25:08.295
<v Speaker 1>We didn't want you to have to prepublish

00:25:08.295 --> 00:25:10.695
<v Speaker 1>configuration files. That's one of the harder things

00:25:10.695 --> 00:25:13.679
<v Speaker 1>with a lot of OpenID Connect implementations

00:25:13.679 --> 00:25:14.399
<v Speaker 1>is,

00:25:14.559 --> 00:25:16.960
<v Speaker 1>you know, they'll they'll give you a kube

00:25:16.960 --> 00:25:19.760
<v Speaker 1>config file or you can use the the

00:25:19.760 --> 00:25:20.480
<v Speaker 1>great

00:25:21.120 --> 00:25:22.080
<v Speaker 1>OIDC

00:25:22.080 --> 00:25:24.240
<v Speaker 1>kube control plug in, but you have to

00:25:24.240 --> 00:25:26.160
<v Speaker 1>preconfigure it with some stuff. We didn't want

00:25:26.160 --> 00:25:27.200
<v Speaker 1>you to have to do any of that.

00:25:27.200 --> 00:25:30.455
<v Speaker 1>We want everything to be be prepopulated for

00:25:30.455 --> 00:25:30.934
<v Speaker 1>you.

00:25:31.735 --> 00:25:33.494
<v Speaker 1>So our first version,

00:25:34.054 --> 00:25:35.815
<v Speaker 1>there's just a little button you click that

00:25:35.815 --> 00:25:37.895
<v Speaker 1>says copy my kube control command, and we

00:25:37.895 --> 00:25:39.895
<v Speaker 1>set up your entire kube config via kube

00:25:39.895 --> 00:25:41.815
<v Speaker 1>control, including all your certificates.

00:25:42.080 --> 00:25:44.240
<v Speaker 1>So everything is trusted off the bat.

00:25:45.200 --> 00:25:47.280
<v Speaker 1>A lot of developers didn't love that. It

00:25:47.280 --> 00:25:49.120
<v Speaker 1>worked well if you had, like, a a,

00:25:49.120 --> 00:25:51.200
<v Speaker 1>you know, jump box, god forbid.

00:25:52.160 --> 00:25:53.840
<v Speaker 1>But, you know, developers

00:25:53.840 --> 00:25:55.680
<v Speaker 1>wanted to run kube control locally. They didn't

00:25:55.680 --> 00:25:57.280
<v Speaker 1>really wanna have to do this copy and

00:25:57.280 --> 00:25:57.760
<v Speaker 1>paste thing.

00:25:58.615 --> 00:26:00.775
<v Speaker 1>And so then we developed the OU login

00:26:00.775 --> 00:26:03.335
<v Speaker 1>plug in, which you just give it the

00:26:03.335 --> 00:26:05.095
<v Speaker 1>host name of your OpenUnison,

00:26:05.575 --> 00:26:07.735
<v Speaker 1>and it automatically logs you in. You don't

00:26:07.735 --> 00:26:09.575
<v Speaker 1>have to have a preconfigured

00:26:09.895 --> 00:26:11.095
<v Speaker 1>Kube control configuration.

00:26:12.620 --> 00:26:13.419
<v Speaker 1>The other

00:26:14.539 --> 00:26:17.179
<v Speaker 1>priority we had was short lived tokens.

00:26:17.259 --> 00:26:19.100
<v Speaker 1>We really wanted to make it so that

00:26:19.100 --> 00:26:21.339
<v Speaker 1>those tokens didn't live more than a minute

00:26:21.500 --> 00:26:23.740
<v Speaker 1>and to make it transparent to users because,

00:26:23.740 --> 00:26:25.795
<v Speaker 1>you know, I mean, that the great thing

00:26:25.795 --> 00:26:27.795
<v Speaker 1>about tokens is is that they they scale

00:26:27.795 --> 00:26:29.795
<v Speaker 1>really well. The bad things is if you

00:26:29.795 --> 00:26:31.555
<v Speaker 1>lose it, bad things are gonna happen.

00:26:32.355 --> 00:26:34.675
<v Speaker 1>That that's that's a real risk when it

00:26:34.675 --> 00:26:35.555
<v Speaker 1>comes to

00:26:36.435 --> 00:26:37.235
<v Speaker 1>bearer tokens.

00:26:37.720 --> 00:26:40.599
<v Speaker 1>So and by the way, we here. Woah.

00:26:41.000 --> 00:26:43.399
<v Speaker 1>Yeah. And we we we get in the

00:26:43.399 --> 00:26:43.959
<v Speaker 1>book.

00:26:44.360 --> 00:26:47.000
<v Speaker 1>We get into an obscene amount of detail

00:26:47.000 --> 00:26:49.000
<v Speaker 1>as to how that works and why. And

00:26:49.000 --> 00:26:50.440
<v Speaker 1>it's actually a free chapter. So if you

00:26:50.440 --> 00:26:51.559
<v Speaker 1>check out the

00:26:52.555 --> 00:26:55.995
<v Speaker 1>the GitHub repo, so no registration, nobody knows

00:26:55.995 --> 00:26:58.075
<v Speaker 1>who you are. You just download the PDF

00:26:58.075 --> 00:26:59.115
<v Speaker 1>for that chapter.

00:27:00.715 --> 00:27:01.355
<v Speaker 1>But

00:27:01.915 --> 00:27:02.794
<v Speaker 1>yeah. So,

00:27:03.995 --> 00:27:05.835
<v Speaker 1>you know, we we we wanted to make

00:27:05.835 --> 00:27:08.060
<v Speaker 1>it so that you could very easily use

00:27:08.060 --> 00:27:10.140
<v Speaker 1>short lived tokens transparently,

00:27:10.140 --> 00:27:12.060
<v Speaker 1>and we want to make GUIs easier. Like

00:27:12.060 --> 00:27:13.900
<v Speaker 1>I said, I love the dashboard, so we

00:27:13.900 --> 00:27:16.780
<v Speaker 1>wanted to make it easy to securely use

00:27:17.100 --> 00:27:18.220
<v Speaker 1>the dashboard.

00:27:18.460 --> 00:27:19.900
<v Speaker 1>I'm I'm a big proponent.

00:27:20.655 --> 00:27:22.415
<v Speaker 1>And in fact, again, in the book, I

00:27:22.415 --> 00:27:24.655
<v Speaker 1>spent an entire chapter on the security of

00:27:24.655 --> 00:27:25.535
<v Speaker 1>the dashboard

00:27:26.735 --> 00:27:29.135
<v Speaker 1>because it's really important to understand

00:27:29.215 --> 00:27:31.615
<v Speaker 1>how that security works when people say, oh,

00:27:31.615 --> 00:27:34.015
<v Speaker 1>the dashboard's insecure. No. It's not insecure.

00:27:34.095 --> 00:27:36.450
<v Speaker 1>It's insecure how people deploy it. You know,

00:27:36.450 --> 00:27:38.610
<v Speaker 1>you're using Kube control port forward or you're

00:27:38.610 --> 00:27:41.570
<v Speaker 1>using Kube control proxy. Yeah. It's insecure.

00:27:42.210 --> 00:27:43.809
<v Speaker 1>You know, you give it an RBAC, you

00:27:43.809 --> 00:27:46.850
<v Speaker 1>know, a privileged RBAC credential. Yeah. It's insecure.

00:27:47.409 --> 00:27:48.929
<v Speaker 1>But, you know, you use it properly with

00:27:48.929 --> 00:27:49.650
<v Speaker 1>the reverse proxy.

00:27:50.164 --> 00:27:51.924
<v Speaker 1>No less secure than anything else,

00:27:52.325 --> 00:27:55.284
<v Speaker 1>especially you had multifactor authentication to it.

00:27:56.645 --> 00:27:58.565
<v Speaker 1>You know, you're in good shape. So

00:28:00.164 --> 00:28:01.124
<v Speaker 1>yeah. So,

00:28:01.684 --> 00:28:02.164
<v Speaker 1>you know,

00:28:02.980 --> 00:28:06.019
<v Speaker 1>the the the real benefit of using OpenUnison

00:28:06.019 --> 00:28:07.620
<v Speaker 1>is just being able to quickly get into

00:28:07.620 --> 00:28:08.339
<v Speaker 1>clusters,

00:28:08.500 --> 00:28:10.499
<v Speaker 1>being able to integrate your enterprise

00:28:10.500 --> 00:28:14.099
<v Speaker 1>authorization because most enterprises have some kind of

00:28:14.260 --> 00:28:15.460
<v Speaker 1>authorization system.

00:28:16.435 --> 00:28:18.915
<v Speaker 1>You know you know a product does its

00:28:18.915 --> 00:28:21.715
<v Speaker 1>job real well when a massive

00:28:21.715 --> 00:28:24.195
<v Speaker 1>public company that does identity management

00:28:24.275 --> 00:28:26.915
<v Speaker 1>uses our little open source project for integration

00:28:26.915 --> 00:28:28.515
<v Speaker 1>with their Kubernetes clusters.

00:28:29.235 --> 00:28:31.919
<v Speaker 1>So, you know, that that told me that

00:28:31.919 --> 00:28:33.279
<v Speaker 1>we were probably on the right track for

00:28:33.279 --> 00:28:34.960
<v Speaker 1>what how to do it.

00:28:36.159 --> 00:28:37.679
<v Speaker 1>So I know I've spent a lot of

00:28:37.679 --> 00:28:39.679
<v Speaker 1>time talking. You wanna get in some tech?

00:28:39.760 --> 00:28:42.159
<v Speaker 0>Yeah. I'm excited. I I wanna I do

00:28:45.075 --> 00:28:47.315
<v Speaker 1>So yeah. So you've got a few clusters

00:28:47.315 --> 00:28:49.875
<v Speaker 1>ready to roll. Right? I do. Let's cover

00:28:49.875 --> 00:28:52.274
<v Speaker 0>the what have I prepared in advance?

00:28:52.355 --> 00:28:54.834
<v Speaker 0>The answer, as always, is pretty much nothing.

00:28:55.235 --> 00:28:58.914
<v Speaker 0>Yep. So today, we have the OpenUnison documentation.

00:28:58.914 --> 00:29:02.549
<v Speaker 0>This is available at openunison.github.io.

00:29:02.950 --> 00:29:08.309
<v Speaker 0>The GitHub repository is available at github.com/tromolosecurity/openunison.

00:29:08.790 --> 00:29:10.150
<v Speaker 0>And we have

00:29:10.710 --> 00:29:13.350
<v Speaker 0>a couple of clusters today, kindly provided by

00:29:13.350 --> 00:29:15.335
<v Speaker 0>our friends at Civo. So I have three

00:29:15.335 --> 00:29:16.535
<v Speaker 0>Civo clusters.

00:29:17.735 --> 00:29:20.695
<v Speaker 0>OpenUnison one, OpenUnison two, OpenUnison three.

00:29:20.935 --> 00:29:22.775
<v Speaker 0>We have a Docker desktop in Manikip, but

00:29:22.775 --> 00:29:24.615
<v Speaker 0>they're not as fun. So

00:29:25.655 --> 00:29:27.975
<v Speaker 0>what's on these clusters? The answer is

00:29:29.299 --> 00:29:30.179
<v Speaker 0>nada.

00:29:30.419 --> 00:29:33.220
<v Speaker 0>All I have done is use simplified

00:29:33.220 --> 00:29:35.940
<v Speaker 0>app management to display engine x ingress with

00:29:35.940 --> 00:29:38.659
<v Speaker 0>a load balancer. So these are fresh, clean,

00:29:38.980 --> 00:29:40.659
<v Speaker 0>happy to be OpenUnison's

00:29:40.659 --> 00:29:41.460
<v Speaker 0>clusters.

00:29:41.940 --> 00:29:42.739
<v Speaker 0>Sound good?

00:29:43.539 --> 00:29:44.100
<v Speaker 1>Sounds good.

00:29:45.035 --> 00:29:47.514
<v Speaker 0>Alright. So in the documentation here, we have

00:29:47.995 --> 00:29:50.475
<v Speaker 0>some nice bullet points telling us that OpenUnison

00:29:50.475 --> 00:29:53.835
<v Speaker 0>simplifies access and increases security to things that

00:29:53.835 --> 00:29:55.514
<v Speaker 0>all Kubernetes clusters need.

00:29:55.995 --> 00:29:56.794
<v Speaker 0>And

00:29:57.260 --> 00:29:59.260
<v Speaker 0>let's get do we just go jump straight

00:29:59.260 --> 00:30:01.500
<v Speaker 0>into deploying the syndication portal? Is that step

00:30:01.500 --> 00:30:04.220
<v Speaker 0>one, Mark? Yeah. Let's rock. Alright.

00:30:05.980 --> 00:30:07.020
<v Speaker 0>Okay.

00:30:07.020 --> 00:30:08.300
<v Speaker 0>Prerequisites,

00:30:08.300 --> 00:30:09.580
<v Speaker 0>ingress controller.

00:30:09.820 --> 00:30:10.220
<v Speaker 0>Check.

00:30:12.225 --> 00:30:13.985
<v Speaker 0>Site specific configuration.

00:30:14.145 --> 00:30:15.825
<v Speaker 0>This is something we'll need to do at

00:30:15.825 --> 00:30:16.865
<v Speaker 0>some point, I guess.

00:30:17.985 --> 00:30:20.065
<v Speaker 0>And well, Danny, to install all your controllers,

00:30:20.065 --> 00:30:20.865
<v Speaker 0>I'll look at it.

00:30:21.425 --> 00:30:23.265
<v Speaker 1>As you go through, I I kinda wanted

00:30:23.265 --> 00:30:25.345
<v Speaker 1>to give people a a heads up as

00:30:25.345 --> 00:30:26.465
<v Speaker 1>to what you're gonna do

00:30:26.929 --> 00:30:29.970
<v Speaker 1>and then go through all the the individual

00:30:29.970 --> 00:30:30.769
<v Speaker 1>steps.

00:30:30.770 --> 00:30:32.290
<v Speaker 0>And you're saying we can do all this

00:30:32.290 --> 00:30:35.249
<v Speaker 0>in thirty five ish minutes?

00:30:36.210 --> 00:30:37.169
<v Speaker 1>Yeah.

00:30:37.650 --> 00:30:40.049
<v Speaker 1>Quicker? Usually, I hope quicker than that. Yeah.

00:30:41.425 --> 00:30:43.665
<v Speaker 0>Alright. Okay. So I'm gonna skip the ingress

00:30:43.665 --> 00:30:45.905
<v Speaker 0>controller. I deployed NGINX. Good.

00:30:46.945 --> 00:30:48.945
<v Speaker 0>We're gonna deploy the Kubernetes dashboard.

00:30:49.025 --> 00:30:50.225
<v Speaker 0>Nice. Let's do it.

00:30:52.385 --> 00:30:53.825
<v Speaker 0>I'm just trusting.

00:30:55.510 --> 00:30:57.509
<v Speaker 0>Yeah. That looks relatively safe.

00:30:58.470 --> 00:30:59.190
<v Speaker 1>Yeah.

00:31:03.110 --> 00:31:04.470
<v Speaker 0>Yeah. We'll go with that.

00:31:08.345 --> 00:31:10.424
<v Speaker 0>So site specific configuration.

00:31:10.425 --> 00:31:12.425
<v Speaker 0>So this for our helm chart. I see

00:31:12.425 --> 00:31:14.345
<v Speaker 0>there's some values that yaml mentioned here that

00:31:14.345 --> 00:31:16.265
<v Speaker 0>we can customize. So let's click on that,

00:31:16.265 --> 00:31:17.784
<v Speaker 0>do a bit of a copy.

00:31:20.025 --> 00:31:21.945
<v Speaker 0>And I'll just leave this here for

00:31:22.105 --> 00:31:23.225
<v Speaker 0>as we need it.

00:31:25.059 --> 00:31:27.139
<v Speaker 0>And then we can deploy the portal.

00:31:27.539 --> 00:31:30.339
<v Speaker 0>Alright. Let's Oh, you skipped a step.

00:31:31.460 --> 00:31:32.259
<v Speaker 1>If

00:31:32.899 --> 00:31:34.899
<v Speaker 1>you if you scroll up or nope. Go

00:31:34.899 --> 00:31:36.659
<v Speaker 1>back to I'm just gonna add that. Oh,

00:31:36.820 --> 00:31:37.539
<v Speaker 1>okay. Gotcha.

00:31:40.115 --> 00:31:40.835
<v Speaker 0>Alright.

00:31:41.875 --> 00:31:42.595
<v Speaker 0>So

00:31:42.835 --> 00:31:45.235
<v Speaker 0>did I miss the step? Yeah. You did.

00:31:45.235 --> 00:31:46.994
<v Speaker 1>The the three boxes there,

00:31:47.715 --> 00:31:48.914
<v Speaker 1>how to customize

00:31:49.554 --> 00:31:51.075
<v Speaker 1>your default values.

00:31:53.000 --> 00:31:54.039
<v Speaker 0>Alright. Okay.

00:31:54.679 --> 00:31:54.919
<v Speaker 0>So

00:31:55.960 --> 00:31:57.799
<v Speaker 0>okay. I should read the docs, shouldn't I?

00:31:57.799 --> 00:31:59.159
<v Speaker 0>Sometimes I just get I can't read the

00:31:59.159 --> 00:31:59.799
<v Speaker 0>way in this. So

00:32:00.520 --> 00:32:02.360
<v Speaker 0>okay. So the first thing says, do we

00:32:02.360 --> 00:32:03.879
<v Speaker 0>want to enable impersonation?

00:32:03.960 --> 00:32:05.480
<v Speaker 0>You wanna give us the do you wanna

00:32:05.480 --> 00:32:06.760
<v Speaker 0>give us the TLDR in these options?

00:32:07.455 --> 00:32:09.534
<v Speaker 1>Yeah. Sure. So OpenUnison

00:32:09.534 --> 00:32:11.855
<v Speaker 1>will work whether you're running a on prem

00:32:11.855 --> 00:32:12.734
<v Speaker 1>cluster

00:32:12.735 --> 00:32:14.734
<v Speaker 1>where you can change the

00:32:15.934 --> 00:32:16.654
<v Speaker 1>the

00:32:16.815 --> 00:32:18.174
<v Speaker 1>API server

00:32:18.495 --> 00:32:20.735
<v Speaker 1>configuration flags

00:32:20.200 --> 00:32:22.760
<v Speaker 1>for OpenID Connect. If you're if you're running

00:32:22.760 --> 00:32:23.160
<v Speaker 1>an on

00:32:24.440 --> 00:32:26.440
<v Speaker 1>excuse me. If you're running an on prem

00:32:26.440 --> 00:32:29.320
<v Speaker 1>cluster, that's always what I recommend as as,

00:32:29.480 --> 00:32:30.840
<v Speaker 1>you know, bypass

00:32:30.840 --> 00:32:32.600
<v Speaker 1>the the impersonation proxy.

00:32:33.265 --> 00:32:35.905
<v Speaker 1>But if you're running in a managed cluster

00:32:35.905 --> 00:32:39.345
<v Speaker 1>where those that's not a possibility, like Civo,

00:32:39.424 --> 00:32:40.465
<v Speaker 1>AKS,

00:32:40.865 --> 00:32:43.024
<v Speaker 1>you know, GKE, any of these other ones,

00:32:43.905 --> 00:32:46.770
<v Speaker 1>enable the impersonation proxy. And what that does

00:32:46.770 --> 00:32:50.130
<v Speaker 1>is it launches a Kubo IDC proxy

00:32:50.450 --> 00:32:53.570
<v Speaker 1>that acts as a impersonating proxy.

00:32:53.730 --> 00:32:57.090
<v Speaker 1>So kubectl actually interacts with that proxy,

00:32:57.090 --> 00:32:59.090
<v Speaker 1>and then that proxy interacts with your API

00:32:59.090 --> 00:33:03.244
<v Speaker 1>server on the user's behalf using Kubernetes impersonation.

00:33:04.525 --> 00:33:05.965
<v Speaker 1>And then, like, if you look in the

00:33:05.965 --> 00:33:08.765
<v Speaker 1>audit logs, it'll actually say that, oh, this

00:33:08.765 --> 00:33:10.524
<v Speaker 1>this action was performed,

00:33:10.765 --> 00:33:13.165
<v Speaker 1>you know, by David via impersonation.

00:33:13.960 --> 00:33:16.200
<v Speaker 1>Okay. So you're keeping all that information in

00:33:16.200 --> 00:33:16.760
<v Speaker 1>there.

00:33:17.160 --> 00:33:19.400
<v Speaker 1>The network, this is where

00:33:19.800 --> 00:33:22.040
<v Speaker 1>people tend to get hung up the most,

00:33:24.520 --> 00:33:26.615
<v Speaker 1>mostly because it's the first thing you tend

00:33:26.615 --> 00:33:29.335
<v Speaker 1>to deploy inside of a cluster is your

00:33:29.335 --> 00:33:31.334
<v Speaker 1>authentication system a lot of times.

00:33:31.815 --> 00:33:33.894
<v Speaker 1>And so they they haven't quite

00:33:34.375 --> 00:33:36.774
<v Speaker 1>wrapped their heads around how Kubernetes and networking

00:33:36.774 --> 00:33:37.494
<v Speaker 1>works.

00:33:38.534 --> 00:33:39.735
<v Speaker 1>And so here's

00:33:39.975 --> 00:33:41.950
<v Speaker 1>you know, it's just three settings. Yeah. What

00:33:41.950 --> 00:33:43.070
<v Speaker 1>do you want your host names to be?

00:33:43.070 --> 00:33:44.990
<v Speaker 1>It's just the it always has to point

00:33:44.990 --> 00:33:48.350
<v Speaker 1>to the load balancer for your cluster

00:33:48.830 --> 00:33:51.630
<v Speaker 1>or more specifically for your for your ingress

00:33:51.630 --> 00:33:52.350
<v Speaker 1>controller.

00:33:52.510 --> 00:33:54.510
<v Speaker 1>Mhmm. And then finally, authentication.

00:33:55.165 --> 00:33:57.325
<v Speaker 1>Inside of the values dot YAML, you're gonna

00:33:57.325 --> 00:33:59.325
<v Speaker 1>find commented blocks

00:33:59.565 --> 00:34:02.125
<v Speaker 1>of all of the different authentication mechanisms.

00:34:02.685 --> 00:34:04.685
<v Speaker 1>You uncomment one of them. You go through

00:34:04.685 --> 00:34:06.924
<v Speaker 1>the steps in the documentation,

00:34:08.284 --> 00:34:09.245
<v Speaker 1>and

00:34:09.860 --> 00:34:11.540
<v Speaker 1>you go ahead and configure it.

00:34:12.260 --> 00:34:13.860
<v Speaker 1>You know, we try to we try to

00:34:13.860 --> 00:34:14.980
<v Speaker 1>make the documentation

00:34:14.980 --> 00:34:15.780
<v Speaker 1>as

00:34:17.380 --> 00:34:19.220
<v Speaker 1>single path as possible.

00:34:20.179 --> 00:34:22.340
<v Speaker 1>So even though you diverge a little bit.

00:34:22.340 --> 00:34:24.660
<v Speaker 1>So, like, in the network session section,

00:34:25.275 --> 00:34:27.835
<v Speaker 1>you've got the OpenUnison host, dashboard host, and

00:34:27.835 --> 00:34:29.114
<v Speaker 1>API server host.

00:34:29.755 --> 00:34:32.155
<v Speaker 1>You're gonna want those to point to

00:34:32.474 --> 00:34:34.954
<v Speaker 1>your load balancer. So as an example, I'm

00:34:34.954 --> 00:34:36.315
<v Speaker 1>a big fan of nip.i0

00:34:36.315 --> 00:34:37.514
<v Speaker 1>for development.

00:34:37.835 --> 00:34:40.395
<v Speaker 1>So if you just did, like, katesi0dot,

00:34:40.820 --> 00:34:43.460
<v Speaker 1>you know, ip.nip.i0

00:34:43.460 --> 00:34:45.060
<v Speaker 1>or whatever you wanna call it.

00:34:48.260 --> 00:34:48.980
<v Speaker 0>Okay.

00:34:49.699 --> 00:34:51.540
<v Speaker 0>You need to put the IP address in

00:34:51.619 --> 00:34:52.980
<v Speaker 1>You have to put the IP address in

00:34:52.980 --> 00:34:53.540
<v Speaker 1>there. Yeah.

00:34:54.614 --> 00:34:56.135
<v Speaker 1>It doesn't have to be dashes, but you

00:34:56.135 --> 00:34:56.935
<v Speaker 1>could do that.

00:34:57.495 --> 00:34:59.015
<v Speaker 1>And then the next one's gonna be your

00:34:59.015 --> 00:35:00.215
<v Speaker 1>dashboard host.

00:35:00.375 --> 00:35:02.615
<v Speaker 1>And then the last one is the

00:35:04.055 --> 00:35:06.135
<v Speaker 1>host name for your impersonation proxy.

00:35:12.309 --> 00:35:13.990
<v Speaker 0>So does it work with dots? I thought

00:35:13.990 --> 00:35:15.349
<v Speaker 0>it had to be dashes.

00:35:15.430 --> 00:35:17.190
<v Speaker 1>No. It works fine with dots. I actually

00:35:17.190 --> 00:35:19.589
<v Speaker 1>prefer to do dashes only because it looks

00:35:19.815 --> 00:35:20.455
<v Speaker 1>more

00:35:20.935 --> 00:35:22.455
<v Speaker 1>real, I guess.

00:35:24.375 --> 00:35:27.095
<v Speaker 1>But, yeah, it'll work perfectly fine either way.

00:35:27.095 --> 00:35:27.655
<v Speaker 0>Alright.

00:35:28.055 --> 00:35:29.335
<v Speaker 0>I'm gonna make sure that I have not

00:35:29.335 --> 00:35:31.095
<v Speaker 0>messed this up, and we'll make sure this

00:35:31.095 --> 00:35:33.175
<v Speaker 0>resolves to the IP address that we expect.

00:35:33.175 --> 00:35:34.520
<v Speaker 0>Yep. So

00:35:36.440 --> 00:35:38.840
<v Speaker 0>perfect. Right. Now

00:35:40.920 --> 00:35:43.640
<v Speaker 1>most enterprises will usually have, like, a wildcard

00:35:43.640 --> 00:35:46.119
<v Speaker 1>cert that they're using. So you can configure

00:35:46.119 --> 00:35:48.925
<v Speaker 1>this to do that. We actually include a

00:35:48.925 --> 00:35:50.365
<v Speaker 1>mini cert manager

00:35:50.445 --> 00:35:52.445
<v Speaker 1>that will generate all self signed certs for

00:35:52.445 --> 00:35:54.685
<v Speaker 1>you. So if you're just getting started, you

00:35:54.685 --> 00:35:56.285
<v Speaker 1>just wanna get the thing up and running,

00:35:56.285 --> 00:35:57.645
<v Speaker 1>you don't have to have, like, cert manager

00:35:57.645 --> 00:35:59.565
<v Speaker 1>deployed ahead of time. We're gonna we're gonna

00:35:59.565 --> 00:36:02.525
<v Speaker 1>generate those certificates all for you. Yeah. I

00:36:01.970 --> 00:36:03.569
<v Speaker 0>guess it's important for people to know that

00:36:03.569 --> 00:36:05.329
<v Speaker 0>when you use a service like that or

00:36:05.329 --> 00:36:07.490
<v Speaker 0>net is that Let's Encrypt will not give

00:36:07.490 --> 00:36:09.490
<v Speaker 0>you a certificate for those domains. So you

00:36:09.490 --> 00:36:11.010
<v Speaker 0>have to do something else.

00:36:11.490 --> 00:36:12.369
<v Speaker 1>Exactly.

00:36:13.250 --> 00:36:14.130
<v Speaker 0>Okay.

00:36:14.130 --> 00:36:16.815
<v Speaker 0>So let's the network embed looks fine to

00:36:16.815 --> 00:36:18.494
<v Speaker 0>me now. Right? It's good to me. Yep.

00:36:18.494 --> 00:36:20.974
<v Speaker 0>Okay. The OU, I'm I'm assuming we don't

00:36:20.974 --> 00:36:22.095
<v Speaker 0>have to tweak this. This is just for

00:36:22.095 --> 00:36:23.455
<v Speaker 0>the x five. Yeah. I mean, if you

00:36:23.455 --> 00:36:24.975
<v Speaker 1>really wanted to, you could.

00:36:25.615 --> 00:36:26.815
<v Speaker 0>Alright. I'll tell you what. Well, at least

00:36:26.815 --> 00:36:27.455
<v Speaker 0>the

00:36:27.615 --> 00:36:29.535
<v Speaker 0>I'll go with the academy. There we go.

00:36:29.535 --> 00:36:32.170
<v Speaker 0>Yeah. And they're all self signed certs. And

00:36:32.170 --> 00:36:33.450
<v Speaker 0>Tremolo. Okay.

00:36:34.010 --> 00:36:36.090
<v Speaker 0>We don't need to configure the image, cluster

00:36:36.090 --> 00:36:38.730
<v Speaker 0>name, impersonation, we I would actually change the

00:36:38.730 --> 00:36:41.610
<v Speaker 1>cluster name because we're gonna talk about multicluster

00:36:41.610 --> 00:36:43.565
<v Speaker 1>in a little bit. So, like, I usually

00:36:43.565 --> 00:36:45.805
<v Speaker 1>call the first one, like, control plane or

00:36:45.805 --> 00:36:48.204
<v Speaker 1>something like that so that you know it's

00:36:48.204 --> 00:36:48.765
<v Speaker 1>your

00:36:49.005 --> 00:36:50.205
<v Speaker 1>it's your primary.

00:36:51.164 --> 00:36:51.805
<v Speaker 0>Okay.

00:36:52.765 --> 00:36:54.765
<v Speaker 0>I just call OpenUnison one to match the

00:36:54.765 --> 00:36:55.885
<v Speaker 0>cluster name from Excel.

00:36:56.460 --> 00:36:57.740
<v Speaker 0>We're using JetStack's

00:36:57.740 --> 00:37:00.140
<v Speaker 0>OIDC proxy. Although, looks like you've got your

00:37:00.140 --> 00:37:01.420
<v Speaker 0>own build of it. Is that tweaked in

00:37:01.420 --> 00:37:03.420
<v Speaker 1>some way? Yeah. So we took over

00:37:05.260 --> 00:37:07.820
<v Speaker 1>maintenance of the OIDC proxy

00:37:09.055 --> 00:37:10.095
<v Speaker 1>about

00:37:10.095 --> 00:37:11.855
<v Speaker 1>a year ago, I think. Yeah.

00:37:12.335 --> 00:37:13.375
<v Speaker 1>JetStack,

00:37:13.615 --> 00:37:15.535
<v Speaker 1>you know, it's a JetStack created a great

00:37:15.535 --> 00:37:16.175
<v Speaker 1>project.

00:37:16.655 --> 00:37:18.655
<v Speaker 1>We found that there were a couple of

00:37:18.655 --> 00:37:20.095
<v Speaker 1>things that

00:37:20.910 --> 00:37:23.390
<v Speaker 1>were missing that that we found

00:37:23.710 --> 00:37:25.070
<v Speaker 1>would be really helpful.

00:37:26.190 --> 00:37:28.270
<v Speaker 1>And then we also wanted to

00:37:28.349 --> 00:37:30.270
<v Speaker 1>just get it to the point where it's

00:37:30.270 --> 00:37:32.829
<v Speaker 1>being maintained and actively tested and updated.

00:37:33.595 --> 00:37:35.355
<v Speaker 1>All the libraries are updated. So one thing

00:37:35.355 --> 00:37:37.835
<v Speaker 1>that we take great pride in at Tremolo

00:37:37.995 --> 00:37:39.515
<v Speaker 1>is making sure

00:37:39.755 --> 00:37:42.075
<v Speaker 1>that whenever we release software and you look

00:37:42.075 --> 00:37:43.515
<v Speaker 1>at those known vulnerabilities,

00:37:43.515 --> 00:37:45.435
<v Speaker 1>it's as close to goose eggs as possible.

00:37:47.380 --> 00:37:49.780
<v Speaker 1>And in fact, we have continuous

00:37:49.780 --> 00:37:50.660
<v Speaker 1>scanning

00:37:50.900 --> 00:37:53.380
<v Speaker 1>of our containers. Everything's built on Ubuntu. So

00:37:53.380 --> 00:37:54.100
<v Speaker 1>whenever

00:37:54.420 --> 00:37:57.460
<v Speaker 1>Canonical releases patches to CVEs,

00:37:57.460 --> 00:37:59.140
<v Speaker 1>that automatically triggers rebuilds.

00:37:59.565 --> 00:38:00.525
<v Speaker 1>So

00:38:00.525 --> 00:38:03.325
<v Speaker 1>we're we're constantly pushing out fresh versions.

00:38:04.445 --> 00:38:05.245
<v Speaker 0>Alright.

00:38:05.484 --> 00:38:06.845
<v Speaker 0>Okay. Let's run through the rest of these

00:38:06.845 --> 00:38:09.085
<v Speaker 0>values fail then and get this thing deployed.

00:38:09.325 --> 00:38:11.484
<v Speaker 0>Nothing here in the dashboard looks like looks

00:38:11.484 --> 00:38:12.045
<v Speaker 0>like it needs changing.

00:38:12.960 --> 00:38:14.640
<v Speaker 1>The the only time you really need to

00:38:14.640 --> 00:38:16.880
<v Speaker 1>change that is if you have a custom

00:38:16.880 --> 00:38:18.960
<v Speaker 1>deployment to the dashboard or

00:38:20.400 --> 00:38:22.400
<v Speaker 1>the if you use the helm chart for

00:38:22.400 --> 00:38:24.080
<v Speaker 1>the dashboard, you gotta adjust a couple of

00:38:24.080 --> 00:38:24.560
<v Speaker 1>those values.

00:38:25.055 --> 00:38:26.975
<v Speaker 0>Okay. I'm assuming we leave this false to

00:38:26.975 --> 00:38:28.095
<v Speaker 0>your cert manager. True.

00:38:29.055 --> 00:38:31.695
<v Speaker 0>We just use the Kubernetes basic cert stuff,

00:38:31.695 --> 00:38:33.215
<v Speaker 0>I guess. Yeah. It

00:38:35.135 --> 00:38:35.935
<v Speaker 1>originally,

00:38:35.935 --> 00:38:38.095
<v Speaker 1>we thought it would be cool to use

00:38:38.095 --> 00:38:40.895
<v Speaker 1>Kubernetes on built in certificates

00:38:40.730 --> 00:38:42.890
<v Speaker 1>so that everything was automatically trusted except we

00:38:42.890 --> 00:38:44.890
<v Speaker 1>found, a, it wasn't automatically trusted.

00:38:45.049 --> 00:38:45.690
<v Speaker 1>And, b,

00:38:46.410 --> 00:38:49.130
<v Speaker 1>on x on, you know, managed clusters,

00:38:49.930 --> 00:38:51.930
<v Speaker 1>you often couldn't even get access to it.

00:38:51.930 --> 00:38:53.930
<v Speaker 1>Like, that private key wasn't there, like EKS

00:38:53.930 --> 00:38:55.450
<v Speaker 1>and AKS and whatnot. So

00:38:56.355 --> 00:38:58.195
<v Speaker 1>we just always disable it now.

00:38:58.675 --> 00:38:59.395
<v Speaker 1>And then

00:38:59.955 --> 00:39:01.875
<v Speaker 1>I think that you yep.

00:39:02.595 --> 00:39:03.155
<v Speaker 1>So

00:39:03.635 --> 00:39:06.035
<v Speaker 1>our on the enterprise side, active directory and

00:39:06.035 --> 00:39:08.595
<v Speaker 1>OIDC are definitely our largest

00:39:09.020 --> 00:39:11.020
<v Speaker 1>implementation base. Mhmm.

00:39:11.579 --> 00:39:13.660
<v Speaker 1>I always thought SAML would be more popular.

00:39:13.660 --> 00:39:14.620
<v Speaker 1>It never was.

00:39:15.420 --> 00:39:17.420
<v Speaker 1>People have just skipped SAML and seem to

00:39:17.420 --> 00:39:19.100
<v Speaker 1>go straight to OpenID Connect.

00:39:20.859 --> 00:39:22.859
<v Speaker 0>Yeah. SAML was the thing for, like, two

00:39:22.859 --> 00:39:25.445
<v Speaker 0>minutes, and then it just everything's like A

00:39:25.445 --> 00:39:27.125
<v Speaker 1>little longer than two minutes.

00:39:28.725 --> 00:39:29.365
<v Speaker 1>You know, it

00:39:30.965 --> 00:39:34.885
<v Speaker 1>what really kinda changed things was

00:39:35.799 --> 00:39:37.640
<v Speaker 1>the pandemic, to be honest,

00:39:37.880 --> 00:39:38.520
<v Speaker 1>because

00:39:39.079 --> 00:39:40.680
<v Speaker 1>that's when organizations

00:39:40.680 --> 00:39:42.520
<v Speaker 1>really shifted from

00:39:42.839 --> 00:39:45.960
<v Speaker 1>using their own on prem active directory federation

00:39:45.960 --> 00:39:47.960
<v Speaker 1>services, which is only SAML,

00:39:48.279 --> 00:39:48.920
<v Speaker 1>to

00:39:50.145 --> 00:39:52.865
<v Speaker 1>Azure AD, which supports both SAML and OpenID

00:39:52.865 --> 00:39:53.585
<v Speaker 1>Connect.

00:39:53.985 --> 00:39:55.585
<v Speaker 1>And because

00:39:55.745 --> 00:39:58.625
<v Speaker 1>you know, SAML's really great in in really

00:39:59.025 --> 00:40:01.425
<v Speaker 1>segmented networks because you don't have that back

00:40:01.425 --> 00:40:03.985
<v Speaker 1>channel communication that you have with OpenID Connect.

00:40:04.750 --> 00:40:05.950
<v Speaker 1>But in

00:40:05.950 --> 00:40:08.750
<v Speaker 1>when your identity provider is on the Internet

00:40:08.750 --> 00:40:10.910
<v Speaker 1>and it's Azure AD or a doctor,

00:40:11.550 --> 00:40:12.430
<v Speaker 1>who cares?

00:40:13.470 --> 00:40:14.430
<v Speaker 1>Okay.

00:40:14.910 --> 00:40:16.910
<v Speaker 1>That's fair. That's fair. I'll I'll I'll buy

00:40:16.910 --> 00:40:17.470
<v Speaker 1>that.

00:40:18.270 --> 00:40:21.195
<v Speaker 1>But, yeah, it it it it definitely

00:40:21.755 --> 00:40:23.275
<v Speaker 1>has never been as popular as I thought

00:40:23.275 --> 00:40:24.955
<v Speaker 1>it was gonna be. Yeah.

00:40:26.555 --> 00:40:28.395
<v Speaker 0>Alright. So we're we're gonna go with GitHub.

00:40:28.395 --> 00:40:30.474
<v Speaker 0>Right? Yep. Mhmm. K.

00:40:30.795 --> 00:40:32.635
<v Speaker 0>So that is the GitHub application?

00:40:33.339 --> 00:40:35.420
<v Speaker 1>Yep. So you're gonna go into your either

00:40:35.420 --> 00:40:36.859
<v Speaker 1>an organization or you can do it on

00:40:36.859 --> 00:40:39.579
<v Speaker 1>your personal settings and create a a auth

00:40:39.579 --> 00:40:40.220
<v Speaker 1>app.

00:40:41.180 --> 00:40:43.260
<v Speaker 1>Alright. I'm not sure if I can I

00:40:43.260 --> 00:40:45.420
<v Speaker 0>can't remember it? Flashes secret and stuff, so

00:40:45.420 --> 00:40:46.940
<v Speaker 0>I was gonna do it. Is it okay

00:40:46.940 --> 00:40:47.980
<v Speaker 0>to do on on screen?

00:40:49.515 --> 00:40:51.835
<v Speaker 1>I mean, I would just delete it afterwards.

00:40:52.234 --> 00:40:53.355
<v Speaker 0>Alright. Okay.

00:40:53.915 --> 00:40:56.075
<v Speaker 1>You know, people in chat or who are

00:40:56.075 --> 00:40:57.915
<v Speaker 1>watching live, please be good neighbors.

00:40:59.595 --> 00:41:01.515
<v Speaker 0>Yeah. One day, I'm gonna learn to stop

00:41:01.515 --> 00:41:02.875
<v Speaker 0>flashing tokens on a stream.

00:41:04.530 --> 00:41:07.170
<v Speaker 0>Alright. Let's go. Waff apps.

00:41:07.650 --> 00:41:08.290
<v Speaker 0>New.

00:41:10.050 --> 00:41:10.770
<v Speaker 0>Open.

00:41:11.810 --> 00:41:12.930
<v Speaker 0>Unison.

00:41:14.610 --> 00:41:15.410
<v Speaker 0>Rawkode.

00:41:17.675 --> 00:41:20.715
<v Speaker 0>And is this gonna be my net IP?

00:41:21.435 --> 00:41:22.875
<v Speaker 1>So that's gonna be the

00:41:23.355 --> 00:41:25.515
<v Speaker 1>if you go to your network section, it's

00:41:25.515 --> 00:41:27.675
<v Speaker 1>gonna be OpenUnison h h t t p

00:41:27.675 --> 00:41:30.075
<v Speaker 1>s, your OpenUnison host value

00:41:30.155 --> 00:41:32.075
<v Speaker 1>slash auth slash GitHub.

00:41:34.109 --> 00:41:35.870
<v Speaker 0>Auth slash GitHub.

00:41:35.950 --> 00:41:38.270
<v Speaker 1>And we're I'm I'm only telling you what's

00:41:38.270 --> 00:41:39.630
<v Speaker 1>already in the docs, so

00:41:40.430 --> 00:41:42.510
<v Speaker 1>you're you're not getting anything secret here.

00:41:43.309 --> 00:41:44.990
<v Speaker 0>Alright. So you got that client ID. That

00:41:44.990 --> 00:41:47.965
<v Speaker 1>can go into the values dot YAML. And

00:41:48.605 --> 00:41:50.445
<v Speaker 0>I'm assuming it's like a secret and a

00:41:50.445 --> 00:41:51.965
<v Speaker 0>secret. No? Maybe?

00:41:52.045 --> 00:41:53.885
<v Speaker 1>You're actually just gonna put the secret in

00:41:53.885 --> 00:41:54.605
<v Speaker 1>a file,

00:41:55.165 --> 00:41:57.165
<v Speaker 1>and then OU control will create your secret

00:41:57.165 --> 00:41:57.885
<v Speaker 1>for you.

00:42:00.205 --> 00:42:00.685
<v Speaker 0>Alright.

00:42:01.730 --> 00:42:03.410
<v Speaker 1>And you got the client ID in there?

00:42:03.410 --> 00:42:05.010
<v Speaker 1>Okay. Cool. It's there.

00:42:05.329 --> 00:42:07.970
<v Speaker 0>Other policies, I'm assuming we can skip that.

00:42:07.970 --> 00:42:09.490
<v Speaker 1>You can skip that for now. I mean,

00:42:09.490 --> 00:42:10.770
<v Speaker 1>we give you a lot of

00:42:11.809 --> 00:42:12.690
<v Speaker 1>customization

00:42:12.690 --> 00:42:14.609
<v Speaker 1>points. And then, you know, if we have

00:42:14.609 --> 00:42:16.450
<v Speaker 1>time to get into namespace as a service,

00:42:16.695 --> 00:42:18.055
<v Speaker 1>that's where you get into that. But you

00:42:18.055 --> 00:42:19.655
<v Speaker 1>don't need a data. The the thing with

00:42:19.655 --> 00:42:21.895
<v Speaker 1>OpenUnison is we say, only

00:42:22.215 --> 00:42:24.455
<v Speaker 1>implement infrastructure you need for what you're gonna

00:42:24.455 --> 00:42:24.935
<v Speaker 1>do.

00:42:25.255 --> 00:42:25.815
<v Speaker 1>So

00:42:26.455 --> 00:42:27.175
<v Speaker 1>because

00:42:27.335 --> 00:42:28.455
<v Speaker 1>the authentication

00:42:28.455 --> 00:42:30.455
<v Speaker 1>proxy doesn't have any

00:42:32.000 --> 00:42:32.800
<v Speaker 1>asynchronous

00:42:32.800 --> 00:42:33.760
<v Speaker 1>workflows

00:42:34.240 --> 00:42:37.040
<v Speaker 1>or self-service in it. We don't make you

00:42:37.040 --> 00:42:38.640
<v Speaker 1>to deploy a database. We don't make you

00:42:38.640 --> 00:42:39.920
<v Speaker 1>deploy anything for

00:42:40.160 --> 00:42:41.280
<v Speaker 1>notification.

00:42:41.280 --> 00:42:42.640
<v Speaker 1>So we wanna keep it as simple as

00:42:42.640 --> 00:42:44.319
<v Speaker 1>possible. Only deploy what you need for what

00:42:44.319 --> 00:42:44.800
<v Speaker 1>you're gonna do.

00:42:45.894 --> 00:42:47.654
<v Speaker 0>Got it. So that looks good? It does.

00:42:47.654 --> 00:42:49.174
<v Speaker 1>And then go

00:42:49.174 --> 00:42:50.694
<v Speaker 1>ahead and create

00:42:50.694 --> 00:42:51.655
<v Speaker 1>a file

00:42:52.775 --> 00:42:54.694
<v Speaker 1>with your GitHub secret in it.

00:43:04.630 --> 00:43:06.069
<v Speaker 0>Might as well display

00:43:06.069 --> 00:43:07.670
<v Speaker 0>Russell's comment just now.

00:43:20.125 --> 00:43:21.005
<v Speaker 0>Alright.

00:43:24.925 --> 00:43:26.525
<v Speaker 0>Safe. Nobody got it.

00:43:27.085 --> 00:43:27.805
<v Speaker 1>Cool.

00:43:28.125 --> 00:43:29.005
<v Speaker 1>Alright.

00:43:29.005 --> 00:43:30.525
<v Speaker 1>And so you already deployed

00:43:30.930 --> 00:43:31.730
<v Speaker 1>that.

00:43:31.730 --> 00:43:33.410
<v Speaker 1>So you gotta download

00:43:34.050 --> 00:43:34.690
<v Speaker 1>almost.

00:43:35.569 --> 00:43:37.250
<v Speaker 1>You gotta download the OU control command for

00:43:37.250 --> 00:43:38.690
<v Speaker 1>whichever platform you'd like.

00:43:39.250 --> 00:43:40.850
<v Speaker 0>Is this m one ready?

00:43:41.890 --> 00:43:42.770
<v Speaker 1>Yes. It will

00:43:43.905 --> 00:43:46.305
<v Speaker 1>I'm assuming you have Rosetta installed. I do.

00:43:46.305 --> 00:43:47.345
<v Speaker 0>Yeah. Okay.

00:43:48.785 --> 00:43:51.745
<v Speaker 0>Dash o o u c t l.

00:43:54.545 --> 00:43:55.585
<v Speaker 0>No length.

00:43:55.745 --> 00:43:57.985
<v Speaker 0>Oh, it must be a redirect. So dash

00:43:57.985 --> 00:43:58.625
<v Speaker 0>f f.

00:44:01.640 --> 00:44:02.599
<v Speaker 1>That's weird.

00:44:03.880 --> 00:44:05.400
<v Speaker 1>What if you just do a w get

00:44:05.400 --> 00:44:07.640
<v Speaker 1>on the ah, where'd you go? Was just

00:44:07.640 --> 00:44:08.920
<v Speaker 0>making sure I could actually write

00:44:09.400 --> 00:44:11.160
<v Speaker 0>oh, no. Wait. I'm just being Oh, you're

00:44:11.160 --> 00:44:12.519
<v Speaker 1>in the can are you in a container?

00:44:13.935 --> 00:44:15.055
<v Speaker 0>No.

00:44:15.055 --> 00:44:16.095
<v Speaker 0>I've just got my

00:44:16.495 --> 00:44:18.095
<v Speaker 0>parameters the wrong way around.

00:44:20.735 --> 00:44:22.655
<v Speaker 0>Failed to receive data to disk.

00:44:24.015 --> 00:44:26.015
<v Speaker 0>Alright. I'll do it in my home directory.

00:44:26.975 --> 00:44:29.690
<v Speaker 0>Maybe that temp just has or is it

00:44:29.690 --> 00:44:31.289
<v Speaker 0>small or for rate to fail? It may

00:44:31.289 --> 00:44:33.609
<v Speaker 0>just be Honestly, I just use w get.

00:44:34.089 --> 00:44:35.529
<v Speaker 0>Oh, yeah. It's small or

00:44:35.849 --> 00:44:36.810
<v Speaker 1>Yeah.

00:44:38.569 --> 00:44:40.009
<v Speaker 1>I like w get because it gives you

00:44:40.009 --> 00:44:41.049
<v Speaker 1>a little progress bar.

00:44:43.395 --> 00:44:45.395
<v Speaker 0>Alright. I'm old school like that.

00:44:48.035 --> 00:44:50.515
<v Speaker 0>Oh, I can't type. Alright. Okay.

00:44:51.875 --> 00:44:53.395
<v Speaker 0>User local.

00:44:53.395 --> 00:44:54.355
<v Speaker 0>Is that

00:44:55.430 --> 00:44:57.270
<v Speaker 0>hate typing my password on screen.

00:44:58.069 --> 00:45:00.230
<v Speaker 1>At least that one, we can't see. I

00:45:00.230 --> 00:45:01.509
<v Speaker 0>know. But I was doing it once on

00:45:01.509 --> 00:45:04.309
<v Speaker 0>a stream with Alex Ellis, and sudo crashed

00:45:04.309 --> 00:45:06.470
<v Speaker 0>as I was typing. And then my password

00:45:06.470 --> 00:45:07.509
<v Speaker 0>was just all over the

00:45:08.789 --> 00:45:10.295
<v Speaker 0>Of course, I mean, I I don't I

00:45:10.295 --> 00:45:12.135
<v Speaker 0>don't duplicate any passwords, and it's only my

00:45:12.135 --> 00:45:14.135
<v Speaker 0>local machine password. So it's not a big

00:45:14.135 --> 00:45:16.135
<v Speaker 0>deal. But still Now I haven't done it

00:45:16.135 --> 00:45:18.454
<v Speaker 1>yet, but do you have the Touch ID

00:45:18.454 --> 00:45:19.255
<v Speaker 1>keyboard?

00:45:19.974 --> 00:45:20.615
<v Speaker 0>So

00:45:21.095 --> 00:45:23.430
<v Speaker 0>I I type on a good keyboard. But

00:45:23.589 --> 00:45:25.349
<v Speaker 1>Oh, you've got the mechanical.

00:45:25.349 --> 00:45:27.270
<v Speaker 1>Okay. But I keep this little thing to

00:45:27.270 --> 00:45:29.190
<v Speaker 0>the side purely for thumb,

00:45:29.190 --> 00:45:30.550
<v Speaker 0>for my fingerprint. Gotcha.

00:45:31.430 --> 00:45:33.990
<v Speaker 1>I I haven't done it yet, which is

00:45:33.990 --> 00:45:35.910
<v Speaker 1>weird because I live by Touch ID.

00:45:36.790 --> 00:45:37.270
<v Speaker 1>But

00:45:37.765 --> 00:45:39.445
<v Speaker 1>you can set up sudo

00:45:39.605 --> 00:45:42.005
<v Speaker 1>to use Touch ID on on Mac.

00:45:42.565 --> 00:45:43.285
<v Speaker 0>Nice.

00:45:43.925 --> 00:45:45.525
<v Speaker 0>Need to look into that in one day.

00:45:45.525 --> 00:45:46.645
<v Speaker 0>You can also I I know I can

00:45:46.645 --> 00:45:47.925
<v Speaker 0>do it on my watch, but then I

00:45:47.925 --> 00:45:49.445
<v Speaker 0>always find it weird while we're tapping it

00:45:49.445 --> 00:45:50.244
<v Speaker 0>as well, which is

00:45:51.680 --> 00:45:54.080
<v Speaker 0>anyway, we're taking our rest. Let's let's get

00:45:54.080 --> 00:45:55.680
<v Speaker 0>back on track. So we've got all your

00:45:55.680 --> 00:45:56.880
<v Speaker 1>control. Progress?

00:45:57.120 --> 00:45:59.040
<v Speaker 1>So, yeah, so you've got all your control.

00:45:59.360 --> 00:46:01.840
<v Speaker 1>You're ready to rock and roll. Alright. So

00:46:01.840 --> 00:46:03.440
<v Speaker 0>we're going to install,

00:46:03.440 --> 00:46:04.240
<v Speaker 0>point it to

00:46:05.475 --> 00:46:08.435
<v Speaker 0>our secret file, and then the YAML file.

00:46:08.675 --> 00:46:09.475
<v Speaker 0>Yep. So

00:46:10.355 --> 00:46:12.675
<v Speaker 0>the YAML file is our values. Right? And

00:46:12.675 --> 00:46:15.155
<v Speaker 0>the secret file is my please don't copy.

00:46:15.555 --> 00:46:16.515
<v Speaker 1>Exactly.

00:46:16.675 --> 00:46:19.715
<v Speaker 0>Please don't copy me dot text. I think

00:46:19.715 --> 00:46:20.435
<v Speaker 0>I called it.

00:46:21.230 --> 00:46:24.030
<v Speaker 0>Yes. No. Don't getting there. Well, no. That's

00:46:24.990 --> 00:46:26.190
<v Speaker 0>Don't copy

00:46:26.910 --> 00:46:28.829
<v Speaker 0>me, please. I should've called it Yeah. I

00:46:28.829 --> 00:46:30.270
<v Speaker 1>seem to remember there was a please in

00:46:30.270 --> 00:46:30.750
<v Speaker 1>there.

00:46:31.950 --> 00:46:33.069
<v Speaker 0>Alright. So

00:46:33.455 --> 00:46:35.855
<v Speaker 0>is this going to create a Kubernetes secret,

00:46:35.855 --> 00:46:38.095
<v Speaker 0>web our secret our client secret for the

00:46:38.095 --> 00:46:40.575
<v Speaker 0>GitHub app and to help deploy

00:46:40.895 --> 00:46:42.255
<v Speaker 0>into our cluster?

00:46:42.655 --> 00:46:43.855
<v Speaker 1>Exactly.

00:46:44.655 --> 00:46:46.175
<v Speaker 0>Oh, no database section.

00:46:50.430 --> 00:46:51.630
<v Speaker 1>Check out the values.

00:46:52.030 --> 00:46:52.670
<v Speaker 1>I have a

00:46:53.150 --> 00:46:55.870
<v Speaker 1>oh, I know why. Shoot. Okay. See where

00:46:55.870 --> 00:46:57.870
<v Speaker 1>it says enable provisioning is true?

00:46:58.030 --> 00:46:59.630
<v Speaker 1>I gotta fix this. I was messing with

00:46:59.630 --> 00:46:59.870
<v Speaker 1>it.

00:47:00.505 --> 00:47:02.984
<v Speaker 1>Kids, don't mess with the website right before

00:47:02.984 --> 00:47:03.545
<v Speaker 1>the

00:47:04.105 --> 00:47:05.145
<v Speaker 1>the demo.

00:47:05.705 --> 00:47:08.265
<v Speaker 1>It's in the OpenUnison section. Yep. Yeah. So

00:47:08.265 --> 00:47:10.265
<v Speaker 1>change that to false. And then on the

00:47:10.265 --> 00:47:11.145
<v Speaker 1>next line,

00:47:11.625 --> 00:47:12.744
<v Speaker 1>change that to true.

00:47:16.130 --> 00:47:17.810
<v Speaker 1>Go ahead and run. I gotta fix that

00:47:17.810 --> 00:47:20.210
<v Speaker 1>right after this. Here we go. Yeah. So

00:47:20.210 --> 00:47:22.530
<v Speaker 1>I decided not to tell people to make

00:47:22.530 --> 00:47:25.090
<v Speaker 1>the secret because what people were doing was

00:47:25.090 --> 00:47:27.010
<v Speaker 1>they would do echo secret

00:47:27.995 --> 00:47:30.635
<v Speaker 1>into base six you know, pipe base 64.

00:47:30.795 --> 00:47:33.195
<v Speaker 1>And so everybody would be telling me, it's

00:47:33.195 --> 00:47:34.635
<v Speaker 1>not working. It's not working. It's not working.

00:47:34.635 --> 00:47:36.395
<v Speaker 1>I keep getting access to nine. Well, yeah,

00:47:36.395 --> 00:47:39.435
<v Speaker 1>because echo adds that that slash m at

00:47:39.435 --> 00:47:39.835
<v Speaker 1>the end.

00:47:41.570 --> 00:47:42.930
<v Speaker 1>And so I was like, you know what?

00:47:42.930 --> 00:47:45.010
<v Speaker 1>I'm just gonna take that out and and

00:47:45.010 --> 00:47:46.930
<v Speaker 1>and I didn't wanna have it on the

00:47:46.930 --> 00:47:48.610
<v Speaker 1>command line because I hate having

00:47:49.090 --> 00:47:51.170
<v Speaker 1>secrets as command line parameters.

00:47:51.170 --> 00:47:51.650
<v Speaker 1>So

00:47:52.770 --> 00:47:55.090
<v Speaker 1>so yeah. So we we actually embed Helm

00:47:55.090 --> 00:47:56.050
<v Speaker 1>into this command.

00:47:57.005 --> 00:47:58.925
<v Speaker 1>So it's just running the Helm charts, but

00:47:58.925 --> 00:48:00.845
<v Speaker 1>the nice thing is is that it's paying

00:48:00.845 --> 00:48:01.565
<v Speaker 1>attention

00:48:01.965 --> 00:48:02.605
<v Speaker 1>to

00:48:03.405 --> 00:48:05.565
<v Speaker 1>the cluster. Like, it's waiting for things to

00:48:05.565 --> 00:48:08.125
<v Speaker 1>finish. It gives a little pauses. I I

00:48:08.125 --> 00:48:10.760
<v Speaker 1>I love Sivo to death for especially for

00:48:10.760 --> 00:48:13.240
<v Speaker 1>my testing clusters. I do find that when

00:48:13.240 --> 00:48:15.240
<v Speaker 1>you're very heavy on watches and you're very

00:48:15.240 --> 00:48:17.320
<v Speaker 1>heavy on CRDs the way we are,

00:48:17.800 --> 00:48:20.280
<v Speaker 1>because everything is configured through a custom resource.

00:48:23.225 --> 00:48:23.545
<v Speaker 1>It

00:48:24.025 --> 00:48:25.945
<v Speaker 1>I've I've found Cboe to be a little

00:48:25.945 --> 00:48:26.505
<v Speaker 1>more

00:48:27.065 --> 00:48:28.105
<v Speaker 1>persnickety

00:48:28.105 --> 00:48:29.865
<v Speaker 1>than most other clusters

00:48:29.865 --> 00:48:30.985
<v Speaker 1>I've worked with.

00:48:31.545 --> 00:48:32.265
<v Speaker 0>Okay.

00:48:32.585 --> 00:48:34.745
<v Speaker 0>So you said, just while we're in, everything

00:48:34.745 --> 00:48:37.390
<v Speaker 0>is configured by some sort of custom resource.

00:48:37.390 --> 00:48:38.830
<v Speaker 0>So you can get up Pretty much. Entire

00:48:38.830 --> 00:48:39.790
<v Speaker 0>OpenUnison

00:48:39.790 --> 00:48:42.190
<v Speaker 0>deployment then as well? Oh, yeah.

00:48:42.910 --> 00:48:43.870
<v Speaker 1>Yeah. We've got

00:48:44.590 --> 00:48:47.470
<v Speaker 1>we actually have we haven't formally released it

00:48:47.470 --> 00:48:50.785
<v Speaker 1>yet, but we have a Argo version that

00:48:50.785 --> 00:48:52.225
<v Speaker 1>uses waves.

00:48:52.865 --> 00:48:55.105
<v Speaker 1>So you create the secret manually

00:48:55.345 --> 00:48:57.105
<v Speaker 1>and you point Argo

00:48:57.345 --> 00:48:58.065
<v Speaker 1>to

00:48:58.705 --> 00:49:01.619
<v Speaker 1>the special repo that's just a, you know,

00:49:01.619 --> 00:49:04.660
<v Speaker 1>just a sync of all the correct repos,

00:49:04.660 --> 00:49:05.859
<v Speaker 1>but with the wave

00:49:10.180 --> 00:49:10.900
<v Speaker 1>not label.

00:49:13.235 --> 00:49:14.755
<v Speaker 1>What's the other thing besides the label I

00:49:14.755 --> 00:49:17.075
<v Speaker 1>can put on object? Thank you. Annotation. I

00:49:17.075 --> 00:49:18.835
<v Speaker 1>know Kubernetes. I promise.

00:49:20.195 --> 00:49:22.595
<v Speaker 1>With the correct annotations with the right waves,

00:49:22.595 --> 00:49:24.355
<v Speaker 1>and so that way, you don't use the

00:49:24.355 --> 00:49:25.795
<v Speaker 1>OU control command,

00:49:26.115 --> 00:49:27.235
<v Speaker 1>at least for that instance.

00:49:29.360 --> 00:49:30.000
<v Speaker 1>So

00:49:31.760 --> 00:49:32.640
<v Speaker 1>this is

00:49:33.440 --> 00:49:34.080
<v Speaker 1>running.

00:49:34.320 --> 00:49:36.560
<v Speaker 0>Yeah. I'm gonna do some investigation.

00:49:37.600 --> 00:49:37.920
<v Speaker 0>So

00:49:39.040 --> 00:49:41.600
<v Speaker 1>It's a it's a slightly larger pod,

00:49:42.425 --> 00:49:44.105
<v Speaker 1>and it's just pulling I think it's coding

00:49:44.105 --> 00:49:45.785
<v Speaker 0>images. Yeah. Yeah.

00:49:51.545 --> 00:49:54.265
<v Speaker 1>Yeah. That that that's strange because

00:49:55.530 --> 00:49:57.770
<v Speaker 1>I mean, that CUBO IDC proxy

00:49:57.930 --> 00:50:00.170
<v Speaker 1>is only 45 megs.

00:50:00.970 --> 00:50:02.890
<v Speaker 1>The Orchestra one's pretty big.

00:50:05.530 --> 00:50:06.170
<v Speaker 1>So, hopefully,

00:50:08.585 --> 00:50:09.464
<v Speaker 1>think

00:50:09.464 --> 00:50:12.345
<v Speaker 1>it I think it gives up after

00:50:12.825 --> 00:50:14.505
<v Speaker 1>a thousand tries.

00:50:16.105 --> 00:50:19.305
<v Speaker 0>Alright. Structured that that top is, which is

00:50:19.305 --> 00:50:20.265
<v Speaker 1>weird because

00:50:20.585 --> 00:50:23.224
<v Speaker 1>oh, you're you're you're probably running your cluster

00:50:22.710 --> 00:50:23.590
<v Speaker 1>cluster in

00:50:25.030 --> 00:50:26.070
<v Speaker 1>in Europe.

00:50:26.390 --> 00:50:28.070
<v Speaker 0>You know what? I don't even think I

00:50:28.070 --> 00:50:30.310
<v Speaker 0>paid attention to where I stuck this thing.

00:50:32.230 --> 00:50:33.589
<v Speaker 1>Not that it should matter because it's all

00:50:33.589 --> 00:50:34.630
<v Speaker 1>coming from Docker Hub.

00:50:36.245 --> 00:50:37.765
<v Speaker 0>Well, it doesn't tell you a region by

00:50:37.765 --> 00:50:39.685
<v Speaker 0>default. Where where did I put it?

00:50:40.245 --> 00:50:42.405
<v Speaker 1>I'm looking in your bottom left.

00:50:43.045 --> 00:50:44.165
<v Speaker 0>Oh, yeah. London. Yeah.

00:50:44.965 --> 00:50:46.885
<v Speaker 1>So I don't know. Maybe

00:50:47.630 --> 00:50:50.190
<v Speaker 1>maybe they just don't have good networking over

00:50:50.190 --> 00:50:51.950
<v Speaker 1>to Docker Hub from London.

00:50:56.510 --> 00:50:57.630
<v Speaker 0>Yeah.

00:50:57.790 --> 00:50:59.230
<v Speaker 0>Take a look at the events.

00:50:59.230 --> 00:51:00.750
<v Speaker 1>Is there

00:51:02.474 --> 00:51:03.994
<v Speaker 0>a Let me

00:51:04.875 --> 00:51:07.515
<v Speaker 0>Is there something that's not mounting? Oh, we're

00:51:07.515 --> 00:51:09.835
<v Speaker 0>missing Oh, there we go. Secret volume,

00:51:09.835 --> 00:51:12.635
<v Speaker 1>orchestra not found. Do a k get nodes

00:51:12.795 --> 00:51:14.075
<v Speaker 1>or k get secrets?

00:51:18.990 --> 00:51:19.710
<v Speaker 1>Yeah.

00:51:20.430 --> 00:51:22.190
<v Speaker 1>Okay. Take a look at your

00:51:23.550 --> 00:51:26.030
<v Speaker 1>there's a pod that's called OpenUnison

00:51:26.030 --> 00:51:27.870
<v Speaker 1>operator. Take a look at that.

00:51:29.470 --> 00:51:31.230
<v Speaker 1>Did we miss something?

00:51:36.085 --> 00:51:37.845
<v Speaker 1>Or I'm sorry. Look at the logs

00:51:38.244 --> 00:51:39.365
<v Speaker 1>for that pod.

00:51:41.365 --> 00:51:43.525
<v Speaker 1>Yeah. Finally. Just gave up.

00:51:46.210 --> 00:51:47.650
<v Speaker 0>Oh. Alright.

00:51:47.650 --> 00:51:48.130
<v Speaker 1>Where

00:51:50.130 --> 00:51:52.770
<v Speaker 1>oh, interesting. It had a problem

00:51:52.930 --> 00:51:54.210
<v Speaker 1>talking to

00:51:54.530 --> 00:51:55.970
<v Speaker 1>see see, this is why I mean where

00:51:55.970 --> 00:51:59.010
<v Speaker 1>it'll it'll sometimes have weird issues with

00:51:59.235 --> 00:52:02.115
<v Speaker 1>civo's API server. Okay. Let's do this. Just

00:52:02.115 --> 00:52:03.715
<v Speaker 1>go ahead and rerun the command again.

00:52:10.195 --> 00:52:11.875
<v Speaker 1>So one thing about the o u control

00:52:11.875 --> 00:52:14.515
<v Speaker 1>command is it's designed to be rerunnable.

00:52:14.640 --> 00:52:16.960
<v Speaker 1>So if something does fail, you can always

00:52:16.960 --> 00:52:19.440
<v Speaker 1>rerun it with the exact same parameters,

00:52:19.839 --> 00:52:21.040
<v Speaker 1>and it will

00:52:21.839 --> 00:52:23.680
<v Speaker 1>check to see if thing so, like, the

00:52:23.680 --> 00:52:25.040
<v Speaker 1>secret already exists.

00:52:25.279 --> 00:52:26.480
<v Speaker 1>So let's say

00:52:28.945 --> 00:52:32.385
<v Speaker 1>so let's see here. There's Orchestra secret source.

00:52:33.425 --> 00:52:35.505
<v Speaker 1>So right now, it's redeploying

00:52:36.305 --> 00:52:37.025
<v Speaker 1>that.

00:52:38.065 --> 00:52:40.385
<v Speaker 0>Oh, there we go. Yeah. There we go.

00:52:40.385 --> 00:52:41.105
<v Speaker 1>Okay. Cool.

00:52:43.170 --> 00:52:45.329
<v Speaker 1>So, like, one nice thing about OU control

00:52:45.329 --> 00:52:47.329
<v Speaker 1>is, let's say you're just doing an update

00:52:47.329 --> 00:52:48.530
<v Speaker 1>to your configuration,

00:52:48.530 --> 00:52:50.530
<v Speaker 1>but you're not changing the secret. You don't

00:52:50.530 --> 00:52:52.130
<v Speaker 1>need to have that secret file.

00:52:52.609 --> 00:52:54.450
<v Speaker 1>It'll say, oh, the secret's already there. I'm

00:52:54.450 --> 00:52:56.450
<v Speaker 1>not even gonna you know, unless you specify

00:52:56.450 --> 00:52:58.695
<v Speaker 1>a new secret to rotate it, I'm just

00:52:58.695 --> 00:53:00.855
<v Speaker 1>gonna leave it alone. Like, it it builds

00:53:00.855 --> 00:53:03.335
<v Speaker 1>some of the intelligence that an operator would

00:53:03.335 --> 00:53:05.655
<v Speaker 1>wanna have a human operator would wanna have

00:53:05.735 --> 00:53:07.895
<v Speaker 1>during deployment. There we go.

00:53:13.040 --> 00:53:15.120
<v Speaker 0>Alright. I'm assuming that's gonna be much quicker

00:53:15.120 --> 00:53:17.600
<v Speaker 0>now since it's Yeah. I mean, you're already

00:53:17.600 --> 00:53:19.680
<v Speaker 1>running. So it's

00:53:23.225 --> 00:53:24.745
<v Speaker 1>we're just waiting for it to get to

00:53:24.745 --> 00:53:25.945
<v Speaker 1>the point where it's

00:53:27.705 --> 00:53:29.065
<v Speaker 1>ready one one.

00:53:31.385 --> 00:53:33.705
<v Speaker 1>There we go. Now the old one. And

00:53:33.705 --> 00:53:36.070
<v Speaker 1>you can see, like, it's saying, oh, I'm

00:53:36.070 --> 00:53:38.310
<v Speaker 1>gonna wait until there's just one pod because

00:53:38.310 --> 00:53:39.990
<v Speaker 1>that's the number of images I want. I

00:53:39.990 --> 00:53:41.990
<v Speaker 1>don't wanna release control

00:53:42.390 --> 00:53:43.190
<v Speaker 1>until

00:53:44.630 --> 00:53:46.230
<v Speaker 1>we're at that point. So we're gonna wait

00:53:46.230 --> 00:53:47.750
<v Speaker 1>for things to to terminate.

00:53:48.545 --> 00:53:50.705
<v Speaker 0>It's waiting for the eventual consistent to be

00:53:50.705 --> 00:53:52.465
<v Speaker 0>consistent. Right? Exactly.

00:53:53.665 --> 00:53:55.425
<v Speaker 1>You know, which is something that, like, Helm

00:53:55.425 --> 00:53:56.945
<v Speaker 1>doesn't do. Right? Helm

00:53:57.025 --> 00:53:57.505
<v Speaker 1>doesn't

00:53:57.985 --> 00:53:59.425
<v Speaker 1>you know, if it fails because of a

00:53:59.425 --> 00:54:00.465
<v Speaker 1>webhook, it just fails,

00:54:02.130 --> 00:54:04.450
<v Speaker 1>which is where my whole eventual consistency is

00:54:04.450 --> 00:54:06.690
<v Speaker 1>a lie comes from. Yeah. I have that

00:54:06.690 --> 00:54:08.530
<v Speaker 0>all that problem all the time. I mean,

00:54:08.530 --> 00:54:11.410
<v Speaker 0>admission admission controllers are definitely a problem, but

00:54:11.410 --> 00:54:13.490
<v Speaker 0>finalizers are the ones that really get on

00:54:13.490 --> 00:54:14.210
<v Speaker 0>my my nerves.

00:54:16.145 --> 00:54:17.744
<v Speaker 1>Although, I had fun this morning with a

00:54:17.744 --> 00:54:19.985
<v Speaker 1>customer with pod disruption budgets.

00:54:20.145 --> 00:54:20.625
<v Speaker 1>That

00:54:21.025 --> 00:54:23.345
<v Speaker 1>that that really caused some heartburn.

00:54:23.665 --> 00:54:25.345
<v Speaker 1>Combination of pod

00:54:25.345 --> 00:54:27.185
<v Speaker 1>disruption budget and

00:54:29.520 --> 00:54:32.080
<v Speaker 1>having to rebuild a cluster that had lost

00:54:32.080 --> 00:54:32.720
<v Speaker 1>its

00:54:33.280 --> 00:54:34.640
<v Speaker 1>authentication token.

00:54:35.280 --> 00:54:36.080
<v Speaker 0>Oops.

00:54:36.320 --> 00:54:38.000
<v Speaker 0>I'm gonna try and speed this up a

00:54:38.000 --> 00:54:38.400
<v Speaker 0>little bit.

00:54:40.655 --> 00:54:41.535
<v Speaker 0>There we go.

00:54:42.975 --> 00:54:44.575
<v Speaker 0>When in doubt, force.

00:54:45.295 --> 00:54:46.015
<v Speaker 1>Yep.

00:54:47.535 --> 00:54:49.215
<v Speaker 1>And so the next thing it's doing so

00:54:49.215 --> 00:54:51.215
<v Speaker 1>what you've done right now is you've deployed

00:54:51.215 --> 00:54:52.655
<v Speaker 1>the Orchestra pod.

00:54:53.010 --> 00:54:55.970
<v Speaker 1>So that's got a very simple baseline configuration.

00:54:56.210 --> 00:54:58.450
<v Speaker 0>Okay. And then yeah. And here we go.

00:54:58.450 --> 00:55:00.850
<v Speaker 1>So joys of webhooks.

00:55:01.730 --> 00:55:03.090
<v Speaker 1>Let's go ahead and run it again. It

00:55:03.090 --> 00:55:04.930
<v Speaker 1>should be much quicker this time because I

00:55:04.930 --> 00:55:06.770
<v Speaker 0>was just waiting for the certificate.

00:55:06.850 --> 00:55:08.370
<v Speaker 0>We probably had that too quickly.

00:55:08.955 --> 00:55:28.075
<v Speaker 1>But

00:55:26.090 --> 00:55:27.690
<v Speaker 1>I forgot what I was gonna say. What

00:55:27.690 --> 00:55:29.130
<v Speaker 1>were you talking about before the

00:55:30.250 --> 00:55:32.330
<v Speaker 1>oh, admission controllers. Yes.

00:55:33.770 --> 00:55:36.810
<v Speaker 1>And and finalizers and pod disruption budgets.

00:55:39.345 --> 00:55:41.345
<v Speaker 1>Yeah. I mean, I love admission controls. I

00:55:41.345 --> 00:55:43.265
<v Speaker 1>mean, we use admission controllers because we've got

00:55:43.265 --> 00:55:44.385
<v Speaker 1>very complex

00:55:45.745 --> 00:55:46.865
<v Speaker 1>CRs

00:55:46.945 --> 00:55:47.665
<v Speaker 1>that

00:55:48.945 --> 00:55:50.385
<v Speaker 1>just can't be

00:55:51.700 --> 00:55:52.740
<v Speaker 1>can't be

00:55:58.500 --> 00:56:00.100
<v Speaker 1>they just they can't be

00:56:02.740 --> 00:56:04.500
<v Speaker 1>validated just through schema.

00:56:04.985 --> 00:56:07.465
<v Speaker 1>Like, even the new whatever the the new

00:56:07.465 --> 00:56:10.105
<v Speaker 1>schema validation language in '25.

00:56:12.345 --> 00:56:14.345
<v Speaker 1>You know, there's that new scripting language

00:56:16.105 --> 00:56:18.505
<v Speaker 1>that you can embed into

00:56:19.390 --> 00:56:22.110
<v Speaker 1>your schema for CRs in one dot 25.

00:56:22.110 --> 00:56:23.550
<v Speaker 1>It's not Turing complete.

00:56:23.630 --> 00:56:26.190
<v Speaker 1>Yeah. I I can't, yeah, I can't remember

00:56:26.190 --> 00:56:28.190
<v Speaker 1>the name of it, but the idea is

00:56:28.190 --> 00:56:29.150
<v Speaker 1>is that

00:56:29.310 --> 00:56:31.310
<v Speaker 1>I think it's a beta in 25. It's

00:56:31.310 --> 00:56:32.990
<v Speaker 1>either an alpha or beta in 25. It's

00:56:32.990 --> 00:56:33.470
<v Speaker 1>not GA.

00:56:35.845 --> 00:56:36.484
<v Speaker 1>But

00:56:37.125 --> 00:56:39.605
<v Speaker 1>it it lets you it gives you a

00:56:39.605 --> 00:56:40.565
<v Speaker 1>little more

00:56:40.724 --> 00:56:41.525
<v Speaker 1>capabilities

00:56:41.525 --> 00:56:43.684
<v Speaker 1>around validating schema

00:56:43.684 --> 00:56:45.605
<v Speaker 1>rather than just open API.

00:56:48.059 --> 00:56:49.339
<v Speaker 0>I'll

00:56:49.339 --> 00:56:50.940
<v Speaker 0>try one more search before I give up

00:56:50.940 --> 00:56:52.380
<v Speaker 0>on it, but I'm gonna have to look

00:56:52.380 --> 00:56:54.539
<v Speaker 0>into the Combiner. That's what it is. Or

00:56:54.539 --> 00:56:56.380
<v Speaker 1>no. Combiner is the name of the release.

00:56:56.779 --> 00:56:58.700
<v Speaker 1>There is in there

00:56:59.645 --> 00:57:01.645
<v Speaker 1>I cannot remember the name of it for

00:57:01.645 --> 00:57:02.685
<v Speaker 1>the life of me.

00:57:03.805 --> 00:57:05.964
<v Speaker 1>Then again, I couldn't remember when annotation was,

00:57:05.964 --> 00:57:07.244
<v Speaker 1>so I don't know why anybody would listen

00:57:07.244 --> 00:57:07.965
<v Speaker 1>to me.

00:57:09.805 --> 00:57:11.724
<v Speaker 1>I thought it went to '25 as a

00:57:11.724 --> 00:57:12.045
<v Speaker 1>beta.

00:57:12.690 --> 00:57:14.530
<v Speaker 0>I don't know. We'll find out later. And

00:57:14.530 --> 00:57:16.290
<v Speaker 0>probably that's have to be honest, I've just

00:57:16.290 --> 00:57:18.770
<v Speaker 0>not paid attention to the 01/25 release really.

00:57:18.770 --> 00:57:19.250
<v Speaker 0>I I

00:57:20.290 --> 00:57:22.609
<v Speaker 0>because I've not upgraded the cluster to it

00:57:22.609 --> 00:57:24.290
<v Speaker 0>yet, but that is my next plan. Gotcha.

00:57:24.290 --> 00:57:24.530
<v Speaker 1>So

00:57:26.275 --> 00:57:29.075
<v Speaker 0>alright. Let's get back over to our

00:57:29.475 --> 00:57:30.595
<v Speaker 0>dogs

00:57:32.035 --> 00:57:33.155
<v Speaker 0>and

00:57:33.155 --> 00:57:34.755
<v Speaker 0>here. It's

00:57:35.395 --> 00:57:36.355
<v Speaker 1>shutting down.

00:57:36.595 --> 00:57:38.595
<v Speaker 0>I'm still trying to delete that pod.

00:57:41.635 --> 00:57:44.570
<v Speaker 0>I'm assuming it doesn't respect the sec term

00:57:44.570 --> 00:57:46.410
<v Speaker 0>or it's just not got a program. It

00:57:46.410 --> 00:57:47.850
<v Speaker 1>does. It's just the

00:57:49.450 --> 00:57:49.770
<v Speaker 1>it

00:57:51.210 --> 00:57:52.730
<v Speaker 1>it's cleaning up itself.

00:57:53.130 --> 00:57:54.970
<v Speaker 1>I do find that it takes a while

00:57:54.970 --> 00:57:55.610
<v Speaker 1>to

00:57:55.875 --> 00:57:57.635
<v Speaker 1>to shut itself down.

00:58:00.675 --> 00:58:02.595
<v Speaker 1>Although this does seem to be taking longer

00:58:02.595 --> 00:58:03.715
<v Speaker 1>than usual,

00:58:03.795 --> 00:58:05.475
<v Speaker 1>usually within about thirty seconds.

00:58:08.330 --> 00:58:09.690
<v Speaker 0>Maybe I should've

00:58:10.890 --> 00:58:12.650
<v Speaker 0>sprung for some bigger nodes.

00:58:14.250 --> 00:58:16.010
<v Speaker 1>What what size did you go with?

00:58:20.345 --> 00:58:23.224
<v Speaker 0>Four CPUs, eight gig around. Nice and bad.

00:58:23.224 --> 00:58:24.505
<v Speaker 1>That's what I've been using.

00:58:26.025 --> 00:58:28.184
<v Speaker 0>Yeah. We've got a probe failure for check

00:58:28.184 --> 00:58:28.905
<v Speaker 0>alive.

00:58:32.585 --> 00:58:34.424
<v Speaker 1>I mean, it's unhealthy. It should be dying.

00:58:34.910 --> 00:58:35.790
<v Speaker 1>Why

00:58:35.790 --> 00:58:36.990
<v Speaker 1>won't you die?

00:58:39.310 --> 00:58:41.630
<v Speaker 0>Oh, there we go. Alright. Now I just

00:58:41.630 --> 00:58:44.110
<v Speaker 0>just needed to restart before it finally Yeah.

00:58:44.110 --> 00:58:46.190
<v Speaker 1>It looks like something was going on there.

00:58:50.095 --> 00:58:52.255
<v Speaker 1>Yeah. I've gotta spend a little more time.

00:58:52.415 --> 00:58:55.295
<v Speaker 1>I I figure Civo's probably exposing

00:58:55.535 --> 00:58:59.295
<v Speaker 1>an underlying issue that I need to to

00:58:59.295 --> 00:59:00.735
<v Speaker 1>look at when it comes to the way

00:59:00.735 --> 00:59:01.935
<v Speaker 1>that we're

00:59:03.020 --> 00:59:04.540
<v Speaker 1>oh, but it's there. It's waiting a few

00:59:04.540 --> 00:59:06.460
<v Speaker 1>seconds. So it waits about ten seconds.

00:59:12.940 --> 00:59:13.740
<v Speaker 1>Alright.

00:59:13.740 --> 00:59:14.540
<v Speaker 1>Alright.

00:59:14.540 --> 00:59:16.220
<v Speaker 1>So Looks like we're in business.

00:59:17.145 --> 00:59:18.505
<v Speaker 1>So if you take a look at your

00:59:18.505 --> 00:59:19.065
<v Speaker 1>pods

00:59:19.385 --> 00:59:20.905
<v Speaker 1>actually, you should be able to just log

00:59:20.905 --> 00:59:24.425
<v Speaker 1>in. So, obviously, there's no it's a self

00:59:24.425 --> 00:59:25.465
<v Speaker 1>signed cert.

00:59:26.345 --> 00:59:26.745
<v Speaker 0>Yep.

00:59:33.380 --> 00:59:34.500
<v Speaker 1>So you gotta

00:59:34.820 --> 00:59:36.740
<v Speaker 1>let us see

00:59:37.220 --> 00:59:38.980
<v Speaker 1>see all your unmentionables.

00:59:41.060 --> 00:59:43.460
<v Speaker 0>I'm pretty sure I used that org. Yeah.

00:59:43.460 --> 00:59:46.020
<v Speaker 1>You used Rawkode Academy as your authorizing

00:59:46.020 --> 00:59:46.740
<v Speaker 1>organization.

00:59:49.135 --> 00:59:51.295
<v Speaker 1>Cool. So you're in. So now you click

00:59:51.295 --> 00:59:52.575
<v Speaker 1>on that dashboard,

00:59:53.214 --> 00:59:53.775
<v Speaker 1>and

00:59:54.895 --> 00:59:56.575
<v Speaker 1>you'll be in. You won't be able to

00:59:56.575 --> 00:59:58.095
<v Speaker 1>see anything because you still have to enable

00:59:58.095 --> 00:59:59.295
<v Speaker 1>some RBAC policies.

01:00:05.950 --> 01:00:07.630
<v Speaker 1>So, yeah, if you look at the bell

01:00:07.630 --> 01:00:09.870
<v Speaker 1>in that upper right hand corner, you'll you'll

01:00:09.870 --> 01:00:12.125
<v Speaker 1>see bunch of RBAC errors. And if you

01:00:12.125 --> 01:00:13.565
<v Speaker 1>look at your little human on the right

01:00:13.565 --> 01:00:15.645
<v Speaker 1>hand side because you're using impersonation,

01:00:15.724 --> 01:00:17.885
<v Speaker 1>it'll actually have your GitHub username. I wrote

01:00:17.885 --> 01:00:18.445
<v Speaker 1>that.

01:00:22.765 --> 01:00:24.685
<v Speaker 1>So, yeah, if you grant now the nice

01:00:24.685 --> 01:00:27.590
<v Speaker 1>thing is is you can grant RBAC based

01:00:27.590 --> 01:00:28.230
<v Speaker 1>on

01:00:28.870 --> 01:00:30.390
<v Speaker 1>your GitHub works.

01:00:31.270 --> 01:00:33.910
<v Speaker 1>So you're not granting RBAC directly to a

01:00:33.910 --> 01:00:35.190
<v Speaker 1>user. So if you go back to the

01:00:35.190 --> 01:00:36.230
<v Speaker 1>documentation,

01:00:37.350 --> 01:00:39.430
<v Speaker 1>I actually have a example in there.

01:00:40.875 --> 01:00:41.595
<v Speaker 1>So scroll

01:00:42.075 --> 01:00:43.915
<v Speaker 1>you actually, on the right hand side, see

01:00:43.915 --> 01:00:46.235
<v Speaker 1>where it says GitHub RBAC bindings?

01:00:47.115 --> 01:00:49.435
<v Speaker 1>So you wanna copy that and just change

01:00:49.435 --> 01:00:52.875
<v Speaker 1>the group from Tremblay security owners to,

01:00:53.115 --> 01:00:53.515
<v Speaker 1>you know,

01:00:54.279 --> 01:00:55.880
<v Speaker 1>whatever you want, really.

01:00:56.279 --> 01:00:57.160
<v Speaker 0>Alright.

01:00:57.240 --> 01:00:57.880
<v Speaker 0>So

01:00:58.200 --> 01:01:00.040
<v Speaker 0>we're saying all owners

01:01:00.359 --> 01:01:03.320
<v Speaker 0>here get cluster admin and the cluster.

01:01:03.559 --> 01:01:04.280
<v Speaker 1>Yep.

01:01:07.559 --> 01:01:08.680
<v Speaker 0>I call this RBAC.

01:01:09.595 --> 01:01:11.755
<v Speaker 1>So now you go back to your dashboard,

01:01:14.395 --> 01:01:15.675
<v Speaker 1>and you can see all the errors are

01:01:15.675 --> 01:01:17.355
<v Speaker 1>gone. Man. Maybe not. I may have to

01:01:17.355 --> 01:01:18.475
<v Speaker 0>log in back in?

01:01:18.955 --> 01:01:20.715
<v Speaker 1>No. Click on the

01:01:21.595 --> 01:01:23.035
<v Speaker 1>that little bell thing again.

01:01:24.620 --> 01:01:26.220
<v Speaker 1>Is forbidden.

01:01:26.300 --> 01:01:28.060
<v Speaker 1>Interesting. Go back to the main

01:01:28.300 --> 01:01:29.500
<v Speaker 1>OpenUnison

01:01:29.500 --> 01:01:30.300
<v Speaker 1>screen.

01:01:34.940 --> 01:01:36.860
<v Speaker 1>And then in the upper left hand corner,

01:01:36.860 --> 01:01:38.700
<v Speaker 1>you'll see your name Rawkode. Click on that.

01:01:39.975 --> 01:01:42.535
<v Speaker 1>And I actually can't read it. It's really

01:01:42.535 --> 01:01:43.335
<v Speaker 1>fuzzy.

01:01:43.335 --> 01:01:44.855
<v Speaker 1>But do you see Rawkode

01:01:46.055 --> 01:01:48.135
<v Speaker 1>I don't see anybody called Rawkode owners. That's

01:01:48.135 --> 01:01:49.095
<v Speaker 1>probably the problem.

01:01:50.055 --> 01:01:51.895
<v Speaker 1>So if if you wanna

01:01:52.055 --> 01:01:52.775
<v Speaker 1>just be

01:01:53.460 --> 01:01:56.260
<v Speaker 0>Also that You wanna just do Rawkode slash

01:01:57.060 --> 01:01:59.860
<v Speaker 1>or my you know, any one of those.

01:02:01.060 --> 01:02:03.540
<v Speaker 0>Would that work? Just Rawkode? No. It has

01:02:03.540 --> 01:02:06.500
<v Speaker 1>to be slash. So slash nothing means you

01:02:06.500 --> 01:02:08.260
<v Speaker 1>wanna let the entire organization in.

01:02:09.905 --> 01:02:11.905
<v Speaker 0>Alright. Let's just do the cluster team because

01:02:11.905 --> 01:02:13.105
<v Speaker 0>I I trust me.

01:02:14.625 --> 01:02:16.945
<v Speaker 1>Is that is that a smart move? No.

01:02:19.345 --> 01:02:21.810
<v Speaker 1>So okay. Now it's all gone. So now

01:02:21.810 --> 01:02:24.210
<v Speaker 1>you are, in fact, a cluster administrator,

01:02:24.450 --> 01:02:26.050
<v Speaker 1>and you can do everything

01:02:26.210 --> 01:02:28.370
<v Speaker 1>to your heart's content that the dashboard lets

01:02:28.370 --> 01:02:29.010
<v Speaker 1>you do.

01:02:29.570 --> 01:02:31.810
<v Speaker 1>Stuff like the terminal works beautifully.

01:02:32.050 --> 01:02:33.730
<v Speaker 1>You wanna terminal into

01:02:33.730 --> 01:02:34.210
<v Speaker 1>things.

01:02:39.515 --> 01:02:40.955
<v Speaker 0>So

01:02:43.035 --> 01:02:44.555
<v Speaker 1>and then we've got all sorts of little

01:02:44.555 --> 01:02:46.715
<v Speaker 1>controls in the back, like, you know, if

01:02:46.715 --> 01:02:48.555
<v Speaker 1>you log out of the main portal

01:02:48.950 --> 01:02:49.670
<v Speaker 1>and

01:02:50.630 --> 01:02:51.910
<v Speaker 1>they'll they'll

01:02:51.910 --> 01:02:53.509
<v Speaker 1>break you out of this. So you can't

01:02:53.509 --> 01:02:55.750
<v Speaker 1>leave the the main portal.

01:02:55.910 --> 01:02:57.430
<v Speaker 1>You know, you can't leave the main portal

01:02:57.430 --> 01:02:59.270
<v Speaker 1>but still get into the dashboard.

01:02:59.829 --> 01:03:02.470
<v Speaker 1>You know, most enterprises have policies around things

01:03:02.470 --> 01:03:03.670
<v Speaker 1>like idle time out,

01:03:04.345 --> 01:03:05.385
<v Speaker 1>stuff like that.

01:03:06.425 --> 01:03:08.585
<v Speaker 1>And then if you wanna access your cluster

01:03:08.585 --> 01:03:10.585
<v Speaker 1>directly using kubectl,

01:03:10.585 --> 01:03:12.665
<v Speaker 1>you go back to that main screen.

01:03:15.545 --> 01:03:16.985
<v Speaker 1>You click on home,

01:03:17.305 --> 01:03:18.665
<v Speaker 1>see that Kubernetes token.

01:03:25.750 --> 01:03:27.510
<v Speaker 0>Wow. I think my Internet fast.

01:03:28.550 --> 01:03:29.270
<v Speaker 0>Struggling.

01:03:29.430 --> 01:03:31.510
<v Speaker 0>Well, I do stream on a fry a

01:03:31.510 --> 01:03:33.830
<v Speaker 0>five g connection, which is usually pretty solid.

01:03:33.830 --> 01:03:34.230
<v Speaker 1>Really?

01:03:34.674 --> 01:03:35.234
<v Speaker 0>Yeah.

01:03:35.474 --> 01:03:36.755
<v Speaker 0>That's impressive.

01:03:36.914 --> 01:03:39.635
<v Speaker 0>The fiber company for this building wanted an

01:03:39.635 --> 01:03:41.474
<v Speaker 0>extortionate amount of money, and I said, no.

01:03:41.474 --> 01:03:42.914
<v Speaker 0>I'll go with five g. And I actually

01:03:42.914 --> 01:03:46.035
<v Speaker 0>get, like, 500, six hundred meg down and,

01:03:46.035 --> 01:03:48.780
<v Speaker 0>like, 300 meg up. Well, from what I

01:03:48.780 --> 01:03:51.180
<v Speaker 1>real I think y'all Europeans are much harder

01:03:51.180 --> 01:03:53.820
<v Speaker 1>on your telcos for marketing nonsense than we

01:03:53.820 --> 01:03:55.100
<v Speaker 1>are here in The States.

01:03:56.140 --> 01:03:57.740
<v Speaker 1>I think here as long as it's not,

01:03:57.740 --> 01:03:59.980
<v Speaker 1>you know, one g accounts as five g.

01:04:03.065 --> 01:04:04.424
<v Speaker 0>There we go. There it is. Okay. So

01:04:04.424 --> 01:04:06.505
<v Speaker 1>it took a second. So now you've got

01:04:06.505 --> 01:04:08.825
<v Speaker 1>a kube control command and a Windows kube

01:04:08.825 --> 01:04:09.865
<v Speaker 1>control command.

01:04:10.184 --> 01:04:12.184
<v Speaker 1>And if you actually look, there's a little

01:04:12.184 --> 01:04:13.944
<v Speaker 1>set of boxes next to the word kube

01:04:13.944 --> 01:04:15.785
<v Speaker 1>control command. It makes it a lot easier.

01:04:16.265 --> 01:04:18.480
<v Speaker 1>And so you take that. And what I

01:04:18.480 --> 01:04:20.560
<v Speaker 1>would do is don't use the same

01:04:21.040 --> 01:04:22.640
<v Speaker 1>kubectl configuration

01:04:22.640 --> 01:04:24.240
<v Speaker 1>so that way you don't lose your

01:04:24.720 --> 01:04:26.560
<v Speaker 1>you know, potentially overwrite

01:04:27.680 --> 01:04:29.280
<v Speaker 1>your existing context.

01:04:29.440 --> 01:04:31.680
<v Speaker 0>It's alright. I'm using Kubi. So all of

01:04:31.680 --> 01:04:34.255
<v Speaker 0>my Oh, okay. They're all different files. So

01:04:34.415 --> 01:04:35.135
<v Speaker 1>Gotcha.

01:04:35.215 --> 01:04:37.215
<v Speaker 1>Well so yeah. So what's gonna happen is

01:04:37.215 --> 01:04:39.055
<v Speaker 1>you paste that in, and it's going to

01:04:39.055 --> 01:04:39.855
<v Speaker 1>generate

01:04:40.095 --> 01:04:42.015
<v Speaker 1>a kube control configuration

01:04:42.015 --> 01:04:44.655
<v Speaker 1>file using the kube control command. So it's

01:04:44.655 --> 01:04:46.655
<v Speaker 1>gonna go to whatever. So now you can

01:04:46.655 --> 01:04:49.710
<v Speaker 1>see if you do a kubectl get nodes.

01:04:51.710 --> 01:04:52.590
<v Speaker 0>Notice.

01:04:53.150 --> 01:04:53.790
<v Speaker 1>Yeah.

01:04:54.030 --> 01:04:54.910
<v Speaker 1>There you go.

01:04:55.630 --> 01:04:57.470
<v Speaker 1>You now have access to everything.

01:04:58.670 --> 01:04:59.630
<v Speaker 1>And so

01:05:00.830 --> 01:05:01.470
<v Speaker 1>the

01:05:03.605 --> 01:05:05.045
<v Speaker 1>left the phone down here.

01:05:05.845 --> 01:05:06.325
<v Speaker 1>The

01:05:10.645 --> 01:05:12.885
<v Speaker 1>yeah. You're right now going through that that

01:05:12.885 --> 01:05:15.684
<v Speaker 1>Kubo IDC proxy, and and the reason we

01:05:15.684 --> 01:05:16.964
<v Speaker 1>use that is because

01:05:17.890 --> 01:05:19.410
<v Speaker 1>Kubernetes again?

01:05:19.410 --> 01:05:20.610
<v Speaker 0>There is the Who am I making is

01:05:20.610 --> 01:05:21.410
<v Speaker 0>that a plugin?

01:05:22.530 --> 01:05:25.090
<v Speaker 1>That is a plugin. I I

01:05:25.570 --> 01:05:27.970
<v Speaker 1>think the API was included in '25, but

01:05:27.970 --> 01:05:30.050
<v Speaker 1>they haven't added anything to kubectl yet.

01:05:34.585 --> 01:05:36.105
<v Speaker 1>I would say do something you're not allowed

01:05:36.105 --> 01:05:37.625
<v Speaker 1>to do, but you're a cluster admin. I

01:05:37.625 --> 01:05:39.625
<v Speaker 0>know. I've got everything. So So you've got

01:05:39.625 --> 01:05:40.345
<v Speaker 1>everything.

01:05:41.385 --> 01:05:43.224
<v Speaker 1>But the nice thing is is that you

01:05:43.224 --> 01:05:44.505
<v Speaker 1>didn't set up any certificates.

01:05:45.869 --> 01:05:48.750
<v Speaker 1>You didn't set up any host names. It

01:05:48.750 --> 01:05:49.790
<v Speaker 1>all just worked.

01:05:51.230 --> 01:05:53.390
<v Speaker 1>Now really cool thing is, why don't you

01:05:53.390 --> 01:05:55.230
<v Speaker 1>set up a watch on, like, kubectl get

01:05:55.230 --> 01:05:56.430
<v Speaker 1>pods or whatever?

01:05:57.869 --> 01:05:58.190
<v Speaker 0>Well,

01:05:59.055 --> 01:06:01.375
<v Speaker 0>could you help me understand what actually happened

01:06:01.375 --> 01:06:01.935
<v Speaker 0>here?

01:06:02.815 --> 01:06:06.255
<v Speaker 1>Yeah. So Is this set up as service?

01:06:06.255 --> 01:06:08.575
<v Speaker 1>You drew two owl two circles, and then

01:06:08.575 --> 01:06:09.454
<v Speaker 1>you had Kubernetes.

01:06:12.010 --> 01:06:13.849
<v Speaker 1>So what happened was

01:06:14.089 --> 01:06:16.089
<v Speaker 1>if you look at your if

01:06:16.410 --> 01:06:18.170
<v Speaker 1>you go back in your

01:06:18.650 --> 01:06:21.130
<v Speaker 1>command history to the actual command,

01:06:22.250 --> 01:06:23.930
<v Speaker 1>it's gonna be this big giant thing.

01:06:25.505 --> 01:06:27.505
<v Speaker 0>I'll just scroll up.

01:06:28.785 --> 01:06:30.945
<v Speaker 1>Yeah. There you go. So what we're doing

01:06:30.945 --> 01:06:31.665
<v Speaker 1>is

01:06:32.865 --> 01:06:35.265
<v Speaker 1>we're actually using all existing

01:06:35.265 --> 01:06:37.025
<v Speaker 1>control configuration

01:06:37.665 --> 01:06:40.079
<v Speaker 1>commands. Like, the you're doing the you didn't

01:06:40.079 --> 01:06:42.880
<v Speaker 1>download anything to actually run this.

01:06:44.079 --> 01:06:46.640
<v Speaker 1>And so the idea here is that we

01:06:46.640 --> 01:06:48.240
<v Speaker 1>wanted it so that you didn't have to

01:06:48.240 --> 01:06:51.680
<v Speaker 1>deploy anything to access clusters other than kubectl.

01:06:51.760 --> 01:06:53.359
<v Speaker 1>So what do we do? We set the

01:06:53.359 --> 01:06:55.315
<v Speaker 1>server up with the correct host name. Now

01:06:55.315 --> 01:06:57.315
<v Speaker 1>in this instance, that host name will be

01:06:57.475 --> 01:07:00.755
<v Speaker 1>our API our API proxy. So you're not

01:07:00.755 --> 01:07:03.635
<v Speaker 1>talking directly to the Cboe API server. You're

01:07:03.635 --> 01:07:06.195
<v Speaker 1>talking to the Kube OIDC

01:07:06.195 --> 01:07:06.595
<v Speaker 1>proxy.

01:07:07.560 --> 01:07:10.200
<v Speaker 1>We set up the certificate for it.

01:07:11.560 --> 01:07:12.840
<v Speaker 1>We set up

01:07:14.600 --> 01:07:16.040
<v Speaker 1>the OIDC

01:07:16.040 --> 01:07:16.920
<v Speaker 1>configuration,

01:07:16.920 --> 01:07:19.720
<v Speaker 1>so where the issuer is, the certificate for

01:07:19.720 --> 01:07:20.280
<v Speaker 1>the issuer.

01:07:20.825 --> 01:07:22.744
<v Speaker 1>We and then we went ahead and also

01:07:22.744 --> 01:07:24.265
<v Speaker 1>set up your

01:07:24.505 --> 01:07:27.865
<v Speaker 1>initial ID token and refresh token.

01:07:28.265 --> 01:07:29.145
<v Speaker 1>So now

01:07:29.545 --> 01:07:31.704
<v Speaker 1>you can just go to your heart's content,

01:07:31.704 --> 01:07:35.305
<v Speaker 1>and kubectl is gonna continuously refresh that token

01:07:37.319 --> 01:07:38.200
<v Speaker 1>until

01:07:38.359 --> 01:07:40.359
<v Speaker 1>one or two things happen. Either you idle

01:07:40.359 --> 01:07:41.320
<v Speaker 1>time out

01:07:41.559 --> 01:07:44.359
<v Speaker 1>or if you log out of OpenUnison,

01:07:44.760 --> 01:07:46.519
<v Speaker 1>it will end your session.

01:07:48.165 --> 01:07:50.725
<v Speaker 1>So the security folks in enterprises love that,

01:07:50.725 --> 01:07:52.245
<v Speaker 1>that there's a way to actually kill a

01:07:52.245 --> 01:07:54.645
<v Speaker 1>session in within about a minute.

01:07:56.005 --> 01:07:57.925
<v Speaker 0>And that's just by revoking the refresh token.

01:07:57.925 --> 01:08:01.285
<v Speaker 0>Right? Yep. And then, like, let's say, you

01:08:01.285 --> 01:08:03.650
<v Speaker 1>know, David's gotta be walked out for whatever

01:08:03.650 --> 01:08:04.210
<v Speaker 1>reason.

01:08:04.770 --> 01:08:07.250
<v Speaker 1>Know? He's gotta be fired again. Yeah.

01:08:07.970 --> 01:08:10.210
<v Speaker 1>It it you know, it's Tuesday. Right?

01:08:12.130 --> 01:08:14.609
<v Speaker 1>You know, you go in and the session

01:08:14.609 --> 01:08:16.850
<v Speaker 1>is stored as CRs, so you just delete

01:08:17.155 --> 01:08:19.875
<v Speaker 1>all of David's sessions, and within a minute,

01:08:19.875 --> 01:08:21.635
<v Speaker 1>those tokens are gonna stop working.

01:08:22.354 --> 01:08:23.234
<v Speaker 0>So

01:08:26.515 --> 01:08:28.035
<v Speaker 1>I think it's called I think if you

01:08:28.035 --> 01:08:30.195
<v Speaker 1>do, like, a kubectl get o I d

01:08:30.195 --> 01:08:32.595
<v Speaker 1>c dash sessions and OpenUnison,

01:08:32.970 --> 01:08:34.090
<v Speaker 1>you'll see them.

01:08:36.170 --> 01:08:37.290
<v Speaker 1>O I d c

01:08:40.570 --> 01:08:41.689
<v Speaker 1>dash sessions.

01:08:43.930 --> 01:08:45.770
<v Speaker 1>Yep. So you've got a bunch of sessions

01:08:45.770 --> 01:08:46.890
<v Speaker 1>open. You delete those,

01:08:47.675 --> 01:08:50.154
<v Speaker 1>and then within about a minute, your your

01:08:50.154 --> 01:08:51.594
<v Speaker 1>token will become useless.

01:08:53.194 --> 01:08:55.114
<v Speaker 1>So as an operator, you wanna you wanna

01:08:55.114 --> 01:08:56.314
<v Speaker 1>kill somebody's sessions.

01:09:01.389 --> 01:09:03.069
<v Speaker 0>Alright. Need to look at what it is.

01:09:03.149 --> 01:09:03.949
<v Speaker 1>Sure.

01:09:04.590 --> 01:09:06.590
<v Speaker 1>Now I am the first person to say

01:09:06.590 --> 01:09:08.989
<v Speaker 1>you should never store anything sensitive

01:09:09.309 --> 01:09:10.429
<v Speaker 1>in a

01:09:10.989 --> 01:09:11.789
<v Speaker 1>CR.

01:09:12.429 --> 01:09:14.590
<v Speaker 1>I break that rule here because this is

01:09:14.590 --> 01:09:15.309
<v Speaker 1>all encrypted,

01:09:17.524 --> 01:09:19.045
<v Speaker 1>and RBAC

01:09:19.284 --> 01:09:21.684
<v Speaker 1>protected. So if somebody has this,

01:09:22.404 --> 01:09:25.045
<v Speaker 1>unless they also have the decryption key,

01:09:26.564 --> 01:09:28.085
<v Speaker 1>they don't have access to anything.

01:09:28.830 --> 01:09:29.469
<v Speaker 1>Yeah.

01:09:29.790 --> 01:09:31.630
<v Speaker 0>I think it is binary encrypted and then

01:09:31.630 --> 01:09:33.149
<v Speaker 0>base base encoded.

01:09:34.430 --> 01:09:36.510
<v Speaker 0>No. I don't know. I see the equals,

01:09:36.510 --> 01:09:38.270
<v Speaker 0>and I think maybe base Yeah. The that

01:09:38.270 --> 01:09:39.870
<v Speaker 1>one's just base 64

01:09:39.870 --> 01:09:40.750
<v Speaker 1>encoded, I think.

01:09:42.724 --> 01:09:43.364
<v Speaker 1>But

01:09:43.764 --> 01:09:46.005
<v Speaker 1>that has to match up with stuff in

01:09:46.005 --> 01:09:48.724
<v Speaker 1>the encrypted ID token and the access token.

01:09:50.804 --> 01:09:51.604
<v Speaker 0>Nice.

01:09:51.844 --> 01:09:54.324
<v Speaker 0>I you know what? There's there's so many

01:09:54.324 --> 01:09:57.000
<v Speaker 0>benefits from storing stuff and custom resources because

01:09:57.000 --> 01:09:58.520
<v Speaker 0>I get to hook into all of the

01:09:58.520 --> 01:09:59.239
<v Speaker 0>tooling

01:09:59.800 --> 01:10:01.719
<v Speaker 0>that I already know.

01:10:02.119 --> 01:10:02.679
<v Speaker 0>Yeah.

01:10:03.159 --> 01:10:04.520
<v Speaker 0>And I I just think this is a

01:10:04.520 --> 01:10:06.440
<v Speaker 0>really, really sleek way of doing it. This

01:10:06.440 --> 01:10:07.800
<v Speaker 0>is very cool. It

01:10:08.440 --> 01:10:09.560
<v Speaker 1>works really well.

01:10:10.764 --> 01:10:12.844
<v Speaker 1>We used to do it in a database.

01:10:13.405 --> 01:10:14.044
<v Speaker 1>And

01:10:14.364 --> 01:10:16.605
<v Speaker 1>back when we first started it and once

01:10:16.605 --> 01:10:18.605
<v Speaker 1>CRs became a thing I remember when I

01:10:18.605 --> 01:10:20.204
<v Speaker 1>first said, you know, how would I store

01:10:20.204 --> 01:10:21.405
<v Speaker 1>custom information

01:10:21.644 --> 01:10:22.764
<v Speaker 1>in Kubernetes?

01:10:22.764 --> 01:10:25.005
<v Speaker 1>This is this is before CRs were even

01:10:25.005 --> 01:10:25.405
<v Speaker 1>available.

01:10:26.130 --> 01:10:28.449
<v Speaker 1>And I was like, you know, would I

01:10:28.449 --> 01:10:30.210
<v Speaker 1>just talk to etcd directly? And they're like,

01:10:30.210 --> 01:10:31.570
<v Speaker 1>no. And I go, why? He goes, you

01:10:31.570 --> 01:10:33.330
<v Speaker 1>know, you know, are you some kind of

01:10:33.330 --> 01:10:36.050
<v Speaker 1>masochist? You wanna talk to etcd directly?

01:10:36.530 --> 01:10:37.890
<v Speaker 1>You you enjoy pain?

01:10:39.395 --> 01:10:42.114
<v Speaker 1>And so the the CRs, I think, are

01:10:42.275 --> 01:10:44.355
<v Speaker 1>are really going to

01:10:44.755 --> 01:10:47.074
<v Speaker 1>become a big part of what makes Kubernetes

01:10:47.074 --> 01:10:47.795
<v Speaker 1>your

01:10:48.114 --> 01:10:51.395
<v Speaker 1>your data center operating system rather than just

01:10:51.395 --> 01:10:53.155
<v Speaker 1>a

01:10:52.400 --> 01:10:55.200
<v Speaker 1>pod control management system, a container control management

01:10:55.200 --> 01:10:58.320
<v Speaker 1>system. I really hope that the API machinery

01:10:58.320 --> 01:11:02.159
<v Speaker 0>team add some sort of sensitive or encrypted

01:11:02.160 --> 01:11:04.720
<v Speaker 0>label for custom resource fields so that even

01:11:04.720 --> 01:11:05.920
<v Speaker 0>that can be handled

01:11:06.555 --> 01:11:08.955
<v Speaker 0>by the API server. But I mean, I've

01:11:08.955 --> 01:11:11.915
<v Speaker 1>I've got a whole rant on secrets management

01:11:11.915 --> 01:11:13.355
<v Speaker 1>in Kubernetes.

01:11:14.795 --> 01:11:16.955
<v Speaker 1>But now the cool thing is

01:11:17.835 --> 01:11:19.355
<v Speaker 1>a lot of people don't like what we

01:11:19.355 --> 01:11:20.395
<v Speaker 1>did with

01:11:22.090 --> 01:11:25.450
<v Speaker 1>copying and pasting that token. Mhmm.

01:11:26.570 --> 01:11:27.450
<v Speaker 1>And so

01:11:27.610 --> 01:11:30.010
<v Speaker 1>if you go back to our documentation,

01:11:30.570 --> 01:11:31.930
<v Speaker 1>there is a

01:11:32.570 --> 01:11:33.930
<v Speaker 1>or I don't know. Do you have

01:11:34.730 --> 01:11:37.130
<v Speaker 1>a crew installed? The crew plugin installed?

01:11:37.725 --> 01:11:39.965
<v Speaker 0>No. I don't. Oh, okay.

01:11:40.685 --> 01:11:43.485
<v Speaker 1>So we have a a a crew plugin

01:11:45.165 --> 01:11:47.804
<v Speaker 1>where that actually let a kube control plugin

01:11:47.804 --> 01:11:49.804
<v Speaker 1>that lets you bypass that whole thing. So

01:11:49.804 --> 01:11:52.125
<v Speaker 1>you'll see a picture of it here where,

01:11:52.125 --> 01:11:52.364
<v Speaker 1>you know,

01:11:54.260 --> 01:11:56.580
<v Speaker 1>you run kubectl get nodes. Okay. It's not

01:11:56.580 --> 01:11:57.619
<v Speaker 1>authenticated.

01:11:59.380 --> 01:12:01.219
<v Speaker 1>This was the first time I ever made

01:12:01.219 --> 01:12:03.219
<v Speaker 1>a GIF out of a video. I think

01:12:03.219 --> 01:12:04.500
<v Speaker 1>this took me about four hours.

01:12:06.875 --> 01:12:08.955
<v Speaker 1>But you see that pops open the the

01:12:08.955 --> 01:12:11.515
<v Speaker 1>browser window you log in and and similar

01:12:11.515 --> 01:12:13.515
<v Speaker 1>to, you know, if if you're working with

01:12:13.515 --> 01:12:15.515
<v Speaker 1>any of the cloud CLIs

01:12:15.515 --> 01:12:16.715
<v Speaker 1>that pop open

01:12:16.955 --> 01:12:19.680
<v Speaker 0>Nice. Or the the OU login. But the

01:12:19.680 --> 01:12:21.280
<v Speaker 1>the cool thing about that is is that

01:12:21.280 --> 01:12:24.320
<v Speaker 1>there's no preset configuration options

01:12:25.440 --> 01:12:26.400
<v Speaker 1>at all.

01:12:26.720 --> 01:12:29.040
<v Speaker 1>There's nothing to distribute because that that's one

01:12:29.040 --> 01:12:30.800
<v Speaker 1>of the hardest things to do in an

01:12:30.800 --> 01:12:31.360
<v Speaker 1>enterprise

01:12:31.875 --> 01:12:34.675
<v Speaker 1>is distribute things, keep it updated.

01:12:35.875 --> 01:12:38.035
<v Speaker 1>I've got a bank that's probably my largest

01:12:38.035 --> 01:12:39.554
<v Speaker 1>Kubernetes customer,

01:12:39.955 --> 01:12:40.514
<v Speaker 1>and

01:12:42.115 --> 01:12:42.994
<v Speaker 1>they've

01:12:43.075 --> 01:12:44.755
<v Speaker 1>held off on

01:12:45.075 --> 01:12:48.500
<v Speaker 1>just this, the OU login plug in for

01:12:48.980 --> 01:12:51.780
<v Speaker 1>almost two years now just because it's a

01:12:51.780 --> 01:12:54.100
<v Speaker 1>pain for them to go through the

01:12:56.180 --> 01:12:58.340
<v Speaker 1>submitting something to be distributed

01:12:59.300 --> 01:13:01.715
<v Speaker 1>across the bank. Mhmm. You know, it's gotta

01:13:01.715 --> 01:13:04.115
<v Speaker 1>get scanned. It's gotta get you know, there

01:13:04.115 --> 01:13:05.554
<v Speaker 1>has to be a deployment

01:13:05.555 --> 01:13:08.035
<v Speaker 1>plan. You know, there's a central repository. You

01:13:08.035 --> 01:13:09.795
<v Speaker 1>know, you can't just download stuff and run

01:13:09.795 --> 01:13:11.795
<v Speaker 1>it. You've gotta go and get the official

01:13:11.795 --> 01:13:12.115
<v Speaker 1>thing.

01:13:14.449 --> 01:13:15.889
<v Speaker 1>So we wanted to give you the option

01:13:15.889 --> 01:13:16.849
<v Speaker 1>to do both.

01:13:18.050 --> 01:13:18.610
<v Speaker 1>Now we

01:13:19.409 --> 01:13:21.969
<v Speaker 1>you know, it's it's quarter to two. So

01:13:22.690 --> 01:13:24.210
<v Speaker 1>I I have all the time in the

01:13:24.210 --> 01:13:24.769
<v Speaker 1>world.

01:13:26.290 --> 01:13:28.770
<v Speaker 1>Do you wanna try adding a cluster for

01:13:28.770 --> 01:13:32.215
<v Speaker 1>multi cluster? Yeah. Let's do it. Okay. Cool.

01:13:32.215 --> 01:13:34.135
<v Speaker 1>So grab your your

01:13:34.695 --> 01:13:36.854
<v Speaker 1>yep. Go right there. You got it.

01:13:38.454 --> 01:13:39.094
<v Speaker 1>So

01:13:40.135 --> 01:13:41.815
<v Speaker 1>what we did with multicluster.

01:13:43.050 --> 01:13:44.090
<v Speaker 1>So there are two ways you can do

01:13:44.090 --> 01:13:45.849
<v Speaker 1>multicluster with OpenUnison

01:13:47.050 --> 01:13:48.409
<v Speaker 1>depending on

01:13:48.650 --> 01:13:49.289
<v Speaker 1>your

01:13:50.409 --> 01:13:52.729
<v Speaker 1>level of comfort with Kubernetes.

01:13:53.610 --> 01:13:56.489
<v Speaker 1>You can do it where every cluster

01:13:56.925 --> 01:13:57.565
<v Speaker 1>gets its

01:13:58.125 --> 01:14:00.284
<v Speaker 1>this happens regardless. Every cluster always has its

01:14:00.284 --> 01:14:01.485
<v Speaker 1>own OpenUnison.

01:14:02.125 --> 01:14:03.645
<v Speaker 1>And the reason why we do that is

01:14:03.804 --> 01:14:05.005
<v Speaker 1>let's go back to we were talking about

01:14:05.005 --> 01:14:06.284
<v Speaker 1>silos. Right?

01:14:06.764 --> 01:14:07.564
<v Speaker 1>If

01:14:07.965 --> 01:14:09.724
<v Speaker 1>I have my own cluster

01:14:10.204 --> 01:14:11.885
<v Speaker 1>and I want to

01:14:12.670 --> 01:14:15.869
<v Speaker 1>add Argo CD to it and do SSO

01:14:15.869 --> 01:14:16.989
<v Speaker 1>into Argo CD,

01:14:17.230 --> 01:14:19.150
<v Speaker 1>I don't wanna have to go to you

01:14:19.150 --> 01:14:22.589
<v Speaker 1>as the cluster manager, as the Kubernetes team,

01:14:22.750 --> 01:14:24.670
<v Speaker 1>and say, please integrate my cluster.

01:14:25.725 --> 01:14:29.005
<v Speaker 1>I wanna integrate into my cluster's OpenUnison

01:14:29.005 --> 01:14:30.844
<v Speaker 1>so that I can do SSO.

01:14:33.565 --> 01:14:36.045
<v Speaker 1>And so everybody gets their own OpenUnison.

01:14:36.764 --> 01:14:37.405
<v Speaker 1>Now

01:14:38.119 --> 01:14:40.280
<v Speaker 1>you can either set up each OpenUnison to

01:14:40.280 --> 01:14:42.599
<v Speaker 1>go back to your main identity provider. So,

01:14:42.599 --> 01:14:45.079
<v Speaker 1>like, this would be basically repeating the process

01:14:45.079 --> 01:14:47.320
<v Speaker 1>we just did for every cluster,

01:14:47.960 --> 01:14:50.119
<v Speaker 1>which is a little painful. But if your

01:14:50.119 --> 01:14:52.395
<v Speaker 1>main Kubernetes goes to or your main cluster,

01:14:52.395 --> 01:14:54.555
<v Speaker 1>your control plane cluster goes down, it doesn't

01:14:54.555 --> 01:14:56.395
<v Speaker 1>take out everybody else. So it limits your

01:14:56.395 --> 01:14:57.835
<v Speaker 1>your blast radius.

01:14:58.715 --> 01:15:01.355
<v Speaker 1>The major downside to that is if you

01:15:01.355 --> 01:15:02.875
<v Speaker 1>don't own the connection

01:15:03.275 --> 01:15:05.275
<v Speaker 1>up to your identity provider,

01:15:05.980 --> 01:15:07.260
<v Speaker 1>that can be painful.

01:15:07.580 --> 01:15:10.620
<v Speaker 1>And and, again, silos and enterprise, the people

01:15:10.620 --> 01:15:12.460
<v Speaker 1>who own authentication

01:15:12.940 --> 01:15:15.660
<v Speaker 1>don't generally aren't the same people who own

01:15:15.660 --> 01:15:18.140
<v Speaker 1>your Kubernetes clusters. They're different people. They care

01:15:18.140 --> 01:15:20.695
<v Speaker 1>about different things, and they have a backlog

01:15:20.695 --> 01:15:22.855
<v Speaker 1>of people who want onboarding,

01:15:23.015 --> 01:15:26.375
<v Speaker 1>you know, from here to the other ocean.

01:15:26.775 --> 01:15:28.215
<v Speaker 1>So, you know, it doesn't matter which way

01:15:28.215 --> 01:15:29.495
<v Speaker 1>you go around.

01:15:31.015 --> 01:15:33.440
<v Speaker 1>So it it's a trade off of, you

01:15:33.440 --> 01:15:33.920
<v Speaker 1>know,

01:15:34.320 --> 01:15:36.880
<v Speaker 1>of blast radius versus flexibility.

01:15:38.560 --> 01:15:41.280
<v Speaker 1>I've seen a tendency to move towards

01:15:41.440 --> 01:15:43.760
<v Speaker 1>the flexibility side in enterprise

01:15:43.760 --> 01:15:46.240
<v Speaker 1>more and more because people are getting more

01:15:46.240 --> 01:15:49.475
<v Speaker 1>comfortable with with low downtime Kubernetes, maybe not

01:15:49.475 --> 01:15:52.275
<v Speaker 1>zero downtime because somebody's selling you zero downtime.

01:15:52.275 --> 01:15:53.554
<v Speaker 1>They're probably lying.

01:15:54.515 --> 01:15:57.075
<v Speaker 1>But, you know, low downtime Kubernetes,

01:15:57.075 --> 01:15:58.915
<v Speaker 1>you know, planned downtime Kubernetes.

01:16:00.200 --> 01:16:01.960
<v Speaker 1>And so this

01:16:01.960 --> 01:16:03.320
<v Speaker 1>now means that

01:16:05.080 --> 01:16:06.600
<v Speaker 1>I can now grant

01:16:06.680 --> 01:16:07.640
<v Speaker 1>authentication

01:16:07.640 --> 01:16:10.200
<v Speaker 1>to new clusters. I can automate onboarding new

01:16:10.200 --> 01:16:10.760
<v Speaker 1>clusters

01:16:12.405 --> 01:16:14.885
<v Speaker 1>whenever I want. And so that makes it

01:16:14.885 --> 01:16:16.965
<v Speaker 1>easier to automate. You know, we talked about

01:16:16.965 --> 01:16:19.125
<v Speaker 1>small clusters versus big clusters.

01:16:19.365 --> 01:16:21.845
<v Speaker 1>Well, if you do wanna go that small

01:16:21.845 --> 01:16:25.125
<v Speaker 1>cluster route or virtual clusters,

01:16:25.845 --> 01:16:27.125
<v Speaker 1>you can now have

01:16:27.590 --> 01:16:29.670
<v Speaker 1>every cluster has its own authentication

01:16:29.670 --> 01:16:31.269
<v Speaker 1>into that control plane,

01:16:31.590 --> 01:16:33.670
<v Speaker 1>and you can control it yourself. So it

01:16:33.670 --> 01:16:35.189
<v Speaker 1>gives you the best of both worlds.

01:16:36.150 --> 01:16:37.909
<v Speaker 1>So in order to do that,

01:16:38.469 --> 01:16:41.030
<v Speaker 1>you treat your control plane OpenUnison

01:16:41.030 --> 01:16:42.550
<v Speaker 1>as an identity provider.

01:16:42.975 --> 01:16:44.175
<v Speaker 1>So that means,

01:16:44.335 --> 01:16:45.775
<v Speaker 1>you you know, that work where we did

01:16:45.775 --> 01:16:47.614
<v Speaker 1>where there's a client secret and you've gotta

01:16:47.614 --> 01:16:48.894
<v Speaker 1>exchange that trust,

01:16:49.614 --> 01:16:52.815
<v Speaker 1>that's not rocket science, but it's manual task

01:16:52.815 --> 01:16:54.175
<v Speaker 1>that no one likes to do. Well,

01:16:54.830 --> 01:16:56.910
<v Speaker 1>everything's API enabled, so why don't we just

01:16:56.910 --> 01:17:00.190
<v Speaker 1>automate that? So that's what we did was

01:17:00.190 --> 01:17:01.630
<v Speaker 1>we want to make it so that you

01:17:01.630 --> 01:17:04.030
<v Speaker 1>enter as little information as possible.

01:17:04.590 --> 01:17:07.310
<v Speaker 1>So the the first thing you do is

01:17:07.895 --> 01:17:09.895
<v Speaker 1>you do this piece where you go back

01:17:09.895 --> 01:17:12.455
<v Speaker 1>to your main values YAML. So we're still

01:17:12.455 --> 01:17:13.655
<v Speaker 1>on the control plane.

01:17:15.735 --> 01:17:17.975
<v Speaker 1>And if you go down to the OpenUnison

01:17:17.975 --> 01:17:18.375
<v Speaker 1>section,

01:17:20.230 --> 01:17:21.510
<v Speaker 1>see where it says

01:17:21.989 --> 01:17:23.830
<v Speaker 1>well, you wanna get rid of it. But

01:17:23.909 --> 01:17:25.989
<v Speaker 0>Oh, alright. There's already a show portal org.

01:17:25.989 --> 01:17:27.349
<v Speaker 1>It's false. So you wanna change that to

01:17:27.349 --> 01:17:27.989
<v Speaker 1>true.

01:17:29.510 --> 01:17:30.709
<v Speaker 0>Alright. And then

01:17:31.429 --> 01:17:32.710
<v Speaker 1>go ahead and

01:17:33.304 --> 01:17:35.545
<v Speaker 1>save that, redeploy OpenUnison

01:17:35.545 --> 01:17:36.344
<v Speaker 1>using

01:17:37.945 --> 01:17:38.985
<v Speaker 1>the yep.

01:17:39.945 --> 01:17:41.784
<v Speaker 1>And notice you're not putting any of your

01:17:41.784 --> 01:17:44.505
<v Speaker 0>secrets. I am a professional. Oh, yeah. I

01:17:44.505 --> 01:17:46.185
<v Speaker 0>know how to copy and paste your documents.

01:17:47.330 --> 01:17:49.090
<v Speaker 1>I don't. So, you know, I assume no

01:17:49.090 --> 01:17:50.210
<v Speaker 1>one else does either.

01:17:50.930 --> 01:17:53.730
<v Speaker 0>So this is update in our the OpenUnison

01:17:53.730 --> 01:17:55.090
<v Speaker 0>deploy that we have in our control plane

01:17:55.090 --> 01:17:55.810
<v Speaker 0>cluster.

01:17:56.290 --> 01:17:58.530
<v Speaker 0>It's gonna add something to this this thing.

01:17:58.530 --> 01:18:00.915
<v Speaker 1>Right? So see where you now see there's

01:18:00.915 --> 01:18:01.795
<v Speaker 1>that little

01:18:02.835 --> 01:18:03.635
<v Speaker 1>bump

01:18:03.635 --> 01:18:05.875
<v Speaker 1>where it's got that little tree there? So

01:18:05.875 --> 01:18:07.554
<v Speaker 1>now it's breaking up the badges

01:18:07.635 --> 01:18:09.875
<v Speaker 1>so that's a little more organized. Because once

01:18:09.875 --> 01:18:11.315
<v Speaker 1>you start adding clusters

01:18:11.475 --> 01:18:12.995
<v Speaker 1>you know, you got a dozen clusters. You

01:18:12.995 --> 01:18:14.515
<v Speaker 1>don't wanna have 24 badges

01:18:15.550 --> 01:18:17.470
<v Speaker 1>all over the screen. It gets difficult to

01:18:17.470 --> 01:18:18.190
<v Speaker 1>organize.

01:18:19.630 --> 01:18:20.910
<v Speaker 1>Plus the other nice thing is you're probably

01:18:20.910 --> 01:18:22.750
<v Speaker 1>not gonna give access to everybody

01:18:23.070 --> 01:18:24.350
<v Speaker 1>to every cluster.

01:18:24.510 --> 01:18:26.590
<v Speaker 1>You know, usually certain clusters, only certain people

01:18:26.590 --> 01:18:28.830
<v Speaker 1>will have access to. This makes it a

01:18:28.830 --> 01:18:30.430
<v Speaker 1>little bit easier to organize that.

01:18:32.525 --> 01:18:33.165
<v Speaker 1>So

01:18:33.405 --> 01:18:35.805
<v Speaker 1>while that's updating, we can actually get started

01:18:35.805 --> 01:18:37.965
<v Speaker 1>on the next piece,

01:18:38.285 --> 01:18:39.005
<v Speaker 1>which is

01:18:40.605 --> 01:18:43.085
<v Speaker 1>there's a new OpenUnison values YAML.

01:18:43.659 --> 01:18:47.500
<v Speaker 1>And what's important about this particular file is

01:18:47.500 --> 01:18:50.139
<v Speaker 1>that it does not have

01:18:52.539 --> 01:18:54.860
<v Speaker 1>it it does not have

01:18:56.665 --> 01:18:58.184
<v Speaker 1>an authentication section

01:18:59.304 --> 01:19:01.145
<v Speaker 1>because we figured that out for you. We

01:19:01.145 --> 01:19:02.744
<v Speaker 1>already have all the information

01:19:02.905 --> 01:19:05.065
<v Speaker 1>from the control plane. So why ask you

01:19:05.065 --> 01:19:06.344
<v Speaker 1>to put in information

01:19:06.665 --> 01:19:07.304
<v Speaker 1>that

01:19:07.545 --> 01:19:08.505
<v Speaker 1>we already know,

01:19:10.610 --> 01:19:12.689
<v Speaker 1>you know, on our side. Mhmm.

01:19:13.969 --> 01:19:15.729
<v Speaker 1>So if you go ahead and you

01:19:17.329 --> 01:19:18.769
<v Speaker 1>start editing that

01:19:25.315 --> 01:19:27.555
<v Speaker 0>Alright. So I need the IP address for

01:19:27.555 --> 01:19:28.835
<v Speaker 0>cluster two.

01:19:29.315 --> 01:19:29.715
<v Speaker 1>Yep.

01:19:37.290 --> 01:19:38.650
<v Speaker 0>Okay. I can do this in the command

01:19:38.650 --> 01:19:39.210
<v Speaker 0>line.

01:19:48.970 --> 01:19:51.050
<v Speaker 0>Alright. So 2

01:19:51.050 --> 01:19:52.490
<v Speaker 0>and then

01:19:56.885 --> 01:20:00.165
<v Speaker 1>Yep. Beautiful. I can do that. Hold on.

01:20:02.325 --> 01:20:04.005
<v Speaker 1>Oh, you you got better Vim skills than

01:20:04.005 --> 01:20:04.804
<v Speaker 1>I do.

01:20:06.565 --> 01:20:10.239
<v Speaker 0>Dev.io.

01:20:10.960 --> 01:20:11.599
<v Speaker 0>Boom.

01:20:12.320 --> 01:20:13.119
<v Speaker 0>Alright.

01:20:13.280 --> 01:20:14.000
<v Speaker 1>Damn.

01:20:15.120 --> 01:20:16.480
<v Speaker 1>If I knew that, would have passed my

01:20:16.480 --> 01:20:18.239
<v Speaker 1>c k a d a lot more easier.

01:20:19.280 --> 01:20:21.199
<v Speaker 0>I'm assuming we don't need need to modify

01:20:21.199 --> 01:20:22.880
<v Speaker 0>anything else. Right? This is just

01:20:23.475 --> 01:20:25.235
<v Speaker 1>Yep. Everything else is good. Do we need

01:20:25.235 --> 01:20:27.555
<v Speaker 0>to point it to cluster one?

01:20:28.195 --> 01:20:30.195
<v Speaker 1>So so this is where the beauty of

01:20:30.195 --> 01:20:32.915
<v Speaker 1>of Kubernetes comes in. Right? So you're gonna

01:20:32.915 --> 01:20:34.275
<v Speaker 1>set up the

01:20:34.595 --> 01:20:35.235
<v Speaker 1>you're gonna

01:20:35.955 --> 01:20:37.475
<v Speaker 1>so you've downloaded

01:20:40.560 --> 01:20:42.080
<v Speaker 1>let me think about this. So the way

01:20:42.080 --> 01:20:44.320
<v Speaker 1>I typically do this is I don't use

01:20:44.320 --> 01:20:45.599
<v Speaker 1>Kubey myself.

01:20:46.000 --> 01:20:49.280
<v Speaker 1>So I create a single kube control file

01:20:49.280 --> 01:20:52.085
<v Speaker 1>with contexts to both. So what I'll do

01:20:52.085 --> 01:20:54.245
<v Speaker 1>is I'll take the Bootstrap contact

01:20:54.645 --> 01:20:56.005
<v Speaker 1>Bootstrap file,

01:20:57.525 --> 01:20:59.285
<v Speaker 1>and then I'll make that my main kube

01:20:59.285 --> 01:21:01.605
<v Speaker 1>config file. And then I'll log in to

01:21:01.605 --> 01:21:02.485
<v Speaker 1>my control plane,

01:21:03.790 --> 01:21:06.429
<v Speaker 1>run the run the onboarding command, you know,

01:21:06.429 --> 01:21:07.389
<v Speaker 1>that that

01:21:07.790 --> 01:21:10.750
<v Speaker 1>the kube control creation command, and that gives

01:21:10.750 --> 01:21:11.869
<v Speaker 1>me a unified

01:21:12.350 --> 01:21:14.429
<v Speaker 1>kube config file. So our control plane is

01:21:14.429 --> 01:21:16.989
<v Speaker 0>gonna reach out to the other clusters to

01:21:17.085 --> 01:21:19.485
<v Speaker 1>to So you you you wanna have your

01:21:19.485 --> 01:21:22.364
<v Speaker 1>your your control plane file and your

01:21:23.645 --> 01:21:26.204
<v Speaker 1>or your your bootstrap for your

01:21:27.965 --> 01:21:29.165
<v Speaker 1>satellite cluster.

01:21:30.130 --> 01:21:32.450
<v Speaker 0>Okay. And do the And then overlay 51

01:21:32.450 --> 01:21:34.770
<v Speaker 0>9 need to match? Like, the No. No.

01:21:34.770 --> 01:21:35.490
<v Speaker 0>No.

01:21:36.130 --> 01:21:38.130
<v Speaker 1>We do all the certificate exchange and everything.

01:21:38.130 --> 01:21:40.050
<v Speaker 1>Because, again, we know what those certs are,

01:21:40.050 --> 01:21:41.250
<v Speaker 1>so why bother asking you?

01:21:42.465 --> 01:21:44.385
<v Speaker 0>Okay. So what do I need to do

01:21:44.385 --> 01:21:45.905
<v Speaker 0>now? I need to

01:21:48.145 --> 01:21:50.465
<v Speaker 1>So you wanna be

01:21:50.785 --> 01:21:52.625
<v Speaker 1>pointing to your

01:21:54.145 --> 01:21:56.065
<v Speaker 1>satellite and install the dashboard.

01:21:59.130 --> 01:22:01.530
<v Speaker 0>That I can do.

01:22:04.250 --> 01:22:04.970
<v Speaker 0>Yep.

01:22:06.730 --> 01:22:09.050
<v Speaker 1>That part's easy. And so then the last

01:22:09.050 --> 01:22:10.250
<v Speaker 1>part is creating

01:22:10.915 --> 01:22:14.114
<v Speaker 1>the COOP config and then running the OU

01:22:14.114 --> 01:22:15.715
<v Speaker 1>control satellite install.

01:22:16.514 --> 01:22:21.235
<v Speaker 0>Alright. Okay. So OU control install satellite. This

01:22:21.235 --> 01:22:23.235
<v Speaker 0>is now cluster two dot YAML. So let

01:22:23.235 --> 01:22:23.875
<v Speaker 0>me Yep.

01:22:25.190 --> 01:22:27.510
<v Speaker 1>Did the other deployment finish?

01:22:28.710 --> 01:22:30.070
<v Speaker 1>It Almost.

01:22:32.630 --> 01:22:34.950
<v Speaker 1>Did it actually finish or did it fail?

01:22:36.310 --> 01:22:38.470
<v Speaker 0>It failed. Oh, there it goes. Yeah. Oh,

01:22:38.470 --> 01:22:39.975
<v Speaker 1>okay. That's fine. I think it was just

01:22:39.975 --> 01:22:41.014
<v Speaker 0>the webhook again.

01:22:41.415 --> 01:22:42.054
<v Speaker 0>Yeah.

01:22:42.614 --> 01:22:43.574
<v Speaker 0>Okay. So

01:22:44.534 --> 01:22:45.815
<v Speaker 0>this is going to be my

01:22:49.335 --> 01:22:51.335
<v Speaker 1>So that's gonna be your control plane

01:22:52.120 --> 01:22:53.239
<v Speaker 1>configuration,

01:22:53.640 --> 01:22:55.639
<v Speaker 1>and then the second one is gonna be

01:22:55.640 --> 01:22:57.880
<v Speaker 1>your satellite configuration.

01:23:00.600 --> 01:23:02.520
<v Speaker 0>Yeah. That's gonna be And we're using the

01:23:02.520 --> 01:23:03.719
<v Speaker 1>Go SDK,

01:23:03.719 --> 01:23:05.239
<v Speaker 1>so I don't know if that's gonna work.

01:23:06.695 --> 01:23:08.295
<v Speaker 1>Because we only I don't know.

01:23:10.215 --> 01:23:12.455
<v Speaker 1>Because doesn't Kubey just wrap?

01:23:13.575 --> 01:23:15.415
<v Speaker 0>All my configs are in different files, so

01:23:15.415 --> 01:23:16.695
<v Speaker 0>we're gonna have to merge.

01:23:17.495 --> 01:23:19.335
<v Speaker 1>Yeah. What I what you can do is

01:23:20.730 --> 01:23:22.730
<v Speaker 1>so this is how I do it. I

01:23:22.730 --> 01:23:23.930
<v Speaker 1>set kubeconfig

01:23:23.930 --> 01:23:26.090
<v Speaker 1>to the bootstrap for the satellite.

01:23:26.170 --> 01:23:26.810
<v Speaker 0>Mhmm.

01:23:27.450 --> 01:23:29.450
<v Speaker 1>And then I log in to my control

01:23:29.450 --> 01:23:31.370
<v Speaker 1>plane, get a token,

01:23:31.850 --> 01:23:34.010
<v Speaker 1>and in the same kubeconfig,

01:23:34.010 --> 01:23:35.850
<v Speaker 1>run that so that way I get a

01:23:35.850 --> 01:23:37.475
<v Speaker 1>merged configuration.

01:23:41.315 --> 01:23:42.114
<v Speaker 0>Okay.

01:23:44.115 --> 01:23:44.835
<v Speaker 0>So

01:23:45.875 --> 01:23:47.315
<v Speaker 0>let's jump back.

01:23:48.115 --> 01:23:49.955
<v Speaker 0>Sorry. I've made this really difficult now by

01:23:49.955 --> 01:23:50.675
<v Speaker 0>using Kube.

01:23:51.690 --> 01:23:53.450
<v Speaker 1>Well, it's it's it's

01:23:54.010 --> 01:23:55.690
<v Speaker 1>it's an interesting problem that I need to

01:23:55.690 --> 01:23:57.130
<v Speaker 1>take a note on because

01:23:57.290 --> 01:23:59.130
<v Speaker 1>one of the things that we're working on

01:23:59.130 --> 01:23:59.770
<v Speaker 1>is

01:24:01.130 --> 01:24:03.450
<v Speaker 1>simplifying this because we always wanna make it

01:24:03.450 --> 01:24:03.770
<v Speaker 1>easier.

01:24:05.085 --> 01:24:06.845
<v Speaker 1>So, you know, it's a good point. I

01:24:06.845 --> 01:24:08.764
<v Speaker 1>I tend not to use Koobie.

01:24:09.885 --> 01:24:10.525
<v Speaker 1>So,

01:24:10.765 --> 01:24:11.965
<v Speaker 1>you know, is there a way to make

01:24:11.965 --> 01:24:14.125
<v Speaker 1>it easier when somebody is using it?

01:24:14.685 --> 01:24:16.445
<v Speaker 0>Okay. So we're now using this.

01:24:18.120 --> 01:24:19.800
<v Speaker 0>Yeah. It could be config.

01:24:20.600 --> 01:24:22.280
<v Speaker 1>So now if you go to log in

01:24:22.280 --> 01:24:23.719
<v Speaker 1>to your control plane

01:24:23.960 --> 01:24:25.479
<v Speaker 1>and pick up a token

01:24:26.920 --> 01:24:28.440
<v Speaker 0>Oh, I just did that. Okay.

01:24:29.159 --> 01:24:30.199
<v Speaker 1>And then paste it in.

01:24:32.405 --> 01:24:33.764
<v Speaker 0>Alright. Shit. Okay.

01:24:34.164 --> 01:24:36.405
<v Speaker 0>Cool. Onto cluster two.

01:24:37.764 --> 01:24:40.164
<v Speaker 0>On my control plane, and I wanna grab

01:24:41.605 --> 01:24:43.045
<v Speaker 1>Run the kubectl command.

01:24:45.290 --> 01:24:46.170
<v Speaker 0>Uh-huh.

01:24:51.290 --> 01:24:53.130
<v Speaker 1>So now if you run k c t

01:24:53.130 --> 01:24:54.489
<v Speaker 1>x, you should have

01:24:55.210 --> 01:24:56.969
<v Speaker 1>more code control context.

01:24:56.970 --> 01:24:58.650
<v Speaker 1>So yeah. So you've got now two.

01:24:59.335 --> 01:25:00.135
<v Speaker 1>Perfect.

01:25:00.135 --> 01:25:01.655
<v Speaker 1>So now your

01:25:01.815 --> 01:25:02.534
<v Speaker 1>your

01:25:02.775 --> 01:25:03.575
<v Speaker 1>OpenUnison

01:25:03.575 --> 01:25:06.375
<v Speaker 1>one context is your control plane. OpenUnison two

01:25:06.535 --> 01:25:07.335
<v Speaker 1>is

01:25:08.535 --> 01:25:10.135
<v Speaker 1>Gotcha. Your satellite.

01:25:10.295 --> 01:25:11.655
<v Speaker 1>So that's what you're gonna use. Too many

01:25:11.655 --> 01:25:13.015
<v Speaker 0>steps ahead of me. That's what it was.

01:25:13.015 --> 01:25:13.255
<v Speaker 0>Yeah.

01:25:15.370 --> 01:25:17.770
<v Speaker 0>Alright. So we wanna do

01:25:20.570 --> 01:25:22.969
<v Speaker 0>open Rawkode or OpenUnison one.

01:25:23.290 --> 01:25:25.770
<v Speaker 1>Nope. Just OpenUnison dash one because you want

01:25:25.770 --> 01:25:26.570
<v Speaker 1>just the context.

01:25:28.045 --> 01:25:28.925
<v Speaker 0>And then

01:25:29.405 --> 01:25:31.244
<v Speaker 1>open OpenUnison dash two.

01:25:36.925 --> 01:25:37.804
<v Speaker 1>So now

01:25:38.364 --> 01:25:40.284
<v Speaker 1>if you look at your

01:25:40.284 --> 01:25:41.724
<v Speaker 1>values dot YAML,

01:25:43.510 --> 01:25:45.510
<v Speaker 1>we actually updated it for you.

01:25:46.310 --> 01:25:48.550
<v Speaker 1>So what we've done is we've created a

01:25:48.550 --> 01:25:51.350
<v Speaker 1>client secret inside of the control plane, big,

01:25:51.350 --> 01:25:52.870
<v Speaker 1>nasty, random monster,

01:25:53.110 --> 01:25:54.390
<v Speaker 1>so you don't have to think of it

01:25:54.390 --> 01:25:54.790
<v Speaker 1>yourself.

01:25:56.135 --> 01:25:59.014
<v Speaker 1>And now we're deploying OpenUnison as a satellite

01:25:59.655 --> 01:26:01.175
<v Speaker 1>directly into

01:26:03.495 --> 01:26:05.014
<v Speaker 1>your satellite cluster.

01:26:05.575 --> 01:26:06.775
<v Speaker 0>Yeah. I'll be able to look at it

01:26:06.775 --> 01:26:08.659
<v Speaker 0>in a minute. I also make things really

01:26:08.659 --> 01:26:10.420
<v Speaker 0>difficult for us on this session by always

01:26:10.420 --> 01:26:12.340
<v Speaker 0>using temp directories for everything that I don't

01:26:12.340 --> 01:26:13.380
<v Speaker 0>know the path to.

01:26:15.699 --> 01:26:16.900
<v Speaker 1>Yeah. That makes sense.

01:26:17.860 --> 01:26:19.940
<v Speaker 1>But Because I have a directory history, so

01:26:19.940 --> 01:26:21.060
<v Speaker 0>I never like to be in a real

01:26:21.060 --> 01:26:23.175
<v Speaker 0>directory when I do demos because then I

01:26:23.175 --> 01:26:25.415
<v Speaker 0>have all the commands in my in that.

01:26:25.415 --> 01:26:27.895
<v Speaker 1>Right. Yeah. No. That makes that makes sense.

01:26:30.535 --> 01:26:31.975
<v Speaker 1>So yeah. So now what we're just doing

01:26:31.975 --> 01:26:33.975
<v Speaker 1>is we're installing OpenUnison

01:26:34.590 --> 01:26:36.910
<v Speaker 1>the same way. It's just if when you

01:26:36.910 --> 01:26:38.750
<v Speaker 1>look at the values dot YAML

01:26:38.830 --> 01:26:41.470
<v Speaker 1>that you create that you created, you're gonna

01:26:41.470 --> 01:26:43.469
<v Speaker 1>see that it is

01:26:44.670 --> 01:26:46.430
<v Speaker 1>it now has an OIDC section.

01:26:47.275 --> 01:26:49.034
<v Speaker 1>And that OIDC section

01:26:49.755 --> 01:26:51.114
<v Speaker 1>points to

01:26:51.115 --> 01:26:53.835
<v Speaker 1>your control plane as your

01:26:55.275 --> 01:26:58.715
<v Speaker 1>identity provider. So can I see these satellite

01:26:58.715 --> 01:27:01.675
<v Speaker 0>clusters as custom resources on the control plane

01:27:01.675 --> 01:27:01.995
<v Speaker 0>cluster?

01:27:05.380 --> 01:27:07.219
<v Speaker 1>Not to the easiest way is to actually

01:27:07.219 --> 01:27:08.499
<v Speaker 1>do a helm list

01:27:09.219 --> 01:27:10.420
<v Speaker 1>in the OpenUnison

01:27:10.420 --> 01:27:11.139
<v Speaker 1>namespace.

01:27:16.284 --> 01:27:18.525
<v Speaker 1>And you'll see there it is, satellite dash

01:27:18.525 --> 01:27:22.445
<v Speaker 1>Kubernetes satellite three. So that is your satellite

01:27:22.445 --> 01:27:25.165
<v Speaker 1>cluster and all the resources associated with that

01:27:25.165 --> 01:27:25.885
<v Speaker 1>chart.

01:27:26.284 --> 01:27:27.564
<v Speaker 1>So it created

01:27:27.565 --> 01:27:28.204
<v Speaker 1>a

01:27:28.445 --> 01:27:31.350
<v Speaker 1>identity provider. It created a

01:27:31.750 --> 01:27:34.870
<v Speaker 1>like, if you do kubectl get applications

01:27:35.670 --> 01:27:38.470
<v Speaker 1>in the OpenUnison namespace on your control plane,

01:27:40.310 --> 01:27:42.870
<v Speaker 1>you'll see that there is a cluster IDP

01:27:42.870 --> 01:27:43.990
<v Speaker 1>Kubernetes satellite.

01:27:44.365 --> 01:27:46.685
<v Speaker 0>Yep. That's where we onboard all of your

01:27:46.685 --> 01:27:50.205
<v Speaker 1>satellites onto. Do a kubectl get trusts?

01:27:53.805 --> 01:27:55.885
<v Speaker 0>No. I don't think it's there yet.

01:27:56.125 --> 01:27:57.645
<v Speaker 0>Oh, no. It's just Okay. Now it might

01:27:57.645 --> 01:28:00.030
<v Speaker 1>be. Maybe not. Not yet.

01:28:00.670 --> 01:28:02.430
<v Speaker 1>Yeah. There are too many objects to keep

01:28:02.430 --> 01:28:04.110
<v Speaker 1>track of. But if you now go back

01:28:04.110 --> 01:28:05.070
<v Speaker 1>to OpenUnison,

01:28:10.875 --> 01:28:13.034
<v Speaker 1>See where you have that Kubernetes satellite? Now

01:28:13.034 --> 01:28:14.394
<v Speaker 1>if you click on it

01:28:14.954 --> 01:28:17.434
<v Speaker 1>and you go to the dashboard,

01:28:21.755 --> 01:28:23.275
<v Speaker 1>it's gonna make you click through a bunch

01:28:23.275 --> 01:28:25.034
<v Speaker 1>of stuff because we're using all self signed

01:28:25.034 --> 01:28:25.514
<v Speaker 1>certs.

01:28:26.360 --> 01:28:28.199
<v Speaker 1>And boom. Now you still have the same

01:28:28.199 --> 01:28:30.519
<v Speaker 1>problem with a little bell because of RBAC,

01:28:30.599 --> 01:28:33.159
<v Speaker 1>but the important thing is is you now

01:28:33.159 --> 01:28:34.360
<v Speaker 1>have a satellite

01:28:34.520 --> 01:28:35.559
<v Speaker 1>OpenUnison

01:28:35.559 --> 01:28:36.439
<v Speaker 1>deployed,

01:28:36.840 --> 01:28:38.040
<v Speaker 1>and you didn't have to do anything with

01:28:38.040 --> 01:28:40.280
<v Speaker 1>OpenID Connect or GitHub or anything else.

01:28:41.255 --> 01:28:43.255
<v Speaker 0>But I can just swap between these different

01:28:43.255 --> 01:28:44.534
<v Speaker 0>different

01:28:44.534 --> 01:28:46.774
<v Speaker 0>clusters like so. Exactly.

01:28:48.375 --> 01:28:49.895
<v Speaker 1>And then, you know, we haven't really talked

01:28:49.895 --> 01:28:52.135
<v Speaker 1>about other applications, but, you know, like Argo

01:28:52.135 --> 01:28:53.335
<v Speaker 1>or Grafana

01:28:53.335 --> 01:28:55.895
<v Speaker 1>or anything else. You can now integrate that

01:28:56.270 --> 01:28:58.510
<v Speaker 1>here. You know, you can you can integrate

01:28:58.510 --> 01:29:00.190
<v Speaker 1>it into your control plane

01:29:00.750 --> 01:29:02.590
<v Speaker 1>or into your

01:29:05.150 --> 01:29:06.270
<v Speaker 1>into your

01:29:07.390 --> 01:29:08.270
<v Speaker 1>satellite.

01:29:08.590 --> 01:29:10.430
<v Speaker 1>Now the other cool thing is

01:29:11.765 --> 01:29:14.485
<v Speaker 1>the OU control. If you click on, like,

01:29:14.485 --> 01:29:16.165
<v Speaker 1>click on Kube control's

01:29:16.165 --> 01:29:17.605
<v Speaker 1>satellite tokens

01:29:20.405 --> 01:29:23.765
<v Speaker 1>so this actually runs its own OpenUnison.

01:29:23.765 --> 01:29:25.445
<v Speaker 1>So you can go directly to this host

01:29:25.445 --> 01:29:27.045
<v Speaker 1>too if you wanna bypass it.

01:29:28.080 --> 01:29:29.760
<v Speaker 1>So you've got that option

01:29:30.160 --> 01:29:31.040
<v Speaker 1>as well.

01:29:31.760 --> 01:29:33.760
<v Speaker 1>So, like, the OU control command that I

01:29:33.760 --> 01:29:35.840
<v Speaker 1>was talking about, you know which hosts you

01:29:35.840 --> 01:29:37.520
<v Speaker 1>have access to. You just type in OU

01:29:37.520 --> 01:29:38.239
<v Speaker 1>control

01:29:38.640 --> 01:29:40.960
<v Speaker 1>dash dash host equals my OpenUnison,

01:29:41.635 --> 01:29:43.475
<v Speaker 1>pops up the browser, you log in, you

01:29:43.475 --> 01:29:44.995
<v Speaker 1>close. So you don't have to go through

01:29:44.995 --> 01:29:46.755
<v Speaker 1>this rigmarole.

01:29:48.035 --> 01:29:50.115
<v Speaker 1>And then, you know, of course, if you've

01:29:50.115 --> 01:29:51.074
<v Speaker 1>got, you know,

01:29:51.475 --> 01:29:53.555
<v Speaker 1>a CA that you wanna use, you can

01:29:53.555 --> 01:29:55.155
<v Speaker 1>use that instead of having to do the

01:29:55.155 --> 01:29:56.275
<v Speaker 1>self signed certificates.

01:29:56.730 --> 01:29:58.010
<v Speaker 1>You know, we we wanted to just make

01:29:58.010 --> 01:30:00.170
<v Speaker 1>it as easy as possible to get started.

01:30:01.130 --> 01:30:03.290
<v Speaker 0>This is really cool. I like this.

01:30:04.170 --> 01:30:05.290
<v Speaker 1>Thank you. So

01:30:08.935 --> 01:30:11.094
<v Speaker 1>what we haven't really talked about is so

01:30:11.094 --> 01:30:13.815
<v Speaker 1>we we we've we've done the authentication portal.

01:30:14.614 --> 01:30:16.534
<v Speaker 1>We haven't really talked about namespace as a

01:30:16.534 --> 01:30:17.175
<v Speaker 1>service.

01:30:18.935 --> 01:30:20.855
<v Speaker 1>Do you want to deploy namespace as a

01:30:20.855 --> 01:30:21.175
<v Speaker 1>service?

01:30:22.410 --> 01:30:24.010
<v Speaker 0>Well, I I don't know what namespace as

01:30:24.010 --> 01:30:25.530
<v Speaker 0>a service is. Do you wanna get me

01:30:25.530 --> 01:30:27.610
<v Speaker 0>the the pitch? Yeah. So

01:30:30.330 --> 01:30:32.330
<v Speaker 1>namespace as a service, the idea is you

01:30:32.330 --> 01:30:35.130
<v Speaker 1>can log in to a self-service portal like

01:30:35.130 --> 01:30:35.290
<v Speaker 1>this,

01:30:36.165 --> 01:30:38.085
<v Speaker 1>and there's a little button that'll say request

01:30:38.565 --> 01:30:40.085
<v Speaker 1>or there'll be a button here that says

01:30:40.085 --> 01:30:41.205
<v Speaker 1>new namespace.

01:30:41.765 --> 01:30:44.405
<v Speaker 1>Click on new namespace. I enter some information,

01:30:44.885 --> 01:30:46.565
<v Speaker 1>like what I want the namespace name to

01:30:46.565 --> 01:30:47.045
<v Speaker 1>be,

01:30:47.445 --> 01:30:48.085
<v Speaker 1>what

01:30:48.405 --> 01:30:49.925
<v Speaker 1>I can add additional attributes,

01:30:50.450 --> 01:30:53.410
<v Speaker 1>you know, for things like chargeback and labeling,

01:30:55.090 --> 01:30:56.850
<v Speaker 1>and then I hit submit. And then the

01:30:56.850 --> 01:30:59.330
<v Speaker 1>cluster owners say, yay or nay.

01:31:00.130 --> 01:31:03.489
<v Speaker 1>And then OpenUnison will actually provision that namespace.

01:31:03.650 --> 01:31:05.330
<v Speaker 1>It'll do a few things. It'll provision the

01:31:05.330 --> 01:31:05.810
<v Speaker 1>namespace.

01:31:06.454 --> 01:31:09.494
<v Speaker 1>It will provision the RBAC bindings.

01:31:10.295 --> 01:31:12.375
<v Speaker 1>If you want to use external groups so,

01:31:12.375 --> 01:31:13.974
<v Speaker 1>like, let's say you wanted to use

01:31:15.574 --> 01:31:18.295
<v Speaker 1>your GitHub teams to manage access,

01:31:19.230 --> 01:31:20.110
<v Speaker 1>it'll

01:31:20.270 --> 01:31:21.949
<v Speaker 1>map those for you.

01:31:23.150 --> 01:31:25.310
<v Speaker 1>And so at that point, you now have

01:31:25.310 --> 01:31:26.429
<v Speaker 1>a namespace,

01:31:26.430 --> 01:31:28.510
<v Speaker 1>and you can also customize the workflow to

01:31:28.510 --> 01:31:32.030
<v Speaker 1>add things like network policies, resource quotas, etcetera.

01:31:33.705 --> 01:31:35.465
<v Speaker 1>So now as a business owner,

01:31:36.824 --> 01:31:38.665
<v Speaker 1>I've been able to get a namespace without

01:31:38.665 --> 01:31:39.784
<v Speaker 1>running kubectl.

01:31:40.025 --> 01:31:41.864
<v Speaker 1>And as a cluster manager,

01:31:42.264 --> 01:31:44.425
<v Speaker 1>I've been able to create a namespace without

01:31:44.425 --> 01:31:45.304
<v Speaker 1>running kubectl.

01:31:46.860 --> 01:31:48.700
<v Speaker 1>So that that's the first part of it.

01:31:48.700 --> 01:31:50.380
<v Speaker 1>The second part of it is who has

01:31:50.380 --> 01:31:51.500
<v Speaker 1>access to it.

01:31:52.460 --> 01:31:53.020
<v Speaker 1>So

01:31:53.500 --> 01:31:56.140
<v Speaker 1>we allow you to do either internal or

01:31:56.140 --> 01:31:59.100
<v Speaker 1>external or both. And by that, I mean,

01:31:59.100 --> 01:32:00.860
<v Speaker 1>you can let OpenUnison have a set of

01:32:00.860 --> 01:32:02.885
<v Speaker 1>groups for you and manage it that way.

01:32:03.605 --> 01:32:05.765
<v Speaker 1>You can rely on an external identity provider

01:32:05.765 --> 01:32:08.085
<v Speaker 1>like GitHub or Active Directory and groups there,

01:32:08.405 --> 01:32:10.324
<v Speaker 1>or you can do both. And we find

01:32:10.325 --> 01:32:12.324
<v Speaker 1>folks that use this functionality,

01:32:12.405 --> 01:32:14.645
<v Speaker 1>they always start with, oh, I just wanna

01:32:14.645 --> 01:32:16.085
<v Speaker 1>use the enterprise groups.

01:32:16.699 --> 01:32:18.620
<v Speaker 1>And then they realize, oh, it's a lot

01:32:18.620 --> 01:32:21.659
<v Speaker 1>harder than we need when there's an emergency

01:32:21.659 --> 01:32:23.099
<v Speaker 1>to onboard someone,

01:32:23.420 --> 01:32:25.659
<v Speaker 1>and so we wanna use the internal groups

01:32:25.659 --> 01:32:26.300
<v Speaker 1>too.

01:32:27.260 --> 01:32:28.699
<v Speaker 1>And so what that then gives you is

01:32:28.699 --> 01:32:30.940
<v Speaker 1>the ability to do self-service to get access

01:32:30.940 --> 01:32:32.060
<v Speaker 1>to those namespaces

01:32:33.475 --> 01:32:35.315
<v Speaker 1>all without having to do

01:32:37.315 --> 01:32:39.315
<v Speaker 1>what you want? All without having to do

01:32:40.435 --> 01:32:42.034
<v Speaker 1>any kube control commands.

01:32:42.355 --> 01:32:44.275
<v Speaker 1>And then we keep an audit log of

01:32:44.275 --> 01:32:47.590
<v Speaker 1>everything that's happening. So, like, at KubeCon

01:32:47.750 --> 01:32:48.550
<v Speaker 1>twenty

01:32:48.790 --> 01:32:49.590
<v Speaker 1>twenty

01:32:49.830 --> 01:32:51.910
<v Speaker 1>Europe yeah. It was twenty twenty Europe. That

01:32:51.910 --> 01:32:53.670
<v Speaker 1>was the one that got delayed twice. Right?

01:32:54.550 --> 01:32:55.990
<v Speaker 1>Yep. It was all virtual.

01:32:58.065 --> 01:33:00.625
<v Speaker 1>I did a session on learning RBAC called

01:33:00.625 --> 01:33:02.704
<v Speaker 1>I can RBAC and so can you,

01:33:03.025 --> 01:33:04.705
<v Speaker 1>where I used OpenUnison

01:33:04.705 --> 01:33:07.025
<v Speaker 1>with Fairwind's RBAC manager

01:33:07.425 --> 01:33:09.665
<v Speaker 1>to let people create namespaces

01:33:09.665 --> 01:33:11.665
<v Speaker 1>without actually having to go through any approval

01:33:11.665 --> 01:33:12.304
<v Speaker 1>process,

01:33:12.705 --> 01:33:14.930
<v Speaker 1>where you created a team

01:33:15.810 --> 01:33:18.690
<v Speaker 1>which would provision the RBAC. Are you familiar

01:33:18.690 --> 01:33:21.250
<v Speaker 1>with what Fairwinds RBAC manager does? Yeah.

01:33:21.650 --> 01:33:24.130
<v Speaker 1>Okay. So for anybody who isn't, it lets

01:33:24.130 --> 01:33:27.330
<v Speaker 1>you do access management via labels inside of

01:33:27.330 --> 01:33:28.210
<v Speaker 1>namespaces.

01:33:28.210 --> 01:33:29.250
<v Speaker 1>Really great tool.

01:33:30.555 --> 01:33:32.155
<v Speaker 1>So you would request

01:33:32.315 --> 01:33:34.875
<v Speaker 1>instead of namespace, you would request a

01:33:36.315 --> 01:33:37.595
<v Speaker 1>I forget the name of the object, but

01:33:37.595 --> 01:33:39.594
<v Speaker 1>it's basically a Fairwinds RBAC object

01:33:40.235 --> 01:33:41.835
<v Speaker 1>that would define what labels

01:33:42.130 --> 01:33:44.690
<v Speaker 1>namespaces would have, and you would have access

01:33:44.690 --> 01:33:46.050
<v Speaker 1>to those namespaces.

01:33:47.330 --> 01:33:48.850
<v Speaker 1>And then at that point,

01:33:49.170 --> 01:33:51.410
<v Speaker 1>once that got approved and provisioned, you could

01:33:51.410 --> 01:33:53.570
<v Speaker 1>create all the namespaces you wanted

01:33:53.570 --> 01:33:54.610
<v Speaker 1>associated

01:33:54.770 --> 01:33:56.530
<v Speaker 1>with your Fairwinds object.

01:33:57.034 --> 01:33:59.034
<v Speaker 1>So as a business owner, I could create

01:33:59.034 --> 01:34:00.794
<v Speaker 1>all the namespaces I wanted.

01:34:01.514 --> 01:34:03.435
<v Speaker 1>And as long as I had access via

01:34:03.435 --> 01:34:04.874
<v Speaker 1>that Fairwinds object,

01:34:05.435 --> 01:34:07.915
<v Speaker 1>it would create the namespace and set the

01:34:07.915 --> 01:34:08.715
<v Speaker 1>appropriate labels.

01:34:09.290 --> 01:34:11.610
<v Speaker 1>So it's a really powerful tool. My favorite

01:34:11.610 --> 01:34:13.290
<v Speaker 1>thing that I'm working on right now

01:34:13.610 --> 01:34:14.330
<v Speaker 1>is

01:34:15.050 --> 01:34:17.370
<v Speaker 1>virtual cluster as a service, which is really

01:34:17.370 --> 01:34:19.930
<v Speaker 1>cool. So if if you're not familiar with

01:34:19.930 --> 01:34:21.130
<v Speaker 1>virtual clusters,

01:34:21.370 --> 01:34:22.330
<v Speaker 1>it's

01:34:22.665 --> 01:34:25.625
<v Speaker 1>it's essentially a k threes that runs inside

01:34:25.625 --> 01:34:28.344
<v Speaker 1>of your cluster, and it synchronizes objects

01:34:28.425 --> 01:34:30.905
<v Speaker 1>and gives you a smaller world view. So

01:34:30.905 --> 01:34:32.745
<v Speaker 1>you think you have your own cluster, but

01:34:32.745 --> 01:34:33.784
<v Speaker 1>in reality,

01:34:33.865 --> 01:34:35.945
<v Speaker 1>you're still running in a large multi tenant

01:34:35.945 --> 01:34:36.265
<v Speaker 1>cluster.

01:34:37.750 --> 01:34:38.469
<v Speaker 1>So

01:34:39.590 --> 01:34:41.749
<v Speaker 1>Loft, the folks that make vCluster,

01:34:41.909 --> 01:34:44.150
<v Speaker 1>recently released the cluster API

01:34:44.949 --> 01:34:47.270
<v Speaker 1>for provisioning of this. So what you can

01:34:47.270 --> 01:34:49.510
<v Speaker 1>actual what we have is

01:34:49.655 --> 01:34:52.935
<v Speaker 1>this way where where this portal I can

01:34:52.935 --> 01:34:55.175
<v Speaker 1>show it to you where when you request

01:34:55.175 --> 01:34:57.255
<v Speaker 1>a namespace, there's a little option. Do you

01:34:57.255 --> 01:34:58.615
<v Speaker 1>want a namespace or do you want a

01:34:58.615 --> 01:35:01.015
<v Speaker 1>v cluster? You pick v cluster.

01:35:01.175 --> 01:35:02.455
<v Speaker 1>We provision the v cluster.

01:35:03.250 --> 01:35:05.489
<v Speaker 1>We provision OpenUnison into it,

01:35:05.730 --> 01:35:07.489
<v Speaker 1>and we link it via SSO.

01:35:08.130 --> 01:35:09.810
<v Speaker 1>And now you have a v cluster ready

01:35:09.810 --> 01:35:12.449
<v Speaker 1>to go with all your RBAC bindings,

01:35:13.170 --> 01:35:13.650
<v Speaker 1>and

01:35:14.849 --> 01:35:15.330
<v Speaker 1>that's it.

01:35:16.054 --> 01:35:17.574
<v Speaker 0>Alright. Well, I

01:35:19.494 --> 01:35:21.094
<v Speaker 0>would love to get home from my kids'

01:35:21.094 --> 01:35:23.414
<v Speaker 0>bedtime. So I'm gonna share your screen.

01:35:23.815 --> 01:35:25.895
<v Speaker 0>Okay. Cool. Give us the d cluster demo

01:35:25.895 --> 01:35:27.014
<v Speaker 0>and we can take a look at it

01:35:27.014 --> 01:35:29.255
<v Speaker 0>because it sounds pretty awesome. And then Yeah.

01:35:29.949 --> 01:35:32.590
<v Speaker 0>We'll wrap this up because I reckon we

01:35:32.590 --> 01:35:34.510
<v Speaker 0>could talk about this stuff for for a

01:35:34.510 --> 01:35:34.829
<v Speaker 0>couple of Alright.

01:35:36.989 --> 01:35:38.189
<v Speaker 1>Can you see my screen?

01:35:38.829 --> 01:35:40.749
<v Speaker 0>Yes.

01:35:41.949 --> 01:35:44.590
<v Speaker 0>We can see your screen. Thank you. So

01:35:44.165 --> 01:35:46.405
<v Speaker 1>I'm gonna log in. Don't save. So I've

01:35:46.405 --> 01:35:48.085
<v Speaker 1>I've deployed a couple of these,

01:35:48.405 --> 01:35:49.925
<v Speaker 1>but I think I deleted them, to be

01:35:49.925 --> 01:35:50.485
<v Speaker 1>honest.

01:35:51.205 --> 01:35:51.844
<v Speaker 1>So

01:35:52.645 --> 01:35:54.085
<v Speaker 1>this this link

01:35:55.125 --> 01:35:57.765
<v Speaker 1>didn't exist. This request access link doesn't exist

01:35:57.765 --> 01:35:58.965
<v Speaker 1>in your OpenUnison.

01:35:58.965 --> 01:36:01.440
<v Speaker 1>Yep. And this badge, this new Kubernetes space

01:36:01.440 --> 01:36:02.800
<v Speaker 1>badge doesn't exist.

01:36:03.119 --> 01:36:04.400
<v Speaker 1>So first thing I'm gonna do is I'm

01:36:04.400 --> 01:36:05.760
<v Speaker 1>gonna open up the dashboard,

01:36:06.000 --> 01:36:08.079
<v Speaker 1>make it a little easier to follow what's

01:36:08.079 --> 01:36:10.159
<v Speaker 1>going on because there's a lot of moving

01:36:10.159 --> 01:36:10.800
<v Speaker 1>pieces here.

01:36:12.295 --> 01:36:14.214
<v Speaker 1>So we got our dashboard up and running,

01:36:14.775 --> 01:36:17.014
<v Speaker 1>and I'm gonna go ahead. I'm going to

01:36:17.014 --> 01:36:18.695
<v Speaker 1>say create a new namespace.

01:36:18.775 --> 01:36:21.094
<v Speaker 1>So this is our namespace as a service.

01:36:21.894 --> 01:36:22.934
<v Speaker 1>It's multicluster.

01:36:24.150 --> 01:36:26.469
<v Speaker 1>So this has just a single cluster for

01:36:26.469 --> 01:36:27.349
<v Speaker 1>management.

01:36:27.429 --> 01:36:29.349
<v Speaker 1>And I'm gonna do test

01:36:30.710 --> 01:36:33.190
<v Speaker 1>Rawkode because I'm really original.

01:36:34.390 --> 01:36:37.510
<v Speaker 1>And I'm gonna choose v cluster and test.

01:36:39.415 --> 01:36:41.735
<v Speaker 1>So that's amid the request. Now I've gotten

01:36:41.735 --> 01:36:43.495
<v Speaker 1>an email that says, hey, Mark.

01:36:44.215 --> 01:36:45.575
<v Speaker 1>Somebody's requested.

01:36:46.935 --> 01:36:47.815
<v Speaker 0>Oh, cool.

01:36:48.455 --> 01:36:50.295
<v Speaker 1>And so this gives you the current roles.

01:36:50.295 --> 01:36:52.750
<v Speaker 1>We're we're in the midst of making this

01:36:52.750 --> 01:36:55.070
<v Speaker 1>a little bit better because there's just more

01:36:55.070 --> 01:36:57.150
<v Speaker 1>information you're gonna wanna have. Now some of

01:36:57.150 --> 01:36:58.830
<v Speaker 1>the fun things you can do here with

01:36:58.830 --> 01:37:00.110
<v Speaker 1>custom approvals

01:37:00.190 --> 01:37:01.789
<v Speaker 1>is you can do escalations.

01:37:01.870 --> 01:37:04.110
<v Speaker 1>So I'm not doing my job. It's been

01:37:04.110 --> 01:37:06.455
<v Speaker 1>a week. You know, escalate it to my

01:37:06.455 --> 01:37:08.615
<v Speaker 1>manager or escalate to someone else or automatically

01:37:08.615 --> 01:37:09.495
<v Speaker 1>close it.

01:37:10.215 --> 01:37:13.175
<v Speaker 1>We're also doing things around capacity management

01:37:13.415 --> 01:37:15.895
<v Speaker 1>where if you request the namespace

01:37:15.975 --> 01:37:18.935
<v Speaker 1>and there's a certain amount of open capacity,

01:37:19.095 --> 01:37:21.840
<v Speaker 1>just let it through. Don't bother requesting it

01:37:22.960 --> 01:37:24.640
<v Speaker 1>because we're tied into the cluster. We can

01:37:24.640 --> 01:37:26.640
<v Speaker 1>do all that fun stuff. I'm just gonna

01:37:26.640 --> 01:37:28.320
<v Speaker 1>go ahead and approve the request.

01:37:29.040 --> 01:37:29.680
<v Speaker 1>So

01:37:30.240 --> 01:37:31.520
<v Speaker 1>while that's going,

01:37:31.920 --> 01:37:33.920
<v Speaker 1>I'm gonna go ahead and show you the

01:37:33.920 --> 01:37:36.000
<v Speaker 1>reporting. Right? So we're keeping track

01:37:36.535 --> 01:37:37.815
<v Speaker 1>of all this stuff.

01:37:38.055 --> 01:37:39.655
<v Speaker 1>And when it comes time for the auditors

01:37:39.655 --> 01:37:40.695
<v Speaker 1>to come by,

01:37:41.095 --> 01:37:42.695
<v Speaker 1>you know, you can give them access. You

01:37:42.695 --> 01:37:44.534
<v Speaker 1>can generate the Excel spreadsheet.

01:37:45.735 --> 01:37:48.135
<v Speaker 1>All that stuff's being tracked. So let's come

01:37:48.135 --> 01:37:48.935
<v Speaker 1>to the dashboard.

01:37:49.980 --> 01:37:52.699
<v Speaker 1>And if we go to the

01:37:53.260 --> 01:37:55.420
<v Speaker 1>OpenUnison

01:37:55.420 --> 01:37:56.619
<v Speaker 1>namespace,

01:37:56.940 --> 01:37:58.780
<v Speaker 1>let me go check out pods.

01:37:59.820 --> 01:38:01.420
<v Speaker 1>See here. Did it launch?

01:38:04.595 --> 01:38:05.395
<v Speaker 1>Didn't.

01:38:06.435 --> 01:38:08.515
<v Speaker 1>Alright. So first question is, did I make

01:38:08.515 --> 01:38:09.635
<v Speaker 1>the appropriate

01:38:12.275 --> 01:38:14.435
<v Speaker 1>did I make the appropriate sacrifices

01:38:14.435 --> 01:38:16.035
<v Speaker 1>to the gods of live demos?

01:38:19.290 --> 01:38:20.330
<v Speaker 1>That's okay.

01:38:21.130 --> 01:38:23.210
<v Speaker 1>Sometimes this takes a little while.

01:38:24.330 --> 01:38:27.130
<v Speaker 1>Oh, wait. Actually, first, let me see here.

01:38:28.330 --> 01:38:30.250
<v Speaker 1>Test. Oh, this test raw code.

01:38:30.965 --> 01:38:33.204
<v Speaker 1>And okay. So it's actually deploying our virtual

01:38:33.204 --> 01:38:35.445
<v Speaker 1>cluster. That's right. First, it deploys the virtual

01:38:35.445 --> 01:38:38.084
<v Speaker 1>cluster, then it launches a

01:38:39.125 --> 01:38:42.164
<v Speaker 1>a helm chart that launches a job that

01:38:42.164 --> 01:38:43.844
<v Speaker 1>integrates it. So you can see it's actually

01:38:43.844 --> 01:38:45.525
<v Speaker 1>building out the dashboard for us.

01:38:47.290 --> 01:38:49.530
<v Speaker 1>And this is actually

01:38:49.770 --> 01:38:52.250
<v Speaker 1>our OpenUnison. So what's actually happening now, you're

01:38:52.250 --> 01:38:53.530
<v Speaker 1>seeing it in real time,

01:38:53.850 --> 01:38:56.890
<v Speaker 1>is we've created the virtual cluster. Now we're

01:38:56.890 --> 01:38:59.690
<v Speaker 1>integrating that virtual cluster into OpenUnison.

01:39:01.095 --> 01:39:04.295
<v Speaker 1>And so if we look at these pods,

01:39:04.935 --> 01:39:06.855
<v Speaker 1>we're actually looking at

01:39:07.255 --> 01:39:07.974
<v Speaker 1>our

01:39:09.175 --> 01:39:11.255
<v Speaker 1>our whatchamacallit? Our

01:39:13.175 --> 01:39:14.775
<v Speaker 1>virtual cluster being stood up.

01:39:16.670 --> 01:39:18.030
<v Speaker 1>And so this is a little bit of

01:39:18.030 --> 01:39:19.790
<v Speaker 1>a slow moment, but what's happening is behind

01:39:19.790 --> 01:39:20.670
<v Speaker 1>the scenes

01:39:20.830 --> 01:39:22.830
<v Speaker 1>is we wrote a custom hook into our

01:39:22.830 --> 01:39:24.190
<v Speaker 1>onboarding workflow

01:39:25.230 --> 01:39:28.830
<v Speaker 1>that uses the cluster API that Loft built

01:39:28.830 --> 01:39:31.550
<v Speaker 1>for v cluster to create the v cluster.

01:39:32.695 --> 01:39:33.335
<v Speaker 1>Once

01:39:33.574 --> 01:39:35.255
<v Speaker 1>and then we just wait for that v

01:39:35.255 --> 01:39:37.255
<v Speaker 1>cluster to to be done.

01:39:37.495 --> 01:39:39.574
<v Speaker 1>Once that v cluster is done, we then

01:39:39.574 --> 01:39:41.094
<v Speaker 1>return execution

01:39:41.415 --> 01:39:43.895
<v Speaker 1>to go ahead and kick off that job.

01:39:43.895 --> 01:39:45.655
<v Speaker 1>So now if I look at this, I'm

01:39:45.655 --> 01:39:46.295
<v Speaker 1>pretty sure

01:39:47.550 --> 01:39:49.229
<v Speaker 1>that's running. So

01:39:50.110 --> 01:39:52.270
<v Speaker 1>if I go to the OpenUnison

01:39:52.270 --> 01:39:53.389
<v Speaker 1>namespace,

01:39:55.070 --> 01:39:56.590
<v Speaker 1>I look at pods.

01:39:57.070 --> 01:39:58.669
<v Speaker 1>So this is still running.

01:39:58.909 --> 01:40:00.349
<v Speaker 1>So this should look familiar. Right?

01:40:01.815 --> 01:40:02.375
<v Speaker 1>So

01:40:02.695 --> 01:40:04.295
<v Speaker 1>this is that automated.

01:40:04.295 --> 01:40:05.735
<v Speaker 1>We we we we

01:40:06.055 --> 01:40:07.255
<v Speaker 1>took a

01:40:11.655 --> 01:40:14.055
<v Speaker 1>we took a pod, and we put kubectl,

01:40:14.055 --> 01:40:14.935
<v Speaker 1>v cluster,

01:40:15.175 --> 01:40:17.090
<v Speaker 1>and Helm in it. So that way, we

01:40:17.090 --> 01:40:19.809
<v Speaker 1>could automate all this stuff. So all that

01:40:19.809 --> 01:40:22.689
<v Speaker 1>pain you went through of setting a context,

01:40:23.329 --> 01:40:25.649
<v Speaker 1>we did that automatically with the vCluster.

01:40:27.250 --> 01:40:28.530
<v Speaker 0>Right. So now

01:40:29.010 --> 01:40:30.690
<v Speaker 1>see. Do I have access to it?

01:40:31.425 --> 01:40:32.784
<v Speaker 1>I don't. So I'm gonna go ahead and

01:40:32.784 --> 01:40:34.465
<v Speaker 1>log out and log back in.

01:40:39.105 --> 01:40:41.584
<v Speaker 1>So now I've got a new v cluster

01:40:42.385 --> 01:40:43.105
<v Speaker 1>dashboard.

01:40:49.590 --> 01:40:50.470
<v Speaker 1>Now

01:40:50.470 --> 01:40:52.550
<v Speaker 1>the dashboard actually doesn't really work too well

01:40:52.550 --> 01:40:55.110
<v Speaker 1>because v cluster by default doesn't deploy metrics.

01:40:56.405 --> 01:40:58.565
<v Speaker 1>So we're still working out the kinks here,

01:40:58.565 --> 01:41:00.405
<v Speaker 1>but you can see we we've got it

01:41:00.405 --> 01:41:02.805
<v Speaker 1>automated so you even see which dashboard you're

01:41:02.805 --> 01:41:05.045
<v Speaker 1>in. And then when you get a token

01:41:07.045 --> 01:41:08.565
<v Speaker 1>I didn't really think this through, did I?

01:41:08.565 --> 01:41:10.280
<v Speaker 1>Let's see if I can set this up

01:41:10.280 --> 01:41:12.600
<v Speaker 1>so that you can see what's going on

01:41:12.600 --> 01:41:13.320
<v Speaker 1>here.

01:41:14.760 --> 01:41:16.840
<v Speaker 1>I'm gonna make this the same size.

01:41:22.575 --> 01:41:23.535
<v Speaker 1>And then

01:41:23.775 --> 01:41:25.935
<v Speaker 1>if I switch my sharing

01:41:26.175 --> 01:41:27.695
<v Speaker 1>woah. That's cool.

01:41:28.575 --> 01:41:29.775
<v Speaker 0>How do I get out of this? There

01:41:29.775 --> 01:41:32.255
<v Speaker 1>we go. So I'm going to stop sharing,

01:41:32.255 --> 01:41:34.015
<v Speaker 1>and I'm gonna share

01:41:35.199 --> 01:41:37.280
<v Speaker 1>that. That makes it a little bit easier.

01:41:37.360 --> 01:41:38.800
<v Speaker 1>Can you see that now okay?

01:41:41.679 --> 01:41:43.760
<v Speaker 0>Can you drag the height down a tiny

01:41:43.760 --> 01:41:44.479
<v Speaker 0>bit

01:41:44.560 --> 01:41:45.760
<v Speaker 0>of your window?

01:41:47.040 --> 01:41:48.400
<v Speaker 1>Oh, this? Like that?

01:41:51.474 --> 01:41:54.675
<v Speaker 0>You're sharing just a single window. Right? Yeah.

01:41:54.835 --> 01:41:56.514
<v Speaker 0>Yeah. So if you just make it less

01:41:56.514 --> 01:41:57.314
<v Speaker 0>tall,

01:41:58.355 --> 01:41:59.954
<v Speaker 0>that that's it. Yeah. Go for it. Yeah.

01:42:02.770 --> 01:42:04.690
<v Speaker 1>So I'm right now logged in

01:42:05.489 --> 01:42:06.849
<v Speaker 1>to the v cluster

01:42:07.010 --> 01:42:09.170
<v Speaker 1>as the logged in user.

01:42:09.969 --> 01:42:10.610
<v Speaker 1>So

01:42:10.929 --> 01:42:12.210
<v Speaker 1>the the

01:42:12.210 --> 01:42:14.935
<v Speaker 1>the really nice thing about this is I'm

01:42:14.935 --> 01:42:16.455
<v Speaker 1>interacting as me.

01:42:16.695 --> 01:42:18.535
<v Speaker 1>Now if I went back and I I

01:42:18.535 --> 01:42:20.535
<v Speaker 1>don't wanna give everybody a headache by switching

01:42:20.535 --> 01:42:23.095
<v Speaker 1>Windows again. But if I go back and

01:42:23.095 --> 01:42:25.735
<v Speaker 1>I look at the Kubernetes audit logs,

01:42:25.975 --> 01:42:28.055
<v Speaker 1>it shows I'm logged in as Moseley to

01:42:28.055 --> 01:42:29.415
<v Speaker 1>the virtual cluster

01:42:29.575 --> 01:42:30.295
<v Speaker 1>all for free.

01:42:31.300 --> 01:42:31.940
<v Speaker 0>Nice.

01:42:32.260 --> 01:42:34.580
<v Speaker 1>It's all automated. So I'm actually working with

01:42:34.580 --> 01:42:36.900
<v Speaker 1>a customer. The end result of this is

01:42:36.900 --> 01:42:38.900
<v Speaker 1>something I call an ephemeral cluster

01:42:39.140 --> 01:42:41.380
<v Speaker 1>where the idea is going to be to

01:42:41.380 --> 01:42:43.620
<v Speaker 1>create a completely disposable cluster

01:42:43.620 --> 01:42:45.060
<v Speaker 1>that you never have to debug.

01:42:45.905 --> 01:42:49.265
<v Speaker 1>So that automation, in addition to the OpenUnison,

01:42:49.265 --> 01:42:51.025
<v Speaker 1>will deploy an Argo CD.

01:42:51.185 --> 01:42:53.185
<v Speaker 1>It'll deploy a GitHub instance,

01:42:53.265 --> 01:42:55.105
<v Speaker 1>link everything up for you

01:42:55.585 --> 01:42:56.465
<v Speaker 1>securely.

01:42:57.665 --> 01:42:58.225
<v Speaker 1>And

01:42:58.465 --> 01:42:59.025
<v Speaker 1>that way,

01:43:01.170 --> 01:43:02.530
<v Speaker 1>if you get to a point where the

01:43:02.530 --> 01:43:05.170
<v Speaker 1>cluster is irreparably broken, you can time box

01:43:05.170 --> 01:43:07.330
<v Speaker 1>and say we're gonna spend two hours trying

01:43:07.330 --> 01:43:08.290
<v Speaker 1>to fix this.

01:43:08.850 --> 01:43:10.370
<v Speaker 1>Okay. I give up.

01:43:11.250 --> 01:43:13.810
<v Speaker 1>Nuke it, but it rebuild itself from source.

01:43:18.844 --> 01:43:20.764
<v Speaker 0>That is very cool. I mean, that's not

01:43:20.764 --> 01:43:23.405
<v Speaker 0>just namespace as a service. That's an entire

01:43:23.405 --> 01:43:25.565
<v Speaker 0>cluster as a service. I really like what

01:43:25.565 --> 01:43:27.565
<v Speaker 0>Loft are doing with v cluster and being

01:43:27.565 --> 01:43:28.125
<v Speaker 0>able to

01:43:28.690 --> 01:43:31.489
<v Speaker 0>hook that in with this, like, resource request

01:43:31.489 --> 01:43:33.170
<v Speaker 0>process through OpenUnison

01:43:33.170 --> 01:43:35.649
<v Speaker 0>to get people access to stuff. It's just

01:43:35.969 --> 01:43:38.210
<v Speaker 0>it's really awesome. Really, really cool work. And

01:43:38.210 --> 01:43:39.730
<v Speaker 0>in fact, Rawkode on the chat is doing

01:43:39.730 --> 01:43:40.050
<v Speaker 0>the same.

01:43:41.695 --> 01:43:43.455
<v Speaker 0>Icing on the cake for a great tool.

01:43:43.455 --> 01:43:45.855
<v Speaker 0>And he's right. Like, everything we've seen today.

01:43:45.855 --> 01:43:47.935
<v Speaker 0>It's one of those things that, you know

01:43:48.094 --> 01:43:49.375
<v Speaker 0>I I spend up a lot of clusters.

01:43:49.375 --> 01:43:51.054
<v Speaker 0>I work with a lot of clusters,

01:43:51.455 --> 01:43:53.614
<v Speaker 0>security is the thing that I just always

01:43:54.230 --> 01:43:56.550
<v Speaker 0>hide and stray from because it's hard.

01:43:56.870 --> 01:43:59.030
<v Speaker 0>So having tools like this where we can

01:43:59.030 --> 01:44:01.190
<v Speaker 0>make them the first thing we deploy and

01:44:01.190 --> 01:44:03.830
<v Speaker 0>get that identity and access problem just done

01:44:03.830 --> 01:44:04.950
<v Speaker 0>and dusted out

01:44:05.350 --> 01:44:07.670
<v Speaker 0>is awesome. So I I mean Awesome. Thank

01:44:07.670 --> 01:44:08.550
<v Speaker 1>you. I appreciate that.

01:44:09.355 --> 01:44:10.554
<v Speaker 1>That means a lot.

01:44:11.435 --> 01:44:12.715
<v Speaker 0>Sweet. So

01:44:14.315 --> 01:44:16.875
<v Speaker 0>any last words? Anything you wanna share before

01:44:16.875 --> 01:44:18.235
<v Speaker 0>we finish up today? I think we're gonna

01:44:18.235 --> 01:44:20.235
<v Speaker 0>have to schedule a part two and do

01:44:20.235 --> 01:44:21.675
<v Speaker 0>something else together. I I think we can

01:44:21.675 --> 01:44:23.630
<v Speaker 0>come up with pretty Pretty cool.

01:44:24.349 --> 01:44:26.110
<v Speaker 0>I I've got some interesting ideas or something

01:44:26.110 --> 01:44:28.349
<v Speaker 0>we can build together. Oh, yeah. Definitely, man.

01:44:28.349 --> 01:44:29.469
<v Speaker 1>I wanna hear them.

01:44:30.349 --> 01:44:33.630
<v Speaker 1>My I I I I I think everybody's

01:44:33.630 --> 01:44:35.805
<v Speaker 1>ideas are far better than mine. So I

01:44:35.805 --> 01:44:37.565
<v Speaker 1>really wanna hear what you know, I I

01:44:37.565 --> 01:44:40.285
<v Speaker 1>I love being able to to take other

01:44:40.285 --> 01:44:42.525
<v Speaker 1>people's ideas and make them reality. So yeah.

01:44:42.525 --> 01:44:43.244
<v Speaker 1>Absolutely.

01:44:44.125 --> 01:44:45.565
<v Speaker 1>Hey. I'm really easy to get a hold

01:44:45.565 --> 01:44:47.565
<v Speaker 1>of at MLBIM

01:44:47.565 --> 01:44:48.205
<v Speaker 1>on Twitter.

01:44:49.230 --> 01:44:52.670
<v Speaker 1>Same thing in the Kubernetes Slack. I'm always

01:44:52.670 --> 01:44:53.229
<v Speaker 1>there.

01:44:53.949 --> 01:44:55.230
<v Speaker 1>Feel free to hit me up with a

01:44:55.230 --> 01:44:57.469
<v Speaker 1>question. I love answering questions. I love helping

01:44:57.469 --> 01:44:58.269
<v Speaker 1>people out.

01:44:58.829 --> 01:45:01.630
<v Speaker 1>Again, I'm gonna do the the shameless self

01:45:01.630 --> 01:45:02.110
<v Speaker 1>promotion.

01:45:02.955 --> 01:45:03.995
<v Speaker 1>Amazon.

01:45:03.995 --> 01:45:05.995
<v Speaker 1>Amazon dot co dot u k. Where is

01:45:05.995 --> 01:45:08.715
<v Speaker 1>it? There we go. Amazon.co.uk.

01:45:10.235 --> 01:45:12.395
<v Speaker 1>Yeah. It's it's up there.

01:45:13.275 --> 01:45:15.035
<v Speaker 1>You know, I I will say that I

01:45:15.035 --> 01:45:15.755
<v Speaker 1>have been

01:45:16.540 --> 01:45:17.820
<v Speaker 1>absolutely intimidated

01:45:17.820 --> 01:45:19.979
<v Speaker 1>by the idea of going on cluster date.

01:45:20.380 --> 01:45:23.739
<v Speaker 1>It's I see what people pull off, and

01:45:23.739 --> 01:45:25.739
<v Speaker 1>I'm like, yeah. That makes perfect sense. It

01:45:25.739 --> 01:45:27.100
<v Speaker 1>never would have dawned on me to do

01:45:27.100 --> 01:45:27.340
<v Speaker 1>that.

01:45:29.125 --> 01:45:30.805
<v Speaker 1>You know? And I just I I would

01:45:30.805 --> 01:45:33.445
<v Speaker 1>love to, but then people might realize that

01:45:33.445 --> 01:45:35.364
<v Speaker 1>I'm I'm I'm I'm a sham.

01:45:36.005 --> 01:45:37.525
<v Speaker 0>I'm I'm more worried that we could deploy

01:45:37.525 --> 01:45:38.725
<v Speaker 0>an open to the cluster,

01:45:38.965 --> 01:45:40.645
<v Speaker 0>deploy an approach to cluster and save the

01:45:40.645 --> 01:45:42.645
<v Speaker 0>cluster and set up the local KubeConflict to

01:45:42.645 --> 01:45:44.005
<v Speaker 0>point to that. Like, that's what I'm scared

01:45:44.005 --> 01:45:45.630
<v Speaker 0>of. But

01:45:48.590 --> 01:45:50.110
<v Speaker 1>that that would be a lot of fun.

01:45:50.110 --> 01:45:51.470
<v Speaker 1>What I gotta do is I gotta see

01:45:51.470 --> 01:45:53.550
<v Speaker 1>if I can drag my partner in crime

01:45:53.550 --> 01:45:55.470
<v Speaker 1>on the book, Scott Sarovich,

01:45:55.550 --> 01:45:56.510
<v Speaker 1>on with me

01:45:57.175 --> 01:45:58.695
<v Speaker 1>because he's

01:45:58.775 --> 01:45:59.415
<v Speaker 1>like,

01:45:59.815 --> 01:46:02.615
<v Speaker 1>when it comes to to living with these

01:46:02.615 --> 01:46:05.575
<v Speaker 1>massive headaches of debugging clusters, he knows it

01:46:05.575 --> 01:46:07.335
<v Speaker 1>even better than I do, much better than

01:46:07.335 --> 01:46:08.055
<v Speaker 1>I do.

01:46:09.335 --> 01:46:09.975
<v Speaker 1>But

01:46:11.460 --> 01:46:14.500
<v Speaker 1>yeah. But I've had a blast.

01:46:14.500 --> 01:46:16.340
<v Speaker 1>Thank you so much for

01:46:16.740 --> 01:46:18.500
<v Speaker 1>doing this and having me on. I'm having

01:46:18.500 --> 01:46:20.100
<v Speaker 1>a lot of fun, and I look forward

01:46:20.100 --> 01:46:22.100
<v Speaker 1>to having fun doing more stuff.

01:46:22.740 --> 01:46:24.660
<v Speaker 0>Well, I really appreciate you taking the time

01:46:24.660 --> 01:46:27.265
<v Speaker 0>today to kinda walk us through OpenUnison. It's

01:46:27.265 --> 01:46:29.105
<v Speaker 0>a super powerful tool. It solves a whole

01:46:29.105 --> 01:46:30.945
<v Speaker 0>lot bunch of problems, and I hope that

01:46:30.945 --> 01:46:32.785
<v Speaker 0>a lot of people find this very useful.

01:46:32.865 --> 01:46:34.545
<v Speaker 0>So thank you very much, Mark, for joining

01:46:34.545 --> 01:46:35.105
<v Speaker 0>me.

01:46:35.585 --> 01:46:37.185
<v Speaker 0>I'll reach out to you afterwards. Like I

01:46:37.185 --> 01:46:38.625
<v Speaker 0>said, I've got ideas. I'm gonna talk to

01:46:38.625 --> 01:46:41.425
<v Speaker 0>you. But until then Definitely. Have wonderful weekend,

01:46:41.425 --> 01:46:42.225
<v Speaker 0>and I'll catch you soon.

01:46:42.820 --> 01:46:44.980
<v Speaker 1>You too, David. Adios.

01:46:45.380 --> 01:46:45.860
<v Speaker 1>Adios.
