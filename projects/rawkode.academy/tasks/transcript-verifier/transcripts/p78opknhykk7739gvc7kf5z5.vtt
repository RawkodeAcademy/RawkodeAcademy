WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 8dbf5eac-e750-420a-8be1-eecddf1d0e17
Created: 2025-04-29T21:19:04.196Z
Duration: 5295.015
Channels: 1

00:01:07.344 --> 00:01:10.625
<v Speaker 0>Hello and welcome to today's episode of Rawkode

00:01:10.625 --> 00:01:13.344
<v Speaker 0>live. I am Rawkode, your host and today

00:01:13.344 --> 00:01:15.744
<v Speaker 0>we are gonna take a look at Thanos.

00:01:16.064 --> 00:01:17.505
<v Speaker 0>Now before we move on to that, I

00:01:17.505 --> 00:01:19.585
<v Speaker 0>just wanna take ten seconds to say thank

00:01:19.585 --> 00:01:21.424
<v Speaker 0>you to Equinix Medal, my employer

00:01:21.850 --> 00:01:24.010
<v Speaker 0>for giving me the time and the resources

00:01:24.010 --> 00:01:26.490
<v Speaker 0>to be able to invest in producing these

00:01:26.490 --> 00:01:28.650
<v Speaker 0>materials so that we can all learn together.

00:01:29.210 --> 00:01:30.970
<v Speaker 0>If you wanna play with Equinix Metal, the

00:01:30.970 --> 00:01:32.730
<v Speaker 0>bare metal cloud, you can use a code,

00:01:32.730 --> 00:01:35.290
<v Speaker 0>Rawkode live for $50 in credit.

00:01:36.155 --> 00:01:38.795
<v Speaker 0>There's a whole array of configurations of bare

00:01:38.795 --> 00:01:40.555
<v Speaker 0>metal machines that you can use and play

00:01:40.555 --> 00:01:42.314
<v Speaker 0>with. If you can spend that money very

00:01:42.314 --> 00:01:44.155
<v Speaker 0>very quickly or you can be a little

00:01:44.155 --> 00:01:45.994
<v Speaker 0>bit more conservative and make it last up

00:01:45.994 --> 00:01:48.155
<v Speaker 0>to one hundred hours with our smallest instances.

00:01:49.520 --> 00:01:51.120
<v Speaker 0>If you're not watching this live or you

00:01:51.120 --> 00:01:52.880
<v Speaker 0>just like this card, feel free to join

00:01:52.880 --> 00:01:54.640
<v Speaker 0>the chat. We have loads of people in

00:01:54.640 --> 00:01:56.800
<v Speaker 0>there. We always talk about the episodes and

00:01:56.800 --> 00:01:58.640
<v Speaker 0>what's happening and it's a really good way

00:01:58.640 --> 00:02:01.520
<v Speaker 0>for you to suggest potential new episodes too.

00:02:02.675 --> 00:02:04.915
<v Speaker 0>Please remember to subscribe to our channel. This

00:02:04.915 --> 00:02:07.235
<v Speaker 0>helps the content get and more people, more

00:02:07.235 --> 00:02:08.835
<v Speaker 0>people can learn and that makes it more

00:02:08.835 --> 00:02:09.875
<v Speaker 0>fun for me too.

00:02:10.514 --> 00:02:12.275
<v Speaker 0>And today, we're gonna take a look at

00:02:12.275 --> 00:02:13.235
<v Speaker 0>Thanos.

00:02:13.235 --> 00:02:15.155
<v Speaker 0>Now I am joined

00:02:15.959 --> 00:02:17.480
<v Speaker 0>by who

00:02:18.120 --> 00:02:19.799
<v Speaker 0>is a contributor

00:02:19.799 --> 00:02:22.840
<v Speaker 0>and maintainer of the Thanos project. Hello. How

00:02:22.840 --> 00:02:23.560
<v Speaker 0>are you?

00:02:24.519 --> 00:02:26.840
<v Speaker 1>Hello. Hello. I'm fine. Thank you for having

00:02:26.840 --> 00:02:27.159
<v Speaker 1>me here.

00:02:27.855 --> 00:02:28.815
<v Speaker 0>Awesome.

00:02:28.815 --> 00:02:30.655
<v Speaker 0>It's gonna be really good fun. I'm looking

00:02:30.655 --> 00:02:32.895
<v Speaker 0>forward to to understanding more about Thanos and

00:02:32.895 --> 00:02:34.975
<v Speaker 0>and what problem it's trying to solve and

00:02:35.055 --> 00:02:36.655
<v Speaker 0>and and how it's gonna help me in

00:02:36.655 --> 00:02:38.335
<v Speaker 0>my kind of monitoring observability

00:02:38.335 --> 00:02:39.455
<v Speaker 0>and Kubernetes journey.

00:02:40.140 --> 00:02:41.820
<v Speaker 0>Do you want to just take a little

00:02:41.820 --> 00:02:43.180
<v Speaker 0>moment to tell us a little bit about

00:02:43.180 --> 00:02:45.020
<v Speaker 0>you, what you do, and your involvement in

00:02:45.020 --> 00:02:45.740
<v Speaker 0>the project?

00:02:46.460 --> 00:02:47.100
<v Speaker 1>Sure.

00:02:47.420 --> 00:02:49.100
<v Speaker 1>So my name my full name is actually

00:02:49.100 --> 00:02:49.980
<v Speaker 1>Bartlomi

00:02:49.980 --> 00:02:52.620
<v Speaker 1>port Bartlomi Podka, and that's how you pronounce

00:02:52.620 --> 00:02:54.944
<v Speaker 1>it in Polish. I'm from Poland, but you

00:02:54.944 --> 00:02:57.185
<v Speaker 1>can always call me Bartek. It's just simpler.

00:02:57.425 --> 00:03:00.305
<v Speaker 1>Currently, I am a principal software engineer at

00:03:00.305 --> 00:03:03.025
<v Speaker 1>Red Hat responsible for some observability

00:03:03.025 --> 00:03:03.905
<v Speaker 1>things

00:03:04.144 --> 00:03:06.465
<v Speaker 1>for Red Hat open OpenShift and beyond.

00:03:07.220 --> 00:03:09.060
<v Speaker 1>And to be honest, my career was

00:03:09.299 --> 00:03:11.780
<v Speaker 1>kind of always around observability,

00:03:11.780 --> 00:03:12.500
<v Speaker 1>more or less.

00:03:12.980 --> 00:03:15.460
<v Speaker 1>You know, the beginning, it was at Intel.

00:03:15.540 --> 00:03:17.379
<v Speaker 1>I was really doing some noise neighbor. I

00:03:17.379 --> 00:03:19.780
<v Speaker 1>was scheduling for OpenStack,

00:03:19.780 --> 00:03:22.315
<v Speaker 1>Mesos, Kubernetes, whatever was, you know, the most

00:03:22.315 --> 00:03:22.955
<v Speaker 1>popular

00:03:23.115 --> 00:03:23.995
<v Speaker 1>back then.

00:03:24.475 --> 00:03:26.875
<v Speaker 1>Then a series at and closed on start

00:03:26.875 --> 00:03:27.835
<v Speaker 1>up where

00:03:28.155 --> 00:03:31.195
<v Speaker 1>we actually were using Prometheus a lot. This

00:03:31.195 --> 00:03:32.875
<v Speaker 1>is where I started to use Prometheus.

00:03:33.410 --> 00:03:35.330
<v Speaker 1>We actually use it that much that we

00:03:35.330 --> 00:03:38.050
<v Speaker 1>wanted to scale it out and we couldn't,

00:03:38.050 --> 00:03:39.890
<v Speaker 1>so we created Thanos

00:03:40.530 --> 00:03:42.530
<v Speaker 1>on the on the site, let's say,

00:03:43.330 --> 00:03:44.050
<v Speaker 1>which growed

00:03:44.370 --> 00:03:45.330
<v Speaker 1>grown a little bit.

00:03:46.114 --> 00:03:48.034
<v Speaker 1>And that's how I started to be kind

00:03:48.034 --> 00:03:49.075
<v Speaker 1>of Thanos

00:03:49.234 --> 00:03:52.194
<v Speaker 1>culture and and and maintainer

00:03:52.194 --> 00:03:54.195
<v Speaker 1>as well and getting into this community.

00:03:55.394 --> 00:03:57.394
<v Speaker 1>And right now, we are we are continuing

00:03:57.394 --> 00:03:57.954
<v Speaker 1>this journey.

00:03:58.970 --> 00:03:59.850
<v Speaker 1>And, also,

00:04:00.330 --> 00:04:01.530
<v Speaker 1>there is new

00:04:02.569 --> 00:04:04.810
<v Speaker 1>special interest group in the CNCF

00:04:04.810 --> 00:04:06.890
<v Speaker 1>space, which is called observability,

00:04:07.370 --> 00:04:09.770
<v Speaker 1>which I'm tech leading. So please join us

00:04:09.770 --> 00:04:10.570
<v Speaker 1>there as well

00:04:10.890 --> 00:04:12.810
<v Speaker 1>if you want to contribute more to those

00:04:12.810 --> 00:04:14.410
<v Speaker 1>projects around observability.

00:04:15.865 --> 00:04:18.265
<v Speaker 1>So that's me. Yeah. And I live in

00:04:18.265 --> 00:04:19.305
<v Speaker 1>London if

00:04:20.024 --> 00:04:23.065
<v Speaker 1>we have time for and and kind of

00:04:23.065 --> 00:04:25.785
<v Speaker 1>opportunity for some meetups at some point.

00:04:26.505 --> 00:04:28.185
<v Speaker 1>Hopefully, we can continue doing that.

00:04:29.950 --> 00:04:32.350
<v Speaker 0>Yeah. It sounds like you keep yourself busy.

00:04:32.350 --> 00:04:34.110
<v Speaker 0>There's a lot of things that you're involved

00:04:34.110 --> 00:04:35.870
<v Speaker 0>with there. You know, lead tech lead for

00:04:35.870 --> 00:04:36.830
<v Speaker 0>Kubernetes

00:04:36.830 --> 00:04:39.710
<v Speaker 0>or CNCF's sake. We've contributed to the multiple

00:04:39.710 --> 00:04:41.310
<v Speaker 0>projects. Like, how do you find the time

00:04:41.310 --> 00:04:41.950
<v Speaker 0>for all of this?

00:04:43.335 --> 00:04:44.695
<v Speaker 1>Scheduling, you know.

00:04:45.014 --> 00:04:47.095
<v Speaker 1>No no time to waste.

00:04:48.055 --> 00:04:49.574
<v Speaker 0>Well, I guess it's 2020 and we can't

00:04:49.574 --> 00:04:51.095
<v Speaker 0>leave the house so that must be Exactly.

00:04:51.095 --> 00:04:53.175
<v Speaker 1>Yeah. That would have contributed to that. Yeah.

00:04:53.655 --> 00:04:54.615
<v Speaker 0>Okay.

00:04:54.615 --> 00:04:55.255
<v Speaker 0>So

00:04:55.655 --> 00:04:57.255
<v Speaker 0>I believe you've got a few slides. You're

00:04:57.255 --> 00:05:00.134
<v Speaker 0>gonna run us through a quick introduction to

00:04:59.160 --> 00:05:01.400
<v Speaker 0>Thanos. So while you just get your screen

00:05:01.400 --> 00:05:01.960
<v Speaker 0>ready,

00:05:02.360 --> 00:05:05.000
<v Speaker 0>we have a few comments. So Vikas says

00:05:05.000 --> 00:05:06.200
<v Speaker 0>he is excited.

00:05:08.040 --> 00:05:09.960
<v Speaker 0>Vanessa, hello. Hi there.

00:05:10.840 --> 00:05:11.720
<v Speaker 0>Namaste.

00:05:12.440 --> 00:05:14.120
<v Speaker 0>Oh, you got a hello as well. Hi

00:05:14.120 --> 00:05:15.695
<v Speaker 0>there. Hello.

00:05:16.095 --> 00:05:17.935
<v Speaker 0>And there we go. That's all of our

00:05:17.935 --> 00:05:18.895
<v Speaker 0>introductions.

00:05:19.055 --> 00:05:19.695
<v Speaker 0>So

00:05:20.095 --> 00:05:22.095
<v Speaker 0>your screen is now visible.

00:05:22.255 --> 00:05:23.855
<v Speaker 0>So what is Thanos?

00:05:24.975 --> 00:05:26.175
<v Speaker 1>Cool. So

00:05:27.740 --> 00:05:29.420
<v Speaker 1>don't be mad if I will be kind

00:05:29.420 --> 00:05:31.980
<v Speaker 1>of going through slides maybe quicker. I don't

00:05:31.980 --> 00:05:33.740
<v Speaker 1>want to spend too much time on, like,

00:05:33.820 --> 00:05:35.900
<v Speaker 1>details. I remember you also

00:05:37.980 --> 00:05:40.860
<v Speaker 1>David, you had, like, previous talk with Cortex,

00:05:41.375 --> 00:05:43.535
<v Speaker 1>which is, you know which which really described

00:05:43.535 --> 00:05:46.175
<v Speaker 1>the problem with Prometheus and kind of similar

00:05:46.175 --> 00:05:48.575
<v Speaker 1>goals as Thanos have. So I won't go

00:05:48.575 --> 00:05:50.975
<v Speaker 1>very into details. But at the end, all

00:05:50.975 --> 00:05:53.775
<v Speaker 1>starts with, you know, your application. You are

00:05:53.775 --> 00:05:55.135
<v Speaker 1>running applications somewhere,

00:05:56.110 --> 00:05:57.390
<v Speaker 1>some infrastructure,

00:05:57.630 --> 00:05:59.870
<v Speaker 1>and you want to, you know, have some

00:05:59.870 --> 00:06:02.670
<v Speaker 1>information about that. You want to leverage and

00:06:02.670 --> 00:06:04.750
<v Speaker 1>and take some data and know, you know,

00:06:04.750 --> 00:06:05.950
<v Speaker 1>how is it working?

00:06:06.270 --> 00:06:08.830
<v Speaker 1>Is it actually working with everyone? How fast?

00:06:09.194 --> 00:06:11.435
<v Speaker 1>You know, what it's doing, resources,

00:06:12.074 --> 00:06:13.835
<v Speaker 1>and also some some things

00:06:14.395 --> 00:06:16.634
<v Speaker 1>trying to predict future. You know? How much

00:06:16.875 --> 00:06:18.715
<v Speaker 1>you know, is it going to maybe be

00:06:18.715 --> 00:06:21.194
<v Speaker 1>saturated soon? Maybe don't know if that doesn't

00:06:21.194 --> 00:06:23.510
<v Speaker 1>have enough disk and stuff like that. How

00:06:23.510 --> 00:06:25.990
<v Speaker 1>it performs long term versus maybe how it

00:06:25.990 --> 00:06:26.710
<v Speaker 1>perform

00:06:27.270 --> 00:06:28.710
<v Speaker 1>at some point before.

00:06:29.270 --> 00:06:31.510
<v Speaker 1>And all of this is much more, you

00:06:31.510 --> 00:06:34.230
<v Speaker 1>know, complex to gather and and learn once

00:06:34.230 --> 00:06:35.910
<v Speaker 1>you are in the communities. Right? You you

00:06:35.910 --> 00:06:37.910
<v Speaker 1>essentially have all those layers that you need

00:06:37.910 --> 00:06:40.175
<v Speaker 1>to monitor as well on the way. Lots

00:06:40.175 --> 00:06:42.415
<v Speaker 1>of sidecars, lots of proxies, and and so

00:06:42.415 --> 00:06:43.695
<v Speaker 1>on. So

00:06:44.495 --> 00:06:46.255
<v Speaker 1>this is why observability

00:06:46.255 --> 00:06:48.335
<v Speaker 1>and monitoring is is crucial. It should be

00:06:48.335 --> 00:06:51.055
<v Speaker 1>kind of your your default, and it goes

00:06:51.055 --> 00:06:53.570
<v Speaker 1>even even further to saying, you know, there

00:06:53.570 --> 00:06:56.290
<v Speaker 1>is no application, no product if you have

00:06:56.290 --> 00:06:57.810
<v Speaker 1>no monitoring because

00:06:58.210 --> 00:07:00.130
<v Speaker 1>it's, like, not running the product at all

00:07:00.130 --> 00:07:02.450
<v Speaker 1>because you you don't know if it's running,

00:07:02.450 --> 00:07:03.730
<v Speaker 1>right, ever. So

00:07:04.210 --> 00:07:05.730
<v Speaker 1>and and we can, you know, kind of

00:07:06.074 --> 00:07:08.074
<v Speaker 1>it was mentioned a couple of times in

00:07:08.074 --> 00:07:09.835
<v Speaker 1>the SRE book as well. Like, it is

00:07:09.835 --> 00:07:11.995
<v Speaker 1>kind of foundation of running an infrastructure

00:07:12.155 --> 00:07:13.995
<v Speaker 1>and monitoring observability

00:07:14.235 --> 00:07:16.715
<v Speaker 1>to detect detect stuff, detect issues,

00:07:17.115 --> 00:07:18.634
<v Speaker 1>to automate stuff, really. Right?

00:07:19.259 --> 00:07:19.900
<v Speaker 1>And

00:07:20.620 --> 00:07:22.699
<v Speaker 1>going further, we we know, you know, in

00:07:22.699 --> 00:07:25.500
<v Speaker 1>observability, we have different signals, we call it.

00:07:25.500 --> 00:07:27.020
<v Speaker 1>And this is kind of the,

00:07:27.659 --> 00:07:30.699
<v Speaker 1>let's say, the formal kind of description

00:07:30.699 --> 00:07:33.259
<v Speaker 1>of this. We have traces, logs, and metrics.

00:07:33.965 --> 00:07:36.125
<v Speaker 1>And but that's not the end, by the

00:07:36.125 --> 00:07:38.685
<v Speaker 1>way. We have a couple new signals coming

00:07:38.685 --> 00:07:40.125
<v Speaker 1>on, continuous profiling,

00:07:40.925 --> 00:07:41.485
<v Speaker 1>and

00:07:42.604 --> 00:07:44.284
<v Speaker 1>all of these are kind of part of

00:07:44.284 --> 00:07:45.645
<v Speaker 1>the observability

00:07:46.139 --> 00:07:49.500
<v Speaker 1>that we we are responsible for in in

00:07:49.500 --> 00:07:52.380
<v Speaker 1>the CNCFSY coxerality, for example. And we have

00:07:52.380 --> 00:07:54.539
<v Speaker 1>lots of different projects supporting

00:07:54.539 --> 00:07:55.260
<v Speaker 1>those.

00:07:55.340 --> 00:07:55.900
<v Speaker 1>And

00:07:56.380 --> 00:07:59.785
<v Speaker 1>one use case of those observability again is,

00:07:59.785 --> 00:08:02.425
<v Speaker 1>like, troubleshooting journey. Right? You've probably seen that

00:08:02.425 --> 00:08:05.544
<v Speaker 1>graph a lot. You first getting an alert

00:08:05.544 --> 00:08:07.225
<v Speaker 1>for your app

00:08:07.305 --> 00:08:09.705
<v Speaker 1>being broken or something is going on. You

00:08:09.705 --> 00:08:11.065
<v Speaker 1>go to dashboarding.

00:08:11.145 --> 00:08:13.065
<v Speaker 1>Maybe you query your metrics first.

00:08:13.930 --> 00:08:15.930
<v Speaker 1>Then you go to log aggregation if you

00:08:15.930 --> 00:08:18.330
<v Speaker 1>don't know yet what's wrong and then to

00:08:18.330 --> 00:08:21.610
<v Speaker 1>distribute the tracing if that fails. Right? And,

00:08:21.930 --> 00:08:24.090
<v Speaker 1>hopefully, you have some solution at the end.

00:08:24.090 --> 00:08:26.410
<v Speaker 1>And we will focus kind of today

00:08:26.845 --> 00:08:30.365
<v Speaker 1>the first part. So alerting metrics, aggregation, and,

00:08:30.365 --> 00:08:31.325
<v Speaker 1>like, kind of

00:08:33.005 --> 00:08:35.725
<v Speaker 1>numeric values, numeric informations that you can you

00:08:35.725 --> 00:08:39.085
<v Speaker 1>can gather over time using primitive Thanos

00:08:39.404 --> 00:08:40.205
<v Speaker 1>systems.

00:08:40.205 --> 00:08:40.525
<v Speaker 1>Right?

00:08:41.279 --> 00:08:44.079
<v Speaker 1>And what is Thanos? A Thanos is essentially

00:08:44.079 --> 00:08:46.959
<v Speaker 1>a horizontally scalable metric monitoring system

00:08:47.199 --> 00:08:48.399
<v Speaker 1>which solves

00:08:49.360 --> 00:08:50.399
<v Speaker 1>couple of

00:08:50.720 --> 00:08:54.145
<v Speaker 1>limitations that that that single Prometheus have. And,

00:08:54.145 --> 00:08:56.545
<v Speaker 1>really, as as Ganesh mentioned in a in

00:08:56.545 --> 00:08:59.105
<v Speaker 1>a Cortex session here, it's really exactly the

00:08:59.105 --> 00:08:59.585
<v Speaker 1>same.

00:09:00.785 --> 00:09:05.585
<v Speaker 1>It's it's really around running multiple Prometheus servers.

00:09:05.585 --> 00:09:06.385
<v Speaker 1>Right? Because

00:09:08.240 --> 00:09:10.560
<v Speaker 1>it is just designed as a single, you

00:09:10.560 --> 00:09:13.360
<v Speaker 1>know, binary that is very, very powerful, Prometheus,

00:09:13.360 --> 00:09:13.920
<v Speaker 1>I mean.

00:09:14.399 --> 00:09:15.200
<v Speaker 1>But it

00:09:16.080 --> 00:09:17.600
<v Speaker 1>at some point, you need to scale out.

00:09:17.600 --> 00:09:20.240
<v Speaker 1>Right? You need to run multiple clusters maybe.

00:09:20.240 --> 00:09:21.685
<v Speaker 1>You'll need to run

00:09:22.085 --> 00:09:24.885
<v Speaker 1>maybe some higher availability of the prompt use.

00:09:24.885 --> 00:09:27.045
<v Speaker 1>Maybe you need to functionally shard it.

00:09:27.524 --> 00:09:29.205
<v Speaker 1>And and so and maybe you want to

00:09:29.205 --> 00:09:30.964
<v Speaker 1>have to tell the other system that just

00:09:30.964 --> 00:09:31.685
<v Speaker 1>pushes

00:09:32.165 --> 00:09:35.925
<v Speaker 1>and backfills metric from from other sources. Right?

00:09:36.250 --> 00:09:38.250
<v Speaker 1>And all of this was was the reason

00:09:38.250 --> 00:09:40.730
<v Speaker 1>why Thanos was created as well

00:09:41.050 --> 00:09:42.810
<v Speaker 1>to solve all those issues.

00:09:43.050 --> 00:09:44.410
<v Speaker 1>And on top of that,

00:09:45.850 --> 00:09:49.370
<v Speaker 1>Prometheus was not really designed for long term

00:09:49.370 --> 00:09:50.410
<v Speaker 1>metrics

00:09:50.725 --> 00:09:52.965
<v Speaker 1>kind of storage and and and querying and

00:09:52.965 --> 00:09:53.605
<v Speaker 1>using.

00:09:53.925 --> 00:09:55.285
<v Speaker 1>That's why we

00:09:57.205 --> 00:10:00.325
<v Speaker 1>we kind of designed something like downsampling, which

00:10:00.325 --> 00:10:03.845
<v Speaker 1>allows much, much faster using of this long

00:10:04.490 --> 00:10:06.569
<v Speaker 1>like, one year or two years worth of

00:10:06.569 --> 00:10:09.529
<v Speaker 1>data, for example, and overall kind of cheap

00:10:09.529 --> 00:10:12.010
<v Speaker 1>and a nice experience of using those.

00:10:13.370 --> 00:10:14.730
<v Speaker 1>So very quickly,

00:10:15.370 --> 00:10:17.370
<v Speaker 1>you can think about Thanos as

00:10:17.565 --> 00:10:19.005
<v Speaker 1>primitive but

00:10:19.165 --> 00:10:19.965
<v Speaker 1>distributed.

00:10:19.965 --> 00:10:22.685
<v Speaker 1>Right? So we pick all of those components

00:10:22.685 --> 00:10:23.645
<v Speaker 1>and just

00:10:24.205 --> 00:10:26.605
<v Speaker 1>scale it out and, you know, horizontal scale

00:10:26.605 --> 00:10:29.965
<v Speaker 1>them. So just from high level view, primitive

00:10:29.965 --> 00:10:32.830
<v Speaker 1>is nothing more than just single box with

00:10:32.830 --> 00:10:35.870
<v Speaker 1>just, you know, some rule and alerting engine,

00:10:35.870 --> 00:10:37.470
<v Speaker 1>query engine, compaction,

00:10:37.470 --> 00:10:39.390
<v Speaker 1>scrape engine, storage,

00:10:39.390 --> 00:10:40.990
<v Speaker 1>much more probably, but, you know, those are

00:10:40.990 --> 00:10:41.550
<v Speaker 1>the core things.

00:10:42.985 --> 00:10:44.825
<v Speaker 1>And what we did with Thanos, we we

00:10:44.825 --> 00:10:46.105
<v Speaker 1>split really

00:10:46.665 --> 00:10:48.905
<v Speaker 1>and and, usually, we we're really using the

00:10:48.905 --> 00:10:50.665
<v Speaker 1>same code sometimes.

00:10:51.705 --> 00:10:54.505
<v Speaker 1>And we split that into separate services, separate

00:10:54.505 --> 00:10:57.865
<v Speaker 1>component that you can configure and flexibly flexibly

00:10:58.209 --> 00:10:59.089
<v Speaker 1>deploy

00:10:59.250 --> 00:11:00.610
<v Speaker 1>in different kind of

00:11:01.010 --> 00:11:01.650
<v Speaker 1>model.

00:11:02.850 --> 00:11:04.850
<v Speaker 1>So you can run them in different clusters,

00:11:04.850 --> 00:11:07.330
<v Speaker 1>different, you know, kind of spots, and and

00:11:07.330 --> 00:11:09.570
<v Speaker 1>horizontal scale them. So, you know, the query

00:11:09.570 --> 00:11:12.209
<v Speaker 1>engine becomes Thanos querier. You can you can

00:11:12.209 --> 00:11:13.845
<v Speaker 1>put it anywhere. You can find out the

00:11:13.845 --> 00:11:15.845
<v Speaker 1>queries and and have global view.

00:11:17.445 --> 00:11:19.045
<v Speaker 1>The scrape engine becomes

00:11:19.205 --> 00:11:21.445
<v Speaker 1>really just Prometheus. You can use Prometheus as

00:11:21.445 --> 00:11:23.205
<v Speaker 1>a scrape engine and very

00:11:23.925 --> 00:11:26.485
<v Speaker 1>so it's it's a very lightweight

00:11:26.030 --> 00:11:28.590
<v Speaker 1>in a very lightweight way as well because

00:11:28.590 --> 00:11:29.310
<v Speaker 1>usually,

00:11:29.630 --> 00:11:31.630
<v Speaker 1>Prometheus is buffy. But with Thanos, you can

00:11:31.630 --> 00:11:34.670
<v Speaker 1>just have, like, super short retention of your

00:11:34.670 --> 00:11:35.230
<v Speaker 1>data

00:11:36.190 --> 00:11:38.670
<v Speaker 1>on the Prometheus side, keep it very light,

00:11:38.990 --> 00:11:39.470
<v Speaker 1>and

00:11:39.950 --> 00:11:41.630
<v Speaker 1>store

00:11:41.845 --> 00:11:43.605
<v Speaker 1>kind of your data in the object storage

00:11:43.605 --> 00:11:45.045
<v Speaker 1>of your of your choice.

00:11:45.445 --> 00:11:46.005
<v Speaker 1>And

00:11:46.485 --> 00:11:48.645
<v Speaker 1>and allow PromptUs to to be really just

00:11:48.645 --> 00:11:49.765
<v Speaker 1>collector. Right?

00:11:51.925 --> 00:11:52.805
<v Speaker 1>Thanos

00:11:53.445 --> 00:11:56.645
<v Speaker 1>alerting and and rules engine becomes Thanos

00:11:58.840 --> 00:12:01.400
<v Speaker 1>becomes global compactor because now it has to

00:12:01.400 --> 00:12:03.880
<v Speaker 1>compact and downsample and do this managing

00:12:03.960 --> 00:12:06.360
<v Speaker 1>maintenance stuff on top of bucket.

00:12:06.520 --> 00:12:09.560
<v Speaker 1>And we have some object storage that permit

00:12:09.560 --> 00:12:12.665
<v Speaker 1>to use uploads the data too, which so

00:12:12.665 --> 00:12:15.065
<v Speaker 1>we need some component that fetches that data

00:12:15.065 --> 00:12:16.665
<v Speaker 1>from the buckets. So

00:12:16.985 --> 00:12:18.745
<v Speaker 1>that's that's really it in the in a

00:12:18.745 --> 00:12:20.745
<v Speaker 1>very high level view.

00:12:20.985 --> 00:12:23.464
<v Speaker 1>And, hopefully, during the session, we can we

00:12:23.464 --> 00:12:24.425
<v Speaker 1>can learn more

00:12:25.130 --> 00:12:26.410
<v Speaker 1>hands on, really,

00:12:27.050 --> 00:12:29.610
<v Speaker 1>with running those those those components and and

00:12:29.610 --> 00:12:30.570
<v Speaker 1>playing with them.

00:12:31.530 --> 00:12:33.530
<v Speaker 1>But at the end, it's it's really a

00:12:33.530 --> 00:12:36.890
<v Speaker 1>monitoring system that that is flexible enough to

00:12:37.305 --> 00:12:39.945
<v Speaker 1>to be composed as you want with those

00:12:39.945 --> 00:12:43.225
<v Speaker 1>components, query start with compact sidecar receiver.

00:12:43.545 --> 00:12:45.865
<v Speaker 1>Receiver is the one that that probably we

00:12:45.865 --> 00:12:48.665
<v Speaker 1>won't have time to cover, but, essentially, receiver

00:12:48.904 --> 00:12:50.185
<v Speaker 1>allows you to

00:12:50.680 --> 00:12:53.400
<v Speaker 1>remote ride the data from Prometheus

00:12:53.720 --> 00:12:55.480
<v Speaker 1>to centralized Thanos.

00:12:56.360 --> 00:12:58.040
<v Speaker 1>Maybe we'll have time to cover this. Let's

00:12:58.040 --> 00:12:58.520
<v Speaker 1>see.

00:12:59.880 --> 00:13:01.880
<v Speaker 1>But at the end, I want to leverage

00:13:01.880 --> 00:13:04.120
<v Speaker 1>and and highlight kind of one important

00:13:04.815 --> 00:13:07.375
<v Speaker 1>kind of flexibility point here. It's all possible

00:13:07.375 --> 00:13:10.575
<v Speaker 1>because we have, like, consistent API across this

00:13:11.295 --> 00:13:14.175
<v Speaker 1>those components. So you can think of it

00:13:14.175 --> 00:13:17.455
<v Speaker 1>that those core components of Prometheus were split

00:13:17.455 --> 00:13:19.855
<v Speaker 1>into, you know, horizontal scalable

00:13:20.490 --> 00:13:21.450
<v Speaker 1>services,

00:13:21.450 --> 00:13:23.770
<v Speaker 1>but they all kind of communicate with with

00:13:23.770 --> 00:13:27.370
<v Speaker 1>the same consistent gRPC interface,

00:13:27.770 --> 00:13:29.290
<v Speaker 1>which really looks like this.

00:13:29.530 --> 00:13:32.650
<v Speaker 1>It has something for healthiness and metadata info

00:13:32.650 --> 00:13:33.130
<v Speaker 1>method.

00:13:33.615 --> 00:13:35.135
<v Speaker 1>It grabs series.

00:13:35.215 --> 00:13:35.855
<v Speaker 1>It

00:13:36.095 --> 00:13:38.575
<v Speaker 1>also grabs label names and values,

00:13:38.895 --> 00:13:41.055
<v Speaker 1>and it scales a lot because now

00:13:42.655 --> 00:13:46.255
<v Speaker 1>every component speaks with this API. So you

00:13:46.255 --> 00:13:46.975
<v Speaker 1>can integrate

00:13:47.690 --> 00:13:48.650
<v Speaker 1>Thanos,

00:13:48.730 --> 00:13:50.090
<v Speaker 1>for example, querying

00:13:50.250 --> 00:13:53.450
<v Speaker 1>to query from totally, you know, separate systems

00:13:53.450 --> 00:13:55.050
<v Speaker 1>like OpenTeesDB

00:13:55.130 --> 00:13:55.690
<v Speaker 1>or

00:13:56.010 --> 00:14:00.225
<v Speaker 1>or some other remote try remote read component

00:14:00.225 --> 00:14:02.945
<v Speaker 1>or totally different database rating as long as

00:14:02.945 --> 00:14:04.385
<v Speaker 1>it speaks this API,

00:14:05.265 --> 00:14:07.505
<v Speaker 1>which is which tries to be very efficient

00:14:07.505 --> 00:14:10.385
<v Speaker 1>by by by doing streaming and and compression

00:14:10.385 --> 00:14:11.025
<v Speaker 1>and so on.

00:14:13.440 --> 00:14:15.760
<v Speaker 1>So, really, that's that's most of it.

00:14:16.560 --> 00:14:19.840
<v Speaker 1>Obviously, Thanos has its own UI. Actually, recently,

00:14:19.840 --> 00:14:22.240
<v Speaker 1>we wrote we rewrote this in React, which

00:14:22.240 --> 00:14:24.080
<v Speaker 1>is kind of a bit more powerful than

00:14:24.080 --> 00:14:25.040
<v Speaker 1>the Prometheus UI.

00:14:25.745 --> 00:14:27.745
<v Speaker 1>But at the end, everyone just uses Grafana

00:14:27.745 --> 00:14:28.625
<v Speaker 1>dashboards.

00:14:29.505 --> 00:14:31.745
<v Speaker 1>But, still, this is very useful for ad

00:14:31.745 --> 00:14:32.865
<v Speaker 1>hoc querying.

00:14:33.665 --> 00:14:35.904
<v Speaker 1>There is this bucket viewer, so another kind

00:14:35.904 --> 00:14:38.144
<v Speaker 1>of interesting UI that Thanos adds on top

00:14:38.144 --> 00:14:39.105
<v Speaker 1>of Prometheus.

00:14:40.110 --> 00:14:42.350
<v Speaker 1>But, actually, we we we will play with

00:14:42.350 --> 00:14:43.950
<v Speaker 1>that hopefully today as well.

00:14:44.510 --> 00:14:45.950
<v Speaker 1>And I want to, last but not the

00:14:45.950 --> 00:14:47.390
<v Speaker 1>least, I want to mention, you know, other

00:14:47.390 --> 00:14:49.710
<v Speaker 1>kind of aspect of this Thanos community.

00:14:51.150 --> 00:14:52.990
<v Speaker 1>On top of, you know, contributors,

00:14:52.990 --> 00:14:54.830
<v Speaker 1>we are super proud to have, like, kind

00:14:54.830 --> 00:14:57.445
<v Speaker 1>of strong mentorship programs.

00:14:58.005 --> 00:14:59.765
<v Speaker 1>Thanks to the CNCF as well and other

00:14:59.765 --> 00:15:00.565
<v Speaker 1>mentors.

00:15:00.965 --> 00:15:03.365
<v Speaker 1>And so we have really, you know, diverse

00:15:03.925 --> 00:15:06.405
<v Speaker 1>amazing people at SM and T. Some of

00:15:06.405 --> 00:15:08.725
<v Speaker 1>them, you know, end up being maintainers.

00:15:08.725 --> 00:15:08.885
<v Speaker 1>So

00:15:09.630 --> 00:15:11.710
<v Speaker 1>just for all the old projects out there,

00:15:11.710 --> 00:15:14.190
<v Speaker 1>open source project, please please mentor because it's

00:15:14.190 --> 00:15:16.190
<v Speaker 1>actually a good good way to get to

00:15:16.190 --> 00:15:18.350
<v Speaker 1>give opportunity for for these people to have

00:15:18.350 --> 00:15:19.070
<v Speaker 1>career

00:15:19.790 --> 00:15:22.190
<v Speaker 1>good career and actually contribute to Thanos in

00:15:22.190 --> 00:15:24.030
<v Speaker 1>the same time or, like, your projects. So

00:15:24.030 --> 00:15:26.415
<v Speaker 1>it's pretty pretty pretty amazing.

00:15:27.214 --> 00:15:29.615
<v Speaker 1>And, yeah, I think we we might be

00:15:29.615 --> 00:15:30.895
<v Speaker 1>ready for some action.

00:15:33.295 --> 00:15:35.695
<v Speaker 1>I think yeah. Let's let's talk for that.

00:15:35.695 --> 00:15:39.079
<v Speaker 1>I think that's it. Yeah. Alright. Awesome. That

00:15:39.079 --> 00:15:39.800
<v Speaker 0>was a

00:15:40.199 --> 00:15:42.360
<v Speaker 0>that a great introduction there. I really like

00:15:42.360 --> 00:15:45.320
<v Speaker 0>that. I wasn't aware of that mentoring program.

00:15:45.320 --> 00:15:47.560
<v Speaker 0>That's awesome as well that you're, you know,

00:15:47.560 --> 00:15:50.519
<v Speaker 0>helping people break into open source and development,

00:15:50.519 --> 00:15:53.160
<v Speaker 0>and then they're even becoming maintainers or contributors.

00:15:53.160 --> 00:15:54.774
<v Speaker 0>So really cool program.

00:15:55.095 --> 00:15:57.255
<v Speaker 1>Yep. It's really hard in the beginning to

00:15:57.894 --> 00:15:58.774
<v Speaker 1>kind of

00:16:01.654 --> 00:16:04.214
<v Speaker 1>jump over this first barrier of of the

00:16:04.214 --> 00:16:05.975
<v Speaker 1>time and sacrifice,

00:16:06.210 --> 00:16:08.290
<v Speaker 1>but it's super worth it long term. Like,

00:16:08.290 --> 00:16:10.450
<v Speaker 1>really, like, open source is really the same.

00:16:10.930 --> 00:16:11.650
<v Speaker 1>Right?

00:16:11.890 --> 00:16:13.010
<v Speaker 0>Yeah. For sure.

00:16:13.570 --> 00:16:14.770
<v Speaker 0>So let me

00:16:15.330 --> 00:16:17.810
<v Speaker 0>pop up our screen here. So we if

00:16:17.810 --> 00:16:19.090
<v Speaker 0>anyone is curious,

00:16:19.170 --> 00:16:20.130
<v Speaker 0>wants to, you know,

00:16:20.774 --> 00:16:22.615
<v Speaker 0>go into the Thanos website, it's available at

00:16:22.615 --> 00:16:23.654
<v Speaker 0>Thanos.io.

00:16:23.654 --> 00:16:25.735
<v Speaker 0>There are guides that we're gonna

00:16:26.535 --> 00:16:27.815
<v Speaker 0>ignore for today

00:16:28.055 --> 00:16:30.694
<v Speaker 0>because we're living life slightly on the edge

00:16:30.694 --> 00:16:33.334
<v Speaker 0>with a demo that you have prepared

00:16:33.815 --> 00:16:35.720
<v Speaker 0>that you think works. So

00:16:36.040 --> 00:16:36.680
<v Speaker 0>we're

00:16:36.920 --> 00:16:38.200
<v Speaker 0>gonna see how we get on with that.

00:16:38.200 --> 00:16:39.560
<v Speaker 0>And if people want to play with this

00:16:39.560 --> 00:16:44.600
<v Speaker 0>demo as well, it is available on katakoda.com/bwplotka.

00:16:45.320 --> 00:16:47.399
<v Speaker 0>If I click on start course here,

00:16:47.720 --> 00:16:49.880
<v Speaker 0>there's actually a few which I'm assuming

00:16:50.285 --> 00:16:52.205
<v Speaker 0>people can use as well, but we are

00:16:52.205 --> 00:16:55.325
<v Speaker 0>gonna play with the secret Rawkode demo resources.

00:16:57.325 --> 00:16:58.845
<v Speaker 0>Do we wanna just

00:16:59.565 --> 00:17:02.445
<v Speaker 0>talk about why we're going down this road

00:17:02.445 --> 00:17:04.925
<v Speaker 0>rather than the documentation

00:17:04.450 --> 00:17:06.210
<v Speaker 0>for people? Like, what what what is different

00:17:06.210 --> 00:17:07.890
<v Speaker 0>from the approach that we're gonna take today?

00:17:08.290 --> 00:17:10.369
<v Speaker 1>Yeah. That is the very good reason behind

00:17:10.369 --> 00:17:12.369
<v Speaker 1>that. And by the way, just maybe let's

00:17:12.369 --> 00:17:14.049
<v Speaker 1>start. Like, there is officially,

00:17:14.050 --> 00:17:17.330
<v Speaker 1>like, katakobah.com/Thanos

00:17:17.714 --> 00:17:19.875
<v Speaker 1>where we are publishing, you know, production ready

00:17:19.875 --> 00:17:22.355
<v Speaker 1>ready, let's say, tutorials and demos.

00:17:23.075 --> 00:17:23.714
<v Speaker 1>We

00:17:23.875 --> 00:17:26.674
<v Speaker 1>have kind of large base of those demos

00:17:26.674 --> 00:17:28.915
<v Speaker 1>which are in progress. It it takes a

00:17:28.915 --> 00:17:30.115
<v Speaker 1>bit of time to prepare them.

00:17:31.060 --> 00:17:31.700
<v Speaker 1>And

00:17:32.020 --> 00:17:34.180
<v Speaker 1>so they will be like, all of those

00:17:34.180 --> 00:17:37.460
<v Speaker 1>that you you've seen even on VWPodka,

00:17:37.460 --> 00:17:39.860
<v Speaker 1>they will be published soon as well. So,

00:17:39.860 --> 00:17:41.940
<v Speaker 1>you know, if you want to, like, nice

00:17:41.940 --> 00:17:44.180
<v Speaker 1>experience, just just let's wait for them or

00:17:44.180 --> 00:17:45.460
<v Speaker 1>help us contribute

00:17:45.965 --> 00:17:47.725
<v Speaker 1>and and and do them. But at the

00:17:47.725 --> 00:17:48.284
<v Speaker 1>end,

00:17:49.165 --> 00:17:53.005
<v Speaker 1>we prefer doing those Katakata tutorials versus documentation,

00:17:53.245 --> 00:17:55.405
<v Speaker 1>like, you know, guides and whatever because it's

00:17:55.405 --> 00:17:58.045
<v Speaker 1>super interactive. Right? You don't need to have

00:17:58.045 --> 00:18:00.205
<v Speaker 1>your own machines, really. You can just run

00:18:00.880 --> 00:18:03.280
<v Speaker 1>all your comments, all your Docker, you know,

00:18:03.280 --> 00:18:05.919
<v Speaker 1>machines, ports, even to to to some virtual

00:18:05.919 --> 00:18:07.440
<v Speaker 1>Kubernetes that is

00:18:09.040 --> 00:18:12.080
<v Speaker 1>running, and you have just the interface

00:18:12.160 --> 00:18:14.480
<v Speaker 1>and just terminal connected to that through the

00:18:14.480 --> 00:18:17.865
<v Speaker 1>browser of Katakoda. So it's extremely, extremely amazing.

00:18:18.185 --> 00:18:20.745
<v Speaker 1>And we are abusing this a lot because

00:18:21.305 --> 00:18:22.905
<v Speaker 1>every time we have conference

00:18:23.065 --> 00:18:24.745
<v Speaker 1>and we need to create a demo, we

00:18:24.745 --> 00:18:26.105
<v Speaker 1>used to do it on our laptop, but

00:18:26.105 --> 00:18:28.025
<v Speaker 1>this is that this doesn't scale. You cannot

00:18:28.025 --> 00:18:30.184
<v Speaker 1>play with this demo easily and maintain

00:18:30.265 --> 00:18:30.745
<v Speaker 1>that

00:18:31.200 --> 00:18:33.440
<v Speaker 1>because your laptop is different than, you know,

00:18:33.440 --> 00:18:36.559
<v Speaker 1>Mac OS running somewhere or laptop that someone

00:18:36.559 --> 00:18:38.720
<v Speaker 1>else is using or or Windows machine or

00:18:38.720 --> 00:18:41.440
<v Speaker 1>anything like that. We totally break this barrier

00:18:41.440 --> 00:18:44.480
<v Speaker 1>by just every time we do demo conference,

00:18:44.480 --> 00:18:45.440
<v Speaker 1>we do it on Catacoda.

00:18:45.815 --> 00:18:48.295
<v Speaker 1>And, actually, we're literally streaming Catacoda

00:18:48.295 --> 00:18:50.215
<v Speaker 1>kind of browser and how we do this

00:18:50.215 --> 00:18:52.695
<v Speaker 1>and explain that maybe with our own words.

00:18:53.015 --> 00:18:55.494
<v Speaker 1>But after this, we just

00:18:55.975 --> 00:18:57.335
<v Speaker 1>describe the

00:18:58.295 --> 00:18:59.735
<v Speaker 1>what what has to be done in this

00:18:59.735 --> 00:19:00.135
<v Speaker 1>tutorial,

00:19:01.669 --> 00:19:04.230
<v Speaker 1>kind of nice, maybe kind of cleaning this

00:19:04.230 --> 00:19:06.549
<v Speaker 1>up and publishing this as a proper tutorial.

00:19:06.549 --> 00:19:08.870
<v Speaker 1>So it's not wasted time. That's kind of

00:19:08.870 --> 00:19:09.830
<v Speaker 1>our goal.

00:19:10.150 --> 00:19:12.230
<v Speaker 1>So really the same we are doing here

00:19:12.230 --> 00:19:13.109
<v Speaker 1>now today.

00:19:14.309 --> 00:19:17.095
<v Speaker 0>Yeah. I just echo everything you said there.

00:19:17.095 --> 00:19:18.775
<v Speaker 0>I think KataCode is such a much more

00:19:18.775 --> 00:19:21.175
<v Speaker 0>tangible learning experience for people, you know, being

00:19:21.175 --> 00:19:22.615
<v Speaker 0>able to actually run the commands and get

00:19:22.615 --> 00:19:25.174
<v Speaker 0>hands on it rather than just maybe reading

00:19:25.495 --> 00:19:27.335
<v Speaker 0>the code in a a tutorial. I think

00:19:27.335 --> 00:19:29.095
<v Speaker 0>it provides a really good platform for learning.

00:19:29.440 --> 00:19:31.920
<v Speaker 0>And you're getting a lot of love for

00:19:31.920 --> 00:19:33.920
<v Speaker 0>the mentoring program as well. So firstly, you

00:19:33.920 --> 00:19:35.039
<v Speaker 0>got a hello

00:19:35.520 --> 00:19:38.080
<v Speaker 0>followed by the Thanos has the best

00:19:38.320 --> 00:19:40.640
<v Speaker 0>mentoring community of open source and then a

00:19:40.640 --> 00:19:42.865
<v Speaker 0>wee plus one. So you know, whatever you're

00:19:42.865 --> 00:19:44.465
<v Speaker 0>doing there is working, that people love it.

00:19:44.465 --> 00:19:46.465
<v Speaker 0>Keep it up. That is awesome to see.

00:19:46.945 --> 00:19:49.745
<v Speaker 0>Alright. So the difficulty on this is is

00:19:49.745 --> 00:19:51.825
<v Speaker 0>is YOLO. So I'm excited. I like it

00:19:51.825 --> 00:19:53.184
<v Speaker 0>when things work, but I like it better

00:19:53.184 --> 00:19:54.945
<v Speaker 0>when things break. So we'll see how that

00:19:54.945 --> 00:19:55.265
<v Speaker 0>goes.

00:19:56.480 --> 00:19:58.560
<v Speaker 1>It's worth to mention that we want to

00:19:58.560 --> 00:20:00.960
<v Speaker 1>take it a level higher. So we don't

00:20:00.960 --> 00:20:02.400
<v Speaker 1>want want don't want I mean, we will

00:20:02.400 --> 00:20:04.800
<v Speaker 1>not use Catacoda to run the comments. We

00:20:04.800 --> 00:20:08.080
<v Speaker 1>just take and copy them into your

00:20:08.240 --> 00:20:09.200
<v Speaker 1>VM,

00:20:09.280 --> 00:20:10.960
<v Speaker 1>which makes it more interesting, I guess.

00:20:12.475 --> 00:20:14.315
<v Speaker 0>Yeah. I mean, if you want to up

00:20:14.315 --> 00:20:15.674
<v Speaker 0>the difficulty a little bit more, I can

00:20:15.674 --> 00:20:17.195
<v Speaker 0>go spin up an ARM machine on Equinix

00:20:17.195 --> 00:20:18.554
<v Speaker 0>metal, and we can see how the ARM

00:20:18.554 --> 00:20:19.674
<v Speaker 0>compatibility is.

00:20:19.914 --> 00:20:22.635
<v Speaker 1>Yeah. The only problem, do we have connection

00:20:22.635 --> 00:20:25.679
<v Speaker 1>to that? We can, like, we can spin

00:20:25.679 --> 00:20:27.520
<v Speaker 1>up UI and and see those things as

00:20:27.520 --> 00:20:27.999
<v Speaker 1>well?

00:20:29.040 --> 00:20:30.640
<v Speaker 0>We'll we'll we'll keep it simple. We'll do

00:20:30.640 --> 00:20:32.480
<v Speaker 0>it on my machine. I I just Oh,

00:20:32.480 --> 00:20:34.800
<v Speaker 1>yeah. No. If if you wanna update difficulty,

00:20:34.800 --> 00:20:36.400
<v Speaker 0>we we No. No. No. Let's start with

00:20:36.400 --> 00:20:36.559
<v Speaker 1>the machine.

00:20:38.205 --> 00:20:39.725
<v Speaker 0>At the amount of times, I've had people

00:20:39.725 --> 00:20:41.085
<v Speaker 0>on this this show, and I said, oh,

00:20:41.085 --> 00:20:42.365
<v Speaker 0>should we do it in our machine? And

00:20:42.365 --> 00:20:44.605
<v Speaker 0>there's just this fear. They're like, no.

00:20:44.924 --> 00:20:45.644
<v Speaker 0>Not yet.

00:20:47.164 --> 00:20:48.764
<v Speaker 0>Alright. So step one

00:20:49.164 --> 00:20:50.364
<v Speaker 0>is we are sorry.

00:20:51.164 --> 00:20:51.565
<v Speaker 0>On your go.

00:20:52.320 --> 00:20:54.320
<v Speaker 1>Yeah. Let's how to do how to do

00:20:54.320 --> 00:20:55.519
<v Speaker 1>it properly? I think

00:20:56.559 --> 00:20:59.679
<v Speaker 1>we can I can describe essentially what is

00:20:59.679 --> 00:21:01.919
<v Speaker 1>happening here? So first of all, I think

00:21:01.919 --> 00:21:04.080
<v Speaker 1>it will be best to have some data,

00:21:04.080 --> 00:21:06.485
<v Speaker 1>like some metrics data that we can play

00:21:06.485 --> 00:21:09.044
<v Speaker 1>with and maybe, you know, query against and

00:21:09.044 --> 00:21:11.044
<v Speaker 1>stuff. So let's generate that. That's that's kind

00:21:11.044 --> 00:21:13.284
<v Speaker 1>of the the comments here. I think

00:21:13.765 --> 00:21:15.044
<v Speaker 1>you need to first

00:21:15.445 --> 00:21:18.080
<v Speaker 1>have this card here variable

00:21:18.080 --> 00:21:20.559
<v Speaker 1>in your lap on your laptop or something.

00:21:24.800 --> 00:21:26.400
<v Speaker 1>You can indeed copy this.

00:21:26.800 --> 00:21:28.880
<v Speaker 0>Yeah. Yeah. It's yellow, by the way. Yeah.

00:21:30.625 --> 00:21:32.785
<v Speaker 0>Oh, that's the wrong command. Yeah. Yeah. So

00:21:32.785 --> 00:21:34.544
<v Speaker 1>it's actually this is not copying. This is

00:21:34.544 --> 00:21:35.345
<v Speaker 1>executing.

00:21:35.585 --> 00:21:36.384
<v Speaker 1>So I'm

00:21:36.625 --> 00:21:37.184
<v Speaker 1>sneakily

00:21:37.585 --> 00:21:39.265
<v Speaker 1>yeah. You need to just copy it manually

00:21:39.265 --> 00:21:41.265
<v Speaker 1>this time. Rest should be fine.

00:21:42.460 --> 00:21:44.860
<v Speaker 0>Okay. So the first command is to pull

00:21:44.860 --> 00:21:46.860
<v Speaker 0>down and run a container with the Thanos

00:21:46.860 --> 00:21:50.700
<v Speaker 0>bench image. What's the Thanos bench? Correct. The

00:21:50.700 --> 00:21:52.620
<v Speaker 1>Thanos bench, you can actually go to maybe

00:21:52.620 --> 00:21:59.225
<v Speaker 1>GitHub page for that. So it's githubcom./Thanosio.

00:22:00.505 --> 00:22:01.305
<v Speaker 1>Thanos,

00:22:01.305 --> 00:22:04.985
<v Speaker 1>actually, with hyphen I o. Thanos hyphen I

00:22:04.985 --> 00:22:06.745
<v Speaker 1>o. Yep. Yep. Click it.

00:22:08.440 --> 00:22:10.680
<v Speaker 1>So it's our, like, benchmarking

00:22:10.760 --> 00:22:12.200
<v Speaker 1>slash testing

00:22:12.760 --> 00:22:13.559
<v Speaker 1>library

00:22:13.960 --> 00:22:16.440
<v Speaker 1>or, like, kind of client CLI.

00:22:16.600 --> 00:22:19.480
<v Speaker 1>So you can generate yourself from queues blocks

00:22:19.480 --> 00:22:22.315
<v Speaker 1>or from to use wall even or things

00:22:22.315 --> 00:22:24.315
<v Speaker 1>like that. You can generate some load.

00:22:24.635 --> 00:22:26.555
<v Speaker 1>So we will be using that to generate

00:22:26.555 --> 00:22:28.795
<v Speaker 1>tons of blocks because, you know, we want

00:22:28.795 --> 00:22:30.475
<v Speaker 1>to test unlimited retention,

00:22:30.475 --> 00:22:33.115
<v Speaker 1>so we're gonna generate one year of data.

00:22:34.060 --> 00:22:36.059
<v Speaker 0>Nice. Okay. Cool.

00:22:37.260 --> 00:22:39.420
<v Speaker 1>And only five series, so we don't need

00:22:39.420 --> 00:22:41.179
<v Speaker 1>to wait too much.

00:22:41.740 --> 00:22:43.500
<v Speaker 1>So we created some profile.

00:22:44.060 --> 00:22:45.900
<v Speaker 1>Yeah. I recommend you to copy this and

00:22:45.900 --> 00:22:47.420
<v Speaker 1>just just run on your machine.

00:22:47.914 --> 00:22:50.955
<v Speaker 1>And this is essentially showing how the planning

00:22:50.955 --> 00:22:54.234
<v Speaker 1>works. So this is, like, command block plan,

00:22:55.195 --> 00:22:57.354
<v Speaker 1>and block plan will just generate,

00:22:57.755 --> 00:23:00.475
<v Speaker 1>essentially, a configuration for further Thanos bench command

00:23:00.475 --> 00:23:02.235
<v Speaker 1>that will actually generate blocks. So you can

00:23:02.235 --> 00:23:03.755
<v Speaker 1>actually cut this block,

00:23:04.420 --> 00:23:06.580
<v Speaker 1>yeah, block spec dot YAML, which should be

00:23:06.580 --> 00:23:09.299
<v Speaker 1>generated in your directory right now.

00:23:10.420 --> 00:23:12.900
<v Speaker 1>Yeah. And this is, like, just raw YAML

00:23:12.900 --> 00:23:15.780
<v Speaker 1>that specifies how the block should should look

00:23:15.780 --> 00:23:15.940
<v Speaker 1>like.

00:23:17.145 --> 00:23:18.825
<v Speaker 1>And this is kind of the input for

00:23:18.825 --> 00:23:20.505
<v Speaker 1>the for the further comments. So this is,

00:23:20.505 --> 00:23:21.305
<v Speaker 1>like, really

00:23:22.585 --> 00:23:25.785
<v Speaker 1>a row method JSON. How how the just,

00:23:25.785 --> 00:23:26.505
<v Speaker 1>like, low

00:23:26.985 --> 00:23:29.305
<v Speaker 1>low level format of the totiz d b

00:23:29.305 --> 00:23:31.770
<v Speaker 1>block, which is exactly the same block that

00:23:31.930 --> 00:23:33.930
<v Speaker 1>well, this is, like, Prometheus format, but Thanos

00:23:33.930 --> 00:23:36.410
<v Speaker 1>is exactly the same format as well. Actually,

00:23:36.410 --> 00:23:37.850
<v Speaker 1>Cortex uses that as well.

00:23:38.250 --> 00:23:40.330
<v Speaker 1>So you specify some kind of meta JSON

00:23:40.330 --> 00:23:42.890
<v Speaker 1>metadata of the block. So how what's the

00:23:42.890 --> 00:23:44.490
<v Speaker 1>retention of the block? And then if you

00:23:44.490 --> 00:23:46.205
<v Speaker 1>scroll a little bit down, you kind of

00:23:46.205 --> 00:23:49.245
<v Speaker 1>define series in a very low level stuff,

00:23:49.245 --> 00:23:51.325
<v Speaker 1>and this is like your load generation

00:23:51.965 --> 00:23:54.845
<v Speaker 1>stuff that you just provide some names, some,

00:23:54.845 --> 00:23:58.045
<v Speaker 1>you know, type goucher or counter,

00:23:58.205 --> 00:24:00.205
<v Speaker 1>and maybe the variance.

00:24:00.205 --> 00:24:03.060
<v Speaker 1>And, like, this is, like, whatever is to

00:24:03.060 --> 00:24:04.980
<v Speaker 1>kind of whatever is easy to to to

00:24:04.980 --> 00:24:06.100
<v Speaker 1>to kind of generate

00:24:06.500 --> 00:24:09.140
<v Speaker 1>somehow realistic data. Right?

00:24:09.860 --> 00:24:12.020
<v Speaker 1>So we're gonna generate couple of blocks with

00:24:12.020 --> 00:24:13.620
<v Speaker 1>five series. So there is no need to

00:24:13.620 --> 00:24:15.575
<v Speaker 1>kind of scroll it more. Yeah. It should

00:24:15.575 --> 00:24:17.735
<v Speaker 1>be on your data. So now if you

00:24:17.735 --> 00:24:19.815
<v Speaker 1>copy another command, this will

00:24:20.055 --> 00:24:21.735
<v Speaker 1>generate the same plan

00:24:22.215 --> 00:24:25.415
<v Speaker 1>and just pipe it. So pipe actually the

00:24:25.415 --> 00:24:26.695
<v Speaker 1>same JSON into

00:24:28.090 --> 00:24:28.809
<v Speaker 1>the

00:24:29.289 --> 00:24:32.249
<v Speaker 1>block again. So another command of Thanos bench

00:24:32.490 --> 00:24:35.450
<v Speaker 1>and output this in directory,

00:24:35.450 --> 00:24:38.009
<v Speaker 1>which will be called, yeah, from e one

00:24:38.009 --> 00:24:39.850
<v Speaker 1>replica zero because

00:24:40.795 --> 00:24:42.315
<v Speaker 1>I I should mention,

00:24:42.795 --> 00:24:44.395
<v Speaker 1>I I it would be nice to kind

00:24:44.395 --> 00:24:45.595
<v Speaker 1>of create

00:24:47.195 --> 00:24:49.355
<v Speaker 1>to showcase all or show showcase kind of

00:24:49.355 --> 00:24:51.515
<v Speaker 1>the benefits of Thanos. So we need more

00:24:51.515 --> 00:24:54.200
<v Speaker 1>than one Prometheus. Right? So the idea is

00:24:54.200 --> 00:24:56.760
<v Speaker 1>to create free Prometheus and simulate kind of

00:24:56.760 --> 00:24:57.640
<v Speaker 1>two clusters.

00:24:57.960 --> 00:25:00.360
<v Speaker 1>One cluster e one and the one e

00:25:00.520 --> 00:25:01.559
<v Speaker 1>US One.

00:25:02.040 --> 00:25:04.040
<v Speaker 1>And the first one, e one, will have

00:25:04.040 --> 00:25:06.280
<v Speaker 1>two replicas of Prometheus. So we can imagine

00:25:06.280 --> 00:25:10.184
<v Speaker 1>they kind of scrape the same applications

00:25:10.505 --> 00:25:12.024
<v Speaker 1>from your cluster,

00:25:12.265 --> 00:25:14.184
<v Speaker 1>and then U U S One, it will

00:25:14.184 --> 00:25:16.424
<v Speaker 1>be just one replica scraping, you know, U

00:25:16.424 --> 00:25:19.304
<v Speaker 1>S One cluster. Let's let's imagine.

00:25:20.105 --> 00:25:21.705
<v Speaker 1>So what we want to do, we want

00:25:21.705 --> 00:25:23.065
<v Speaker 1>to create data

00:25:23.465 --> 00:25:25.705
<v Speaker 1>backfill kind of data

00:25:26.480 --> 00:25:28.559
<v Speaker 1>artificially for three of those. So that's why

00:25:28.559 --> 00:25:29.999
<v Speaker 1>you need to copy three times,

00:25:30.799 --> 00:25:33.120
<v Speaker 1>and it will but just generating data into

00:25:33.120 --> 00:25:34.080
<v Speaker 1>three different

00:25:34.399 --> 00:25:35.200
<v Speaker 1>directories.

00:25:35.200 --> 00:25:36.639
<v Speaker 1>Right? Yep.

00:25:37.760 --> 00:25:40.399
<v Speaker 0>Okay. So you should have, like, three directories,

00:25:40.960 --> 00:25:42.695
<v Speaker 1>and all of them should have,

00:25:43.015 --> 00:25:45.175
<v Speaker 1>you know, one year of data, hopefully.

00:25:47.255 --> 00:25:49.815
<v Speaker 0>Yep. We got from US One, from EU

00:25:49.815 --> 00:25:52.695
<v Speaker 0>1, and from EU 1 replicas.

00:25:52.695 --> 00:25:52.935
<v Speaker 0>Okay.

00:25:53.840 --> 00:25:55.360
<v Speaker 1>Super cool. K.

00:25:56.960 --> 00:26:00.240
<v Speaker 1>And next, I think we will try to

00:26:00.240 --> 00:26:01.360
<v Speaker 1>get configuration

00:26:01.360 --> 00:26:02.799
<v Speaker 1>for the from users.

00:26:02.960 --> 00:26:05.200
<v Speaker 1>Now you can also copy this

00:26:05.680 --> 00:26:07.040
<v Speaker 1>file, the whole thing,

00:26:07.705 --> 00:26:10.825
<v Speaker 1>and just it will produce a configuration file

00:26:11.305 --> 00:26:12.185
<v Speaker 1>into,

00:26:13.305 --> 00:26:15.865
<v Speaker 1>yeah, Prometheus e one, replica zero config, and

00:26:15.865 --> 00:26:17.225
<v Speaker 1>three of those, essentially.

00:26:17.705 --> 00:26:18.905
<v Speaker 1>The interesting

00:26:19.225 --> 00:26:21.625
<v Speaker 1>part of this Prometheus configuration,

00:26:21.865 --> 00:26:22.985
<v Speaker 1>if we look on that,

00:26:23.830 --> 00:26:26.470
<v Speaker 1>is really what it is doing and what

00:26:26.470 --> 00:26:28.549
<v Speaker 1>external labels it has. So you can kind

00:26:28.549 --> 00:26:30.229
<v Speaker 1>of talk for that a bit here.

00:26:31.190 --> 00:26:33.590
<v Speaker 1>Yeah. Perfect. So this is, like, the basic

00:26:33.590 --> 00:26:34.710
<v Speaker 1>configuration you need to have.

00:26:36.745 --> 00:26:40.504
<v Speaker 1>Global, so the global per all scrape configurations,

00:26:42.505 --> 00:26:45.065
<v Speaker 1>you need interval. We just make it faster,

00:26:45.065 --> 00:26:46.905
<v Speaker 1>five seconds, so it collects

00:26:46.905 --> 00:26:48.265
<v Speaker 1>the data, you know, faster.

00:26:49.170 --> 00:26:49.810
<v Speaker 1>And

00:26:50.210 --> 00:26:52.290
<v Speaker 1>we need external labels. And this is very

00:26:52.370 --> 00:26:54.690
<v Speaker 1>important point because Prometheus

00:26:55.490 --> 00:26:57.490
<v Speaker 1>have this as an optional thing. You can

00:26:57.490 --> 00:26:59.250
<v Speaker 1>just mark Prometheus

00:26:59.650 --> 00:27:00.930
<v Speaker 1>as

00:27:01.275 --> 00:27:02.155
<v Speaker 1>identify

00:27:02.155 --> 00:27:05.435
<v Speaker 1>Prometheus as something, so using external labels. So

00:27:05.435 --> 00:27:07.275
<v Speaker 1>whenever you query this Prometheus

00:27:07.515 --> 00:27:11.035
<v Speaker 1>from outside, like federation or remote treat or

00:27:11.035 --> 00:27:11.755
<v Speaker 1>something,

00:27:11.995 --> 00:27:13.435
<v Speaker 1>those labels will be attached.

00:27:14.330 --> 00:27:16.490
<v Speaker 1>But to in Thanos, we use it extensively

00:27:16.490 --> 00:27:19.929
<v Speaker 1>to either identify permit uses among, you know,

00:27:20.090 --> 00:27:22.650
<v Speaker 1>know, humongous amount of users you you you're

00:27:22.650 --> 00:27:23.929
<v Speaker 1>you're running. So

00:27:24.810 --> 00:27:25.530
<v Speaker 1>it's really

00:27:26.295 --> 00:27:29.975
<v Speaker 1>recommended to specify, you know, the cluster,

00:27:29.975 --> 00:27:31.975
<v Speaker 1>maybe replica, maybe zone,

00:27:32.375 --> 00:27:35.015
<v Speaker 1>and tenant because we kind of you know,

00:27:35.415 --> 00:27:36.295
<v Speaker 1>we have

00:27:36.775 --> 00:27:39.095
<v Speaker 1>tenancy model based on those labels as well.

00:27:39.095 --> 00:27:40.880
<v Speaker 1>And what is Prometheus what this Prometheus is

00:27:40.880 --> 00:27:42.799
<v Speaker 1>doing is essentially scraping itself

00:27:43.360 --> 00:27:45.760
<v Speaker 1>because it's running as 93, so it's scraping

00:27:45.760 --> 00:27:47.920
<v Speaker 1>itself. So, yeah, that's that's the whole thing

00:27:47.920 --> 00:27:49.600
<v Speaker 1>that Prometheus is doing right now.

00:27:50.800 --> 00:27:52.000
<v Speaker 0>Okay. Awesome.

00:27:52.945 --> 00:27:55.425
<v Speaker 0>I really like the Thanos bench tool. I

00:27:55.425 --> 00:27:57.505
<v Speaker 0>can see loads of different applications for that.

00:27:57.505 --> 00:27:59.745
<v Speaker 1>Yeah. You can actually yeah. It's not Thanos

00:27:59.745 --> 00:28:02.705
<v Speaker 1>only. Generate only stuff for prem users. Yeah.

00:28:02.865 --> 00:28:05.825
<v Speaker 1>Because how else you can test down sampling,

00:28:05.825 --> 00:28:08.420
<v Speaker 1>right, or stuff that you write for long

00:28:08.420 --> 00:28:09.940
<v Speaker 1>term duration metrics. Right?

00:28:10.660 --> 00:28:12.500
<v Speaker 0>Cool. It was it's a it's a challenge.

00:28:12.500 --> 00:28:14.420
<v Speaker 0>Like, I used to work for influx data,

00:28:14.420 --> 00:28:16.420
<v Speaker 0>the the company behind influx d b, and

00:28:16.420 --> 00:28:19.060
<v Speaker 0>trying to give people datasets where they can

00:28:19.060 --> 00:28:21.700
<v Speaker 0>walk through these contrived situations for down sampling,

00:28:21.700 --> 00:28:24.155
<v Speaker 0>alerting, and notifications are normally detection is is

00:28:24.155 --> 00:28:26.874
<v Speaker 0>actually a really difficult problem and Thanos bench,

00:28:26.875 --> 00:28:27.995
<v Speaker 0>you know, I wish I had known that

00:28:27.995 --> 00:28:28.715
<v Speaker 0>existed

00:28:29.195 --> 00:28:32.315
<v Speaker 0>a while ago. So we've got our data

00:28:32.315 --> 00:28:34.475
<v Speaker 0>written for three different Prometheus,

00:28:34.475 --> 00:28:37.035
<v Speaker 0>Promethe I. We've got our configs

00:28:37.230 --> 00:28:40.030
<v Speaker 0>and now we are going to expose some

00:28:40.030 --> 00:28:41.149
<v Speaker 0>port configurations

00:28:41.150 --> 00:28:42.509
<v Speaker 0>for each of these.

00:28:43.790 --> 00:28:45.550
<v Speaker 0>Well, actually, I like that you've got Promethe

00:28:45.550 --> 00:28:48.190
<v Speaker 0>c's, Promethe I, and Promethe

00:28:48.190 --> 00:28:50.670
<v Speaker 0>I. You can choose you can choose how

00:28:50.670 --> 00:28:53.575
<v Speaker 1>you call it. Actually, it it was trimmed.

00:28:53.575 --> 00:28:55.895
<v Speaker 1>There is prometeous instances as well. You can

00:28:55.895 --> 00:28:57.575
<v Speaker 1>free there are free ways how you can

00:28:57.575 --> 00:28:59.654
<v Speaker 1>call multiple prometeouses. Yeah.

00:29:00.615 --> 00:29:01.815
<v Speaker 0>Okay.

00:29:01.815 --> 00:29:03.494
<v Speaker 1>Okay. So we have some variable

00:29:03.815 --> 00:29:07.255
<v Speaker 1>environment variables for ports. You run locally, so

00:29:06.870 --> 00:29:09.509
<v Speaker 1>please copy the the second one. It's essentially

00:29:10.470 --> 00:29:11.669
<v Speaker 1>some some

00:29:11.830 --> 00:29:14.950
<v Speaker 1>variables useful for UIs

00:29:16.150 --> 00:29:17.350
<v Speaker 1>just to not

00:29:17.830 --> 00:29:19.430
<v Speaker 1>copy them around always. Yeah.

00:29:23.985 --> 00:29:26.225
<v Speaker 0>Yeah. My computer was

00:29:26.785 --> 00:29:27.424
<v Speaker 0>playing.

00:29:30.625 --> 00:29:31.585
<v Speaker 0>There we go.

00:29:32.304 --> 00:29:34.304
<v Speaker 0>My old tabs are broken.

00:29:34.465 --> 00:29:35.505
<v Speaker 0>Let's see if it crashed.

00:29:37.110 --> 00:29:38.309
<v Speaker 0>There we go. Right.

00:29:40.470 --> 00:29:43.750
<v Speaker 0>Alright. So we have exposed those previous addresses.

00:29:43.750 --> 00:29:45.830
<v Speaker 0>And now I'm assuming, yeah, we're gonna run

00:29:45.830 --> 00:29:48.710
<v Speaker 0>the Prometheus. We just show a help if

00:29:48.710 --> 00:29:51.135
<v Speaker 1>you want, or we can just go through

00:29:51.135 --> 00:29:52.575
<v Speaker 1>and and run Prometheus.

00:29:52.575 --> 00:29:53.215
<v Speaker 1>I think

00:29:53.775 --> 00:29:55.855
<v Speaker 1>it's not Prometheus deep dive where you can

00:29:55.855 --> 00:29:57.055
<v Speaker 1>do that as well.

00:29:58.655 --> 00:29:59.615
<v Speaker 1>Up to you.

00:29:59.935 --> 00:30:01.535
<v Speaker 0>No. You you you choose. You're the one

00:30:01.535 --> 00:30:03.730
<v Speaker 0>guiding me through this. What makes more sense?

00:30:03.730 --> 00:30:04.690
<v Speaker 0>What do you what do you want to

00:30:04.690 --> 00:30:07.250
<v Speaker 0>do? So let's let's copy the docker run

00:30:07.250 --> 00:30:09.410
<v Speaker 1>with help so we can see what's going

00:30:09.410 --> 00:30:11.490
<v Speaker 1>on. This is, like, official image

00:30:12.450 --> 00:30:14.929
<v Speaker 1>version two twenty. If you do it, you

00:30:14.929 --> 00:30:17.570
<v Speaker 1>should see some help and actually pull it.

00:30:17.570 --> 00:30:18.130
<v Speaker 1>It will

00:30:18.585 --> 00:30:19.864
<v Speaker 1>probably take some time.

00:30:20.745 --> 00:30:23.624
<v Speaker 1>And this is how you run permit uses.

00:30:23.705 --> 00:30:25.544
<v Speaker 1>There are lots of configuration

00:30:25.945 --> 00:30:26.825
<v Speaker 1>flags,

00:30:26.825 --> 00:30:29.065
<v Speaker 1>and tunnels follow the same path. You mostly

00:30:29.065 --> 00:30:32.745
<v Speaker 1>have flags to configure stuff. So okay. Let's

00:30:32.745 --> 00:30:32.904
<v Speaker 1>not

00:30:33.560 --> 00:30:36.440
<v Speaker 1>dive into this too much. We can dive

00:30:36.440 --> 00:30:38.360
<v Speaker 1>on on the maybe first from queues that

00:30:38.360 --> 00:30:40.759
<v Speaker 1>we run. So let's run from queues first

00:30:40.840 --> 00:30:42.919
<v Speaker 1>and talk about the flags that we actually

00:30:43.320 --> 00:30:43.960
<v Speaker 1>use.

00:30:44.200 --> 00:30:46.040
<v Speaker 1>So we have three of those. Right? Again,

00:30:46.040 --> 00:30:47.960
<v Speaker 1>you can actually run three of those, and

00:30:47.960 --> 00:30:49.375
<v Speaker 1>then we can talk about flags if you

00:30:49.375 --> 00:30:49.934
<v Speaker 1>want.

00:30:51.535 --> 00:30:53.855
<v Speaker 0>Yeah. Let's get them I'll get them running,

00:30:53.855 --> 00:30:55.534
<v Speaker 0>and then we'll Mhmm.

00:30:57.455 --> 00:30:58.254
<v Speaker 0>One,

00:31:01.535 --> 00:31:01.855
<v Speaker 0>two,

00:31:04.340 --> 00:31:05.060
<v Speaker 0>Three.

00:31:06.420 --> 00:31:09.540
<v Speaker 1>Alright. So let's quickly talk about this configuration.

00:31:09.540 --> 00:31:12.020
<v Speaker 1>Right? So we have for this one, this

00:31:12.020 --> 00:31:13.620
<v Speaker 1>is, like, u s one

00:31:15.060 --> 00:31:16.660
<v Speaker 1>promotuous because

00:31:16.660 --> 00:31:18.580
<v Speaker 1>it gets

00:31:18.055 --> 00:31:20.855
<v Speaker 1>the configuration from from US One replica. We

00:31:20.855 --> 00:31:22.054
<v Speaker 1>need to share those

00:31:22.375 --> 00:31:25.335
<v Speaker 1>file configuration file with from the local machine

00:31:25.335 --> 00:31:27.575
<v Speaker 1>to Docker, the same with the

00:31:28.215 --> 00:31:29.015
<v Speaker 1>data

00:31:29.255 --> 00:31:30.294
<v Speaker 1>directory

00:31:30.615 --> 00:31:32.135
<v Speaker 1>that we generate the data to,

00:31:32.730 --> 00:31:34.970
<v Speaker 1>again, from The US replica zero.

00:31:35.610 --> 00:31:37.049
<v Speaker 1>We name it this

00:31:37.210 --> 00:31:39.370
<v Speaker 1>okay. But the flags are the most interesting.

00:31:39.370 --> 00:31:42.809
<v Speaker 1>So this is really standard kind

00:31:43.130 --> 00:31:45.210
<v Speaker 1>of command, let's say,

00:31:45.530 --> 00:31:46.650
<v Speaker 1>and how you deploy it.

00:31:47.775 --> 00:31:50.815
<v Speaker 1>The tricky part is that the retention time,

00:31:50.815 --> 00:31:53.455
<v Speaker 1>I increase that to, like, thousand days because

00:31:53.455 --> 00:31:55.375
<v Speaker 1>we have one year of data. And by

00:31:55.375 --> 00:31:57.695
<v Speaker 1>default, prem queue starts with two weeks. So

00:31:57.695 --> 00:31:59.775
<v Speaker 1>if I when I started this by default,

00:31:59.775 --> 00:32:01.215
<v Speaker 1>I just seen two weeks because it just

00:32:01.215 --> 00:32:02.415
<v Speaker 1>deleted, you know, immediately.

00:32:03.640 --> 00:32:06.039
<v Speaker 1>And there is this tricky one,

00:32:06.360 --> 00:32:10.039
<v Speaker 1>max blocks duration, mean block duration. This is

00:32:10.600 --> 00:32:11.399
<v Speaker 1>essentially

00:32:11.559 --> 00:32:13.559
<v Speaker 1>disabling local compaction.

00:32:14.120 --> 00:32:16.120
<v Speaker 1>And what it means is that Prometheus is

00:32:16.120 --> 00:32:18.600
<v Speaker 1>compacting those blocks periodically

00:32:19.424 --> 00:32:22.865
<v Speaker 1>to optimize for Prometheus use. However, because I

00:32:22.865 --> 00:32:26.144
<v Speaker 1>arranged that and and generated those blocks as

00:32:26.144 --> 00:32:29.104
<v Speaker 1>as I wanted with whatever yellow durations,

00:32:29.904 --> 00:32:31.904
<v Speaker 1>it will just start compacting for no good

00:32:31.904 --> 00:32:32.225
<v Speaker 1>reason,

00:32:33.419 --> 00:32:35.980
<v Speaker 1>and we just don't want this. But, ideally,

00:32:35.980 --> 00:32:36.220
<v Speaker 1>you can

00:32:37.100 --> 00:32:39.259
<v Speaker 1>if you have prompt queues with such long

00:32:39.260 --> 00:32:41.340
<v Speaker 1>duration like one year, you want to keep

00:32:41.340 --> 00:32:42.299
<v Speaker 1>this option

00:32:42.860 --> 00:32:44.860
<v Speaker 1>like, remove this those flags because you want

00:32:44.860 --> 00:32:48.174
<v Speaker 1>compaction to be enabled and even with Thanos.

00:32:48.174 --> 00:32:50.335
<v Speaker 1>So this is only for demo purposes.

00:32:50.815 --> 00:32:53.535
<v Speaker 1>And really nothing else like those enable life

00:32:53.535 --> 00:32:55.134
<v Speaker 1>cycle admin APIs.

00:32:56.015 --> 00:32:57.215
<v Speaker 1>I think this is

00:32:57.535 --> 00:32:59.455
<v Speaker 1>I don't think this is really needed. It's

00:32:59.455 --> 00:33:01.054
<v Speaker 1>it's really to get

00:33:02.230 --> 00:33:06.390
<v Speaker 1>nice APIs like delete series and snapshot for

00:33:06.390 --> 00:33:07.669
<v Speaker 1>Prometheus. So

00:33:08.230 --> 00:33:10.149
<v Speaker 1>this is it. This is just running Prometheus

00:33:10.149 --> 00:33:12.309
<v Speaker 1>with longer retention rate. Yeah.

00:33:12.710 --> 00:33:14.549
<v Speaker 1>Okay. We can actually play with it. Just

00:33:14.549 --> 00:33:15.350
<v Speaker 1>just just go

00:33:15.909 --> 00:33:17.510
<v Speaker 1>you don't need to click this because it's

00:33:17.510 --> 00:33:19.645
<v Speaker 1>hard, you know, to open in your machine,

00:33:19.645 --> 00:33:21.805
<v Speaker 1>but just go to local host and nine

00:33:21.805 --> 00:33:23.725
<v Speaker 1>zero nine one, which is, like, the first

00:33:23.725 --> 00:33:26.045
<v Speaker 1>sprint use. We can see if we can

00:33:26.045 --> 00:33:27.165
<v Speaker 1>access our data,

00:33:27.725 --> 00:33:28.445
<v Speaker 1>and we don't.

00:33:34.090 --> 00:33:36.809
<v Speaker 0>This is Yeah. There's no ports exposed.

00:33:37.210 --> 00:33:38.169
<v Speaker 1>I think

00:33:38.409 --> 00:33:39.929
<v Speaker 1>because this is the

00:33:40.889 --> 00:33:43.129
<v Speaker 1>we know what's happening because this is

00:33:43.769 --> 00:33:45.289
<v Speaker 1>Mac. Right? Mac OS.

00:33:45.985 --> 00:33:48.465
<v Speaker 0>But there's there's no dash p on the

00:33:48.465 --> 00:33:52.144
<v Speaker 0>docker. That dash dash net equals host, but

00:33:52.225 --> 00:33:54.624
<v Speaker 1>probably on Mac OS that doesn't work.

00:33:55.505 --> 00:33:56.384
<v Speaker 0>Ah.

00:33:57.105 --> 00:33:59.720
<v Speaker 1>That's the problem. Okay. That's fine. We we

00:33:59.960 --> 00:34:01.480
<v Speaker 1>Oh, we we sorry. It's okay. We can

00:34:01.480 --> 00:34:02.999
<v Speaker 0>do docker for Mac.

00:34:03.080 --> 00:34:04.919
<v Speaker 0>I think it tries to resolve that for

00:34:04.919 --> 00:34:06.760
<v Speaker 0>us. That would be nice. There is a

00:34:06.760 --> 00:34:07.320
<v Speaker 0>thing.

00:34:09.079 --> 00:34:11.000
<v Speaker 1>Yeah. Let's either we can do this or

00:34:11.000 --> 00:34:14.074
<v Speaker 1>we can modify with minus piece everywhere.

00:34:14.474 --> 00:34:14.955
<v Speaker 1>Let's

00:34:18.395 --> 00:34:19.114
<v Speaker 0>Yeah.

00:34:19.514 --> 00:34:21.034
<v Speaker 0>I run it with a minus piece, so

00:34:21.034 --> 00:34:22.554
<v Speaker 0>that might be quicker. I can't remember what

00:34:22.554 --> 00:34:24.875
<v Speaker 0>the Docker for Mac name is to resolve

00:34:24.875 --> 00:34:25.675
<v Speaker 0>to the

00:34:26.155 --> 00:34:26.554
<v Speaker 0>let's see.

00:34:27.670 --> 00:34:28.790
<v Speaker 0>Or Mac

00:34:28.790 --> 00:34:30.150
<v Speaker 0>domain Mac.

00:34:39.830 --> 00:34:41.510
<v Speaker 1>About host.docker.internal?

00:34:45.255 --> 00:34:47.335
<v Speaker 0>I'm not familiar with that flag.

00:34:47.574 --> 00:34:49.735
<v Speaker 1>That's no. No. Sorry. That you have, like,

00:34:49.735 --> 00:34:50.614
<v Speaker 1>docker.forward

00:34:50.614 --> 00:34:53.815
<v Speaker 1>for Mac. It's like host.docker.internal,

00:34:53.815 --> 00:34:55.815
<v Speaker 1>I can read, but, you know, I'm not

00:34:55.815 --> 00:34:56.375
<v Speaker 1>a Mac user.

00:34:58.880 --> 00:35:01.440
<v Speaker 1>Neither am I. I'm a Justin Painter.

00:35:01.680 --> 00:35:03.280
<v Speaker 0>Have Most. Sorry.

00:35:04.240 --> 00:35:06.400
<v Speaker 1>You I I I have that in the

00:35:06.400 --> 00:35:07.280
<v Speaker 1>chat as well.

00:35:08.160 --> 00:35:08.880
<v Speaker 0>Oh.

00:35:09.200 --> 00:35:11.279
<v Speaker 1>Let's try this out. A host. Sorry. Yeah.

00:35:11.279 --> 00:35:11.759
<v Speaker 0>Alright. Okay.

00:35:13.395 --> 00:35:15.235
<v Speaker 0>Host docker

00:35:15.315 --> 00:35:16.275
<v Speaker 0>internal

00:35:16.275 --> 00:35:17.715
<v Speaker 0>9091.

00:35:18.115 --> 00:35:19.155
<v Speaker 0>Okay.

00:35:19.155 --> 00:35:21.075
<v Speaker 0>So let's pull up code. I'm just gonna

00:35:21.075 --> 00:35:22.035
<v Speaker 0>do this.

00:35:23.315 --> 00:35:25.075
<v Speaker 0>And this is the 01,

00:35:25.075 --> 00:35:26.355
<v Speaker 0>so we'll do

00:35:27.500 --> 00:35:31.340
<v Speaker 0>90919091.

00:35:34.540 --> 00:35:35.180
<v Speaker 0>Copy.

00:35:39.615 --> 00:35:40.415
<v Speaker 0>909.

00:35:40.415 --> 00:35:43.855
<v Speaker 0>Was it just 909190929093?

00:35:43.855 --> 00:35:45.215
<v Speaker 0>Yeah. Yeah. Yeah.

00:35:46.255 --> 00:35:49.775
<v Speaker 0>Replica one. Replica one. What about

00:35:52.415 --> 00:35:54.095
<v Speaker 0>you've got 1111.

00:35:55.240 --> 00:35:57.080
<v Speaker 0>And then I'll just copy the US One

00:35:57.080 --> 00:35:58.840
<v Speaker 0>so that I only need to change the

00:35:58.840 --> 00:36:01.800
<v Speaker 0>network. Let's try gateway one more time. That's

00:36:01.800 --> 00:36:03.640
<v Speaker 1>the last thing I found on Internet. Gateway

00:36:03.640 --> 00:36:05.240
<v Speaker 1>to docker.internal

00:36:06.920 --> 00:36:10.040
<v Speaker 1>on the web. And then because this will

00:36:10.200 --> 00:36:11.160
<v Speaker 1>kind of

00:36:13.435 --> 00:36:15.755
<v Speaker 1>help us a lot. No. Okay. You can

00:36:15.755 --> 00:36:17.675
<v Speaker 1>arm. Okay. Let's put minus piece.

00:36:18.795 --> 00:36:21.355
<v Speaker 0>Well, this it can't be magic. Right? Docker

00:36:21.355 --> 00:36:23.435
<v Speaker 0>must write something to the host's file.

00:36:25.440 --> 00:36:26.080
<v Speaker 1>Nope.

00:36:26.880 --> 00:36:29.359
<v Speaker 1>Docker binned is the Docker internal. Yeah. Kubernetes

00:36:29.359 --> 00:36:30.800
<v Speaker 0>dot Docker. But

00:36:31.200 --> 00:36:32.720
<v Speaker 1>this is weird. Yeah.

00:36:33.040 --> 00:36:34.480
<v Speaker 1>Maybe it's by cube.

00:36:37.440 --> 00:36:38.800
<v Speaker 0>Yeah. There's nothing else.

00:36:42.265 --> 00:36:44.025
<v Speaker 1>Chat, please help us.

00:36:45.785 --> 00:36:47.225
<v Speaker 1>That doesn't work like this.

00:36:47.705 --> 00:36:48.265
<v Speaker 1>I

00:36:50.265 --> 00:36:51.865
<v Speaker 0>should know what that is. Maybe it's in

00:36:51.865 --> 00:36:53.790
<v Speaker 0>the DocuSign. We'll we'll just spend a minute

00:36:53.790 --> 00:36:55.230
<v Speaker 0>on this and then I'll rerun the containers

00:36:55.230 --> 00:36:56.750
<v Speaker 0>for that. Yeah. Exactly.

00:36:57.870 --> 00:36:58.590
<v Speaker 0>So

00:36:59.790 --> 00:37:00.590
<v Speaker 0>settings.

00:37:02.990 --> 00:37:05.070
<v Speaker 0>Leave it down from here. Network.

00:37:06.855 --> 00:37:08.375
<v Speaker 0>Subnet.

00:37:16.375 --> 00:37:19.095
<v Speaker 0>Docker for Mac DNS name.

00:37:19.880 --> 00:37:21.560
<v Speaker 0>Yeah. Let's just say goodbye to dot dot

00:37:21.560 --> 00:37:22.760
<v Speaker 0>go and use Google.

00:37:28.200 --> 00:37:30.600
<v Speaker 0>Host dot docker internal, we tried.

00:37:30.760 --> 00:37:31.960
<v Speaker 0>Gateway, we tried.

00:37:34.225 --> 00:37:36.145
<v Speaker 0>And none of those are working. Alright. Let's

00:37:36.145 --> 00:37:37.985
<v Speaker 0>just rerun the containers.

00:37:38.625 --> 00:37:41.185
<v Speaker 0>Did I copy the US One? I did.

00:37:41.345 --> 00:37:43.425
<v Speaker 0>So we take off net host.

00:37:44.625 --> 00:37:46.385
<v Speaker 0>P9093.

00:37:49.000 --> 00:37:49.800
<v Speaker 0>Alright.

00:37:55.560 --> 00:37:58.760
<v Speaker 1>There is, like, reverse panel thingy that we

00:37:58.760 --> 00:37:59.720
<v Speaker 1>can start.

00:38:02.040 --> 00:38:03.240
<v Speaker 1>Actually, that might work.

00:38:05.125 --> 00:38:06.245
<v Speaker 0>Do you want me to go with the

00:38:06.245 --> 00:38:08.485
<v Speaker 0>tunnel tunnel approach before I blow these away?

00:38:08.805 --> 00:38:11.045
<v Speaker 1>No. No. No. No. Let's start with minus

00:38:11.045 --> 00:38:12.005
<v Speaker 1>p right now.

00:38:12.725 --> 00:38:15.445
<v Speaker 0>Alright. Okay. So let's paste all that in.

00:38:15.445 --> 00:38:17.685
<v Speaker 1>Because the tunnel has before all parts. Okay.

00:38:18.410 --> 00:38:20.170
<v Speaker 0>Alright. So we should now have those all

00:38:20.170 --> 00:38:22.730
<v Speaker 0>exposed on our local machine.

00:38:23.930 --> 00:38:26.970
<v Speaker 0>Alright. So local host name o name one.

00:38:27.050 --> 00:38:27.930
<v Speaker 0>There we go.

00:38:28.730 --> 00:38:32.490
<v Speaker 1>Cool. Alright. Let's check any of the metric.

00:38:32.490 --> 00:38:34.090
<v Speaker 1>Insert metric cursor

00:38:34.305 --> 00:38:35.745
<v Speaker 1>cursor, it will

00:38:36.305 --> 00:38:38.545
<v Speaker 1>there is, like, a yeah. Or I can

00:38:38.545 --> 00:38:41.105
<v Speaker 1>start typing. Yeah. So we have, like, five

00:38:41.105 --> 00:38:42.865
<v Speaker 1>series, as I mentioned. And then if you

00:38:42.865 --> 00:38:43.905
<v Speaker 1>go to graph,

00:38:45.905 --> 00:38:48.385
<v Speaker 1>tap here, and just go one year instead

00:38:48.385 --> 00:38:50.145
<v Speaker 1>of one hour because why not?

00:38:51.800 --> 00:38:52.520
<v Speaker 1>Usually,

00:38:53.960 --> 00:38:56.200
<v Speaker 1>this is impossible, but we generated stuff and

00:38:56.200 --> 00:38:58.760
<v Speaker 1>not many series, so it's totally fine. So

00:38:58.760 --> 00:38:59.160
<v Speaker 1>we can

00:38:59.800 --> 00:39:00.680
<v Speaker 1>we have

00:39:01.080 --> 00:39:03.815
<v Speaker 1>five series, yeah, for one year, and this

00:39:03.815 --> 00:39:04.455
<v Speaker 1>is

00:39:04.775 --> 00:39:06.455
<v Speaker 1>what we can do in for

00:39:06.775 --> 00:39:08.615
<v Speaker 1>now. So let's try to

00:39:09.255 --> 00:39:12.214
<v Speaker 1>kind of solve the problem of kind of

00:39:12.214 --> 00:39:15.255
<v Speaker 1>maintaining those premises on scale. So we want

00:39:15.255 --> 00:39:17.335
<v Speaker 1>to have a single query endpoint

00:39:17.450 --> 00:39:20.010
<v Speaker 1>that will span over those permit users and

00:39:20.010 --> 00:39:22.330
<v Speaker 1>get all those c five series, but from

00:39:22.330 --> 00:39:23.210
<v Speaker 1>each of those.

00:39:23.930 --> 00:39:26.410
<v Speaker 1>And in the same time, we allow us

00:39:26.410 --> 00:39:27.530
<v Speaker 1>to de duplicate

00:39:27.690 --> 00:39:31.325
<v Speaker 1>this replicated one because as you remember, 9091

00:39:31.325 --> 00:39:33.085
<v Speaker 1>and 9092

00:39:33.165 --> 00:39:34.285
<v Speaker 1>are replicas.

00:39:34.285 --> 00:39:36.204
<v Speaker 1>So if if you go to 9092,

00:39:36.204 --> 00:39:38.045
<v Speaker 1>it will have exactly the same data.

00:39:38.605 --> 00:39:40.204
<v Speaker 1>It will look exactly the same. So you

00:39:40.204 --> 00:39:42.460
<v Speaker 1>can actually, yeah, just do this. Yeah. It

00:39:42.460 --> 00:39:44.220
<v Speaker 1>will be exactly the same if you could

00:39:44.220 --> 00:39:47.260
<v Speaker 1>kind of map because this simulates the situation

00:39:47.260 --> 00:39:50.300
<v Speaker 1>where those two Prometh users are scraping

00:39:52.060 --> 00:39:53.900
<v Speaker 1>scraping the same applications. Right?

00:39:55.085 --> 00:39:57.325
<v Speaker 1>Cool. Let's go get that. To our tutorial.

00:40:00.605 --> 00:40:02.204
<v Speaker 0>Alright. So now Yep.

00:40:03.244 --> 00:40:05.484
<v Speaker 1>Now kind of this is the time when

00:40:05.484 --> 00:40:08.444
<v Speaker 1>we when we feel this kind of

00:40:10.370 --> 00:40:11.730
<v Speaker 1>horizontal scalability

00:40:11.730 --> 00:40:14.770
<v Speaker 1>and adding different services around microservice,

00:40:14.770 --> 00:40:17.650
<v Speaker 1>really, architecture. So we start with sidecar to

00:40:17.890 --> 00:40:21.090
<v Speaker 1>expose our, you know, powerful gRPC store API,

00:40:21.090 --> 00:40:23.330
<v Speaker 1>as I mentioned. So let's add the sidecar

00:40:23.330 --> 00:40:25.685
<v Speaker 1>to each of those from users to expose

00:40:25.685 --> 00:40:27.685
<v Speaker 1>this gRPC endpoint really.

00:40:28.165 --> 00:40:29.925
<v Speaker 1>And, actually, before that, maybe let's go through

00:40:29.925 --> 00:40:31.925
<v Speaker 1>this help, dash dash help, and we can

00:40:31.925 --> 00:40:33.925
<v Speaker 1>spend a little bit more time here because

00:40:34.325 --> 00:40:37.125
<v Speaker 1>Thanos was always, from the very beginning, just

00:40:37.125 --> 00:40:39.765
<v Speaker 1>single binary. So we have all components, all

00:40:39.765 --> 00:40:41.125
<v Speaker 1>microservices

00:40:40.860 --> 00:40:41.500
<v Speaker 1>here.

00:40:41.740 --> 00:40:43.340
<v Speaker 1>So you can see you have,

00:40:43.820 --> 00:40:45.500
<v Speaker 1>you know, sidecar,

00:40:45.820 --> 00:40:47.660
<v Speaker 1>store gateway, like store,

00:40:47.820 --> 00:40:48.620
<v Speaker 1>courier,

00:40:48.620 --> 00:40:49.420
<v Speaker 1>ruler,

00:40:49.420 --> 00:40:50.460
<v Speaker 1>compactor,

00:40:51.500 --> 00:40:53.765
<v Speaker 1>kind of many, many tools. Where

00:40:53.925 --> 00:40:57.605
<v Speaker 1>extends extensively adding more tools that you can

00:40:57.605 --> 00:41:00.165
<v Speaker 1>kind of maintain in your data in easy

00:41:00.165 --> 00:41:00.645
<v Speaker 1>way.

00:41:01.285 --> 00:41:03.045
<v Speaker 1>And then at the end, we kind of

00:41:03.045 --> 00:41:05.365
<v Speaker 1>added kind of new components. If you scroll

00:41:05.365 --> 00:41:06.645
<v Speaker 1>down, receiver

00:41:07.250 --> 00:41:09.650
<v Speaker 1>and query front end for caching. It's not

00:41:09.650 --> 00:41:11.490
<v Speaker 1>even properly described even

00:41:11.730 --> 00:41:14.609
<v Speaker 1>yet. Alright. But this is how you run

00:41:14.609 --> 00:41:15.490
<v Speaker 1>all comments,

00:41:15.890 --> 00:41:18.210
<v Speaker 1>all service by just describing a sub comment.

00:41:18.210 --> 00:41:18.690
<v Speaker 1>Right?

00:41:20.210 --> 00:41:21.569
<v Speaker 0>Okay. Nice.

00:41:21.905 --> 00:41:23.425
<v Speaker 0>So single binary,

00:41:23.505 --> 00:41:25.825
<v Speaker 0>but each of those can be run-in

00:41:25.825 --> 00:41:26.625
<v Speaker 0>isolation.

00:41:26.785 --> 00:41:27.905
<v Speaker 1>So Correct. Okay.

00:41:29.025 --> 00:41:31.985
<v Speaker 1>So right now, we will deploy sidecars

00:41:32.145 --> 00:41:33.105
<v Speaker 1>to each of those.

00:41:34.240 --> 00:41:36.080
<v Speaker 1>And you need to probably copy and make

00:41:36.080 --> 00:41:36.640
<v Speaker 1>sure

00:41:37.040 --> 00:41:38.800
<v Speaker 1>we add m minus p.

00:41:40.160 --> 00:41:41.600
<v Speaker 0>Yep. So

00:41:41.760 --> 00:41:44.480
<v Speaker 0>dash p and this is Well, we we

00:41:44.480 --> 00:41:46.880
<v Speaker 1>want gRPC we want gRPC endpoint, to be

00:41:46.880 --> 00:41:48.320
<v Speaker 1>honest. So

00:41:49.625 --> 00:41:51.625
<v Speaker 1>just just one port is fine.

00:41:52.425 --> 00:41:54.985
<v Speaker 1>Nine one nine one nine. So

00:41:55.945 --> 00:41:56.665
<v Speaker 1>correct.

00:41:56.825 --> 00:41:58.665
<v Speaker 0>So we don't need the HTTP port at

00:41:58.665 --> 00:41:59.145
<v Speaker 0>all?

00:41:59.865 --> 00:42:01.869
<v Speaker 0>I I I mean, exposed. Like, so what

00:42:02.030 --> 00:42:04.030
<v Speaker 0>what's what's the difference between the gRPC? What

00:42:04.030 --> 00:42:06.110
<v Speaker 0>are the responsibilities for those two ports?

00:42:06.910 --> 00:42:07.950
<v Speaker 1>Yep. So

00:42:08.590 --> 00:42:12.109
<v Speaker 1>first, HTTP is responsible for any UIs you

00:42:12.109 --> 00:42:15.310
<v Speaker 1>have because, unfortunately, our browser doesn't speak gRPC

00:42:15.310 --> 00:42:15.710
<v Speaker 1>yet.

00:42:16.224 --> 00:42:17.745
<v Speaker 1>However,

00:42:18.545 --> 00:42:21.345
<v Speaker 1>it is useful also for debugging endpoints.

00:42:21.425 --> 00:42:23.265
<v Speaker 1>Right? So, like, metrics,

00:42:23.425 --> 00:42:25.425
<v Speaker 1>traces, debug, whatever.

00:42:26.145 --> 00:42:28.945
<v Speaker 1>The gRPC endpoint is for our store APIs

00:42:29.280 --> 00:42:29.920
<v Speaker 1>And

00:42:30.800 --> 00:42:32.800
<v Speaker 1>and, actually, not only store APIs. We have

00:42:32.800 --> 00:42:35.760
<v Speaker 1>other gRPC APIs that maybe other components can

00:42:35.760 --> 00:42:36.480
<v Speaker 1>can

00:42:36.960 --> 00:42:37.840
<v Speaker 1>expose.

00:42:38.160 --> 00:42:40.160
<v Speaker 1>And because we want to kind of communicate

00:42:40.160 --> 00:42:42.160
<v Speaker 1>for this gRPC, we need kind of two

00:42:42.160 --> 00:42:42.480
<v Speaker 1>ports.

00:42:44.865 --> 00:42:45.665
<v Speaker 1>And

00:42:47.185 --> 00:42:48.865
<v Speaker 1>Let me just grab this last one.

00:42:49.585 --> 00:42:51.505
<v Speaker 1>Okay. I can see one kind of issue

00:42:51.505 --> 00:42:52.545
<v Speaker 1>we need to solve.

00:42:52.865 --> 00:42:55.665
<v Speaker 1>This sidebar has to speak through the HTP

00:42:55.890 --> 00:42:57.330
<v Speaker 1>with the Prompteus

00:42:59.170 --> 00:43:01.730
<v Speaker 1>sidecar with the Prompteus. You know? So you

00:43:01.730 --> 00:43:04.130
<v Speaker 1>can see we specify Prompteus URL.

00:43:04.930 --> 00:43:07.010
<v Speaker 1>So we need to find a way to

00:43:07.970 --> 00:43:10.049
<v Speaker 1>actually get that routable to Prompteus.

00:43:10.944 --> 00:43:14.545
<v Speaker 0>Yeah. Okay. So we can do an alias.

00:43:16.065 --> 00:43:17.905
<v Speaker 1>It's actually okay. You need to do this,

00:43:18.065 --> 00:43:19.265
<v Speaker 1>above, I guess.

00:43:19.665 --> 00:43:21.424
<v Speaker 1>Not be with them because slide power is

00:43:21.424 --> 00:43:22.865
<v Speaker 1>a sub command already. Yeah?

00:43:23.265 --> 00:43:23.825
<v Speaker 1>Yeah. Here.

00:43:24.600 --> 00:43:26.440
<v Speaker 0>Alright. So what we need this one has

00:43:26.440 --> 00:43:27.480
<v Speaker 0>to speak to

00:43:29.240 --> 00:43:30.680
<v Speaker 0>this container here.

00:43:31.560 --> 00:43:32.360
<v Speaker 1>Correct.

00:43:33.880 --> 00:43:36.520
<v Speaker 0>And we'll call it just prom, and then

00:43:36.520 --> 00:43:38.440
<v Speaker 0>that just means we can use prom here.

00:43:38.895 --> 00:43:41.135
<v Speaker 1>No. No. No. Not here. This is exposing.

00:43:42.175 --> 00:43:43.695
<v Speaker 1>This is exposed,

00:43:43.695 --> 00:43:45.615
<v Speaker 1>so let's expose properly. And then from this

00:43:45.935 --> 00:43:46.415
<v Speaker 1>yeah.

00:43:46.895 --> 00:43:48.335
<v Speaker 1>What? Super nice.

00:43:49.615 --> 00:43:52.575
<v Speaker 0>Alright. And then we need this container ID

00:43:53.010 --> 00:43:54.450
<v Speaker 0>for this one.

00:43:57.010 --> 00:43:57.730
<v Speaker 0>Prom.

00:44:00.050 --> 00:44:01.570
<v Speaker 0>I like to talk to myself when I

00:44:01.570 --> 00:44:03.490
<v Speaker 0>type. It keeps me right. That's good. That's

00:44:03.490 --> 00:44:03.970
<v Speaker 1>good.

00:44:05.330 --> 00:44:06.770
<v Speaker 0>And finally,

00:44:06.770 --> 00:44:08.050
<v Speaker 0>we'll use this one.

00:44:08.290 --> 00:44:08.690
<v Speaker 0>Oh.

00:44:09.414 --> 00:44:11.175
<v Speaker 0>Well, that was that one. Okay.

00:44:12.535 --> 00:44:14.375
<v Speaker 0>Let me make sure it didn't break the

00:44:14.375 --> 00:44:15.175
<v Speaker 0>last one.

00:44:17.174 --> 00:44:20.214
<v Speaker 0>Yeah. I skipped one. Okay. Cool. Mhmm. Mhmm.

00:44:20.214 --> 00:44:20.615
<v Speaker 0>Prom.

00:44:21.950 --> 00:44:23.710
<v Speaker 1>But yeah. And we need to replace prom

00:44:23.710 --> 00:44:24.270
<v Speaker 1>here.

00:44:24.750 --> 00:44:25.869
<v Speaker 0>Alright. So

00:44:26.109 --> 00:44:27.790
<v Speaker 0>done, done, and

00:44:29.069 --> 00:44:32.750
<v Speaker 0>done. Let's see what happens. Let's

00:44:32.750 --> 00:44:35.150
<v Speaker 1>see. Double check. Yes. Looks looks fine.

00:44:39.955 --> 00:44:41.875
<v Speaker 0>It's not alias. Let me

00:44:43.155 --> 00:44:45.555
<v Speaker 0>link, isn't it? It's link, not alias.

00:44:46.435 --> 00:44:46.835
<v Speaker 0>Link.

00:44:50.760 --> 00:44:51.560
<v Speaker 0>Link.

00:44:59.080 --> 00:44:59.960
<v Speaker 0>Take two.

00:45:00.440 --> 00:45:01.560
<v Speaker 0>There we go.

00:45:02.760 --> 00:45:04.760
<v Speaker 0>I'm assuming if they did not exit,

00:45:04.840 --> 00:45:05.800
<v Speaker 0>that's a good sign.

00:45:07.455 --> 00:45:09.455
<v Speaker 1>No. I mean, they will exit in the

00:45:09.455 --> 00:45:11.455
<v Speaker 1>background. So we will never know until you,

00:45:11.455 --> 00:45:13.295
<v Speaker 1>yeah, talk about us. Do you want me

00:45:13.295 --> 00:45:14.495
<v Speaker 0>to put a logs on one of them,

00:45:14.495 --> 00:45:15.855
<v Speaker 0>or are we are we No. I mean

00:45:15.935 --> 00:45:16.655
<v Speaker 0>confident?

00:45:16.975 --> 00:45:19.055
<v Speaker 1>No. I mean, it should be I mean,

00:45:19.055 --> 00:45:20.895
<v Speaker 1>we will see on the further step. Right?

00:45:22.630 --> 00:45:24.630
<v Speaker 1>Then we will start debugging. So the last

00:45:24.630 --> 00:45:27.590
<v Speaker 1>point is to have our query engine to

00:45:27.590 --> 00:45:29.510
<v Speaker 1>be put in a separate microservice.

00:45:29.510 --> 00:45:31.430
<v Speaker 1>So this is kind of a querier,

00:45:31.910 --> 00:45:33.190
<v Speaker 1>so a query subcomment.

00:45:37.244 --> 00:45:39.565
<v Speaker 1>Yeah. And with the exports. And

00:45:40.204 --> 00:45:42.924
<v Speaker 1>so sidecar configuration is pretty pretty basic. I

00:45:42.924 --> 00:45:44.525
<v Speaker 1>think we didn't touch on that yet, but

00:45:44.525 --> 00:45:47.244
<v Speaker 1>it's really it is actually capable of reloading

00:45:47.244 --> 00:45:48.285
<v Speaker 1>configuration

00:45:49.005 --> 00:45:52.320
<v Speaker 1>from use of the of from use configuration

00:45:52.559 --> 00:45:53.680
<v Speaker 1>and evaluating

00:45:53.680 --> 00:45:56.319
<v Speaker 1>the environment variables as well into this configuration.

00:45:56.319 --> 00:45:57.920
<v Speaker 1>That's super useful in Kubernetes.

00:45:58.960 --> 00:46:01.680
<v Speaker 1>And then and then you can even compress

00:46:02.319 --> 00:46:03.520
<v Speaker 1>using gzip

00:46:03.520 --> 00:46:06.880
<v Speaker 1>your configuration of from to use. Sometimes it's

00:46:05.895 --> 00:46:07.255
<v Speaker 1>really, important,

00:46:07.335 --> 00:46:09.815
<v Speaker 1>especially if you want to use Prometheus operator.

00:46:10.935 --> 00:46:13.895
<v Speaker 1>And this, you know, uncompress evaluate environment variables

00:46:13.895 --> 00:46:16.935
<v Speaker 1>and poke Prometheus to reload configuration. So this

00:46:16.935 --> 00:46:18.215
<v Speaker 1>kind of nice,

00:46:18.455 --> 00:46:20.215
<v Speaker 1>small, tiny feature of sidecar as well.

00:46:21.050 --> 00:46:21.690
<v Speaker 1>And

00:46:22.730 --> 00:46:25.530
<v Speaker 1>for courier, we need to expose

00:46:25.530 --> 00:46:28.010
<v Speaker 1>to a p to two ports. Yep. And

00:46:28.010 --> 00:46:29.450
<v Speaker 1>we are exposed properly,

00:46:30.010 --> 00:46:31.930
<v Speaker 1>and we need to leak to to sidecars.

00:46:31.930 --> 00:46:32.650
<v Speaker 1>Yes. Correct.

00:46:34.555 --> 00:46:35.275
<v Speaker 0>And

00:46:35.995 --> 00:46:38.235
<v Speaker 0>So this got linked to the sidecars,

00:46:38.235 --> 00:46:41.035
<v Speaker 0>not to the Promethe I. Right? Sidecars. Correct.

00:46:41.035 --> 00:46:43.915
<v Speaker 1>To the gRPC of sidecars. Yeah. So this

00:46:43.915 --> 00:46:44.555
<v Speaker 0>is

00:46:45.435 --> 00:46:46.635
<v Speaker 0>prompt zero zero.

00:46:51.740 --> 00:46:54.700
<v Speaker 0>We need prom zero one and then prom

00:46:54.700 --> 00:46:55.660
<v Speaker 0>u s.

00:46:56.940 --> 00:46:59.180
<v Speaker 0>Prom Is it is it right I think

00:46:59.180 --> 00:47:01.260
<v Speaker 1>it's not right place you are putting it,

00:47:01.260 --> 00:47:02.060
<v Speaker 1>but that's fine.

00:47:03.075 --> 00:47:05.395
<v Speaker 1>I mean, you need to probably fix it.

00:47:05.395 --> 00:47:06.994
<v Speaker 1>Is it it should be in the link.

00:47:06.994 --> 00:47:07.475
<v Speaker 1>No?

00:47:09.795 --> 00:47:11.235
<v Speaker 0>Ah, you are

00:47:11.395 --> 00:47:11.955
<v Speaker 0>correct.

00:47:12.675 --> 00:47:13.955
<v Speaker 0>So that should be

00:47:14.435 --> 00:47:15.714
<v Speaker 0>oh, undo.

00:47:17.870 --> 00:47:18.670
<v Speaker 0>Okay.

00:47:19.070 --> 00:47:21.150
<v Speaker 0>Alright. So prom zero

00:47:21.390 --> 00:47:23.790
<v Speaker 0>it's prom e U 1 0.

00:47:23.950 --> 00:47:25.310
<v Speaker 1>Yep. That's the first one.

00:47:25.950 --> 00:47:28.110
<v Speaker 0>So we call this prom e u one,

00:47:28.350 --> 00:47:30.750
<v Speaker 0>and that becomes Prom E U 1 here.

00:47:30.990 --> 00:47:31.630
<v Speaker 1>Yeah. Correct.

00:47:32.205 --> 00:47:33.885
<v Speaker 1>So k. The the thing the thing that

00:47:33.885 --> 00:47:36.605
<v Speaker 1>you you can specify, the dash dash store,

00:47:36.605 --> 00:47:39.405
<v Speaker 1>is the, you know, endpoint of story API

00:47:39.645 --> 00:47:41.405
<v Speaker 1>that you should target

00:47:41.565 --> 00:47:44.125
<v Speaker 1>in order to fetch metrics from for this

00:47:44.125 --> 00:47:46.685
<v Speaker 1>query evaluation query engine. Right? So

00:47:50.350 --> 00:47:53.230
<v Speaker 1>you can also put, like, in more complex

00:47:53.230 --> 00:47:56.110
<v Speaker 1>environment, you can put DNS endpoints so you

00:47:56.110 --> 00:47:58.030
<v Speaker 1>can actually resolve those automatically.

00:47:58.030 --> 00:47:59.790
<v Speaker 1>You don't need to put it manually.

00:48:00.030 --> 00:48:01.230
<v Speaker 1>So that's a choice as well.

00:48:03.845 --> 00:48:06.325
<v Speaker 0>Okay. Let me run this and see Yeah.

00:48:06.325 --> 00:48:08.244
<v Speaker 0>If it yells at me. It looks okay.

00:48:08.244 --> 00:48:09.765
<v Speaker 0>I think that's okay.

00:48:10.005 --> 00:48:14.085
<v Speaker 1>Alright. Let's it it so Queryr actually exposes

00:48:14.085 --> 00:48:16.325
<v Speaker 1>the UI, so we can look on that

00:48:16.325 --> 00:48:16.724
<v Speaker 1>port.

00:48:18.839 --> 00:48:21.080
<v Speaker 1>Nine zero nine zero. Yep.

00:48:22.119 --> 00:48:25.079
<v Speaker 1>Okay. And stores, if we do click stores

00:48:25.079 --> 00:48:27.880
<v Speaker 1>page on the on the head. Yep.

00:48:29.160 --> 00:48:30.680
<v Speaker 1>We can see that

00:48:31.545 --> 00:48:34.184
<v Speaker 1>we have free store APIs and only one

00:48:34.184 --> 00:48:35.305
<v Speaker 1>kind of works.

00:48:35.785 --> 00:48:37.305
<v Speaker 1>And we can see that by

00:48:37.625 --> 00:48:40.184
<v Speaker 1>I mean, I assume so because we have

00:48:40.184 --> 00:48:43.145
<v Speaker 1>announced labels set only on one. And this

00:48:43.145 --> 00:48:44.665
<v Speaker 1>is our those those are actually

00:48:44.920 --> 00:48:47.000
<v Speaker 1>external labels that we

00:48:49.560 --> 00:48:52.120
<v Speaker 1>and they are correct. But for some reason,

00:48:52.120 --> 00:48:54.280
<v Speaker 1>we don't have from other stuff. But okay.

00:48:54.280 --> 00:48:57.000
<v Speaker 1>Let's query. Let's see how query behaves,

00:48:57.400 --> 00:48:59.915
<v Speaker 1>what we can what we see there.

00:49:01.195 --> 00:49:03.275
<v Speaker 1>Yeah. Let's fetch this metric again.

00:49:05.515 --> 00:49:07.995
<v Speaker 1>Alright. Looks like we can what what is

00:49:07.995 --> 00:49:09.195
<v Speaker 1>happening is that probably.

00:49:11.369 --> 00:49:13.529
<v Speaker 1>Yes. So I mean, I I guess I

00:49:13.529 --> 00:49:15.609
<v Speaker 0>to the Prometheus as well as the sidecars?

00:49:16.329 --> 00:49:17.690
<v Speaker 1>We already

00:49:18.890 --> 00:49:21.770
<v Speaker 1>no. It's a sidecar that proxies to Prometheus.

00:49:21.770 --> 00:49:24.089
<v Speaker 1>So this link doesn't work for those two

00:49:24.089 --> 00:49:24.650
<v Speaker 1>sidecars,

00:49:24.905 --> 00:49:26.345
<v Speaker 1>and for one sidecar,

00:49:26.345 --> 00:49:27.065
<v Speaker 1>it works.

00:49:27.625 --> 00:49:29.545
<v Speaker 1>And it doesn't work for

00:49:32.585 --> 00:49:33.625
<v Speaker 0>yeah.

00:49:35.545 --> 00:49:37.385
<v Speaker 1>I didn't get that which one work, which

00:49:37.385 --> 00:49:37.625
<v Speaker 1>not.

00:49:38.570 --> 00:49:41.690
<v Speaker 0>Yeah. So I would mention Prom 9093

00:49:41.690 --> 00:49:44.250
<v Speaker 0>anywhere here. That was only in the sidecar.

00:49:44.250 --> 00:49:46.570
<v Speaker 1>That that's okay because sidecar is is what

00:49:46.570 --> 00:49:49.210
<v Speaker 1>matters here. So sidecar somehow doesn't work

00:49:50.250 --> 00:49:51.690
<v Speaker 1>in this configuration.

00:49:51.690 --> 00:49:54.250
<v Speaker 1>So let's see. We have

00:49:59.635 --> 00:50:01.635
<v Speaker 1>okay. Let's attack US.

00:50:01.795 --> 00:50:02.515
<v Speaker 1>This

00:50:04.835 --> 00:50:06.515
<v Speaker 1>from US 10

00:50:06.515 --> 00:50:07.475
<v Speaker 1>Port, this

00:50:07.830 --> 00:50:09.190
<v Speaker 1>looks fine.

00:50:11.270 --> 00:50:13.110
<v Speaker 1>Actually, we can also

00:50:13.110 --> 00:50:14.550
<v Speaker 1>look on logs

00:50:15.350 --> 00:50:16.550
<v Speaker 1>if you want

00:50:17.350 --> 00:50:19.510
<v Speaker 1>of the sidecar that

00:50:19.510 --> 00:50:21.430
<v Speaker 1>might tell us something.

00:50:21.430 --> 00:50:22.950
<v Speaker 1>Maybe this idea is wrong.

00:50:29.625 --> 00:50:31.065
<v Speaker 1>Oh, yeah. It's wrong

00:50:31.545 --> 00:50:32.425
<v Speaker 1>because

00:50:32.585 --> 00:50:34.105
<v Speaker 1>you took it as

00:50:35.385 --> 00:50:37.225
<v Speaker 1>yeah. That's fine. It's actually yeah. We don't

00:50:37.225 --> 00:50:39.270
<v Speaker 1>need actually from curious logs. It's a sidecar

00:50:39.270 --> 00:50:41.270
<v Speaker 1>that is broken. Okay. So what is happening

00:50:41.270 --> 00:50:42.950
<v Speaker 1>probably is that you

00:50:43.110 --> 00:50:45.670
<v Speaker 1>took this in order, but, actually,

00:50:46.790 --> 00:50:49.270
<v Speaker 1>the order was switched. So the container

00:50:49.590 --> 00:50:53.270
<v Speaker 1>you pointed to is wrong, so it exposed

00:50:53.270 --> 00:50:54.230
<v Speaker 1>in a different port.

00:50:55.895 --> 00:50:57.495
<v Speaker 1>So what is happening is that

00:50:57.895 --> 00:51:00.295
<v Speaker 1>sidecar with for for the ending with free

00:51:00.295 --> 00:51:02.135
<v Speaker 1>points to one and and so on. So

00:51:02.135 --> 00:51:03.175
<v Speaker 1>you need to replace

00:51:03.815 --> 00:51:06.295
<v Speaker 0>Okay. Well, you added names to these containers,

00:51:06.295 --> 00:51:07.815
<v Speaker 0>so let's just use them instead of the

00:51:07.815 --> 00:51:09.975
<v Speaker 0>IDs. So PromUSDash1.

00:51:10.370 --> 00:51:11.330
<v Speaker 0>Okay.

00:51:11.330 --> 00:51:13.410
<v Speaker 0>Let's just not use the IDs at all.

00:51:15.250 --> 00:51:17.970
<v Speaker 0>PromU11.

00:51:19.890 --> 00:51:21.490
<v Speaker 0>And this one,

00:51:21.890 --> 00:51:23.890
<v Speaker 0>prom u one zero.

00:51:24.954 --> 00:51:27.115
<v Speaker 0>And just so the names are consistent and

00:51:27.115 --> 00:51:28.795
<v Speaker 0>I don't trip myself up,

00:51:29.435 --> 00:51:31.835
<v Speaker 0>e u one one

00:51:31.915 --> 00:51:33.035
<v Speaker 0>say car.

00:51:34.635 --> 00:51:36.075
<v Speaker 0>Let's call this prom.

00:51:42.380 --> 00:51:43.740
<v Speaker 1>You can just copy maybe.

00:51:49.515 --> 00:51:52.315
<v Speaker 0>Yeah. I should have copied. Okay. So PROM

00:51:52.315 --> 00:51:54.714
<v Speaker 0>EU 1 and PROM EU 0.

00:51:55.434 --> 00:51:56.955
<v Speaker 1>Fine. Yep. Perfect.

00:52:00.234 --> 00:52:01.115
<v Speaker 0>PROM

00:52:01.115 --> 00:52:01.835
<v Speaker 0>EU

00:52:02.315 --> 00:52:03.835
<v Speaker 0>PROM EU PROM US.

00:52:09.840 --> 00:52:11.520
<v Speaker 0>And this one here,

00:52:11.760 --> 00:52:14.080
<v Speaker 0>from US One Zero.

00:52:16.000 --> 00:52:17.680
<v Speaker 1>Yeah. And there are hyphens as well you

00:52:17.680 --> 00:52:19.600
<v Speaker 1>need to fix on the from e u

00:52:19.305 --> 00:52:22.105
<v Speaker 1>prom hyphen e u hyphen zero.

00:52:22.265 --> 00:52:23.385
<v Speaker 1>But down

00:52:23.385 --> 00:52:25.385
<v Speaker 1>below, you have without hyphens. So

00:52:27.545 --> 00:52:28.345
<v Speaker 1>Perfect.

00:52:28.345 --> 00:52:28.985
<v Speaker 1>Yeah.

00:52:29.865 --> 00:52:33.089
<v Speaker 1>Should be fine, of course. Yeah. See, every

00:52:33.089 --> 00:52:35.490
<v Speaker 0>time something goes wrong in this show, it's

00:52:35.490 --> 00:52:36.930
<v Speaker 0>always my fault.

00:52:37.089 --> 00:52:38.210
<v Speaker 0>Always me.

00:52:38.609 --> 00:52:40.290
<v Speaker 0>I should learn to be more

00:52:40.690 --> 00:52:41.570
<v Speaker 0>careful.

00:52:42.049 --> 00:52:44.529
<v Speaker 0>Alright. So let's Mac OS fault this time.

00:52:44.529 --> 00:52:47.089
<v Speaker 0>Yeah. We'll blame Mac OS. Okay. So let's

00:52:47.089 --> 00:52:47.650
<v Speaker 0>delete

00:52:50.035 --> 00:52:52.435
<v Speaker 0>So we'll delete the query here.

00:52:53.155 --> 00:52:55.635
<v Speaker 0>We're deleting all the sidecars.

00:52:56.035 --> 00:52:56.755
<v Speaker 1>Mhmm.

00:52:57.715 --> 00:52:59.555
<v Speaker 0>And that's it. Right? Yep.

00:53:02.130 --> 00:53:04.210
<v Speaker 0>55 is the wrong ID. Oh, yep. Because

00:53:04.210 --> 00:53:05.730
<v Speaker 0>I meant to type 66.

00:53:08.770 --> 00:53:10.290
<v Speaker 0>Which means we should only be left with

00:53:10.290 --> 00:53:11.730
<v Speaker 0>three Prometheus running.

00:53:11.890 --> 00:53:12.609
<v Speaker 0>Okay. Correct.

00:53:16.335 --> 00:53:18.415
<v Speaker 0>Now we've got three new sidecars and a

00:53:18.415 --> 00:53:19.375
<v Speaker 0>new quidier.

00:53:21.215 --> 00:53:24.015
<v Speaker 0>They seem happy. So the the name in

00:53:24.015 --> 00:53:24.815
<v Speaker 0>Twitch worked.

00:53:27.110 --> 00:53:28.390
<v Speaker 0>Run to stores.

00:53:28.470 --> 00:53:31.030
<v Speaker 0>Oh, we have labels now. So Give them

00:53:31.030 --> 00:53:32.790
<v Speaker 1>give them a little bit time to to

00:53:32.790 --> 00:53:35.510
<v Speaker 1>to so just refresh maybe. Maybe it should

00:53:35.510 --> 00:53:36.070
<v Speaker 1>be

00:53:37.910 --> 00:53:39.510
<v Speaker 0>So I broke in the US One.

00:53:41.935 --> 00:53:44.335
<v Speaker 1>Okay. Let's focus on this US One then.

00:53:46.015 --> 00:53:48.015
<v Speaker 0>Oh, that's not got sidecar in it.

00:53:49.935 --> 00:53:51.935
<v Speaker 0>Okay. So I can just delete the query

00:53:51.935 --> 00:53:54.095
<v Speaker 0>and run that again. Yeah.

00:53:55.349 --> 00:53:57.829
<v Speaker 0>I will fix my code. Don't you worry.

00:53:59.349 --> 00:54:00.150
<v Speaker 0>Alright.

00:54:00.390 --> 00:54:01.589
<v Speaker 0>It's gonna work.

00:54:05.509 --> 00:54:06.310
<v Speaker 0>Ta da.

00:54:07.190 --> 00:54:08.789
<v Speaker 1>Yes. Super nice. Okay.

00:54:09.395 --> 00:54:09.955
<v Speaker 1>So

00:54:10.675 --> 00:54:13.234
<v Speaker 1>so this page shows you, as I mentioned,

00:54:13.234 --> 00:54:15.234
<v Speaker 1>you know, what's the APIs we have in

00:54:15.234 --> 00:54:17.474
<v Speaker 1>the system. We have only sidecars. You can

00:54:17.474 --> 00:54:20.195
<v Speaker 1>see that on the header. It's a sidecar.

00:54:20.195 --> 00:54:21.954
<v Speaker 1>You exposed every replica.

00:54:23.319 --> 00:54:25.960
<v Speaker 1>Sorry. What are the labels announced from each

00:54:25.960 --> 00:54:28.440
<v Speaker 1>of those premises so you can either identify

00:54:28.440 --> 00:54:30.760
<v Speaker 1>kind of your state store API.

00:54:30.920 --> 00:54:33.240
<v Speaker 1>You have meantime and max time. Those are

00:54:33.240 --> 00:54:34.360
<v Speaker 1>the durations

00:54:34.760 --> 00:54:35.800
<v Speaker 1>that you

00:54:37.195 --> 00:54:38.315
<v Speaker 1>durations

00:54:38.474 --> 00:54:40.715
<v Speaker 1>of what time range you have

00:54:41.915 --> 00:54:43.994
<v Speaker 1>of the data in those in those print

00:54:43.994 --> 00:54:45.435
<v Speaker 1>users, kind of,

00:54:45.994 --> 00:54:47.595
<v Speaker 1>and then, yeah, like,

00:54:47.755 --> 00:54:49.675
<v Speaker 1>health kind of status. So if you go

00:54:49.675 --> 00:54:50.555
<v Speaker 1>to graph

00:54:54.650 --> 00:54:56.970
<v Speaker 1>and try to grab those things,

00:54:57.210 --> 00:54:58.170
<v Speaker 1>we have

00:54:58.730 --> 00:55:00.650
<v Speaker 1>right now two responses.

00:55:00.650 --> 00:55:02.730
<v Speaker 1>Without going to graph yet, we let's let's

00:55:02.730 --> 00:55:05.290
<v Speaker 1>talk about this. So we have one series,

00:55:05.290 --> 00:55:07.685
<v Speaker 1>but, you know, just to

00:55:08.645 --> 00:55:11.285
<v Speaker 1>continuous up metrics, but just from EU and

00:55:11.285 --> 00:55:13.765
<v Speaker 1>US cluster. But as you remember, like, we

00:55:13.765 --> 00:55:15.845
<v Speaker 1>created three Prompt users.

00:55:16.085 --> 00:55:16.805
<v Speaker 1>However,

00:55:17.285 --> 00:55:19.525
<v Speaker 1>I mentioned that replica

00:55:20.420 --> 00:55:23.060
<v Speaker 1>sorry. The the U U One cluster from

00:55:23.060 --> 00:55:25.460
<v Speaker 1>users are in this mode.

00:55:25.860 --> 00:55:27.300
<v Speaker 1>So they have

00:55:28.260 --> 00:55:30.100
<v Speaker 1>they are scraping the same data. So we

00:55:30.100 --> 00:55:33.220
<v Speaker 1>are a courier and Thanos is duplicating

00:55:33.220 --> 00:55:33.700
<v Speaker 1>this

00:55:34.105 --> 00:55:36.265
<v Speaker 1>in runtime. And we can see that if

00:55:36.265 --> 00:55:39.225
<v Speaker 1>you click the duplication the duplication button.

00:55:39.385 --> 00:55:41.945
<v Speaker 1>So turn the duplication off and then query

00:55:41.945 --> 00:55:42.985
<v Speaker 1>again, execute.

00:55:43.385 --> 00:55:45.705
<v Speaker 1>So now we can see that those were

00:55:46.185 --> 00:55:46.585
<v Speaker 1>masked,

00:55:47.200 --> 00:55:49.520
<v Speaker 1>and they were no. Like, the the rep

00:55:49.600 --> 00:55:51.280
<v Speaker 1>the replicas are masked,

00:55:51.360 --> 00:55:53.360
<v Speaker 1>thanks of this replica label.

00:55:53.760 --> 00:55:56.960
<v Speaker 1>So because one was stated as replica zero

00:55:56.960 --> 00:55:59.520
<v Speaker 1>in external labels of Prometheus, one replica one,

00:56:00.545 --> 00:56:03.825
<v Speaker 1>This was reduced essentially and the duplicated. So

00:56:03.825 --> 00:56:05.185
<v Speaker 1>this is how you define

00:56:05.265 --> 00:56:06.465
<v Speaker 1>h eight mode.

00:56:07.025 --> 00:56:09.105
<v Speaker 1>Right? And if you go to the Thanos

00:56:09.105 --> 00:56:11.825
<v Speaker 1>querier command that you run, so the Thanos

00:56:11.825 --> 00:56:13.345
<v Speaker 1>querier docker, maybe

00:56:13.505 --> 00:56:14.145
<v Speaker 1>if you

00:56:14.680 --> 00:56:16.920
<v Speaker 1>just go to that Docker run thing, you

00:56:16.920 --> 00:56:19.880
<v Speaker 1>can see that we specify query replica label

00:56:20.760 --> 00:56:22.360
<v Speaker 1>equals replica.

00:56:22.760 --> 00:56:25.400
<v Speaker 1>It will query sub command addresses, and then

00:56:25.400 --> 00:56:26.040
<v Speaker 1>this

00:56:26.280 --> 00:56:29.160
<v Speaker 1>is how you tell what label you should

00:56:29.400 --> 00:56:32.355
<v Speaker 1>kind of choose to duplicate from by default.

00:56:32.515 --> 00:56:34.675
<v Speaker 1>And, also, you can specify many of those.

00:56:34.675 --> 00:56:36.035
<v Speaker 1>Right? It doesn't need to be just one

00:56:36.035 --> 00:56:36.755
<v Speaker 1>label.

00:56:37.555 --> 00:56:38.675
<v Speaker 0>Nice.

00:56:39.315 --> 00:56:42.035
<v Speaker 1>So this is a global view for querying.

00:56:42.035 --> 00:56:44.675
<v Speaker 1>We are planning to add even even more

00:56:44.675 --> 00:56:47.170
<v Speaker 1>kind of resources you can federate because this

00:56:47.170 --> 00:56:48.370
<v Speaker 1>is kind of federation.

00:56:48.530 --> 00:56:50.530
<v Speaker 1>Let's check if we can actually

00:56:50.530 --> 00:56:52.690
<v Speaker 1>retrieve one year of data as well so

00:56:52.690 --> 00:56:54.290
<v Speaker 1>we can graph them.

00:56:58.610 --> 00:56:59.810
<v Speaker 1>Cool. So

00:57:00.675 --> 00:57:02.675
<v Speaker 1>we have still one year, and

00:57:03.395 --> 00:57:04.595
<v Speaker 1>the mode

00:57:04.595 --> 00:57:07.875
<v Speaker 1>is is super nicely kind of transparently duplicated

00:57:07.875 --> 00:57:09.235
<v Speaker 1>so we don't need to worry about that

00:57:09.235 --> 00:57:12.355
<v Speaker 1>from the user experience. So it's pretty accurate.

00:57:12.355 --> 00:57:14.275
<v Speaker 1>That's that's what I'm saying. And

00:57:14.610 --> 00:57:17.410
<v Speaker 1>it also fills the gaps, potential gaps that

00:57:17.410 --> 00:57:18.690
<v Speaker 1>PromptUs will have.

00:57:19.170 --> 00:57:19.730
<v Speaker 1>So

00:57:21.090 --> 00:57:23.570
<v Speaker 1>if you would kill PromptUs, one of those,

00:57:23.730 --> 00:57:26.450
<v Speaker 1>it will user will not spot it. Right?

00:57:26.450 --> 00:57:27.250
<v Speaker 1>So you can totally

00:57:28.585 --> 00:57:31.545
<v Speaker 1>do rolling restarts of your Prometheus. You can

00:57:31.545 --> 00:57:34.265
<v Speaker 1>upgrade them. You can change configuration, whatever, and

00:57:34.265 --> 00:57:37.705
<v Speaker 1>this will not disrupt your query and availability

00:57:37.705 --> 00:57:38.345
<v Speaker 1>kind of. Right?

00:57:40.119 --> 00:57:40.920
<v Speaker 0>Very

00:57:40.920 --> 00:57:43.560
<v Speaker 0>cool. Cool. And that was the easy part.

00:57:44.520 --> 00:57:45.640
<v Speaker 1>Was the easy part.

00:57:46.359 --> 00:57:47.960
<v Speaker 1>Because this is just global view, and you

00:57:47.960 --> 00:57:49.640
<v Speaker 1>can run Thanos in this mode. You can

00:57:49.640 --> 00:57:51.640
<v Speaker 1>just add sidecars, have a global for the

00:57:51.640 --> 00:57:52.359
<v Speaker 1>rated endpoint,

00:57:53.205 --> 00:57:53.845
<v Speaker 1>and

00:57:54.405 --> 00:57:56.245
<v Speaker 1>and keep it like this for your system

00:57:56.245 --> 00:57:58.165
<v Speaker 1>or for your part of your system.

00:57:58.565 --> 00:58:00.885
<v Speaker 1>However, we can go farther and talk about,

00:58:00.885 --> 00:58:02.405
<v Speaker 1>you know, cheap storage

00:58:02.405 --> 00:58:04.005
<v Speaker 1>and long duration

00:58:04.005 --> 00:58:06.165
<v Speaker 1>of those metrics as well in a cheap

00:58:06.165 --> 00:58:07.845
<v Speaker 1>spay in in a cheap, yeah, space.

00:58:09.630 --> 00:58:10.270
<v Speaker 0>Cool.

00:58:11.230 --> 00:58:13.390
<v Speaker 0>So are we going back to the tutorial?

00:58:13.390 --> 00:58:15.070
<v Speaker 1>Yes. And continue.

00:58:15.230 --> 00:58:15.790
<v Speaker 1>So

00:58:16.109 --> 00:58:19.390
<v Speaker 1>last page, second page is around long

00:58:19.470 --> 00:58:20.030
<v Speaker 1>retention.

00:58:21.234 --> 00:58:24.195
<v Speaker 1>So now let's spin up some object storage.

00:58:24.195 --> 00:58:27.155
<v Speaker 1>Thanos supports, you know, of any any kind

00:58:27.155 --> 00:58:28.755
<v Speaker 1>of object storage you

00:58:28.994 --> 00:58:31.235
<v Speaker 1>want, like, very, very many clients.

00:58:31.474 --> 00:58:33.635
<v Speaker 1>But Minio is one of the s free

00:58:33.635 --> 00:58:36.035
<v Speaker 1>endpoint kind of API supported

00:58:36.339 --> 00:58:38.180
<v Speaker 1>object search. You can run locally on your

00:58:38.180 --> 00:58:39.540
<v Speaker 1>disk. So let's run it.

00:58:42.339 --> 00:58:44.740
<v Speaker 1>Cool. Cool. Cool. You can create Thanos bucket,

00:58:45.059 --> 00:58:46.340
<v Speaker 1>or you should, actually.

00:58:46.819 --> 00:58:48.340
<v Speaker 1>And we can

00:58:48.420 --> 00:58:50.020
<v Speaker 1>actually check if Minio is running.

00:58:51.105 --> 00:58:53.265
<v Speaker 1>Yeah. We can don't click that. You need

00:58:53.265 --> 00:58:55.585
<v Speaker 1>to probably go to local host 9000.

00:58:55.585 --> 00:58:55.985
<v Speaker 1>Yeah.

00:58:58.145 --> 00:59:00.625
<v Speaker 1>And the access is Rawkode

00:59:01.425 --> 00:59:02.785
<v Speaker 1>and Rawkode

00:59:03.345 --> 00:59:04.145
<v Speaker 1>something.

00:59:04.465 --> 00:59:05.905
<v Speaker 0>Rawkode loves OBS.

00:59:08.830 --> 00:59:10.590
<v Speaker 0>There we go. Correct.

00:59:11.630 --> 00:59:12.350
<v Speaker 1>So,

00:59:13.550 --> 00:59:15.630
<v Speaker 1>yeah, we should have a bucket ready, but

00:59:15.630 --> 00:59:17.710
<v Speaker 1>it's empty, right, because we just created buckets.

00:59:17.710 --> 00:59:19.630
<v Speaker 1>So let's go and check how we can

00:59:19.630 --> 00:59:23.365
<v Speaker 1>back up our data from Prometheus that Prometheus

00:59:23.365 --> 00:59:25.605
<v Speaker 1>collected into this object storage.

00:59:25.845 --> 00:59:27.045
<v Speaker 1>What we need to do, we need to

00:59:27.045 --> 00:59:28.965
<v Speaker 1>reconfigure our sidecars.

00:59:29.285 --> 00:59:31.125
<v Speaker 1>And first, we need to create this configuration

00:59:31.125 --> 00:59:32.964
<v Speaker 1>file. It doesn't need to be filed. It

00:59:32.964 --> 00:59:34.565
<v Speaker 1>can be passed through the flag as well,

00:59:34.565 --> 00:59:36.164
<v Speaker 1>but let's configure a file. This will be

00:59:36.164 --> 00:59:39.040
<v Speaker 1>easier. You specify, you know, the type as

00:59:39.040 --> 00:59:41.920
<v Speaker 1>free, maybe GCS, maybe Azure, whatever,

00:59:42.160 --> 00:59:44.320
<v Speaker 1>and some configuration dependent on the on the

00:59:44.320 --> 00:59:45.520
<v Speaker 1>object storage. So

00:59:46.640 --> 00:59:47.840
<v Speaker 0>Okay.

00:59:47.920 --> 00:59:50.080
<v Speaker 0>So Menio has a name of Menio. So

00:59:50.080 --> 00:59:52.465
<v Speaker 0>that means I'm I probably wanna change that

00:59:52.465 --> 00:59:53.745
<v Speaker 0>configuration file.

00:59:54.225 --> 00:59:55.505
<v Speaker 0>Or Yes.

00:59:55.585 --> 00:59:57.265
<v Speaker 1>Yes. Yes. And then we need to make

00:59:57.265 --> 00:59:59.265
<v Speaker 1>sure we have Menio everywhere.

01:00:00.465 --> 01:00:02.225
<v Speaker 1>In actually, there will be only

01:00:03.120 --> 01:00:05.520
<v Speaker 1>couple of components that will access object storage,

01:00:05.520 --> 01:00:07.440
<v Speaker 1>but then we'll refer this as media. Perfect.

01:00:07.440 --> 01:00:07.920
<v Speaker 1>Yeah.

01:00:10.400 --> 01:00:11.200
<v Speaker 0>Okay.

01:00:11.920 --> 01:00:14.880
<v Speaker 1>Cool. So we wanna stop three saved cars,

01:00:14.880 --> 01:00:16.160
<v Speaker 0>and then we're gonna

01:00:17.495 --> 01:00:18.295
<v Speaker 1>Reconfigure.

01:00:18.295 --> 01:00:19.575
<v Speaker 1>So run them again,

01:00:20.055 --> 01:00:22.135
<v Speaker 1>but with a couple of flags.

01:00:22.455 --> 01:00:23.495
<v Speaker 1>And shipper

01:00:23.815 --> 01:00:26.375
<v Speaker 1>I mean, how we gonna do? So maybe

01:00:26.375 --> 01:00:29.255
<v Speaker 1>let's Just because you have them flags? Exactly.

01:00:29.780 --> 01:00:31.859
<v Speaker 1>Actually, there will be one more, but let's

01:00:31.859 --> 01:00:32.900
<v Speaker 1>copy them first.

01:00:34.740 --> 01:00:35.540
<v Speaker 0>Okay.

01:00:35.700 --> 01:00:37.780
<v Speaker 0>So So this this is

01:00:38.260 --> 01:00:40.820
<v Speaker 1>the those two flags are configuring or well,

01:00:40.820 --> 01:00:41.380
<v Speaker 1>passing

01:00:41.875 --> 01:00:44.515
<v Speaker 1>object storage configuration to sidecar. So now it

01:00:44.515 --> 01:00:46.275
<v Speaker 1>knows there is object storage, and it will

01:00:46.275 --> 01:00:48.835
<v Speaker 1>upload every block that will appear on the

01:00:48.835 --> 01:00:50.515
<v Speaker 1>Prometheus local directory

01:00:50.915 --> 01:00:52.195
<v Speaker 1>into the

01:00:52.835 --> 01:00:54.835
<v Speaker 1>object storage. And then you need the

01:00:55.869 --> 01:00:57.390
<v Speaker 1>no. No. No. Sorry. No. No. No. The

01:00:57.710 --> 01:00:59.790
<v Speaker 1>actually, both of them. So there are two

01:00:59.790 --> 01:01:00.350
<v Speaker 1>minus

01:01:00.670 --> 01:01:02.750
<v Speaker 1>did you copy all of them? Alright. Alright.

01:01:02.750 --> 01:01:04.670
<v Speaker 1>Because right now, we need to without the

01:01:04.670 --> 01:01:06.190
<v Speaker 1>name, but that's fine. Yep.

01:01:07.884 --> 01:01:08.924
<v Speaker 1>Yes.

01:01:08.924 --> 01:01:11.484
<v Speaker 1>Correct. Perfect. So what is happening here, we

01:01:11.484 --> 01:01:12.765
<v Speaker 1>added configuration

01:01:14.045 --> 01:01:15.005
<v Speaker 1>to Menio,

01:01:15.085 --> 01:01:17.724
<v Speaker 1>and, also, it has to access

01:01:17.884 --> 01:01:18.845
<v Speaker 1>the directory

01:01:19.619 --> 01:01:22.819
<v Speaker 1>of of Prometheus that is is accounted for.

01:01:22.819 --> 01:01:25.700
<v Speaker 1>Right? Because it needs to know whenever Prometheus

01:01:25.700 --> 01:01:26.500
<v Speaker 1>is actually

01:01:27.140 --> 01:01:27.859
<v Speaker 1>kind of

01:01:28.819 --> 01:01:31.059
<v Speaker 1>dumped any block or not to have it

01:01:31.059 --> 01:01:32.579
<v Speaker 1>uploaded to to the object search.

01:01:35.135 --> 01:01:37.535
<v Speaker 0>Okay. Let me just check the US One.

01:01:39.535 --> 01:01:42.255
<v Speaker 0>US replica tier. Okay. That's fine. So I

01:01:42.255 --> 01:01:44.095
<v Speaker 0>just need to add one more link,

01:01:44.895 --> 01:01:47.055
<v Speaker 0>which is menu. Yes. Menu.

01:01:55.070 --> 01:01:55.790
<v Speaker 0>Easy.

01:01:56.350 --> 01:01:57.070
<v Speaker 0>Mhmm.

01:01:58.350 --> 01:02:00.190
<v Speaker 0>I shouldn't say that before it works, should

01:02:00.190 --> 01:02:01.445
<v Speaker 0>I? Okay.

01:02:02.085 --> 01:02:04.085
<v Speaker 0>Alright. So we wanna stop the three say

01:02:04.085 --> 01:02:04.885
<v Speaker 0>cars.

01:02:08.165 --> 01:02:11.045
<v Speaker 0>See in fact, let's just do docker container

01:02:11.045 --> 01:02:11.925
<v Speaker 0>l s.

01:02:12.805 --> 01:02:13.845
<v Speaker 0>GREP

01:02:13.845 --> 01:02:14.725
<v Speaker 0>say car.

01:02:19.440 --> 01:02:21.920
<v Speaker 0>30817.

01:02:24.000 --> 01:02:25.280
<v Speaker 0>3 0

01:02:25.280 --> 01:02:26.160
<v Speaker 0>C C.

01:02:27.680 --> 01:02:29.440
<v Speaker 0>Alright. Good. And run.

01:02:30.545 --> 01:02:31.985
<v Speaker 1>Yeah. Oh,

01:02:32.305 --> 01:02:33.825
<v Speaker 0>wrong And

01:02:34.225 --> 01:02:36.625
<v Speaker 1>the object for the flag was we need

01:02:36.625 --> 01:02:37.585
<v Speaker 1>to be after

01:02:37.825 --> 01:02:39.585
<v Speaker 1>sidecar subcomment.

01:02:39.585 --> 01:02:41.905
<v Speaker 1>Yeah. Those two flags are the Thanos flags,

01:02:41.905 --> 01:02:43.680
<v Speaker 1>not Docker flags.

01:02:44.320 --> 01:02:44.640
<v Speaker 1>Yep.

01:02:56.755 --> 01:02:58.675
<v Speaker 0>Alright. Let's try that again.

01:03:05.235 --> 01:03:06.915
<v Speaker 0>Okay. So it's maybe working.

01:03:07.395 --> 01:03:07.875
<v Speaker 1>Correct.

01:03:11.310 --> 01:03:12.510
<v Speaker 0>They've not crashed.

01:03:12.750 --> 01:03:14.350
<v Speaker 0>So how do we confirm?

01:03:14.590 --> 01:03:16.510
<v Speaker 0>Can we just look in the bucket?

01:03:16.590 --> 01:03:17.870
<v Speaker 1>Yeah. Maybe.

01:03:18.430 --> 01:03:19.470
<v Speaker 1>Just open

01:03:19.790 --> 01:03:20.750
<v Speaker 1>the Thanos.

01:03:22.750 --> 01:03:24.190
<v Speaker 1>Click on Thanos. I think you need to

01:03:24.190 --> 01:03:27.535
<v Speaker 1>click on Thanos bucket, sorry, to see

01:03:27.775 --> 01:03:29.695
<v Speaker 1>so if you go to menu browser again,

01:03:29.695 --> 01:03:31.615
<v Speaker 1>just click on Thanos. Yeah.

01:03:35.055 --> 01:03:36.335
<v Speaker 1>Okay. Something

01:03:36.575 --> 01:03:40.255
<v Speaker 1>is not exactly working. So let's check

01:03:42.430 --> 01:03:43.390
<v Speaker 1>sidecar logs.

01:03:54.155 --> 01:03:55.195
<v Speaker 0>Thanos ship

01:03:56.795 --> 01:03:59.835
<v Speaker 1>No. So ship projection is just side effect.

01:03:59.835 --> 01:04:01.355
<v Speaker 1>I think the problem is

01:04:01.675 --> 01:04:02.875
<v Speaker 1>read open

01:04:02.955 --> 01:04:05.355
<v Speaker 1>dot data. No such file or directory.

01:04:06.500 --> 01:04:09.059
<v Speaker 1>And this is because it's not data. It's

01:04:09.059 --> 01:04:10.260
<v Speaker 1>Prometheus. Right?

01:04:11.700 --> 01:04:12.099
<v Speaker 1>It's

01:04:12.819 --> 01:04:13.220
<v Speaker 1>we

01:04:14.660 --> 01:04:16.500
<v Speaker 1>this is because you copied and kind of

01:04:16.500 --> 01:04:19.059
<v Speaker 1>manually added the flag, but that's fine. Let's

01:04:20.444 --> 01:04:22.125
<v Speaker 1>this is not the problem. The problem is

01:04:22.125 --> 01:04:24.444
<v Speaker 1>that the sidecar has wrong direct so we

01:04:24.444 --> 01:04:26.204
<v Speaker 1>shared the directory with

01:04:26.605 --> 01:04:29.964
<v Speaker 1>with host directory with from e one replica

01:04:29.964 --> 01:04:31.964
<v Speaker 1>zero directory into Prometheus

01:04:31.964 --> 01:04:34.285
<v Speaker 1>directory, but let's do it slash data.

01:04:37.020 --> 01:04:38.460
<v Speaker 1>Sure. I put because

01:04:38.460 --> 01:04:40.060
<v Speaker 1>I altered how

01:04:40.380 --> 01:04:41.980
<v Speaker 1>yeah. And looks like the default

01:04:42.940 --> 01:04:44.380
<v Speaker 1>is slash data, and we need to do

01:04:44.380 --> 01:04:45.660
<v Speaker 1>that for all sidecars. Yeah.

01:04:49.375 --> 01:04:51.695
<v Speaker 1>Because if not, we need to manually change

01:04:51.695 --> 01:04:53.615
<v Speaker 1>the flag into prompt queues to point it

01:04:53.615 --> 01:04:55.775
<v Speaker 1>to prompt queues, but this should work. Yeah.

01:05:02.255 --> 01:05:04.575
<v Speaker 1>Yeah. I hope so. It's

01:05:09.430 --> 01:05:11.109
<v Speaker 0>Uh-huh. 306.

01:05:23.175 --> 01:05:24.695
<v Speaker 0>B 9 9 9.

01:05:26.295 --> 01:05:28.695
<v Speaker 1>Cool. No. It looks like we should see

01:05:28.695 --> 01:05:30.135
<v Speaker 1>that in the browser now.

01:05:30.535 --> 01:05:31.655
<v Speaker 0>Yep. There we go.

01:05:33.780 --> 01:05:34.820
<v Speaker 0>So they're using

01:05:36.180 --> 01:05:38.740
<v Speaker 0>menu as an s three compatible

01:05:39.220 --> 01:05:42.180
<v Speaker 0>object store, and Thanos is

01:05:42.340 --> 01:05:45.460
<v Speaker 0>writing data to it. Right? Yeah. Normally,

01:05:45.540 --> 01:05:48.100
<v Speaker 1>it's recommended to use s three and GCS

01:05:48.100 --> 01:05:51.325
<v Speaker 1>and Azure whatever it's much it's actually quite

01:05:51.325 --> 01:05:53.005
<v Speaker 1>cheap, and it's

01:05:53.005 --> 01:05:55.725
<v Speaker 1>reliable. So they do backup. They do you

01:05:55.725 --> 01:05:56.205
<v Speaker 1>know,

01:05:56.765 --> 01:05:59.085
<v Speaker 1>they scale it for you so you don't

01:05:59.085 --> 01:06:01.245
<v Speaker 1>need to maintain your own hard hardware ready.

01:06:03.059 --> 01:06:04.099
<v Speaker 0>It's very cool.

01:06:04.500 --> 01:06:06.339
<v Speaker 0>What are the I guess there's a performance

01:06:06.339 --> 01:06:08.259
<v Speaker 0>trade off there for storing my my data

01:06:08.259 --> 01:06:09.140
<v Speaker 0>here. Right?

01:06:10.420 --> 01:06:12.180
<v Speaker 0>Like on the query side, that must I

01:06:12.180 --> 01:06:13.940
<v Speaker 0>guess it's is it slower?

01:06:14.835 --> 01:06:17.475
<v Speaker 1>Yeah. You need to kind of maybe

01:06:18.275 --> 01:06:21.635
<v Speaker 1>add more caching and and kind of essentially

01:06:21.635 --> 01:06:24.355
<v Speaker 1>use more memory and CPU than normally you

01:06:24.355 --> 01:06:27.075
<v Speaker 1>would use just to have those caching mechanism

01:06:27.075 --> 01:06:30.750
<v Speaker 1>and and avoiding great limits. And this is

01:06:31.150 --> 01:06:34.029
<v Speaker 1>the whole complexity is an in another component

01:06:34.029 --> 01:06:36.109
<v Speaker 1>that we will run right now,

01:06:36.670 --> 01:06:38.190
<v Speaker 1>which is store gateway. So this is the

01:06:38.190 --> 01:06:39.950
<v Speaker 1>component, the microservice that

01:06:40.335 --> 01:06:42.575
<v Speaker 1>kind of understand the object storage and the

01:06:42.575 --> 01:06:45.855
<v Speaker 1>format inside and expose that as a store

01:06:45.855 --> 01:06:46.735
<v Speaker 1>API.

01:06:47.375 --> 01:06:50.015
<v Speaker 1>So when with some gRPC API that allows

01:06:50.015 --> 01:06:51.775
<v Speaker 1>you to query this data, and this is

01:06:51.775 --> 01:06:54.510
<v Speaker 1>where the complexity of trying to avoid this

01:06:54.510 --> 01:06:56.270
<v Speaker 1>latency penalty is there.

01:06:57.070 --> 01:06:57.710
<v Speaker 1>I mean,

01:06:58.270 --> 01:06:58.910
<v Speaker 1>is

01:06:59.630 --> 01:07:01.310
<v Speaker 1>yeah. The whole complexity is there, but you

01:07:01.310 --> 01:07:03.310
<v Speaker 1>are right. Like, Prometheus

01:07:03.310 --> 01:07:04.590
<v Speaker 1>or, like, Thanos,

01:07:04.670 --> 01:07:07.085
<v Speaker 1>well, you you want it's not like

01:07:07.325 --> 01:07:09.165
<v Speaker 1>low latency APIs.

01:07:09.165 --> 01:07:11.005
<v Speaker 1>Right? You you can wait

01:07:11.165 --> 01:07:12.925
<v Speaker 1>seconds for your query.

01:07:13.165 --> 01:07:15.724
<v Speaker 1>Over ten seconds and, like, ten seconds may

01:07:15.724 --> 01:07:17.805
<v Speaker 1>be painful for experience, so you want to,

01:07:17.805 --> 01:07:19.405
<v Speaker 1>you know, scale it accordingly.

01:07:20.060 --> 01:07:22.380
<v Speaker 1>But you can totally have sub seconds or

01:07:22.380 --> 01:07:25.180
<v Speaker 1>sub five seconds with a kind of results.

01:07:25.180 --> 01:07:27.900
<v Speaker 0>I guess the the best practice here would

01:07:27.900 --> 01:07:29.740
<v Speaker 0>be to layer your data. Like, would you

01:07:29.740 --> 01:07:33.180
<v Speaker 0>use the SSD desks for all data that's,

01:07:33.180 --> 01:07:34.619
<v Speaker 0>like, two weeks old? And then and if

01:07:34.619 --> 01:07:36.355
<v Speaker 0>an older than two weeks, you could store

01:07:36.355 --> 01:07:39.235
<v Speaker 0>an object store where maybe you can accept

01:07:39.235 --> 01:07:41.475
<v Speaker 0>that extra latency on the read side. Is

01:07:41.475 --> 01:07:42.995
<v Speaker 0>that Correct.

01:07:43.635 --> 01:07:45.475
<v Speaker 1>And you can totally do that. And, actually,

01:07:45.475 --> 01:07:48.115
<v Speaker 1>this is naturally by default what is happening.

01:07:48.115 --> 01:07:48.755
<v Speaker 1>Right? Because

01:07:49.730 --> 01:07:52.530
<v Speaker 1>as we will see, the uploaded data

01:07:52.609 --> 01:07:55.490
<v Speaker 1>is for, you know, older data

01:07:55.490 --> 01:07:57.890
<v Speaker 1>that was stored and collected by Prometheus. Well,

01:07:57.890 --> 01:07:59.970
<v Speaker 1>we generated, but normally, it will be collected

01:07:59.970 --> 01:08:00.609
<v Speaker 1>by Prometheus.

01:08:01.265 --> 01:08:02.385
<v Speaker 1>The the

01:08:02.865 --> 01:08:05.585
<v Speaker 1>the current data of Prometeos, so the first

01:08:05.585 --> 01:08:07.745
<v Speaker 1>three hours of the data are stored in

01:08:07.745 --> 01:08:09.825
<v Speaker 1>memory in totally different format,

01:08:10.065 --> 01:08:12.945
<v Speaker 1>not in the block, TSDB block. So you

01:08:12.945 --> 01:08:15.265
<v Speaker 1>only have data in the object storage after

01:08:15.265 --> 01:08:15.905
<v Speaker 1>three hours.

01:08:16.670 --> 01:08:18.590
<v Speaker 1>So that's why you need to still and

01:08:18.590 --> 01:08:20.029
<v Speaker 1>we will see that. You need to still

01:08:20.029 --> 01:08:22.269
<v Speaker 1>query prompt queues for this fresh data.

01:08:22.590 --> 01:08:24.750
<v Speaker 1>At least in this deployment model when you

01:08:24.750 --> 01:08:25.229
<v Speaker 1>have

01:08:25.869 --> 01:08:28.830
<v Speaker 1>just sidecar uploading the data from prompt queues.

01:08:28.830 --> 01:08:29.069
<v Speaker 1>Right?

01:08:30.585 --> 01:08:32.904
<v Speaker 1>So, yeah, let's actually try to fetch use

01:08:32.904 --> 01:08:33.944
<v Speaker 1>this data. Right?

01:08:36.505 --> 01:08:39.225
<v Speaker 1>So we have kind of two more components

01:08:39.225 --> 01:08:41.145
<v Speaker 1>to go and to one to actually fetch

01:08:41.145 --> 01:08:43.785
<v Speaker 1>the do the querying site against the object

01:08:43.785 --> 01:08:44.185
<v Speaker 1>storage,

01:08:44.650 --> 01:08:45.609
<v Speaker 1>which is

01:08:46.330 --> 01:08:49.130
<v Speaker 1>store gateway. Yeah. And this guy needs to

01:08:49.130 --> 01:08:51.290
<v Speaker 1>have access to menu,

01:08:51.530 --> 01:08:52.649
<v Speaker 1>just menu,

01:08:54.410 --> 01:08:55.930
<v Speaker 1>and expose gRPC port.

01:08:57.304 --> 01:08:59.064
<v Speaker 0>Okay. So that's Exposing.

01:08:59.545 --> 01:09:01.064
<v Speaker 1>One yeah. For

01:09:02.104 --> 01:09:03.224
<v Speaker 1>yeah. Correct.

01:09:05.465 --> 01:09:06.505
<v Speaker 0>And it needs

01:09:09.145 --> 01:09:11.385
<v Speaker 0>link menu menu.

01:09:11.385 --> 01:09:11.784
<v Speaker 0>Mhmm.

01:09:12.679 --> 01:09:14.439
<v Speaker 0>This fail is

01:09:15.080 --> 01:09:16.359
<v Speaker 0>fail. It's correct.

01:09:17.159 --> 01:09:17.800
<v Speaker 0>Yeah.

01:09:19.080 --> 01:09:20.199
<v Speaker 0>Oh, that's it.

01:09:20.760 --> 01:09:21.479
<v Speaker 1>Yep.

01:09:23.000 --> 01:09:24.840
<v Speaker 1>Okay. So this is a component. You can

01:09:24.840 --> 01:09:26.679
<v Speaker 1>scale that accordingly.

01:09:26.760 --> 01:09:27.479
<v Speaker 1>You can

01:09:28.845 --> 01:09:31.885
<v Speaker 1>you can have store gateway per each interval

01:09:31.885 --> 01:09:33.564
<v Speaker 1>of time. You can have

01:09:33.725 --> 01:09:37.085
<v Speaker 1>store gateway per different blocks. You can chart

01:09:37.085 --> 01:09:38.205
<v Speaker 1>store gateway

01:09:38.604 --> 01:09:41.640
<v Speaker 1>and tell that, hey. Have some consistent

01:09:41.640 --> 01:09:42.599
<v Speaker 1>charting

01:09:43.319 --> 01:09:45.880
<v Speaker 1>and and allow five, let's say, store gateways

01:09:45.880 --> 01:09:47.960
<v Speaker 1>to choose what blocks you are

01:09:49.319 --> 01:09:51.399
<v Speaker 1>you are responsible. The the store gateway is

01:09:51.399 --> 01:09:53.640
<v Speaker 1>for responsible, so you can, you know, horizontally

01:09:53.640 --> 01:09:54.360
<v Speaker 1>scale like this.

01:09:55.585 --> 01:09:56.864
<v Speaker 1>But let's actually

01:09:57.025 --> 01:09:59.744
<v Speaker 1>adjust the querier so you have that on

01:09:59.744 --> 01:10:01.824
<v Speaker 1>tutorial as well. Now we need to adjust

01:10:01.824 --> 01:10:04.304
<v Speaker 1>the the querier to know about this new

01:10:04.304 --> 01:10:06.224
<v Speaker 1>store API that just appeared.

01:10:06.465 --> 01:10:08.810
<v Speaker 1>So here, we just added a new dash

01:10:08.810 --> 01:10:10.410
<v Speaker 1>dash store. You can just copy this one,

01:10:10.410 --> 01:10:11.610
<v Speaker 1>just last flag,

01:10:13.530 --> 01:10:15.610
<v Speaker 1>and then we need to add accordingly

01:10:15.610 --> 01:10:17.850
<v Speaker 1>the link as well to this one. Yeah.

01:10:17.850 --> 01:10:20.410
<v Speaker 1>So this is an gRPC endpoint of the

01:10:20.730 --> 01:10:22.890
<v Speaker 1>store gateway. So let's do that.

01:10:23.690 --> 01:10:26.755
<v Speaker 0>Okay. So we are doing this.

01:10:27.235 --> 01:10:30.514
<v Speaker 0>Oh, yeah. I'll just type it. Store. Yeah.

01:10:32.114 --> 01:10:34.755
<v Speaker 1>This actually is yeah. Yeah. Good. Yeah. Fine.

01:10:36.790 --> 01:10:38.950
<v Speaker 0>Correct? A store And then we called that.

01:10:38.950 --> 01:10:41.110
<v Speaker 0>So And we need link as well. Yeah.

01:10:41.110 --> 01:10:41.590
<v Speaker 0>Yeah.

01:10:42.550 --> 01:10:43.270
<v Speaker 0>Link.

01:10:44.070 --> 01:10:44.710
<v Speaker 0>Store

01:10:45.190 --> 01:10:46.070
<v Speaker 0>gateway

01:10:46.310 --> 01:10:47.510
<v Speaker 0>from store.

01:10:47.830 --> 01:10:48.230
<v Speaker 0>Mhmm.

01:10:50.315 --> 01:10:51.515
<v Speaker 1>And let's,

01:10:52.395 --> 01:10:54.395
<v Speaker 1>yeah, let's run store gateway.

01:10:55.275 --> 01:10:56.955
<v Speaker 1>I think we run it already. Yeah. And

01:10:56.955 --> 01:10:59.595
<v Speaker 1>then Yeah. We do. Query and

01:11:00.635 --> 01:11:01.675
<v Speaker 1>run again. Yeah.

01:11:02.640 --> 01:11:05.199
<v Speaker 1>Yeah. Usually, it's just easier in Kubernetes where

01:11:05.199 --> 01:11:06.400
<v Speaker 1>you define this

01:11:07.920 --> 01:11:10.320
<v Speaker 1>infrastructure using code, unfortunately,

01:11:10.480 --> 01:11:12.640
<v Speaker 1>or, like, some YAML templates,

01:11:12.640 --> 01:11:13.199
<v Speaker 1>whatever.

01:11:13.920 --> 01:11:16.080
<v Speaker 1>But there is lots of manual work if

01:11:16.080 --> 01:11:17.840
<v Speaker 1>you are running Docker. Yeah. We have start.

01:11:17.840 --> 01:11:20.295
<v Speaker 1>Right? And you can see that announce labels

01:11:20.295 --> 01:11:21.094
<v Speaker 1>are now

01:11:21.414 --> 01:11:24.375
<v Speaker 1>three of them because we store in one

01:11:24.375 --> 01:11:25.814
<v Speaker 1>object storage, like,

01:11:26.375 --> 01:11:28.614
<v Speaker 1>we call it streams of data.

01:11:29.014 --> 01:11:31.210
<v Speaker 1>One stream per each unique.

01:11:31.770 --> 01:11:32.409
<v Speaker 1>Right?

01:11:33.450 --> 01:11:36.650
<v Speaker 1>And store actually properly even says how old

01:11:36.650 --> 01:11:39.050
<v Speaker 1>data you have. You have data from

01:11:39.450 --> 01:11:40.650
<v Speaker 1>year old time

01:11:41.130 --> 01:11:42.730
<v Speaker 1>until today. Right?

01:11:44.805 --> 01:11:48.325
<v Speaker 1>Cool. So let's play with it. Can

01:11:48.645 --> 01:11:51.605
<v Speaker 1>okay. Okay. Let's go to graph graph

01:11:52.405 --> 01:11:55.525
<v Speaker 1>graphing, and let's graph again one of the

01:11:55.525 --> 01:11:56.005
<v Speaker 1>metrics.

01:12:00.420 --> 01:12:04.260
<v Speaker 1>Cool. And now what is happening is that

01:12:06.980 --> 01:12:09.380
<v Speaker 1>okay. Well, this is actually expected.

01:12:09.619 --> 01:12:10.260
<v Speaker 1>Do graph.

01:12:11.945 --> 01:12:13.945
<v Speaker 1>Yeah. And I will tell you why. Because

01:12:13.945 --> 01:12:16.905
<v Speaker 1>you are checking you are checking the last

01:12:18.105 --> 01:12:21.464
<v Speaker 1>the recent data. However, Prometheus is not collecting

01:12:22.105 --> 01:12:25.224
<v Speaker 1>this artificial series. Right? It's collecting their own.

01:12:25.830 --> 01:12:27.590
<v Speaker 1>So this is why,

01:12:28.389 --> 01:12:30.550
<v Speaker 1>you know, this is in the block. Right?

01:12:31.190 --> 01:12:32.070
<v Speaker 0>Yeah. Okay.

01:12:33.110 --> 01:12:34.869
<v Speaker 0>I understand that. So if I change that

01:12:34.869 --> 01:12:36.469
<v Speaker 0>to year, we're gonna get data which is

01:12:36.469 --> 01:12:38.310
<v Speaker 0>coming from the object store, but that one

01:12:38.310 --> 01:12:41.715
<v Speaker 0>hour failed because we have now that data

01:12:41.715 --> 01:12:44.275
<v Speaker 0>now lives in the Prometheus memory.

01:12:45.635 --> 01:12:47.635
<v Speaker 1>Well and and to be honest, it's not

01:12:47.635 --> 01:12:50.755
<v Speaker 1>collected anymore because we artificially created the series

01:12:50.755 --> 01:12:52.995
<v Speaker 1>and we create artificial blocks.

01:12:53.075 --> 01:12:56.179
<v Speaker 1>Whatever is collected is actually its own

01:12:56.739 --> 01:12:59.620
<v Speaker 1>Prometheus metrics. It scrapes its itself. That's why

01:12:59.620 --> 01:13:01.380
<v Speaker 1>we don't have this particular. So there are

01:13:01.380 --> 01:13:03.540
<v Speaker 1>two reasons why we had don't have recent

01:13:03.540 --> 01:13:07.380
<v Speaker 1>data. However, let's go further and ensure this

01:13:07.380 --> 01:13:09.460
<v Speaker 1>comes from the bucket. Right? Because right now,

01:13:09.955 --> 01:13:12.675
<v Speaker 1>this query or funnels query into all of

01:13:12.675 --> 01:13:14.195
<v Speaker 1>these sources. However,

01:13:14.594 --> 01:13:17.554
<v Speaker 1>I can, let's quickly showcase the debug kind

01:13:17.554 --> 01:13:19.395
<v Speaker 1>of way of of of doing this. So

01:13:19.395 --> 01:13:20.914
<v Speaker 1>if you go to new UI,

01:13:21.554 --> 01:13:23.554
<v Speaker 1>this is kind of new React UI, which

01:13:23.554 --> 01:13:25.949
<v Speaker 1>is pretty similar. Unfortunately, you need to type

01:13:25.949 --> 01:13:27.550
<v Speaker 1>the metric again. Continue.

01:13:29.710 --> 01:13:32.030
<v Speaker 1>Yep. You need to go to graph again.

01:13:34.190 --> 01:13:36.030
<v Speaker 1>Maybe I because it's recent data, so you

01:13:36.030 --> 01:13:38.435
<v Speaker 1>won't see it. Correct. And now you need

01:13:38.435 --> 01:13:41.155
<v Speaker 1>one a year, and enter doesn't work into

01:13:41.155 --> 01:13:43.155
<v Speaker 1>to execute. Well, I think we need to

01:13:44.275 --> 01:13:46.195
<v Speaker 1>I have this fixed.

01:13:46.515 --> 01:13:48.195
<v Speaker 1>Okay. And now we can see the same

01:13:48.195 --> 01:13:50.435
<v Speaker 1>data. Now let's do this. Let's go above

01:13:50.820 --> 01:13:52.980
<v Speaker 1>and scroll up a little bit. There is,

01:13:52.980 --> 01:13:54.659
<v Speaker 1>like, enable store filtering.

01:13:55.700 --> 01:13:58.340
<v Speaker 1>This allows us to filter stores. So let's

01:13:58.340 --> 01:13:58.900
<v Speaker 1>pick

01:13:59.540 --> 01:14:01.700
<v Speaker 1>any of those and, like, four is the

01:14:01.700 --> 01:14:02.340
<v Speaker 1>store gateway,

01:14:02.845 --> 01:14:05.165
<v Speaker 1>or or we can pick one yeah. Pick

01:14:05.165 --> 01:14:07.405
<v Speaker 1>this just to show that we'll only route

01:14:07.405 --> 01:14:08.045
<v Speaker 1>to

01:14:08.605 --> 01:14:10.685
<v Speaker 1>to first from queues. And as you can

01:14:10.685 --> 01:14:12.844
<v Speaker 1>see, the series is e one

01:14:13.085 --> 01:14:16.285
<v Speaker 1>team u. Right? Mhmm. This will route only

01:14:16.285 --> 01:14:18.219
<v Speaker 1>to one of those store APIs if you

01:14:18.219 --> 01:14:20.300
<v Speaker 1>want to debug what is coming from where.

01:14:20.300 --> 01:14:20.780
<v Speaker 1>Right?

01:14:21.980 --> 01:14:23.979
<v Speaker 0>And if I change this to

01:14:24.619 --> 01:14:27.260
<v Speaker 0>this one? Then it's only a bucket data.

01:14:28.300 --> 01:14:28.939
<v Speaker 1>Right?

01:14:29.820 --> 01:14:30.860
<v Speaker 1>It's fine.

01:14:31.420 --> 01:14:32.139
<v Speaker 1>Okay.

01:14:32.540 --> 01:14:33.260
<v Speaker 1>And

01:14:33.855 --> 01:14:37.055
<v Speaker 1>we have twelve minutes, I guess. Right?

01:14:37.295 --> 01:14:38.015
<v Speaker 0>Yes.

01:14:38.975 --> 01:14:40.895
<v Speaker 1>And we could quickly,

01:14:41.055 --> 01:14:44.335
<v Speaker 1>and it'll be super nice to add

01:14:44.335 --> 01:14:46.335
<v Speaker 1>a last component, which is kind of interesting

01:14:46.335 --> 01:14:49.010
<v Speaker 1>here for long term maintenance,

01:14:49.010 --> 01:14:49.969
<v Speaker 1>compaction,

01:14:50.450 --> 01:14:51.170
<v Speaker 1>and

01:14:52.290 --> 01:14:55.250
<v Speaker 1>the duplication offline duplication as well and

01:14:56.050 --> 01:14:56.930
<v Speaker 1>downsampling,

01:14:56.930 --> 01:14:59.250
<v Speaker 1>lots of features. So this is a compactor.

01:14:59.355 --> 01:15:01.275
<v Speaker 1>So kind of, you know, local compaction of

01:15:01.275 --> 01:15:03.835
<v Speaker 1>raw materials just taken into microservice again.

01:15:04.075 --> 01:15:05.514
<v Speaker 1>It has to be singleton.

01:15:06.155 --> 01:15:08.235
<v Speaker 1>It has only HTTP address because there is

01:15:08.235 --> 01:15:09.994
<v Speaker 1>not no gRPC

01:15:10.475 --> 01:15:12.555
<v Speaker 1>kind of it doesn't expose any metrics. It

01:15:12.555 --> 01:15:14.155
<v Speaker 1>just works on the bucket.

01:15:14.570 --> 01:15:16.250
<v Speaker 1>And and periodically,

01:15:16.250 --> 01:15:18.329
<v Speaker 1>it's like a batch job, but just periodic

01:15:18.330 --> 01:15:20.489
<v Speaker 1>that performs those operations.

01:15:20.810 --> 01:15:22.410
<v Speaker 1>Now what we need to do, we need

01:15:22.410 --> 01:15:24.090
<v Speaker 1>to probably link to menu.

01:15:24.650 --> 01:15:26.410
<v Speaker 1>That's the only thing because it operates on

01:15:26.410 --> 01:15:28.090
<v Speaker 1>bucket, and we should be fine.

01:15:33.365 --> 01:15:36.165
<v Speaker 1>Okay. Before we start, let's talk about quickly

01:15:36.165 --> 01:15:38.565
<v Speaker 1>the the flags because they are not trivial.

01:15:38.645 --> 01:15:39.764
<v Speaker 1>The compact

01:15:40.165 --> 01:15:42.565
<v Speaker 1>as a is a subcomment, then we have

01:15:42.565 --> 01:15:44.965
<v Speaker 1>wait. So make sure it is, like, in

01:15:44.965 --> 01:15:45.445
<v Speaker 1>a

01:15:46.780 --> 01:15:49.020
<v Speaker 1>in a long running service manner. It's not

01:15:49.020 --> 01:15:51.100
<v Speaker 1>like a just quick batch of, hey. Do

01:15:51.100 --> 01:15:52.380
<v Speaker 1>the operation and done.

01:15:52.780 --> 01:15:54.540
<v Speaker 1>And then we make

01:15:54.540 --> 01:15:56.700
<v Speaker 1>it more often. So the interval is pretty

01:15:56.700 --> 01:15:58.140
<v Speaker 1>quick. It's half a minute

01:15:58.655 --> 01:16:01.055
<v Speaker 1>for all those compactions and downsampling.

01:16:01.055 --> 01:16:04.015
<v Speaker 1>We change consistency delay. That's I could talk,

01:16:04.015 --> 01:16:05.535
<v Speaker 1>you know, long about this, but, essentially, this

01:16:05.535 --> 01:16:06.415
<v Speaker 1>is feature for

01:16:06.815 --> 01:16:09.615
<v Speaker 1>buckets that are not eventually con not not

01:16:09.615 --> 01:16:11.055
<v Speaker 1>strongly consistent

01:16:11.420 --> 01:16:13.820
<v Speaker 1>because not all of them are. Right? So

01:16:13.900 --> 01:16:17.020
<v Speaker 1>to resolve this without strong coordination

01:16:17.180 --> 01:16:19.580
<v Speaker 1>between components and stuff like that, which makes

01:16:19.580 --> 01:16:22.060
<v Speaker 1>it super complex in distributed system world,

01:16:22.540 --> 01:16:25.900
<v Speaker 1>we are introduce other mechanics like delays

01:16:27.075 --> 01:16:28.755
<v Speaker 1>to wait until the

01:16:29.315 --> 01:16:32.195
<v Speaker 1>consistency will be up. Right? So we disabled

01:16:32.195 --> 01:16:33.395
<v Speaker 1>that. So we

01:16:34.355 --> 01:16:36.995
<v Speaker 1>expect we essentially use the blocks

01:16:37.795 --> 01:16:40.515
<v Speaker 1>no matter where it when it were uploaded.

01:16:41.050 --> 01:16:43.290
<v Speaker 1>So we assume that the the the bucket

01:16:43.290 --> 01:16:46.170
<v Speaker 1>is consistent because it's file system. Right? Almost.

01:16:47.290 --> 01:16:49.690
<v Speaker 1>And that's it. Let's try to run this,

01:16:49.929 --> 01:16:51.769
<v Speaker 1>and it will allow us to

01:16:52.250 --> 01:16:54.170
<v Speaker 1>so it will try to compact things,

01:16:54.409 --> 01:16:55.850
<v Speaker 1>but it should actually quickly

01:16:57.565 --> 01:16:59.164
<v Speaker 1>downsample data, hopefully.

01:16:59.885 --> 01:17:02.364
<v Speaker 1>And I want to show one more kind

01:17:02.364 --> 01:17:03.885
<v Speaker 1>of feature of it.

01:17:05.645 --> 01:17:08.125
<v Speaker 1>Cool. Looks like How we do we see

01:17:08.125 --> 01:17:08.925
<v Speaker 0>the

01:17:09.810 --> 01:17:11.970
<v Speaker 0>compact? I I guess this is what Okay.

01:17:11.970 --> 01:17:14.450
<v Speaker 1>No. No. No. Yes. We can see operation,

01:17:14.450 --> 01:17:16.370
<v Speaker 1>but there is cool cool stuff. Go to

01:17:16.370 --> 01:17:18.530
<v Speaker 1>the HTP port of the

01:17:18.930 --> 01:17:19.810
<v Speaker 1>compactor,

01:17:20.610 --> 01:17:23.330
<v Speaker 1>which is oh, I don't remember. One One

01:17:23.330 --> 01:17:24.690
<v Speaker 0>nine zero nine five.

01:17:25.525 --> 01:17:26.165
<v Speaker 1>Yeah.

01:17:28.245 --> 01:17:31.525
<v Speaker 1>And, sorry, and slash load load it.

01:17:34.485 --> 01:17:35.204
<v Speaker 1>Perfect.

01:17:35.765 --> 01:17:37.685
<v Speaker 1>So this is a and kind of and

01:17:37.685 --> 01:17:40.245
<v Speaker 1>bucket view, but from the perspective of being

01:17:40.245 --> 01:17:41.045
<v Speaker 1>block aware.

01:17:41.500 --> 01:17:44.140
<v Speaker 1>Actually, go to new UI. It's much nicer.

01:17:44.300 --> 01:17:46.140
<v Speaker 1>We are kind of in transition period.

01:17:46.300 --> 01:17:48.060
<v Speaker 1>So you can click on each of those

01:17:48.060 --> 01:17:51.500
<v Speaker 1>block. Stores are blocks and eyes of it.

01:17:51.500 --> 01:17:52.460
<v Speaker 1>You can click of them,

01:17:53.995 --> 01:17:56.315
<v Speaker 1>and it will show you all the metadata.

01:17:56.315 --> 01:17:57.915
<v Speaker 1>So its ID,

01:17:58.795 --> 01:17:59.595
<v Speaker 1>duration,

01:17:59.995 --> 01:18:02.715
<v Speaker 1>how many series it have, how many chunks,

01:18:02.715 --> 01:18:05.515
<v Speaker 1>samples, what resolution you have, and

01:18:06.120 --> 01:18:08.199
<v Speaker 1>labels. So you can see we already within

01:18:08.199 --> 01:18:10.519
<v Speaker 1>one stream, we have three things.

01:18:11.320 --> 01:18:13.800
<v Speaker 1>One is the raw data, but what you

01:18:13.800 --> 01:18:16.280
<v Speaker 1>clicked is actually a resolution. And this is

01:18:16.280 --> 01:18:19.080
<v Speaker 1>one hour resolution. I can see by resolution

01:18:19.080 --> 01:18:20.600
<v Speaker 1>equals those are seconds,

01:18:22.415 --> 01:18:24.175
<v Speaker 1>something something seconds. Right?

01:18:25.295 --> 01:18:28.015
<v Speaker 1>And so we can see it already downsampled

01:18:28.015 --> 01:18:30.495
<v Speaker 1>everything because, yeah, the blocks were super small,

01:18:30.495 --> 01:18:31.535
<v Speaker 1>so it was quick.

01:18:31.775 --> 01:18:33.775
<v Speaker 1>So this is how you dev up stuff

01:18:33.775 --> 01:18:35.615
<v Speaker 1>on your object storage. Was super cool. It's

01:18:35.615 --> 01:18:37.500
<v Speaker 1>super easy. We want to extend this view

01:18:37.500 --> 01:18:39.659
<v Speaker 1>as well. We want to make sure you

01:18:39.659 --> 01:18:42.219
<v Speaker 1>can even download block from this point of

01:18:42.219 --> 01:18:43.260
<v Speaker 1>view or

01:18:43.500 --> 01:18:45.980
<v Speaker 1>maybe do some actions like delete series, delete

01:18:45.980 --> 01:18:49.099
<v Speaker 1>block, or but you it's essentially a bucket

01:18:49.099 --> 01:18:51.099
<v Speaker 1>viewer like you have on AWS,

01:18:51.099 --> 01:18:52.539
<v Speaker 1>but block aware. Right?

01:18:53.815 --> 01:18:54.854
<v Speaker 0>Awesome.

01:18:55.735 --> 01:18:57.415
<v Speaker 0>So can we I I

01:18:58.454 --> 01:18:59.655
<v Speaker 0>I'm trying to understand

01:19:00.295 --> 01:19:03.094
<v Speaker 0>this. What do the colors represent here?

01:19:03.735 --> 01:19:04.935
<v Speaker 1>Different resolution.

01:19:05.700 --> 01:19:06.340
<v Speaker 1>Right?

01:19:06.660 --> 01:19:09.380
<v Speaker 1>So this is the resolution zero. So raw

01:19:09.380 --> 01:19:12.260
<v Speaker 1>data, whatever scraping interval was, this is

01:19:13.219 --> 01:19:15.699
<v Speaker 1>raw resolution, which means that

01:19:16.500 --> 01:19:17.940
<v Speaker 1>you have all the samples.

01:19:18.260 --> 01:19:19.540
<v Speaker 1>When you go to the

01:19:20.325 --> 01:19:21.844
<v Speaker 1>lower resolution,

01:19:22.005 --> 01:19:24.244
<v Speaker 1>it has it is still accurate.

01:19:24.325 --> 01:19:27.845
<v Speaker 1>However, it only covers the aggregates. Right? So

01:19:27.845 --> 01:19:28.324
<v Speaker 1>it,

01:19:28.885 --> 01:19:32.005
<v Speaker 1>have all the averages and maximum and minimum

01:19:32.005 --> 01:19:34.005
<v Speaker 1>to make sure your queries are accurate.

01:19:34.700 --> 01:19:36.620
<v Speaker 1>However, it doesn't cover,

01:19:37.340 --> 01:19:39.660
<v Speaker 1>all the samples. Like, you don't know exactly

01:19:39.660 --> 01:19:41.420
<v Speaker 1>in what moment this happened.

01:19:41.660 --> 01:19:43.740
<v Speaker 1>In the resolution five minutes, you only have

01:19:43.740 --> 01:19:45.340
<v Speaker 1>one sample per five minute.

01:19:46.235 --> 01:19:48.474
<v Speaker 1>And then in the blue thing, it is

01:19:48.474 --> 01:19:50.954
<v Speaker 1>one hour resolution. You only have one sample

01:19:50.954 --> 01:19:51.594
<v Speaker 1>for

01:19:51.755 --> 01:19:52.715
<v Speaker 1>one hour.

01:19:53.114 --> 01:19:55.275
<v Speaker 1>And this is super crucial when you are

01:19:55.275 --> 01:19:57.594
<v Speaker 1>querying long time ranges. So, actually, let's go

01:19:57.594 --> 01:19:59.275
<v Speaker 1>to the querier, and I I will show

01:19:59.275 --> 01:19:59.434
<v Speaker 1>you.

01:20:02.330 --> 01:20:02.889
<v Speaker 1>So

01:20:03.929 --> 01:20:05.050
<v Speaker 1>okay. Now

01:20:05.610 --> 01:20:08.010
<v Speaker 1>this is this is good. We are actually

01:20:08.090 --> 01:20:08.809
<v Speaker 1>only

01:20:10.010 --> 01:20:12.330
<v Speaker 1>querying the bucket because only in bucket we

01:20:12.330 --> 01:20:14.730
<v Speaker 1>have downsample data. So that's okay. Let's keep

01:20:14.730 --> 01:20:17.125
<v Speaker 1>this filter on. And now we are

01:20:17.525 --> 01:20:19.845
<v Speaker 1>querying only raw data because you have this

01:20:19.845 --> 01:20:22.165
<v Speaker 1>only raw data selection. You see?

01:20:22.485 --> 01:20:23.205
<v Speaker 0>Yep.

01:20:23.765 --> 01:20:26.085
<v Speaker 1>Try to execute it a couple times first,

01:20:27.125 --> 01:20:29.740
<v Speaker 1>and then you see the load time. Let's

01:20:29.740 --> 01:20:32.300
<v Speaker 1>remember this. This is, like, six hundred milliseconds.

01:20:32.300 --> 01:20:35.660
<v Speaker 1>Right? Mhmm. It's pretty quick because series, there

01:20:35.660 --> 01:20:37.420
<v Speaker 1>are you know, blocks are small. Now take

01:20:37.420 --> 01:20:40.780
<v Speaker 1>it to the only raw data and max

01:20:40.780 --> 01:20:43.500
<v Speaker 1>five minutes downsampling. So this will use five

01:20:43.500 --> 01:20:44.220
<v Speaker 1>minute

01:20:45.175 --> 01:20:46.215
<v Speaker 1>resolution

01:20:46.935 --> 01:20:49.175
<v Speaker 1>and execute couple of times as well.

01:20:50.135 --> 01:20:52.135
<v Speaker 1>It should be actually quicker. For me, was

01:20:52.135 --> 01:20:54.775
<v Speaker 1>quicker. But okay. Six times quicker. Right? Because,

01:20:54.775 --> 01:20:56.695
<v Speaker 1>actually, there are six probably

01:20:56.935 --> 01:20:59.735
<v Speaker 1>around six samples less times less. Right?

01:21:00.880 --> 01:21:01.679
<v Speaker 0>Yep.

01:21:02.480 --> 01:21:04.480
<v Speaker 1>And if you go to one hour, it

01:21:04.480 --> 01:21:05.520
<v Speaker 1>will be broken,

01:21:05.600 --> 01:21:06.800
<v Speaker 1>and this is the same.

01:21:07.920 --> 01:21:08.720
<v Speaker 1>Somehow,

01:21:08.720 --> 01:21:11.600
<v Speaker 1>this artificial data doesn't work well with one

01:21:11.600 --> 01:21:13.200
<v Speaker 1>hour down sampling, and I need to debug

01:21:13.200 --> 01:21:13.600
<v Speaker 1>this

01:21:14.145 --> 01:21:15.505
<v Speaker 1>Same moment. Okay.

01:21:15.985 --> 01:21:17.585
<v Speaker 0>Let's just I'll go back to five. Oh,

01:21:17.585 --> 01:21:19.745
<v Speaker 0>look. Yeah. Yeah. It would be cool. Let's

01:21:19.745 --> 01:21:20.385
<v Speaker 0>cut it.

01:21:21.585 --> 01:21:23.825
<v Speaker 1>Anyway, this is what I wanted to show

01:21:23.825 --> 01:21:24.385
<v Speaker 1>you, really.

01:21:25.760 --> 01:21:27.360
<v Speaker 1>And as you can see, if you go

01:21:27.360 --> 01:21:30.400
<v Speaker 1>to to through roll roll data or downsampling,

01:21:30.400 --> 01:21:32.720
<v Speaker 1>within one year, it's accurate. You don't need

01:21:32.720 --> 01:21:35.360
<v Speaker 1>so many samples. It it cannot render anymore

01:21:35.360 --> 01:21:36.320
<v Speaker 1>even. Right?

01:21:37.600 --> 01:21:39.920
<v Speaker 1>So there is no need to get and

01:21:39.920 --> 01:21:42.255
<v Speaker 1>select from the back end so many samples.

01:21:42.255 --> 01:21:44.415
<v Speaker 1>That's why it's it's it's it's much efficient

01:21:44.415 --> 01:21:46.014
<v Speaker 1>and and actually

01:21:46.335 --> 01:21:47.614
<v Speaker 1>cheaper as well. Right?

01:21:50.335 --> 01:21:51.054
<v Speaker 0>Okay.

01:21:52.495 --> 01:21:54.015
<v Speaker 1>So one one more thing I want to

01:21:54.015 --> 01:21:55.295
<v Speaker 1>mention is that, you know, this is like

01:21:55.295 --> 01:21:58.389
<v Speaker 1>a global view tunnels deployment. There is also

01:21:58.870 --> 01:22:00.310
<v Speaker 1>this approach of

01:22:00.630 --> 01:22:03.670
<v Speaker 1>configuring permit use to push data, remote write

01:22:03.670 --> 01:22:05.350
<v Speaker 1>data, like Cortex is doing,

01:22:06.390 --> 01:22:07.030
<v Speaker 1>to

01:22:07.270 --> 01:22:08.230
<v Speaker 1>to your

01:22:08.390 --> 01:22:09.830
<v Speaker 1>component called receiver,

01:22:10.815 --> 01:22:12.975
<v Speaker 1>which is then uploading to back end and

01:22:12.975 --> 01:22:15.535
<v Speaker 1>connecting to query on all of this. So

01:22:15.535 --> 01:22:18.175
<v Speaker 1>this is also flexible on that, but this

01:22:18.175 --> 01:22:19.695
<v Speaker 1>is kind of the default mode you can

01:22:19.695 --> 01:22:20.975
<v Speaker 1>run Thanos with.

01:22:21.215 --> 01:22:22.015
<v Speaker 0>Yeah.

01:22:22.255 --> 01:22:23.295
<v Speaker 0>Okay. Is

01:22:24.655 --> 01:22:25.455
<v Speaker 0>that is that everything?

01:22:26.199 --> 01:22:27.559
<v Speaker 1>Looks like it. Yeah.

01:22:28.679 --> 01:22:30.840
<v Speaker 0>That? We can well, we can we can

01:22:31.000 --> 01:22:32.679
<v Speaker 1>if you want, we can play more. We

01:22:32.679 --> 01:22:35.159
<v Speaker 1>can break up. We can

01:22:35.320 --> 01:22:36.760
<v Speaker 0>Oh, no. No. No. No. I was I

01:22:36.760 --> 01:22:39.960
<v Speaker 0>was being entirely sarcastic. We have covered so

01:22:39.960 --> 01:22:42.415
<v Speaker 0>so much. That is a lot of awesome

01:22:42.415 --> 01:22:45.614
<v Speaker 0>information and I I love the categorical work

01:22:45.614 --> 01:22:47.135
<v Speaker 0>that you provided here to walk us through

01:22:47.135 --> 01:22:48.895
<v Speaker 0>each each of those steps. I think that's

01:22:48.895 --> 01:22:52.015
<v Speaker 0>gonna be infinitely valuable to people. I just

01:22:52.015 --> 01:22:53.375
<v Speaker 0>wanna let's try and see if we can

01:22:53.375 --> 01:22:55.375
<v Speaker 0>surmise this in in a couple of minutes.

01:22:55.375 --> 01:22:58.190
<v Speaker 0>So what your categorical tutorial has walked us

01:22:58.190 --> 01:22:59.309
<v Speaker 0>through is one,

01:22:59.870 --> 01:23:01.949
<v Speaker 0>using Thanos bench to generate

01:23:02.030 --> 01:23:02.830
<v Speaker 0>artificial

01:23:02.830 --> 01:23:04.110
<v Speaker 0>time series data

01:23:04.670 --> 01:23:06.590
<v Speaker 0>at any scale that we want. Like we've

01:23:06.590 --> 01:23:07.949
<v Speaker 0>seen the flags there, we could have tweaked

01:23:07.949 --> 01:23:09.469
<v Speaker 0>that and played around with it. That was

01:23:09.469 --> 01:23:11.550
<v Speaker 0>really cool based on a YAML definition.

01:23:12.245 --> 01:23:13.205
<v Speaker 0>We then

01:23:13.365 --> 01:23:16.725
<v Speaker 0>started three different Prometheus, one in a European

01:23:16.725 --> 01:23:19.365
<v Speaker 0>replica situation, replica zero and replica one for

01:23:19.365 --> 01:23:21.685
<v Speaker 0>high availability of that Prometheus region.

01:23:22.085 --> 01:23:24.485
<v Speaker 0>And just another Prometheus, which was our US

01:23:24.485 --> 01:23:25.125
<v Speaker 0>region data.

01:23:26.050 --> 01:23:29.250
<v Speaker 0>The tutorial then guides us through deploying a

01:23:29.250 --> 01:23:32.530
<v Speaker 0>sidecar or another container in this example, which

01:23:32.530 --> 01:23:34.450
<v Speaker 0>acts as a proxy to each of those

01:23:34.450 --> 01:23:35.410
<v Speaker 0>Prometheus

01:23:35.650 --> 01:23:38.545
<v Speaker 0>followed by a deployment of the Thanos querier,

01:23:38.545 --> 01:23:40.784
<v Speaker 0>which speaks to the sidecars and fetches the

01:23:40.784 --> 01:23:41.824
<v Speaker 0>data doing

01:23:41.905 --> 01:23:43.184
<v Speaker 0>de duplication

01:23:43.184 --> 01:23:45.984
<v Speaker 0>based on the label configuration that we provide.

01:23:46.864 --> 01:23:47.984
<v Speaker 0>See that alone,

01:23:48.145 --> 01:23:49.025
<v Speaker 0>would have been awesome.

01:23:50.400 --> 01:23:52.400
<v Speaker 0>But then you just you kept it coming.

01:23:52.400 --> 01:23:54.800
<v Speaker 0>We then looked at how we could use

01:23:54.800 --> 01:23:57.440
<v Speaker 0>the new UI. We got block storage through

01:23:57.440 --> 01:23:59.680
<v Speaker 0>many or any other s three compatible store

01:23:59.680 --> 01:24:01.760
<v Speaker 0>and then you even threw in some awesome

01:24:01.760 --> 01:24:04.925
<v Speaker 0>downsampling at the end. Like there is so

01:24:04.925 --> 01:24:07.644
<v Speaker 0>much valuable information here that I'm gonna have

01:24:07.644 --> 01:24:09.324
<v Speaker 0>to rewatch this episode a few times I

01:24:09.324 --> 01:24:11.164
<v Speaker 0>think just to consume it all. That was

01:24:11.164 --> 01:24:13.244
<v Speaker 0>awesome. Thank you so much for that.

01:24:14.684 --> 01:24:17.405
<v Speaker 0>If anyone has if anyone has questions, you've

01:24:17.405 --> 01:24:18.525
<v Speaker 0>got a couple of minutes to get them

01:24:18.525 --> 01:24:21.060
<v Speaker 0>in before we wrap up and we'll do

01:24:21.060 --> 01:24:22.499
<v Speaker 0>our best to tackle them.

01:24:22.900 --> 01:24:25.060
<v Speaker 0>I will make sure the show notes have

01:24:25.060 --> 01:24:27.219
<v Speaker 0>all these links as well, links to the

01:24:27.219 --> 01:24:27.939
<v Speaker 0>docs.

01:24:29.060 --> 01:24:30.900
<v Speaker 0>That was really really cool. Thank you for

01:24:30.900 --> 01:24:32.500
<v Speaker 0>taking the time to put that together and

01:24:32.500 --> 01:24:34.179
<v Speaker 0>then not only that but walk me through

01:24:34.179 --> 01:24:37.185
<v Speaker 0>it and live debugging our container setup as

01:24:37.185 --> 01:24:38.625
<v Speaker 0>well for a Mac, which was just made

01:24:38.625 --> 01:24:40.545
<v Speaker 0>it all a little bit more fun. Yeah.

01:24:42.225 --> 01:24:43.265
<v Speaker 1>Yeah. You're welcome.

01:24:43.825 --> 01:24:45.825
<v Speaker 1>All of this should be part of the

01:24:45.825 --> 01:24:49.650
<v Speaker 1>official Katakoda tutorials for Thanos, hopefully. So this

01:24:49.650 --> 01:24:51.090
<v Speaker 1>work was not wasted,

01:24:51.250 --> 01:24:53.170
<v Speaker 1>not a waste of time, and only one

01:24:53.170 --> 01:24:54.370
<v Speaker 1>of timing

01:24:54.370 --> 01:24:55.010
<v Speaker 1>thing.

01:24:55.250 --> 01:24:57.010
<v Speaker 1>We it will be useful for people

01:24:58.530 --> 01:25:01.489
<v Speaker 1>because we went for that. Right? So that's

01:25:01.489 --> 01:25:03.330
<v Speaker 1>that's pretty long term useful as well.

01:25:05.275 --> 01:25:07.195
<v Speaker 0>Yeah. I I I I can immediately see

01:25:07.195 --> 01:25:09.355
<v Speaker 0>the the problems that, you know, Thanos is

01:25:09.355 --> 01:25:11.675
<v Speaker 0>is bringing to the Prometheus setup. I think,

01:25:11.675 --> 01:25:13.675
<v Speaker 0>you know, everyone running Kubernetes is in this

01:25:13.675 --> 01:25:15.675
<v Speaker 0>situation where they want to improve their observability

01:25:15.675 --> 01:25:17.930
<v Speaker 0>and their monitoring. And, you know, the the

01:25:17.930 --> 01:25:19.210
<v Speaker 0>tools that are coming out to help us

01:25:19.210 --> 01:25:20.810
<v Speaker 0>do that, I think, is just phenomenal. So,

01:25:20.810 --> 01:25:22.250
<v Speaker 0>you know, I also thank you for your

01:25:22.250 --> 01:25:24.810
<v Speaker 0>your work on these projects as well. I'm

01:25:24.810 --> 01:25:25.930
<v Speaker 0>making this almost

01:25:27.130 --> 01:25:29.370
<v Speaker 0>really consumable to anybody that just wants to

01:25:29.370 --> 01:25:32.315
<v Speaker 0>improve their setup. So that's great. Yeah. Yeah.

01:25:32.315 --> 01:25:34.554
<v Speaker 1>And and but, you know, there are still

01:25:34.554 --> 01:25:36.715
<v Speaker 1>lots of things to do. So please, you

01:25:36.715 --> 01:25:38.954
<v Speaker 1>are welcome to contribute, give feedback.

01:25:39.594 --> 01:25:42.715
<v Speaker 1>We are exploring way to get those metrics

01:25:42.715 --> 01:25:43.114
<v Speaker 1>data

01:25:43.660 --> 01:25:46.380
<v Speaker 1>into analytic platforms because since you have long

01:25:46.380 --> 01:25:48.460
<v Speaker 1>term, you know, duration of the metrics, you

01:25:48.460 --> 01:25:49.980
<v Speaker 1>want to leverage that for

01:25:50.220 --> 01:25:51.739
<v Speaker 1>reporting, billing,

01:25:51.980 --> 01:25:53.980
<v Speaker 1>or really just artificial

01:25:53.980 --> 01:25:55.340
<v Speaker 1>machine learning, whatever,

01:25:55.915 --> 01:25:56.715
<v Speaker 1>AI.

01:25:57.035 --> 01:25:59.355
<v Speaker 1>So we are doing lots of work on

01:25:59.355 --> 01:25:59.835
<v Speaker 1>that.

01:26:00.875 --> 01:26:03.195
<v Speaker 1>And we all we do all of those

01:26:03.195 --> 01:26:05.995
<v Speaker 1>in the seek observability meetings, which are

01:26:06.235 --> 01:26:08.555
<v Speaker 1>kind of announced on the CNCF page. So

01:26:08.555 --> 01:26:09.755
<v Speaker 1>please feel free

01:26:10.330 --> 01:26:12.330
<v Speaker 1>to to join us as well and learn

01:26:12.330 --> 01:26:15.450
<v Speaker 1>more about those. But yeah. And, yeah, thank

01:26:15.450 --> 01:26:17.210
<v Speaker 1>you, David, for for having me. I think

01:26:17.210 --> 01:26:19.290
<v Speaker 1>it's super, super useful for everyone to keep

01:26:19.290 --> 01:26:20.090
<v Speaker 1>doing this.

01:26:20.650 --> 01:26:22.650
<v Speaker 1>I can learn about CNCF project I never

01:26:22.650 --> 01:26:25.485
<v Speaker 1>seen as well. So That's cool. I know.

01:26:25.485 --> 01:26:27.245
<v Speaker 0>I I I love that I've been working

01:26:27.245 --> 01:26:29.005
<v Speaker 0>and focusing so much effort on the show

01:26:29.005 --> 01:26:31.085
<v Speaker 0>the last few months because there's just so

01:26:31.085 --> 01:26:33.805
<v Speaker 0>many awesome projects in the CNCF landscape and

01:26:33.805 --> 01:26:35.645
<v Speaker 0>you know, like getting people like yourself, the

01:26:35.645 --> 01:26:37.325
<v Speaker 0>experts that are doing this day in and

01:26:37.325 --> 01:26:39.460
<v Speaker 0>day out and having them not just, you

01:26:39.460 --> 01:26:41.300
<v Speaker 0>know, do the technical walk throughs, but bringing

01:26:41.300 --> 01:26:43.140
<v Speaker 0>your knowledge and your experience and sharing that

01:26:43.140 --> 01:26:45.060
<v Speaker 0>with people, I think is incredibly valuable as

01:26:45.060 --> 01:26:45.780
<v Speaker 0>well. So

01:26:46.180 --> 01:26:48.420
<v Speaker 1>Yeah. Totally. And I think the problem is

01:26:48.420 --> 01:26:50.260
<v Speaker 1>that they the those projects

01:26:50.835 --> 01:26:53.635
<v Speaker 1>and and maintainers between I mean, you know,

01:26:53.635 --> 01:26:56.515
<v Speaker 1>there's really no communication between those projects. Everyone

01:26:56.515 --> 01:26:58.675
<v Speaker 1>has its own echo chamber, and this is

01:26:58.675 --> 01:27:00.595
<v Speaker 1>really bad. This is really sad as well.

01:27:00.755 --> 01:27:02.435
<v Speaker 1>And not that they do that on purpose.

01:27:02.435 --> 01:27:04.435
<v Speaker 1>It just people are busy. Right? So Yeah.

01:27:04.580 --> 01:27:06.900
<v Speaker 1>It should be amazing to just to share

01:27:07.380 --> 01:27:09.860
<v Speaker 1>the same problem and solutions we have, and

01:27:09.860 --> 01:27:12.340
<v Speaker 1>we solve the same problem. So I'm doing

01:27:12.340 --> 01:27:14.580
<v Speaker 1>your work. Actually, yeah, pretty sure I'm pretty

01:27:14.580 --> 01:27:15.940
<v Speaker 1>sure it helps a lot as well on

01:27:15.940 --> 01:27:17.060
<v Speaker 1>this on this point.

01:27:18.495 --> 01:27:19.135
<v Speaker 0>Okay.

01:27:19.695 --> 01:27:21.455
<v Speaker 0>Well, thank you for your time. We've been

01:27:21.455 --> 01:27:22.574
<v Speaker 0>a little bit over, but I think it

01:27:22.574 --> 01:27:25.135
<v Speaker 0>was definitely worth it. Remember, people check out

01:27:25.135 --> 01:27:27.535
<v Speaker 0>the sec observability of the invites in the

01:27:27.535 --> 01:27:30.429
<v Speaker 0>calendar. Get contributing there. Keep an eye on

01:27:30.429 --> 01:27:32.429
<v Speaker 0>the Thanos mentoring program if you're new to

01:27:32.429 --> 01:27:34.510
<v Speaker 0>open source at Thanos and want to go

01:27:34.510 --> 01:27:35.550
<v Speaker 0>through that program.

01:27:35.869 --> 01:27:38.270
<v Speaker 0>And again, thank you for joining me. Have

01:27:38.270 --> 01:27:39.469
<v Speaker 0>a great day and I will speak to

01:27:39.469 --> 01:27:41.550
<v Speaker 0>you again soon. Thank you. Have a great

01:27:41.550 --> 01:27:43.150
<v Speaker 1>as well. Cheers. Bye. Bye bye.
