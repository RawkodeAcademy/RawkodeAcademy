WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: a23b0d0c-ae9a-44be-bc3d-91f3de818477
Created: 2025-04-29T21:09:18.521Z
Duration: 6265.7485
Channels: 1

00:01:24.680 --> 00:01:25.560
<v Speaker 0>Hello,

00:01:25.720 --> 00:01:28.360
<v Speaker 0>and welcome to today's episode of Rawkode live.

00:01:28.360 --> 00:01:29.160
<v Speaker 0>I am Rawkode,

00:01:29.555 --> 00:01:31.875
<v Speaker 0>your host. And today, we're gonna be taking

00:01:31.875 --> 00:01:35.555
<v Speaker 0>a look at behavior driven development, example mapping,

00:01:35.875 --> 00:01:38.115
<v Speaker 0>and a little bit of Gherkin potentially.

00:01:38.835 --> 00:01:40.674
<v Speaker 0>To do that today, I have a friend

00:01:40.674 --> 00:01:42.195
<v Speaker 0>of mine who is my go to in

00:01:42.195 --> 00:01:42.994
<v Speaker 0>all of these topics,

00:01:43.710 --> 00:01:44.990
<v Speaker 0>Kieran McNulty.

00:01:44.990 --> 00:01:47.390
<v Speaker 0>Hey, mate. How are you? Very kind.

00:01:47.550 --> 00:01:49.150
<v Speaker 1>I'm good. Thanks, though. Yeah.

00:01:49.470 --> 00:01:51.070
<v Speaker 0>Good. Good. Good. Yeah.

00:01:52.030 --> 00:01:53.630
<v Speaker 0>You are my go to. I think I

00:01:53.630 --> 00:01:55.870
<v Speaker 0>definitely send you far too many messages going

00:01:55.870 --> 00:01:57.390
<v Speaker 0>to help me, please. I have no idea

00:01:57.390 --> 00:01:58.945
<v Speaker 0>what I'm doing. So I'm glad that we

00:01:58.945 --> 00:02:00.785
<v Speaker 0>can do this in a way that we

00:02:00.785 --> 00:02:02.465
<v Speaker 0>can share some of that knowledge with other

00:02:02.465 --> 00:02:02.945
<v Speaker 0>people.

00:02:03.585 --> 00:02:04.065
<v Speaker 0>And

00:02:04.385 --> 00:02:06.385
<v Speaker 0>hopefully, using a project, but it's something I'm

00:02:06.385 --> 00:02:08.544
<v Speaker 0>actually really working on as we can show

00:02:08.544 --> 00:02:10.065
<v Speaker 0>them how this applies to, like, a real

00:02:10.065 --> 00:02:11.745
<v Speaker 0>domain and and and hopefully break it down

00:02:11.745 --> 00:02:14.130
<v Speaker 0>a little bit. Yeah. Great. I'm sure I

00:02:14.130 --> 00:02:16.210
<v Speaker 1>send you an equal amount of Docker and

00:02:16.210 --> 00:02:17.170
<v Speaker 1>Linux questions.

00:02:18.050 --> 00:02:20.210
<v Speaker 0>Yeah. Maybe our friendship's a little bit too

00:02:20.210 --> 00:02:21.650
<v Speaker 0>transactional. We'll see.

00:02:23.330 --> 00:02:23.650
<v Speaker 0>So,

00:02:25.055 --> 00:02:25.775
<v Speaker 0>like,

00:02:25.935 --> 00:02:28.415
<v Speaker 0>we should probably start then, I guess.

00:02:28.735 --> 00:02:30.095
<v Speaker 0>I mean, am I right in saying that

00:02:30.095 --> 00:02:32.815
<v Speaker 0>we're gonna use example mapping to understand what

00:02:32.815 --> 00:02:34.815
<v Speaker 0>I'm trying to build with a little bit.

00:02:34.815 --> 00:02:38.015
<v Speaker 0>Does that immediately go to Gurkin and scenarios?

00:02:38.095 --> 00:02:40.255
<v Speaker 0>How did all these bets go together? And

00:02:40.255 --> 00:02:40.655
<v Speaker 0>in fact,

00:02:41.370 --> 00:02:43.930
<v Speaker 0>back up. What's behavior driven development? Have you

00:02:43.930 --> 00:02:45.850
<v Speaker 0>got like a a thirty second pitch?

00:02:47.290 --> 00:02:47.930
<v Speaker 1>Sure.

00:02:48.490 --> 00:02:49.370
<v Speaker 1>BDD

00:02:49.850 --> 00:02:50.250
<v Speaker 1>is

00:02:51.050 --> 00:02:52.490
<v Speaker 1>one of the one of the characteristic things

00:02:52.490 --> 00:02:54.970
<v Speaker 1>about the BDD community is that isn't really

00:02:55.050 --> 00:02:56.010
<v Speaker 1>strictly defined.

00:02:57.005 --> 00:02:58.845
<v Speaker 1>A bit like kind of a bit like

00:02:58.845 --> 00:03:01.085
<v Speaker 1>DDD in that way, in that there's lots

00:03:01.085 --> 00:03:03.005
<v Speaker 1>of different ways of doing things. What they

00:03:03.005 --> 00:03:04.765
<v Speaker 1>have in common is a a kind of

00:03:04.765 --> 00:03:06.765
<v Speaker 1>approach a set of practices

00:03:07.005 --> 00:03:08.205
<v Speaker 1>to be used in

00:03:08.840 --> 00:03:09.879
<v Speaker 1>agile

00:03:09.879 --> 00:03:11.159
<v Speaker 1>type environments

00:03:11.159 --> 00:03:13.400
<v Speaker 1>that encourage fast feedback loops.

00:03:13.799 --> 00:03:16.600
<v Speaker 1>And BDD emphasize definition is good.

00:03:17.000 --> 00:03:18.519
<v Speaker 1>BDD

00:03:18.519 --> 00:03:21.319
<v Speaker 1>emphasizes talking about behavior

00:03:21.575 --> 00:03:23.015
<v Speaker 1>using examples,

00:03:23.655 --> 00:03:26.055
<v Speaker 1>and that leads to many things. It comes

00:03:26.055 --> 00:03:27.575
<v Speaker 1>from the TDD tradition

00:03:28.215 --> 00:03:30.535
<v Speaker 1>where you write a test first. That that

00:03:30.615 --> 00:03:32.695
<v Speaker 1>that's the kind of genesis of BDD.

00:03:32.775 --> 00:03:34.295
<v Speaker 1>Dan North was trying to teach people to

00:03:34.295 --> 00:03:34.615
<v Speaker 1>do this.

00:03:36.099 --> 00:03:36.740
<v Speaker 1>And

00:03:36.900 --> 00:03:38.420
<v Speaker 1>there's a kind of stumbling block when you

00:03:38.420 --> 00:03:40.180
<v Speaker 1>tell people to write tests first, isn't there?

00:03:40.180 --> 00:03:40.660
<v Speaker 1>Because

00:03:42.260 --> 00:03:43.700
<v Speaker 1>it doesn't make sense.

00:03:44.260 --> 00:03:45.780
<v Speaker 1>Right? When you go to school, you have

00:03:45.780 --> 00:03:46.820
<v Speaker 1>the test at the end.

00:03:47.220 --> 00:03:48.500
<v Speaker 1>You learn the you do the thing, and

00:03:48.500 --> 00:03:49.459
<v Speaker 1>then you then you get tested.

00:03:50.385 --> 00:03:51.745
<v Speaker 1>So Dan,

00:03:52.465 --> 00:03:54.784
<v Speaker 1>who I think was into things like NLP

00:03:54.784 --> 00:03:56.385
<v Speaker 1>and that kind of stuff,

00:03:57.665 --> 00:03:59.984
<v Speaker 1>decided to to to not use the word

00:03:59.984 --> 00:04:01.105
<v Speaker 1>test and instead

00:04:01.424 --> 00:04:02.385
<v Speaker 1>talk about

00:04:02.545 --> 00:04:03.584
<v Speaker 1>describe the behavior

00:04:04.450 --> 00:04:05.170
<v Speaker 1>first

00:04:06.209 --> 00:04:08.290
<v Speaker 1>and then implement it. So you in BDD

00:04:08.290 --> 00:04:10.450
<v Speaker 1>terms, you sort of think about those things

00:04:10.769 --> 00:04:12.290
<v Speaker 1>as specifications

00:04:12.290 --> 00:04:12.930
<v Speaker 1>or,

00:04:14.370 --> 00:04:15.170
<v Speaker 1>you know,

00:04:15.969 --> 00:04:18.130
<v Speaker 1>descriptions of what the system's going to do,

00:04:18.130 --> 00:04:19.009
<v Speaker 1>and then you implement it.

00:04:19.695 --> 00:04:21.695
<v Speaker 1>And then you somehow automate a test against

00:04:21.695 --> 00:04:24.255
<v Speaker 1>that description. So it's it's the same TDD

00:04:24.255 --> 00:04:25.615
<v Speaker 1>cycle, but you're sort of thinking about it

00:04:25.615 --> 00:04:27.535
<v Speaker 1>a bit different. And that was, you know,

00:04:27.535 --> 00:04:28.655
<v Speaker 1>twenty years ago.

00:04:29.375 --> 00:04:31.615
<v Speaker 1>Yeah. No. Twelve years ago.

00:04:33.180 --> 00:04:35.180
<v Speaker 0>Yeah. I I I'm not sure about like

00:04:35.180 --> 00:04:36.940
<v Speaker 0>this. You want me to know what I'm

00:04:36.940 --> 00:04:38.540
<v Speaker 0>writing before I write it? I mean, that

00:04:38.540 --> 00:04:39.260
<v Speaker 0>sounds

00:04:39.500 --> 00:04:40.380
<v Speaker 0>blasphemous.

00:04:40.860 --> 00:04:42.700
<v Speaker 1>You need to think about the thing.

00:04:43.500 --> 00:04:45.355
<v Speaker 0>Oh, no. What I mean is like, maybe

00:04:45.355 --> 00:04:47.115
<v Speaker 0>maybe it's just me and being an absolute

00:04:47.115 --> 00:04:49.115
<v Speaker 0>caboy of a developer. But generally, I just

00:04:49.115 --> 00:04:50.875
<v Speaker 0>hack at the code until I think it

00:04:50.875 --> 00:04:52.715
<v Speaker 0>does what I wanted to do and then

00:04:52.715 --> 00:04:54.155
<v Speaker 0>trying to look back at it. And I

00:04:54.155 --> 00:04:55.915
<v Speaker 0>I know that's a wrong approach. And I've

00:04:55.915 --> 00:04:58.155
<v Speaker 0>tried to get into TDD many many times.

00:04:58.235 --> 00:05:01.010
<v Speaker 0>Right. Well, I appreciate the design improvements my

00:05:01.010 --> 00:05:02.770
<v Speaker 0>code has when I do TDD.

00:05:02.850 --> 00:05:04.210
<v Speaker 0>There's there's still a,

00:05:04.530 --> 00:05:06.130
<v Speaker 0>like, a wall you have to get over

00:05:06.130 --> 00:05:08.530
<v Speaker 0>to really Yeah. Ingrain that approach on you.

00:05:08.530 --> 00:05:10.050
<v Speaker 0>And I I don't feel that I'm there

00:05:10.050 --> 00:05:11.570
<v Speaker 0>yet, but I do I am I am

00:05:11.570 --> 00:05:12.290
<v Speaker 0>getting better.

00:05:12.690 --> 00:05:14.050
<v Speaker 1>No. That's that's very

00:05:14.455 --> 00:05:16.935
<v Speaker 1>very true. And there's certainly a good argument

00:05:16.935 --> 00:05:19.255
<v Speaker 1>that a TDD approach isn't

00:05:19.575 --> 00:05:21.495
<v Speaker 1>a good fit for all problems.

00:05:22.455 --> 00:05:24.055
<v Speaker 1>If I've got absolutely no idea how I'm

00:05:24.055 --> 00:05:25.015
<v Speaker 1>gonna do something,

00:05:25.335 --> 00:05:26.775
<v Speaker 1>it's hard for me to write tests.

00:05:27.970 --> 00:05:31.570
<v Speaker 1>So another element of diagnostic BDD definition is

00:05:31.570 --> 00:05:33.970
<v Speaker 1>that it's sort of multilevel.

00:05:33.970 --> 00:05:36.050
<v Speaker 1>I can't remember the exact phrasing,

00:05:36.130 --> 00:05:37.490
<v Speaker 1>but it it can be applied at different

00:05:37.490 --> 00:05:40.210
<v Speaker 1>levels. So it it may be

00:05:40.985 --> 00:05:42.985
<v Speaker 1>just to give an example, it might be

00:05:42.985 --> 00:05:45.865
<v Speaker 1>I'm gonna write a script that's gonna recognize

00:05:45.865 --> 00:05:47.145
<v Speaker 1>images in

00:05:47.785 --> 00:05:49.945
<v Speaker 1>images of faces in photos.

00:05:49.945 --> 00:05:51.945
<v Speaker 1>And imagine I'm the first person who's ever

00:05:51.945 --> 00:05:54.185
<v Speaker 1>thought of that. You can't just rent time

00:05:54.185 --> 00:05:55.705
<v Speaker 1>to do that on some cloud service.

00:05:57.100 --> 00:05:58.700
<v Speaker 1>What test can I write? If

00:05:59.180 --> 00:06:00.300
<v Speaker 1>I don't know how I'm gonna do that

00:06:00.300 --> 00:06:01.500
<v Speaker 1>yet, if it's a sort of r and

00:06:01.500 --> 00:06:03.100
<v Speaker 1>d thing, I can't write a test

00:06:03.740 --> 00:06:05.660
<v Speaker 1>easily at a low level.

00:06:06.140 --> 00:06:07.500
<v Speaker 1>I can write a test at a higher

00:06:07.500 --> 00:06:08.060
<v Speaker 1>level,

00:06:09.340 --> 00:06:10.780
<v Speaker 1>which is, you know, if we get all

00:06:10.780 --> 00:06:12.140
<v Speaker 1>these photos, you'll know who's in them.

00:06:13.305 --> 00:06:14.665
<v Speaker 1>But a lot of the work I'm doing

00:06:14.665 --> 00:06:16.105
<v Speaker 1>underneath that level

00:06:16.265 --> 00:06:18.425
<v Speaker 1>won't be driven by TDD.

00:06:19.385 --> 00:06:20.105
<v Speaker 1>Right.

00:06:20.345 --> 00:06:21.225
<v Speaker 1>Just because

00:06:21.865 --> 00:06:23.545
<v Speaker 1>I'm just hacking stuff together.

00:06:23.705 --> 00:06:25.305
<v Speaker 1>So I find that a lot in those

00:06:25.305 --> 00:06:27.370
<v Speaker 1>very sort of unknown areas. I I don't

00:06:27.370 --> 00:06:28.890
<v Speaker 1>do TDD particularly.

00:06:29.930 --> 00:06:31.290
<v Speaker 1>I'll hack something together.

00:06:32.490 --> 00:06:33.610
<v Speaker 1>If that's good enough,

00:06:34.810 --> 00:06:36.650
<v Speaker 1>I won't worry about things.

00:06:37.930 --> 00:06:40.170
<v Speaker 1>But if that's something quite important, once I've

00:06:40.170 --> 00:06:41.450
<v Speaker 1>hacked it together and I've kind of got

00:06:41.450 --> 00:06:44.145
<v Speaker 1>a mental model of it, I maybe will

00:06:44.224 --> 00:06:46.305
<v Speaker 1>write a clean version that I do do

00:06:46.305 --> 00:06:47.664
<v Speaker 1>TDD. Because I kind of know what the

00:06:47.664 --> 00:06:48.865
<v Speaker 1>bits are gonna be and how they'll fit

00:06:48.865 --> 00:06:49.425
<v Speaker 1>together.

00:06:49.745 --> 00:06:51.025
<v Speaker 0>Oh, yeah. Definitely.

00:06:51.425 --> 00:06:54.224
<v Speaker 1>So something that BDD

00:06:55.430 --> 00:06:57.110
<v Speaker 1>has has grown to to

00:06:57.430 --> 00:06:59.590
<v Speaker 1>talk about a lot is acceptance testing.

00:06:59.909 --> 00:07:00.470
<v Speaker 1>So

00:07:00.710 --> 00:07:02.789
<v Speaker 1>when I'm talking to someone

00:07:03.750 --> 00:07:05.270
<v Speaker 1>at business level,

00:07:05.909 --> 00:07:07.430
<v Speaker 1>or maybe I and the team, we're having

00:07:07.430 --> 00:07:08.629
<v Speaker 1>to talk about what we're gonna build this

00:07:08.629 --> 00:07:09.349
<v Speaker 1>sprint, you know,

00:07:10.065 --> 00:07:11.025
<v Speaker 1>build next.

00:07:12.065 --> 00:07:13.985
<v Speaker 1>You can apply a BGD approach where you

00:07:13.985 --> 00:07:15.264
<v Speaker 1>think what what

00:07:15.585 --> 00:07:17.345
<v Speaker 1>what's it gonna look like when it's finished?

00:07:17.664 --> 00:07:18.625
<v Speaker 1>That kind of

00:07:19.824 --> 00:07:20.865
<v Speaker 1>feature level

00:07:22.065 --> 00:07:25.020
<v Speaker 1>acceptance test or acceptance criteria setting.

00:07:25.580 --> 00:07:26.620
<v Speaker 1>That's a nice

00:07:27.020 --> 00:07:29.180
<v Speaker 1>level to talk about because

00:07:29.580 --> 00:07:31.580
<v Speaker 1>you you can have that conversation at a

00:07:31.580 --> 00:07:33.740
<v Speaker 1>level that the business is actually involved in.

00:07:33.979 --> 00:07:35.740
<v Speaker 1>So it helps bridge some of that communication

00:07:35.740 --> 00:07:36.060
<v Speaker 1>gap.

00:07:36.815 --> 00:07:38.175
<v Speaker 1>You know, before we build it, can we

00:07:38.175 --> 00:07:39.775
<v Speaker 1>talk about what we're gonna build? Isn't that

00:07:39.775 --> 00:07:42.175
<v Speaker 1>controversial a conversation topic?

00:07:42.895 --> 00:07:44.175
<v Speaker 1>And you can do it in a way

00:07:44.175 --> 00:07:44.895
<v Speaker 1>where

00:07:45.935 --> 00:07:47.854
<v Speaker 1>the technical people will then figure out the

00:07:47.854 --> 00:07:49.055
<v Speaker 1>technical implementations

00:07:49.135 --> 00:07:49.855
<v Speaker 1>after.

00:07:50.014 --> 00:07:51.060
<v Speaker 1>So you can have a sort of, like,

00:07:51.060 --> 00:07:51.940
<v Speaker 1>business level

00:07:53.219 --> 00:07:55.620
<v Speaker 1>conversation, and that's that's tends to be where

00:07:55.620 --> 00:07:58.500
<v Speaker 1>people use BDD practices like the ones we're

00:07:58.500 --> 00:07:59.539
<v Speaker 1>gonna talk about today.

00:08:00.020 --> 00:08:01.539
<v Speaker 0>Yeah. And in fact, when we were talking

00:08:01.539 --> 00:08:03.620
<v Speaker 0>about potentially doing this session, one of the

00:08:03.620 --> 00:08:04.500
<v Speaker 0>things we said was,

00:08:05.505 --> 00:08:06.785
<v Speaker 0>so the thing I'm trying to build, I

00:08:06.785 --> 00:08:08.065
<v Speaker 0>want to be open source and I wanna

00:08:08.065 --> 00:08:09.345
<v Speaker 0>be able to tell people what it does

00:08:09.345 --> 00:08:11.985
<v Speaker 0>and then a a way that kinda reveals

00:08:11.985 --> 00:08:13.985
<v Speaker 0>the details of how it works. But, you

00:08:13.985 --> 00:08:15.824
<v Speaker 0>know, I didn't really know that myself either

00:08:15.824 --> 00:08:17.905
<v Speaker 0>and what we've decided was that this process

00:08:17.905 --> 00:08:19.264
<v Speaker 0>would be a way for me to kind

00:08:19.264 --> 00:08:21.180
<v Speaker 0>of submit my own knowledge, what I wanted

00:08:21.180 --> 00:08:22.140
<v Speaker 0>to do and how it works, and then

00:08:22.140 --> 00:08:23.820
<v Speaker 0>shoot up with other people and, you know,

00:08:23.820 --> 00:08:26.140
<v Speaker 0>we kinda get benefits without even necessarily gonna

00:08:26.140 --> 00:08:28.140
<v Speaker 0>straighten to the testing aspect of it. Just

00:08:28.140 --> 00:08:30.860
<v Speaker 0>that language and the examples tell people, hey,

00:08:30.860 --> 00:08:31.980
<v Speaker 0>this is what it does. This is how

00:08:31.980 --> 00:08:33.500
<v Speaker 0>it works. And, you know, that might affect

00:08:33.500 --> 00:08:36.225
<v Speaker 0>your use case. Yeah. And I, you know,

00:08:36.225 --> 00:08:37.585
<v Speaker 1>you know, I work with different teams trying

00:08:37.585 --> 00:08:39.825
<v Speaker 1>to do this. And I think the situation

00:08:39.825 --> 00:08:41.745
<v Speaker 1>you're in is something similar to a lot

00:08:41.745 --> 00:08:43.184
<v Speaker 1>of teams I work with where

00:08:44.065 --> 00:08:44.865
<v Speaker 1>they've

00:08:44.945 --> 00:08:46.305
<v Speaker 1>started with the testing.

00:08:47.105 --> 00:08:50.230
<v Speaker 1>Right? Yeah. And then but what what maybe

00:08:51.029 --> 00:08:52.470
<v Speaker 1>some of people in the audience don't know

00:08:52.470 --> 00:08:53.110
<v Speaker 1>how

00:08:53.510 --> 00:08:55.910
<v Speaker 1>Gherkin looks, but one of one of the

00:08:55.910 --> 00:08:58.310
<v Speaker 1>sets of tools that people use for BDD

00:08:58.310 --> 00:09:00.310
<v Speaker 1>is Cucumber. Others are available.

00:09:00.950 --> 00:09:02.055
<v Speaker 1>And one of the things you do is

00:09:02.055 --> 00:09:05.015
<v Speaker 1>you write down the steps of each test

00:09:06.055 --> 00:09:07.095
<v Speaker 1>in English.

00:09:08.135 --> 00:09:09.654
<v Speaker 1>Other languages are available.

00:09:12.615 --> 00:09:13.175
<v Speaker 1>And

00:09:13.574 --> 00:09:14.295
<v Speaker 1>why bother?

00:09:15.040 --> 00:09:17.040
<v Speaker 1>It's it's because that's then gonna get used

00:09:17.040 --> 00:09:17.760
<v Speaker 1>for something.

00:09:18.160 --> 00:09:19.680
<v Speaker 1>But if you're starting with the test and

00:09:19.680 --> 00:09:21.040
<v Speaker 1>then you're just then you're going back and

00:09:21.040 --> 00:09:22.640
<v Speaker 1>sort of saying, well, how will I you

00:09:22.640 --> 00:09:23.760
<v Speaker 1>think of the test and you say, how

00:09:23.760 --> 00:09:25.040
<v Speaker 1>am gonna write that in English?

00:09:26.720 --> 00:09:28.800
<v Speaker 1>It it it's kind of backwards, and it's

00:09:28.800 --> 00:09:30.080
<v Speaker 1>harder. It's much harder to do.

00:09:31.045 --> 00:09:33.285
<v Speaker 1>So the reason I suggested example mapping, which

00:09:33.285 --> 00:09:35.045
<v Speaker 1>I often do with these themes,

00:09:35.445 --> 00:09:36.485
<v Speaker 1>is, like, let's

00:09:36.725 --> 00:09:38.485
<v Speaker 1>do it top down. Let's start with your

00:09:38.485 --> 00:09:40.885
<v Speaker 1>understanding of what it's gonna do and then

00:09:40.885 --> 00:09:41.925
<v Speaker 1>drive out

00:09:42.885 --> 00:09:43.525
<v Speaker 1>examples.

00:09:44.390 --> 00:09:45.990
<v Speaker 1>Yep. And then some some of them will

00:09:45.990 --> 00:09:47.350
<v Speaker 1>be acceptance tests.

00:09:48.150 --> 00:09:49.830
<v Speaker 1>Because otherwise, you're sort of imagining

00:09:50.150 --> 00:09:52.230
<v Speaker 1>what the conversation we had before would have

00:09:52.230 --> 00:09:53.750
<v Speaker 1>sounded like if we'd had it.

00:09:55.350 --> 00:09:56.550
<v Speaker 1>Alright. So

00:09:57.045 --> 00:09:59.524
<v Speaker 0>should we well, first, we'll do a couple

00:09:59.524 --> 00:10:00.965
<v Speaker 0>of the comments. So

00:10:01.845 --> 00:10:04.245
<v Speaker 0>Mark Taylor, looking forward to this. Yep. Me

00:10:04.245 --> 00:10:07.205
<v Speaker 0>too. Glad you are. And common friend of

00:10:07.205 --> 00:10:08.885
<v Speaker 0>ours, James. Hey, man. How's it going?

00:10:10.580 --> 00:10:13.700
<v Speaker 0>Also, because I've been on PTO time off

00:10:13.700 --> 00:10:15.620
<v Speaker 0>for a week, I've forgotten how to stream

00:10:15.620 --> 00:10:17.300
<v Speaker 0>and actually do my job. So what I'll

00:10:17.300 --> 00:10:18.580
<v Speaker 0>also say is I wanna say thank you

00:10:18.580 --> 00:10:20.820
<v Speaker 0>to Equinix Medal. I'll put a code on

00:10:20.820 --> 00:10:21.860
<v Speaker 0>the bottom of the screen there. If you

00:10:21.860 --> 00:10:23.620
<v Speaker 0>wanna check out Equinix Medal, there's a $50

00:10:23.620 --> 00:10:24.020
<v Speaker 0>coupon.

00:10:24.435 --> 00:10:27.475
<v Speaker 0>Tell your bits. Right. So the domain that

00:10:27.475 --> 00:10:28.755
<v Speaker 0>we're working on today,

00:10:29.715 --> 00:10:31.154
<v Speaker 0>let me set a little bit of background

00:10:31.154 --> 00:10:32.595
<v Speaker 0>on this. I

00:10:33.795 --> 00:10:35.235
<v Speaker 0>do a lot of get ups. And if

00:10:35.235 --> 00:10:36.675
<v Speaker 0>you're not familiar with the term get ups,

00:10:36.675 --> 00:10:37.715
<v Speaker 0>let me try and give you the thirty

00:10:37.715 --> 00:10:38.755
<v Speaker 0>second version of that too.

00:10:39.410 --> 00:10:42.370
<v Speaker 0>Get ops is a method of continuous delivery

00:10:42.370 --> 00:10:43.730
<v Speaker 0>where we declare

00:10:44.130 --> 00:10:45.730
<v Speaker 0>and that's a clarity of fashion what we

00:10:45.730 --> 00:10:48.210
<v Speaker 0>want to be running and our production environment

00:10:48.210 --> 00:10:48.850
<v Speaker 0>through

00:10:49.410 --> 00:10:51.170
<v Speaker 0>manifest. Like, I do a lot of Kubernetes.

00:10:51.170 --> 00:10:52.770
<v Speaker 0>So we generally use YAML manifest.

00:10:53.925 --> 00:10:56.565
<v Speaker 0>Controller lives inside of the Kubernetes cluster and

00:10:56.565 --> 00:10:59.205
<v Speaker 0>continually pulls that get repository and applies it

00:10:59.205 --> 00:11:01.045
<v Speaker 0>into the cluster so that no matter if

00:11:01.045 --> 00:11:02.885
<v Speaker 0>manual changes happen to the cluster, they get

00:11:02.885 --> 00:11:05.285
<v Speaker 0>blown away very, very quickly. That's the very

00:11:05.285 --> 00:11:06.645
<v Speaker 0>quick version of what get ups is trying

00:11:06.645 --> 00:11:06.885
<v Speaker 0>to do.

00:11:07.580 --> 00:11:09.500
<v Speaker 0>Now I started applying this to more models

00:11:09.500 --> 00:11:11.340
<v Speaker 0>now that aren't just Kubernetes.

00:11:11.420 --> 00:11:14.460
<v Speaker 0>And one of the things that I felt

00:11:14.940 --> 00:11:17.180
<v Speaker 0>internally in our team at Equinix Medal is,

00:11:17.180 --> 00:11:17.660
<v Speaker 0>like,

00:11:18.540 --> 00:11:21.500
<v Speaker 0>a static site generator that pulls from YAML

00:11:21.500 --> 00:11:23.100
<v Speaker 0>parses that renders a site.

00:11:23.714 --> 00:11:26.274
<v Speaker 0>I want that to be continuous as well.

00:11:26.274 --> 00:11:28.274
<v Speaker 0>Like, whenever someone pushes a change to the

00:11:28.274 --> 00:11:29.075
<v Speaker 0>YAML

00:11:29.154 --> 00:11:31.555
<v Speaker 0>documents inside the get repository, I actually wanted

00:11:31.555 --> 00:11:33.795
<v Speaker 0>to serve that over an API GraphQL as

00:11:33.795 --> 00:11:34.274
<v Speaker 0>a database.

00:11:36.370 --> 00:11:37.890
<v Speaker 0>Yeah. I can see that weird look in

00:11:37.890 --> 00:11:39.890
<v Speaker 0>your face, but it's actually a really nice

00:11:39.890 --> 00:11:42.050
<v Speaker 0>approach. In fact, it's strange that James is

00:11:42.050 --> 00:11:43.570
<v Speaker 0>on this because he's written a YAML database

00:11:43.570 --> 00:11:45.810
<v Speaker 0>before. And this is not actually too different

00:11:45.810 --> 00:11:47.745
<v Speaker 0>except get as a database and I'm just

00:11:47.745 --> 00:11:50.785
<v Speaker 0>continually updating my models and memory and delivering

00:11:50.785 --> 00:11:52.625
<v Speaker 0>over an API. But it means I can

00:11:52.625 --> 00:11:54.945
<v Speaker 0>have a almost static or purely front end

00:11:54.945 --> 00:11:57.265
<v Speaker 0>generated site that knows all those Jamo documents

00:11:57.265 --> 00:11:58.305
<v Speaker 0>via the API.

00:11:59.265 --> 00:12:01.345
<v Speaker 0>The why, I can definitely cover more later,

00:12:01.345 --> 00:12:02.740
<v Speaker 0>maybe as examples

00:12:02.820 --> 00:12:04.980
<v Speaker 0>future episodes. But for today, what I wanted

00:12:04.980 --> 00:12:05.540
<v Speaker 0>to

00:12:06.019 --> 00:12:07.860
<v Speaker 0>well, sorry. So what I started doing a

00:12:07.860 --> 00:12:09.860
<v Speaker 0>month ago was extracting that get logic to

00:12:09.860 --> 00:12:12.339
<v Speaker 0>a library so other people can build and

00:12:12.339 --> 00:12:13.540
<v Speaker 0>roster on

00:12:13.860 --> 00:12:15.779
<v Speaker 0>get ops like operations.

00:12:16.845 --> 00:12:17.405
<v Speaker 0>So

00:12:18.365 --> 00:12:20.605
<v Speaker 0>the library we're using today is here.

00:12:21.085 --> 00:12:22.365
<v Speaker 0>I've not touched it in a month. A

00:12:22.365 --> 00:12:23.645
<v Speaker 0>month is when I reach out to you,

00:12:23.645 --> 00:12:24.845
<v Speaker 0>go and help. I have no idea what

00:12:24.845 --> 00:12:26.845
<v Speaker 0>I'm doing when it comes to BDD. So

00:12:26.845 --> 00:12:29.085
<v Speaker 0>I decided to keep this mostly

00:12:29.510 --> 00:12:31.910
<v Speaker 0>mostly for today's episode. So it's called get

00:12:31.910 --> 00:12:34.870
<v Speaker 0>synced. It's on getlab.com/Rawkode/getsynced.

00:12:35.510 --> 00:12:37.590
<v Speaker 0>Right now, it's very very trivial

00:12:39.510 --> 00:12:41.030
<v Speaker 0>and it

00:12:41.445 --> 00:12:43.365
<v Speaker 0>really just clones our repository.

00:12:43.445 --> 00:12:45.205
<v Speaker 0>And that's where that starts to get a

00:12:45.205 --> 00:12:47.045
<v Speaker 0>little bit complicated, is why I reached out

00:12:47.045 --> 00:12:48.085
<v Speaker 0>to you. Because

00:12:48.645 --> 00:12:50.325
<v Speaker 0>there are a whole bunch of rules and

00:12:50.325 --> 00:12:51.205
<v Speaker 0>semantics

00:12:51.845 --> 00:12:53.845
<v Speaker 0>that I really need to declare first. And

00:12:53.845 --> 00:12:55.845
<v Speaker 0>I wanted to do that viewing of with

00:12:56.165 --> 00:12:57.045
<v Speaker 0>feature files

00:12:57.430 --> 00:12:58.630
<v Speaker 0>so that I don't make a mess of

00:12:58.630 --> 00:13:00.950
<v Speaker 0>it. Because what happens if I run this

00:13:00.950 --> 00:13:03.350
<v Speaker 0>program, it codes the repository, it runs in

00:13:03.350 --> 00:13:05.110
<v Speaker 0>a loop, pulling all the changes, and someone

00:13:05.110 --> 00:13:06.470
<v Speaker 0>makes a manual changes.

00:13:06.790 --> 00:13:08.310
<v Speaker 0>Do I reset the repository

00:13:08.630 --> 00:13:09.990
<v Speaker 0>and then fetch again?

00:13:10.390 --> 00:13:11.830
<v Speaker 0>Do I throw an error?

00:13:12.464 --> 00:13:14.384
<v Speaker 0>What if there's a force rate on the

00:13:14.384 --> 00:13:16.384
<v Speaker 0>remote and I can no longer pull changes?

00:13:16.384 --> 00:13:18.464
<v Speaker 0>What's the procedure to rectify? And there's a

00:13:18.464 --> 00:13:19.345
<v Speaker 0>whole bunch of these

00:13:19.904 --> 00:13:21.264
<v Speaker 0>I mean, we all work with GET. We

00:13:21.264 --> 00:13:23.825
<v Speaker 0>know it's painful when something unexpected happens.

00:13:24.065 --> 00:13:25.425
<v Speaker 0>And I need to be able to codify

00:13:25.425 --> 00:13:27.520
<v Speaker 0>that now and these feature files so that

00:13:27.520 --> 00:13:28.480
<v Speaker 0>when other people

00:13:29.040 --> 00:13:30.800
<v Speaker 0>want to use this library, they can go,

00:13:30.800 --> 00:13:33.279
<v Speaker 0>what happens if someone forcefully writes to the

00:13:33.279 --> 00:13:35.279
<v Speaker 0>remote and then it's out of sync? Like,

00:13:35.279 --> 00:13:37.040
<v Speaker 0>what are what are the rules? And Yeah.

00:13:37.120 --> 00:13:38.720
<v Speaker 0>I want us to use example mapping to

00:13:38.720 --> 00:13:42.215
<v Speaker 0>try and document that. That make sense? Do

00:13:42.215 --> 00:13:43.815
<v Speaker 1>you have any tests at the moment?

00:13:44.775 --> 00:13:45.335
<v Speaker 0>Yes.

00:13:46.215 --> 00:13:47.255
<v Speaker 0>There are.

00:13:47.975 --> 00:13:50.375
<v Speaker 0>So in Rust, I have checked that it

00:13:50.375 --> 00:13:51.975
<v Speaker 0>can clone if there's nothing there,

00:13:52.775 --> 00:13:55.390
<v Speaker 0>which is the simplest test I could get.

00:13:55.390 --> 00:13:57.790
<v Speaker 0>And then oh, wait. That's the clone repository.

00:13:59.070 --> 00:14:00.670
<v Speaker 0>Oh, yeah. And this one is that check

00:14:00.670 --> 00:14:02.270
<v Speaker 0>to see if a clone exists, but we

00:14:02.270 --> 00:14:03.790
<v Speaker 0>don't I don't have any test to confirm

00:14:03.790 --> 00:14:05.230
<v Speaker 0>the logic of what happens when it does

00:14:05.230 --> 00:14:06.510
<v Speaker 0>exist and it tries to clone. So I

00:14:06.510 --> 00:14:08.385
<v Speaker 0>can check the the check that there's a

00:14:08.385 --> 00:14:09.904
<v Speaker 0>get repository where I want it to be,

00:14:09.904 --> 00:14:10.945
<v Speaker 0>and I can check that I can clone

00:14:10.945 --> 00:14:11.825
<v Speaker 0>if it doesn't.

00:14:12.625 --> 00:14:14.865
<v Speaker 0>And then that start to write a feature

00:14:14.865 --> 00:14:15.585
<v Speaker 0>file

00:14:16.865 --> 00:14:18.305
<v Speaker 0>here

00:14:19.200 --> 00:14:21.680
<v Speaker 0>and got really really lost. You can see

00:14:22.000 --> 00:14:24.960
<v Speaker 0>my sex laser gherkin before my brain exploded.

00:14:25.280 --> 00:14:26.800
<v Speaker 0>And it was really just trying to me

00:14:26.800 --> 00:14:28.560
<v Speaker 0>trying to take that test I'd already written

00:14:28.560 --> 00:14:30.080
<v Speaker 0>and write in the feature file, which you

00:14:30.080 --> 00:14:32.080
<v Speaker 0>just told me, yeah, don't do that. So

00:14:33.465 --> 00:14:34.905
<v Speaker 1>You can. I mean,

00:14:35.785 --> 00:14:38.105
<v Speaker 1>if it the use case you've got, which

00:14:38.105 --> 00:14:39.465
<v Speaker 1>is you're hoping people are gonna read it

00:14:39.465 --> 00:14:40.665
<v Speaker 1>in the future is a good reason to

00:14:40.665 --> 00:14:42.265
<v Speaker 1>do it. Right. So

00:14:42.825 --> 00:14:44.665
<v Speaker 1>retrofitting in that way, I'm I'm not a

00:14:44.665 --> 00:14:46.345
<v Speaker 1>% against it. It's just harder.

00:14:46.820 --> 00:14:49.459
<v Speaker 1>It's just the knowledge is harder. What what's

00:14:49.459 --> 00:14:50.580
<v Speaker 1>hard to do is

00:14:51.060 --> 00:14:52.740
<v Speaker 1>if you don't know who the intended audience

00:14:52.740 --> 00:14:54.899
<v Speaker 1>is, I think something you maybe struggle with

00:14:54.899 --> 00:14:56.900
<v Speaker 1>is just looking at it.

00:14:57.940 --> 00:14:59.540
<v Speaker 1>It's hard to know what level of detail

00:14:59.540 --> 00:15:02.144
<v Speaker 1>to go into. So when you're talking to

00:15:02.144 --> 00:15:03.105
<v Speaker 1>real

00:15:03.105 --> 00:15:04.945
<v Speaker 1>people involved in the project,

00:15:05.264 --> 00:15:08.144
<v Speaker 1>a mixture of business people, test people, dev

00:15:08.144 --> 00:15:08.785
<v Speaker 1>people,

00:15:09.584 --> 00:15:10.545
<v Speaker 1>you will

00:15:11.505 --> 00:15:12.865
<v Speaker 1>you'll talk about the project,

00:15:14.070 --> 00:15:16.070
<v Speaker 1>especially if you're having a quick conversation.

00:15:16.470 --> 00:15:18.390
<v Speaker 1>You'll talk about a project at a level

00:15:18.390 --> 00:15:19.910
<v Speaker 1>of abstraction

00:15:20.470 --> 00:15:22.470
<v Speaker 1>that the business people care about.

00:15:23.510 --> 00:15:25.430
<v Speaker 1>What I mean is there'll be a sort

00:15:25.430 --> 00:15:27.190
<v Speaker 1>of there'll be a depth

00:15:27.524 --> 00:15:29.685
<v Speaker 1>where they care how it works. Like, it's

00:15:29.685 --> 00:15:31.285
<v Speaker 1>really important that this thing happens. It's really

00:15:31.285 --> 00:15:32.644
<v Speaker 1>important that this thing happens.

00:15:32.884 --> 00:15:35.045
<v Speaker 1>And everything under it, they don't care about.

00:15:35.365 --> 00:15:37.125
<v Speaker 1>And that's really different for different groups of

00:15:37.125 --> 00:15:38.004
<v Speaker 1>people. Yeah.

00:15:39.300 --> 00:15:42.740
<v Speaker 1>What happens in, like, dysfunctional waterfall type situations

00:15:42.740 --> 00:15:43.620
<v Speaker 1>is that

00:15:45.060 --> 00:15:48.100
<v Speaker 1>you spend ages getting the business people to

00:15:48.100 --> 00:15:50.180
<v Speaker 1>agree to all the detail and writing it

00:15:50.180 --> 00:15:51.540
<v Speaker 1>all down, and there's a load of stuff

00:15:51.540 --> 00:15:52.980
<v Speaker 1>they really don't care about.

00:15:54.475 --> 00:15:56.314
<v Speaker 1>So some teams, it may be like, I

00:15:56.314 --> 00:15:58.394
<v Speaker 1>need to be able to do this action

00:15:58.394 --> 00:16:00.154
<v Speaker 1>somehow, and I don't care where in the

00:16:00.154 --> 00:16:01.355
<v Speaker 1>system I do it. I don't care what

00:16:01.355 --> 00:16:03.435
<v Speaker 1>the steps are. Like, I just I just

00:16:03.435 --> 00:16:05.355
<v Speaker 1>need that capability. And if I've got that

00:16:06.074 --> 00:16:07.355
<v Speaker 1>after you've got the feature, if I've got

00:16:07.355 --> 00:16:08.714
<v Speaker 1>that, it's a tick. Let's go.

00:16:09.720 --> 00:16:11.480
<v Speaker 1>Other people may really care. It's in the

00:16:11.480 --> 00:16:12.120
<v Speaker 1>specific

00:16:13.160 --> 00:16:15.080
<v Speaker 1>sequence of steps. There may be really important

00:16:15.080 --> 00:16:17.720
<v Speaker 1>business constraints to to put in there. So

00:16:17.720 --> 00:16:19.640
<v Speaker 1>what what I'm getting at is that the

00:16:19.640 --> 00:16:22.040
<v Speaker 1>the real conversation naturally finds that level and

00:16:22.040 --> 00:16:23.640
<v Speaker 1>capturing that in the scenarios is a nice

00:16:23.640 --> 00:16:24.280
<v Speaker 1>way of doing it.

00:16:24.965 --> 00:16:26.725
<v Speaker 0>Yeah. I think that depth is one of

00:16:26.725 --> 00:16:29.045
<v Speaker 0>the things I've definitely struggled with. I mean,

00:16:29.045 --> 00:16:31.285
<v Speaker 0>I've tried to adopt BDD multiple times over

00:16:31.285 --> 00:16:32.485
<v Speaker 0>the years. In fact, I think the first

00:16:32.485 --> 00:16:33.925
<v Speaker 0>time we met was when you were doing

00:16:33.925 --> 00:16:35.925
<v Speaker 0>BDD training at a company I worked for,

00:16:35.925 --> 00:16:38.130
<v Speaker 0>going back to what? It's like five, six

00:16:38.130 --> 00:16:41.810
<v Speaker 0>years now. So Maybe more. Yeah. Maybe more.

00:16:41.810 --> 00:16:44.130
<v Speaker 0>And, you know, maybe it's just my perception

00:16:44.130 --> 00:16:46.450
<v Speaker 0>of the BDD community or maybe it's the

00:16:46.930 --> 00:16:49.170
<v Speaker 0>journey I've taken is just not normal. But

00:16:49.170 --> 00:16:51.615
<v Speaker 0>I've seen examples where people say, oh, it

00:16:51.615 --> 00:16:53.135
<v Speaker 0>should be high level because it shouldn't get

00:16:53.135 --> 00:16:54.975
<v Speaker 0>into the implementation details. And then I've seen

00:16:54.975 --> 00:16:57.295
<v Speaker 0>examples where they actually do kinda get into

00:16:57.295 --> 00:16:59.055
<v Speaker 0>the implementation deal. Like, the depth seems to

00:16:59.055 --> 00:17:01.295
<v Speaker 0>change and now we're back up with another

00:17:01.535 --> 00:17:02.815
<v Speaker 0>what I see is a different version of

00:17:02.815 --> 00:17:05.900
<v Speaker 0>BDD where it's okay. You shouldn't cover implementation

00:17:05.900 --> 00:17:08.380
<v Speaker 0>details, but we do have examples which are

00:17:08.780 --> 00:17:10.299
<v Speaker 0>inputs and outputs.

00:17:10.300 --> 00:17:11.900
<v Speaker 0>Or I I mean, it's all very blurry

00:17:11.900 --> 00:17:13.099
<v Speaker 0>for me. It's not something I have a

00:17:13.099 --> 00:17:15.500
<v Speaker 0>a good understanding of. So let let let's

00:17:15.500 --> 00:17:17.099
<v Speaker 1>talk a little bit about example mapping. So

00:17:18.194 --> 00:17:20.674
<v Speaker 1>Cucumber's been around for ages. Cucumber is what

00:17:20.674 --> 00:17:22.594
<v Speaker 1>that Gherkin syntax comes from.

00:17:23.954 --> 00:17:26.034
<v Speaker 1>Matt Wynn wrote about example mapping

00:17:26.434 --> 00:17:27.154
<v Speaker 1>maybe

00:17:28.355 --> 00:17:30.355
<v Speaker 1>five or six years ago, and it's you

00:17:30.355 --> 00:17:30.595
<v Speaker 1>know, the

00:17:31.635 --> 00:17:32.914
<v Speaker 1>so the way Matt

00:17:33.470 --> 00:17:34.429
<v Speaker 1>talked about it,

00:17:35.390 --> 00:17:38.270
<v Speaker 1>they're they've been using different workshop formats to

00:17:38.270 --> 00:17:40.270
<v Speaker 1>try and come up with these scenarios and,

00:17:40.270 --> 00:17:42.030
<v Speaker 1>like, make it less about typing stuff into

00:17:42.030 --> 00:17:43.150
<v Speaker 1>an IDE,

00:17:43.310 --> 00:17:44.910
<v Speaker 1>more about talking about it first.

00:17:46.025 --> 00:17:47.465
<v Speaker 1>And, you know, there's still lots of ways

00:17:47.465 --> 00:17:48.985
<v Speaker 1>of doing it, but example mapping is the

00:17:48.985 --> 00:17:51.304
<v Speaker 1>one that kind of clicked for him. And

00:17:52.664 --> 00:17:54.664
<v Speaker 1>he blogged about it, and I started using

00:17:54.664 --> 00:17:55.544
<v Speaker 1>it. And

00:17:55.865 --> 00:17:57.625
<v Speaker 1>it's a good starting point. It's a really

00:17:57.625 --> 00:17:59.429
<v Speaker 1>great starting point of how are we gonna

00:17:59.429 --> 00:18:02.070
<v Speaker 1>have these conversations in our in our organization,

00:18:02.070 --> 00:18:02.869
<v Speaker 1>in our team.

00:18:03.590 --> 00:18:05.270
<v Speaker 1>You can you can tweak the format, you

00:18:05.270 --> 00:18:07.909
<v Speaker 1>know, for what works for you. Yeah. But

00:18:08.070 --> 00:18:09.270
<v Speaker 1>let we can sort of do a sort

00:18:09.270 --> 00:18:11.644
<v Speaker 1>of vanilla example mapping and and and see

00:18:11.644 --> 00:18:13.085
<v Speaker 1>how it goes. If you if you show

00:18:13.085 --> 00:18:14.365
<v Speaker 1>the mirror, I can sort of explain what

00:18:14.365 --> 00:18:16.524
<v Speaker 1>the components are. You shouldn't have sent me

00:18:16.524 --> 00:18:17.725
<v Speaker 0>at all your print, my joke. I was

00:18:17.725 --> 00:18:19.325
<v Speaker 0>gonna tell you to get your whiteboard out.

00:18:21.085 --> 00:18:22.764
<v Speaker 1>I do have loads of cookies.

00:18:23.005 --> 00:18:24.445
<v Speaker 0>You got loads. Of course you do. Of

00:18:24.445 --> 00:18:26.380
<v Speaker 0>course you've got stickies. Well, because I'm a

00:18:26.380 --> 00:18:28.300
<v Speaker 1>consultant. I went big on buying loads of

00:18:28.300 --> 00:18:30.860
<v Speaker 1>stationery and then I've been sitting in my

00:18:30.860 --> 00:18:31.500
<v Speaker 1>house for the last

00:18:35.900 --> 00:18:37.820
<v Speaker 1>so this is just a generic whiteboard, but

00:18:38.965 --> 00:18:40.804
<v Speaker 1>the the let's talk about what the primitives

00:18:40.804 --> 00:18:41.764
<v Speaker 1>are. So

00:18:46.325 --> 00:18:47.605
<v Speaker 1>you're in a different part of the board

00:18:47.605 --> 00:18:48.325
<v Speaker 1>to me.

00:18:49.365 --> 00:18:50.565
<v Speaker 0>I am

00:18:51.044 --> 00:18:52.325
<v Speaker 0>I'll I'll meet you in the middle. Hang

00:18:52.325 --> 00:18:52.485
<v Speaker 1>on.

00:18:55.390 --> 00:18:57.070
<v Speaker 0>Oh, there we are. Right. Here we go.

00:18:57.070 --> 00:18:58.509
<v Speaker 1>Zoom out a little bit.

00:18:59.309 --> 00:19:00.110
<v Speaker 1>So

00:19:00.110 --> 00:19:00.830
<v Speaker 1>we have

00:19:02.270 --> 00:19:03.950
<v Speaker 1>example, think who's in it?

00:19:04.590 --> 00:19:06.865
<v Speaker 1>People who know people who can make decisions

00:19:06.865 --> 00:19:08.144
<v Speaker 1>about business stuff.

00:19:08.785 --> 00:19:11.184
<v Speaker 1>So like a product owner type, BAs.

00:19:11.905 --> 00:19:13.585
<v Speaker 1>People are gonna build it because it's important

00:19:13.585 --> 00:19:14.625
<v Speaker 1>they understand it.

00:19:15.425 --> 00:19:16.625
<v Speaker 1>And if you're not, you know, if you're

00:19:16.625 --> 00:19:17.905
<v Speaker 1>not in the conversation and you just have

00:19:17.905 --> 00:19:19.905
<v Speaker 1>the notes from the conversation afterwards, you're not

00:19:19.985 --> 00:19:21.900
<v Speaker 1>you don't have as much, like,

00:19:22.460 --> 00:19:23.260
<v Speaker 1>implicit

00:19:23.420 --> 00:19:24.460
<v Speaker 1>background knowledge.

00:19:24.860 --> 00:19:25.900
<v Speaker 0>So is this supposed to be a Meagles

00:19:25.900 --> 00:19:27.500
<v Speaker 0>thing or is this different?

00:19:27.580 --> 00:19:28.940
<v Speaker 1>Yeah. And the people who are gonna test

00:19:28.940 --> 00:19:30.140
<v Speaker 1>it. Alright. Okay.

00:19:30.780 --> 00:19:33.340
<v Speaker 1>And the point is to early on align

00:19:33.340 --> 00:19:35.740
<v Speaker 1>the expectations of all of those people about

00:19:35.955 --> 00:19:37.154
<v Speaker 1>what it's gonna do.

00:19:37.955 --> 00:19:38.594
<v Speaker 1>So

00:19:39.394 --> 00:19:41.394
<v Speaker 1>it's called a feature. Right? So what's

00:19:41.715 --> 00:19:43.315
<v Speaker 1>I'll just do a I'll just let's do

00:19:43.315 --> 00:19:44.354
<v Speaker 1>the format first.

00:19:46.835 --> 00:19:48.434
<v Speaker 1>You put a sticky on the wall and

00:19:48.434 --> 00:19:49.794
<v Speaker 1>you say, right. This is the feature we're

00:19:49.794 --> 00:19:50.594
<v Speaker 1>talking about.

00:19:50.995 --> 00:19:51.315
<v Speaker 0>Yep.

00:19:52.890 --> 00:19:54.330
<v Speaker 1>Just to give it some sort of scope.

00:19:54.330 --> 00:19:56.570
<v Speaker 1>You may sometimes people talk about multiple features

00:19:56.570 --> 00:19:57.530
<v Speaker 1>at the same time.

00:19:58.090 --> 00:20:01.130
<v Speaker 1>I found this kind of conversation, it's best

00:20:01.130 --> 00:20:02.490
<v Speaker 1>to just do it in twenty minutes and

00:20:02.490 --> 00:20:03.610
<v Speaker 1>talk about one thing

00:20:04.410 --> 00:20:05.850
<v Speaker 1>and do that more often

00:20:07.005 --> 00:20:10.205
<v Speaker 1>rather than your afternoon of death when we

00:20:10.205 --> 00:20:12.125
<v Speaker 1>just stay in the meeting room

00:20:12.605 --> 00:20:14.045
<v Speaker 1>the whole time. So it's nice to do

00:20:14.045 --> 00:20:15.245
<v Speaker 1>a quick, you know,

00:20:16.285 --> 00:20:17.645
<v Speaker 1>twenty to thirty minutes.

00:20:18.045 --> 00:20:19.325
<v Speaker 1>And then you're gonna say

00:20:21.110 --> 00:20:23.429
<v Speaker 1>a feature is gonna give someone the ability

00:20:23.429 --> 00:20:24.789
<v Speaker 1>to do something, which is gonna make some

00:20:24.789 --> 00:20:26.309
<v Speaker 1>sort of change. Right? So they're gonna be

00:20:26.309 --> 00:20:27.190
<v Speaker 1>rules.

00:20:30.549 --> 00:20:31.830
<v Speaker 1>So you're gonna try and capture what the

00:20:31.830 --> 00:20:32.390
<v Speaker 1>rules are.

00:20:35.845 --> 00:20:36.485
<v Speaker 1>And

00:20:37.845 --> 00:20:39.285
<v Speaker 1>just by giving an example is a good

00:20:39.285 --> 00:20:40.884
<v Speaker 1>idea. So

00:20:41.605 --> 00:20:42.965
<v Speaker 1>a rule is something like

00:20:44.485 --> 00:20:46.565
<v Speaker 1>I've overused this example, but a rule is

00:20:46.565 --> 00:20:47.285
<v Speaker 1>something like

00:20:48.309 --> 00:20:51.349
<v Speaker 1>clothing is charged 20% VAT.

00:20:53.110 --> 00:20:53.829
<v Speaker 1>Okay.

00:20:54.870 --> 00:20:56.149
<v Speaker 1>So maybe that's not a rule of the

00:20:56.149 --> 00:20:57.749
<v Speaker 1>system. Maybe it's

00:20:58.230 --> 00:21:00.789
<v Speaker 1>items get charged at the rate for the

00:21:00.789 --> 00:21:02.870
<v Speaker 1>category of product they're in

00:21:03.665 --> 00:21:05.184
<v Speaker 1>to make it more future proof when the

00:21:05.184 --> 00:21:06.544
<v Speaker 1>VAT rate changes. Right?

00:21:07.825 --> 00:21:08.544
<v Speaker 1>So

00:21:08.625 --> 00:21:10.385
<v Speaker 1>the rules are really the things that are

00:21:10.385 --> 00:21:12.545
<v Speaker 1>gonna actually be implemented in the system somewhere

00:21:12.545 --> 00:21:13.424
<v Speaker 1>in code.

00:21:13.745 --> 00:21:14.384
<v Speaker 0>Okay.

00:21:14.785 --> 00:21:15.665
<v Speaker 1>But in general,

00:21:18.860 --> 00:21:21.260
<v Speaker 1>each rule is is either gonna be implemented

00:21:21.260 --> 00:21:22.140
<v Speaker 1>in code,

00:21:22.460 --> 00:21:23.740
<v Speaker 1>specifically in the software,

00:21:24.060 --> 00:21:26.140
<v Speaker 1>or is gonna be implemented offline through some

00:21:26.140 --> 00:21:27.100
<v Speaker 1>sort of policy.

00:21:29.660 --> 00:21:31.340
<v Speaker 0>Okay. So should we try and map my

00:21:31.340 --> 00:21:33.260
<v Speaker 0>domain to the first feature in the first

00:21:33.260 --> 00:21:34.645
<v Speaker 0>row or not? Let

00:21:35.045 --> 00:21:36.885
<v Speaker 1>just talk about the other two things. So

00:21:37.525 --> 00:21:39.445
<v Speaker 1>the the good thing about features the good

00:21:39.445 --> 00:21:40.725
<v Speaker 1>thing about rules is that's the thing we

00:21:40.725 --> 00:21:42.165
<v Speaker 1>really want to understand. What are the rules

00:21:42.165 --> 00:21:43.605
<v Speaker 1>of the system? What are the program what

00:21:43.605 --> 00:21:45.445
<v Speaker 1>algorithms are the programs gonna have to implement?

00:21:46.750 --> 00:21:48.509
<v Speaker 1>But then to make sure we understand

00:21:48.510 --> 00:21:49.230
<v Speaker 1>them

00:21:50.830 --> 00:21:52.190
<v Speaker 1>the wrong color.

00:21:52.750 --> 00:21:54.509
<v Speaker 1>We

00:21:55.070 --> 00:21:56.269
<v Speaker 1>give examples.

00:21:57.230 --> 00:21:59.230
<v Speaker 1>And when you're in example mapping, you're not

00:21:59.230 --> 00:22:01.225
<v Speaker 1>gonna write out a big old paragraph, but

00:22:01.225 --> 00:22:02.904
<v Speaker 1>you're gonna give an example of how that

00:22:02.904 --> 00:22:03.945
<v Speaker 1>rule would be applied.

00:22:04.904 --> 00:22:06.505
<v Speaker 1>And you'd think for most rules, you'd need

00:22:06.505 --> 00:22:07.705
<v Speaker 1>at least one example.

00:22:09.225 --> 00:22:11.784
<v Speaker 1>They're being implied in real life applied in

00:22:11.784 --> 00:22:14.360
<v Speaker 1>real life. And we scope we scope the

00:22:14.360 --> 00:22:15.960
<v Speaker 1>examples to the rule. Some would need more

00:22:15.960 --> 00:22:16.919
<v Speaker 1>than one example.

00:22:18.919 --> 00:22:20.840
<v Speaker 1>I'm sure you can think of a rule.

00:22:20.840 --> 00:22:21.480
<v Speaker 1>You know?

00:22:21.880 --> 00:22:24.200
<v Speaker 1>You get one one I've used in talks

00:22:24.200 --> 00:22:25.799
<v Speaker 1>is if you get free shipping more if

00:22:25.799 --> 00:22:27.855
<v Speaker 1>you buy more than the free shipping threshold,

00:22:27.855 --> 00:22:30.415
<v Speaker 1>you need an example where the free shipping

00:22:30.415 --> 00:22:32.575
<v Speaker 1>threshold is £50 and I spend £60, so

00:22:32.575 --> 00:22:33.695
<v Speaker 1>I don't pay any shipping.

00:22:34.415 --> 00:22:36.174
<v Speaker 1>And I need another example where

00:22:37.215 --> 00:22:39.055
<v Speaker 1>I go this. So so how do you

00:22:39.055 --> 00:22:41.340
<v Speaker 1>decide how many examples to give? We're not

00:22:41.340 --> 00:22:42.460
<v Speaker 1>worried about testing

00:22:42.860 --> 00:22:43.659
<v Speaker 1>yet.

00:22:44.380 --> 00:22:47.260
<v Speaker 0>Okay. We're thinking how many if I was

00:22:47.260 --> 00:22:48.779
<v Speaker 1>talking to David about this,

00:22:49.500 --> 00:22:50.299
<v Speaker 1>how many

00:22:50.780 --> 00:22:52.220
<v Speaker 1>examples would I have to give him with

00:22:52.220 --> 00:22:54.380
<v Speaker 1>details in before he goes, okay. I get

00:22:54.380 --> 00:22:54.540
<v Speaker 1>it.

00:22:55.595 --> 00:22:57.434
<v Speaker 1>I understand. A lot. Yeah.

00:22:58.315 --> 00:22:59.275
<v Speaker 1>Ideally

00:22:59.515 --> 00:23:01.755
<v Speaker 1>ideally, you'd hear some examples coming back from

00:23:01.755 --> 00:23:02.395
<v Speaker 1>you.

00:23:04.235 --> 00:23:06.075
<v Speaker 1>Okay. And then I I go, yeah. That's

00:23:06.075 --> 00:23:07.515
<v Speaker 1>how it works. So

00:23:07.890 --> 00:23:10.130
<v Speaker 1>because the rules are so nebulous, they have

00:23:10.130 --> 00:23:12.610
<v Speaker 1>lots of possible inputs, lots of possible outputs.

00:23:12.690 --> 00:23:14.690
<v Speaker 1>It's really hard for us to tell if

00:23:14.690 --> 00:23:16.210
<v Speaker 1>we've both understood the rule.

00:23:17.170 --> 00:23:18.930
<v Speaker 1>If you've got an example that's got concrete

00:23:18.930 --> 00:23:19.490
<v Speaker 1>detail in,

00:23:21.315 --> 00:23:23.235
<v Speaker 1>we both run it through our heads.

00:23:23.554 --> 00:23:25.075
<v Speaker 1>We both run it through our understandings of

00:23:25.075 --> 00:23:26.195
<v Speaker 1>the rule. And if we come if we

00:23:26.195 --> 00:23:27.875
<v Speaker 1>both say yes, that's how it should work,

00:23:27.875 --> 00:23:29.235
<v Speaker 1>then it kind of tells us we've got

00:23:29.235 --> 00:23:31.075
<v Speaker 1>that synchronization.

00:23:32.515 --> 00:23:35.440
<v Speaker 1>Yeah. Yep. Okay. And the other thing that's

00:23:35.440 --> 00:23:37.039
<v Speaker 1>important, especially in a big group, is we

00:23:37.039 --> 00:23:37.999
<v Speaker 1>also capture

00:23:38.880 --> 00:23:39.679
<v Speaker 1>questions.

00:23:40.080 --> 00:23:40.719
<v Speaker 1>So

00:23:44.000 --> 00:23:46.240
<v Speaker 1>a good even with the two of us,

00:23:46.240 --> 00:23:47.759
<v Speaker 1>this this is more applicable in a big

00:23:47.759 --> 00:23:49.855
<v Speaker 1>group. But often you'll have a question and

00:23:49.855 --> 00:23:51.135
<v Speaker 1>then you'll think, I'll ask about that in

00:23:51.135 --> 00:23:52.975
<v Speaker 1>a minute and then you forget. So it's

00:23:52.975 --> 00:23:54.414
<v Speaker 1>good to be in the practice of

00:23:55.295 --> 00:23:57.615
<v Speaker 1>writing down your question, especially when people start

00:23:57.615 --> 00:24:00.095
<v Speaker 1>doing it. I like them to only be

00:24:00.095 --> 00:24:01.615
<v Speaker 1>able to ask questions that they've written down,

00:24:02.320 --> 00:24:03.600
<v Speaker 1>which is a bit of a training wheels

00:24:03.600 --> 00:24:05.040
<v Speaker 1>thing, but it gets you into the practice

00:24:05.040 --> 00:24:05.760
<v Speaker 1>because

00:24:06.480 --> 00:24:08.720
<v Speaker 1>if there's five of us and three people

00:24:08.720 --> 00:24:10.160
<v Speaker 1>are talking, the other two can be writing

00:24:10.160 --> 00:24:12.080
<v Speaker 1>down the questions that are coming up, you

00:24:12.080 --> 00:24:14.960
<v Speaker 1>know, and buffering them up fully. So

00:24:15.200 --> 00:24:15.680
<v Speaker 1>that's it.

00:24:16.875 --> 00:24:19.035
<v Speaker 1>Let's talk about your feature. What's your feature?

00:24:25.275 --> 00:24:26.635
<v Speaker 1>Or you can start with the rules if

00:24:26.635 --> 00:24:29.035
<v Speaker 1>you want. No. No. No. No. So let

00:24:29.035 --> 00:24:30.955
<v Speaker 0>me I wanna because

00:24:31.360 --> 00:24:32.320
<v Speaker 1>thing just just to look

00:24:34.480 --> 00:24:36.159
<v Speaker 0>When we say what is a feature. Right?

00:24:36.159 --> 00:24:37.359
<v Speaker 0>I mean, I can tell you

00:24:38.720 --> 00:24:40.399
<v Speaker 0>the feature of the whole as an application

00:24:40.399 --> 00:24:43.200
<v Speaker 0>as a whole, right, is to continuously

00:24:43.600 --> 00:24:44.960
<v Speaker 0>fetch

00:24:46.165 --> 00:24:48.725
<v Speaker 0>and update a GET repository locally,

00:24:48.885 --> 00:24:51.365
<v Speaker 0>publish and changes as they happen. Now that's

00:24:51.365 --> 00:24:53.525
<v Speaker 0>quite large. So I'm assuming the feature level

00:24:53.525 --> 00:24:55.125
<v Speaker 0>has to be a little bit deeper than

00:24:55.125 --> 00:24:57.605
<v Speaker 0>that. So I'm thinking, okay. Does that mean

00:24:57.605 --> 00:24:59.125
<v Speaker 0>that our first feature is

00:24:59.790 --> 00:25:01.470
<v Speaker 0>it can clone a GET repository?

00:25:01.550 --> 00:25:03.710
<v Speaker 0>Is that the first feature? Or is that

00:25:04.190 --> 00:25:05.630
<v Speaker 0>too too low?

00:25:06.110 --> 00:25:07.150
<v Speaker 0>I have no idea.

00:25:08.830 --> 00:25:11.070
<v Speaker 1>They're actually something that comes out of

00:25:13.015 --> 00:25:13.815
<v Speaker 1>maybe

00:25:13.815 --> 00:25:16.934
<v Speaker 1>I'll phrase it like cloning a Git repo.

00:25:17.815 --> 00:25:18.534
<v Speaker 1>Now

00:25:19.015 --> 00:25:21.175
<v Speaker 1>feature really is just a way for us

00:25:21.175 --> 00:25:22.935
<v Speaker 1>to bunch these things together. And the more

00:25:22.935 --> 00:25:24.055
<v Speaker 1>I've done example mapping,

00:25:24.730 --> 00:25:26.570
<v Speaker 1>the more I start to think of

00:25:27.929 --> 00:25:30.409
<v Speaker 1>features as a sort of logical grouping of

00:25:30.409 --> 00:25:32.090
<v Speaker 1>business rules that all need to be implemented

00:25:32.090 --> 00:25:32.809
<v Speaker 1>together

00:25:33.529 --> 00:25:34.889
<v Speaker 1>for business reasons.

00:25:35.769 --> 00:25:38.169
<v Speaker 0>Okay. So that chunk

00:25:38.169 --> 00:25:38.649
<v Speaker 0>of work.

00:25:40.665 --> 00:25:42.505
<v Speaker 1>So it's related to that user story thing.

00:25:42.505 --> 00:25:44.345
<v Speaker 1>Right? The feature is the thing you might

00:25:44.345 --> 00:25:45.705
<v Speaker 1>have in your sprint backlog

00:25:45.945 --> 00:25:47.545
<v Speaker 1>or on your Kanban board.

00:25:47.945 --> 00:25:49.705
<v Speaker 1>It's like, we'll do these bits together.

00:25:51.865 --> 00:25:52.585
<v Speaker 0>Okay. Okay.

00:25:54.040 --> 00:25:54.360
<v Speaker 0>And

00:25:54.920 --> 00:25:56.040
<v Speaker 1>So why is that for as small as

00:25:56.040 --> 00:25:57.480
<v Speaker 1>possible is a good practice?

00:25:58.680 --> 00:26:01.000
<v Speaker 0>So calling a GET repository as as a

00:26:01.000 --> 00:26:03.480
<v Speaker 0>feature in this example mapping context. Right?

00:26:04.680 --> 00:26:06.440
<v Speaker 1>Yeah. If it's something you would want to

00:26:06.440 --> 00:26:06.840
<v Speaker 1>do

00:26:07.384 --> 00:26:10.264
<v Speaker 1>on its own. Yeah. I think I mean,

00:26:10.264 --> 00:26:12.024
<v Speaker 0>well, it is how I started breaking the

00:26:12.024 --> 00:26:13.225
<v Speaker 0>code. The first part of code I wrote

00:26:13.225 --> 00:26:14.264
<v Speaker 0>was I want this to be able to

00:26:14.264 --> 00:26:15.625
<v Speaker 0>clone a repository. There are a couple of

00:26:15.625 --> 00:26:17.544
<v Speaker 0>rules, which I'll try and guess now then.

00:26:17.544 --> 00:26:18.984
<v Speaker 0>So the first rule is,

00:26:19.225 --> 00:26:21.384
<v Speaker 0>as the directory already exists,

00:26:22.420 --> 00:26:23.700
<v Speaker 0>don't clone it.

00:26:28.500 --> 00:26:29.539
<v Speaker 1>Okay. So

00:26:30.340 --> 00:26:30.899
<v Speaker 1>we

00:26:31.300 --> 00:26:32.740
<v Speaker 1>need to sort of figure out what level

00:26:32.740 --> 00:26:34.100
<v Speaker 1>we're at. So

00:26:34.660 --> 00:26:36.420
<v Speaker 1>is that like if it's already been cloned?

00:26:38.095 --> 00:26:40.575
<v Speaker 0>Okay. So there are a few different semantics

00:26:40.575 --> 00:26:42.254
<v Speaker 0>here, I guess. Right? So,

00:26:43.294 --> 00:26:44.495
<v Speaker 0>I mean, we could go through the code

00:26:44.495 --> 00:26:45.775
<v Speaker 0>maybe or I can just try and remember

00:26:45.775 --> 00:26:48.015
<v Speaker 0>it. But what happens is when we say,

00:26:48.015 --> 00:26:49.294
<v Speaker 0>okay, start get sync.

00:26:49.775 --> 00:26:51.215
<v Speaker 0>The first thing it does is says, okay,

00:26:51.215 --> 00:26:53.770
<v Speaker 0>am I configured to pillar repository? Let's assume

00:26:53.770 --> 00:26:55.050
<v Speaker 0>that is yes for now because I don't

00:26:55.050 --> 00:26:56.410
<v Speaker 0>think that's particularly interesting.

00:26:56.810 --> 00:26:58.810
<v Speaker 0>And then says, okay. Does the directory that

00:26:58.810 --> 00:27:00.810
<v Speaker 0>I wanna clone this to exist? If it

00:27:00.810 --> 00:27:02.970
<v Speaker 0>does exist, then checks that it's a git

00:27:02.970 --> 00:27:05.235
<v Speaker 0>repository. It checks that the remote match is

00:27:05.235 --> 00:27:06.835
<v Speaker 0>what we are expecting the remote to be.

00:27:06.835 --> 00:27:09.075
<v Speaker 0>So it will validate that the repository cloned

00:27:09.075 --> 00:27:11.075
<v Speaker 0>as a GET repository and as the GET

00:27:11.075 --> 00:27:12.754
<v Speaker 0>repository that we want to clone.

00:27:13.795 --> 00:27:15.955
<v Speaker 0>And those are the two checks that happened.

00:27:17.235 --> 00:27:19.635
<v Speaker 1>Alright. So there's an example where

00:27:21.100 --> 00:27:22.219
<v Speaker 1>directory

00:27:23.899 --> 00:27:25.179
<v Speaker 1>my projects

00:27:25.659 --> 00:27:26.620
<v Speaker 1>exists

00:27:26.620 --> 00:27:28.859
<v Speaker 1>but isn't a Git repo.

00:27:29.340 --> 00:27:30.139
<v Speaker 0>Correct.

00:27:30.700 --> 00:27:31.659
<v Speaker 1>What what happens?

00:27:35.914 --> 00:27:38.955
<v Speaker 0>Actually, it will print an error and exit.

00:27:43.995 --> 00:27:45.755
<v Speaker 1>It gets synced when you run periodically.

00:27:47.260 --> 00:27:49.740
<v Speaker 0>So you would embed get synced into your

00:27:49.740 --> 00:27:52.380
<v Speaker 0>own application, which would run every five seconds

00:27:52.380 --> 00:27:55.260
<v Speaker 0>and try to fetch updates for that repository.

00:27:55.420 --> 00:27:57.420
<v Speaker 0>Alright. Because This is a startup rule though.

00:27:57.420 --> 00:27:58.380
<v Speaker 0>So if if it can't,

00:27:58.905 --> 00:28:00.985
<v Speaker 0>if that directory already exists on startup and

00:28:00.985 --> 00:28:02.905
<v Speaker 0>as in a repos a GET repository, there

00:28:02.905 --> 00:28:05.065
<v Speaker 0>just won't start the reconciliation loop.

00:28:05.785 --> 00:28:07.545
<v Speaker 1>What happens if it is a GET repository?

00:28:07.785 --> 00:28:10.745
<v Speaker 0>It will then inspect the remotes and check

00:28:10.745 --> 00:28:13.545
<v Speaker 0>for one called origin, which matches the configuration.

00:28:14.850 --> 00:28:16.530
<v Speaker 0>So it's basically saying as that's the repository

00:28:16.530 --> 00:28:18.049
<v Speaker 0>I'm supposed to be monitoring.

00:28:18.770 --> 00:28:20.210
<v Speaker 1>So you won't clone it?

00:28:20.930 --> 00:28:22.690
<v Speaker 0>No. If that check passes, it will enter

00:28:22.690 --> 00:28:24.850
<v Speaker 0>the reconciliation loop. If it doesn't pass, it

00:28:24.850 --> 00:28:25.890
<v Speaker 0>will exit with an error.

00:28:32.065 --> 00:28:34.465
<v Speaker 1>So Are you regretting your decision to join

00:28:34.465 --> 00:28:35.664
<v Speaker 0>me on this stream now?

00:28:36.305 --> 00:28:38.145
<v Speaker 1>No. It always feels like this in the

00:28:38.145 --> 00:28:38.545
<v Speaker 1>news

00:28:39.640 --> 00:28:42.120
<v Speaker 1>because I'm having to to level up, but

00:28:42.120 --> 00:28:43.320
<v Speaker 1>I'm I'm just

00:28:44.120 --> 00:28:45.880
<v Speaker 1>helps me to just focus on typing things

00:28:45.880 --> 00:28:47.720
<v Speaker 1>in and just type in what I'm listening

00:28:47.880 --> 00:28:50.600
<v Speaker 1>to until I start to understand it. So

00:28:50.760 --> 00:28:51.960
<v Speaker 1>I'm gonna ask some questions. So

00:28:56.215 --> 00:28:57.735
<v Speaker 1>but but enter

00:28:58.375 --> 00:28:59.255
<v Speaker 1>reconciliation.

00:29:00.695 --> 00:29:02.935
<v Speaker 0>Yeah. Reconciliation a little bit, I think, is

00:29:02.935 --> 00:29:05.495
<v Speaker 0>another feature, but I'm unsure. We actually have

00:29:05.495 --> 00:29:07.975
<v Speaker 0>a comment from Bradley who says, so as

00:29:07.975 --> 00:29:09.730
<v Speaker 0>the feature just gets synced and not cloning

00:29:09.730 --> 00:29:10.690
<v Speaker 0>a repository.

00:29:11.330 --> 00:29:11.889
<v Speaker 0>I

00:29:12.289 --> 00:29:14.609
<v Speaker 0>don't know. I'll rely on Ketan.

00:29:15.970 --> 00:29:18.690
<v Speaker 1>So I would say that of all these

00:29:18.690 --> 00:29:20.770
<v Speaker 1>things we're talking about, the feature is the

00:29:20.770 --> 00:29:23.090
<v Speaker 1>thing that's most sort of arbitrary.

00:29:24.345 --> 00:29:26.265
<v Speaker 0>Send me the feature as first clone or

00:29:26.265 --> 00:29:28.265
<v Speaker 0>get repository, then we enter the second feature

00:29:28.265 --> 00:29:30.665
<v Speaker 0>which is the reconciliation loop. Would that be

00:29:30.665 --> 00:29:32.505
<v Speaker 0>two different features with two different sets of

00:29:32.505 --> 00:29:32.825
<v Speaker 0>rules?

00:29:35.970 --> 00:29:38.450
<v Speaker 1>I we say don't worry about it. Okay.

00:29:38.450 --> 00:29:39.250
<v Speaker 1>It's

00:29:39.250 --> 00:29:41.490
<v Speaker 1>just the way of bundling some rules together

00:29:41.490 --> 00:29:43.409
<v Speaker 1>that we're gonna talk about as one thing.

00:29:45.490 --> 00:29:46.210
<v Speaker 1>And, ideally,

00:29:46.690 --> 00:29:48.049
<v Speaker 1>it's a bundle of rules that I mean,

00:29:48.049 --> 00:29:49.169
<v Speaker 1>if you wanna go down that route.

00:29:51.225 --> 00:29:53.145
<v Speaker 1>It's nice to have a feature that is

00:29:53.865 --> 00:29:55.225
<v Speaker 1>adds a capability.

00:29:56.505 --> 00:29:58.184
<v Speaker 1>So it allows allows

00:29:58.184 --> 00:30:00.745
<v Speaker 1>some entity to do something they couldn't do

00:30:00.745 --> 00:30:02.585
<v Speaker 1>before or stops them doing something bad that

00:30:02.585 --> 00:30:03.385
<v Speaker 1>they could do before.

00:30:04.230 --> 00:30:06.150
<v Speaker 0>Okay. No. Can I can I throw some

00:30:06.150 --> 00:30:07.269
<v Speaker 0>questions at you then?

00:30:07.510 --> 00:30:08.149
<v Speaker 1>Yeah.

00:30:08.710 --> 00:30:10.870
<v Speaker 0>So, you know, assuming other people are watching

00:30:10.870 --> 00:30:11.990
<v Speaker 0>this because they wanna be able to do

00:30:11.990 --> 00:30:13.910
<v Speaker 0>their own example map. Right? I'm assuming they're

00:30:13.910 --> 00:30:14.950
<v Speaker 0>gonna have some of the same questions that

00:30:14.950 --> 00:30:16.790
<v Speaker 0>I've got. Now the one that's set at

00:30:16.790 --> 00:30:17.910
<v Speaker 0>the top of my head is,

00:30:18.394 --> 00:30:20.875
<v Speaker 0>should I bog myself down with what the

00:30:20.875 --> 00:30:23.355
<v Speaker 0>features are? Or is, you know, could I

00:30:23.355 --> 00:30:25.514
<v Speaker 0>just keep listing examples and then kind of

00:30:25.514 --> 00:30:28.075
<v Speaker 0>segment them later? Is that another approach for

00:30:28.075 --> 00:30:28.794
<v Speaker 0>doing this?

00:30:29.195 --> 00:30:30.154
<v Speaker 1>You should. So

00:30:31.090 --> 00:30:33.409
<v Speaker 1>that's a really good question. Sometimes

00:30:33.409 --> 00:30:34.210
<v Speaker 1>it's hard to

00:30:35.809 --> 00:30:37.330
<v Speaker 1>there's two types of people.

00:30:37.970 --> 00:30:39.009
<v Speaker 1>Some people

00:30:39.250 --> 00:30:40.369
<v Speaker 1>will come in

00:30:41.090 --> 00:30:42.850
<v Speaker 1>if you put a business person on the

00:30:42.850 --> 00:30:44.130
<v Speaker 1>spot and say, right, you have to write

00:30:44.130 --> 00:30:45.970
<v Speaker 1>the requirements for this IT project.

00:30:46.665 --> 00:30:48.265
<v Speaker 1>That I mean, don't do that.

00:30:48.585 --> 00:30:50.265
<v Speaker 1>But that's what most people do. Right? They

00:30:50.265 --> 00:30:52.185
<v Speaker 1>say, you have to submit a thing to

00:30:52.185 --> 00:30:54.025
<v Speaker 1>this person by Tuesday to get it on

00:30:54.025 --> 00:30:56.105
<v Speaker 1>the sprint and all that kind of nonsense.

00:30:56.585 --> 00:30:57.705
<v Speaker 1>Some of them will

00:30:58.265 --> 00:31:00.425
<v Speaker 1>think through very clearly what are the rules.

00:31:00.980 --> 00:31:02.900
<v Speaker 1>And often that's in a domain that's very

00:31:02.900 --> 00:31:05.780
<v Speaker 1>rule oriented, like maybe accounting or law.

00:31:05.940 --> 00:31:07.380
<v Speaker 1>So they'll be able to write down things

00:31:07.380 --> 00:31:07.940
<v Speaker 1>like

00:31:08.420 --> 00:31:09.940
<v Speaker 1>you know, if it's something that's really familiar

00:31:09.940 --> 00:31:11.380
<v Speaker 1>to them, they'll be able to write down.

00:31:11.380 --> 00:31:13.220
<v Speaker 1>You can't issue issue a credit note without

00:31:13.220 --> 00:31:15.940
<v Speaker 1>it being attached to an invoice that hasn't

00:31:15.495 --> 00:31:17.735
<v Speaker 1>previously been credit note. You know? Something like

00:31:17.735 --> 00:31:18.774
<v Speaker 1>that. Yeah.

00:31:19.255 --> 00:31:21.015
<v Speaker 1>When you're reading those and then put it

00:31:21.015 --> 00:31:22.455
<v Speaker 1>in a load of paragraphs in Jira or

00:31:22.455 --> 00:31:23.014
<v Speaker 1>something.

00:31:23.735 --> 00:31:24.934
<v Speaker 1>But when you're reading that, can sort of

00:31:24.934 --> 00:31:25.894
<v Speaker 1>pull out the rules.

00:31:27.095 --> 00:31:28.695
<v Speaker 1>And all you need to do then

00:31:29.220 --> 00:31:31.460
<v Speaker 1>is make sure you understand the rules by

00:31:31.460 --> 00:31:33.620
<v Speaker 1>giving examples of how that you then generate

00:31:33.620 --> 00:31:34.580
<v Speaker 1>some examples,

00:31:35.299 --> 00:31:37.380
<v Speaker 1>and you're just checking that you've understand you've

00:31:37.380 --> 00:31:39.460
<v Speaker 1>understood the rules that you spotted.

00:31:40.100 --> 00:31:42.179
<v Speaker 1>The other way around is

00:31:43.115 --> 00:31:45.835
<v Speaker 1>maybe it's in a quite complicated situation or

00:31:46.315 --> 00:31:48.795
<v Speaker 1>there's somebody who doesn't have a huge knowledge

00:31:48.795 --> 00:31:50.395
<v Speaker 1>of the domain either because it's new or

00:31:50.395 --> 00:31:51.355
<v Speaker 1>they're new to it.

00:31:51.915 --> 00:31:52.875
<v Speaker 1>They might say, I don't know what the

00:31:52.875 --> 00:31:54.475
<v Speaker 1>rules are, but but if you ask a

00:31:54.475 --> 00:31:57.020
<v Speaker 1>specific question, what should happen in this situation?

00:31:57.020 --> 00:31:58.220
<v Speaker 1>They'll be able to tell you.

00:31:58.620 --> 00:32:00.539
<v Speaker 1>Which is like the examples first way.

00:32:01.340 --> 00:32:02.779
<v Speaker 1>So we certainly can.

00:32:04.460 --> 00:32:05.740
<v Speaker 1>There's only two of us, so we're not

00:32:05.900 --> 00:32:08.780
<v Speaker 1>the conversation isn't as busy. But quite often,

00:32:09.465 --> 00:32:11.225
<v Speaker 1>if you hear an example, just write it

00:32:11.225 --> 00:32:13.624
<v Speaker 1>down and don't don't allocate it to anything.

00:32:14.424 --> 00:32:16.985
<v Speaker 1>And then later on, we'll figure out maybe

00:32:16.985 --> 00:32:18.504
<v Speaker 1>that example has

00:32:18.745 --> 00:32:20.585
<v Speaker 1>told us about some new rules. You know?

00:32:21.820 --> 00:32:24.540
<v Speaker 0>Alright. Okay. But the end but

00:32:25.500 --> 00:32:27.260
<v Speaker 1>the end state is we want the examples

00:32:27.260 --> 00:32:29.500
<v Speaker 1>to be scoped to rules. So sometimes

00:32:30.300 --> 00:32:32.300
<v Speaker 1>you'll have an example and you'll realize there's

00:32:32.300 --> 00:32:34.059
<v Speaker 1>five or six rules being applied,

00:32:34.220 --> 00:32:35.740
<v Speaker 1>and you'll have to kind of decompose it

00:32:35.740 --> 00:32:36.700
<v Speaker 1>a bit to make it clearer.

00:32:37.355 --> 00:32:38.795
<v Speaker 1>You'll have an example that's like the whole

00:32:38.955 --> 00:32:41.595
<v Speaker 1>the story of the entire system. Yep. And

00:32:41.595 --> 00:32:42.875
<v Speaker 1>you'll kinda want to split it up a

00:32:42.875 --> 00:32:43.674
<v Speaker 1>bit. So

00:32:44.155 --> 00:32:45.435
<v Speaker 1>let let's go back to what we're doing.

00:32:45.435 --> 00:32:46.794
<v Speaker 1>Okay? Yep.

00:32:48.155 --> 00:32:49.195
<v Speaker 1>I'm doing that question.

00:32:49.690 --> 00:32:52.090
<v Speaker 1>If the repository was already cloned, don't clone

00:32:52.090 --> 00:32:54.570
<v Speaker 1>it. So that makes sense. The directory exist,

00:32:54.570 --> 00:32:56.570
<v Speaker 1>but isn't a Git repo. Show an error

00:32:56.570 --> 00:32:58.809
<v Speaker 1>because you can't recover from that. Yep.

00:32:59.530 --> 00:33:00.970
<v Speaker 1>If it exists and it is a Git

00:33:00.970 --> 00:33:03.210
<v Speaker 1>repo, we'll do a thing called reconciliation

00:33:03.210 --> 00:33:03.610
<v Speaker 1>next.

00:33:06.054 --> 00:33:08.854
<v Speaker 0>Well, yeah, we've messed so we also had

00:33:11.575 --> 00:33:12.534
<v Speaker 0>a director

00:33:14.774 --> 00:33:16.294
<v Speaker 0>as a Git repo.

00:33:17.080 --> 00:33:19.320
<v Speaker 0>It's not the rate queue. It's not the

00:33:19.320 --> 00:33:20.840
<v Speaker 0>correct GET repository.

00:33:23.400 --> 00:33:24.120
<v Speaker 0>Okay.

00:33:24.680 --> 00:33:25.559
<v Speaker 0>That

00:33:25.720 --> 00:33:26.520
<v Speaker 0>should

00:33:26.600 --> 00:33:27.480
<v Speaker 0>error.

00:33:28.840 --> 00:33:29.240
<v Speaker 0>Right?

00:33:30.285 --> 00:33:32.045
<v Speaker 0>But it could be a GET repository, but

00:33:32.045 --> 00:33:33.965
<v Speaker 0>when we analyze the remote, really, oh, this

00:33:33.965 --> 00:33:34.925
<v Speaker 0>is actually

00:33:35.085 --> 00:33:37.485
<v Speaker 0>some other GET repository. At which point, we

00:33:37.485 --> 00:33:38.445
<v Speaker 0>can't do anything.

00:33:38.925 --> 00:33:41.165
<v Speaker 1>And what's the rule about whether it's the

00:33:41.165 --> 00:33:42.285
<v Speaker 1>right reconciliation

00:33:42.445 --> 00:33:43.805
<v Speaker 1>whether it's the right one? It has a

00:33:43.805 --> 00:33:44.205
<v Speaker 1>remote

00:33:45.210 --> 00:33:47.690
<v Speaker 0>So if we imagine that when I'm I'm

00:33:47.690 --> 00:33:48.649
<v Speaker 0>gonna add up

00:33:49.049 --> 00:33:51.130
<v Speaker 0>like, I I like my own color. So,

00:33:51.130 --> 00:33:52.570
<v Speaker 0>I mean, if we imagine that the way

00:33:52.570 --> 00:33:54.809
<v Speaker 0>I start this would be repo

00:33:54.809 --> 00:33:55.850
<v Speaker 0>as is

00:33:56.409 --> 00:33:59.690
<v Speaker 0>let's just say, github.com/rockcode/rockcode.

00:33:59.690 --> 00:33:59.929
<v Speaker 0>Right?

00:34:01.715 --> 00:34:03.155
<v Speaker 0>And that's gonna

00:34:04.595 --> 00:34:06.595
<v Speaker 0>clone to a directory called

00:34:06.915 --> 00:34:09.395
<v Speaker 0>my clone. Now if my clone

00:34:09.795 --> 00:34:13.155
<v Speaker 0>has a remote that hasn't github.com/rockode/rockode,

00:34:13.155 --> 00:34:15.400
<v Speaker 0>then I just have to enter and exit.

00:34:15.719 --> 00:34:17.160
<v Speaker 1>It doesn't have a remote.

00:34:17.480 --> 00:34:19.000
<v Speaker 0>Well, it will have a remote, but not

00:34:19.000 --> 00:34:20.200
<v Speaker 0>the remote we expect.

00:34:20.440 --> 00:34:22.760
<v Speaker 1>So if it has a remote with correct

00:34:25.080 --> 00:34:25.480
<v Speaker 1>URL?

00:34:26.534 --> 00:34:27.895
<v Speaker 0>Yeah. You can see. Yeah. I don't know

00:34:27.895 --> 00:34:30.375
<v Speaker 0>what URL could be incorrect or correct. Yeah.

00:34:30.534 --> 00:34:32.775
<v Speaker 0>And with a different rule. Yeah. So we

00:34:32.775 --> 00:34:35.094
<v Speaker 1>we talked about didn't we the the kind

00:34:35.094 --> 00:34:36.455
<v Speaker 1>of level of abstraction.

00:34:37.094 --> 00:34:38.295
<v Speaker 1>Something that

00:34:39.389 --> 00:34:41.630
<v Speaker 1>is maybe important to talk about is that

00:34:41.789 --> 00:34:44.670
<v Speaker 1>different rules happen at different levels of abstraction.

00:34:45.869 --> 00:34:46.510
<v Speaker 1>And

00:34:46.829 --> 00:34:48.510
<v Speaker 1>it's important to capture all the rules you've

00:34:48.510 --> 00:34:49.710
<v Speaker 1>got, but some of them might not be

00:34:49.710 --> 00:34:51.230
<v Speaker 1>ones that the business people care about.

00:34:52.784 --> 00:34:53.344
<v Speaker 1>So

00:34:53.585 --> 00:34:54.864
<v Speaker 1>this is one where

00:34:55.824 --> 00:34:56.385
<v Speaker 1>a sort of

00:34:57.105 --> 00:34:58.385
<v Speaker 1>you could you could sort of say that

00:34:58.385 --> 00:35:01.105
<v Speaker 1>this this rule that I'm wobbling

00:35:01.825 --> 00:35:04.625
<v Speaker 1>about what makes it a correct remote

00:35:04.945 --> 00:35:05.905
<v Speaker 1>is a sort of

00:35:06.880 --> 00:35:09.280
<v Speaker 1>sub rule of how reconciliation loop is gonna

00:35:09.280 --> 00:35:09.840
<v Speaker 1>work.

00:35:10.960 --> 00:35:12.160
<v Speaker 1>Does that make sense?

00:35:12.640 --> 00:35:15.280
<v Speaker 0>Well, we wouldn't enter the reconciliation loop if

00:35:15.280 --> 00:35:16.560
<v Speaker 0>the remote was incorrect.

00:35:19.145 --> 00:35:20.744
<v Speaker 0>So those are the two checks that happen

00:35:20.744 --> 00:35:22.744
<v Speaker 0>on startup. First, as a a directory with

00:35:22.744 --> 00:35:24.665
<v Speaker 0>a Git repository and as the remote correct.

00:35:24.665 --> 00:35:25.465
<v Speaker 0>And then

00:35:25.865 --> 00:35:28.105
<v Speaker 0>we enter the reconciliation loop, has all of

00:35:28.105 --> 00:35:29.065
<v Speaker 0>its own rules.

00:35:29.465 --> 00:35:31.225
<v Speaker 1>So is that example in the right place?

00:35:31.225 --> 00:35:32.425
<v Speaker 1>Would you see that as part of the

00:35:33.260 --> 00:35:35.820
<v Speaker 0>Oh, no. I just stole that card.

00:35:35.980 --> 00:35:37.020
<v Speaker 1>Okay. So

00:35:37.500 --> 00:35:39.260
<v Speaker 0>I alright. Okay. So we're we're putting these

00:35:39.260 --> 00:35:41.180
<v Speaker 0>under okay. Yeah. That's my bad. Right? So

00:35:41.180 --> 00:35:42.619
<v Speaker 0>that example should have been under the other

00:35:42.619 --> 00:35:45.020
<v Speaker 0>rule. So so this thing about this this

00:35:45.020 --> 00:35:47.339
<v Speaker 1>rule about what makes it a correct

00:35:48.825 --> 00:35:50.345
<v Speaker 1>remote. So we've got this concept of it's

00:35:50.345 --> 00:35:51.545
<v Speaker 1>not the correct repo.

00:35:51.705 --> 00:35:52.585
<v Speaker 1>Ah. And

00:35:52.905 --> 00:35:54.025
<v Speaker 1>we're going into

00:35:54.185 --> 00:35:55.945
<v Speaker 1>what may we could go into from your

00:35:55.945 --> 00:35:58.345
<v Speaker 1>little sticky there. We could go into what

00:35:58.345 --> 00:35:59.705
<v Speaker 1>makes it correct repo

00:35:59.945 --> 00:36:02.320
<v Speaker 1>and whether to go in whether to dive

00:36:02.320 --> 00:36:04.640
<v Speaker 1>into that in example mapping is something where

00:36:04.640 --> 00:36:06.080
<v Speaker 1>you sort of read the rule, read the

00:36:06.080 --> 00:36:06.640
<v Speaker 1>room.

00:36:07.520 --> 00:36:10.000
<v Speaker 1>So is that something only the devs are

00:36:10.000 --> 00:36:10.560
<v Speaker 1>interested in?

00:36:13.595 --> 00:36:14.795
<v Speaker 0>Yeah. I think

00:36:16.795 --> 00:36:17.835
<v Speaker 0>so I'm trying to understand what you said

00:36:17.835 --> 00:36:19.434
<v Speaker 0>there. I think there's something really important there

00:36:19.434 --> 00:36:21.595
<v Speaker 0>that hasn't been exposed yet. You're completely right

00:36:21.595 --> 00:36:23.275
<v Speaker 0>about it. It's that I have this knowledge

00:36:23.275 --> 00:36:24.714
<v Speaker 0>in my head that says, it is not

00:36:24.714 --> 00:36:27.140
<v Speaker 0>the correct git repository under this circumstance. And

00:36:27.140 --> 00:36:29.140
<v Speaker 0>the circumstance is the code is hard coded

00:36:29.140 --> 00:36:31.140
<v Speaker 0>to check for an origin a remote called

00:36:31.140 --> 00:36:31.860
<v Speaker 0>origin.

00:36:32.260 --> 00:36:34.420
<v Speaker 0>And maybe that needs to be explicitly

00:36:34.420 --> 00:36:35.620
<v Speaker 0>stuck in somewhere.

00:36:35.940 --> 00:36:37.940
<v Speaker 0>But So It's it's like, do you want

00:36:37.940 --> 00:36:39.460
<v Speaker 1>that to be the the reason you're writing

00:36:39.460 --> 00:36:41.540
<v Speaker 1>these scenarios is to communicate with future people

00:36:41.540 --> 00:36:43.355
<v Speaker 1>using the library. So do you want to

00:36:43.355 --> 00:36:45.275
<v Speaker 1>be explicit in the Gherkin?

00:36:46.714 --> 00:36:47.835
<v Speaker 0>Well, yeah. I think it should be because

00:36:47.835 --> 00:36:49.755
<v Speaker 0>if people want to use an existing remote

00:36:49.755 --> 00:36:51.755
<v Speaker 0>that I don't that hasn't provided or hasn't

00:36:51.755 --> 00:36:53.275
<v Speaker 0>cloned by the library, then they have to

00:36:53.275 --> 00:36:55.035
<v Speaker 0>understand there's a rule that says

00:36:55.520 --> 00:36:58.320
<v Speaker 0>that is possible if your if your remote

00:36:58.320 --> 00:36:59.440
<v Speaker 0>is called origin.

00:37:00.480 --> 00:37:02.400
<v Speaker 1>Yes. We could go out some examples quickly.

00:37:02.400 --> 00:37:02.960
<v Speaker 1>Right?

00:37:05.599 --> 00:37:07.200
<v Speaker 1>And I'm just gonna do notes. So when

00:37:07.280 --> 00:37:08.960
<v Speaker 1>because it's a workshop. We're just doing notes

00:37:08.960 --> 00:37:10.560
<v Speaker 1>that are gonna remind us later of what

00:37:10.560 --> 00:37:12.135
<v Speaker 1>we talked about. Okay.

00:37:13.335 --> 00:37:15.175
<v Speaker 1>You don't start writing out given when then

00:37:15.175 --> 00:37:15.895
<v Speaker 1>in this.

00:37:16.935 --> 00:37:18.855
<v Speaker 1>But you need enough detail that when you

00:37:18.855 --> 00:37:20.295
<v Speaker 1>look at that note later, you'll have a

00:37:20.295 --> 00:37:22.855
<v Speaker 1>good stab at writing out the detail, if

00:37:22.855 --> 00:37:24.135
<v Speaker 1>that makes sense. So,

00:37:24.849 --> 00:37:27.250
<v Speaker 1>oh, Dan North has this thing. It's like

00:37:27.250 --> 00:37:29.250
<v Speaker 1>the friends episode names.

00:37:30.050 --> 00:37:30.850
<v Speaker 0>Yep.

00:37:30.930 --> 00:37:32.610
<v Speaker 1>So it's like the one where

00:37:33.329 --> 00:37:34.530
<v Speaker 1>has origin

00:37:34.770 --> 00:37:35.410
<v Speaker 1>but

00:37:35.730 --> 00:37:36.690
<v Speaker 1>wrong

00:37:36.690 --> 00:37:37.250
<v Speaker 1>URL.

00:37:39.335 --> 00:37:41.255
<v Speaker 1>That's enough to remind us later when we're

00:37:41.255 --> 00:37:43.175
<v Speaker 1>reading this. Right? It is.

00:37:45.095 --> 00:37:47.095
<v Speaker 1>Has no origin?

00:37:47.255 --> 00:37:47.975
<v Speaker 0>Yep.

00:37:49.255 --> 00:37:49.815
<v Speaker 0>Remote?

00:37:50.160 --> 00:37:52.640
<v Speaker 0>Yep. If we want someone might do that.

00:37:53.760 --> 00:37:54.640
<v Speaker 1>What else?

00:38:02.079 --> 00:38:03.200
<v Speaker 1>Has origin

00:38:03.200 --> 00:38:04.160
<v Speaker 1>pointing

00:38:04.160 --> 00:38:05.680
<v Speaker 1>to right

00:38:06.414 --> 00:38:07.455
<v Speaker 1>URL. So

00:38:07.934 --> 00:38:09.055
<v Speaker 1>it's okay.

00:38:11.055 --> 00:38:12.974
<v Speaker 1>Can you think of another edge case?

00:38:13.454 --> 00:38:15.135
<v Speaker 1>So the testers are good, actually.

00:38:17.295 --> 00:38:19.455
<v Speaker 0>No. I I I think the rule

00:38:19.775 --> 00:38:20.174
<v Speaker 0>is,

00:38:20.990 --> 00:38:23.150
<v Speaker 0>I mean, it's a relatively simple rule. It's

00:38:23.150 --> 00:38:24.670
<v Speaker 0>just good that we documented that, and it's

00:38:24.670 --> 00:38:27.069
<v Speaker 0>either right or wrong. And I think or

00:38:27.069 --> 00:38:28.910
<v Speaker 0>missing. Yeah. I think you've kind of documented

00:38:28.910 --> 00:38:31.870
<v Speaker 0>the three existential states of a remote, so

00:38:32.190 --> 00:38:32.990
<v Speaker 0>I'll go with it.

00:38:34.805 --> 00:38:37.845
<v Speaker 1>So this has two strategies for finding more

00:38:37.845 --> 00:38:39.845
<v Speaker 1>examples. I'll I'll just talk about them here.

00:38:40.085 --> 00:38:40.885
<v Speaker 1>One is

00:38:42.645 --> 00:38:44.565
<v Speaker 1>context questions. So you look at an existing

00:38:44.725 --> 00:38:45.845
<v Speaker 1>this is when you've run out of ideas

00:38:45.845 --> 00:38:47.525
<v Speaker 1>and you wanna generate some more stuff.

00:38:48.005 --> 00:38:49.650
<v Speaker 1>So you look at the context and say,

00:38:49.650 --> 00:38:51.330
<v Speaker 1>is there any context where it

00:38:53.970 --> 00:38:55.490
<v Speaker 1>let's can you see when I click on

00:38:55.490 --> 00:38:57.170
<v Speaker 1>something? Yeah. Can. I can. Yeah. It makes

00:38:57.170 --> 00:38:58.450
<v Speaker 0>it kinda shadowed.

00:38:58.609 --> 00:38:59.570
<v Speaker 1>See that one?

00:38:59.970 --> 00:39:01.970
<v Speaker 1>The directory exists but isn't the Git repo.

00:39:02.545 --> 00:39:04.625
<v Speaker 1>Don't claim it in it. Error. So any

00:39:04.625 --> 00:39:05.825
<v Speaker 1>situation where

00:39:06.065 --> 00:39:08.145
<v Speaker 1>so the context question is, is there any

00:39:08.145 --> 00:39:08.865
<v Speaker 1>situation

00:39:08.945 --> 00:39:10.625
<v Speaker 1>where there could be a directory that isn't

00:39:10.625 --> 00:39:11.585
<v Speaker 1>the Git repo

00:39:11.905 --> 00:39:13.585
<v Speaker 1>and we don't error?

00:39:16.079 --> 00:39:16.640
<v Speaker 0>No.

00:39:16.960 --> 00:39:17.680
<v Speaker 1>Okay.

00:39:17.760 --> 00:39:19.599
<v Speaker 1>So so you can ask questions like that.

00:39:19.599 --> 00:39:20.080
<v Speaker 1>Right?

00:39:21.440 --> 00:39:22.480
<v Speaker 1>So this one,

00:39:22.799 --> 00:39:24.720
<v Speaker 1>is there any situation where it would have

00:39:24.720 --> 00:39:25.839
<v Speaker 1>the origin

00:39:28.185 --> 00:39:30.505
<v Speaker 1>and the correct URL, but we wouldn't

00:39:30.745 --> 00:39:32.505
<v Speaker 1>consider it the correct

00:39:32.905 --> 00:39:33.545
<v Speaker 1>remote.

00:39:36.025 --> 00:39:38.345
<v Speaker 0>No. And maybe this again. Is this something

00:39:38.345 --> 00:39:39.625
<v Speaker 0>that's in my head that we have to

00:39:39.625 --> 00:39:42.665
<v Speaker 0>get on a sticky somehow? Because the reason

00:39:42.240 --> 00:39:45.600
<v Speaker 0>that the program will error and exit if

00:39:45.600 --> 00:39:48.000
<v Speaker 0>it's not a get repository or as it

00:39:48.000 --> 00:39:50.080
<v Speaker 0>hasn't got the correct remote is that

00:39:51.200 --> 00:39:54.000
<v Speaker 0>this library is quite destructive

00:39:54.000 --> 00:39:55.925
<v Speaker 0>and that it I mean, the way that

00:39:55.925 --> 00:39:57.365
<v Speaker 0>it would proceed would be to remove that

00:39:57.365 --> 00:39:59.445
<v Speaker 0>directory or start pulling the ref log over

00:39:59.445 --> 00:40:01.685
<v Speaker 0>the top of it. And, like, you don't

00:40:01.765 --> 00:40:03.285
<v Speaker 0>I never wanna be in a situation where

00:40:03.285 --> 00:40:04.085
<v Speaker 0>anyone

00:40:05.605 --> 00:40:07.525
<v Speaker 0>not I I can't say lose these data,

00:40:07.525 --> 00:40:09.125
<v Speaker 0>but if someone made a manual commit to

00:40:09.125 --> 00:40:11.320
<v Speaker 0>that repository and then I command and revert

00:40:11.320 --> 00:40:13.720
<v Speaker 0>it and, you know, reset and force pull

00:40:13.720 --> 00:40:15.480
<v Speaker 0>or something like that, then I definitely put

00:40:15.480 --> 00:40:16.600
<v Speaker 0>them in a situation where it's gonna be

00:40:16.600 --> 00:40:18.200
<v Speaker 0>a lot more work to get that back.

00:40:18.520 --> 00:40:20.360
<v Speaker 0>So the the rule is always just and

00:40:20.360 --> 00:40:22.360
<v Speaker 0>my head has been, well, if it's not

00:40:22.360 --> 00:40:25.275
<v Speaker 0>what I expect, then I can't proceed safely.

00:40:25.915 --> 00:40:26.715
<v Speaker 0>Exit.

00:40:26.954 --> 00:40:30.395
<v Speaker 0>Yeah. Kinda where I am. Yeah. Okay. And

00:40:30.714 --> 00:40:33.435
<v Speaker 1>you should you should definitely capture that sort

00:40:33.435 --> 00:40:34.795
<v Speaker 1>of thing now because we're trying to do

00:40:34.795 --> 00:40:36.395
<v Speaker 1>this in a cheap way. I know we're

00:40:36.395 --> 00:40:38.075
<v Speaker 1>we're talking through it because it's a stream,

00:40:38.075 --> 00:40:38.395
<v Speaker 1>but

00:40:39.400 --> 00:40:41.480
<v Speaker 1>we're just capturing what it's gonna do now.

00:40:41.880 --> 00:40:43.960
<v Speaker 1>Or if you're doing this at the start

00:40:43.960 --> 00:40:44.840
<v Speaker 1>of your sprint,

00:40:45.080 --> 00:40:46.520
<v Speaker 1>we're just gonna capture what we're gonna do

00:40:46.520 --> 00:40:49.160
<v Speaker 1>next. Yeah. Okay. It's gonna get committed to

00:40:49.160 --> 00:40:51.080
<v Speaker 1>the code base maybe as feature files, but

00:40:51.080 --> 00:40:51.800
<v Speaker 1>they're

00:40:51.960 --> 00:40:52.440
<v Speaker 1>editable.

00:40:53.005 --> 00:40:54.045
<v Speaker 1>So if it changes if

00:40:54.525 --> 00:40:56.205
<v Speaker 1>we change what it does, and actually we

00:40:56.205 --> 00:40:57.885
<v Speaker 1>have some way of recovering from

00:40:58.445 --> 00:41:01.085
<v Speaker 1>multiple directories, we'll change we'll change the features

00:41:01.085 --> 00:41:03.005
<v Speaker 1>then when we get to it. Yeah. I

00:41:03.005 --> 00:41:04.845
<v Speaker 0>mean, someone could come along at some point,

00:41:04.845 --> 00:41:06.605
<v Speaker 0>I guess, and add strict mode to this,

00:41:06.630 --> 00:41:08.069
<v Speaker 0>which just says, well, I I don't care

00:41:08.069 --> 00:41:10.069
<v Speaker 0>what's on desk. This is what we need

00:41:10.069 --> 00:41:11.990
<v Speaker 0>in this location, and we're always gonna blow

00:41:11.990 --> 00:41:13.910
<v Speaker 0>it away and make sure it's always the

00:41:13.910 --> 00:41:16.069
<v Speaker 0>get remote and no local changes. Like, that

00:41:16.069 --> 00:41:18.309
<v Speaker 0>could be a valuable feature eventually.

00:41:19.445 --> 00:41:21.845
<v Speaker 1>Yeah. Yeah. And that's maybe a difference between

00:41:22.005 --> 00:41:23.685
<v Speaker 1>the things that live in Jira,

00:41:25.765 --> 00:41:28.165
<v Speaker 1>user stories or feature requests. Right?

00:41:28.805 --> 00:41:30.885
<v Speaker 1>Or or other ticketing systems.

00:41:31.445 --> 00:41:33.125
<v Speaker 1>And the thing that lives in your code

00:41:33.125 --> 00:41:35.250
<v Speaker 1>base in the feature file. Because one is

00:41:35.250 --> 00:41:36.530
<v Speaker 1>like a change

00:41:36.930 --> 00:41:39.090
<v Speaker 1>a set of changes, and the thing in

00:41:39.090 --> 00:41:40.930
<v Speaker 1>your version control is like, this is actually

00:41:40.930 --> 00:41:42.210
<v Speaker 1>what it does right now.

00:41:42.530 --> 00:41:43.810
<v Speaker 1>You can read this to find out what

00:41:43.810 --> 00:41:46.370
<v Speaker 1>it does right now because we're automating tests

00:41:46.370 --> 00:41:48.930
<v Speaker 1>off it. So here's here's a truth about

00:41:48.930 --> 00:41:49.330
<v Speaker 1>the system.

00:41:50.075 --> 00:41:51.115
<v Speaker 1>If you're looking at,

00:41:51.435 --> 00:41:51.915
<v Speaker 1>know,

00:41:52.395 --> 00:41:54.235
<v Speaker 1>looking through old Jira tickets, you can often

00:41:54.235 --> 00:41:55.755
<v Speaker 1>find contradictory things and you have to work

00:41:55.755 --> 00:41:57.755
<v Speaker 1>out which was the label which one was

00:41:57.755 --> 00:41:59.355
<v Speaker 1>latest because that was the one that got

00:41:59.515 --> 00:42:01.195
<v Speaker 1>well, things get changed over time.

00:42:01.435 --> 00:42:03.740
<v Speaker 0>Well, I can contradict myself in a way

00:42:03.740 --> 00:42:05.420
<v Speaker 0>because, like and like I said at the

00:42:05.420 --> 00:42:07.100
<v Speaker 0>start, but I'm actually extracting

00:42:07.260 --> 00:42:09.660
<v Speaker 0>internal code, private code that we have within

00:42:09.660 --> 00:42:11.660
<v Speaker 0>our organization that I wrote to do this

00:42:11.660 --> 00:42:13.260
<v Speaker 0>job and I wanna make it a reusable

00:42:13.260 --> 00:42:14.060
<v Speaker 0>library for others.

00:42:14.635 --> 00:42:16.475
<v Speaker 0>The one we use internally runs in that

00:42:16.475 --> 00:42:19.355
<v Speaker 0>strict mode. It it will do a reset

00:42:19.355 --> 00:42:21.115
<v Speaker 0>and a clean on that directory before it

00:42:21.115 --> 00:42:22.475
<v Speaker 0>does every reconciliation.

00:42:22.475 --> 00:42:24.315
<v Speaker 0>But that's something that I'm personally willing for

00:42:24.315 --> 00:42:26.155
<v Speaker 0>it to do, not something I'm willing to

00:42:26.235 --> 00:42:28.235
<v Speaker 0>Yeah. Make you know, release open source at

00:42:28.235 --> 00:42:30.080
<v Speaker 0>least in the first version. So Yeah. You

00:42:30.080 --> 00:42:31.200
<v Speaker 1>don't want liability.

00:42:31.520 --> 00:42:32.080
<v Speaker 1>Exactly.

00:42:33.360 --> 00:42:35.120
<v Speaker 1>Right. So what else happens? So we're talking

00:42:35.120 --> 00:42:37.360
<v Speaker 1>about cloning. What else happens in cloning? So

00:42:37.360 --> 00:42:38.640
<v Speaker 1>this is other strategy.

00:42:39.760 --> 00:42:41.840
<v Speaker 1>So we talked about context questions. Is there

00:42:41.840 --> 00:42:42.720
<v Speaker 1>a context

00:42:42.800 --> 00:42:43.520
<v Speaker 1>where this

00:42:44.115 --> 00:42:46.435
<v Speaker 1>examples have an action and an outcome?

00:42:46.915 --> 00:42:48.995
<v Speaker 0>Mhmm. Is there is there a different context

00:42:48.995 --> 00:42:51.315
<v Speaker 1>where that action wouldn't cause the outcome? That's

00:42:51.315 --> 00:42:52.435
<v Speaker 1>the context question.

00:42:53.315 --> 00:42:55.475
<v Speaker 1>And the outcome questioning is her other sort

00:42:55.475 --> 00:42:57.235
<v Speaker 1>of line of a of a approach that

00:42:57.235 --> 00:42:58.195
<v Speaker 1>she talks about in a blog.

00:42:59.049 --> 00:43:01.450
<v Speaker 1>As well as that happening, what else happens?

00:43:01.769 --> 00:43:02.410
<v Speaker 1>So

00:43:02.730 --> 00:43:04.890
<v Speaker 1>as well as erroring in these different cases,

00:43:04.890 --> 00:43:06.250
<v Speaker 1>is there anything is there anything else that

00:43:06.250 --> 00:43:06.810
<v Speaker 1>happens?

00:43:08.329 --> 00:43:10.569
<v Speaker 1>Like, is there a log or is there

00:43:11.255 --> 00:43:12.375
<v Speaker 1>when exiting, is it

00:43:13.175 --> 00:43:14.695
<v Speaker 1>when we say error, maybe we should tighten

00:43:14.695 --> 00:43:15.975
<v Speaker 1>up. When when it says error, does that

00:43:15.975 --> 00:43:16.775
<v Speaker 1>mean exit?

00:43:17.655 --> 00:43:20.375
<v Speaker 0>Yes. So we print the standard error

00:43:21.095 --> 00:43:23.575
<v Speaker 0>saying directory exists, but as a GET repository

00:43:23.575 --> 00:43:26.050
<v Speaker 0>or directory exists as a get repository, but

00:43:26.050 --> 00:43:28.130
<v Speaker 0>as an incorrect remote, and then we exit

00:43:28.130 --> 00:43:30.530
<v Speaker 0>we exit with a non zero code.

00:43:31.250 --> 00:43:32.609
<v Speaker 0>I don't know how much of that we

00:43:32.609 --> 00:43:34.369
<v Speaker 0>capture in our example.

00:43:34.369 --> 00:43:34.930
<v Speaker 0>So

00:43:35.250 --> 00:43:36.369
<v Speaker 1>I think that the audience.

00:43:37.355 --> 00:43:38.875
<v Speaker 0>I mean, this is I guess, this is

00:43:38.875 --> 00:43:40.395
<v Speaker 0>another thing that's tricky for me is that,

00:43:40.395 --> 00:43:41.595
<v Speaker 0>Jen, you know, I can

00:43:41.835 --> 00:43:44.315
<v Speaker 0>I can understand the level users of a

00:43:44.315 --> 00:43:46.714
<v Speaker 0>blog want to interact with it? This is

00:43:46.714 --> 00:43:49.195
<v Speaker 0>a very developer centric library. So I guess,

00:43:49.595 --> 00:43:50.875
<v Speaker 0>going into implementation

00:43:50.875 --> 00:43:51.595
<v Speaker 0>details

00:43:51.860 --> 00:43:54.100
<v Speaker 0>has the right level of abstraction

00:43:54.100 --> 00:43:57.380
<v Speaker 0>maybe because developers want to know, alright. Does

00:43:57.380 --> 00:43:58.980
<v Speaker 0>x is zero? Does x are not zero?

00:43:58.980 --> 00:44:00.740
<v Speaker 0>Like, maybe that is valuable information.

00:44:01.700 --> 00:44:03.620
<v Speaker 1>Yeah. Writing

00:44:03.620 --> 00:44:05.220
<v Speaker 1>for the unknown audience is always harder.

00:44:06.455 --> 00:44:08.055
<v Speaker 1>If you were if you had a group

00:44:08.055 --> 00:44:09.735
<v Speaker 1>of developers who were gonna be using the

00:44:09.735 --> 00:44:10.375
<v Speaker 1>library

00:44:11.655 --> 00:44:13.255
<v Speaker 1>and we're and we're they're in this session

00:44:13.255 --> 00:44:15.095
<v Speaker 1>with us, we'd naturally find that level of

00:44:15.095 --> 00:44:16.935
<v Speaker 1>detail because you you can tell.

00:44:17.255 --> 00:44:19.335
<v Speaker 1>You can tell when you've gone too deep

00:44:19.140 --> 00:44:20.820
<v Speaker 1>because no one cares about it.

00:44:21.140 --> 00:44:21.859
<v Speaker 1>And

00:44:22.500 --> 00:44:23.940
<v Speaker 1>and the the trick,

00:44:24.180 --> 00:44:25.940
<v Speaker 1>if you're facilitating this kind of session, is

00:44:25.940 --> 00:44:28.339
<v Speaker 1>to recognize that's happened and say, well, let's

00:44:28.339 --> 00:44:29.780
<v Speaker 1>talk about that when we're building it and

00:44:29.780 --> 00:44:31.460
<v Speaker 1>you can write some unit tests, but we

00:44:31.460 --> 00:44:33.485
<v Speaker 1>don't need to have that in the in

00:44:33.485 --> 00:44:34.605
<v Speaker 1>the example map.

00:44:35.005 --> 00:44:36.605
<v Speaker 0>It's not part of it's not part of

00:44:36.605 --> 00:44:36.845
<v Speaker 1>the

00:44:37.805 --> 00:44:39.005
<v Speaker 1>I think the thing is you don't have

00:44:39.005 --> 00:44:41.245
<v Speaker 1>anyone who's giving you exceptions criteria. Right? There's

00:44:41.245 --> 00:44:44.125
<v Speaker 1>no one who's it's you're doing both roles.

00:44:44.525 --> 00:44:46.125
<v Speaker 0>Oh, yeah. I mean, I have some internal

00:44:46.125 --> 00:44:47.725
<v Speaker 0>voices that I try and listen to. You

00:44:47.725 --> 00:44:49.210
<v Speaker 0>know, they've all got different ideas for the

00:44:49.210 --> 00:44:51.770
<v Speaker 0>features. I'll try not to pluralize that again,

00:44:51.770 --> 00:44:52.410
<v Speaker 0>but, you know

00:44:53.050 --> 00:44:53.610
<v Speaker 0>yeah.

00:44:54.010 --> 00:44:55.770
<v Speaker 0>I I this is something that, again, I

00:44:55.770 --> 00:44:57.370
<v Speaker 0>built internally, and I'm just trying to extract.

00:44:57.370 --> 00:44:59.210
<v Speaker 0>So there's you're right. There's no there's no

00:44:59.210 --> 00:45:01.370
<v Speaker 0>users. There's no audience yet. I'm making a

00:45:01.370 --> 00:45:01.930
<v Speaker 0>lot of assumptions.

00:45:02.625 --> 00:45:04.065
<v Speaker 1>But if you do have that kind of

00:45:04.065 --> 00:45:06.225
<v Speaker 1>internal customer, internal stakeholder,

00:45:06.305 --> 00:45:08.145
<v Speaker 1>product owner type person,

00:45:08.865 --> 00:45:10.785
<v Speaker 1>you can tell when you got to the

00:45:10.785 --> 00:45:11.905
<v Speaker 1>point where they're like, yeah. I don't care

00:45:11.905 --> 00:45:13.825
<v Speaker 1>about that. Whatever you whatever you think.

00:45:14.305 --> 00:45:15.905
<v Speaker 1>Right? And that's the level you sort of

00:45:15.905 --> 00:45:16.785
<v Speaker 1>cut off at.

00:45:17.185 --> 00:45:17.505
<v Speaker 1>Because

00:45:19.480 --> 00:45:21.400
<v Speaker 1>why because? Because it gives you a lot

00:45:21.400 --> 00:45:22.200
<v Speaker 1>more freedom

00:45:22.440 --> 00:45:23.160
<v Speaker 1>of

00:45:23.320 --> 00:45:25.320
<v Speaker 1>decision making as you build it.

00:45:27.000 --> 00:45:27.960
<v Speaker 1>If

00:45:29.000 --> 00:45:31.080
<v Speaker 1>if right. Just as an example,

00:45:31.240 --> 00:45:32.760
<v Speaker 1>this this first

00:45:33.215 --> 00:45:34.175
<v Speaker 1>rule

00:45:35.215 --> 00:45:35.855
<v Speaker 1>Yep.

00:45:38.095 --> 00:45:40.895
<v Speaker 1>Doesn't say anything about exiting or errors.

00:45:41.695 --> 00:45:42.255
<v Speaker 1>So

00:45:42.895 --> 00:45:44.415
<v Speaker 1>if we're in the conversation and I and

00:45:44.415 --> 00:45:46.175
<v Speaker 1>I've got, like, some if if this is

00:45:46.175 --> 00:45:48.420
<v Speaker 1>something we're gonna sell, right, and we need

00:45:48.420 --> 00:45:50.020
<v Speaker 1>to get someone to approve it,

00:45:50.980 --> 00:45:52.740
<v Speaker 1>and we start you and me, the dev,

00:45:52.740 --> 00:45:54.740
<v Speaker 1>start talking about, like, alright. So should it

00:45:54.740 --> 00:45:56.660
<v Speaker 1>exit with a non zero exit code?

00:45:57.619 --> 00:45:59.859
<v Speaker 1>How much detail should we display the message?

00:45:59.859 --> 00:46:00.980
<v Speaker 1>You would tell

00:46:01.220 --> 00:46:02.740
<v Speaker 1>someone would say, I don't care.

00:46:03.845 --> 00:46:05.204
<v Speaker 1>All I care about is that it doesn't

00:46:05.204 --> 00:46:06.724
<v Speaker 1>clone the repository. And that gives you a

00:46:06.724 --> 00:46:08.645
<v Speaker 1>really useful heuristic that we're not gonna need

00:46:08.645 --> 00:46:10.565
<v Speaker 1>to capture all that stuff. That's something we

00:46:10.565 --> 00:46:12.325
<v Speaker 1>can talk about when we're building it.

00:46:13.125 --> 00:46:15.205
<v Speaker 1>And I can decide whether to implement that.

00:46:15.765 --> 00:46:17.365
<v Speaker 1>And, you know, with my selfish developer hat

00:46:17.365 --> 00:46:18.805
<v Speaker 1>on, if I run out of time,

00:46:20.460 --> 00:46:22.860
<v Speaker 1>I can do a really basic version of

00:46:22.860 --> 00:46:24.620
<v Speaker 1>it. And if I've got loads of time,

00:46:25.340 --> 00:46:26.940
<v Speaker 1>I can have a really amazing thing where

00:46:26.940 --> 00:46:28.620
<v Speaker 1>it, like, outputs it in a format that's

00:46:28.620 --> 00:46:31.340
<v Speaker 1>got nice colors and, you know. Yeah. So

00:46:31.340 --> 00:46:33.980
<v Speaker 1>I I get a lot more flexibility

00:46:33.980 --> 00:46:34.780
<v Speaker 1>about

00:46:35.445 --> 00:46:38.245
<v Speaker 1>how it's implemented and actually in an agile

00:46:38.245 --> 00:46:40.485
<v Speaker 1>context that makes it a lot easier to

00:46:40.485 --> 00:46:41.925
<v Speaker 1>fit things into sprints.

00:46:42.965 --> 00:46:44.965
<v Speaker 1>Because if you're running out of time, you

00:46:44.965 --> 00:46:47.205
<v Speaker 1>do it. You know what the rule is

00:46:47.880 --> 00:46:49.800
<v Speaker 1>for it to be acceptable to the business.

00:46:51.799 --> 00:46:53.000
<v Speaker 1>So you can cut corners or you can

00:46:53.000 --> 00:46:54.119
<v Speaker 1>do a really great job if you think

00:46:54.119 --> 00:46:56.039
<v Speaker 1>there's extra value to be had there for

00:46:56.039 --> 00:46:57.160
<v Speaker 1>the for the users.

00:46:57.559 --> 00:46:58.839
<v Speaker 1>You can do it even better than we

00:46:58.839 --> 00:46:59.319
<v Speaker 1>talked about.

00:47:00.755 --> 00:47:02.435
<v Speaker 1>But if you if you try and do

00:47:02.435 --> 00:47:03.875
<v Speaker 1>it all in the conversation and you try

00:47:03.875 --> 00:47:05.315
<v Speaker 1>and get all the detail, you're kind of

00:47:05.315 --> 00:47:07.395
<v Speaker 1>locked into one specific implementation.

00:47:07.715 --> 00:47:09.315
<v Speaker 1>Now this isn't a

00:47:09.635 --> 00:47:11.715
<v Speaker 1>UI led project,

00:47:12.755 --> 00:47:13.235
<v Speaker 1>but

00:47:13.940 --> 00:47:16.900
<v Speaker 1>some stakeholders won't care what the page looks

00:47:16.900 --> 00:47:17.380
<v Speaker 1>like,

00:47:17.780 --> 00:47:19.140
<v Speaker 1>or they won't k they won't care what

00:47:19.140 --> 00:47:20.500
<v Speaker 1>the interface looks like in the admin area

00:47:20.500 --> 00:47:21.620
<v Speaker 1>as long as it does the thing they

00:47:21.620 --> 00:47:23.620
<v Speaker 1>want. They they might trust the developers to

00:47:23.620 --> 00:47:24.260
<v Speaker 1>do it.

00:47:24.580 --> 00:47:26.260
<v Speaker 1>Other teams, they might want to see a

00:47:26.260 --> 00:47:26.660
<v Speaker 1>wireframe.

00:47:27.734 --> 00:47:30.375
<v Speaker 1>Okay. Again, you're discovering the level of detail

00:47:30.535 --> 00:47:32.375
<v Speaker 1>in UX to go into.

00:47:33.414 --> 00:47:35.815
<v Speaker 1>I I try and stay away from UX

00:47:35.815 --> 00:47:37.734
<v Speaker 1>stuff here because text isn't a good

00:47:38.135 --> 00:47:40.135
<v Speaker 1>medium for doing user interface

00:47:40.694 --> 00:47:41.654
<v Speaker 1>stuff. So

00:47:42.420 --> 00:47:44.819
<v Speaker 1>example mapping you can capture all the business

00:47:44.819 --> 00:47:46.420
<v Speaker 1>detail and then maybe say, okay, we have

00:47:46.420 --> 00:47:47.700
<v Speaker 1>to do some wireframes.

00:47:49.619 --> 00:47:50.420
<v Speaker 1>Okay. What what

00:47:51.220 --> 00:47:51.940
<v Speaker 1>so

00:47:53.460 --> 00:47:55.460
<v Speaker 1>I'm gonna get stint and it's gonna clone

00:47:55.460 --> 00:47:58.315
<v Speaker 1>the repo and we've got these rules about

00:47:59.195 --> 00:48:01.035
<v Speaker 1>whether it'll whether it'll clone the repo or

00:48:01.035 --> 00:48:01.515
<v Speaker 1>not.

00:48:02.635 --> 00:48:03.275
<v Speaker 0>Yes.

00:48:03.675 --> 00:48:05.915
<v Speaker 0>Yes. We do. What else?

00:48:06.475 --> 00:48:07.675
<v Speaker 0>So assuming

00:48:07.675 --> 00:48:09.195
<v Speaker 0>that we pass the rules

00:48:09.530 --> 00:48:12.010
<v Speaker 0>at that stage, we then enter the reconciliation

00:48:12.010 --> 00:48:14.010
<v Speaker 0>where there are some more rules.

00:48:14.170 --> 00:48:15.690
<v Speaker 1>Yeah. It's it's near the same.

00:48:17.210 --> 00:48:18.490
<v Speaker 1>So do you wanna call it a different

00:48:18.490 --> 00:48:19.130
<v Speaker 1>feature?

00:48:19.849 --> 00:48:23.050
<v Speaker 0>I think reconciliation has a different feature. Yeah.

00:48:23.050 --> 00:48:24.650
<v Speaker 0>I think there are two different stages of,

00:48:24.650 --> 00:48:24.810
<v Speaker 0>like

00:48:25.450 --> 00:48:26.785
<v Speaker 0>if if this was a state machine, that'd

00:48:26.785 --> 00:48:28.625
<v Speaker 0>the first stage where there's which is get

00:48:28.785 --> 00:48:30.305
<v Speaker 0>prepare for reconciliation,

00:48:30.305 --> 00:48:31.665
<v Speaker 0>and then there's reconciliation.

00:48:31.665 --> 00:48:34.145
<v Speaker 0>So I think it's probably a new feature.

00:48:36.945 --> 00:48:38.625
<v Speaker 0>So we've got our first feature, which is

00:48:38.625 --> 00:48:41.505
<v Speaker 0>clone the repository, and now we're in the

00:48:42.000 --> 00:48:44.320
<v Speaker 0>reconciliation loop feature. So I guess we can

00:48:44.320 --> 00:48:45.840
<v Speaker 0>just change this to yellow.

00:48:46.240 --> 00:48:47.680
<v Speaker 1>So did we have an exact yeah. Go

00:48:47.680 --> 00:48:49.200
<v Speaker 1>for it. If we had an do we

00:48:49.200 --> 00:48:50.480
<v Speaker 1>have an example that's

00:48:51.920 --> 00:48:53.920
<v Speaker 1>we skip in in the initial clone?

00:48:56.635 --> 00:48:58.555
<v Speaker 1>Have we got one more it's there and

00:48:58.555 --> 00:49:00.555
<v Speaker 1>it's got the right thing, so we just

00:49:00.555 --> 00:49:01.515
<v Speaker 1>carry on.

00:49:03.115 --> 00:49:04.315
<v Speaker 0>No. We don't.

00:49:04.555 --> 00:49:06.715
<v Speaker 1>So we do nothing and do reconciliation.

00:49:13.799 --> 00:49:15.720
<v Speaker 0>Now with that reference, the other row and

00:49:15.720 --> 00:49:19.320
<v Speaker 0>just the Yeah. Directory as correct repo,

00:49:19.400 --> 00:49:20.920
<v Speaker 0>so that means we can

00:49:22.279 --> 00:49:23.079
<v Speaker 0>move, continue.

00:49:24.275 --> 00:49:26.195
<v Speaker 1>Yeah. Repay is already closed, so they don't

00:49:26.195 --> 00:49:26.995
<v Speaker 1>need to clone.

00:49:28.035 --> 00:49:28.755
<v Speaker 0>Okay.

00:49:29.395 --> 00:49:30.835
<v Speaker 1>Repay is already cloned

00:49:31.075 --> 00:49:32.195
<v Speaker 1>on disk,

00:49:32.675 --> 00:49:33.955
<v Speaker 1>so we don't need to clone.

00:49:34.515 --> 00:49:35.555
<v Speaker 1>Something

00:49:35.555 --> 00:49:38.040
<v Speaker 1>that we don't really get in example mapping

00:49:38.040 --> 00:49:39.960
<v Speaker 1>is a time series of

00:49:41.800 --> 00:49:42.600
<v Speaker 1>steps.

00:49:42.840 --> 00:49:44.520
<v Speaker 1>So you'd normally sort of have to overlay

00:49:44.520 --> 00:49:45.800
<v Speaker 1>something else on that.

00:49:46.120 --> 00:49:47.720
<v Speaker 1>You can use user story mapping.

00:49:48.360 --> 00:49:50.600
<v Speaker 1>You can use event storming. Okay. You've got

00:49:50.600 --> 00:49:52.415
<v Speaker 1>a long running process that's a series of

00:49:52.415 --> 00:49:54.095
<v Speaker 1>steps. There's no sort of hour of time

00:49:54.095 --> 00:49:56.335
<v Speaker 1>in the in an example map. It's an

00:49:56.335 --> 00:49:57.935
<v Speaker 1>assumption that we we want to understand the

00:49:57.935 --> 00:49:58.575
<v Speaker 1>rules.

00:50:00.335 --> 00:50:02.175
<v Speaker 1>But if if it helps for you to

00:50:02.175 --> 00:50:04.655
<v Speaker 1>have those rules in a context of

00:50:05.055 --> 00:50:05.695
<v Speaker 1>time,

00:50:08.230 --> 00:50:09.430
<v Speaker 1>There are other formats.

00:50:09.590 --> 00:50:11.270
<v Speaker 1>There's also feature mapping,

00:50:11.510 --> 00:50:13.270
<v Speaker 1>John Smart's feature mapping, which is a bit

00:50:13.270 --> 00:50:15.030
<v Speaker 1>like example mapping, but it does have that

00:50:15.030 --> 00:50:16.950
<v Speaker 1>hour of time. So it's it's

00:50:16.950 --> 00:50:18.950
<v Speaker 1>kinda halfway between this and event storming.

00:50:20.234 --> 00:50:20.875
<v Speaker 1>Okay.

00:50:21.595 --> 00:50:23.674
<v Speaker 1>So this this is suitable where everyone's kind

00:50:23.674 --> 00:50:26.075
<v Speaker 1>of understands the steps. Imagine ecommerce. Right? Everyone

00:50:26.075 --> 00:50:27.275
<v Speaker 1>knows I put it in the basket and

00:50:27.275 --> 00:50:29.115
<v Speaker 1>then I check it out. Yep. And you

00:50:29.115 --> 00:50:31.115
<v Speaker 1>can talk about the things in isolation and

00:50:31.115 --> 00:50:32.315
<v Speaker 1>say, well, what are the rules of what

00:50:32.315 --> 00:50:33.275
<v Speaker 1>you can add to your basket?

00:50:35.250 --> 00:50:36.930
<v Speaker 1>So tell me about reconciliation.

00:50:38.130 --> 00:50:41.090
<v Speaker 0>Okay. So once we enter the reconciliation phase,

00:50:41.090 --> 00:50:45.650
<v Speaker 0>that just means that on a configured interval,

00:50:46.290 --> 00:50:48.935
<v Speaker 0>we are going to attempt to fetch all

00:50:48.935 --> 00:50:50.615
<v Speaker 0>updates to that repository.

00:51:00.375 --> 00:51:02.295
<v Speaker 1>And we can talk about which branch we're

00:51:02.295 --> 00:51:02.695
<v Speaker 1>looking at.

00:51:03.820 --> 00:51:04.700
<v Speaker 0>Yeah.

00:51:04.700 --> 00:51:07.180
<v Speaker 0>It's part of the configuration, which I kind

00:51:07.180 --> 00:51:09.100
<v Speaker 0>of omitted, I guess. So

00:51:10.540 --> 00:51:13.820
<v Speaker 0>the library expects you to pass in a

00:51:13.820 --> 00:51:16.060
<v Speaker 0>target, which is the branch or tag name,

00:51:16.745 --> 00:51:18.745
<v Speaker 0>the repository URL,

00:51:18.745 --> 00:51:20.585
<v Speaker 0>any authentication that's required.

00:51:21.465 --> 00:51:22.825
<v Speaker 0>I mean, we can talk about what that

00:51:22.825 --> 00:51:24.745
<v Speaker 0>config is. I don't know.

00:51:25.465 --> 00:51:26.825
<v Speaker 1>So does that affect

00:51:27.625 --> 00:51:30.025
<v Speaker 1>this thing about the being a quick repo?

00:51:34.210 --> 00:51:35.810
<v Speaker 0>No. Because the remotes

00:51:35.810 --> 00:51:39.090
<v Speaker 0>are would be configured regardless of target.

00:51:39.570 --> 00:51:41.810
<v Speaker 1>Yeah. Okay. So as long as the origin's

00:51:41.810 --> 00:51:42.370
<v Speaker 1>there.

00:51:42.610 --> 00:51:44.290
<v Speaker 0>As long as the origin matches the URL

00:51:44.290 --> 00:51:46.850
<v Speaker 0>that we expect, then we will attempt to

00:51:46.850 --> 00:51:49.645
<v Speaker 0>fetch on the target from the configuration.

00:51:50.125 --> 00:51:52.045
<v Speaker 1>So branches is gonna be something we think

00:51:52.045 --> 00:51:52.525
<v Speaker 1>about

00:51:53.164 --> 00:51:54.605
<v Speaker 1>as part of reconciliation,

00:51:54.605 --> 00:51:55.085
<v Speaker 1>maybe.

00:51:55.645 --> 00:51:57.724
<v Speaker 0>It it will be for sure. Definitely. And

00:51:57.724 --> 00:51:59.405
<v Speaker 0>and authentication.

00:51:59.565 --> 00:52:01.325
<v Speaker 0>Because so far, like, the code

00:52:03.200 --> 00:52:05.599
<v Speaker 0>I guess, authentication is important for cloning. But

00:52:05.599 --> 00:52:07.039
<v Speaker 0>if we have a directory exists and the

00:52:07.039 --> 00:52:08.400
<v Speaker 0>remote is correct, so that we don't need

00:52:08.400 --> 00:52:10.160
<v Speaker 0>authentication at that stage. So that is the

00:52:10.160 --> 00:52:12.240
<v Speaker 0>reconciliation that we do. Maybe that needs to

00:52:12.240 --> 00:52:14.160
<v Speaker 0>be documented. I'm not sure. But maybe we

00:52:14.160 --> 00:52:16.000
<v Speaker 0>should tackle some of the reconciliation first and

00:52:16.000 --> 00:52:16.960
<v Speaker 0>then handle the

00:52:19.205 --> 00:52:20.645
<v Speaker 0>off. I don't know.

00:52:22.725 --> 00:52:24.245
<v Speaker 1>Yeah. I'm just putting I put that question

00:52:24.245 --> 00:52:26.085
<v Speaker 1>there so we don't forget. Yes. Sure. By

00:52:26.085 --> 00:52:27.765
<v Speaker 1>the way, it's perfectly fine to come out

00:52:27.765 --> 00:52:29.685
<v Speaker 1>of example mapping with some unresolved questions.

00:52:31.730 --> 00:52:34.130
<v Speaker 1>That's natural. Yeah. I guess for for today's

00:52:34.130 --> 00:52:36.049
<v Speaker 0>example, we can just assume that the environment

00:52:36.049 --> 00:52:38.049
<v Speaker 0>provides us an indication that we need, and

00:52:38.049 --> 00:52:39.970
<v Speaker 0>we can have both that one later for

00:52:39.970 --> 00:52:40.530
<v Speaker 1>sure.

00:52:41.650 --> 00:52:43.569
<v Speaker 1>Yeah. And just in life, you know, you

00:52:43.569 --> 00:52:45.195
<v Speaker 1>you you talk about it and there's a

00:52:45.195 --> 00:52:46.635
<v Speaker 1>question that we don't know the answer to,

00:52:46.635 --> 00:52:47.915
<v Speaker 1>we have to go and ask someone.

00:52:51.275 --> 00:52:51.915
<v Speaker 1>And

00:52:52.395 --> 00:52:54.235
<v Speaker 1>if you're in a situation where you're deciding

00:52:54.235 --> 00:52:56.235
<v Speaker 1>whether you whether you're ready to start work

00:52:56.235 --> 00:52:58.859
<v Speaker 1>on it, you can decide whether there's too

00:52:58.859 --> 00:53:00.380
<v Speaker 1>many questions or not.

00:53:00.780 --> 00:53:01.740
<v Speaker 1>If you saw me.

00:53:01.980 --> 00:53:03.260
<v Speaker 1>If you got something that's got loads of

00:53:03.260 --> 00:53:05.260
<v Speaker 1>red questions on, might say, let's not do

00:53:05.260 --> 00:53:05.980
<v Speaker 1>it today.

00:53:07.740 --> 00:53:09.180
<v Speaker 1>If you're doing like a scrum thing, you

00:53:09.180 --> 00:53:11.020
<v Speaker 1>might say it's not ready for sprint planning.

00:53:11.255 --> 00:53:12.775
<v Speaker 1>If there's just a couple of if there's

00:53:12.775 --> 00:53:15.095
<v Speaker 1>one question that seems minor,

00:53:16.695 --> 00:53:18.775
<v Speaker 1>you can sort of say, oh, okay. Well,

00:53:18.775 --> 00:53:20.215
<v Speaker 1>we trust you to answer that.

00:53:21.175 --> 00:53:23.415
<v Speaker 0>I guess that's just an exploratory thing and

00:53:23.415 --> 00:53:24.535
<v Speaker 0>to understanding the problem.

00:53:25.310 --> 00:53:27.070
<v Speaker 0>Yeah. It's very visual to see all those

00:53:27.070 --> 00:53:29.070
<v Speaker 0>red stickies and be like, oh, maybe we're

00:53:29.070 --> 00:53:30.990
<v Speaker 0>not ready to maybe we don't understand this

00:53:30.990 --> 00:53:33.150
<v Speaker 0>enough yet, I guess. Yeah. Actually, if you

00:53:33.150 --> 00:53:34.430
<v Speaker 1>zoom out a little bit,

00:53:35.950 --> 00:53:37.470
<v Speaker 1>you can use the fit to width thing.

00:53:39.494 --> 00:53:41.255
<v Speaker 0>What's the fit to width thing? What's that?

00:53:41.255 --> 00:53:43.415
<v Speaker 1>In the bottom right, in the menu, in

00:53:43.415 --> 00:53:45.815
<v Speaker 1>the map thing, the the sort of arrows

00:53:45.815 --> 00:53:47.335
<v Speaker 1>either side. Yeah. Yeah.

00:53:48.615 --> 00:53:50.615
<v Speaker 1>Fits the screen. You

00:53:51.015 --> 00:53:52.375
<v Speaker 1>can sort you you're right. You can sort

00:53:52.375 --> 00:53:53.974
<v Speaker 1>of see from the shape what's going on.

00:53:56.420 --> 00:53:58.340
<v Speaker 1>That first feature, what do you think

00:53:59.220 --> 00:54:00.260
<v Speaker 1>jumps out?

00:54:05.460 --> 00:54:07.935
<v Speaker 0>Think it's quite nice. It's easy to see

00:54:07.935 --> 00:54:09.615
<v Speaker 0>there are two sets of rules and multiple

00:54:09.615 --> 00:54:11.935
<v Speaker 0>examples per rule. I don't know if anything

00:54:11.935 --> 00:54:14.335
<v Speaker 0>jumps out at me. Yeah. I think maybe

00:54:14.335 --> 00:54:16.415
<v Speaker 1>too many examples. It looks it makes me

00:54:16.415 --> 00:54:17.375
<v Speaker 1>think that that

00:54:17.855 --> 00:54:20.095
<v Speaker 1>rule could be decomposed into more than one

00:54:20.095 --> 00:54:20.655
<v Speaker 1>rule

00:54:21.609 --> 00:54:22.890
<v Speaker 1>just from the shape.

00:54:25.050 --> 00:54:25.690
<v Speaker 1>Okay.

00:54:26.090 --> 00:54:26.810
<v Speaker 1>So we could

00:54:27.450 --> 00:54:28.650
<v Speaker 1>let's not do it now, but we could

00:54:28.650 --> 00:54:31.370
<v Speaker 1>split it into a rule about the directory.

00:54:32.730 --> 00:54:34.810
<v Speaker 1>Doesn't clone if the directory's

00:54:36.385 --> 00:54:37.825
<v Speaker 1>not a git directory.

00:54:38.305 --> 00:54:39.825
<v Speaker 1>And we could have separate rule that was

00:54:39.825 --> 00:54:42.305
<v Speaker 1>like it doesn't also, another rule is

00:54:42.705 --> 00:54:44.785
<v Speaker 1>it doesn't clone if there's a directory that's

00:54:44.785 --> 00:54:46.225
<v Speaker 1>a git repo that doesn't have the right

00:54:46.225 --> 00:54:47.585
<v Speaker 1>remote. You know, we could split in this

00:54:47.585 --> 00:54:49.185
<v Speaker 1>into those two, and maybe that would be

00:54:49.185 --> 00:54:51.320
<v Speaker 1>clearer for a reader. That's the only reason

00:54:51.320 --> 00:54:52.360
<v Speaker 1>for splitting it.

00:54:53.080 --> 00:54:53.800
<v Speaker 0>Okay.

00:54:53.880 --> 00:54:55.400
<v Speaker 1>That's not the only reason for splitting it.

00:54:55.400 --> 00:54:57.080
<v Speaker 1>The other reason for splitting it then is

00:54:57.080 --> 00:54:59.320
<v Speaker 1>if you've identified these two rules and you're

00:54:59.320 --> 00:55:01.960
<v Speaker 1>in some kind of, like, prioritization

00:55:02.600 --> 00:55:03.640
<v Speaker 1>backlog

00:55:03.640 --> 00:55:05.000
<v Speaker 1>scrum situation,

00:55:05.955 --> 00:55:07.635
<v Speaker 1>I. You haven't done the work already like

00:55:07.635 --> 00:55:08.355
<v Speaker 1>you have,

00:55:09.555 --> 00:55:11.075
<v Speaker 1>you you sometimes say,

00:55:11.315 --> 00:55:13.635
<v Speaker 1>actually, that thing where the directory exists and

00:55:13.635 --> 00:55:16.035
<v Speaker 1>it's not a git repo doesn't happen very

00:55:16.035 --> 00:55:17.635
<v Speaker 1>much, so we can build that later.

00:55:18.035 --> 00:55:20.800
<v Speaker 1>And then we can if you the rules

00:55:20.800 --> 00:55:22.160
<v Speaker 1>tend to be the things that people care

00:55:22.160 --> 00:55:24.000
<v Speaker 1>about being delivered in batches.

00:55:24.080 --> 00:55:26.480
<v Speaker 1>Yeah. And this kind of vertical column thing

00:55:26.480 --> 00:55:29.200
<v Speaker 1>is really useful for either deferring work or

00:55:29.200 --> 00:55:30.240
<v Speaker 1>splitting things down.

00:55:32.095 --> 00:55:33.855
<v Speaker 0>Okay. That makes sense.

00:55:34.655 --> 00:55:37.135
<v Speaker 1>You know, what would happen if we didn't

00:55:37.135 --> 00:55:39.055
<v Speaker 1>implement that rule about error with a nice

00:55:39.055 --> 00:55:40.815
<v Speaker 1>message? Well, it'll just crash because it tries

00:55:40.815 --> 00:55:42.175
<v Speaker 1>to do a clone and there's the thing

00:55:42.175 --> 00:55:43.455
<v Speaker 1>already and git will do an error and

00:55:43.455 --> 00:55:44.975
<v Speaker 1>it'll be an ugly error message.

00:55:45.455 --> 00:55:46.015
<v Speaker 1>That's fine.

00:55:47.300 --> 00:55:48.900
<v Speaker 1>We'll we'll do the bit that catches that

00:55:48.900 --> 00:55:50.820
<v Speaker 1>and, like, pre checks and does a nice

00:55:50.820 --> 00:55:52.740
<v Speaker 1>error message as part of sprint four

00:55:52.980 --> 00:55:54.340
<v Speaker 1>instead of sprint two.

00:55:55.540 --> 00:55:56.980
<v Speaker 1>So, yeah, let's go back to talking about

00:55:56.980 --> 00:55:57.860
<v Speaker 1>reconciliation.

00:55:57.860 --> 00:55:59.935
<v Speaker 1>So it fetch fetched all the updates to

00:55:59.935 --> 00:56:01.535
<v Speaker 1>the repo and configured into it. What's the

00:56:01.535 --> 00:56:02.655
<v Speaker 1>happy version of that?

00:56:03.695 --> 00:56:05.215
<v Speaker 0>The happy version

00:56:05.295 --> 00:56:08.015
<v Speaker 0>is that there are no local modifications,

00:56:08.335 --> 00:56:10.815
<v Speaker 0>and it can do a fast forward pull

00:56:11.135 --> 00:56:13.055
<v Speaker 0>or a fast forward fetch and merge, I

00:56:13.055 --> 00:56:13.214
<v Speaker 0>guess,

00:56:14.609 --> 00:56:17.329
<v Speaker 0>into the directory and publish the changes.

00:56:27.744 --> 00:56:29.345
<v Speaker 0>Probably should I mean, that that's a happy

00:56:29.345 --> 00:56:30.865
<v Speaker 0>path. It should be 90

00:56:31.425 --> 00:56:32.865
<v Speaker 0>plus percent of

00:56:33.265 --> 00:56:35.744
<v Speaker 0>every run this does. Right? You know, people

00:56:35.744 --> 00:56:37.744
<v Speaker 0>are pro I would hope people using this

00:56:37.744 --> 00:56:39.585
<v Speaker 0>library and especially myself as a user of

00:56:39.585 --> 00:56:41.090
<v Speaker 0>the library. I'm running it in an in

00:56:41.090 --> 00:56:44.370
<v Speaker 0>an environment that wouldn't accept local modifications anyway.

00:56:44.610 --> 00:56:47.010
<v Speaker 0>So, you know So I'm gonna split this

00:56:47.010 --> 00:56:49.010
<v Speaker 1>actually. Feels like there's two things we're talking

00:56:49.010 --> 00:56:49.490
<v Speaker 1>about.

00:56:50.210 --> 00:56:51.250
<v Speaker 1>Fetches

00:56:51.250 --> 00:56:52.610
<v Speaker 1>happen on

00:56:53.085 --> 00:56:53.885
<v Speaker 1>configured

00:56:53.885 --> 00:56:54.925
<v Speaker 1>interval.

00:56:55.165 --> 00:56:56.445
<v Speaker 1>Because it sounds like there's a concept there

00:56:56.445 --> 00:56:57.405
<v Speaker 1>called a fetch.

00:56:58.205 --> 00:56:59.405
<v Speaker 0>There is. Yes.

00:57:00.845 --> 00:57:02.205
<v Speaker 1>But where is it configured?

00:57:03.325 --> 00:57:04.205
<v Speaker 1>How is it configured?

00:57:06.119 --> 00:57:09.000
<v Speaker 0>Via TOML or or command line argument.

00:57:09.960 --> 00:57:11.640
<v Speaker 1>Okay. So configured.

00:57:12.599 --> 00:57:14.599
<v Speaker 1>And what happens? It's just it's just running

00:57:14.599 --> 00:57:16.520
<v Speaker 1>and fetching like a daemon.

00:57:16.759 --> 00:57:17.799
<v Speaker 0>Yeah. So, I mean,

00:57:18.945 --> 00:57:20.465
<v Speaker 0>I I tried not to mention this so

00:57:20.465 --> 00:57:23.105
<v Speaker 0>far, but I keep completing my examples here.

00:57:23.185 --> 00:57:25.425
<v Speaker 0>As a getSync gets exposed as a library

00:57:25.425 --> 00:57:27.665
<v Speaker 0>and then a binary. So, you know, there's

00:57:27.665 --> 00:57:29.745
<v Speaker 0>those two different modalities. But I'm gonna try

00:57:29.745 --> 00:57:31.185
<v Speaker 0>and con try and stick to using it

00:57:31.185 --> 00:57:32.625
<v Speaker 0>as a library and forget. Because if we

00:57:32.625 --> 00:57:34.690
<v Speaker 0>get the library right, the, the CLIs,

00:57:34.690 --> 00:57:35.730
<v Speaker 0>the binary is fine.

00:57:36.290 --> 00:57:38.770
<v Speaker 0>So you you when you initialize the library

00:57:38.930 --> 00:57:39.570
<v Speaker 0>sorry?

00:57:40.210 --> 00:57:42.370
<v Speaker 1>So that's very common. Right? Most

00:57:42.690 --> 00:57:45.250
<v Speaker 1>software is a stack of things.

00:57:47.994 --> 00:57:48.635
<v Speaker 1>And

00:57:49.994 --> 00:57:52.155
<v Speaker 1>if you write if you write the examples

00:57:52.315 --> 00:57:53.835
<v Speaker 1>express the examples and the rules in the

00:57:53.835 --> 00:57:54.555
<v Speaker 1>right way,

00:57:55.115 --> 00:57:57.275
<v Speaker 1>you they apply to both situations. So if

00:57:57.275 --> 00:57:58.315
<v Speaker 1>we can phrase them

00:57:58.635 --> 00:58:00.075
<v Speaker 1>if for a website, if you

00:58:00.760 --> 00:58:02.280
<v Speaker 1>pretend that some people are on mobile and

00:58:02.280 --> 00:58:03.480
<v Speaker 1>some people are on the web and some

00:58:03.480 --> 00:58:05.240
<v Speaker 1>people are talking to it through Alexa, you

00:58:05.240 --> 00:58:06.520
<v Speaker 1>can see you can get a point where

00:58:06.520 --> 00:58:08.200
<v Speaker 1>you're phrasing it in a way where the

00:58:08.200 --> 00:58:09.560
<v Speaker 1>business details there,

00:58:10.120 --> 00:58:11.640
<v Speaker 1>the detail that's relevant to the rule is

00:58:11.640 --> 00:58:11.800
<v Speaker 1>there,

00:58:13.375 --> 00:58:14.015
<v Speaker 1>but

00:58:15.295 --> 00:58:17.455
<v Speaker 1>all other stuff isn't. Yeah. So if we

00:58:17.455 --> 00:58:18.575
<v Speaker 0>just say configured

00:58:18.655 --> 00:58:20.655
<v Speaker 0>with an interval of five seconds, then that

00:58:20.655 --> 00:58:22.735
<v Speaker 0>just means every five seconds, the reconciliation loop

00:58:22.735 --> 00:58:23.775
<v Speaker 0>is gonna run.

00:58:24.095 --> 00:58:26.255
<v Speaker 0>It's gonna fetch the remote

00:58:26.575 --> 00:58:28.655
<v Speaker 0>and try to do a fast forward merge

00:58:28.680 --> 00:58:29.800
<v Speaker 0>with the changes.

00:58:30.359 --> 00:58:32.760
<v Speaker 0>I I guess the simplest example actually would

00:58:32.760 --> 00:58:34.839
<v Speaker 0>be it runs and the remote says there

00:58:34.839 --> 00:58:35.960
<v Speaker 0>are no more updates.

00:58:37.640 --> 00:58:39.880
<v Speaker 0>So it doesn't do anything. That's it. Let's

00:58:39.960 --> 00:58:42.600
<v Speaker 1>just talk about configured fetches as one thing.

00:58:42.920 --> 00:58:43.240
<v Speaker 1>Right?

00:58:43.815 --> 00:58:44.535
<v Speaker 0>Yeah.

00:58:44.935 --> 00:58:46.454
<v Speaker 1>And then it fetches all updates to the

00:58:46.454 --> 00:58:47.175
<v Speaker 1>repo.

00:58:51.415 --> 00:58:54.055
<v Speaker 1>What's the example you just gave? No remote,

00:58:54.135 --> 00:58:55.175
<v Speaker 1>no local

00:58:55.895 --> 00:58:57.495
<v Speaker 1>or remote

00:58:57.974 --> 00:58:58.375
<v Speaker 1>pods.

00:58:59.870 --> 00:59:01.310
<v Speaker 0>Okay. Yeah.

00:59:01.550 --> 00:59:02.990
<v Speaker 1>Nothing happens.

00:59:03.390 --> 00:59:05.310
<v Speaker 1>So this is when a fetch happens. Right?

00:59:05.310 --> 00:59:06.110
<v Speaker 0>Correct.

00:59:07.070 --> 00:59:08.670
<v Speaker 1>So if there's no local mods, it does

00:59:08.670 --> 00:59:09.230
<v Speaker 1>a fast forward

00:59:09.870 --> 00:59:12.030
<v Speaker 0>Well, after no local mods, it will attempt

00:59:12.030 --> 00:59:14.305
<v Speaker 0>to fetch. So, I mean, if there are

00:59:14.305 --> 00:59:17.025
<v Speaker 0>local mods, it won't even attempt a fetch.

00:59:18.465 --> 00:59:19.505
<v Speaker 1>What will it do?

00:59:20.385 --> 00:59:22.545
<v Speaker 0>It will return an error and the reconciliation

00:59:22.545 --> 00:59:23.585
<v Speaker 0>that will exit

00:59:25.105 --> 00:59:26.865
<v Speaker 0>because we don't want to blow away people's

00:59:26.865 --> 00:59:27.505
<v Speaker 0>local changes.

00:59:28.430 --> 00:59:29.870
<v Speaker 1>Okay. So I think that sounds like a

00:59:29.870 --> 00:59:30.910
<v Speaker 1>new rule. Right?

00:59:31.470 --> 00:59:32.830
<v Speaker 0>Exit yeah.

00:59:32.830 --> 00:59:34.670
<v Speaker 1>Exit the loop if

00:59:35.550 --> 00:59:37.230
<v Speaker 1>and the the the number of examples you're

00:59:37.230 --> 00:59:39.710
<v Speaker 1>giving is a good sort of guide to

00:59:39.710 --> 00:59:40.110
<v Speaker 1>that.

00:59:40.830 --> 00:59:41.150
<v Speaker 1>Okay.

00:59:42.055 --> 00:59:44.295
<v Speaker 0>So you So after our local modifications, then

00:59:44.295 --> 00:59:46.295
<v Speaker 0>we just say, You've you've done something we

00:59:46.295 --> 00:59:48.455
<v Speaker 0>don't expect. We're not gonna blow away, so,

00:59:48.455 --> 00:59:50.215
<v Speaker 0>you know, good luck. Go fix it.

00:59:50.695 --> 00:59:52.055
<v Speaker 0>And it's up to the user to go

00:59:52.055 --> 00:59:54.535
<v Speaker 0>and either commit or revert those changes.

00:59:55.940 --> 00:59:57.380
<v Speaker 1>And the the thing we're talking about in

00:59:57.380 --> 00:59:59.220
<v Speaker 1>terms of prioritization, right, you could decide not

00:59:59.220 --> 01:00:00.260
<v Speaker 1>to do that yet.

01:00:01.140 --> 01:00:03.299
<v Speaker 1>Yeah. Correct. We'll write it in the manual.

01:00:03.299 --> 01:00:04.260
<v Speaker 1>Don't do that.

01:00:05.940 --> 01:00:07.539
<v Speaker 1>And that would get on the fine behavior

01:00:07.539 --> 01:00:08.980
<v Speaker 1>if they've made some local mods.

01:00:09.615 --> 01:00:11.775
<v Speaker 0>Yep. So, you know and the way you

01:00:11.775 --> 01:00:13.055
<v Speaker 1>sort of do that is you

01:00:14.575 --> 01:00:15.855
<v Speaker 1>you'd sort of say, well, okay. This is

01:00:15.855 --> 01:00:16.735
<v Speaker 1>a different feature.

01:00:17.535 --> 01:00:19.695
<v Speaker 1>We're not building out this sprint. We'll call

01:00:19.695 --> 01:00:20.255
<v Speaker 1>it

01:00:20.495 --> 01:00:22.175
<v Speaker 1>yeah. You put another yellow sticky there and

01:00:22.175 --> 01:00:22.735
<v Speaker 1>say,

01:00:23.215 --> 01:00:24.415
<v Speaker 1>we'll call this

01:00:26.090 --> 01:00:28.330
<v Speaker 1>local module function feature, and we'll have a

01:00:28.330 --> 01:00:30.090
<v Speaker 1>separate Jira ticket for it and, you know,

01:00:30.090 --> 01:00:31.210
<v Speaker 1>all that jazz.

01:00:31.290 --> 01:00:32.810
<v Speaker 1>Okay. If you if you do all that

01:00:32.810 --> 01:00:33.370
<v Speaker 1>stuff

01:00:33.930 --> 01:00:35.450
<v Speaker 1>with a different pull request.

01:00:35.770 --> 01:00:36.490
<v Speaker 0>Yes.

01:00:38.650 --> 01:00:40.515
<v Speaker 1>So you could implement the fetches happening on

01:00:40.515 --> 01:00:42.035
<v Speaker 1>a configured interval. Right? You could just

01:00:43.555 --> 01:00:45.075
<v Speaker 1>you're implementing it, you can just say, well,

01:00:45.075 --> 01:00:46.675
<v Speaker 1>I'm gonna do this configuration thing and I'll

01:00:46.675 --> 01:00:48.835
<v Speaker 1>just make sure it calls some function in

01:00:48.835 --> 01:00:50.595
<v Speaker 1>five seconds if that's what's in the config

01:00:50.595 --> 01:00:51.395
<v Speaker 1>file. Yep.

01:00:52.790 --> 01:00:54.310
<v Speaker 1>And I'll commit that and pull it push

01:00:54.310 --> 01:00:55.750
<v Speaker 1>it because it doesn't hurt anyone.

01:00:56.550 --> 01:00:57.590
<v Speaker 1>And then,

01:00:58.070 --> 01:01:00.070
<v Speaker 1>you know, then do the actual fetches.

01:01:00.150 --> 01:01:02.950
<v Speaker 1>So that's yeah. So no local remote mods.

01:01:02.950 --> 01:01:03.430
<v Speaker 1>Nothing happens.

01:01:04.015 --> 01:01:06.255
<v Speaker 1>No local mods does a fast forward pull.

01:01:07.215 --> 01:01:07.935
<v Speaker 0>Yep.

01:01:08.975 --> 01:01:10.494
<v Speaker 0>Are there any other is this is there

01:01:10.494 --> 01:01:13.535
<v Speaker 1>any situation where you'd have no local mods

01:01:14.095 --> 01:01:16.175
<v Speaker 1>and it would do a merge or something

01:01:16.175 --> 01:01:16.335
<v Speaker 1>else?

01:01:17.170 --> 01:01:17.970
<v Speaker 0>Yes.

01:01:17.970 --> 01:01:20.290
<v Speaker 0>So that there's I said fast forward very

01:01:20.290 --> 01:01:21.810
<v Speaker 0>explicitly because

01:01:21.810 --> 01:01:24.850
<v Speaker 0>there are, I guess, two other conditions.

01:01:25.730 --> 01:01:27.330
<v Speaker 0>It could be that when we fetch the

01:01:27.330 --> 01:01:28.130
<v Speaker 0>remote,

01:01:28.530 --> 01:01:30.290
<v Speaker 0>that history has been rewritten,

01:01:30.714 --> 01:01:32.395
<v Speaker 0>and we

01:01:32.395 --> 01:01:34.234
<v Speaker 0>are not actually able to do the fast

01:01:34.234 --> 01:01:35.515
<v Speaker 0>forward merge,

01:01:36.075 --> 01:01:38.315
<v Speaker 0>we would error in that case too.

01:01:38.795 --> 01:01:39.915
<v Speaker 0>At least for now. I mean, I think

01:01:39.915 --> 01:01:41.194
<v Speaker 0>there may be features in the future where

01:01:41.194 --> 01:01:42.474
<v Speaker 0>we try and handle that better.

01:01:43.010 --> 01:01:45.970
<v Speaker 0>But for now, get sync really because the

01:01:45.970 --> 01:01:47.970
<v Speaker 0>simplest path is just to expect a linear

01:01:47.970 --> 01:01:49.970
<v Speaker 0>history and get like, this is supposed to

01:01:49.970 --> 01:01:51.809
<v Speaker 0>be an automated system. We don't expect people

01:01:51.809 --> 01:01:53.090
<v Speaker 0>to rewrite the history,

01:01:53.410 --> 01:01:54.370
<v Speaker 0>at least initially.

01:01:55.010 --> 01:01:56.609
<v Speaker 1>And I guess that could be like the

01:01:56.609 --> 01:01:57.410
<v Speaker 1>branch was deleted.

01:01:57.924 --> 01:01:58.885
<v Speaker 0>It could be

01:01:59.365 --> 01:02:01.765
<v Speaker 0>someone did a rebase, someone modified a commit

01:02:01.765 --> 01:02:03.765
<v Speaker 0>message. It could be I mean, there are

01:02:03.765 --> 01:02:05.685
<v Speaker 0>many examples of what would break

01:02:05.924 --> 01:02:06.964
<v Speaker 0>fast forward

01:02:07.525 --> 01:02:08.325
<v Speaker 0>merge.

01:02:10.164 --> 01:02:11.684
<v Speaker 1>Right. So and you're not gonna club in

01:02:11.684 --> 01:02:12.484
<v Speaker 1>the local

01:02:13.040 --> 01:02:16.720
<v Speaker 1>if the remote's changed? Yeah. I want to

01:02:16.720 --> 01:02:18.960
<v Speaker 0>add her and say, hey. The history here

01:02:18.960 --> 01:02:21.119
<v Speaker 0>has changed. We expect you to go and

01:02:21.119 --> 01:02:22.800
<v Speaker 0>blow away that directory and we'll clone it

01:02:22.800 --> 01:02:23.600
<v Speaker 0>from scratch.

01:02:23.839 --> 01:02:25.520
<v Speaker 0>We may provide a flag that does that

01:02:25.520 --> 01:02:26.320
<v Speaker 0>automatically,

01:02:26.320 --> 01:02:28.115
<v Speaker 0>but, again, I'm trying to do this the

01:02:28.115 --> 01:02:30.435
<v Speaker 0>safest way first and then add on

01:02:30.675 --> 01:02:31.555
<v Speaker 0>overwrites.

01:02:31.555 --> 01:02:32.115
<v Speaker 1>Yeah.

01:02:32.595 --> 01:02:34.355
<v Speaker 1>That's a good example of, like, you might

01:02:34.355 --> 01:02:36.115
<v Speaker 1>do something different in future and you'll come

01:02:36.115 --> 01:02:38.435
<v Speaker 1>back and take this example out. Yeah. Exactly.

01:02:39.980 --> 01:02:42.300
<v Speaker 1>So what else? Are there any other situations?

01:02:42.380 --> 01:02:43.580
<v Speaker 1>Let me look at them.

01:02:45.099 --> 01:02:47.339
<v Speaker 1>So when there's no local remote mods, nothing

01:02:47.339 --> 01:02:48.940
<v Speaker 1>happen nothing at all happens?

01:02:49.180 --> 01:02:49.980
<v Speaker 1>Correct.

01:02:50.460 --> 01:02:51.740
<v Speaker 1>Nothing else happens?

01:02:51.900 --> 01:02:53.339
<v Speaker 0>Yep. It goes back to sleep till the

01:02:53.339 --> 01:02:55.180
<v Speaker 0>configured interval then whoops.

01:02:56.885 --> 01:02:58.565
<v Speaker 1>And we're always gonna try to do a

01:02:58.565 --> 01:02:59.685
<v Speaker 1>fast forward pull.

01:03:00.085 --> 01:03:02.484
<v Speaker 0>It will only accept the fast forward fetch

01:03:02.484 --> 01:03:04.165
<v Speaker 0>and merge. Yes. So

01:03:04.325 --> 01:03:06.085
<v Speaker 0>I that's a yeah. A pull would be

01:03:06.085 --> 01:03:07.205
<v Speaker 0>a fetch and merge. So

01:03:10.100 --> 01:03:12.180
<v Speaker 0>I mean, there are things that happen when

01:03:12.180 --> 01:03:14.100
<v Speaker 0>there are those changes. Maybe we need to

01:03:14.100 --> 01:03:15.780
<v Speaker 0>bring in those. I don't know if that's

01:03:15.780 --> 01:03:17.860
<v Speaker 0>a different feature or not. I'll trust your

01:03:17.860 --> 01:03:18.980
<v Speaker 0>judgment. But

01:03:19.540 --> 01:03:21.845
<v Speaker 0>say there are four commits that branch, I

01:03:21.845 --> 01:03:23.525
<v Speaker 0>guess that's unlikely depending on the interval. But

01:03:23.525 --> 01:03:24.885
<v Speaker 0>say there are four commits,

01:03:25.605 --> 01:03:27.845
<v Speaker 0>it will then work out the depths of

01:03:27.845 --> 01:03:29.684
<v Speaker 0>those commits, look for all the files that

01:03:29.684 --> 01:03:31.684
<v Speaker 0>have changed, and it send it publishes a

01:03:31.684 --> 01:03:33.765
<v Speaker 0>message that says, hey. These files have changed

01:03:33.765 --> 01:03:35.204
<v Speaker 0>to any number of subscribers.

01:03:36.309 --> 01:03:37.109
<v Speaker 1>Okay.

01:03:37.109 --> 01:03:39.430
<v Speaker 1>So does that sound like maybe I well,

01:03:39.430 --> 01:03:40.869
<v Speaker 1>I think what what

01:03:41.109 --> 01:03:42.630
<v Speaker 1>what I would tend to do is have

01:03:42.630 --> 01:03:43.830
<v Speaker 1>that as a rule here.

01:03:44.710 --> 01:03:46.390
<v Speaker 1>And if the feature's looking wide, I think

01:03:46.390 --> 01:03:47.910
<v Speaker 1>we'll are some of these things a different

01:03:47.910 --> 01:03:48.789
<v Speaker 1>thing? Okay.

01:03:50.535 --> 01:03:51.575
<v Speaker 1>So what what

01:03:53.095 --> 01:03:54.295
<v Speaker 0>pull reports.

01:03:55.255 --> 01:03:56.455
<v Speaker 0>So yeah.

01:04:01.095 --> 01:04:03.170
<v Speaker 0>Yeah. Pillar ports. I I mean, I don't

01:04:03.170 --> 01:04:04.690
<v Speaker 0>know if I'd use that vocabulary. I don't

01:04:04.690 --> 01:04:05.650
<v Speaker 0>know if that's important. But

01:04:06.369 --> 01:04:08.210
<v Speaker 1>It is important. What would you call it?

01:04:09.890 --> 01:04:11.810
<v Speaker 0>Go on. You type it.

01:04:13.170 --> 01:04:14.930
<v Speaker 0>I I thought I just got to watch.

01:04:14.930 --> 01:04:16.049
<v Speaker 0>Right. Okay. So

01:04:19.455 --> 01:04:20.815
<v Speaker 0>changes to

01:04:21.135 --> 01:04:23.215
<v Speaker 0>Rupo are published

01:04:25.135 --> 01:04:27.855
<v Speaker 0>on file level. So it's not patch level.

01:04:27.855 --> 01:04:29.695
<v Speaker 0>We only inform you that if fail has

01:04:29.695 --> 01:04:30.255
<v Speaker 0>changed, not

01:04:31.320 --> 01:04:33.800
<v Speaker 0>which lanes, not which blobs. None of that

01:04:33.800 --> 01:04:34.600
<v Speaker 0>is important.

01:04:35.160 --> 01:04:37.000
<v Speaker 0>The idea being that whoever signs up for

01:04:37.000 --> 01:04:38.920
<v Speaker 0>subscriptions can say, I want to be notified

01:04:38.920 --> 01:04:40.760
<v Speaker 0>of changes within this directory.

01:04:41.640 --> 01:04:43.400
<v Speaker 0>And that this is this is future work.

01:04:43.400 --> 01:04:44.755
<v Speaker 0>I'm not gonna get into too much. But,

01:04:44.755 --> 01:04:46.275
<v Speaker 0>you know, you can say as a consumer

01:04:46.275 --> 01:04:48.515
<v Speaker 0>of this library, here's my subscriber. He wants

01:04:48.515 --> 01:04:49.955
<v Speaker 0>to know all YAML files in the directory

01:04:49.955 --> 01:04:50.595
<v Speaker 0>change.

01:04:50.915 --> 01:04:52.515
<v Speaker 0>But the the first one is just, hey.

01:04:52.515 --> 01:04:53.555
<v Speaker 0>Here's all the files that changed.

01:04:55.940 --> 01:04:57.380
<v Speaker 1>So is that right? If I put four

01:04:57.380 --> 01:04:59.540
<v Speaker 1>commits to feed dot text, I get one

01:04:59.540 --> 01:05:02.660
<v Speaker 1>notification that feed dot text changed? Correct. Yes.

01:05:05.700 --> 01:05:07.780
<v Speaker 1>And if I put one commit

01:05:09.725 --> 01:05:11.485
<v Speaker 1>to feed dot text

01:05:12.685 --> 01:05:14.525
<v Speaker 1>I'll do YAML actually because if that's more

01:05:14.525 --> 01:05:16.845
<v Speaker 1>like your use case. It's good to match

01:05:16.845 --> 01:05:17.805
<v Speaker 1>these cases.

01:05:18.045 --> 01:05:18.685
<v Speaker 0>Yep.

01:05:19.325 --> 01:05:20.685
<v Speaker 1>Two notification.

01:05:20.925 --> 01:05:22.845
<v Speaker 1>I get one notification with both files or

01:05:22.845 --> 01:05:23.485
<v Speaker 1>I get

01:05:24.950 --> 01:05:26.470
<v Speaker 1>two notes That's

01:05:27.190 --> 01:05:29.589
<v Speaker 0>that's a good point. So right now, you

01:05:29.589 --> 01:05:30.790
<v Speaker 0>get one notification

01:05:30.790 --> 01:05:31.670
<v Speaker 0>that has

01:05:32.069 --> 01:05:34.470
<v Speaker 0>multiple objects in it. So it'd be a

01:05:34.470 --> 01:05:35.589
<v Speaker 0>list of files that changed.

01:05:36.585 --> 01:05:39.705
<v Speaker 1>Yeah. Yeah. So one notifications would What

01:05:40.585 --> 01:05:41.785
<v Speaker 1>so why have I put a filename in

01:05:41.785 --> 01:05:42.345
<v Speaker 1>there?

01:05:43.545 --> 01:05:45.385
<v Speaker 0>Just because it's The filename is what will

01:05:45.385 --> 01:05:47.225
<v Speaker 0>be listed in the in the change set.

01:05:48.540 --> 01:05:50.620
<v Speaker 1>Yeah. So as long as that's understandable to

01:05:50.620 --> 01:05:51.260
<v Speaker 1>everyone.

01:05:54.620 --> 01:05:56.220
<v Speaker 1>So if nothing's

01:05:56.540 --> 01:05:57.340
<v Speaker 1>pulled,

01:05:59.820 --> 01:06:02.380
<v Speaker 1>do you get a notification that nothing changed

01:06:02.380 --> 01:06:03.580
<v Speaker 1>or do you get no notification?

01:06:04.265 --> 01:06:05.865
<v Speaker 0>There would be no notification.

01:06:05.865 --> 01:06:07.705
<v Speaker 0>Nothing would happen. So,

01:06:16.105 --> 01:06:18.025
<v Speaker 1>you know, whether this is a different feature,

01:06:18.025 --> 01:06:19.625
<v Speaker 1>we've talked about it a few times already,

01:06:19.625 --> 01:06:21.839
<v Speaker 1>but it just depends on whether you feel

01:06:21.839 --> 01:06:22.960
<v Speaker 1>like you're gonna do it all in one

01:06:22.960 --> 01:06:24.559
<v Speaker 1>go, whether that's gonna be something you might

01:06:24.559 --> 01:06:26.000
<v Speaker 1>do separately.

01:06:28.319 --> 01:06:30.400
<v Speaker 1>Which is a sizing thing. It's that feature

01:06:30.400 --> 01:06:32.160
<v Speaker 1>scope. Right? If you're a team who are

01:06:32.160 --> 01:06:33.359
<v Speaker 1>trying to get everything down to a day,

01:06:35.065 --> 01:06:37.705
<v Speaker 1>maybe you'd use that as a nice scene

01:06:38.105 --> 01:06:39.865
<v Speaker 1>along which to split your feature.

01:06:40.985 --> 01:06:42.185
<v Speaker 0>I mean, I think I would. I mean,

01:06:42.185 --> 01:06:44.185
<v Speaker 0>I'm already thinking about this from a code

01:06:44.185 --> 01:06:46.310
<v Speaker 0>point of view. And I think, you know,

01:06:46.310 --> 01:06:48.230
<v Speaker 0>I really wanna make sure the reconciliation lip

01:06:48.230 --> 01:06:50.550
<v Speaker 0>is solid and tested. And that just means

01:06:50.869 --> 01:06:53.990
<v Speaker 0>I probably would have notifications or pops up

01:06:53.990 --> 01:06:56.150
<v Speaker 0>as a new feature afterwards,

01:06:56.470 --> 01:06:57.830
<v Speaker 0>but I'm happy with the reconciliation.

01:06:59.875 --> 01:07:02.195
<v Speaker 0>So, yeah, we to move over. And

01:07:03.315 --> 01:07:04.675
<v Speaker 1>even within the features,

01:07:04.994 --> 01:07:06.994
<v Speaker 1>I would tend to work on these rule

01:07:06.994 --> 01:07:08.994
<v Speaker 1>by rule sometimes as as a way of

01:07:08.994 --> 01:07:11.714
<v Speaker 1>organizing my workflow. So that's

01:07:12.250 --> 01:07:14.410
<v Speaker 1>probably enough to talk about for now as

01:07:14.410 --> 01:07:15.850
<v Speaker 1>an example of how to do it.

01:07:16.650 --> 01:07:19.770
<v Speaker 1>Sweet. How long is that? Four fifty minutes?

01:07:20.330 --> 01:07:21.610
<v Speaker 0>An hour and ten.

01:07:22.490 --> 01:07:23.770
<v Speaker 1>Yeah. But we chatted for a bit at

01:07:23.770 --> 01:07:24.090
<v Speaker 1>the start.

01:07:24.654 --> 01:07:25.454
<v Speaker 0>Oh, we did.

01:07:26.815 --> 01:07:28.815
<v Speaker 0>I thought you made it a total. Alright.

01:07:29.694 --> 01:07:31.055
<v Speaker 1>My energy is dropping.

01:07:31.535 --> 01:07:32.895
<v Speaker 1>Yours might be as well.

01:07:33.535 --> 01:07:34.815
<v Speaker 1>That and that's why I sort of say

01:07:34.815 --> 01:07:36.335
<v Speaker 1>half an hour. It would be better if

01:07:36.335 --> 01:07:38.015
<v Speaker 1>we talked about this first bit

01:07:38.920 --> 01:07:39.960
<v Speaker 1>one morning,

01:07:40.280 --> 01:07:41.640
<v Speaker 1>and then the next day over the lunch,

01:07:41.640 --> 01:07:43.320
<v Speaker 1>come back to it and say, you know,

01:07:43.320 --> 01:07:45.000
<v Speaker 1>what what else should happen.

01:07:46.520 --> 01:07:48.360
<v Speaker 0>Yeah. Yeah. Sure. So

01:07:49.560 --> 01:07:51.160
<v Speaker 0>and then then if if you've got a

01:07:51.160 --> 01:07:53.234
<v Speaker 0>couple more minutes, what I so I'll make

01:07:53.234 --> 01:07:56.435
<v Speaker 0>this board I'm saying that's enough.

01:07:57.714 --> 01:07:59.394
<v Speaker 0>I just make this public to the world?

01:07:59.394 --> 01:08:01.234
<v Speaker 0>So, yeah, I can. Okay. Cool. So

01:08:01.634 --> 01:08:03.474
<v Speaker 1>I'm gonna go and split that first

01:08:04.035 --> 01:08:04.755
<v Speaker 1>rule.

01:08:05.315 --> 01:08:06.810
<v Speaker 0>Okay. So in the show notes, I'll I'll

01:08:06.810 --> 01:08:07.930
<v Speaker 0>put a link to this board if anyone

01:08:07.930 --> 01:08:09.530
<v Speaker 0>wants to follow along at home.

01:08:09.850 --> 01:08:12.010
<v Speaker 0>I'm curious then before we finish up. It's

01:08:12.010 --> 01:08:12.490
<v Speaker 0>like,

01:08:12.970 --> 01:08:14.730
<v Speaker 0>you know, I I I wanna start getting

01:08:14.730 --> 01:08:15.690
<v Speaker 0>this library

01:08:16.090 --> 01:08:17.850
<v Speaker 0>moving forward. Right? And that's just been really

01:08:17.850 --> 01:08:19.290
<v Speaker 0>good. I've taken a lot of the knowledge

01:08:19.290 --> 01:08:20.410
<v Speaker 0>that I had in my head about how

01:08:20.410 --> 01:08:22.225
<v Speaker 0>I want it to work, and we've now

01:08:22.225 --> 01:08:23.745
<v Speaker 0>got that with rules.

01:08:24.305 --> 01:08:26.545
<v Speaker 0>What is my next step then as a

01:08:26.545 --> 01:08:27.425
<v Speaker 0>developer?

01:08:27.505 --> 01:08:29.425
<v Speaker 0>Do I start writing

01:08:29.585 --> 01:08:32.465
<v Speaker 0>scenarios and feature fails to map to these

01:08:32.465 --> 01:08:34.305
<v Speaker 0>features? Like, as as each one of these

01:08:34.305 --> 01:08:35.585
<v Speaker 0>yellow post its

01:08:36.100 --> 01:08:38.979
<v Speaker 0>one feature and then a rule as a

01:08:38.979 --> 01:08:41.540
<v Speaker 0>scenario? Is that a fair mapping of what

01:08:41.540 --> 01:08:43.059
<v Speaker 0>I what I do next?

01:08:46.340 --> 01:08:46.979
<v Speaker 1>Yeah.

01:08:47.699 --> 01:08:48.420
<v Speaker 1>And so

01:08:49.725 --> 01:08:53.484
<v Speaker 1>very specifically, these map to Gherkin syntax. And

01:08:53.484 --> 01:08:54.444
<v Speaker 1>what we could do

01:08:54.844 --> 01:08:56.524
<v Speaker 1>what time do you wanna finish? Half past?

01:08:56.685 --> 01:08:58.045
<v Speaker 0>Yeah. Roughly. Later?

01:08:59.005 --> 01:09:01.085
<v Speaker 0>That's flexible. Whatever you've got, mate.

01:09:02.060 --> 01:09:04.540
<v Speaker 1>So let's write some of it out as

01:09:04.540 --> 01:09:07.340
<v Speaker 1>Gherkin. I'm just editing the which is a

01:09:07.340 --> 01:09:09.099
<v Speaker 1>bad thing to do. Just

01:09:11.580 --> 01:09:12.779
<v Speaker 1>to separate

01:09:12.779 --> 01:09:13.739
<v Speaker 1>out that

01:09:13.979 --> 01:09:15.100
<v Speaker 1>big one

01:09:17.844 --> 01:09:19.524
<v Speaker 1>with the directory.

01:09:27.925 --> 01:09:30.750
<v Speaker 1>What what if refactoring is important.

01:09:30.990 --> 01:09:31.630
<v Speaker 1>So

01:09:31.950 --> 01:09:33.550
<v Speaker 1>did we have the happy version?

01:09:35.390 --> 01:09:37.469
<v Speaker 1>No. The on disk,

01:09:37.470 --> 01:09:39.229
<v Speaker 1>so clone the remote.

01:09:39.630 --> 01:09:42.990
<v Speaker 0>Correct. If it actually exists and isn't a

01:09:42.990 --> 01:09:43.710
<v Speaker 1>git

01:09:43.835 --> 01:09:44.635
<v Speaker 1>clone,

01:09:44.875 --> 01:09:45.675
<v Speaker 1>error.

01:09:46.715 --> 01:09:48.074
<v Speaker 1>Not clone. Checkout.

01:09:48.154 --> 01:09:49.114
<v Speaker 1>Checkout.

01:09:50.635 --> 01:09:52.314
<v Speaker 1>If the directory is Git,

01:09:52.635 --> 01:09:54.475
<v Speaker 1>but it doesn't match the remote, don't clone.

01:09:54.475 --> 01:09:55.915
<v Speaker 1>And I think

01:10:06.450 --> 01:10:08.449
<v Speaker 1>I think all of these

01:10:10.210 --> 01:10:11.970
<v Speaker 1>are examples

01:10:12.835 --> 01:10:14.355
<v Speaker 1>of that rule. I think this is the

01:10:14.355 --> 01:10:15.235
<v Speaker 1>same rule.

01:10:16.435 --> 01:10:17.155
<v Speaker 0>Okay.

01:10:18.275 --> 01:10:20.195
<v Speaker 1>It's just the definition of what correct is.

01:10:20.195 --> 01:10:20.355
<v Speaker 1>So

01:10:29.550 --> 01:10:31.150
<v Speaker 1>Does that make sense? I'm gonna get rid

01:10:31.150 --> 01:10:31.790
<v Speaker 1>of that.

01:10:36.510 --> 01:10:36.830
<v Speaker 0>Yeah.

01:10:37.385 --> 01:10:38.265
<v Speaker 0>Makes sense.

01:10:38.585 --> 01:10:40.345
<v Speaker 1>So these are all explicitly

01:10:40.345 --> 01:10:42.105
<v Speaker 1>error error versions.

01:10:42.345 --> 01:10:43.065
<v Speaker 0>Yep.

01:10:45.065 --> 01:10:46.585
<v Speaker 1>It's often good to go run through at

01:10:46.585 --> 01:10:47.785
<v Speaker 1>the end of example mapping, do a bit

01:10:47.785 --> 01:10:48.425
<v Speaker 1>of this.

01:10:50.185 --> 01:10:52.025
<v Speaker 1>And it is a bit easier. It's a

01:10:52.025 --> 01:10:52.905
<v Speaker 1>bit easier in person

01:10:54.450 --> 01:10:57.090
<v Speaker 1>because people are willing to move stickies around.

01:10:57.730 --> 01:10:59.969
<v Speaker 1>And it it's easier

01:11:00.210 --> 01:11:01.810
<v Speaker 1>if you're in this kind of session and

01:11:01.810 --> 01:11:03.730
<v Speaker 1>there's loads of people familiar with it. I

01:11:03.730 --> 01:11:04.930
<v Speaker 1>think the first time you do it, end

01:11:04.930 --> 01:11:07.730
<v Speaker 1>up with one person being the sort of

01:11:07.125 --> 01:11:08.885
<v Speaker 1>owner of the board. I think I've done

01:11:08.885 --> 01:11:09.925
<v Speaker 1>that a bit today.

01:11:10.724 --> 01:11:12.724
<v Speaker 1>And he's the only one typing. So if

01:11:12.724 --> 01:11:13.844
<v Speaker 1>you can try and break that down a

01:11:13.844 --> 01:11:15.364
<v Speaker 1>bit if you're doing this in groups,

01:11:15.925 --> 01:11:18.244
<v Speaker 1>that could be productive. Know? While while Dave

01:11:18.244 --> 01:11:19.605
<v Speaker 1>and I were talking about the other stuff,

01:11:19.605 --> 01:11:20.965
<v Speaker 1>someone could have been coming back and

01:11:21.610 --> 01:11:24.410
<v Speaker 1>clarifying this to their own sort of satisfaction

01:11:24.410 --> 01:11:26.410
<v Speaker 1>and then calling you back. So

01:11:37.915 --> 01:11:38.635
<v Speaker 1>So

01:11:39.195 --> 01:11:41.755
<v Speaker 1>that's probably enough output. Which feature do you

01:11:41.755 --> 01:11:44.795
<v Speaker 1>want to quickly do in in

01:11:44.955 --> 01:11:45.355
<v Speaker 1>Gherkin?

01:11:46.840 --> 01:11:49.480
<v Speaker 0>Well, I feel like the initial clone feature

01:11:49.480 --> 01:11:50.519
<v Speaker 0>will be the

01:11:51.239 --> 01:11:52.920
<v Speaker 0>the simpler one. But

01:11:53.880 --> 01:11:54.760
<v Speaker 1>Are

01:11:54.760 --> 01:11:56.199
<v Speaker 1>you able to do some sort of split

01:11:56.199 --> 01:11:57.480
<v Speaker 1>screen with the

01:11:58.840 --> 01:11:59.880
<v Speaker 1>IDE?

01:12:01.239 --> 01:12:01.880
<v Speaker 0>Yeah. Sure.

01:12:02.704 --> 01:12:03.344
<v Speaker 1>Oh,

01:12:04.065 --> 01:12:06.544
<v Speaker 1>yeah. You're a Mac user now. I am.

01:12:07.264 --> 01:12:09.905
<v Speaker 1>You've joined us. Oh, I'm trying to be.

01:12:11.425 --> 01:12:13.344
<v Speaker 0>Alright. So there we go.

01:12:13.985 --> 01:12:15.264
<v Speaker 1>So delete that example.

01:12:17.440 --> 01:12:18.239
<v Speaker 0>Delete?

01:12:20.000 --> 01:12:21.199
<v Speaker 0>That's how it worked.

01:12:22.560 --> 01:12:24.719
<v Speaker 1>Undelete it. Let's look at it. It looks

01:12:24.719 --> 01:12:25.840
<v Speaker 1>like a rule to me.

01:12:26.480 --> 01:12:27.520
<v Speaker 1>Oh, no. Maybe not.

01:12:28.275 --> 01:12:30.115
<v Speaker 1>Maybe that's an example. What I wrote was

01:12:30.275 --> 01:12:32.435
<v Speaker 0>yeah. I I think I tried to encapsulate

01:12:32.435 --> 01:12:34.275
<v Speaker 0>everything in a single example as if I

01:12:34.275 --> 01:12:35.555
<v Speaker 0>was trying to write, like, one end to

01:12:35.555 --> 01:12:37.635
<v Speaker 0>end test, which it looks like was necessarily

01:12:37.635 --> 01:12:38.755
<v Speaker 0>the correct approach.

01:12:39.235 --> 01:12:41.235
<v Speaker 0>And then I that's as a rule,

01:12:42.070 --> 01:12:43.510
<v Speaker 0>I think that I got a little bit

01:12:43.510 --> 01:12:45.590
<v Speaker 0>confused. This is yeah. If there's nothing there,

01:12:45.590 --> 01:12:46.950
<v Speaker 0>then this is what I expect to happen,

01:12:46.950 --> 01:12:48.230
<v Speaker 0>and then I was gonna try and layer

01:12:48.230 --> 01:12:51.830
<v Speaker 0>on the the edge cases after that. So

01:12:52.870 --> 01:12:55.270
<v Speaker 0>try comment that well, we just start from

01:12:55.270 --> 01:12:56.070
<v Speaker 0>what we've mapped.

01:12:57.125 --> 01:12:57.845
<v Speaker 1>Feature?

01:12:58.405 --> 01:13:00.965
<v Speaker 0>So this would just match this. Right? So

01:13:00.965 --> 01:13:01.845
<v Speaker 0>initial

01:13:01.925 --> 01:13:03.285
<v Speaker 0>colon of

01:13:04.485 --> 01:13:05.765
<v Speaker 0>the repository.

01:13:06.085 --> 01:13:06.725
<v Speaker 0>Right?

01:13:06.885 --> 01:13:09.125
<v Speaker 1>So you're you're expanding on stuff because we

01:13:09.285 --> 01:13:12.159
<v Speaker 1>it's just scrappy notes from your conversation. Generally,

01:13:12.320 --> 01:13:14.559
<v Speaker 1>one or maybe two people would go away

01:13:14.559 --> 01:13:15.519
<v Speaker 1>and write it up.

01:13:16.159 --> 01:13:16.800
<v Speaker 1>And

01:13:17.119 --> 01:13:18.320
<v Speaker 1>who does that?

01:13:19.760 --> 01:13:22.320
<v Speaker 1>I like Matt Wynn's heuristic, which is whoever

01:13:22.320 --> 01:13:23.039
<v Speaker 1>learned the most.

01:13:25.085 --> 01:13:25.725
<v Speaker 1>So

01:13:26.125 --> 01:13:27.405
<v Speaker 1>what we're gonna do is we're gonna write

01:13:27.405 --> 01:13:28.045
<v Speaker 1>this down

01:13:28.365 --> 01:13:30.685
<v Speaker 1>and then we're gonna we're everyone who's in

01:13:30.685 --> 01:13:32.045
<v Speaker 1>the meetings here, but we then share it

01:13:32.045 --> 01:13:33.405
<v Speaker 1>back and say this is what this is

01:13:33.405 --> 01:13:34.445
<v Speaker 1>what we talked about.

01:13:35.645 --> 01:13:37.565
<v Speaker 1>And if you do that on short enough

01:13:37.565 --> 01:13:38.205
<v Speaker 1>time scale,

01:13:39.000 --> 01:13:41.400
<v Speaker 1>like day hours or days,

01:13:42.840 --> 01:13:44.680
<v Speaker 1>it's really easy for the people who were

01:13:44.680 --> 01:13:46.360
<v Speaker 1>in the conversation to read through it and

01:13:46.360 --> 01:13:48.120
<v Speaker 1>just go, yep. Yep. Yep. Yep. Yep. Yep.

01:13:48.120 --> 01:13:50.760
<v Speaker 1>Yep. Right? Yeah. Because it's it's already loaded

01:13:50.760 --> 01:13:53.885
<v Speaker 1>into their head. Okay. If write it all

01:13:53.885 --> 01:13:55.485
<v Speaker 1>down and then six months later,

01:13:56.125 --> 01:13:57.485
<v Speaker 1>show it to someone, they won't know what

01:13:57.485 --> 01:13:58.525
<v Speaker 1>any of it means

01:13:58.765 --> 01:14:00.365
<v Speaker 1>sometimes. Or they won't be able to tell

01:14:00.525 --> 01:14:02.284
<v Speaker 1>say, yes. That's what we talked about.

01:14:02.765 --> 01:14:04.845
<v Speaker 1>So it's important to have that feedback loop.

01:14:04.845 --> 01:14:05.245
<v Speaker 1>Whoever

01:14:06.150 --> 01:14:07.670
<v Speaker 1>feels like they learned the most, so maybe

01:14:07.670 --> 01:14:08.550
<v Speaker 1>that would be me,

01:14:09.110 --> 01:14:10.870
<v Speaker 1>would then write out the examples with more

01:14:10.870 --> 01:14:12.630
<v Speaker 1>detail, expanding on it a bit,

01:14:13.350 --> 01:14:14.390
<v Speaker 1>show it to the people who had the

01:14:14.390 --> 01:14:16.630
<v Speaker 1>more knowledge at the start. And if they

01:14:16.630 --> 01:14:18.310
<v Speaker 1>if they say, yep. That's right. It's that's

01:14:18.310 --> 01:14:20.949
<v Speaker 1>an important validation step that I understood it

01:14:21.365 --> 01:14:22.885
<v Speaker 1>because I was able to sort of talk

01:14:22.885 --> 01:14:23.845
<v Speaker 1>it back to you.

01:14:25.045 --> 01:14:26.405
<v Speaker 1>I do that with my daughter. If I

01:14:26.405 --> 01:14:28.485
<v Speaker 1>tell her if this is some important instruction,

01:14:28.485 --> 01:14:29.525
<v Speaker 1>I ask her to say it back to

01:14:29.525 --> 01:14:30.085
<v Speaker 1>me,

01:14:31.045 --> 01:14:33.364
<v Speaker 1>like, to make sure she went in.

01:14:33.685 --> 01:14:34.645
<v Speaker 1>So you've got feature.

01:14:35.520 --> 01:14:37.920
<v Speaker 1>There's you can now have what's called a

01:14:37.920 --> 01:14:39.679
<v Speaker 1>feature narrative. You can have, like, a paragraph

01:14:39.679 --> 01:14:41.119
<v Speaker 1>or more of stuff.

01:14:43.280 --> 01:14:44.800
<v Speaker 0>Right here? The parser just looks for the

01:14:44.800 --> 01:14:45.359
<v Speaker 1>word.

01:14:46.800 --> 01:14:47.760
<v Speaker 1>The next line. Yeah.

01:14:49.954 --> 01:14:52.034
<v Speaker 1>Anything that doesn't have the word

01:14:52.275 --> 01:14:53.235
<v Speaker 1>example

01:14:54.275 --> 01:14:55.394
<v Speaker 1>with a colon

01:14:55.635 --> 01:14:57.315
<v Speaker 1>is gonna be fine. The parser will just

01:14:57.315 --> 01:14:58.994
<v Speaker 1>seek to the next the next, you know,

01:14:58.994 --> 01:15:01.074
<v Speaker 1>keyword. So that's a good place to put

01:15:01.074 --> 01:15:01.235
<v Speaker 1>some.

01:15:02.540 --> 01:15:04.780
<v Speaker 0>So would you call if we wanted the

01:15:04.780 --> 01:15:05.420
<v Speaker 0>name,

01:15:06.060 --> 01:15:09.020
<v Speaker 0>it's it's like bootstrap get repository.

01:15:09.340 --> 01:15:11.099
<v Speaker 0>Like, maybe give it a

01:15:11.500 --> 01:15:13.340
<v Speaker 0>catch your name and then use a narrative

01:15:13.340 --> 01:15:14.700
<v Speaker 0>to actually explain what that means.

01:15:15.525 --> 01:15:17.925
<v Speaker 1>Yeah. When we first we need to check

01:15:17.925 --> 01:15:20.085
<v Speaker 1>blah blah blah blah blah. You can put

01:15:20.085 --> 01:15:20.725
<v Speaker 1>your

01:15:21.045 --> 01:15:22.005
<v Speaker 1>as a

01:15:22.485 --> 01:15:23.285
<v Speaker 1>so that

01:15:24.085 --> 01:15:26.005
<v Speaker 1>we need to be able to If

01:15:26.405 --> 01:15:28.245
<v Speaker 1>you want if you want if you've got

01:15:28.245 --> 01:15:29.685
<v Speaker 1>that, don't don't create it if you haven't

01:15:29.685 --> 01:15:30.005
<v Speaker 1>got it.

01:15:30.770 --> 01:15:33.250
<v Speaker 1>And you can put random other things that

01:15:33.250 --> 01:15:35.090
<v Speaker 1>people talked about, you know. This is for

01:15:35.090 --> 01:15:36.530
<v Speaker 1>Barry in the accounting.

01:15:36.690 --> 01:15:38.210
<v Speaker 1>It's just for some free text for the

01:15:38.290 --> 01:15:39.730
<v Speaker 1>that's gonna be useful to a reader. Right.

01:15:39.730 --> 01:15:41.969
<v Speaker 1>Okay. There's lots of places you can put

01:15:41.969 --> 01:15:44.224
<v Speaker 1>free text in a feature file, specifically because

01:15:44.224 --> 01:15:46.224
<v Speaker 1>we're expecting them to be read by people

01:15:46.224 --> 01:15:47.584
<v Speaker 1>as well as passed

01:15:48.224 --> 01:15:48.784
<v Speaker 1>by

01:15:49.585 --> 01:15:50.544
<v Speaker 1>robots.

01:15:53.985 --> 01:15:55.024
<v Speaker 0>So, like,

01:15:56.224 --> 01:15:58.224
<v Speaker 0>chart and street like that for now?

01:15:58.969 --> 01:15:59.610
<v Speaker 1>Yeah.

01:15:59.850 --> 01:16:02.409
<v Speaker 1>And now which cucumber are you using? Do

01:16:02.409 --> 01:16:02.969
<v Speaker 1>you know?

01:16:05.290 --> 01:16:07.370
<v Speaker 0>The new syntax stuff that we talked about

01:16:07.370 --> 01:16:09.289
<v Speaker 0>a few weeks ago when I was curious.

01:16:10.010 --> 01:16:11.934
<v Speaker 0>It works. Like, so

01:16:12.815 --> 01:16:15.215
<v Speaker 1>So Gherkin six was the first one that

01:16:15.215 --> 01:16:17.695
<v Speaker 1>added a new keyword for ages. Gherkin what?

01:16:17.695 --> 01:16:18.175
<v Speaker 0>Sorry?

01:16:18.495 --> 01:16:20.014
<v Speaker 1>Gherkin version six.

01:16:20.655 --> 01:16:23.855
<v Speaker 0>Uh-huh. Okay. Cucumber Cucumber six was the first

01:16:23.855 --> 01:16:25.614
<v Speaker 1>one that had a a Gherkin change for

01:16:25.614 --> 01:16:25.855
<v Speaker 1>a while.

01:16:26.920 --> 01:16:28.840
<v Speaker 1>So you can put rule in because we've

01:16:28.840 --> 01:16:30.679
<v Speaker 1>doing example mapping a lot. You can put

01:16:30.679 --> 01:16:32.280
<v Speaker 1>a rule. So what's the first rule?

01:16:34.599 --> 01:16:35.320
<v Speaker 0>Local

01:16:35.480 --> 01:16:36.519
<v Speaker 0>directory

01:16:36.920 --> 01:16:38.039
<v Speaker 0>doesn't exist.

01:16:40.795 --> 01:16:42.235
<v Speaker 1>Yeah. You can phrase it as a rule

01:16:42.235 --> 01:16:42.875
<v Speaker 1>though.

01:16:44.315 --> 01:16:44.955
<v Speaker 1>What what

01:16:45.675 --> 01:16:47.275
<v Speaker 1>you can put what you can put it

01:16:47.275 --> 01:16:48.554
<v Speaker 1>on the sticky, you know.

01:16:50.555 --> 01:16:52.395
<v Speaker 0>So repositories

01:16:52.395 --> 01:16:55.195
<v Speaker 0>are cool and if not already?

01:16:57.280 --> 01:16:59.600
<v Speaker 0>So we have in the blue. Right? Already

01:16:59.600 --> 01:17:01.360
<v Speaker 1>on disk. You you're improving it from the

01:17:01.360 --> 01:17:02.079
<v Speaker 1>workshop.

01:17:02.239 --> 01:17:03.840
<v Speaker 1>You're making it into sentences.

01:17:04.320 --> 01:17:05.600
<v Speaker 0>Oh, right. Sent. Okay.

01:17:08.735 --> 01:17:09.935
<v Speaker 1>You know, this is

01:17:10.575 --> 01:17:13.295
<v Speaker 1>potentially gonna be mapping on

01:17:14.255 --> 01:17:15.054
<v Speaker 1>to

01:17:15.215 --> 01:17:16.094
<v Speaker 1>some code.

01:17:17.695 --> 01:17:19.775
<v Speaker 0>Okay. Now this should I I put a

01:17:19.775 --> 01:17:21.535
<v Speaker 0>new lines or

01:17:23.280 --> 01:17:25.440
<v Speaker 0>it's all set on a line? Does that

01:17:25.440 --> 01:17:26.080
<v Speaker 0>matter?

01:17:26.800 --> 01:17:28.880
<v Speaker 1>All goes on the line. It's good incentive

01:17:28.880 --> 01:17:29.920
<v Speaker 1>to keep it short.

01:17:30.240 --> 01:17:32.800
<v Speaker 0>Okay. So I got a comment saying I

01:17:32.800 --> 01:17:35.120
<v Speaker 0>am difficult to understand stuff, you know. Yeah.

01:17:35.120 --> 01:17:37.625
<v Speaker 0>I I do have allergies and they're quite

01:17:37.625 --> 01:17:40.105
<v Speaker 0>bad today. Sorry about that. Plus I'm Scottish,

01:17:40.105 --> 01:17:42.025
<v Speaker 0>which means I'm not really natively speaking English

01:17:42.025 --> 01:17:43.865
<v Speaker 0>anyway, but I'll I'll try and improve.

01:17:44.425 --> 01:17:45.305
<v Speaker 0>So thanks.

01:17:45.785 --> 01:17:47.945
<v Speaker 1>I don't know if we can support some

01:17:48.345 --> 01:17:48.985
<v Speaker 1>Scots yet.

01:17:50.389 --> 01:17:53.270
<v Speaker 1>It might do. You can contribute translations

01:17:53.270 --> 01:17:55.749
<v Speaker 1>in the main Gherkin repository. So there's a

01:17:55.989 --> 01:17:57.190
<v Speaker 1>it's a little language thing you can put

01:17:57.190 --> 01:17:58.230
<v Speaker 1>at the top of the file and it

01:17:58.230 --> 01:17:59.989
<v Speaker 1>switches all the keywords into

01:18:00.310 --> 01:18:01.110
<v Speaker 1>something else.

01:18:04.575 --> 01:18:06.415
<v Speaker 1>So underneath the rule, you can have another

01:18:06.415 --> 01:18:08.015
<v Speaker 1>paragraph if you if it's a really complicated

01:18:08.015 --> 01:18:09.455
<v Speaker 1>rule and you want to sort of explain

01:18:09.455 --> 01:18:11.775
<v Speaker 1>the reasons behind it, but let's not bother.

01:18:11.935 --> 01:18:14.015
<v Speaker 1>And then you indent we've got one example,

01:18:14.015 --> 01:18:16.335
<v Speaker 1>haven't we? We do have an example. So

01:18:16.335 --> 01:18:17.614
<v Speaker 0>we would say

01:18:20.480 --> 01:18:22.320
<v Speaker 0>no local.

01:18:22.880 --> 01:18:24.880
<v Speaker 0>I keep trying to take this in pale

01:18:24.880 --> 01:18:26.239
<v Speaker 0>case. I I don't know why I have

01:18:26.239 --> 01:18:28.160
<v Speaker 0>this taxation with using pale case. I need

01:18:28.160 --> 01:18:29.600
<v Speaker 0>to try and get over that.

01:18:31.615 --> 01:18:33.135
<v Speaker 1>Because it's the happy path,

01:18:34.015 --> 01:18:35.295
<v Speaker 1>we could either

01:18:36.415 --> 01:18:38.094
<v Speaker 1>not give the example a title

01:18:38.735 --> 01:18:40.655
<v Speaker 1>because it seems a bit like the thing.

01:18:40.975 --> 01:18:42.735
<v Speaker 1>Or you don't have examples don't have to

01:18:42.735 --> 01:18:43.614
<v Speaker 1>be in a rule.

01:18:44.095 --> 01:18:46.575
<v Speaker 1>So sometimes for short feature, I'd have the

01:18:46.760 --> 01:18:48.519
<v Speaker 1>example just under the feature.

01:18:49.000 --> 01:18:51.400
<v Speaker 1>Under the example, we have these steps.

01:18:51.560 --> 01:18:52.920
<v Speaker 1>So given when then.

01:18:53.480 --> 01:18:57.800
<v Speaker 0>K. So, Gavin, I have no local directory.

01:18:59.880 --> 01:19:01.880
<v Speaker 0>When I

01:19:06.125 --> 01:19:08.604
<v Speaker 0>when I do the thing. I don't know.

01:19:08.925 --> 01:19:11.244
<v Speaker 1>When I sync the git?

01:19:12.364 --> 01:19:15.005
<v Speaker 1>When I do git? When I sync the

01:19:15.005 --> 01:19:15.405
<v Speaker 0>git,

01:19:16.540 --> 01:19:17.340
<v Speaker 0>then

01:19:17.500 --> 01:19:18.139
<v Speaker 0>I

01:19:18.460 --> 01:19:20.539
<v Speaker 0>have a locally

01:19:21.260 --> 01:19:21.980
<v Speaker 0>cloned

01:19:23.020 --> 01:19:25.260
<v Speaker 0>version. I mean, I always really suck at

01:19:25.260 --> 01:19:28.140
<v Speaker 0>this given when that stuff. So That's okay.

01:19:28.140 --> 01:19:30.300
<v Speaker 1>So the the important thing up here. So

01:19:31.945 --> 01:19:34.105
<v Speaker 0>given I have get sync configured, so we're

01:19:34.105 --> 01:19:35.864
<v Speaker 0>we're not talking about configuration right now, and

01:19:35.864 --> 01:19:37.625
<v Speaker 0>our local directory does not exist. So I

01:19:37.625 --> 01:19:40.185
<v Speaker 0>have no local directory. Yep. When I sync

01:19:40.185 --> 01:19:41.625
<v Speaker 0>a get repository

01:19:42.665 --> 01:19:43.945
<v Speaker 0>yeah. When I sync

01:19:44.730 --> 01:19:45.530
<v Speaker 0>the

01:19:45.850 --> 01:19:47.130
<v Speaker 0>get repository,

01:19:47.210 --> 01:19:49.130
<v Speaker 0>then the repository is gone. Essentially, I think

01:19:49.130 --> 01:19:50.730
<v Speaker 0>my language server is probably better.

01:19:50.890 --> 01:19:52.730
<v Speaker 0>Yeah. Is that good? Yeah.

01:19:53.370 --> 01:19:54.410
<v Speaker 1>So the the

01:19:55.210 --> 01:19:56.490
<v Speaker 1>there are some things

01:19:57.415 --> 01:19:59.015
<v Speaker 1>we could talk about here. So how much

01:19:59.015 --> 01:20:00.935
<v Speaker 1>detail do you want to include? We could

01:20:00.935 --> 01:20:02.614
<v Speaker 1>include the URL

01:20:02.935 --> 01:20:03.655
<v Speaker 1>of

01:20:04.935 --> 01:20:06.215
<v Speaker 1>the Git repository.

01:20:06.535 --> 01:20:08.455
<v Speaker 1>And it really doesn't matter from in terms

01:20:08.455 --> 01:20:09.095
<v Speaker 1>of automation,

01:20:11.210 --> 01:20:13.690
<v Speaker 1>and it really doesn't matter in terms of

01:20:15.530 --> 01:20:16.409
<v Speaker 1>business

01:20:16.810 --> 01:20:17.449
<v Speaker 1>agreement.

01:20:18.170 --> 01:20:20.250
<v Speaker 1>It's purely, is it gonna add value for

01:20:20.250 --> 01:20:21.050
<v Speaker 1>the reader

01:20:21.449 --> 01:20:24.170
<v Speaker 1>to understand that that rule? That's the important

01:20:24.170 --> 01:20:24.810
<v Speaker 1>thing to

01:20:25.275 --> 01:20:28.474
<v Speaker 1>to to to do if you're using rules.

01:20:28.795 --> 01:20:30.554
<v Speaker 1>Does it help understand that rule?

01:20:31.835 --> 01:20:33.434
<v Speaker 1>Would a reasonable person

01:20:33.755 --> 01:20:34.715
<v Speaker 1>understand

01:20:35.195 --> 01:20:36.875
<v Speaker 1>that it's the same URL? It's the same

01:20:36.875 --> 01:20:38.395
<v Speaker 1>repository that's gonna be cloned.

01:20:40.190 --> 01:20:43.229
<v Speaker 0>So should we I mean, would we provide

01:20:43.550 --> 01:20:46.269
<v Speaker 0>a table here with example configurations?

01:20:46.270 --> 01:20:48.350
<v Speaker 0>Like, what the target directory like, we don't

01:20:48.350 --> 01:20:49.870
<v Speaker 0>see what the local directory is. Does that

01:20:49.870 --> 01:20:52.030
<v Speaker 0>mean that GET sync always clones to a

01:20:52.190 --> 01:20:54.314
<v Speaker 0>a hard coded location?

01:20:54.795 --> 01:20:55.594
<v Speaker 0>You know, should we

01:20:56.715 --> 01:20:58.155
<v Speaker 0>is it something that's passed in through a

01:20:58.155 --> 01:20:59.514
<v Speaker 0>configuration, which means we have to make it

01:20:59.514 --> 01:21:01.835
<v Speaker 0>very explicit in this example? Does that matter

01:21:01.835 --> 01:21:02.474
<v Speaker 0>yet?

01:21:04.474 --> 01:21:05.114
<v Speaker 1>Good questions.

01:21:06.940 --> 01:21:07.979
<v Speaker 1>It depends.

01:21:09.099 --> 01:21:10.780
<v Speaker 0>I knew you were gonna say that.

01:21:11.179 --> 01:21:12.860
<v Speaker 1>It's

01:21:12.860 --> 01:21:15.739
<v Speaker 1>about it's about the target audience. So would

01:21:15.739 --> 01:21:17.420
<v Speaker 1>a re if you think about who's gonna

01:21:17.420 --> 01:21:18.300
<v Speaker 1>be reading it,

01:21:19.020 --> 01:21:20.459
<v Speaker 1>are they gonna assume

01:21:21.340 --> 01:21:21.980
<v Speaker 1>that

01:21:22.675 --> 01:21:25.235
<v Speaker 1>the git repository I asked to be synced

01:21:25.235 --> 01:21:27.155
<v Speaker 1>is the one that's cloned to disk?

01:21:29.155 --> 01:21:31.235
<v Speaker 0>So what I have in my head is

01:21:31.635 --> 01:21:34.755
<v Speaker 0>we haven't in our example mapping spoken about

01:21:34.755 --> 01:21:35.395
<v Speaker 0>configuration.

01:21:36.469 --> 01:21:38.790
<v Speaker 0>Now maybe that the first version test I

01:21:38.790 --> 01:21:40.630
<v Speaker 0>released doesn't actually allow you to configure it,

01:21:40.630 --> 01:21:42.310
<v Speaker 0>and it probably has a hardcore location, and

01:21:42.310 --> 01:21:44.790
<v Speaker 0>then that's that's scenario doesn't care. And it

01:21:44.790 --> 01:21:46.230
<v Speaker 0>may be that I come back later and

01:21:46.230 --> 01:21:47.989
<v Speaker 0>add a new feature that allows them to

01:21:47.989 --> 01:21:48.469
<v Speaker 0>configure

01:21:49.405 --> 01:21:52.205
<v Speaker 0>how that that works. And then that those

01:21:52.205 --> 01:21:54.925
<v Speaker 0>features and those rules and those examples will

01:21:54.925 --> 01:21:57.085
<v Speaker 0>have something that says here's how it's configured

01:21:57.085 --> 01:21:59.245
<v Speaker 0>and that's how it works. I mean, this

01:21:59.245 --> 01:22:03.005
<v Speaker 0>is is that fair? Okay. Yeah. When you

01:22:03.165 --> 01:22:05.360
<v Speaker 1>when you're on a greenfields project, most of

01:22:05.360 --> 01:22:07.360
<v Speaker 1>the time you're writing new feature files.

01:22:08.800 --> 01:22:09.919
<v Speaker 1>As it grows,

01:22:11.599 --> 01:22:13.679
<v Speaker 1>you start to be editing the feature files

01:22:13.679 --> 01:22:14.559
<v Speaker 1>more often.

01:22:15.679 --> 01:22:17.199
<v Speaker 1>So you might come back and look at

01:22:17.199 --> 01:22:18.239
<v Speaker 1>this feature and say,

01:22:19.685 --> 01:22:21.445
<v Speaker 1>actually, there's some more there's another rule which

01:22:21.445 --> 01:22:22.244
<v Speaker 1>is we can

01:22:22.805 --> 01:22:25.125
<v Speaker 1>clone to a place that isn't the default

01:22:25.445 --> 01:22:26.645
<v Speaker 1>if it's configured.

01:22:28.245 --> 01:22:29.525
<v Speaker 1>Or there could be, like, you add extra

01:22:29.525 --> 01:22:31.845
<v Speaker 1>examples for if if a different location's given.

01:22:31.845 --> 01:22:32.965
<v Speaker 1>It could be doing it in a different

01:22:32.965 --> 01:22:34.965
<v Speaker 1>file. It's it's kind of optional.

01:22:35.510 --> 01:22:37.110
<v Speaker 1>That management is really

01:22:37.830 --> 01:22:39.270
<v Speaker 1>it's about how you think of these things

01:22:39.270 --> 01:22:40.630
<v Speaker 1>in inside the business.

01:22:41.510 --> 01:22:43.750
<v Speaker 0>Okay. So I don't think it matters then

01:22:43.750 --> 01:22:45.830
<v Speaker 0>unless this feature failed, that's rule in this

01:22:45.830 --> 01:22:46.630
<v Speaker 0>example because

01:22:48.045 --> 01:22:50.285
<v Speaker 0>we haven't explored the configuration

01:22:50.445 --> 01:22:53.405
<v Speaker 0>element yet. Right? So Yeah. Yeah. And I

01:22:53.405 --> 01:22:55.965
<v Speaker 1>think so so we could add in when

01:22:55.965 --> 01:22:57.725
<v Speaker 1>I sync the repository at

01:22:57.885 --> 01:23:00.045
<v Speaker 1>git sort of colon whatever.

01:23:00.205 --> 01:23:02.605
<v Speaker 0>Mhmm. Then git colon whatever is cloned to

01:23:02.605 --> 01:23:02.925
<v Speaker 1>disk.

01:23:04.010 --> 01:23:06.090
<v Speaker 1>But I don't think a reasonable reader would

01:23:06.170 --> 01:23:08.330
<v Speaker 1>expect anything different. Do you know what I

01:23:08.330 --> 01:23:11.210
<v Speaker 1>mean? Yeah. That's true. Yeah. Think anyone would

01:23:11.210 --> 01:23:12.650
<v Speaker 1>think you're gonna implement it, so I asked

01:23:12.650 --> 01:23:14.410
<v Speaker 1>to get sync some remote and that you

01:23:14.410 --> 01:23:16.330
<v Speaker 1>sync some different Git repo.

01:23:17.805 --> 01:23:19.485
<v Speaker 1>So I think that's enough that's maybe enough

01:23:19.485 --> 01:23:21.645
<v Speaker 1>detail, but it's definitely a judgment call for

01:23:21.645 --> 01:23:22.764
<v Speaker 1>for the author.

01:23:23.085 --> 01:23:24.764
<v Speaker 1>So that's so what's the next rule?

01:23:25.085 --> 01:23:27.965
<v Speaker 0>Well, we have a question if you wanna

01:23:27.965 --> 01:23:30.045
<v Speaker 0>tackle that Yeah. From James.

01:23:31.280 --> 01:23:33.680
<v Speaker 0>Is examples synonymous with scenario?

01:23:34.160 --> 01:23:34.960
<v Speaker 0>He's

01:23:34.960 --> 01:23:37.040
<v Speaker 0>always used scenario. Is there a case where

01:23:37.040 --> 01:23:39.520
<v Speaker 0>one would use scenario versus example?

01:23:40.320 --> 01:23:42.480
<v Speaker 1>Example is just more understandable to most people.

01:23:43.425 --> 01:23:46.625
<v Speaker 1>They're actually implemented as synonyms

01:23:46.705 --> 01:23:47.585
<v Speaker 1>in the

01:23:48.145 --> 01:23:49.585
<v Speaker 1>parser translation.

01:23:50.145 --> 01:23:52.065
<v Speaker 1>So implementing was quite easy. They just added

01:23:52.065 --> 01:23:54.065
<v Speaker 1>an ex in English, it can be scenario

01:23:54.065 --> 01:23:54.945
<v Speaker 1>or example.

01:23:55.345 --> 01:23:56.705
<v Speaker 1>It's exactly the same thing,

01:23:57.490 --> 01:24:00.610
<v Speaker 1>but just experience of talking talking to normal

01:24:00.610 --> 01:24:01.250
<v Speaker 1>people.

01:24:02.130 --> 01:24:04.130
<v Speaker 1>I I I was working with someone recently

01:24:04.130 --> 01:24:06.450
<v Speaker 1>who's got a sort of languages background, and

01:24:06.450 --> 01:24:08.370
<v Speaker 1>she was referring to them as scenario I.

01:24:09.010 --> 01:24:11.730
<v Speaker 0>Scenario I. Yeah. Which I think is good,

01:24:11.730 --> 01:24:12.370
<v Speaker 1>but

01:24:13.145 --> 01:24:15.305
<v Speaker 1>it sort of shows it's not really plain

01:24:15.305 --> 01:24:16.025
<v Speaker 1>language.

01:24:16.265 --> 01:24:17.465
<v Speaker 1>So they are the same thing.

01:24:18.425 --> 01:24:20.585
<v Speaker 0>Okay. Great. That's good to know. Give

01:24:21.145 --> 01:24:22.345
<v Speaker 1>me an example of how that would be

01:24:22.345 --> 01:24:24.185
<v Speaker 1>applied than it is to say,

01:24:24.825 --> 01:24:26.185
<v Speaker 1>what scenario you know,

01:24:27.210 --> 01:24:29.130
<v Speaker 1>think scenario is more for people into tabletop

01:24:29.130 --> 01:24:30.969
<v Speaker 1>war games like I used to be.

01:24:31.370 --> 01:24:33.770
<v Speaker 0>Yeah. I think example makes more more sense

01:24:33.770 --> 01:24:36.170
<v Speaker 0>to me. But rule feature rules and examples,

01:24:36.170 --> 01:24:38.730
<v Speaker 0>I think they apply better to me than

01:24:38.730 --> 01:24:41.315
<v Speaker 0>what the previous syntax did. So. Yeah. And

01:24:41.315 --> 01:24:43.395
<v Speaker 1>rule has been retrofitted in because it was

01:24:43.395 --> 01:24:45.715
<v Speaker 1>so useful to talk about, you know, talking

01:24:45.715 --> 01:24:47.235
<v Speaker 1>about these things in the context of a

01:24:47.235 --> 01:24:48.755
<v Speaker 1>business rule is really useful.

01:24:49.395 --> 01:24:49.955
<v Speaker 0>Okay.

01:24:50.355 --> 01:24:51.075
<v Speaker 0>Agreed.

01:24:52.195 --> 01:24:54.340
<v Speaker 1>I've heard of a company a big company

01:24:54.340 --> 01:24:56.180
<v Speaker 1>in The US who are using this as

01:24:56.180 --> 01:24:58.500
<v Speaker 1>a way of finding out what their business

01:24:58.500 --> 01:24:59.380
<v Speaker 1>rules are.

01:25:00.900 --> 01:25:03.060
<v Speaker 1>So they they kinda grip their feature files

01:25:03.060 --> 01:25:05.300
<v Speaker 1>and they discover which business rules are implemented

01:25:05.300 --> 01:25:06.340
<v Speaker 1>in their system.

01:25:07.620 --> 01:25:08.100
<v Speaker 0>Interesting.

01:25:10.315 --> 01:25:11.114
<v Speaker 0>Alright.

01:25:11.115 --> 01:25:12.155
<v Speaker 0>So

01:25:12.155 --> 01:25:14.555
<v Speaker 0>we have our first rule documented,

01:25:14.555 --> 01:25:16.395
<v Speaker 0>our first example

01:25:16.395 --> 01:25:18.475
<v Speaker 0>provided. I'm assuming

01:25:20.075 --> 01:25:21.034
<v Speaker 0>I mean,

01:25:21.275 --> 01:25:24.020
<v Speaker 0>again, developer head on here. Right? Would I

01:25:24.020 --> 01:25:26.740
<v Speaker 0>go through each of the example mappings, techies,

01:25:26.740 --> 01:25:28.500
<v Speaker 0>all the different rules, and put that into

01:25:28.500 --> 01:25:30.820
<v Speaker 0>a feature file? Or at this stage, would

01:25:30.820 --> 01:25:32.180
<v Speaker 0>you go and start writing a test for

01:25:32.180 --> 01:25:33.860
<v Speaker 0>your first rule and example? Or does that

01:25:33.860 --> 01:25:35.940
<v Speaker 0>does not matter? Am I just overthinking that?

01:25:37.705 --> 01:25:39.864
<v Speaker 1>At this stage, just after example mapping, I

01:25:39.864 --> 01:25:40.425
<v Speaker 1>would

01:25:41.065 --> 01:25:43.625
<v Speaker 1>write them all out, not worry too much

01:25:43.625 --> 01:25:46.105
<v Speaker 1>about it being gherkin syntax, and share them.

01:25:46.425 --> 01:25:48.185
<v Speaker 1>So if using a ticketing system, maybe you

01:25:48.185 --> 01:25:49.065
<v Speaker 1>put them in there,

01:25:49.465 --> 01:25:50.745
<v Speaker 1>maybe paste them into Slack,

01:25:51.540 --> 01:25:52.900
<v Speaker 1>and get a thumbs up.

01:25:53.300 --> 01:25:55.140
<v Speaker 1>I'd do that validation of the things we

01:25:55.140 --> 01:25:56.500
<v Speaker 1>covered in the workshop.

01:25:58.660 --> 01:26:01.140
<v Speaker 1>Then Okay. It's like then it's like, when

01:26:01.140 --> 01:26:03.140
<v Speaker 1>are you gonna work on this feature? It's

01:26:03.140 --> 01:26:04.820
<v Speaker 1>in your backlog and, you know Yeah. Yeah.

01:26:04.820 --> 01:26:06.845
<v Speaker 0>Yeah. Yeah. Today, I'm gonna work on initial

01:26:06.845 --> 01:26:08.445
<v Speaker 1>clone. I would then

01:26:09.245 --> 01:26:11.725
<v Speaker 1>put that feature into the code base

01:26:12.365 --> 01:26:13.805
<v Speaker 1>as part of my commit.

01:26:14.445 --> 01:26:16.125
<v Speaker 1>Now you can use tagging.

01:26:16.445 --> 01:26:18.445
<v Speaker 1>So I'd probably copy paste it all out

01:26:18.445 --> 01:26:18.765
<v Speaker 1>of

01:26:19.630 --> 01:26:21.630
<v Speaker 1>wherever I got the feedback and get it

01:26:21.630 --> 01:26:22.429
<v Speaker 1>all into

01:26:22.830 --> 01:26:24.830
<v Speaker 1>get here. But then you can tag things

01:26:24.830 --> 01:26:26.030
<v Speaker 1>as excluded.

01:26:28.510 --> 01:26:30.350
<v Speaker 1>So all cucumbers have a sort of tagging

01:26:30.350 --> 01:26:31.469
<v Speaker 1>system. So

01:26:31.870 --> 01:26:33.895
<v Speaker 1>I would probably put how many examples have

01:26:33.895 --> 01:26:35.815
<v Speaker 1>we got? One, two, three, four three rules

01:26:35.815 --> 01:26:37.655
<v Speaker 1>and five examples. I've probably dumped them all

01:26:37.655 --> 01:26:39.335
<v Speaker 1>onto disk is the first thing I did.

01:26:42.055 --> 01:26:42.935
<v Speaker 1>And then

01:26:44.055 --> 01:26:46.135
<v Speaker 1>maybe I'd put an at

01:26:47.270 --> 01:26:49.269
<v Speaker 1>I don't know. Not implemented yet

01:26:49.750 --> 01:26:51.349
<v Speaker 1>on the ones I haven't done yet.

01:26:52.390 --> 01:26:54.070
<v Speaker 1>Except everything except the first one I'm gonna

01:26:54.070 --> 01:26:56.070
<v Speaker 1>tackle. And then when I run Cucumber, I'd

01:26:56.070 --> 01:26:56.949
<v Speaker 1>run it with

01:26:57.590 --> 01:26:59.110
<v Speaker 1>yeah. Something like that. You can run it

01:26:59.110 --> 01:27:00.790
<v Speaker 1>with don't run the ones with that aren't

01:27:00.790 --> 01:27:01.510
<v Speaker 1>implemented yet.

01:27:03.155 --> 01:27:05.235
<v Speaker 1>Get one of the scenarios passing.

01:27:05.875 --> 01:27:07.795
<v Speaker 1>So the tag can apply on the example

01:27:07.795 --> 01:27:09.715
<v Speaker 1>or on the rule or on the feature,

01:27:11.235 --> 01:27:12.435
<v Speaker 1>if that makes sense.

01:27:12.995 --> 01:27:14.755
<v Speaker 0>It does make sense. Yeah. I mean, I

01:27:14.755 --> 01:27:17.155
<v Speaker 0>think when I was you know, I've already

01:27:17.235 --> 01:27:18.035
<v Speaker 0>written

01:27:19.130 --> 01:27:20.729
<v Speaker 0>some crude testing

01:27:20.730 --> 01:27:22.249
<v Speaker 0>for my previous

01:27:22.250 --> 01:27:22.889
<v Speaker 0>one.

01:27:23.610 --> 01:27:24.249
<v Speaker 0>So

01:27:25.210 --> 01:27:27.530
<v Speaker 0>I think for now, what I'll do is

01:27:27.530 --> 01:27:29.849
<v Speaker 0>I will type up all of the example

01:27:29.849 --> 01:27:32.889
<v Speaker 0>mapping stuff into feature fails, not implement it,

01:27:34.125 --> 01:27:36.044
<v Speaker 0>and just push that to the repository

01:27:36.364 --> 01:27:37.244
<v Speaker 0>and then

01:27:39.085 --> 01:27:40.524
<v Speaker 0>continue from there.

01:27:41.005 --> 01:27:41.885
<v Speaker 0>Sunny?

01:27:43.324 --> 01:27:44.525
<v Speaker 0>I tend to do it as part of

01:27:44.525 --> 01:27:45.085
<v Speaker 1>the same PR.

01:27:46.250 --> 01:27:47.770
<v Speaker 1>You can do it as a different commit

01:27:47.770 --> 01:27:48.650
<v Speaker 1>if you want to, but

01:27:50.330 --> 01:27:52.090
<v Speaker 0>What do you mean? The test or or

01:27:52.090 --> 01:27:54.250
<v Speaker 0>the the admin? Because you told me to

01:27:54.250 --> 01:27:55.770
<v Speaker 0>commit all the feature fails to test first.

01:27:55.770 --> 01:27:56.810
<v Speaker 0>So in my head, I'm like, okay. I

01:27:56.810 --> 01:27:58.810
<v Speaker 0>should just go through the example map, write

01:27:58.810 --> 01:28:00.570
<v Speaker 0>all the feature fails with the rules and

01:28:00.570 --> 01:28:01.370
<v Speaker 0>examples that we have,

01:28:02.224 --> 01:28:04.304
<v Speaker 0>Push that up. You know, I don't have

01:28:04.304 --> 01:28:05.744
<v Speaker 0>a team. That's just an open source thing

01:28:05.744 --> 01:28:07.025
<v Speaker 0>that I'm working on. But, you know, in

01:28:07.025 --> 01:28:09.505
<v Speaker 0>theory, by being there on the GitLab repository,

01:28:09.505 --> 01:28:12.385
<v Speaker 0>other people can see. And I and then

01:28:12.385 --> 01:28:13.985
<v Speaker 0>I would go back and start to add

01:28:13.985 --> 01:28:16.065
<v Speaker 0>the actual test cases and the functionality at

01:28:16.065 --> 01:28:16.864
<v Speaker 0>the same time.

01:28:17.264 --> 01:28:17.585
<v Speaker 0>Right?

01:28:18.410 --> 01:28:19.130
<v Speaker 0>No?

01:28:20.250 --> 01:28:22.410
<v Speaker 1>Yeah. You can do that. I think I'm

01:28:22.410 --> 01:28:23.929
<v Speaker 1>I'm more used to sort of

01:28:24.410 --> 01:28:26.969
<v Speaker 1>inside a company, you'd be doing that

01:28:27.450 --> 01:28:29.370
<v Speaker 1>sharing and getting feedback

01:28:29.610 --> 01:28:30.810
<v Speaker 1>outside of Git.

01:28:31.795 --> 01:28:33.715
<v Speaker 1>I guess GitOps, you'd be doing it inside

01:28:33.715 --> 01:28:34.514
<v Speaker 1>Git. Right?

01:28:35.475 --> 01:28:37.395
<v Speaker 0>Right. I guess, you know, if anyone wants

01:28:37.395 --> 01:28:38.835
<v Speaker 0>to write some Rust code and find us

01:28:38.835 --> 01:28:40.755
<v Speaker 0>to be an interest, then even just by

01:28:40.755 --> 01:28:42.515
<v Speaker 0>me getting these feature files and pushing them

01:28:42.515 --> 01:28:43.795
<v Speaker 0>to Git, I can say to them, I'm

01:28:43.795 --> 01:28:45.715
<v Speaker 0>watching, hey. If you wanna learn Rust, this

01:28:45.210 --> 01:28:46.650
<v Speaker 0>might be a good opportunity for you to

01:28:46.650 --> 01:28:48.890
<v Speaker 0>come and write code that would help me.

01:28:48.890 --> 01:28:51.050
<v Speaker 0>So and Yeah. That's definitely

01:28:52.090 --> 01:28:53.130
<v Speaker 1>true. And

01:28:53.850 --> 01:28:56.010
<v Speaker 1>there are tools that sort help that. So

01:28:57.210 --> 01:28:58.570
<v Speaker 1>oh god. I can never remember the names

01:28:58.570 --> 01:28:59.770
<v Speaker 1>of them. So one

01:29:01.575 --> 01:29:02.534
<v Speaker 1>called

01:29:04.055 --> 01:29:05.895
<v Speaker 1>I really should know. So the Q can

01:29:05.895 --> 01:29:08.295
<v Speaker 1>have a tool that will connect to your

01:29:08.535 --> 01:29:09.574
<v Speaker 1>Git repo

01:29:10.215 --> 01:29:12.614
<v Speaker 1>and expose the feature files in a nice

01:29:12.614 --> 01:29:13.655
<v Speaker 1>explorable,

01:29:14.215 --> 01:29:15.015
<v Speaker 1>commentable,

01:29:15.870 --> 01:29:16.749
<v Speaker 1>editable

01:29:17.310 --> 01:29:20.270
<v Speaker 1>interface that's so friendly for people who don't

01:29:20.270 --> 01:29:21.630
<v Speaker 1>aren't really into Git.

01:29:22.909 --> 01:29:25.070
<v Speaker 1>And there are other similar tools. So so

01:29:25.070 --> 01:29:26.909
<v Speaker 1>there's definitely a sort of level of collaboration

01:29:26.909 --> 01:29:27.469
<v Speaker 1>that happens.

01:29:29.025 --> 01:29:30.945
<v Speaker 0>I I think for this particular domain, people

01:29:30.945 --> 01:29:32.625
<v Speaker 0>that are not interested in GET probably don't

01:29:32.625 --> 01:29:33.824
<v Speaker 0>care about this project.

01:29:35.025 --> 01:29:36.465
<v Speaker 0>But you're right for sure.

01:29:36.785 --> 01:29:37.985
<v Speaker 0>We also got another

01:29:38.225 --> 01:29:39.505
<v Speaker 0>sorry. I need to again. Yeah. Go for

01:29:39.505 --> 01:29:39.585
<v Speaker 0>it.

01:29:40.320 --> 01:29:42.240
<v Speaker 1>It'd be interesting to just look at maybe

01:29:42.240 --> 01:29:44.560
<v Speaker 1>some way of publishing the not implemented ones

01:29:45.280 --> 01:29:46.800
<v Speaker 1>in a specific location.

01:29:49.440 --> 01:29:51.520
<v Speaker 1>Yeah. Open an issue open an issue for

01:29:51.520 --> 01:29:51.840
<v Speaker 1>each one.

01:29:53.094 --> 01:29:53.814
<v Speaker 0>Yeah.

01:29:53.895 --> 01:29:55.494
<v Speaker 0>I should do that actually, shouldn't I?

01:29:55.815 --> 01:29:57.735
<v Speaker 0>We also got another comment from James, which

01:29:57.735 --> 01:29:59.094
<v Speaker 0>I just cut out your face while we're

01:29:59.094 --> 01:29:59.814
<v Speaker 0>at it.

01:30:00.455 --> 01:30:02.215
<v Speaker 0>But his favorite thing about Gurken is just

01:30:02.215 --> 01:30:04.054
<v Speaker 0>the documentation side of it and not so

01:30:04.054 --> 01:30:06.375
<v Speaker 0>much the testing. And, you know, I don't

01:30:06.375 --> 01:30:07.574
<v Speaker 0>know if I'm right or wrong,

01:30:09.340 --> 01:30:10.219
<v Speaker 0>you're back.

01:30:11.260 --> 01:30:12.460
<v Speaker 0>I don't know if I'm or wrong, but,

01:30:12.460 --> 01:30:14.380
<v Speaker 0>I mean, BDD, they always say it's not

01:30:14.380 --> 01:30:17.260
<v Speaker 0>about testing. Right? It's it's about the human

01:30:17.260 --> 01:30:19.500
<v Speaker 0>aspect of it rather than the automation side

01:30:19.500 --> 01:30:19.820
<v Speaker 0>of it.

01:30:21.275 --> 01:30:23.435
<v Speaker 1>Yeah. And depending when you're having these sort

01:30:23.435 --> 01:30:25.114
<v Speaker 1>of example mapping conversations,

01:30:25.915 --> 01:30:28.074
<v Speaker 1>you might discover a business rule

01:30:28.475 --> 01:30:30.394
<v Speaker 1>and then not implement it in software.

01:30:31.034 --> 01:30:32.715
<v Speaker 1>It might be something

01:30:32.715 --> 01:30:34.554
<v Speaker 1>the people using the admin system do.

01:30:36.650 --> 01:30:37.610
<v Speaker 1>Right? So

01:30:38.570 --> 01:30:40.650
<v Speaker 1>the rule is you can't mark an invoice

01:30:40.650 --> 01:30:42.570
<v Speaker 1>as paid if it is

01:30:43.450 --> 01:30:45.610
<v Speaker 1>more less than a thousand pounds without

01:30:46.330 --> 01:30:49.450
<v Speaker 1>more than a thousand pounds without approval from

01:30:48.495 --> 01:30:50.975
<v Speaker 1>supervisor. We might might uncover that in example

01:30:50.975 --> 01:30:51.614
<v Speaker 1>mapping.

01:30:52.415 --> 01:30:53.855
<v Speaker 1>And then when we're looking at the practicality

01:30:53.855 --> 01:30:55.055
<v Speaker 1>of when we're gonna build this stuff, we'll

01:30:55.055 --> 01:30:56.495
<v Speaker 1>just say, okay. We'll write that on a

01:30:56.495 --> 01:30:57.935
<v Speaker 1>email to everyone.

01:30:58.895 --> 01:31:00.335
<v Speaker 1>Don't approve an invoice.

01:31:00.815 --> 01:31:02.495
<v Speaker 1>Yeah. But maybe you want to document that

01:31:02.495 --> 01:31:03.535
<v Speaker 1>as part of your

01:31:04.570 --> 01:31:06.650
<v Speaker 1>your your your documented

01:31:06.650 --> 01:31:09.690
<v Speaker 1>features and tag it with, like, at offline

01:31:09.690 --> 01:31:10.490
<v Speaker 1>policy.

01:31:12.410 --> 01:31:13.690
<v Speaker 1>Just good to know what the rules are

01:31:13.690 --> 01:31:15.530
<v Speaker 1>sometimes. And then it gives you an an

01:31:15.530 --> 01:31:16.890
<v Speaker 1>opportunity in the future.

01:31:17.370 --> 01:31:18.410
<v Speaker 1>Maybe you can automate it.

01:31:19.915 --> 01:31:22.394
<v Speaker 0>Yeah. I I I think that's definitely the

01:31:22.635 --> 01:31:24.395
<v Speaker 0>the same vibe I had when I started

01:31:24.635 --> 01:31:25.915
<v Speaker 0>when I when I wanted to write the

01:31:25.915 --> 01:31:27.675
<v Speaker 0>feature files for this. We really just expose

01:31:27.675 --> 01:31:29.675
<v Speaker 0>the rules of what happens with the library

01:31:29.675 --> 01:31:31.195
<v Speaker 0>when you use it. I mean, the test,

01:31:31.195 --> 01:31:33.114
<v Speaker 0>yeah, that that would be useful. But really,

01:31:33.114 --> 01:31:35.330
<v Speaker 0>it was just about documenting, hey, if you

01:31:35.330 --> 01:31:37.250
<v Speaker 0>use this and the directory exists,

01:31:37.410 --> 01:31:38.610
<v Speaker 0>the best way to find that out, what

01:31:38.610 --> 01:31:40.290
<v Speaker 0>happens, or what the conditions are for it

01:31:40.290 --> 01:31:42.370
<v Speaker 0>to continue operating successfully is just to read

01:31:42.370 --> 01:31:43.409
<v Speaker 0>the feature files.

01:31:43.730 --> 01:31:45.730
<v Speaker 0>You know, this for me is very much

01:31:45.970 --> 01:31:49.490
<v Speaker 0>the documentation on how this slightly esoteric

01:31:49.835 --> 01:31:51.355
<v Speaker 0>library is gonna work

01:31:51.755 --> 01:31:53.675
<v Speaker 0>more than the tests. Otherwise, I do want

01:31:53.675 --> 01:31:54.475
<v Speaker 0>tests, but so

01:31:55.915 --> 01:31:58.075
<v Speaker 1>Yeah. So let's talk about tests. Right? So

01:31:58.075 --> 01:31:59.435
<v Speaker 1>just looking at this feature,

01:32:00.875 --> 01:32:02.635
<v Speaker 1>you could do that in three commits.

01:32:04.650 --> 01:32:07.449
<v Speaker 1>Right? You could you could implement cloning as

01:32:07.530 --> 01:32:09.449
<v Speaker 1>assuming the directory is never gonna be there.

01:32:09.610 --> 01:32:10.250
<v Speaker 1>Yep.

01:32:11.449 --> 01:32:13.370
<v Speaker 1>Write a test where the directory is not

01:32:13.370 --> 01:32:13.929
<v Speaker 1>there

01:32:15.449 --> 01:32:17.370
<v Speaker 1>and sort of implement that first rule

01:32:18.244 --> 01:32:20.244
<v Speaker 1>and, you know, call it a day. Go

01:32:20.244 --> 01:32:21.684
<v Speaker 1>home for the day. If you've got some

01:32:21.684 --> 01:32:24.005
<v Speaker 1>time, you can make the next one choose

01:32:24.005 --> 01:32:25.764
<v Speaker 1>one of the others. If the directory exists

01:32:25.764 --> 01:32:27.605
<v Speaker 1>but isn't a git checkout, you can add

01:32:27.605 --> 01:32:28.324
<v Speaker 1>a guard.

01:32:30.724 --> 01:32:32.405
<v Speaker 1>And then implement the third one, which involves

01:32:32.405 --> 01:32:32.965
<v Speaker 1>more git.

01:32:33.570 --> 01:32:35.890
<v Speaker 1>But as you're working through that, each each

01:32:35.890 --> 01:32:36.929
<v Speaker 1>business rule

01:32:37.890 --> 01:32:40.530
<v Speaker 1>yeah. We mentioned earlier each software project is

01:32:40.530 --> 01:32:42.449
<v Speaker 1>a stack of different layers.

01:32:43.490 --> 01:32:45.730
<v Speaker 1>And where you choose to text

01:32:47.405 --> 01:32:48.525
<v Speaker 1>really affects

01:32:49.085 --> 01:32:51.165
<v Speaker 1>how the architecture's gonna look because

01:32:51.485 --> 01:32:54.125
<v Speaker 1>the level you choose to validate something at,

01:32:54.365 --> 01:32:56.125
<v Speaker 1>you're sort of constraining

01:32:56.845 --> 01:32:59.725
<v Speaker 1>that the rule has to be implemented below

01:32:59.725 --> 01:33:01.005
<v Speaker 1>that in the stack if you wanna look

01:33:01.005 --> 01:33:01.645
<v Speaker 1>at it that way.

01:33:04.880 --> 01:33:06.880
<v Speaker 1>So you've got your sort of core. You've

01:33:06.880 --> 01:33:09.040
<v Speaker 1>got your user interface y stuff, which in

01:33:09.040 --> 01:33:11.440
<v Speaker 1>your case is a binary or it's library

01:33:11.440 --> 01:33:12.160
<v Speaker 1>calls.

01:33:12.480 --> 01:33:14.800
<v Speaker 1>Mhmm. And underneath, you've got infrastructure. You've got

01:33:14.800 --> 01:33:15.440
<v Speaker 1>Git,

01:33:15.760 --> 01:33:18.205
<v Speaker 1>which I guess you might have some interfaces

01:33:18.205 --> 01:33:18.925
<v Speaker 1>around,

01:33:20.605 --> 01:33:24.205
<v Speaker 1>you know, some abstractions around. Yeah. By

01:33:24.205 --> 01:33:25.405
<v Speaker 1>narrowing down

01:33:25.645 --> 01:33:27.485
<v Speaker 1>what part of the system you're

01:33:27.965 --> 01:33:30.045
<v Speaker 1>testing, you're actually testing the rule.

01:33:31.099 --> 01:33:33.579
<v Speaker 1>You you're constraining where the rule is.

01:33:34.699 --> 01:33:35.340
<v Speaker 1>So if I

01:33:37.420 --> 01:33:39.260
<v Speaker 1>let's take this first let's let's take the

01:33:39.260 --> 01:33:40.780
<v Speaker 1>if the directory exists thing.

01:33:42.955 --> 01:33:44.875
<v Speaker 1>If you choose to test that through the

01:33:44.875 --> 01:33:45.835
<v Speaker 1>CLI

01:33:47.594 --> 01:33:48.875
<v Speaker 1>and the way you would choose these different

01:33:48.875 --> 01:33:50.954
<v Speaker 1>testing strategies is you'd tag it.

01:33:51.915 --> 01:33:53.755
<v Speaker 1>So you'd have one set of Cucumber tests.

01:33:54.410 --> 01:33:56.650
<v Speaker 1>So one one set of Cucumber steps, like,

01:33:56.650 --> 01:34:00.010
<v Speaker 1>you've got that implement that are running the

01:34:00.010 --> 01:34:00.890
<v Speaker 1>CLI,

01:34:01.450 --> 01:34:02.970
<v Speaker 1>and they but then they're filtering on the

01:34:02.970 --> 01:34:04.890
<v Speaker 1>ones that are tagged at CLI or something

01:34:04.890 --> 01:34:07.690
<v Speaker 1>like that. Yep. And then you have another

01:34:07.690 --> 01:34:09.925
<v Speaker 1>Cucumber world, don't know what it's called in

01:34:09.925 --> 01:34:11.045
<v Speaker 1>the Rust version.

01:34:12.645 --> 01:34:13.365
<v Speaker 1>That's

01:34:13.925 --> 01:34:16.165
<v Speaker 1>different implementations. It's it's testing it by calling

01:34:16.165 --> 01:34:16.965
<v Speaker 1>the library

01:34:17.685 --> 01:34:19.045
<v Speaker 1>with a different tag.

01:34:19.605 --> 01:34:21.285
<v Speaker 1>And you run different sort of filter sets.

01:34:21.285 --> 01:34:21.525
<v Speaker 1>Right?

01:34:25.440 --> 01:34:26.800
<v Speaker 1>If you test it through the CLR

01:34:28.960 --> 01:34:30.640
<v Speaker 0>Just wanna check if I actually set it

01:34:30.640 --> 01:34:31.440
<v Speaker 0>up properly.

01:34:32.640 --> 01:34:34.160
<v Speaker 0>I'll come back to it. I'm sorry. I'm

01:34:34.160 --> 01:34:34.639
<v Speaker 0>go.

01:34:36.160 --> 01:34:38.239
<v Speaker 1>So this this rule, if the directory exists

01:34:38.239 --> 01:34:39.760
<v Speaker 1>and isn't a git checkout error,

01:34:40.945 --> 01:34:42.945
<v Speaker 1>where do we want that to be implemented?

01:34:42.945 --> 01:34:44.705
<v Speaker 1>If we if we test through the CLI,

01:34:44.705 --> 01:34:46.705
<v Speaker 1>it can be implemented in the CLI

01:34:47.585 --> 01:34:48.385
<v Speaker 1>command,

01:34:48.385 --> 01:34:50.225
<v Speaker 1>whatever it is. Yep. Or it can be

01:34:50.225 --> 01:34:51.505
<v Speaker 1>implemented in the library.

01:34:51.985 --> 01:34:53.585
<v Speaker 1>Or it can be implemented in git.

01:34:55.020 --> 01:34:56.940
<v Speaker 1>So it could be implemented by Git throwing

01:34:56.940 --> 01:34:57.739
<v Speaker 1>an error,

01:34:58.060 --> 01:34:59.900
<v Speaker 1>and we're just catching it later. So that

01:34:59.980 --> 01:35:01.820
<v Speaker 1>Yep. We don't know where the check is.

01:35:02.620 --> 01:35:03.980
<v Speaker 1>That might be fine

01:35:05.020 --> 01:35:06.955
<v Speaker 1>depending on the project. Like, as long as

01:35:06.955 --> 01:35:08.475
<v Speaker 1>it's in there somewhere, it's fine.

01:35:09.595 --> 01:35:11.115
<v Speaker 1>If you want to ensure

01:35:11.595 --> 01:35:12.955
<v Speaker 1>that it's in the library, then you should

01:35:12.955 --> 01:35:14.795
<v Speaker 1>automate that test at the library level.

01:35:16.715 --> 01:35:19.115
<v Speaker 1>Same scenario, but you automate it at that

01:35:19.115 --> 01:35:20.635
<v Speaker 1>library level and then you know it's not

01:35:20.635 --> 01:35:22.075
<v Speaker 1>implemented in the in the CLI.

01:35:23.010 --> 01:35:24.689
<v Speaker 1>If it's a web app, you know,

01:35:25.090 --> 01:35:26.690
<v Speaker 1>you check it at some by calling some

01:35:26.690 --> 01:35:28.369
<v Speaker 1>service, and then you know it's not implemented

01:35:28.369 --> 01:35:30.130
<v Speaker 1>in the controller or the template or the

01:35:30.130 --> 01:35:30.849
<v Speaker 1>JavaScript.

01:35:32.050 --> 01:35:33.489
<v Speaker 1>Maybe you want it in the JavaScript, so

01:35:33.489 --> 01:35:35.409
<v Speaker 1>you implement it in the JavaScript Cucumber

01:35:35.570 --> 01:35:37.815
<v Speaker 1>that doesn't have a real back end. Yeah.

01:35:37.815 --> 01:35:39.895
<v Speaker 1>But you're choosing for your test strategy where

01:35:39.895 --> 01:35:41.494
<v Speaker 1>you want the rule to be implemented

01:35:42.455 --> 01:35:44.135
<v Speaker 1>in future as well.

01:35:45.255 --> 01:35:46.295
<v Speaker 1>Now at the other end, you've got the

01:35:46.295 --> 01:35:47.094
<v Speaker 1>infrastructure.

01:35:47.815 --> 01:35:49.735
<v Speaker 1>So how do you stop things being implemented

01:35:49.735 --> 01:35:52.200
<v Speaker 1>with by a database trigger or stop things

01:35:52.200 --> 01:35:55.480
<v Speaker 1>being implemented by just Git? Already has that

01:35:55.480 --> 01:35:56.199
<v Speaker 1>behavior.

01:35:57.000 --> 01:35:59.239
<v Speaker 1>You have some abstraction and you would replace

01:35:59.240 --> 01:36:01.639
<v Speaker 1>Git with a fake in your tests. Right?

01:36:02.600 --> 01:36:04.200
<v Speaker 1>If if you want to constrain it to

01:36:04.200 --> 01:36:05.640
<v Speaker 1>just being implemented in that middle bit,

01:36:06.495 --> 01:36:08.815
<v Speaker 1>which is more of a decoupled architecture.

01:36:11.135 --> 01:36:13.775
<v Speaker 1>But but the testing strategy helps you design

01:36:13.775 --> 01:36:14.895
<v Speaker 1>the architecture.

01:36:17.455 --> 01:36:18.975
<v Speaker 1>I'm writing an abstract for a talk like

01:36:18.975 --> 01:36:20.450
<v Speaker 1>this now. It's good to

01:36:21.650 --> 01:36:23.250
<v Speaker 1>if you see what I mean. On

01:36:23.490 --> 01:36:25.570
<v Speaker 1>some projects, you might be super happy. You

01:36:25.570 --> 01:36:27.410
<v Speaker 1>test the whole stack, and I test it

01:36:27.410 --> 01:36:28.850
<v Speaker 1>by calling the binary. And as long as

01:36:28.850 --> 01:36:29.970
<v Speaker 1>it's in there, it's fine.

01:36:30.290 --> 01:36:32.370
<v Speaker 1>Your thing, because you want it to be

01:36:32.370 --> 01:36:33.010
<v Speaker 1>a library,

01:36:33.725 --> 01:36:35.965
<v Speaker 1>you should primarily be testing at the library

01:36:35.965 --> 01:36:36.605
<v Speaker 1>level

01:36:37.725 --> 01:36:40.525
<v Speaker 1>and then testing a subset at the CLI

01:36:40.525 --> 01:36:41.085
<v Speaker 1>level

01:36:41.965 --> 01:36:43.724
<v Speaker 1>just like a smoke test.

01:36:44.285 --> 01:36:46.205
<v Speaker 0>Yeah. That makes that definitely makes sense to

01:36:46.205 --> 01:36:47.085
<v Speaker 0>me for sure.

01:36:47.725 --> 01:36:48.765
<v Speaker 0>So why don't

01:36:49.645 --> 01:36:50.980
<v Speaker 1>And do you want it to be independent

01:36:50.980 --> 01:36:51.860
<v Speaker 1>of git?

01:36:52.580 --> 01:36:53.219
<v Speaker 1>No.

01:36:54.180 --> 01:36:55.940
<v Speaker 1>So you probably need git in there.

01:36:56.340 --> 01:36:58.260
<v Speaker 0>Unless there's speed problem.

01:36:59.060 --> 01:36:59.460
<v Speaker 0>Just

01:37:01.460 --> 01:37:03.844
<v Speaker 0>It's tied pretty heavily to lib git two.

01:37:04.804 --> 01:37:07.125
<v Speaker 0>I mean, obviously, we could say there's an

01:37:07.125 --> 01:37:08.645
<v Speaker 0>abstraction where it should be able to support

01:37:08.645 --> 01:37:11.125
<v Speaker 0>other version control systems. But I think with

01:37:11.125 --> 01:37:13.445
<v Speaker 0>the equity of get, it's just not something

01:37:13.445 --> 01:37:14.804
<v Speaker 0>at least in any

01:37:15.125 --> 01:37:18.460
<v Speaker 0>short and medium term goals of the project

01:37:18.460 --> 01:37:19.179
<v Speaker 0>for sure.

01:37:19.820 --> 01:37:22.219
<v Speaker 1>Okay. So in that case, you wouldn't bother

01:37:22.460 --> 01:37:25.179
<v Speaker 1>testing the fake git if git's fast enough.

01:37:25.900 --> 01:37:27.260
<v Speaker 1>If you find your tests are going really

01:37:27.260 --> 01:37:28.860
<v Speaker 1>slow because it's doing real git, you might

01:37:28.860 --> 01:37:31.695
<v Speaker 1>do it. But that kind of, like, architecture

01:37:31.695 --> 01:37:32.894
<v Speaker 1>test strategy,

01:37:32.895 --> 01:37:35.215
<v Speaker 1>you wouldn't deliberately replace Git.

01:37:35.455 --> 01:37:37.054
<v Speaker 1>And it means that your business rule about

01:37:37.054 --> 01:37:39.775
<v Speaker 1>the directory exists might be implemented by Git

01:37:39.935 --> 01:37:40.894
<v Speaker 1>by LibGit.

01:37:41.215 --> 01:37:41.854
<v Speaker 0>Yep.

01:37:42.175 --> 01:37:43.935
<v Speaker 1>I mean, the CLI Git does throw an

01:37:43.935 --> 01:37:46.340
<v Speaker 1>error if the thing already exists. So maybe

01:37:46.340 --> 01:37:48.579
<v Speaker 1>you can just catch that exception from LibGit

01:37:48.579 --> 01:37:50.099
<v Speaker 1>or catch that error.

01:37:50.340 --> 01:37:52.020
<v Speaker 1>And you don't care where where in that

01:37:52.020 --> 01:37:53.139
<v Speaker 1>stack it's implemented.

01:37:55.460 --> 01:37:57.619
<v Speaker 1>So so each of these things, just think

01:37:57.619 --> 01:37:59.540
<v Speaker 1>about what level to

01:38:00.165 --> 01:38:03.125
<v Speaker 1>to test that to to make sure the

01:38:03.525 --> 01:38:05.205
<v Speaker 1>rule's there. That's one of the key things

01:38:05.205 --> 01:38:07.844
<v Speaker 1>about rules is they're actually implemented somewhere.

01:38:08.245 --> 01:38:09.605
<v Speaker 1>Examples aren't implemented.

01:38:10.565 --> 01:38:12.405
<v Speaker 1>But rules have a kind of specific location

01:38:12.405 --> 01:38:13.925
<v Speaker 1>if they're if they're fine grained enough.

01:38:14.700 --> 01:38:16.300
<v Speaker 1>They're in a library or they're in a

01:38:16.300 --> 01:38:18.860
<v Speaker 1>service or they're in a UX UI component.

01:38:19.660 --> 01:38:20.300
<v Speaker 0>Okay.

01:38:21.900 --> 01:38:22.540
<v Speaker 0>So

01:38:23.580 --> 01:38:25.260
<v Speaker 0>let's let me see if I can recap

01:38:25.260 --> 01:38:25.900
<v Speaker 0>this then.

01:38:28.605 --> 01:38:31.085
<v Speaker 0>So we were using our example map and

01:38:31.085 --> 01:38:32.445
<v Speaker 0>technique, and I think let me see if

01:38:32.445 --> 01:38:35.005
<v Speaker 0>I can just stop splitting the screen actually.

01:38:35.005 --> 01:38:36.045
<v Speaker 0>Let

01:38:36.765 --> 01:38:37.885
<v Speaker 0>me go back to here.

01:38:38.205 --> 01:38:40.765
<v Speaker 0>And we managed to, I think, quite well,

01:38:41.940 --> 01:38:44.340
<v Speaker 0>go through a a large chunk of this

01:38:44.340 --> 01:38:46.740
<v Speaker 0>library. Right? You know, we've got various features

01:38:46.740 --> 01:38:49.620
<v Speaker 0>here. We're cloning our repository, called up this

01:38:49.620 --> 01:38:51.220
<v Speaker 0>trap, whatever I want, or maybe kept that

01:38:51.220 --> 01:38:52.020
<v Speaker 0>out slightly.

01:38:52.580 --> 01:38:54.980
<v Speaker 0>Snappier name as a phase.

01:38:55.685 --> 01:38:57.845
<v Speaker 0>We've got the rules here, and we've got

01:38:57.845 --> 01:38:58.645
<v Speaker 0>examples.

01:38:59.125 --> 01:39:01.205
<v Speaker 0>And just as our back and forward, as

01:39:01.205 --> 01:39:03.364
<v Speaker 0>we were going through that, I think we

01:39:03.845 --> 01:39:05.925
<v Speaker 0>began to share knowledge and understanding of what

01:39:05.925 --> 01:39:07.845
<v Speaker 0>this this library was supposed to do, which

01:39:07.845 --> 01:39:09.045
<v Speaker 0>I think is super invaluable.

01:39:09.880 --> 01:39:11.400
<v Speaker 0>As far as the other features go, we

01:39:11.400 --> 01:39:13.720
<v Speaker 0>talked about the reconciliation and what the semantics

01:39:13.720 --> 01:39:14.760
<v Speaker 0>are there.

01:39:15.560 --> 01:39:17.560
<v Speaker 0>I think what's good is documenting

01:39:18.280 --> 01:39:20.600
<v Speaker 0>the knowledge and understanding we have of how

01:39:20.600 --> 01:39:22.760
<v Speaker 0>that works now is really important, but also

01:39:22.760 --> 01:39:25.025
<v Speaker 0>it provides a framework for extension. Like, no

01:39:25.025 --> 01:39:26.624
<v Speaker 0>other developers can come in and go,

01:39:27.265 --> 01:39:29.505
<v Speaker 0>maybe we don't want to error when this

01:39:29.665 --> 01:39:31.505
<v Speaker 0>fast forward is impossible, and then they can

01:39:31.505 --> 01:39:33.425
<v Speaker 0>drop in new best of functionality. They have

01:39:33.425 --> 01:39:34.864
<v Speaker 0>new stackies, which helps them build a new

01:39:34.864 --> 01:39:37.310
<v Speaker 0>feature fails, new GERK, and and then expand

01:39:37.310 --> 01:39:39.710
<v Speaker 0>that library. I I love this as a

01:39:39.710 --> 01:39:42.510
<v Speaker 0>framework not for just document and testing, but

01:39:42.510 --> 01:39:43.070
<v Speaker 0>just

01:39:43.310 --> 01:39:45.790
<v Speaker 0>allowing people to expand the functionality as well.

01:39:46.110 --> 01:39:47.790
<v Speaker 0>And then we talk about something that is

01:39:47.790 --> 01:39:49.785
<v Speaker 0>really, really undefined at the moment, which is,

01:39:49.785 --> 01:39:51.785
<v Speaker 0>well, how do we expose us as a

01:39:51.785 --> 01:39:53.625
<v Speaker 0>pops up system for people to then build

01:39:53.625 --> 01:39:55.465
<v Speaker 0>their own tooling on top of this with

01:39:55.465 --> 01:39:56.985
<v Speaker 0>whatever integrations you want.

01:39:57.465 --> 01:39:59.304
<v Speaker 0>I think this document is really cool for

01:39:59.304 --> 01:40:00.025
<v Speaker 0>doing that.

01:40:00.425 --> 01:40:03.145
<v Speaker 0>And then we started to map that directly

01:40:03.145 --> 01:40:06.840
<v Speaker 0>almost from feature rules and examples right into

01:40:07.480 --> 01:40:08.440
<v Speaker 0>a get good.

01:40:09.320 --> 01:40:11.160
<v Speaker 0>But I will get some test cases put

01:40:11.160 --> 01:40:13.080
<v Speaker 0>up and and push us to the repository.

01:40:13.400 --> 01:40:15.480
<v Speaker 0>But then we have a full thing from

01:40:15.720 --> 01:40:17.240
<v Speaker 0>the stack is to

01:40:17.795 --> 01:40:19.235
<v Speaker 0>human documentation

01:40:19.235 --> 01:40:20.915
<v Speaker 0>to computer documentation,

01:40:20.915 --> 01:40:21.954
<v Speaker 0>which is test.

01:40:22.755 --> 01:40:24.914
<v Speaker 0>I really like that. Now

01:40:25.635 --> 01:40:27.235
<v Speaker 0>is this something that you think we can

01:40:27.235 --> 01:40:29.155
<v Speaker 0>come back and carry on in the future

01:40:29.155 --> 01:40:30.920
<v Speaker 0>when I've done a little bit of homework.

01:40:30.920 --> 01:40:32.440
<v Speaker 0>I've hooked up a few of these components.

01:40:32.440 --> 01:40:33.959
<v Speaker 0>Is that something you would like to do?

01:40:34.520 --> 01:40:35.880
<v Speaker 1>Yeah. Sure. I mean, I'm not gonna be

01:40:35.880 --> 01:40:37.959
<v Speaker 1>able to help you with the rest particularly.

01:40:39.320 --> 01:40:40.679
<v Speaker 0>Well, maybe I could send you some rest

01:40:40.679 --> 01:40:43.159
<v Speaker 0>at the same time as well. So Yeah.

01:40:43.560 --> 01:40:45.000
<v Speaker 1>But generally, I wouldn't

01:40:47.594 --> 01:40:49.994
<v Speaker 1>once you've written out the scenarios

01:40:50.395 --> 01:40:52.235
<v Speaker 1>before you put them in version control, we

01:40:52.235 --> 01:40:54.235
<v Speaker 1>tend not to keep the example maps around

01:40:54.235 --> 01:40:56.715
<v Speaker 1>because they tend to lose meaning quite quickly

01:40:57.710 --> 01:40:59.790
<v Speaker 1>because of the lack of details. Right now,

01:40:59.790 --> 01:41:00.990
<v Speaker 1>they mean a lot to you and me

01:41:00.990 --> 01:41:02.350
<v Speaker 1>and maybe the people watching.

01:41:03.230 --> 01:41:04.830
<v Speaker 1>But if we come back to them later,

01:41:04.830 --> 01:41:06.750
<v Speaker 1>we might not remember what any of it

01:41:06.750 --> 01:41:07.390
<v Speaker 1>means.

01:41:08.110 --> 01:41:11.390
<v Speaker 0>So that's visual representation's not too important then?

01:41:11.595 --> 01:41:13.355
<v Speaker 0>Like, I mean, what I'm thinking for is,

01:41:13.355 --> 01:41:15.355
<v Speaker 0>like, the more feature fails we put together

01:41:15.355 --> 01:41:16.795
<v Speaker 0>is good if you want to understand an

01:41:16.795 --> 01:41:17.915
<v Speaker 0>individual feature.

01:41:18.955 --> 01:41:20.075
<v Speaker 0>Is there not

01:41:20.635 --> 01:41:22.395
<v Speaker 0>a way to understand the system as a

01:41:22.395 --> 01:41:23.995
<v Speaker 0>whole? Just, like, say you were onboard a

01:41:23.995 --> 01:41:26.955
<v Speaker 0>new developer, like, just to get them that

01:41:26.050 --> 01:41:28.050
<v Speaker 0>really 10,000 feet overview.

01:41:30.770 --> 01:41:33.090
<v Speaker 1>Maybe. Maybe that'd be useful to generate

01:41:33.170 --> 01:41:35.010
<v Speaker 1>this if people are really familiar with this

01:41:35.010 --> 01:41:36.930
<v Speaker 1>kind of visualization, it'd be interesting to generate

01:41:36.930 --> 01:41:38.450
<v Speaker 1>it from feature files, and I wonder if

01:41:38.450 --> 01:41:40.690
<v Speaker 1>anyone's doing that. Yeah. But there's less

01:41:41.284 --> 01:41:43.364
<v Speaker 1>there's less detail in this than there will

01:41:43.364 --> 01:41:44.485
<v Speaker 1>be in the Gherkin

01:41:45.125 --> 01:41:45.925
<v Speaker 0>because

01:41:46.645 --> 01:41:47.284
<v Speaker 0>Yeah.

01:41:47.685 --> 01:41:49.844
<v Speaker 1>Because it's up to it's just like, remember

01:41:49.844 --> 01:41:51.445
<v Speaker 1>to write an example about this.

01:41:51.925 --> 01:41:52.005
<v Speaker 1>So,

01:41:53.530 --> 01:41:54.490
<v Speaker 1>normally

01:41:54.730 --> 01:41:56.170
<v Speaker 1>I mean, if it's stickies on a wall,

01:41:56.170 --> 01:41:57.610
<v Speaker 1>you know how that goes. That that doesn't

01:41:57.610 --> 01:41:59.210
<v Speaker 1>stay too long. They fall off.

01:41:59.690 --> 01:42:00.730
<v Speaker 1>Oh, yeah. Definitely.

01:42:01.210 --> 01:42:02.730
<v Speaker 0>I can always take a photo of it

01:42:02.730 --> 01:42:04.330
<v Speaker 0>and upload it to Confluence. Right? That's what

01:42:04.330 --> 01:42:06.170
<v Speaker 0>all professional teams do. Yeah.

01:42:06.730 --> 01:42:07.450
<v Speaker 0>That'll work.

01:42:08.405 --> 01:42:10.165
<v Speaker 0>Well, I think what I'll do is and

01:42:10.165 --> 01:42:12.485
<v Speaker 0>they showed us, I will include the the

01:42:12.485 --> 01:42:14.565
<v Speaker 0>example mapping for anyone who's watching,

01:42:15.205 --> 01:42:17.125
<v Speaker 0>you know, in the in the future and

01:42:17.125 --> 01:42:18.565
<v Speaker 0>and just wants to see what

01:42:18.965 --> 01:42:20.325
<v Speaker 0>what I look like. Although, I guess, the

01:42:20.325 --> 01:42:22.330
<v Speaker 0>videos are too, but still, you know, I'll

01:42:22.330 --> 01:42:23.930
<v Speaker 0>leave it up online, but I'll try not

01:42:23.930 --> 01:42:24.970
<v Speaker 0>to refer to it too much on my

01:42:24.970 --> 01:42:26.490
<v Speaker 0>own and use the feature files. And I'll

01:42:26.490 --> 01:42:28.170
<v Speaker 0>definitely adjust the Googling to see if anyone

01:42:28.170 --> 01:42:28.970
<v Speaker 0>has

01:42:29.450 --> 01:42:32.490
<v Speaker 0>wrote any tooling to generate maps from feature

01:42:32.490 --> 01:42:33.770
<v Speaker 0>files. I think that would be pretty sweet

01:42:33.770 --> 01:42:34.090
<v Speaker 0>actually.

01:42:34.935 --> 01:42:35.574
<v Speaker 0>Yeah.

01:42:35.974 --> 01:42:37.494
<v Speaker 0>Alright. Yeah. I know there is there

01:42:38.054 --> 01:42:40.294
<v Speaker 1>are some online example mapping tools.

01:42:40.614 --> 01:42:42.295
<v Speaker 1>Wait. We're not using a specific one because

01:42:42.295 --> 01:42:44.135
<v Speaker 1>we wanted to just make it simple, but

01:42:44.935 --> 01:42:46.614
<v Speaker 1>yeah. Maybe some of them work in reverse.

01:42:46.614 --> 01:42:48.135
<v Speaker 1>And, yeah, let's follow-up. Be good.

01:42:49.240 --> 01:42:50.360
<v Speaker 0>Alright. Well,

01:42:50.680 --> 01:42:52.920
<v Speaker 0>thank you again for donating even more of

01:42:52.920 --> 01:42:55.480
<v Speaker 0>your time and teaching me all of your

01:42:55.480 --> 01:42:58.360
<v Speaker 0>your magic. It's been very useful. What I'll

01:42:58.360 --> 01:43:00.120
<v Speaker 0>do is I will try and

01:43:01.080 --> 01:43:02.440
<v Speaker 0>well, I definitely got all the feature fails

01:43:02.440 --> 01:43:04.985
<v Speaker 0>written for what we've example mapped. I'll start

01:43:04.985 --> 01:43:07.145
<v Speaker 0>to hook that up to Cucumber Rust, which

01:43:07.145 --> 01:43:08.105
<v Speaker 0>is a library.

01:43:08.425 --> 01:43:10.505
<v Speaker 0>Hopefully, get the features working. And then what

01:43:10.505 --> 01:43:12.425
<v Speaker 0>we'll do is I'll chase up with you

01:43:12.425 --> 01:43:14.345
<v Speaker 0>in maybe a week, two weeks time. We'll

01:43:14.345 --> 01:43:15.945
<v Speaker 0>try and get something else scheduled. I don't

01:43:15.945 --> 01:43:17.305
<v Speaker 0>know if it'll be December or if it'll

01:43:17.305 --> 01:43:18.585
<v Speaker 0>be be heading next year. We can work

01:43:18.585 --> 01:43:20.770
<v Speaker 0>that out later. But we'll try and follow-up

01:43:20.770 --> 01:43:22.290
<v Speaker 0>and show people how far along we're getting

01:43:22.290 --> 01:43:24.450
<v Speaker 0>with this and hopefully provide more

01:43:24.690 --> 01:43:26.450
<v Speaker 0>or at least get more knowledge out of

01:43:26.450 --> 01:43:27.730
<v Speaker 0>your brain and share it with people because

01:43:27.730 --> 01:43:29.570
<v Speaker 0>I think it's it's fantastic. Great.

01:43:30.930 --> 01:43:32.530
<v Speaker 1>You know, I do do this for a

01:43:32.530 --> 01:43:33.730
<v Speaker 1>living, so if anyone wants to.

01:43:35.615 --> 01:43:37.455
<v Speaker 0>Yeah. Yeah. If your team is looking for

01:43:37.455 --> 01:43:39.215
<v Speaker 0>help in this domain, then maybe best just

01:43:39.215 --> 01:43:41.215
<v Speaker 0>to, you know, grab you on Twitter, grab

01:43:41.215 --> 01:43:43.615
<v Speaker 0>you on any of your socials, whatever.

01:43:44.015 --> 01:43:46.175
<v Speaker 0>James says, thank you. No. Thanks for sticking

01:43:46.175 --> 01:43:47.469
<v Speaker 0>with us. We hope that was that was

01:43:47.469 --> 01:43:49.550
<v Speaker 0>useful. So, Karen, I'll leave it back to

01:43:49.550 --> 01:43:50.750
<v Speaker 0>your day. Thank you again, and I'll speak

01:43:50.750 --> 01:43:51.389
<v Speaker 0>to you soon. Bye.
