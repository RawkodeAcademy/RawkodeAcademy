WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 6c3d4833-cc2b-492b-82db-d9d6fff862bc
Created: 2025-04-29T22:26:22.725Z
Duration: 4405.02
Channels: 1

00:01:49.335 --> 00:01:50.215
<v Speaker 0>Hello,

00:01:50.295 --> 00:01:51.335
<v Speaker 0>and welcome.

00:01:51.575 --> 00:01:53.255
<v Speaker 0>Hello, Taylor. How are you?

00:01:53.655 --> 00:01:55.495
<v Speaker 1>Doing alright. How about yourself, David?

00:01:55.735 --> 00:01:57.895
<v Speaker 0>Yeah. I'm very well. Thank you. It is

00:01:57.895 --> 00:02:00.535
<v Speaker 0>getting towards the end of my day, so

00:02:00.535 --> 00:02:01.655
<v Speaker 0>it's

00:02:01.490 --> 00:02:02.930
<v Speaker 0>a nice way to end the day with

00:02:02.930 --> 00:02:04.850
<v Speaker 0>a nice look at Kubernetes and spend some

00:02:04.850 --> 00:02:06.690
<v Speaker 0>time with yourself. How are you today?

00:02:07.250 --> 00:02:09.730
<v Speaker 1>Doing well. It's yeah. Just just kicking off

00:02:09.730 --> 00:02:12.370
<v Speaker 1>my day personally here. So I promise I

00:02:12.370 --> 00:02:13.330
<v Speaker 1>know you're at the end of the day,

00:02:13.330 --> 00:02:14.930
<v Speaker 1>but I'm gonna try and bring that caffeine

00:02:14.930 --> 00:02:17.250
<v Speaker 1>and some of that good morning energy

00:02:17.465 --> 00:02:19.385
<v Speaker 1>to to the stream today.

00:02:20.185 --> 00:02:23.065
<v Speaker 0>Awesome. I definitely appreciate it. That's for sure.

00:02:23.465 --> 00:02:24.025
<v Speaker 0>So

00:02:24.905 --> 00:02:28.425
<v Speaker 0>you are a developer advocate at HashiCorp,

00:02:28.584 --> 00:02:30.905
<v Speaker 0>and very relevant for today, you were the

00:02:30.905 --> 00:02:31.944
<v Speaker 0>one nineteen

00:02:31.944 --> 00:02:33.930
<v Speaker 0>Kubernetes release team lead.

00:02:34.410 --> 00:02:36.570
<v Speaker 0>Do you wanna add anything to that and

00:02:37.290 --> 00:02:38.010
<v Speaker 1>Absolutely.

00:02:38.570 --> 00:02:40.890
<v Speaker 1>So so one nineteen, I just kind of,

00:02:40.890 --> 00:02:42.570
<v Speaker 1>you know, I'll I'll I'll just kinda jump

00:02:42.570 --> 00:02:43.930
<v Speaker 1>in and out of some topics on that

00:02:43.930 --> 00:02:46.410
<v Speaker 1>front. But howdy, everyone. My name is Taylor

00:02:46.410 --> 00:02:49.875
<v Speaker 1>Dolozol. I'm a senior developer advocate at HashiCorp,

00:02:50.114 --> 00:02:52.595
<v Speaker 1>and really, really excited to talk to you

00:02:52.595 --> 00:02:53.075
<v Speaker 1>today.

00:02:53.555 --> 00:02:55.555
<v Speaker 1>Mostly gonna be covering the 01/19

00:02:55.555 --> 00:02:58.034
<v Speaker 1>release and what that experience was like, some

00:02:58.034 --> 00:03:00.220
<v Speaker 1>of the fun new features around that, And

00:03:00.220 --> 00:03:03.180
<v Speaker 1>then just that whole release process, honestly, David,

00:03:03.180 --> 00:03:05.420
<v Speaker 1>was was was a wild experience.

00:03:05.980 --> 00:03:09.180
<v Speaker 1>Beforehand, I was working at Walt Disney Studios

00:03:09.580 --> 00:03:12.380
<v Speaker 1>on on the SRE team and and and,

00:03:12.380 --> 00:03:13.820
<v Speaker 1>you know, helping with all the efforts on

00:03:13.820 --> 00:03:14.540
<v Speaker 1>that front. So

00:03:15.305 --> 00:03:18.424
<v Speaker 1>the 01/19 release, you know, was one I

00:03:18.424 --> 00:03:20.345
<v Speaker 1>I believe the longest release that we've had

00:03:20.345 --> 00:03:21.065
<v Speaker 1>thus far

00:03:22.265 --> 00:03:24.905
<v Speaker 1>between all of the Kubernetes releases that we've

00:03:24.905 --> 00:03:27.465
<v Speaker 1>seen. And so kind of navigating, jumping between

00:03:27.465 --> 00:03:28.265
<v Speaker 1>jobs in that,

00:03:29.000 --> 00:03:31.000
<v Speaker 1>all the the wild things happening in the

00:03:31.000 --> 00:03:32.600
<v Speaker 1>world, you know, it's just been it was

00:03:32.600 --> 00:03:35.240
<v Speaker 1>a marathon release is what most of the

00:03:35.240 --> 00:03:37.800
<v Speaker 1>team had said around that, which is absolutely

00:03:37.800 --> 00:03:38.440
<v Speaker 1>true.

00:03:40.200 --> 00:03:41.000
<v Speaker 0>Yeah. Definitely.

00:03:41.345 --> 00:03:43.105
<v Speaker 0>So I I wasn't actually aware that this

00:03:43.105 --> 00:03:45.105
<v Speaker 0>was the the longest release, but I guess,

00:03:45.105 --> 00:03:46.545
<v Speaker 0>you know, there's been a lot of different

00:03:46.545 --> 00:03:47.345
<v Speaker 0>factors

00:03:47.425 --> 00:03:49.985
<v Speaker 0>in 2020 that may have contributed to that.

00:03:50.145 --> 00:03:52.305
<v Speaker 0>I believe you've been under a release team

00:03:52.305 --> 00:03:54.545
<v Speaker 0>a while now. Right? How many releases?

00:03:55.350 --> 00:03:59.670
<v Speaker 1>Absolutely. So I started on the one fourteen.

00:03:59.670 --> 00:04:01.270
<v Speaker 1>It was, I believe, the first release that

00:04:01.270 --> 00:04:01.990
<v Speaker 1>I was on.

00:04:02.630 --> 00:04:05.270
<v Speaker 1>I saw the shadow survey and then jumped

00:04:05.270 --> 00:04:06.230
<v Speaker 1>in and

00:04:06.630 --> 00:04:09.545
<v Speaker 1>got started with the communications team. So for

00:04:09.545 --> 00:04:11.625
<v Speaker 1>those of you that aren't aware, the release

00:04:11.625 --> 00:04:12.185
<v Speaker 1>team,

00:04:12.585 --> 00:04:14.665
<v Speaker 1>it is one team, but it's broken into

00:04:14.665 --> 00:04:15.065
<v Speaker 1>multiple

00:04:15.465 --> 00:04:18.584
<v Speaker 1>different verticals. So we have, you know, one

00:04:18.584 --> 00:04:21.145
<v Speaker 1>one grouping. It takes care of communications.

00:04:21.620 --> 00:04:23.620
<v Speaker 1>Another one takes care of enhancements,

00:04:23.620 --> 00:04:25.380
<v Speaker 1>for example, another documentation,

00:04:25.620 --> 00:04:28.100
<v Speaker 1>CI signal. There are different groups that focus

00:04:28.100 --> 00:04:30.820
<v Speaker 1>on different things throughout the course of a

00:04:30.820 --> 00:04:31.460
<v Speaker 1>release.

00:04:31.700 --> 00:04:33.780
<v Speaker 1>And so, typically, the the release teams in,

00:04:33.780 --> 00:04:36.260
<v Speaker 1>like, in the, like, lower mid thirties, I

00:04:36.260 --> 00:04:38.175
<v Speaker 1>think we had about, if if I'm counting

00:04:38.175 --> 00:04:39.935
<v Speaker 1>correctly, I think it was, like, 33, 30

00:04:39.935 --> 00:04:42.655
<v Speaker 1>four people on the one nineteen release.

00:04:43.455 --> 00:04:45.375
<v Speaker 0>Yeah. I think people watching this will probably

00:04:45.375 --> 00:04:47.135
<v Speaker 0>be a little bit surprised that, you know,

00:04:47.135 --> 00:04:48.975
<v Speaker 0>with the size of Kubernetes as an open

00:04:48.975 --> 00:04:50.895
<v Speaker 0>source project, that there it requires a lot

00:04:50.895 --> 00:04:53.590
<v Speaker 0>of people and time and effort to actually

00:04:53.590 --> 00:04:55.190
<v Speaker 0>get that release out the door.

00:04:56.070 --> 00:04:56.870
<v Speaker 1>It's

00:04:56.870 --> 00:04:59.270
<v Speaker 1>it's interesting too because you you know, the

00:04:59.670 --> 00:05:02.630
<v Speaker 1>there are different special interest groups within Kubernetes

00:05:02.630 --> 00:05:03.990
<v Speaker 1>for, again, you know, for those of you

00:05:03.990 --> 00:05:04.630
<v Speaker 1>that aren't aware.

00:05:05.125 --> 00:05:07.605
<v Speaker 1>And their, you know, SIG group the special

00:05:07.605 --> 00:05:10.405
<v Speaker 1>interest group just for the release handles that

00:05:10.405 --> 00:05:11.845
<v Speaker 1>release and then those

00:05:12.005 --> 00:05:13.365
<v Speaker 1>those subgroups.

00:05:13.365 --> 00:05:15.445
<v Speaker 1>But there are other ones like SIG API

00:05:15.445 --> 00:05:16.245
<v Speaker 1>machinery,

00:05:16.485 --> 00:05:18.725
<v Speaker 1>SIG docs, you know, and and even more

00:05:18.725 --> 00:05:20.840
<v Speaker 1>on that front too. So no shortage of

00:05:20.840 --> 00:05:22.599
<v Speaker 1>people to ping or reach out to you

00:05:22.599 --> 00:05:24.440
<v Speaker 1>on Slack if you have a question about

00:05:24.520 --> 00:05:26.520
<v Speaker 1>a feature that's gonna make it or or

00:05:26.520 --> 00:05:27.080
<v Speaker 1>not.

00:05:28.360 --> 00:05:30.120
<v Speaker 0>And how have you found the release teams

00:05:30.120 --> 00:05:31.879
<v Speaker 0>now? Let's see. If you said one fourteen

00:05:31.879 --> 00:05:33.805
<v Speaker 0>is your first, this is your fifth release.

00:05:33.805 --> 00:05:35.725
<v Speaker 0>Right? So you've you've experienced a lot of

00:05:35.725 --> 00:05:36.925
<v Speaker 0>the role, I guess?

00:05:37.565 --> 00:05:39.645
<v Speaker 0>Yeah. So I took I did take off

00:05:39.645 --> 00:05:41.645
<v Speaker 1>the the one seventeen

00:05:42.125 --> 00:05:43.885
<v Speaker 1>release cycle. So that was and kind of

00:05:43.885 --> 00:05:45.830
<v Speaker 1>got to, you know, get a good get

00:05:45.830 --> 00:05:47.750
<v Speaker 1>some rest and relaxation

00:05:47.910 --> 00:05:49.510
<v Speaker 1>away from that. Because it does it does

00:05:49.510 --> 00:05:50.630
<v Speaker 1>take a lot out of you.

00:05:51.270 --> 00:05:54.150
<v Speaker 1>But really, really been fun to see how

00:05:54.150 --> 00:05:55.190
<v Speaker 1>the group has

00:05:55.430 --> 00:05:57.670
<v Speaker 1>evolved in the different ways in which we

00:05:57.670 --> 00:06:00.625
<v Speaker 1>go about communicating with one another and seeing,

00:06:00.625 --> 00:06:02.865
<v Speaker 1>you know, all of the documentation and handoff

00:06:02.865 --> 00:06:05.505
<v Speaker 1>processes get, you know, more and more mature

00:06:05.505 --> 00:06:07.265
<v Speaker 1>from release to release.

00:06:08.145 --> 00:06:11.105
<v Speaker 1>But and and, honestly, it's it's to in

00:06:11.105 --> 00:06:14.225
<v Speaker 1>in on my perspective, my bias, I it

00:06:13.920 --> 00:06:16.160
<v Speaker 1>has been a lot easier from release to

00:06:16.160 --> 00:06:18.080
<v Speaker 1>release and just kind of that, you know,

00:06:18.080 --> 00:06:20.560
<v Speaker 1>talking with people and even just, you know

00:06:20.640 --> 00:06:22.480
<v Speaker 1>again, it could've just been

00:06:22.800 --> 00:06:24.960
<v Speaker 1>the stars aligning for me with the one

00:06:24.960 --> 00:06:27.200
<v Speaker 1>nineteen team, but it just was so

00:06:28.385 --> 00:06:30.305
<v Speaker 1>easy to work with everyone. You know, everyone

00:06:30.305 --> 00:06:32.785
<v Speaker 1>was just so kind. Everyone was so upbeat.

00:06:32.785 --> 00:06:34.785
<v Speaker 1>And because it's an open source project, you

00:06:34.785 --> 00:06:37.985
<v Speaker 1>know, that's you're not there's no financial incentive,

00:06:37.985 --> 00:06:39.185
<v Speaker 1>hence open source.

00:06:39.665 --> 00:06:41.985
<v Speaker 1>Everybody's passionate about the project, and so they're

00:06:41.985 --> 00:06:42.945
<v Speaker 1>bringing that passion

00:06:43.449 --> 00:06:45.690
<v Speaker 1>to work with them every single day that

00:06:45.690 --> 00:06:48.330
<v Speaker 1>you're working on that release. And so that

00:06:48.330 --> 00:06:50.889
<v Speaker 1>really you know, that passion really powered this

00:06:50.889 --> 00:06:54.330
<v Speaker 1>release. That's where the accentuate the positive title

00:06:54.330 --> 00:06:57.885
<v Speaker 1>came from. And, just it was fantastic group

00:06:57.885 --> 00:07:00.044
<v Speaker 1>of people to work with and, and everyone

00:07:00.044 --> 00:07:02.445
<v Speaker 1>was just, you know, even if there was

00:07:02.445 --> 00:07:04.285
<v Speaker 1>a little slippage here or, you know, getting

00:07:04.285 --> 00:07:06.685
<v Speaker 1>some done early or late, everybody was just

00:07:06.685 --> 00:07:08.925
<v Speaker 1>there and it very much had that family

00:07:08.925 --> 00:07:10.845
<v Speaker 1>feel to it, for lack of a better

00:07:10.845 --> 00:07:11.005
<v Speaker 0>term.

00:07:12.070 --> 00:07:14.870
<v Speaker 0>That's awesome. And I was very curious about

00:07:14.870 --> 00:07:16.790
<v Speaker 0>to accentuate the positives, so I'm glad that

00:07:16.790 --> 00:07:19.670
<v Speaker 0>we kinda covered that. I think every release

00:07:19.670 --> 00:07:22.230
<v Speaker 0>now that I've at least been visible to

00:07:22.230 --> 00:07:23.764
<v Speaker 0>or I've been paying attention to. It's like,

00:07:23.764 --> 00:07:25.764
<v Speaker 0>these themes are always great, and those come

00:07:25.764 --> 00:07:28.324
<v Speaker 0>from the release team leads. Right? You're one

00:07:28.324 --> 00:07:31.844
<v Speaker 0>that accentuated the positive here. Right? Oh, absolutely.

00:07:31.844 --> 00:07:34.405
<v Speaker 1>Yeah. Just to just to to just trying

00:07:34.405 --> 00:07:35.525
<v Speaker 1>to get do a good thing, pay it

00:07:35.525 --> 00:07:35.685
<v Speaker 1>forward.

00:07:36.620 --> 00:07:38.860
<v Speaker 1>Yeah. Each each of the releases has a

00:07:38.860 --> 00:07:40.380
<v Speaker 1>theme that will come with it, which is

00:07:40.380 --> 00:07:42.140
<v Speaker 1>chosen by the release lead.

00:07:42.380 --> 00:07:44.540
<v Speaker 1>And then, typically, it's well, I I don't

00:07:44.540 --> 00:07:46.860
<v Speaker 1>think it's ever been disclosed before the release

00:07:46.860 --> 00:07:47.900
<v Speaker 1>has gone live,

00:07:48.220 --> 00:07:50.620
<v Speaker 1>but that's usually kept a secret even, you

00:07:50.620 --> 00:07:50.780
<v Speaker 1>know

00:07:52.115 --> 00:07:54.435
<v Speaker 1>not even told to the release shadows as

00:07:54.435 --> 00:07:56.835
<v Speaker 1>well. And so, you know, sometimes they're they

00:07:56.915 --> 00:07:58.195
<v Speaker 1>they'll be like, hey. What do you think?

00:07:58.195 --> 00:07:59.555
<v Speaker 1>You know, there's that back and forth kind

00:07:59.555 --> 00:08:01.795
<v Speaker 1>of workshopping on the idea or, you know,

00:08:01.795 --> 00:08:03.795
<v Speaker 1>just kinda double checking to make sure everything

00:08:04.195 --> 00:08:06.890
<v Speaker 1>all the the everything lines up. But this

00:08:06.890 --> 00:08:09.210
<v Speaker 1>one was definitely intended to be a surprise

00:08:09.210 --> 00:08:11.130
<v Speaker 1>and was a lot of fun picking that

00:08:11.130 --> 00:08:11.610
<v Speaker 1>out.

00:08:12.410 --> 00:08:14.970
<v Speaker 1>That for for for anyone that's seen it,

00:08:14.970 --> 00:08:16.250
<v Speaker 1>it's a Animal

00:08:16.330 --> 00:08:17.610
<v Speaker 1>Crossing themed

00:08:18.090 --> 00:08:19.370
<v Speaker 1>type logo

00:08:19.450 --> 00:08:22.305
<v Speaker 1>just very much in the spirit of. And,

00:08:22.305 --> 00:08:24.625
<v Speaker 1>you know, that game came out just as

00:08:24.625 --> 00:08:27.585
<v Speaker 1>the 01/19 release kicked on and really started

00:08:27.585 --> 00:08:28.225
<v Speaker 1>up.

00:08:28.705 --> 00:08:31.104
<v Speaker 1>And then, you know, as as we've had

00:08:31.104 --> 00:08:33.424
<v Speaker 1>to go through COVID, as we've had to,

00:08:33.745 --> 00:08:36.750
<v Speaker 1>you know, just injure endure all these socioeconomic

00:08:36.750 --> 00:08:39.230
<v Speaker 1>and other, you know, the natural disasters, just

00:08:39.230 --> 00:08:41.470
<v Speaker 1>all these crazy things that we've had happen

00:08:41.470 --> 00:08:43.390
<v Speaker 1>to us around the world,

00:08:44.029 --> 00:08:46.430
<v Speaker 1>no better time than to focus on one

00:08:46.430 --> 00:08:48.110
<v Speaker 1>another, really just being upbeat,

00:08:48.764 --> 00:08:50.524
<v Speaker 1>finding out how you can help one another,

00:08:50.524 --> 00:08:52.204
<v Speaker 1>and just kind of, you know, it just,

00:08:52.204 --> 00:08:53.964
<v Speaker 1>you know, from joining

00:08:53.964 --> 00:08:55.644
<v Speaker 1>hands with people and just kinda figuring out

00:08:55.644 --> 00:08:57.245
<v Speaker 1>how to meet them where they're at and

00:08:57.324 --> 00:09:00.125
<v Speaker 1>just to be, you know, good, kind, uplifting.

00:09:01.180 --> 00:09:01.820
<v Speaker 1>And I

00:09:02.459 --> 00:09:04.779
<v Speaker 1>I feel we really did that in 01/19,

00:09:05.019 --> 00:09:07.339
<v Speaker 1>giving people time as, you know, some weeks

00:09:07.339 --> 00:09:09.580
<v Speaker 1>were a lot harder than others, taking a

00:09:09.580 --> 00:09:10.700
<v Speaker 1>break from meetings,

00:09:11.260 --> 00:09:13.100
<v Speaker 1>you know, definitely around KubeCon. We took a

00:09:13.100 --> 00:09:14.860
<v Speaker 1>break there as well, but we really focused

00:09:14.860 --> 00:09:17.785
<v Speaker 1>on the community in this release. You know?

00:09:17.785 --> 00:09:19.865
<v Speaker 1>If you over overexert

00:09:19.945 --> 00:09:21.785
<v Speaker 1>the community and the people working on this

00:09:21.785 --> 00:09:23.385
<v Speaker 1>project, you're not gonna have a lot of

00:09:23.385 --> 00:09:25.225
<v Speaker 1>people left to to work on the project

00:09:25.225 --> 00:09:27.225
<v Speaker 1>if if they're all burnt out. Right? So

00:09:27.385 --> 00:09:28.745
<v Speaker 1>it was a lot of fun to to

00:09:28.745 --> 00:09:30.425
<v Speaker 1>work with people on that and just really

00:09:30.610 --> 00:09:32.610
<v Speaker 1>actively listen and and see what was going

00:09:32.610 --> 00:09:33.570
<v Speaker 1>on in the community.

00:09:34.770 --> 00:09:35.650
<v Speaker 0>Excellent.

00:09:36.130 --> 00:09:38.450
<v Speaker 0>I just popped up the great kind of

00:09:38.450 --> 00:09:40.930
<v Speaker 0>artwork there. It's definitely one of my favorite

00:09:40.930 --> 00:09:42.610
<v Speaker 0>ones. I think everybody's been a little bit

00:09:42.610 --> 00:09:44.610
<v Speaker 0>Animal Crossing that this year, so I thought

00:09:44.610 --> 00:09:45.650
<v Speaker 0>it was a very fitting

00:09:46.425 --> 00:09:48.185
<v Speaker 0>name, and I think the sentiment that you

00:09:48.185 --> 00:09:49.625
<v Speaker 0>just described there as well with the release

00:09:49.625 --> 00:09:51.705
<v Speaker 0>is fantastic as well. So great job then.

00:09:52.904 --> 00:09:54.665
<v Speaker 0>Thank you. I I don't wanna get this

00:09:54.665 --> 00:09:55.385
<v Speaker 0>wrong,

00:09:55.785 --> 00:09:58.345
<v Speaker 0>but I believe that shadow applications are open

00:09:58.345 --> 00:09:59.945
<v Speaker 0>right now for 01/20.

00:09:59.945 --> 00:10:00.584
<v Speaker 0>Is that correct?

00:10:01.190 --> 00:10:03.590
<v Speaker 1>That that's correct. I believe that they're closing

00:10:03.590 --> 00:10:06.550
<v Speaker 1>up soon. So if you're looking to get

00:10:06.550 --> 00:10:09.110
<v Speaker 1>your start on Kubernetes and interacting with the

00:10:09.110 --> 00:10:10.390
<v Speaker 1>open source community,

00:10:10.630 --> 00:10:12.950
<v Speaker 1>by all means, please please please check that

00:10:12.950 --> 00:10:15.065
<v Speaker 1>out. I'll I'll try and find the link.

00:10:15.065 --> 00:10:17.305
<v Speaker 1>I'll I'll try and reach retweet that out

00:10:17.305 --> 00:10:19.705
<v Speaker 1>later. Try to say that five times fast

00:10:19.945 --> 00:10:22.024
<v Speaker 1>and and share that with y'all. But I

00:10:22.024 --> 00:10:24.025
<v Speaker 1>do believe that's closing up. So

00:10:24.425 --> 00:10:26.825
<v Speaker 1>and if you have any doubts about getting

00:10:26.825 --> 00:10:29.340
<v Speaker 1>involved with open source, if you're on the

00:10:29.340 --> 00:10:31.660
<v Speaker 1>fence, if you're having that that you know,

00:10:31.660 --> 00:10:34.220
<v Speaker 1>if you're if you're undecided on that front,

00:10:34.300 --> 00:10:37.660
<v Speaker 1>just do it. I obviously, make sure you

00:10:37.660 --> 00:10:39.180
<v Speaker 1>have enough time to do so,

00:10:39.660 --> 00:10:41.900
<v Speaker 1>but there are rules for for everyone.

00:10:42.384 --> 00:10:45.425
<v Speaker 1>And the biggest the biggest piece of feedback

00:10:45.425 --> 00:10:46.944
<v Speaker 1>that I've heard there is that a lot

00:10:46.944 --> 00:10:48.225
<v Speaker 1>of people are concerned about,

00:10:48.545 --> 00:10:50.625
<v Speaker 1>you know, being judged or just they don't

00:10:50.625 --> 00:10:53.024
<v Speaker 1>really feel comfortable sharing their code or their

00:10:53.024 --> 00:10:53.825
<v Speaker 1>contributions

00:10:53.904 --> 00:10:55.345
<v Speaker 1>with the world. You know, that's a that

00:10:55.345 --> 00:10:57.720
<v Speaker 1>is a lot of scrutin scrutiny, but it's

00:10:58.040 --> 00:11:00.600
<v Speaker 1>you're working with fantastic people, and they're not

00:11:00.600 --> 00:11:03.560
<v Speaker 1>going to, you know, let anything bad happen.

00:11:04.040 --> 00:11:06.120
<v Speaker 1>So long as you work with people, you

00:11:06.120 --> 00:11:07.800
<v Speaker 1>have that community mindset,

00:11:08.120 --> 00:11:10.279
<v Speaker 1>and and that's the goal. That's the intent

00:11:10.155 --> 00:11:12.155
<v Speaker 1>that you're walking in with. You're you're not

00:11:12.155 --> 00:11:14.235
<v Speaker 1>gonna be disappointed. But by all means, make

00:11:14.235 --> 00:11:15.675
<v Speaker 1>sure that you have time to do it.

00:11:16.715 --> 00:11:19.195
<v Speaker 1>There there I think when I selected the

00:11:19.195 --> 00:11:21.115
<v Speaker 1>communications team, when I started on that with

00:11:21.115 --> 00:11:23.275
<v Speaker 1>the Kubernetes release cycles,

00:11:23.915 --> 00:11:26.170
<v Speaker 1>that that role fit really well. But, you

00:11:26.170 --> 00:11:28.890
<v Speaker 1>know, something like CI or or CI signal,

00:11:28.890 --> 00:11:30.810
<v Speaker 1>that one is very involved and it requires

00:11:30.810 --> 00:11:31.930
<v Speaker 1>a lot of communication,

00:11:32.250 --> 00:11:34.570
<v Speaker 1>between team members. And so you can kind

00:11:34.570 --> 00:11:35.930
<v Speaker 1>of pick what works for you, which is

00:11:35.930 --> 00:11:37.530
<v Speaker 1>really nice about the open source project.

00:11:38.625 --> 00:11:40.785
<v Speaker 0>Yeah. I think, just to kind of touch

00:11:40.785 --> 00:11:42.385
<v Speaker 0>on one thing you said there. Like, you

00:11:42.385 --> 00:11:44.465
<v Speaker 0>don't even have to write any code, you

00:11:44.465 --> 00:11:46.065
<v Speaker 0>don't have to be fearful of writing code.

00:11:46.065 --> 00:11:47.505
<v Speaker 0>You can join the release team at the

00:11:47.505 --> 00:11:49.425
<v Speaker 0>shadow and and start to experience some of

00:11:49.425 --> 00:11:52.019
<v Speaker 0>those different roles and positions and, you know,

00:11:52.019 --> 00:11:53.860
<v Speaker 0>never write a single layer of code. I

00:11:53.860 --> 00:11:55.220
<v Speaker 0>know I have never written a single layer

00:11:55.220 --> 00:11:57.380
<v Speaker 0>of code with the Kubernetes project. So and

00:11:57.380 --> 00:11:59.459
<v Speaker 0>it's still a very positive experience. I really

00:11:59.459 --> 00:12:01.220
<v Speaker 0>enjoyed the the couple of release teams that

00:12:01.220 --> 00:12:02.420
<v Speaker 0>I had as a part of too, and

00:12:02.579 --> 00:12:03.940
<v Speaker 0>but you get to meet so many cool

00:12:03.940 --> 00:12:05.699
<v Speaker 0>people and just all those interactions.

00:12:06.315 --> 00:12:07.835
<v Speaker 0>And and even if you are a little

00:12:07.835 --> 00:12:09.435
<v Speaker 0>bit shy and you're curious or on the

00:12:09.435 --> 00:12:09.995
<v Speaker 0>fence,

00:12:10.315 --> 00:12:11.835
<v Speaker 0>you can just go and lurk in the

00:12:11.835 --> 00:12:13.675
<v Speaker 0>second release channel. You can join the mailing

00:12:13.675 --> 00:12:15.115
<v Speaker 0>list. There are loads and loads of ways

00:12:15.115 --> 00:12:16.315
<v Speaker 0>where you can get the mailer of it

00:12:16.315 --> 00:12:18.315
<v Speaker 0>first, but they have to jump straight into

00:12:18.315 --> 00:12:19.195
<v Speaker 0>the shadow applications.

00:12:19.840 --> 00:12:22.080
<v Speaker 0>But we really do sorry. I had go.

00:12:22.560 --> 00:12:24.320
<v Speaker 1>No. That's it's such a great point, David.

00:12:24.320 --> 00:12:26.720
<v Speaker 1>I I think that it's such it's most

00:12:26.720 --> 00:12:28.800
<v Speaker 1>open source projects, yeah, I I I've felt

00:12:28.800 --> 00:12:30.080
<v Speaker 1>like that where it's just like you kinda

00:12:30.080 --> 00:12:32.080
<v Speaker 1>jump in. You don't really know what to

00:12:32.080 --> 00:12:34.255
<v Speaker 1>expect. Kubernetes, there's a whole bunch of, like,

00:12:34.255 --> 00:12:36.975
<v Speaker 1>rule books. There's that shadow process. So you

00:12:36.975 --> 00:12:38.975
<v Speaker 1>don't, you know it's you're not you you

00:12:38.975 --> 00:12:41.055
<v Speaker 1>don't have to be, like, you know, just

00:12:41.055 --> 00:12:42.895
<v Speaker 1>completely in it and you have to know

00:12:42.895 --> 00:12:45.215
<v Speaker 1>everything before you do anything. That's the whole

00:12:45.215 --> 00:12:47.055
<v Speaker 1>purpose of that shadow program is so that

00:12:47.055 --> 00:12:48.780
<v Speaker 1>you can take the time to see how

00:12:48.780 --> 00:12:51.340
<v Speaker 1>things work and then ramp up until you're

00:12:51.340 --> 00:12:53.260
<v Speaker 1>at a point where you feel comfortable to

00:12:53.260 --> 00:12:54.460
<v Speaker 1>take over something in a in a in

00:12:54.460 --> 00:12:57.260
<v Speaker 1>a lead capacity. Typically, we've we've advised that,

00:12:57.260 --> 00:12:59.340
<v Speaker 1>like, two cycles of being in a shadow

00:12:59.340 --> 00:13:02.764
<v Speaker 1>position before getting to that lead position is,

00:13:02.764 --> 00:13:04.524
<v Speaker 1>you know, typically how that works out. But,

00:13:04.524 --> 00:13:05.005
<v Speaker 1>yeah,

00:13:05.404 --> 00:13:07.485
<v Speaker 1>it's it's come come come lurk, come ask

00:13:07.485 --> 00:13:08.125
<v Speaker 1>questions,

00:13:08.445 --> 00:13:11.245
<v Speaker 1>come enjoy the banter and the conversation. It's

00:13:11.245 --> 00:13:13.165
<v Speaker 1>not always about tech. You know, sometimes we

00:13:13.165 --> 00:13:14.524
<v Speaker 1>will talk about Animal Crossing.

00:13:14.960 --> 00:13:16.400
<v Speaker 1>We'll pop up in a Zoom chat on

00:13:16.400 --> 00:13:18.160
<v Speaker 1>a Friday and just kinda talk about life.

00:13:18.160 --> 00:13:20.000
<v Speaker 1>You know? Like, it's a it's it it's

00:13:20.000 --> 00:13:21.680
<v Speaker 1>it's a family. It's community. It's it's a

00:13:21.680 --> 00:13:22.880
<v Speaker 1>lot of fun. It doesn't have to be

00:13:23.120 --> 00:13:25.600
<v Speaker 1>there there's equal parts work and play when

00:13:25.600 --> 00:13:27.440
<v Speaker 1>it comes to working on Kubernetes, and that's

00:13:27.520 --> 00:13:28.640
<v Speaker 1>that makes it a lot of fun.

00:13:29.555 --> 00:13:30.995
<v Speaker 0>Yeah. Definitely. Okay.

00:13:31.634 --> 00:13:32.915
<v Speaker 0>That's that's great.

00:13:33.714 --> 00:13:35.394
<v Speaker 0>We will tweet other links. I'll make sure

00:13:35.394 --> 00:13:36.995
<v Speaker 0>they're in the comment section as well in

00:13:36.995 --> 00:13:38.755
<v Speaker 0>the YouTube video. The release team is a

00:13:38.755 --> 00:13:40.915
<v Speaker 0>great experience. Hopefully, we've done it justice. We

00:13:40.915 --> 00:13:42.595
<v Speaker 0>sold it really well there. Feel free to

00:13:42.595 --> 00:13:43.074
<v Speaker 0>get involved.

00:13:44.390 --> 00:13:48.310
<v Speaker 0>Now we're gonna talk about Kubernetes one nineteen.

00:13:48.870 --> 00:13:50.390
<v Speaker 0>So it's

00:13:50.390 --> 00:13:50.950
<v Speaker 0>got

00:13:51.990 --> 00:13:54.870
<v Speaker 0>it's got some major themes. Like,

00:13:55.350 --> 00:13:57.285
<v Speaker 0>we we've got a list here. Do you

00:13:57.285 --> 00:13:58.565
<v Speaker 0>want to read through them? Do you wanna

00:13:58.565 --> 00:14:00.404
<v Speaker 0>just dive into each one after one? What's

00:14:00.404 --> 00:14:01.845
<v Speaker 0>your preferred format here? What would you like

00:14:01.845 --> 00:14:04.325
<v Speaker 0>to do? Yeah. So so I'd love to

00:14:04.325 --> 00:14:06.404
<v Speaker 1>kind of hit on a lot of major

00:14:06.404 --> 00:14:08.165
<v Speaker 1>themes for 01/19.

00:14:08.645 --> 00:14:10.005
<v Speaker 1>Then just kind of, you know, if if

00:14:10.005 --> 00:14:12.085
<v Speaker 1>they didn't if they weren't on your radar,

00:14:12.085 --> 00:14:13.860
<v Speaker 1>we'd just kind of love that opportunity to

00:14:13.860 --> 00:14:15.300
<v Speaker 1>put them on your radar.

00:14:16.019 --> 00:14:17.860
<v Speaker 1>I I and I'll of course, I'll I'll

00:14:17.860 --> 00:14:20.100
<v Speaker 1>point out which ones are my personal favorites,

00:14:20.180 --> 00:14:21.700
<v Speaker 1>but we can do we we we can

00:14:21.700 --> 00:14:22.740
<v Speaker 1>just jump through them.

00:14:23.380 --> 00:14:26.305
<v Speaker 1>So one of the the biggest items

00:14:26.305 --> 00:14:28.625
<v Speaker 1>that, happens in 01/19

00:14:28.785 --> 00:14:31.745
<v Speaker 1>is increasing the Kubernetes support window to one

00:14:31.745 --> 00:14:34.705
<v Speaker 1>year, whereas previously, it was at nine months,

00:14:35.105 --> 00:14:38.000
<v Speaker 1>because every three months, typically, you have a

00:14:38.000 --> 00:14:40.640
<v Speaker 1>new Kubernetes release. And so that allowed for,

00:14:40.640 --> 00:14:42.560
<v Speaker 1>you know, just just two back as soon

00:14:42.560 --> 00:14:44.800
<v Speaker 1>as one was one was published.

00:14:44.960 --> 00:14:46.960
<v Speaker 1>So now at any given point in time,

00:14:47.040 --> 00:14:48.400
<v Speaker 1>starting with 01/19,

00:14:48.480 --> 00:14:50.720
<v Speaker 1>there's going to be four that get supported

00:14:50.720 --> 00:14:52.875
<v Speaker 1>there. There's a lot of feedback from the

00:14:52.875 --> 00:14:55.915
<v Speaker 1>community saying that, you know, nine months is

00:14:55.915 --> 00:14:57.995
<v Speaker 1>a is a, you know, sizable amount of

00:14:57.995 --> 00:14:58.875
<v Speaker 1>time. However,

00:14:59.355 --> 00:15:01.515
<v Speaker 1>we'd like a little bit more time. So

00:15:01.355 --> 00:15:03.115
<v Speaker 1>because it is you know, it it does

00:15:03.115 --> 00:15:05.160
<v Speaker 1>get a little bit dizzying to have to

00:15:05.160 --> 00:15:07.560
<v Speaker 1>upgrade your cluster with every single release that

00:15:07.560 --> 00:15:09.880
<v Speaker 1>comes out, and and most teams aren't able

00:15:09.880 --> 00:15:11.639
<v Speaker 1>to do that. Some can't do that even

00:15:11.639 --> 00:15:13.880
<v Speaker 1>within the nine months period of time. So

00:15:13.880 --> 00:15:16.440
<v Speaker 1>we we we hear you, we listen to

00:15:16.440 --> 00:15:18.839
<v Speaker 1>you, and and we have one year support.

00:15:18.839 --> 00:15:20.200
<v Speaker 1>So that's that's a lot of fun to

00:15:20.200 --> 00:15:20.360
<v Speaker 1>see.

00:15:21.055 --> 00:15:22.735
<v Speaker 0>Yeah. I I think that's a a change

00:15:22.735 --> 00:15:25.135
<v Speaker 0>that's gonna be welcomed by by so many.

00:15:25.135 --> 00:15:26.975
<v Speaker 0>You know, Kubernetes has been such an integral

00:15:26.975 --> 00:15:29.295
<v Speaker 0>part of of people's production infrastructure.

00:15:29.615 --> 00:15:30.735
<v Speaker 0>Even updating

00:15:30.735 --> 00:15:33.135
<v Speaker 0>every, you know, three months can be very

00:15:33.135 --> 00:15:34.975
<v Speaker 0>daunting, but then getting to the end of

00:15:34.975 --> 00:15:36.655
<v Speaker 0>a a supported release,

00:15:37.110 --> 00:15:39.430
<v Speaker 0>even even skittier. But I think that extra

00:15:39.430 --> 00:15:41.670
<v Speaker 0>bit of buffer, I will really really help

00:15:41.670 --> 00:15:42.630
<v Speaker 0>a lot of companies.

00:15:43.029 --> 00:15:45.029
<v Speaker 1>It's it's really gonna be fantastic, and I

00:15:45.029 --> 00:15:46.870
<v Speaker 1>do hope that, you know, my my selfish

00:15:46.870 --> 00:15:49.270
<v Speaker 1>want on on that one with that feature

00:15:49.270 --> 00:15:50.630
<v Speaker 1>specifically is

00:15:50.790 --> 00:15:52.855
<v Speaker 1>some some of the managed Kubernetes options that

00:15:52.855 --> 00:15:54.535
<v Speaker 1>you have. You know, I think that most

00:15:54.535 --> 00:15:58.135
<v Speaker 1>of them are are are have one seventeen

00:15:58.775 --> 00:16:00.855
<v Speaker 1>supported right now, but I you know, my

00:16:00.855 --> 00:16:02.535
<v Speaker 1>personal want is to see that a little

00:16:02.535 --> 00:16:03.495
<v Speaker 1>bit closer to

00:16:04.270 --> 00:16:06.430
<v Speaker 1>what's, you know, what's gone GA. Like, seeing

00:16:06.430 --> 00:16:08.110
<v Speaker 1>one eighteen just a couple months after it

00:16:08.110 --> 00:16:09.790
<v Speaker 1>comes out would be great to see, same

00:16:09.790 --> 00:16:10.910
<v Speaker 1>with one nineteen

00:16:11.230 --> 00:16:12.910
<v Speaker 1>just so that the the community is able

00:16:12.910 --> 00:16:14.750
<v Speaker 1>to kind of work with those features, see

00:16:14.750 --> 00:16:16.430
<v Speaker 1>see if it's, you know, good fit for

00:16:16.430 --> 00:16:16.750
<v Speaker 1>them

00:16:17.654 --> 00:16:19.815
<v Speaker 1>and, you know, and so on. But

00:16:20.135 --> 00:16:21.575
<v Speaker 1>happy to see that, you know, we have

00:16:21.575 --> 00:16:24.055
<v Speaker 1>those manager clusters available as well. And then

00:16:24.055 --> 00:16:25.975
<v Speaker 1>for any any of you playing at home,

00:16:26.455 --> 00:16:29.575
<v Speaker 1>I'd absolutely recommend checking out the kind project

00:16:29.575 --> 00:16:31.975
<v Speaker 1>by the fantastic Ben the elder

00:16:32.480 --> 00:16:34.800
<v Speaker 1>that allows you to spin up Kubernetes in

00:16:34.800 --> 00:16:38.000
<v Speaker 1>Docker, kind, k I n d. And it

00:16:38.000 --> 00:16:39.440
<v Speaker 1>really makes it easy for if you want

00:16:39.440 --> 00:16:41.199
<v Speaker 1>to test something, you know, work with the

00:16:41.199 --> 00:16:43.519
<v Speaker 1>control plane, or just kind of spin up,

00:16:43.680 --> 00:16:45.600
<v Speaker 1>you know, like that. That's how I I

00:16:45.600 --> 00:16:47.885
<v Speaker 1>checked and and looked at and started working

00:16:47.885 --> 00:16:49.245
<v Speaker 1>with a lot of the one nineteen team

00:16:49.245 --> 00:16:51.005
<v Speaker 0>features out of the out of the box

00:16:51.084 --> 00:16:52.045
<v Speaker 1>out of the container.

00:16:53.165 --> 00:16:53.805
<v Speaker 0>Yeah.

00:16:54.365 --> 00:16:56.524
<v Speaker 0>Kinda is definitely the easiest way to start

00:16:56.524 --> 00:16:58.285
<v Speaker 0>kicking the tires on some of these features,

00:16:58.285 --> 00:16:58.365
<v Speaker 0>especially

00:16:59.339 --> 00:17:01.500
<v Speaker 0>even ManyCube as well has really good support

00:17:01.500 --> 00:17:02.860
<v Speaker 0>for both of these. So, you know, you

00:17:02.860 --> 00:17:04.539
<v Speaker 0>can you can have your shot with any.

00:17:04.539 --> 00:17:06.380
<v Speaker 0>I think OneMain team is available on both

00:17:06.380 --> 00:17:08.780
<v Speaker 0>pretty much immediately after the release, which it

00:17:08.780 --> 00:17:10.299
<v Speaker 0>just makes it so easy for this.

00:17:11.099 --> 00:17:13.805
<v Speaker 1>Oh, absolutely. Agree. As far I I I

00:17:13.805 --> 00:17:15.405
<v Speaker 0>don't wanna ask you an opinion piece so

00:17:15.405 --> 00:17:16.685
<v Speaker 0>early on in our call, but I'm gonna

00:17:16.685 --> 00:17:17.565
<v Speaker 0>do it anyway.

00:17:18.045 --> 00:17:18.684
<v Speaker 0>There

00:17:19.484 --> 00:17:21.885
<v Speaker 0>has been many conversations over the last twelve

00:17:21.885 --> 00:17:23.325
<v Speaker 0>months about whether Kubernetes

00:17:23.805 --> 00:17:26.120
<v Speaker 0>the release cycle is too fast. Like, and

00:17:26.120 --> 00:17:28.680
<v Speaker 0>and corporations and companies are having troubles with

00:17:28.680 --> 00:17:30.760
<v Speaker 0>speed up. Is that something that you see

00:17:30.760 --> 00:17:32.920
<v Speaker 0>changing maybe in the future? Do you think

00:17:32.920 --> 00:17:34.840
<v Speaker 0>it will slow down as the product continues

00:17:34.840 --> 00:17:36.520
<v Speaker 0>to mature, or do you think that maturity

00:17:36.520 --> 00:17:39.080
<v Speaker 0>will contain anything encourage new contributors and maybe

00:17:39.080 --> 00:17:39.640
<v Speaker 0>speed it up?

00:17:41.235 --> 00:17:43.235
<v Speaker 1>That's something I have thought a lot about

00:17:43.235 --> 00:17:44.035
<v Speaker 1>myself.

00:17:44.115 --> 00:17:45.794
<v Speaker 1>And I think that I

00:17:46.275 --> 00:17:48.755
<v Speaker 1>personally, I do think that that will become

00:17:48.755 --> 00:17:51.075
<v Speaker 1>the case at some point in time and

00:17:51.315 --> 00:17:54.195
<v Speaker 1>or, you know, will maybe we'll separate out

00:17:54.195 --> 00:17:57.080
<v Speaker 1>into kind of, you know, core features and,

00:17:57.159 --> 00:17:59.640
<v Speaker 1>you know, looking at how the process is

00:17:59.640 --> 00:18:01.960
<v Speaker 1>set up right now such that you have

00:18:02.120 --> 00:18:04.359
<v Speaker 1>you know, you introduce a feature with alpha,

00:18:04.520 --> 00:18:05.639
<v Speaker 1>you get feedback

00:18:06.039 --> 00:18:07.880
<v Speaker 1>from the community, and you get, you know,

00:18:07.880 --> 00:18:10.485
<v Speaker 1>that conversation started, then it moves into beta

00:18:10.485 --> 00:18:12.645
<v Speaker 1>after you have, you know, a good backing

00:18:12.645 --> 00:18:15.845
<v Speaker 1>there, then finally GA on that front. So

00:18:15.845 --> 00:18:18.645
<v Speaker 1>I like that process, but there have been

00:18:18.645 --> 00:18:20.565
<v Speaker 1>a lot of conversations that I've been in

00:18:20.565 --> 00:18:22.570
<v Speaker 1>both inside of the community and, you know,

00:18:22.570 --> 00:18:24.409
<v Speaker 1>in in the end user community.

00:18:24.730 --> 00:18:28.169
<v Speaker 1>And there is, you know, it's the stability

00:18:28.169 --> 00:18:31.130
<v Speaker 1>is constantly becoming, you know, a a cornerstone

00:18:31.130 --> 00:18:33.690
<v Speaker 1>to every release that happens for Kubernetes.

00:18:34.090 --> 00:18:34.570
<v Speaker 1>And

00:18:34.915 --> 00:18:37.155
<v Speaker 1>being able to you know, there's talks about,

00:18:37.155 --> 00:18:39.235
<v Speaker 1>like, can we release bug fixes in a

00:18:39.235 --> 00:18:39.955
<v Speaker 1>different, you know

00:18:41.315 --> 00:18:43.155
<v Speaker 1>just to release that asynchronously

00:18:43.155 --> 00:18:44.914
<v Speaker 1>along with this core functionality,

00:18:45.075 --> 00:18:47.235
<v Speaker 1>you know, will things get broken out into,

00:18:47.235 --> 00:18:50.195
<v Speaker 1>you know, different types of providers and and

00:18:49.350 --> 00:18:51.510
<v Speaker 1>you know, like, having core functionality and then

00:18:51.510 --> 00:18:53.669
<v Speaker 1>other different, you know, veins to kind of

00:18:53.669 --> 00:18:55.590
<v Speaker 1>feed that into the project. I'm curious to

00:18:55.590 --> 00:18:56.629
<v Speaker 1>see if that happens.

00:18:56.870 --> 00:18:58.309
<v Speaker 1>And then there was one talk that was

00:18:58.309 --> 00:18:58.789
<v Speaker 1>given

00:18:59.110 --> 00:19:02.390
<v Speaker 1>at KubeCon San Diego by Tim Pepper and

00:19:02.390 --> 00:19:04.945
<v Speaker 1>Steven Augustus, And they talked a lot about,

00:19:05.105 --> 00:19:07.664
<v Speaker 1>you know, we don't really have distribution

00:19:07.985 --> 00:19:09.745
<v Speaker 1>of Kubernetes out there right now. We ship

00:19:09.745 --> 00:19:11.664
<v Speaker 1>the product, but we don't have this distribution

00:19:11.664 --> 00:19:13.105
<v Speaker 1>with an opinionated,

00:19:13.105 --> 00:19:16.080
<v Speaker 1>like, almost like an OS. Right? We don't

00:19:16.080 --> 00:19:17.600
<v Speaker 1>have anything like that. So I think as

00:19:17.600 --> 00:19:19.440
<v Speaker 1>time goes on, we'll start to see more,

00:19:19.840 --> 00:19:22.720
<v Speaker 1>in both distributions or just methods of delivery

00:19:22.720 --> 00:19:24.880
<v Speaker 1>of, you know, what channels are you following

00:19:24.880 --> 00:19:26.880
<v Speaker 1>for these features and kind of keeping track

00:19:26.880 --> 00:19:29.715
<v Speaker 1>of that. I'm really, really I'd knowing the

00:19:29.715 --> 00:19:31.715
<v Speaker 1>Kubernetes community, I know they're gonna they're gonna

00:19:31.715 --> 00:19:32.995
<v Speaker 1>do it the right way. They're gonna talk

00:19:32.995 --> 00:19:35.475
<v Speaker 1>with the community before anything happens, but I

00:19:35.475 --> 00:19:37.315
<v Speaker 1>definitely want them tracking that. That's gonna be

00:19:37.315 --> 00:19:38.355
<v Speaker 1>an interesting one for sure.

00:19:39.600 --> 00:19:41.679
<v Speaker 0>Right. Keep an eye on that one definitely

00:19:41.679 --> 00:19:43.919
<v Speaker 0>then. So we've got twelve months. Everyone should

00:19:43.919 --> 00:19:45.520
<v Speaker 0>be happy. They've got the time, and hopefully,

00:19:45.520 --> 00:19:48.159
<v Speaker 0>they need to stay on a supported version.

00:19:48.320 --> 00:19:49.440
<v Speaker 0>And I think with

00:19:50.000 --> 00:19:52.080
<v Speaker 0>you know, I think I love I don't

00:19:52.400 --> 00:19:54.559
<v Speaker 0>wanna segue far too much in again. But

00:19:54.755 --> 00:19:57.715
<v Speaker 0>your previous role to HashiCorp, you said, was

00:19:57.715 --> 00:19:59.875
<v Speaker 0>at Disney. Right? If I remember correctly, you

00:19:59.875 --> 00:20:00.915
<v Speaker 0>were an SRE?

00:20:01.795 --> 00:20:04.675
<v Speaker 1>Correct. Yeah. Ah, right. Did you run your

00:20:04.675 --> 00:20:05.955
<v Speaker 0>own Kubernetes clusters?

00:20:06.830 --> 00:20:09.550
<v Speaker 1>So mostly, we focused on just, you know,

00:20:09.550 --> 00:20:11.390
<v Speaker 1>Disney is a big place, so so lots

00:20:11.390 --> 00:20:12.669
<v Speaker 1>of technologies used.

00:20:12.910 --> 00:20:13.389
<v Speaker 1>But,

00:20:13.790 --> 00:20:15.550
<v Speaker 1>really, the team that I worked on, we

00:20:15.550 --> 00:20:18.190
<v Speaker 1>mostly focused on managed Kubernetes.

00:20:18.190 --> 00:20:20.270
<v Speaker 1>We we, you know, we're using EKS

00:20:20.270 --> 00:20:20.990
<v Speaker 1>mostly.

00:20:21.470 --> 00:20:22.030
<v Speaker 1>Before that,

00:20:23.075 --> 00:20:24.595
<v Speaker 1>it it it was a that was a

00:20:24.595 --> 00:20:25.315
<v Speaker 1>long road.

00:20:25.635 --> 00:20:27.155
<v Speaker 1>We we definitely

00:20:27.155 --> 00:20:29.475
<v Speaker 1>identified Kubernetes as the way we want it

00:20:29.475 --> 00:20:31.875
<v Speaker 1>to go because it allowed us a common

00:20:31.875 --> 00:20:34.850
<v Speaker 1>language to use between our development teams and

00:20:34.850 --> 00:20:36.130
<v Speaker 1>our systems teams.

00:20:36.370 --> 00:20:39.250
<v Speaker 1>And, you know, it wasn't like every app

00:20:39.250 --> 00:20:41.650
<v Speaker 1>wasn't the snowflake or this pet type of

00:20:41.650 --> 00:20:44.290
<v Speaker 1>configuration that we'd set up. So we I

00:20:44.290 --> 00:20:45.970
<v Speaker 1>liked that we kind of came together as

00:20:45.970 --> 00:20:48.290
<v Speaker 1>as, you know, collective teams and decided, you

00:20:48.290 --> 00:20:51.145
<v Speaker 1>know, Kubernetes is our future. We started with

00:20:51.145 --> 00:20:51.705
<v Speaker 1>the

00:20:52.025 --> 00:20:53.304
<v Speaker 1>COPS project

00:20:53.465 --> 00:20:55.385
<v Speaker 1>and, you know, tried spinning our own clusters

00:20:55.385 --> 00:20:56.585
<v Speaker 1>up that way. But

00:20:56.905 --> 00:20:59.305
<v Speaker 1>when you do that, the the open source

00:20:59.305 --> 00:21:01.225
<v Speaker 1>community is great, but it makes it harder

00:21:01.225 --> 00:21:03.410
<v Speaker 1>for big organizations to, you know, call up

00:21:03.410 --> 00:21:05.970
<v Speaker 1>and and ask questions and kind of get

00:21:05.970 --> 00:21:06.690
<v Speaker 1>engaged.

00:21:07.490 --> 00:21:09.410
<v Speaker 1>Again, community is great, but it doesn't give

00:21:09.410 --> 00:21:11.650
<v Speaker 1>you that, like, support contract, and that's what

00:21:11.650 --> 00:21:13.169
<v Speaker 1>big enterprises look for.

00:21:13.490 --> 00:21:15.410
<v Speaker 1>So we went with Rancher

00:21:15.815 --> 00:21:17.735
<v Speaker 1>for a bit and using that as well

00:21:17.735 --> 00:21:20.135
<v Speaker 1>as Terraform to stand up. You'll see you'll

00:21:20.135 --> 00:21:22.215
<v Speaker 1>you'll see why I'm at HashiCorp soon.

00:21:23.095 --> 00:21:24.375
<v Speaker 1>Love Terraform.

00:21:24.775 --> 00:21:27.575
<v Speaker 1>But we used Terraform and Rancher to to

00:21:27.575 --> 00:21:29.575
<v Speaker 1>stand up and and manage our clusters. So

00:21:29.575 --> 00:21:31.950
<v Speaker 1>we were hosting our own control planes and

00:21:31.950 --> 00:21:34.029
<v Speaker 1>hosting our own, worker nodes,

00:21:34.270 --> 00:21:36.590
<v Speaker 1>and that worked really well for a while.

00:21:37.070 --> 00:21:39.630
<v Speaker 1>But, for for anyone that's that's run a

00:21:39.630 --> 00:21:40.989
<v Speaker 1>control plane in Kubernetes,

00:21:41.230 --> 00:21:43.229
<v Speaker 1>the, ETCD data store,

00:21:43.470 --> 00:21:45.309
<v Speaker 1>if you're running that through any abstraction, you

00:21:45.309 --> 00:21:47.565
<v Speaker 1>might have some problems from time to time

00:21:47.565 --> 00:21:49.805
<v Speaker 1>just as life happens and and comes at

00:21:49.805 --> 00:21:50.284
<v Speaker 1>you.

00:21:50.925 --> 00:21:53.565
<v Speaker 1>We saw some issues there and just being

00:21:53.565 --> 00:21:54.605
<v Speaker 1>able to kind of,

00:21:55.725 --> 00:21:56.525
<v Speaker 1>delegate

00:21:56.525 --> 00:21:58.845
<v Speaker 1>away all of those ETCD and control plane

00:21:58.845 --> 00:22:01.165
<v Speaker 1>problems and scaling issues

00:22:01.039 --> 00:22:03.120
<v Speaker 1>to to Amazon was was a very good

00:22:03.120 --> 00:22:04.960
<v Speaker 1>move for our teams,

00:22:05.120 --> 00:22:07.039
<v Speaker 1>and so we really enjoyed that. But that's

00:22:07.039 --> 00:22:08.720
<v Speaker 1>mostly what we would use, and then that

00:22:08.720 --> 00:22:10.080
<v Speaker 1>would give us the time. You know, it

00:22:10.080 --> 00:22:10.960
<v Speaker 1>was it was,

00:22:11.440 --> 00:22:13.520
<v Speaker 1>you know, a little bit behind the current

00:22:13.520 --> 00:22:16.535
<v Speaker 1>releases that were out. And so taking that

00:22:16.535 --> 00:22:18.535
<v Speaker 1>time to be aware of, you know, like

00:22:18.535 --> 00:22:20.375
<v Speaker 1>in 01/16, there were a lot of API

00:22:20.375 --> 00:22:21.174
<v Speaker 1>changes.

00:22:21.335 --> 00:22:23.975
<v Speaker 1>Taking the time to to work through those

00:22:23.975 --> 00:22:26.695
<v Speaker 1>and have the time to adjust was really

00:22:26.695 --> 00:22:29.090
<v Speaker 1>nice. And so, again, you know, that's that's

00:22:29.090 --> 00:22:31.250
<v Speaker 1>that's why I'm excited about that one year

00:22:31.250 --> 00:22:34.370
<v Speaker 1>time cycle for for some of the bigger

00:22:34.370 --> 00:22:36.450
<v Speaker 1>end users and people that aren't able to

00:22:36.450 --> 00:22:38.370
<v Speaker 1>quickly change everything over just because of the

00:22:38.370 --> 00:22:39.970
<v Speaker 1>scale and the size that they're working at.

00:22:41.924 --> 00:22:44.164
<v Speaker 0>Yeah. I'll just echo some of your points

00:22:44.164 --> 00:22:46.005
<v Speaker 0>there. But every production I teach I've ever

00:22:46.005 --> 00:22:47.924
<v Speaker 0>had of a Kubernetes cluster has either been

00:22:47.924 --> 00:22:50.085
<v Speaker 0>QTNS or an NCD. So

00:22:50.565 --> 00:22:52.325
<v Speaker 0>if you can if you're fortunate enough to

00:22:52.325 --> 00:22:53.605
<v Speaker 0>be able to use one of the managed

00:22:53.605 --> 00:22:56.325
<v Speaker 0>services, then definitely you should be using that.

00:22:56.325 --> 00:22:58.459
<v Speaker 0>And and if not, there's cluster API,

00:22:58.620 --> 00:23:01.419
<v Speaker 0>which maybe we'll we'll talk about later.

00:23:02.620 --> 00:23:03.259
<v Speaker 0>So

00:23:03.820 --> 00:23:05.500
<v Speaker 0>back on track now. Right? I'm I'm I'm

00:23:05.500 --> 00:23:07.419
<v Speaker 0>gonna try not to see if I segue

00:23:07.419 --> 00:23:09.740
<v Speaker 0>far too much. But the next major theme

00:23:09.740 --> 00:23:12.794
<v Speaker 0>on the Kubernetes release blog was the storage

00:23:12.794 --> 00:23:14.315
<v Speaker 0>capacity tracking.

00:23:14.794 --> 00:23:15.754
<v Speaker 0>What's that?

00:23:16.395 --> 00:23:19.195
<v Speaker 1>So I'm gonna lump these to these these

00:23:19.755 --> 00:23:20.715
<v Speaker 1>I'm

00:23:20.715 --> 00:23:21.434
<v Speaker 1>reading ahead.

00:23:21.995 --> 00:23:24.715
<v Speaker 1>So there were a lot of really interesting

00:23:24.715 --> 00:23:27.470
<v Speaker 1>features added, you know, in alpha state in

00:23:27.470 --> 00:23:30.270
<v Speaker 1>this release. So there is storage capacity tracking,

00:23:30.430 --> 00:23:32.190
<v Speaker 1>generic ephemeral volumes,

00:23:32.190 --> 00:23:34.429
<v Speaker 1>and CSA volume health monitoring.

00:23:34.670 --> 00:23:36.430
<v Speaker 1>All of this really being that, you know,

00:23:36.430 --> 00:23:37.550
<v Speaker 1>the expectation

00:23:37.550 --> 00:23:40.190
<v Speaker 1>of Kubernetes clusters and and those use cases

00:23:40.190 --> 00:23:43.035
<v Speaker 1>were kind of assuming that you had infinite

00:23:43.035 --> 00:23:44.475
<v Speaker 1>availability to

00:23:45.355 --> 00:23:46.634
<v Speaker 1>to storage

00:23:47.755 --> 00:23:49.915
<v Speaker 1>or or just the volumes that you would

00:23:49.915 --> 00:23:52.075
<v Speaker 1>actually use to store things then. So just

00:23:52.075 --> 00:23:53.915
<v Speaker 1>overall storage. The thought was that that was

00:23:53.915 --> 00:23:54.315
<v Speaker 1>infinite.

00:23:55.380 --> 00:23:58.100
<v Speaker 1>Now we're able to with the CSI in

00:23:58.100 --> 00:24:00.740
<v Speaker 1>place, container storage interface, we have the ability

00:24:00.740 --> 00:24:02.260
<v Speaker 1>to be a little bit more intelligent at

00:24:02.260 --> 00:24:04.980
<v Speaker 1>looking at, you know, their like, they I'll

00:24:04.980 --> 00:24:06.660
<v Speaker 1>just talk about Amazon just because that's where

00:24:06.660 --> 00:24:08.100
<v Speaker 1>I've gotten all that's where I have a

00:24:08.100 --> 00:24:09.945
<v Speaker 1>lot of experience. So when you take a

00:24:09.945 --> 00:24:12.985
<v Speaker 1>look at, you know, EBS volumes versus EFS

00:24:12.985 --> 00:24:13.705
<v Speaker 1>versus

00:24:13.865 --> 00:24:15.785
<v Speaker 1>kind of all those storage classes that you

00:24:15.785 --> 00:24:16.184
<v Speaker 1>have,

00:24:16.905 --> 00:24:19.304
<v Speaker 1>you you also have, like, the I nodes

00:24:19.304 --> 00:24:21.065
<v Speaker 1>and those have a really fast

00:24:21.550 --> 00:24:24.590
<v Speaker 1>local disk storage, the NVIE,

00:24:24.590 --> 00:24:25.390
<v Speaker 1>I believe.

00:24:25.710 --> 00:24:29.310
<v Speaker 1>And so you're not able to really leverage

00:24:29.310 --> 00:24:29.950
<v Speaker 1>that

00:24:30.190 --> 00:24:31.230
<v Speaker 1>those volumes

00:24:31.390 --> 00:24:33.150
<v Speaker 1>because, you know, you're either dealing with block

00:24:33.150 --> 00:24:35.550
<v Speaker 1>storage, you're not really too focused on that

00:24:35.550 --> 00:24:36.830
<v Speaker 1>local storage on that machine.

00:24:37.445 --> 00:24:40.245
<v Speaker 1>I can't remember which Kubernetes release it was,

00:24:40.245 --> 00:24:41.365
<v Speaker 1>but I know that that, you know

00:24:42.165 --> 00:24:43.445
<v Speaker 1>once that was kind of pointed out to

00:24:43.445 --> 00:24:45.045
<v Speaker 1>the community, they said, hey. Can we just

00:24:45.045 --> 00:24:46.645
<v Speaker 1>make use of the disk that we actually

00:24:46.645 --> 00:24:47.924
<v Speaker 1>have hosting

00:24:48.485 --> 00:24:51.045
<v Speaker 1>on these machines? And so that was added

00:24:51.045 --> 00:24:52.559
<v Speaker 1>in. So this allows us to be a

00:24:52.559 --> 00:24:55.119
<v Speaker 1>little bit more direct when it comes to

00:24:55.120 --> 00:24:57.440
<v Speaker 1>how do we divvy up our, you know,

00:24:57.440 --> 00:24:59.040
<v Speaker 1>storage classes and how do we how do

00:24:59.040 --> 00:25:01.520
<v Speaker 1>we actually look at storage. So these these

00:25:01.520 --> 00:25:04.880
<v Speaker 1>three features have really set the, set us

00:25:04.880 --> 00:25:08.135
<v Speaker 1>up, for success in the future for,

00:25:08.295 --> 00:25:09.175
<v Speaker 1>identifying,

00:25:09.175 --> 00:25:11.095
<v Speaker 1>you know, different types of storage classes instead

00:25:11.095 --> 00:25:13.095
<v Speaker 1>of just, you know, throwing an EBS volume

00:25:13.095 --> 00:25:15.255
<v Speaker 1>on everything, which is which is quite nice.

00:25:16.535 --> 00:25:18.535
<v Speaker 1>The the health monitoring is also really good

00:25:18.535 --> 00:25:20.810
<v Speaker 1>too because then you can actually see when

00:25:20.810 --> 00:25:24.090
<v Speaker 1>that volume gets mounted to that machine and

00:25:24.090 --> 00:25:26.250
<v Speaker 1>so on and so forth. So a little

00:25:26.250 --> 00:25:28.330
<v Speaker 1>bit better reporting on that front too, which

00:25:28.330 --> 00:25:30.570
<v Speaker 1>is which is quite helpful because, you know,

00:25:30.570 --> 00:25:32.330
<v Speaker 1>troubleshooting things in the in the,

00:25:33.130 --> 00:25:35.050
<v Speaker 1>troubleshooting things without a lot of information becomes

00:25:35.050 --> 00:25:35.690
<v Speaker 1>very difficult.

00:25:36.615 --> 00:25:39.335
<v Speaker 0>Oh, yeah. Definitely. That's for sure. So those

00:25:39.335 --> 00:25:41.815
<v Speaker 0>three features then are the stories capacity tracking,

00:25:41.815 --> 00:25:44.295
<v Speaker 0>which exposes metrics about the utilization

00:25:44.295 --> 00:25:46.534
<v Speaker 0>of the different CSI

00:25:47.095 --> 00:25:49.400
<v Speaker 0>block devices, etcetera, that we have. I think

00:25:49.400 --> 00:25:51.639
<v Speaker 0>the feature you mentioned there,

00:25:51.960 --> 00:25:54.359
<v Speaker 0>was that the local provisioner from one

00:25:54.520 --> 00:25:56.760
<v Speaker 0>seventeen, I think, that allowed you to actually

00:25:56.760 --> 00:25:57.399
<v Speaker 0>access

00:25:57.640 --> 00:25:59.159
<v Speaker 0>the bare metal disk?

00:25:59.240 --> 00:26:00.519
<v Speaker 0>Like, I remember correctly.

00:26:00.919 --> 00:26:01.960
<v Speaker 1>Exactly. Exactly.

00:26:03.585 --> 00:26:05.505
<v Speaker 0>And then the the second storage one there

00:26:05.505 --> 00:26:07.664
<v Speaker 0>is the generic ephemeral

00:26:07.745 --> 00:26:08.705
<v Speaker 0>volumes.

00:26:08.785 --> 00:26:10.545
<v Speaker 0>What what does that allow me to do

00:26:10.545 --> 00:26:12.865
<v Speaker 0>then from a Kubernetes point of view?

00:26:13.505 --> 00:26:15.345
<v Speaker 1>So what that allows you to do is

00:26:15.345 --> 00:26:17.350
<v Speaker 1>kind of have, like, a working disk. So

00:26:17.350 --> 00:26:19.350
<v Speaker 1>if you have something that you don't want,

00:26:19.350 --> 00:26:21.429
<v Speaker 1>you know, that is ephemeral that you don't

00:26:21.429 --> 00:26:22.950
<v Speaker 1>need around for a long time,

00:26:23.510 --> 00:26:25.350
<v Speaker 1>and you don't want to use your that

00:26:25.350 --> 00:26:26.549
<v Speaker 1>local machine's,

00:26:26.950 --> 00:26:27.750
<v Speaker 1>you know, volume,

00:26:29.465 --> 00:26:30.905
<v Speaker 1>at that point in time, you can kind

00:26:30.905 --> 00:26:32.745
<v Speaker 1>of give it a different disk than the

00:26:32.745 --> 00:26:33.625
<v Speaker 1>root disk

00:26:33.785 --> 00:26:35.865
<v Speaker 1>and then, you know, do whatever operations you

00:26:35.865 --> 00:26:37.385
<v Speaker 1>might need to with that and then kinda

00:26:37.385 --> 00:26:38.825
<v Speaker 1>throw it away, which is which is kinda

00:26:38.825 --> 00:26:41.065
<v Speaker 1>nice. So it's a scratch pad, essentially.

00:26:41.740 --> 00:26:44.299
<v Speaker 0>Oh, okay. So if I have a Kubernetes

00:26:44.299 --> 00:26:46.140
<v Speaker 0>deployment and I want to leverage some of

00:26:46.140 --> 00:26:47.500
<v Speaker 0>the CSI implementations,

00:26:47.500 --> 00:26:49.419
<v Speaker 0>but for ephemeral things, I

00:26:49.980 --> 00:26:51.500
<v Speaker 0>can't even think like, say, want to do

00:26:51.500 --> 00:26:53.179
<v Speaker 0>some of logs, but not under bare metal

00:26:53.179 --> 00:26:55.455
<v Speaker 0>test, but on c CSI implementation, then I

00:26:55.455 --> 00:26:58.254
<v Speaker 0>could request an ephemeral volume from that provider.

00:26:58.495 --> 00:26:58.894
<v Speaker 1>Exactly.

00:26:59.695 --> 00:27:01.535
<v Speaker 1>Yeah. And you might have different needs, you

00:27:01.535 --> 00:27:03.054
<v Speaker 1>know, if you might need something with higher

00:27:03.054 --> 00:27:05.135
<v Speaker 1>IOPS or something like that so you can

00:27:05.135 --> 00:27:07.934
<v Speaker 1>get that that quick, you know, burstability,

00:27:07.934 --> 00:27:10.320
<v Speaker 1>have it be ephemeral, and then and chuck

00:27:10.320 --> 00:27:11.519
<v Speaker 1>it once you're done with it.

00:27:12.160 --> 00:27:14.080
<v Speaker 0>Okay. I I I think I get that

00:27:14.080 --> 00:27:15.200
<v Speaker 0>now. The

00:27:15.440 --> 00:27:16.960
<v Speaker 0>the last part that we were talking about

00:27:16.960 --> 00:27:19.920
<v Speaker 0>there was the CSI volume health monitoring. How

00:27:19.920 --> 00:27:21.520
<v Speaker 0>does that hook in then to those last

00:27:21.520 --> 00:27:23.360
<v Speaker 0>two features, and what what am I getting

00:27:23.360 --> 00:27:24.320
<v Speaker 0>on top there?

00:27:25.165 --> 00:27:27.725
<v Speaker 1>So what that'll tell you is is so

00:27:27.725 --> 00:27:30.445
<v Speaker 1>the, storage capacity tracking, that just kind of

00:27:30.445 --> 00:27:33.005
<v Speaker 1>lets you know, like, hey. We're like, you're

00:27:33.005 --> 00:27:34.205
<v Speaker 1>really leveraging,

00:27:34.365 --> 00:27:36.445
<v Speaker 1>this volume over here. It might not make

00:27:36.445 --> 00:27:38.045
<v Speaker 1>sense because you have a lot of disk

00:27:38.045 --> 00:27:39.720
<v Speaker 1>pressure. It might, you know, you might not

00:27:39.720 --> 00:27:42.120
<v Speaker 1>want to put things over there. The CSI

00:27:42.120 --> 00:27:44.680
<v Speaker 1>volume health monitoring, what that really allows you

00:27:44.680 --> 00:27:46.520
<v Speaker 1>to do is just kind of get a

00:27:46.520 --> 00:27:48.280
<v Speaker 1>sense into the events that are going on.

00:27:48.280 --> 00:27:49.560
<v Speaker 1>So if you have, you know, a ceph

00:27:49.560 --> 00:27:51.720
<v Speaker 1>cluster, if you have EBS volumes, you can

00:27:51.720 --> 00:27:52.840
<v Speaker 1>kind of keep track of

00:27:53.675 --> 00:27:55.275
<v Speaker 1>where they're at and how they're doing. So

00:27:55.275 --> 00:27:56.955
<v Speaker 1>if you have, you know, a machine go

00:27:56.955 --> 00:27:57.674
<v Speaker 1>offline,

00:27:58.075 --> 00:27:59.595
<v Speaker 1>you're gonna wanna know about that.

00:28:00.075 --> 00:28:02.955
<v Speaker 1>If for for anyone that's used EBS volumes,

00:28:02.955 --> 00:28:05.515
<v Speaker 1>those are locked to one availability zone, and

00:28:05.515 --> 00:28:07.195
<v Speaker 1>so that kinda makes things difficult when you

00:28:07.195 --> 00:28:09.779
<v Speaker 1>want to have, you know, say, a Mongo

00:28:10.020 --> 00:28:11.220
<v Speaker 1>DB cluster.

00:28:11.460 --> 00:28:13.540
<v Speaker 1>And if that goes down, you know, and

00:28:13.540 --> 00:28:15.380
<v Speaker 1>you need to bring it up into another

00:28:15.380 --> 00:28:18.020
<v Speaker 1>AZ, you you can't. You have to stay

00:28:18.020 --> 00:28:20.020
<v Speaker 1>in that same AZ. You can fix that

00:28:20.020 --> 00:28:21.540
<v Speaker 1>with EFS,

00:28:21.540 --> 00:28:23.299
<v Speaker 1>which is multi AZ, but

00:28:23.965 --> 00:28:26.125
<v Speaker 1>you're you're still gonna wanna have metrics on

00:28:26.125 --> 00:28:27.484
<v Speaker 1>getting that rescheduled.

00:28:27.804 --> 00:28:31.005
<v Speaker 1>I've I've had nightmares and real life experiences

00:28:31.005 --> 00:28:33.804
<v Speaker 1>with EBS volumes and it taking upwards of,

00:28:33.804 --> 00:28:36.764
<v Speaker 1>like, four, five minutes to rejoin a machine

00:28:36.764 --> 00:28:37.725
<v Speaker 1>and to reconnect.

00:28:38.140 --> 00:28:39.660
<v Speaker 1>And so having a little bit more tooling

00:28:39.660 --> 00:28:41.660
<v Speaker 1>on, you know, where is this volume, how

00:28:41.660 --> 00:28:43.260
<v Speaker 1>is this you know, what's going on, and

00:28:43.260 --> 00:28:45.340
<v Speaker 1>having some more error codes to source from

00:28:45.660 --> 00:28:47.740
<v Speaker 1>make that a little bit easier experience too

00:28:47.740 --> 00:28:49.419
<v Speaker 1>so that you can kind of tune and

00:28:49.419 --> 00:28:51.260
<v Speaker 1>and set up the cluster exactly the way

00:28:51.260 --> 00:28:52.780
<v Speaker 1>that you'd want when it comes to volumes.

00:28:53.965 --> 00:28:56.445
<v Speaker 0>Nice. So one nineteen is a pretty good

00:28:56.445 --> 00:28:58.605
<v Speaker 0>release then for as far as stateful applications

00:28:58.605 --> 00:29:00.124
<v Speaker 0>and storage goes in.

00:29:00.365 --> 00:29:01.484
<v Speaker 1>Oh, absolutely.

00:29:03.804 --> 00:29:05.565
<v Speaker 0>Do you have any strong opinions on running

00:29:05.565 --> 00:29:07.245
<v Speaker 0>stateful applications on Kubernetes?

00:29:08.730 --> 00:29:11.610
<v Speaker 1>I'd so so abs I've I've I've been

00:29:11.610 --> 00:29:13.210
<v Speaker 1>there. I I feel the pain when it

00:29:13.210 --> 00:29:15.610
<v Speaker 1>comes to supporting, you know, stateful applications.

00:29:15.930 --> 00:29:17.770
<v Speaker 1>I've been lucky enough that a lot of

00:29:17.770 --> 00:29:20.410
<v Speaker 1>the applications I've worked with have been stateless,

00:29:20.705 --> 00:29:22.784
<v Speaker 1>so not too much of a concern.

00:29:23.345 --> 00:29:25.665
<v Speaker 1>I've run though, conversely,

00:29:25.665 --> 00:29:27.345
<v Speaker 1>I've run Elasticsearch.

00:29:27.425 --> 00:29:28.625
<v Speaker 1>I've run MongoDB.

00:29:29.585 --> 00:29:32.065
<v Speaker 1>I've I I've played around with running Postgres,

00:29:32.065 --> 00:29:33.665
<v Speaker 1>you know. I'd I'd also, like, pull down

00:29:33.665 --> 00:29:36.299
<v Speaker 1>RDS or something like that, but definitely work

00:29:36.299 --> 00:29:39.500
<v Speaker 1>with Postgres and Helm chart. And it's I

00:29:39.500 --> 00:29:41.820
<v Speaker 1>I really like that you're able to do

00:29:41.820 --> 00:29:44.379
<v Speaker 1>things like that, but it just is it's,

00:29:44.539 --> 00:29:45.980
<v Speaker 1>you know, it's it's something that you have

00:29:45.980 --> 00:29:48.220
<v Speaker 1>to think about is are you okay with

00:29:48.220 --> 00:29:50.715
<v Speaker 1>that? Because you will run into problems. You

00:29:50.715 --> 00:29:52.875
<v Speaker 1>absolutely will no matter how much tooling is

00:29:52.875 --> 00:29:53.835
<v Speaker 1>available to you.

00:29:54.315 --> 00:29:57.355
<v Speaker 1>Managed services are always easier to a, set

00:29:57.355 --> 00:29:59.675
<v Speaker 1>up and to b or b, you know,

00:29:59.675 --> 00:30:02.169
<v Speaker 1>have managed because they're managed services.

00:30:02.409 --> 00:30:04.409
<v Speaker 1>And you have support. You can call people

00:30:04.409 --> 00:30:06.089
<v Speaker 1>and and work with them on that front.

00:30:06.169 --> 00:30:06.729
<v Speaker 1>But,

00:30:07.850 --> 00:30:10.009
<v Speaker 1>you know, it's it's it's an extra layer

00:30:10.009 --> 00:30:12.009
<v Speaker 1>that you really have to think about. You

00:30:12.009 --> 00:30:13.529
<v Speaker 1>have to think about if that were to

00:30:13.529 --> 00:30:15.210
<v Speaker 1>go down, you have to think about your

00:30:15.210 --> 00:30:18.095
<v Speaker 1>backup process. You have to think about and

00:30:18.095 --> 00:30:21.295
<v Speaker 1>and do disaster recovery scenarios. So if you're

00:30:21.295 --> 00:30:22.895
<v Speaker 1>able to do that, I'm all for it.

00:30:22.895 --> 00:30:24.095
<v Speaker 1>I think it makes a lot of sense.

00:30:24.095 --> 00:30:25.455
<v Speaker 1>And it's a lot of fun because you

00:30:25.455 --> 00:30:27.455
<v Speaker 1>don't normally get that level of insight into

00:30:27.455 --> 00:30:29.855
<v Speaker 1>the types of workloads and applications that you

00:30:29.855 --> 00:30:30.175
<v Speaker 1>support.

00:30:31.300 --> 00:30:32.820
<v Speaker 1>But at the same point in time, that

00:30:32.820 --> 00:30:34.180
<v Speaker 1>is a lot of you know, that can

00:30:34.180 --> 00:30:36.420
<v Speaker 1>be a very big time sync. And if

00:30:36.420 --> 00:30:37.860
<v Speaker 1>you're, you know, if you're a smaller team,

00:30:37.860 --> 00:30:39.300
<v Speaker 1>that becomes a little bit harder to do.

00:30:39.300 --> 00:30:41.940
<v Speaker 1>So, you know, smaller teams or teams that

00:30:41.940 --> 00:30:44.020
<v Speaker 1>support a lot of applications, I'd definitely lean

00:30:44.020 --> 00:30:45.140
<v Speaker 1>towards suggesting

00:30:45.265 --> 00:30:46.705
<v Speaker 1>a managed service. Otherwise,

00:30:47.105 --> 00:30:49.345
<v Speaker 1>stateful sets. Let's let's go. Let's learn some

00:30:49.345 --> 00:30:51.424
<v Speaker 1>things because that's that that can be beneficial

00:30:51.424 --> 00:30:54.144
<v Speaker 1>too. That's its own, that's its own, payment

00:30:54.225 --> 00:30:56.065
<v Speaker 1>kind of kind of plan.

00:30:56.625 --> 00:30:59.280
<v Speaker 0>Yeah. I think either you've been extremely lucky

00:30:59.280 --> 00:31:00.799
<v Speaker 0>in your career. I'm a bit of a

00:31:00.799 --> 00:31:03.280
<v Speaker 0>masochist. But you all the databases you mentioned

00:31:03.280 --> 00:31:06.320
<v Speaker 0>there are distributed by default. With MongoDB, you

00:31:06.320 --> 00:31:09.360
<v Speaker 0>know, already handles data working across multiple nodes.

00:31:09.360 --> 00:31:10.960
<v Speaker 0>Whereas I seem to have been very unlucky

00:31:10.960 --> 00:31:12.835
<v Speaker 0>in my career and work with databases that

00:31:12.835 --> 00:31:15.395
<v Speaker 0>did not support that. This makes my life

00:31:15.395 --> 00:31:19.075
<v Speaker 0>a lot more painful, difficult, and fun. Let's

00:31:19.075 --> 00:31:20.034
<v Speaker 0>go with fun.

00:31:20.995 --> 00:31:23.395
<v Speaker 1>I I I I maybe at some point

00:31:23.395 --> 00:31:24.835
<v Speaker 1>in time, we can we can do some

00:31:24.835 --> 00:31:26.850
<v Speaker 1>live coding and get, like, a cockroach DB

00:31:26.850 --> 00:31:28.850
<v Speaker 1>cluster set up and something that's supposed to

00:31:28.850 --> 00:31:31.570
<v Speaker 1>be easy and support SQL native calls. Maybe

00:31:31.570 --> 00:31:33.090
<v Speaker 1>we can we can find some middle ground

00:31:33.090 --> 00:31:34.690
<v Speaker 1>between us at some point in time.

00:31:35.650 --> 00:31:37.010
<v Speaker 0>Oh, yes. Definitely.

00:31:37.330 --> 00:31:38.690
<v Speaker 0>I'd be up for that session for sure.

00:31:39.784 --> 00:31:41.065
<v Speaker 0>Because I I mean, I work for a

00:31:41.065 --> 00:31:43.145
<v Speaker 0>bare metal company, which means there are no

00:31:43.145 --> 00:31:45.945
<v Speaker 0>managed services. So even though I've never worked

00:31:45.945 --> 00:31:48.184
<v Speaker 0>with a distributed database previously, I'm now working

00:31:48.184 --> 00:31:50.345
<v Speaker 0>for a company that doesn't offer managed services.

00:31:50.345 --> 00:31:52.345
<v Speaker 0>So I maybe it's masochism as my

00:31:54.809 --> 00:31:57.130
<v Speaker 0>okay. So volumes are cool. I really love

00:31:57.130 --> 00:31:59.529
<v Speaker 0>that. I think anything that makes stateful applications

00:31:59.529 --> 00:32:02.169
<v Speaker 0>in Kubernetes easier for people to consume is

00:32:02.169 --> 00:32:02.969
<v Speaker 0>fantastic.

00:32:04.409 --> 00:32:06.409
<v Speaker 0>The the next one on this list that

00:32:06.409 --> 00:32:08.565
<v Speaker 0>we have shocked me a little bit, and

00:32:08.565 --> 00:32:09.925
<v Speaker 0>I don't know if I'm just being really

00:32:09.925 --> 00:32:10.884
<v Speaker 0>naive or not.

00:32:11.285 --> 00:32:14.005
<v Speaker 0>Angus graduates to general availability.

00:32:14.485 --> 00:32:16.404
<v Speaker 0>Was that not generally available?

00:32:17.205 --> 00:32:20.085
<v Speaker 1>Right? That's I'd I'm not kidding you despite

00:32:20.085 --> 00:32:22.860
<v Speaker 1>being, you know, this true, you know, taxicab

00:32:22.860 --> 00:32:23.580
<v Speaker 1>confession.

00:32:23.820 --> 00:32:25.660
<v Speaker 1>Yeah. I I thought the same thing walking

00:32:25.660 --> 00:32:28.059
<v Speaker 1>into the 01/19 release. I I had had

00:32:28.060 --> 00:32:29.340
<v Speaker 1>a double take the first time I saw

00:32:29.340 --> 00:32:31.020
<v Speaker 1>it. I like, wait a minute. What? It

00:32:31.020 --> 00:32:33.980
<v Speaker 1>was a a Gmail beta, you know, type

00:32:33.980 --> 00:32:35.260
<v Speaker 1>so we're getting rid of the beta. It's

00:32:35.260 --> 00:32:37.175
<v Speaker 1>like, wait a minute. That was beta type

00:32:37.175 --> 00:32:38.294
<v Speaker 1>moment for sure.

00:32:39.495 --> 00:32:41.815
<v Speaker 1>When I I can't remember the and and

00:32:41.815 --> 00:32:43.415
<v Speaker 1>forgive me. You know, I'm still still booting

00:32:43.415 --> 00:32:45.095
<v Speaker 1>up with some caffeine here, but

00:32:45.575 --> 00:32:49.015
<v Speaker 1>I can't remember which Kubernetes enhancement proposal it

00:32:49.015 --> 00:32:51.490
<v Speaker 1>was. But there was one about kind of

00:32:51.490 --> 00:32:52.370
<v Speaker 1>reevaluating

00:32:52.370 --> 00:32:55.490
<v Speaker 1>and looking at that alpha beta GA type

00:32:55.730 --> 00:32:56.530
<v Speaker 1>classifications

00:32:56.530 --> 00:32:57.250
<v Speaker 1>because

00:32:57.330 --> 00:32:59.409
<v Speaker 1>we would have the situation where

00:32:59.730 --> 00:33:01.650
<v Speaker 1>something would go into it's a chicken and

00:33:01.650 --> 00:33:03.635
<v Speaker 1>egg problem. When you have something go into

00:33:03.635 --> 00:33:06.514
<v Speaker 1>alpha, you've got it into Kubernetes. That's fantastic.

00:33:06.595 --> 00:33:08.595
<v Speaker 1>But most of the time, it's hidden behind

00:33:08.595 --> 00:33:10.275
<v Speaker 1>the feature flag that you'll have to enable

00:33:10.275 --> 00:33:12.035
<v Speaker 1>or, you know, pass the cubelet and then

00:33:12.035 --> 00:33:13.634
<v Speaker 1>that will get supported.

00:33:14.434 --> 00:33:17.140
<v Speaker 1>And with anything alpha, you know, it doesn't

00:33:17.140 --> 00:33:18.580
<v Speaker 1>really scream production,

00:33:18.580 --> 00:33:20.660
<v Speaker 1>you know, nor should you in in many

00:33:20.660 --> 00:33:23.140
<v Speaker 1>cases unless you're just you you're knowingly you've

00:33:23.140 --> 00:33:24.900
<v Speaker 1>accepted the risks and you're testing out a

00:33:24.900 --> 00:33:27.060
<v Speaker 1>new feature. Never turn on alpha. That's my

00:33:27.060 --> 00:33:29.700
<v Speaker 1>my recommendation. I think the any lawyer is

00:33:29.700 --> 00:33:30.740
<v Speaker 1>going to back that up too.

00:33:31.435 --> 00:33:33.434
<v Speaker 1>But when so

00:33:33.835 --> 00:33:36.155
<v Speaker 1>we get into this situation where all of

00:33:36.155 --> 00:33:38.155
<v Speaker 1>these new alpha features are really cool. Like,

00:33:38.155 --> 00:33:39.595
<v Speaker 1>look at the ones that we're talking about.

00:33:39.595 --> 00:33:41.035
<v Speaker 1>They sound fantastic.

00:33:41.195 --> 00:33:44.075
<v Speaker 1>But if you don't have that beta or

00:33:44.075 --> 00:33:46.480
<v Speaker 1>higher type of certainty that it's actually going

00:33:46.480 --> 00:33:48.559
<v Speaker 1>to go live at some point in time,

00:33:48.960 --> 00:33:50.480
<v Speaker 1>you you you you don't have a lot

00:33:50.480 --> 00:33:51.919
<v Speaker 1>of certainty. And that's what we like when

00:33:51.919 --> 00:33:53.440
<v Speaker 1>we're working with infrastructure.

00:33:53.840 --> 00:33:54.320
<v Speaker 1>So

00:33:55.039 --> 00:33:57.440
<v Speaker 1>the the language was changed there and just

00:33:57.440 --> 00:33:59.485
<v Speaker 1>kind of that that process because a lot

00:33:59.485 --> 00:34:01.085
<v Speaker 1>of people would come forward and say, hey.

00:34:01.085 --> 00:34:02.524
<v Speaker 1>I have this thing in alpha. Can we

00:34:02.524 --> 00:34:04.205
<v Speaker 1>just move it to beta? Because that will

00:34:04.205 --> 00:34:06.524
<v Speaker 1>get people to use it. People are, you

00:34:06.524 --> 00:34:07.885
<v Speaker 1>know, typically

00:34:07.885 --> 00:34:08.605
<v Speaker 1>not

00:34:08.764 --> 00:34:09.485
<v Speaker 1>not

00:34:09.804 --> 00:34:12.364
<v Speaker 1>jumping to use alpha features. So that makes

00:34:12.364 --> 00:34:14.045
<v Speaker 1>it hard to move to that beta stage.

00:34:14.330 --> 00:34:16.170
<v Speaker 1>Even if there is that level of interest,

00:34:16.170 --> 00:34:17.770
<v Speaker 1>it can still be pretty difficult.

00:34:18.010 --> 00:34:19.610
<v Speaker 1>So the language and just kind of that

00:34:19.610 --> 00:34:21.530
<v Speaker 1>overall process was changed. Again, I can't remember

00:34:21.530 --> 00:34:24.170
<v Speaker 1>the cap that that that one was around,

00:34:24.170 --> 00:34:27.290
<v Speaker 1>but that's why the ingress, you know, working

00:34:27.290 --> 00:34:27.929
<v Speaker 1>as it was,

00:34:28.535 --> 00:34:30.215
<v Speaker 1>It just needed some final things to push

00:34:30.215 --> 00:34:32.215
<v Speaker 1>it across the finish line so that we

00:34:32.215 --> 00:34:34.375
<v Speaker 1>could deem it as stable in GA and

00:34:34.375 --> 00:34:36.375
<v Speaker 1>then, you know, start start working with the

00:34:36.375 --> 00:34:38.614
<v Speaker 1>community and more features. So that's that's one

00:34:38.614 --> 00:34:39.415
<v Speaker 1>I'm pretty

00:34:39.895 --> 00:34:41.815
<v Speaker 1>excited about. It's one of my personal favorites

00:34:41.980 --> 00:34:44.219
<v Speaker 1>along with the longer support time is the

00:34:44.219 --> 00:34:46.780
<v Speaker 1>is the Ingress finally moves to GA. Woo.

00:34:47.580 --> 00:34:49.260
<v Speaker 0>Yeah. I think it's one of those

00:34:49.660 --> 00:34:51.340
<v Speaker 0>one of those things that

00:34:51.500 --> 00:34:52.140
<v Speaker 0>because

00:34:53.180 --> 00:34:55.545
<v Speaker 0>I'm gonna get this wrong. We are just

00:34:55.545 --> 00:34:56.665
<v Speaker 0>so conditioned,

00:34:56.665 --> 00:34:59.224
<v Speaker 0>I feel, as users of Kubernetes to v

00:34:59.224 --> 00:35:01.224
<v Speaker 0>one beta one. That to me, that was

00:35:01.224 --> 00:35:03.385
<v Speaker 0>GA, like, because we just had all those

00:35:03.385 --> 00:35:05.545
<v Speaker 0>APIs for so long. And, of course, now

00:35:05.545 --> 00:35:07.065
<v Speaker 0>we've got v one, but I just always

00:35:07.065 --> 00:35:09.305
<v Speaker 0>assumed that ingress was one of those one

00:35:09.305 --> 00:35:11.490
<v Speaker 0>of those objects. It was just available. I

00:35:11.490 --> 00:35:13.730
<v Speaker 0>mean, every Kubernetes cluster I've had for years

00:35:13.730 --> 00:35:15.730
<v Speaker 0>now has used ingress. And I never once

00:35:15.730 --> 00:35:17.570
<v Speaker 0>thought for a second it was something that

00:35:17.570 --> 00:35:18.530
<v Speaker 0>was on beta.

00:35:19.330 --> 00:35:19.650
<v Speaker 0>So

00:35:20.130 --> 00:35:22.050
<v Speaker 1>Same. And it works so well. It's it's

00:35:22.050 --> 00:35:23.570
<v Speaker 1>worked so well. So it's you know, just

00:35:23.570 --> 00:35:25.250
<v Speaker 1>like Gmail did for eleven years, I think

00:35:25.250 --> 00:35:27.494
<v Speaker 1>it was, before it went GA. You know?

00:35:27.494 --> 00:35:30.214
<v Speaker 1>It's Ingress did did everything you needed it

00:35:30.214 --> 00:35:30.695
<v Speaker 1>to.

00:35:31.815 --> 00:35:32.455
<v Speaker 0>Yeah.

00:35:32.855 --> 00:35:34.214
<v Speaker 0>At at least yeah. You're right. It's always

00:35:34.214 --> 00:35:36.215
<v Speaker 0>work. So it's fine. It's good.

00:35:36.775 --> 00:35:39.415
<v Speaker 0>And I think yeah. It's it's

00:35:39.250 --> 00:35:41.170
<v Speaker 0>it's it's nice for people to understand how

00:35:41.170 --> 00:35:43.330
<v Speaker 0>that new feature thing works from KEP to

00:35:43.330 --> 00:35:45.330
<v Speaker 0>alpha to beta and to to GA. And

00:35:45.330 --> 00:35:46.930
<v Speaker 0>I think you can just cover that in

00:35:46.930 --> 00:35:49.170
<v Speaker 0>a complete journey of a KEP, which is

00:35:49.170 --> 00:35:50.210
<v Speaker 0>nice and cool.

00:35:51.785 --> 00:35:53.145
<v Speaker 0>And and go visit the GA, you can

00:35:53.145 --> 00:35:54.985
<v Speaker 0>start using it, I guess, you know, if

00:35:54.985 --> 00:35:55.785
<v Speaker 0>you weren't going.

00:35:56.665 --> 00:35:59.065
<v Speaker 0>I think that that they changed the

00:35:59.945 --> 00:36:01.865
<v Speaker 0>the namespace as well. Was that the release

00:36:01.865 --> 00:36:04.105
<v Speaker 0>or the previous one? I can't remember now.

00:36:04.105 --> 00:36:04.425
<v Speaker 0>But

00:36:05.270 --> 00:36:06.790
<v Speaker 0>I think that's when I first realized that

00:36:06.790 --> 00:36:08.869
<v Speaker 0>things weren't as I always expect them to

00:36:08.869 --> 00:36:09.350
<v Speaker 0>be.

00:36:10.150 --> 00:36:11.190
<v Speaker 0>Cool.

00:36:11.750 --> 00:36:13.030
<v Speaker 0>So we've got two

00:36:13.190 --> 00:36:15.190
<v Speaker 0>more we got three more, but there's two

00:36:15.190 --> 00:36:16.710
<v Speaker 0>more I think we're probably gonna group together

00:36:16.710 --> 00:36:18.950
<v Speaker 0>now. The next two major themes are structured

00:36:18.950 --> 00:36:21.085
<v Speaker 0>logging and the keylog methods.

00:36:21.965 --> 00:36:22.765
<v Speaker 0>What are those?

00:36:23.805 --> 00:36:27.165
<v Speaker 1>So structured logging is going to be fantastic

00:36:27.485 --> 00:36:28.285
<v Speaker 1>because

00:36:28.365 --> 00:36:29.645
<v Speaker 1>well, it is.

00:36:30.205 --> 00:36:33.730
<v Speaker 1>It's really fantastic because it allows us now

00:36:33.809 --> 00:36:35.490
<v Speaker 1>we to to get standard logs out of

00:36:35.490 --> 00:36:36.210
<v Speaker 1>Kubernetes.

00:36:36.609 --> 00:36:39.410
<v Speaker 1>We could do things with standard out and

00:36:39.410 --> 00:36:40.450
<v Speaker 1>standard error,

00:36:40.769 --> 00:36:41.250
<v Speaker 1>and,

00:36:41.730 --> 00:36:43.250
<v Speaker 1>you know, that made it made it easy

00:36:43.250 --> 00:36:45.410
<v Speaker 1>when we had a log aggregation layer in

00:36:45.410 --> 00:36:48.175
<v Speaker 1>our stack, like Elastic searcher or something else.

00:36:48.895 --> 00:36:50.494
<v Speaker 1>And then, you know but it did become

00:36:50.494 --> 00:36:52.734
<v Speaker 1>kind of a pain point when we started

00:36:52.734 --> 00:36:55.375
<v Speaker 1>indexing those logs and because you were never

00:36:55.375 --> 00:36:58.255
<v Speaker 1>really you got logs, but they just weren't

00:36:58.255 --> 00:37:00.655
<v Speaker 1>in, you know, a similar format. So that

00:37:00.655 --> 00:37:03.900
<v Speaker 1>indexing became difficult and then sourcing what data

00:37:03.900 --> 00:37:06.060
<v Speaker 1>you actually needed to see became difficult.

00:37:06.859 --> 00:37:08.940
<v Speaker 1>That, you know, mutating those logs

00:37:09.020 --> 00:37:11.340
<v Speaker 1>downstream before you put them into your login

00:37:11.340 --> 00:37:14.220
<v Speaker 1>cluster, that that becomes an issue. So finally,

00:37:14.220 --> 00:37:14.860
<v Speaker 1>you know,

00:37:15.180 --> 00:37:17.420
<v Speaker 1>the the there's there's a feature now where

00:37:17.585 --> 00:37:20.065
<v Speaker 1>we actually have everything time stamped

00:37:20.065 --> 00:37:21.744
<v Speaker 1>and then you have, like, a logical

00:37:21.825 --> 00:37:23.904
<v Speaker 1>standard out and standard error to actually source

00:37:23.904 --> 00:37:24.464
<v Speaker 1>from.

00:37:25.105 --> 00:37:27.184
<v Speaker 1>There's we'll we'll kinda go through a a

00:37:27.184 --> 00:37:28.865
<v Speaker 1>quick demo on that one in here in

00:37:28.865 --> 00:37:30.350
<v Speaker 1>a little bit, but you'll just be able

00:37:30.350 --> 00:37:32.270
<v Speaker 1>to see those lines are are now different

00:37:32.270 --> 00:37:34.270
<v Speaker 1>because they start with that time stamp and

00:37:34.270 --> 00:37:36.670
<v Speaker 1>it's just in the standard format. So even

00:37:36.670 --> 00:37:38.430
<v Speaker 1>if you, you know, advise your teams to

00:37:38.430 --> 00:37:40.910
<v Speaker 1>log in JSON or anything else, you're if

00:37:40.910 --> 00:37:42.750
<v Speaker 1>you're just doing, you know, line by line

00:37:42.750 --> 00:37:44.755
<v Speaker 1>type of logging, that's going to be consistent

00:37:44.755 --> 00:37:45.955
<v Speaker 1>now and you don't need to worry so

00:37:45.955 --> 00:37:48.995
<v Speaker 1>much about that or making crazy reg regular

00:37:48.995 --> 00:37:49.795
<v Speaker 1>expressions

00:37:50.115 --> 00:37:51.875
<v Speaker 1>to deal that and to capture those, you

00:37:51.875 --> 00:37:52.595
<v Speaker 1>know. I'm sure

00:37:53.475 --> 00:37:55.475
<v Speaker 1>everyone agrees with me that there's better time

00:37:55.715 --> 00:37:58.275
<v Speaker 1>better better time spent than on regular expressions.

00:37:58.275 --> 00:38:00.150
<v Speaker 1>Yeah. Apologies to those of you that really

00:38:00.150 --> 00:38:00.870
<v Speaker 1>enjoy it.

00:38:01.349 --> 00:38:02.950
<v Speaker 0>I have wasted so much of my life

00:38:02.950 --> 00:38:06.070
<v Speaker 0>writing regex and grok parsers for Logstash and

00:38:06.070 --> 00:38:08.950
<v Speaker 0>Telegraph and all these other tools, but just

00:38:08.950 --> 00:38:10.470
<v Speaker 0>the and it's JSON is such

00:38:11.109 --> 00:38:13.990
<v Speaker 0>it just makes everything so much easier. It's

00:38:14.515 --> 00:38:16.115
<v Speaker 0>I think the way that we consume all

00:38:16.115 --> 00:38:17.395
<v Speaker 0>of these logs and like I said, we're

00:38:17.395 --> 00:38:18.915
<v Speaker 0>gonna do a demo in a few minutes.

00:38:19.475 --> 00:38:21.475
<v Speaker 0>People will hopefully just see right away the

00:38:21.475 --> 00:38:23.795
<v Speaker 0>power that we get, the flexibility we're gonna

00:38:23.795 --> 00:38:24.915
<v Speaker 0>get from this approach.

00:38:25.955 --> 00:38:28.440
<v Speaker 1>I I had the spoilers. I was not

00:38:28.440 --> 00:38:29.880
<v Speaker 1>able to get the the the thing I

00:38:29.880 --> 00:38:31.240
<v Speaker 1>really like, I just haven't been able to

00:38:31.240 --> 00:38:33.400
<v Speaker 1>replicate on that front with the logging is

00:38:33.400 --> 00:38:35.720
<v Speaker 1>that output in JSON. But so I'll show

00:38:35.720 --> 00:38:38.200
<v Speaker 1>you what, you know, just just regular

00:38:38.360 --> 00:38:41.045
<v Speaker 1>standard out and error looks like. But being

00:38:41.045 --> 00:38:42.485
<v Speaker 1>able to once you're able to tap into

00:38:42.485 --> 00:38:44.165
<v Speaker 1>that JSON, this feature, you know, both those

00:38:44.165 --> 00:38:46.485
<v Speaker 1>features are in alpha now. But being able

00:38:46.485 --> 00:38:47.845
<v Speaker 1>to work with that and see that get

00:38:47.845 --> 00:38:50.085
<v Speaker 1>to GA is so exciting because,

00:38:50.245 --> 00:38:52.565
<v Speaker 1>you know, like like David said, lost years

00:38:52.565 --> 00:38:54.820
<v Speaker 1>of my life. And there's I I don't

00:38:54.820 --> 00:38:56.820
<v Speaker 1>see any right now, but at least, like,

00:38:56.820 --> 00:38:58.820
<v Speaker 1>15 gray hairs that have that will be

00:38:58.820 --> 00:39:01.140
<v Speaker 1>coming out from a regular expressions one, I'm

00:39:01.140 --> 00:39:01.620
<v Speaker 1>sure.

00:39:02.500 --> 00:39:04.340
<v Speaker 0>Yeah. And I I don't wanna

00:39:04.740 --> 00:39:06.900
<v Speaker 0>make any naive assumptions, but, you know, it's

00:39:06.900 --> 00:39:09.075
<v Speaker 0>like it's more formality, right, for such a

00:39:09.075 --> 00:39:10.915
<v Speaker 0>log in to colonize an alpha just because

00:39:10.915 --> 00:39:12.515
<v Speaker 0>it's a new feature. I don't really see

00:39:12.515 --> 00:39:14.835
<v Speaker 0>what would hold out from graduating to beta

00:39:14.835 --> 00:39:17.635
<v Speaker 0>and stable other than formality of possession.

00:39:18.115 --> 00:39:18.835
<v Speaker 0>Exactly.

00:39:19.635 --> 00:39:21.955
<v Speaker 1>It's just kinda that that steep time that,

00:39:21.955 --> 00:39:23.460
<v Speaker 1>you know, just time to work with the

00:39:23.460 --> 00:39:26.020
<v Speaker 1>community. And then that new KLOG method they've

00:39:26.020 --> 00:39:28.580
<v Speaker 1>given, you know, the community the the project

00:39:28.580 --> 00:39:30.820
<v Speaker 1>that with that feature, you're able to kind

00:39:30.820 --> 00:39:32.740
<v Speaker 1>of take your time and then kind of

00:39:32.740 --> 00:39:35.060
<v Speaker 1>lean everything over into that new logging library

00:39:35.060 --> 00:39:36.660
<v Speaker 1>such that you can really leverage it,

00:39:37.415 --> 00:39:39.575
<v Speaker 1>you know, despite despite what's what's coming out

00:39:39.575 --> 00:39:41.015
<v Speaker 1>of the logs as it is right now.

00:39:41.494 --> 00:39:43.655
<v Speaker 0>Sweet. Awesome. I'm looking forward to playing with

00:39:43.655 --> 00:39:46.295
<v Speaker 0>that. Alright. We've got one more thing on

00:39:46.295 --> 00:39:47.895
<v Speaker 0>our super duper list, which is

00:39:49.190 --> 00:39:51.430
<v Speaker 0>the Kubelet client

00:39:51.430 --> 00:39:53.430
<v Speaker 0>CLS certificate rotation.

00:39:55.190 --> 00:39:57.350
<v Speaker 1>So this one is really cool.

00:39:57.590 --> 00:39:58.950
<v Speaker 1>Really should have made my list. I don't

00:39:58.950 --> 00:40:00.630
<v Speaker 1>know why I haven't talked more about it.

00:40:00.950 --> 00:40:01.670
<v Speaker 1>But

00:40:02.035 --> 00:40:02.755
<v Speaker 1>I

00:40:02.835 --> 00:40:04.755
<v Speaker 1>think mostly because it's it's been something that

00:40:04.755 --> 00:40:06.115
<v Speaker 1>we've been used to and that has kind

00:40:06.115 --> 00:40:08.355
<v Speaker 1>of been done, you know, behind the scenes.

00:40:08.355 --> 00:40:10.675
<v Speaker 1>And that edit that is the the Kubelet

00:40:10.675 --> 00:40:12.915
<v Speaker 1>client TLS certificate rotation.

00:40:13.875 --> 00:40:16.675
<v Speaker 1>So that that did happen in the past,

00:40:16.675 --> 00:40:18.810
<v Speaker 1>but that was happening within the outside of

00:40:18.810 --> 00:40:20.170
<v Speaker 1>the cluster mechanism.

00:40:20.730 --> 00:40:22.970
<v Speaker 1>So with this feature that's gone GA,

00:40:23.050 --> 00:40:25.050
<v Speaker 1>that finally is brought into the cluster

00:40:25.450 --> 00:40:27.530
<v Speaker 1>so that as needed, the control plane can

00:40:27.530 --> 00:40:29.450
<v Speaker 1>kind of roll those client certificates,

00:40:29.610 --> 00:40:30.890
<v Speaker 1>and it's just not something that you need

00:40:30.890 --> 00:40:32.335
<v Speaker 1>to think about. So when the Kubelet calls

00:40:32.335 --> 00:40:34.415
<v Speaker 1>in and it needs that new one, it's

00:40:34.415 --> 00:40:36.255
<v Speaker 1>it's just a lot more seamless. You reduce

00:40:36.255 --> 00:40:37.535
<v Speaker 1>that level of latency,

00:40:37.855 --> 00:40:40.975
<v Speaker 1>and, and, you know, everything just works trademark.

00:40:42.495 --> 00:40:44.575
<v Speaker 0>There you heard it from Taylor himself. Everything

00:40:44.575 --> 00:40:46.095
<v Speaker 0>is just going to work.

00:40:48.089 --> 00:40:50.010
<v Speaker 1>Just got back to go. See you later.

00:40:52.329 --> 00:40:53.050
<v Speaker 0>So

00:40:53.849 --> 00:40:55.849
<v Speaker 0>so what we've covered I'm just sharing my

00:40:55.849 --> 00:40:58.410
<v Speaker 0>screen here. It's pretty much the majority of

00:40:58.410 --> 00:40:59.450
<v Speaker 0>this article,

00:40:59.530 --> 00:41:01.130
<v Speaker 0>which is the release article

00:41:01.545 --> 00:41:03.305
<v Speaker 0>that just tells you what's new. At the

00:41:03.305 --> 00:41:04.505
<v Speaker 0>bottom, we do have a couple of things

00:41:04.505 --> 00:41:05.785
<v Speaker 0>that we haven't touched on,

00:41:06.105 --> 00:41:07.785
<v Speaker 0>and some of them are quite important. So

00:41:07.785 --> 00:41:09.385
<v Speaker 0>the first one is is that the set

00:41:09.385 --> 00:41:11.945
<v Speaker 0>comp integration has now graduated to stable.

00:41:13.305 --> 00:41:15.305
<v Speaker 0>Assuming things go well, we will take a

00:41:15.305 --> 00:41:17.160
<v Speaker 0>look at that and how that works, I'm

00:41:17.160 --> 00:41:19.559
<v Speaker 0>moving away from the old annotation approach to

00:41:19.559 --> 00:41:22.280
<v Speaker 0>the new actual pod spec level stuff, which

00:41:22.280 --> 00:41:23.240
<v Speaker 0>is really cool.

00:41:24.920 --> 00:41:26.440
<v Speaker 0>And I'm not sure if there's anything else

00:41:26.440 --> 00:41:28.520
<v Speaker 0>here that you wanna quickly run over, like

00:41:28.520 --> 00:41:29.240
<v Speaker 0>the

00:41:30.035 --> 00:41:32.275
<v Speaker 0>run multiple schedule and profiles. I mean, that

00:41:32.275 --> 00:41:34.115
<v Speaker 0>sounds kind of important,

00:41:34.115 --> 00:41:36.035
<v Speaker 0>but I don't think I fully understand it.

00:41:36.035 --> 00:41:37.955
<v Speaker 0>Is that something you're comfortable talking about?

00:41:38.995 --> 00:41:40.835
<v Speaker 1>I think with most of these so I'm

00:41:40.835 --> 00:41:42.435
<v Speaker 1>still honestly, I'm still working through a lot

00:41:42.435 --> 00:41:44.115
<v Speaker 1>of these myself and just kind of trying

00:41:44.115 --> 00:41:46.349
<v Speaker 1>to find, you know I'm

00:41:46.349 --> 00:41:47.790
<v Speaker 1>having a lot of moments

00:41:47.790 --> 00:41:48.510
<v Speaker 1>after

00:41:48.750 --> 00:41:50.990
<v Speaker 1>after the release, getting to kind of see

00:41:50.990 --> 00:41:53.630
<v Speaker 1>these three things worked through, see the tests

00:41:53.630 --> 00:41:55.390
<v Speaker 1>that, you know, they've been put through in

00:41:55.390 --> 00:41:56.030
<v Speaker 1>Pro.

00:41:56.670 --> 00:41:59.230
<v Speaker 1>But it it's still working quite a quite

00:41:59.230 --> 00:42:00.984
<v Speaker 1>a few of these and and and how

00:42:00.984 --> 00:42:03.065
<v Speaker 1>they apply to my workloads. But yeah. So

00:42:03.065 --> 00:42:04.265
<v Speaker 1>none none that I could talk to you

00:42:04.265 --> 00:42:06.025
<v Speaker 1>right now with the TLBR,

00:42:06.025 --> 00:42:07.785
<v Speaker 1>but very excited too.

00:42:08.185 --> 00:42:09.945
<v Speaker 0>Yeah. Well, I mean, all of these are

00:42:09.945 --> 00:42:11.705
<v Speaker 0>links to the caps and issues so people

00:42:11.705 --> 00:42:13.865
<v Speaker 0>can obviously go if if anything there makes

00:42:13.865 --> 00:42:15.785
<v Speaker 0>you peaks your interest, then feel free to

00:42:15.785 --> 00:42:17.380
<v Speaker 0>go click and take a look at it.

00:42:17.460 --> 00:42:18.820
<v Speaker 0>The other thing we are gonna take a

00:42:18.820 --> 00:42:20.660
<v Speaker 0>look at today, however, is the immutable secrets

00:42:20.660 --> 00:42:22.500
<v Speaker 0>and conflict maps, which hopefully we can get

00:42:22.500 --> 00:42:24.100
<v Speaker 0>that working and show you how cool that

00:42:24.100 --> 00:42:26.500
<v Speaker 0>is or painful depending on your prerogative.

00:42:27.220 --> 00:42:30.500
<v Speaker 0>And another one I really like, which is

00:42:29.645 --> 00:42:31.165
<v Speaker 0>less of a major change, but I think

00:42:31.165 --> 00:42:32.925
<v Speaker 0>it's been graduating over the last couple of

00:42:32.925 --> 00:42:35.724
<v Speaker 0>releases, is the North Topology Manager, which actually

00:42:35.724 --> 00:42:38.045
<v Speaker 0>allows you to do Rawkode data center where

00:42:38.045 --> 00:42:40.204
<v Speaker 0>service reading, which is really, really cool too.

00:42:40.204 --> 00:42:41.724
<v Speaker 0>And maybe it's something that we will touch

00:42:41.724 --> 00:42:42.285
<v Speaker 0>on

00:42:42.685 --> 00:42:43.484
<v Speaker 0>another day.

00:42:45.260 --> 00:42:47.180
<v Speaker 0>Okay. I think it's time to get

00:42:47.420 --> 00:42:48.300
<v Speaker 0>hands on.

00:42:49.260 --> 00:42:50.540
<v Speaker 0>You feeling brave?

00:42:51.180 --> 00:42:52.300
<v Speaker 1>Always.

00:42:53.579 --> 00:42:55.180
<v Speaker 0>Alright. So I'm not sure if I'm not

00:42:55.180 --> 00:42:56.220
<v Speaker 1>sure if that's a good thing or a

00:42:56.220 --> 00:42:57.099
<v Speaker 1>character flaw, but

00:42:58.455 --> 00:43:00.135
<v Speaker 0>It's a good thing. It's a good thing.

00:43:00.375 --> 00:43:02.695
<v Speaker 0>Okay. So we're gonna do the immutable secrets

00:43:02.695 --> 00:43:05.495
<v Speaker 0>and contact maps, seccomp GA, and structured logging.

00:43:05.495 --> 00:43:06.615
<v Speaker 0>Do you have a preference of where you

00:43:06.615 --> 00:43:07.495
<v Speaker 0>would like to start?

00:43:09.175 --> 00:43:10.855
<v Speaker 1>I can kick it off with yeah. So

00:43:10.855 --> 00:43:13.210
<v Speaker 1>if if if you wouldn't mind grabbing the

00:43:13.210 --> 00:43:15.369
<v Speaker 1>immutable secrets and seccomp, I I I can

00:43:15.369 --> 00:43:17.609
<v Speaker 1>kick it off kinda easy breezy with some

00:43:17.609 --> 00:43:19.050
<v Speaker 1>structured logging for sure.

00:43:19.529 --> 00:43:20.810
<v Speaker 0>Alright. Let's do it.

00:43:21.529 --> 00:43:23.930
<v Speaker 0>Cool. Let me share my screen

00:43:24.170 --> 00:43:26.329
<v Speaker 0>and click the right buttons, and then we

00:43:26.329 --> 00:43:27.289
<v Speaker 0>should

00:43:29.105 --> 00:43:29.985
<v Speaker 0>be

00:43:30.465 --> 00:43:31.185
<v Speaker 0>there.

00:43:33.744 --> 00:43:37.105
<v Speaker 1>Alright. So everyone should see my

00:43:38.225 --> 00:43:40.545
<v Speaker 1>terminal. Let me get that at a decent

00:43:40.545 --> 00:43:41.745
<v Speaker 1>size for everyone.

00:43:41.905 --> 00:43:42.225
<v Speaker 1>So

00:43:43.370 --> 00:43:45.850
<v Speaker 1>so I have spun up actually, let me

00:43:45.850 --> 00:43:47.290
<v Speaker 1>let me get rid of this.

00:43:48.010 --> 00:43:50.090
<v Speaker 1>So I'd

00:43:50.090 --> 00:43:52.090
<v Speaker 1>say like, I'm gonna delete things with you

00:43:52.090 --> 00:43:52.890
<v Speaker 1>live.

00:43:52.970 --> 00:43:54.010
<v Speaker 1>Okay. So

00:43:54.570 --> 00:43:56.490
<v Speaker 1>the kind project that I talked about a

00:43:56.490 --> 00:43:59.265
<v Speaker 1>little bit earlier is really fantastic because it

00:43:59.265 --> 00:44:00.705
<v Speaker 1>allows for you to

00:44:01.184 --> 00:44:05.184
<v Speaker 1>spin up a local Kubernetes cluster. So I'm

00:44:05.184 --> 00:44:07.984
<v Speaker 1>actually gonna cat out this this configuration.

00:44:07.984 --> 00:44:09.585
<v Speaker 1>So I was working a little bit earlier

00:44:09.585 --> 00:44:10.785
<v Speaker 1>with the seccomp,

00:44:10.785 --> 00:44:14.065
<v Speaker 1>which I've, you know, happily happily

00:44:13.400 --> 00:44:14.520
<v Speaker 1>hot potatoed

00:44:14.520 --> 00:44:15.880
<v Speaker 1>for the David for

00:44:16.120 --> 00:44:18.760
<v Speaker 1>for one of our next demos. But you

00:44:18.760 --> 00:44:20.920
<v Speaker 1>can see that you're I'm able to specify

00:44:20.920 --> 00:44:23.800
<v Speaker 1>the 01/19 release here. And then working with

00:44:23.800 --> 00:44:25.960
<v Speaker 1>some of those those profiles, you can see

00:44:25.960 --> 00:44:28.035
<v Speaker 1>that there are different arguments and and ways

00:44:28.035 --> 00:44:29.795
<v Speaker 1>in which you can define this,

00:44:30.194 --> 00:44:32.755
<v Speaker 1>when you're spinning up your your Kubernetes cluster.

00:44:33.234 --> 00:44:35.635
<v Speaker 1>Please note that up here in the role,

00:44:35.635 --> 00:44:38.035
<v Speaker 1>that's actually going to be the different machines,

00:44:38.035 --> 00:44:40.990
<v Speaker 1>you know, the virtual machines here that I'm

00:44:40.990 --> 00:44:42.670
<v Speaker 1>going to be spinning up and working with.

00:44:42.670 --> 00:44:44.670
<v Speaker 1>So huge thank you to the the team

00:44:44.670 --> 00:44:45.870
<v Speaker 1>that manages kind.

00:44:46.430 --> 00:44:48.510
<v Speaker 1>It's it really makes it easy when you're

00:44:48.510 --> 00:44:51.150
<v Speaker 1>working with, with local workloads,

00:44:51.470 --> 00:44:53.310
<v Speaker 1>in addition to, you know, things like mini

00:44:53.310 --> 00:44:56.645
<v Speaker 1>cube and Docker for Mac, Windows, Linux, and

00:44:56.645 --> 00:44:59.045
<v Speaker 1>spinning up those Kubernetes cluster. But the benefit

00:44:59.045 --> 00:45:00.805
<v Speaker 1>here is that it makes it very easy

00:45:00.964 --> 00:45:02.805
<v Speaker 1>to go ahead and and grab the the

00:45:02.805 --> 00:45:04.964
<v Speaker 1>latest version there. So so I've deleted that

00:45:04.964 --> 00:45:07.045
<v Speaker 1>out. I'm gonna do kind,

00:45:07.045 --> 00:45:08.645
<v Speaker 1>and let's create

00:45:08.645 --> 00:45:09.365
<v Speaker 1>a cluster.

00:45:10.490 --> 00:45:12.170
<v Speaker 1>Also, like the tooling just because it's, you

00:45:12.170 --> 00:45:14.329
<v Speaker 1>know, all the command line items just make

00:45:14.329 --> 00:45:15.210
<v Speaker 1>a lot of sense.

00:45:15.530 --> 00:45:18.089
<v Speaker 1>I also do very much like the emojis.

00:45:18.089 --> 00:45:20.330
<v Speaker 1>You can see here is an image.

00:45:21.049 --> 00:45:22.970
<v Speaker 1>You got machines here with the with the

00:45:22.970 --> 00:45:24.890
<v Speaker 1>nodes, the package. I really like that.

00:45:25.369 --> 00:45:27.025
<v Speaker 1>As you configuration,

00:45:27.025 --> 00:45:27.985
<v Speaker 1>you gotta scroll.

00:45:28.705 --> 00:45:31.345
<v Speaker 1>Control plane, you have game controller. Fantastic.

00:45:32.465 --> 00:45:34.385
<v Speaker 1>But I think I think I figured out

00:45:34.385 --> 00:45:36.225
<v Speaker 1>most of these, but I'm not a %

00:45:36.225 --> 00:45:37.985
<v Speaker 1>sure. But we'll see we'll see how well

00:45:37.985 --> 00:45:39.985
<v Speaker 1>my my skills of relation are as we

00:45:39.985 --> 00:45:41.550
<v Speaker 1>go through this. But the good thing about

00:45:41.550 --> 00:45:42.990
<v Speaker 1>this too is that it doesn't really take

00:45:42.990 --> 00:45:43.950
<v Speaker 1>that much time.

00:45:44.350 --> 00:45:46.030
<v Speaker 1>I think it's the control plane step, and

00:45:46.030 --> 00:45:47.790
<v Speaker 1>when it joins the worker nodes to that

00:45:47.790 --> 00:45:50.190
<v Speaker 1>control plane, that's, like, when you're waiting for

00:45:50.430 --> 00:45:52.990
<v Speaker 1>twenty, thirty seconds. It's it's typically not that

00:45:52.990 --> 00:45:55.214
<v Speaker 1>long. So, hopefully, you don't have to eat

00:45:55.214 --> 00:45:55.935
<v Speaker 1>my shoe,

00:45:56.335 --> 00:45:57.535
<v Speaker 1>after after,

00:45:57.694 --> 00:46:00.494
<v Speaker 1>saying that. But, so, yeah, you have,

00:46:00.894 --> 00:46:03.535
<v Speaker 1>CNI, storage class. This is working on. It

00:46:03.535 --> 00:46:05.135
<v Speaker 1>takes just a little bit of time.

00:46:05.934 --> 00:46:08.319
<v Speaker 1>But then you're and then it writes that

00:46:08.319 --> 00:46:09.600
<v Speaker 1>cube config,

00:46:09.920 --> 00:46:12.000
<v Speaker 1>to your local file system,

00:46:12.240 --> 00:46:13.440
<v Speaker 1>and you don't need to worry about that

00:46:13.440 --> 00:46:15.599
<v Speaker 1>either. So once this once this is done,

00:46:15.599 --> 00:46:17.119
<v Speaker 1>I'll kinda just show you that we have

00:46:17.119 --> 00:46:19.040
<v Speaker 1>a a working cluster, and then I'm just

00:46:19.040 --> 00:46:21.359
<v Speaker 1>gonna tail the logs to cube d or,

00:46:21.520 --> 00:46:24.205
<v Speaker 1>core DNS to to show you what those

00:46:24.205 --> 00:46:25.645
<v Speaker 1>standard logs look like.

00:46:26.205 --> 00:46:26.765
<v Speaker 1>Cool.

00:46:27.325 --> 00:46:29.325
<v Speaker 1>So we have a cluster.

00:46:29.805 --> 00:46:30.685
<v Speaker 1>Let me

00:46:31.565 --> 00:46:33.645
<v Speaker 1>so I a couple things for those of

00:46:33.645 --> 00:46:36.440
<v Speaker 1>you following along at home. I've aliased the

00:46:36.440 --> 00:46:38.680
<v Speaker 1>cube control just to k. So if you

00:46:38.680 --> 00:46:40.760
<v Speaker 1>see me typing k, I'll I might bounce

00:46:40.760 --> 00:46:43.080
<v Speaker 1>back and forth depending on the commands, but

00:46:43.240 --> 00:46:45.800
<v Speaker 1>that's that's my alias and setup.

00:46:46.119 --> 00:46:48.515
<v Speaker 1>I also use two two tools.

00:46:48.835 --> 00:46:50.915
<v Speaker 1>One is cube context

00:46:51.315 --> 00:46:53.555
<v Speaker 1>and cube namespace, and that just makes it

00:46:53.555 --> 00:46:54.995
<v Speaker 1>a little bit easier for me to switch

00:46:54.995 --> 00:46:56.115
<v Speaker 1>between clusters

00:46:57.075 --> 00:46:59.075
<v Speaker 1>because, you know, I'll typically manage quite a

00:46:59.075 --> 00:47:01.235
<v Speaker 1>few. So if we go ahead and we

00:47:01.235 --> 00:47:02.515
<v Speaker 1>take a look at the nodes,

00:47:03.160 --> 00:47:05.960
<v Speaker 1>kind switches over that context to the cluster

00:47:05.960 --> 00:47:07.160
<v Speaker 1>that you just spun up so you don't

00:47:07.160 --> 00:47:08.440
<v Speaker 1>need to switch to it, which is kinda

00:47:08.440 --> 00:47:10.280
<v Speaker 1>nice. So we can see that we have

00:47:10.280 --> 00:47:12.840
<v Speaker 1>four machines here. One is the control plane,

00:47:12.840 --> 00:47:14.840
<v Speaker 1>and then we have these worker machines here.

00:47:15.720 --> 00:47:17.400
<v Speaker 1>If I jump into

00:47:17.640 --> 00:47:18.440
<v Speaker 1>the

00:47:18.995 --> 00:47:19.715
<v Speaker 1>oops.

00:47:20.035 --> 00:47:22.835
<v Speaker 1>I jump into cube system here, make it

00:47:22.835 --> 00:47:23.875
<v Speaker 1>a little bit easier for me to get

00:47:23.875 --> 00:47:25.875
<v Speaker 1>these pods and see what's up. So we

00:47:25.875 --> 00:47:27.555
<v Speaker 1>can see we have our whole control plane

00:47:27.555 --> 00:47:28.115
<v Speaker 1>here

00:47:28.435 --> 00:47:30.675
<v Speaker 1>and say, I want to go ahead and

00:47:30.675 --> 00:47:32.115
<v Speaker 1>take a look at this I don't want

00:47:32.115 --> 00:47:33.395
<v Speaker 0>to define that. Get out of

00:47:34.050 --> 00:47:35.410
<v Speaker 1>I want to take a look at the

00:47:35.410 --> 00:47:37.410
<v Speaker 1>logs here and

00:47:38.610 --> 00:47:39.570
<v Speaker 1>follow along.

00:47:39.890 --> 00:47:41.730
<v Speaker 1>We can see that, you know, here are

00:47:41.730 --> 00:47:44.050
<v Speaker 1>some of the errors. That's not so hot,

00:47:44.050 --> 00:47:46.050
<v Speaker 1>but, you know, I'm I'm assuming everything's working

00:47:46.050 --> 00:47:48.055
<v Speaker 1>working now. We can see that we have

00:47:48.055 --> 00:47:50.055
<v Speaker 1>time stamps, and then we have these, you

00:47:50.055 --> 00:47:52.215
<v Speaker 1>know, just the regular body of the message.

00:47:52.535 --> 00:47:54.615
<v Speaker 1>Beforehand, you know, you would get the separate

00:47:54.615 --> 00:47:55.895
<v Speaker 1>pieces of information

00:47:56.055 --> 00:47:57.735
<v Speaker 1>and data, but if we let's take a

00:47:57.735 --> 00:48:00.055
<v Speaker 0>look at another pod. Let's take a look

00:48:00.055 --> 00:48:00.855
<v Speaker 0>at

00:48:01.990 --> 00:48:03.830
<v Speaker 0>let's take a look at this one.

00:48:06.950 --> 00:48:08.870
<v Speaker 1>But you can see here, you know, now

00:48:08.870 --> 00:48:10.950
<v Speaker 1>everything is standard in the fact that we

00:48:10.950 --> 00:48:13.750
<v Speaker 1>can always rely on that timestamp being first

00:48:14.005 --> 00:48:16.085
<v Speaker 1>and then getting that that, you know, downstream

00:48:16.085 --> 00:48:18.005
<v Speaker 1>data in the body of that message later.

00:48:18.005 --> 00:48:19.845
<v Speaker 1>Again, I apologize. I was not able to

00:48:19.845 --> 00:48:22.485
<v Speaker 1>get the, the JSON view,

00:48:22.965 --> 00:48:24.724
<v Speaker 1>up for for this. I think there's a

00:48:24.724 --> 00:48:26.965
<v Speaker 1>couple, flags I needed to double check and

00:48:26.965 --> 00:48:29.350
<v Speaker 1>take a look at my setup. But you

00:48:29.350 --> 00:48:31.750
<v Speaker 1>are able to export this as JSON if

00:48:31.750 --> 00:48:33.430
<v Speaker 1>you specify the right commands,

00:48:33.830 --> 00:48:36.070
<v Speaker 1>and that is going to be that's gonna

00:48:36.070 --> 00:48:37.670
<v Speaker 1>obviously be a lot easier to kind of

00:48:37.670 --> 00:48:39.750
<v Speaker 1>look through and then filter on as you're

00:48:39.750 --> 00:48:41.510
<v Speaker 1>try trying to tail logs and things like

00:48:41.510 --> 00:48:43.755
<v Speaker 1>that. So really excited to see how this

00:48:43.755 --> 00:48:45.835
<v Speaker 1>evolves over time and as we're able to,

00:48:45.835 --> 00:48:47.755
<v Speaker 1>you know, filter on, like, I only want

00:48:47.755 --> 00:48:49.115
<v Speaker 1>to see error logs and,

00:48:49.355 --> 00:48:51.355
<v Speaker 1>you know, the biggest one being that it's

00:48:51.355 --> 00:48:54.234
<v Speaker 1>so difficult to kind of link together if

00:48:54.234 --> 00:48:56.570
<v Speaker 1>you have a deployment that's three pods to

00:48:56.570 --> 00:48:58.330
<v Speaker 1>kind of tile those logs together so that

00:48:58.330 --> 00:49:00.090
<v Speaker 1>you get a comprehensive view as to what's

00:49:00.090 --> 00:49:01.930
<v Speaker 1>going on without having having to stand up

00:49:01.930 --> 00:49:04.570
<v Speaker 1>your own login cluster. So that's that's structured

00:49:04.570 --> 00:49:05.290
<v Speaker 1>logging.

00:49:06.170 --> 00:49:09.210
<v Speaker 0>Nice. And because I am feeling brave

00:49:09.444 --> 00:49:11.525
<v Speaker 0>and I have been working on the JSON

00:49:11.525 --> 00:49:14.325
<v Speaker 0>stuff, I'm going to get that go.

00:49:15.204 --> 00:49:16.164
<v Speaker 0>So

00:49:16.005 --> 00:49:16.484
<v Speaker 0>and

00:49:18.885 --> 00:49:20.964
<v Speaker 0>I'll I'm using many cube instead of cane.

00:49:22.700 --> 00:49:23.820
<v Speaker 0>Oh, and I I will

00:49:24.540 --> 00:49:26.540
<v Speaker 0>I'm not feeling good because I can't even

00:49:26.540 --> 00:49:28.620
<v Speaker 0>spell. I will feel brave in the lead

00:49:28.620 --> 00:49:29.180
<v Speaker 0>night.

00:49:29.980 --> 00:49:31.420
<v Speaker 0>Yes. And

00:49:33.660 --> 00:49:35.740
<v Speaker 0>so the way this would work,

00:49:36.220 --> 00:49:37.820
<v Speaker 0>I feel particularly

00:49:37.820 --> 00:49:39.475
<v Speaker 0>brave. What up?

00:49:39.875 --> 00:49:41.795
<v Speaker 0>Let's jump over here. So I have a

00:49:43.474 --> 00:49:45.474
<v Speaker 0>I guess it's maybe too brave, but I've

00:49:45.474 --> 00:49:47.474
<v Speaker 0>been working on a branch of many cubes

00:49:47.474 --> 00:49:49.315
<v Speaker 0>to make this a bit easier. So

00:49:53.280 --> 00:49:55.040
<v Speaker 0>let's let's look at what this would work.

00:49:55.040 --> 00:49:56.880
<v Speaker 0>Let's let's look at how this would work

00:49:56.880 --> 00:49:59.200
<v Speaker 0>normally. So is that bigger? Hold on. There

00:49:59.200 --> 00:50:01.840
<v Speaker 0>we go. So many kubelers to pass dash

00:50:01.840 --> 00:50:04.320
<v Speaker 0>dash extra config, which allows you to specify

00:50:04.320 --> 00:50:06.000
<v Speaker 0>extra parameters that can go to each of

00:50:06.000 --> 00:50:07.360
<v Speaker 0>the Kubernetes components.

00:50:07.760 --> 00:50:09.095
<v Speaker 0>But what I could do here is I

00:50:09.095 --> 00:50:10.694
<v Speaker 0>can say that I wanna pass something to

00:50:10.694 --> 00:50:12.615
<v Speaker 0>the kubelet, and the key that I wanna

00:50:12.615 --> 00:50:15.015
<v Speaker 0>modify is gonna be the logging format.

00:50:15.335 --> 00:50:17.575
<v Speaker 0>And I can specify that JSON like so.

00:50:17.974 --> 00:50:19.015
<v Speaker 0>Unfortunately,

00:50:19.494 --> 00:50:21.415
<v Speaker 0>I I could do that for every component.

00:50:21.415 --> 00:50:24.030
<v Speaker 0>Requires doing this and saying, hey. Let's do

00:50:24.030 --> 00:50:25.310
<v Speaker 0>the scheduler too.

00:50:26.510 --> 00:50:28.430
<v Speaker 0>And then that have to do what else?

00:50:28.430 --> 00:50:30.670
<v Speaker 0>That would be the API server. That would

00:50:30.670 --> 00:50:32.990
<v Speaker 0>be the proxy. That would be core DNS.

00:50:33.150 --> 00:50:35.310
<v Speaker 0>Like, that lane would get super painful.

00:50:35.470 --> 00:50:37.550
<v Speaker 0>And I'm a very lazy developer. So

00:50:37.985 --> 00:50:40.305
<v Speaker 0>what I started doing with this ability where

00:50:40.305 --> 00:50:42.865
<v Speaker 0>we could just specify dash dash login format

00:50:42.865 --> 00:50:44.625
<v Speaker 0>equals JSON, and you'll see that I've added

00:50:44.625 --> 00:50:46.705
<v Speaker 0>some crappy characters to the end because

00:50:47.265 --> 00:50:48.865
<v Speaker 0>I actually don't know how to write tests

00:50:48.865 --> 00:50:50.465
<v Speaker 0>for many cubes. I wanted to make sure

00:50:50.465 --> 00:50:52.065
<v Speaker 0>it didn't work as well,

00:50:52.865 --> 00:50:54.000
<v Speaker 0>and that was the way that I did

00:50:54.000 --> 00:50:55.440
<v Speaker 0>it. So you can see here

00:50:56.000 --> 00:50:57.600
<v Speaker 0>that it just says, hey. This is not

00:50:57.600 --> 00:50:59.760
<v Speaker 0>a supported login format. So let's just do

00:50:59.760 --> 00:51:01.120
<v Speaker 0>that again with JSON.

00:51:01.920 --> 00:51:03.520
<v Speaker 0>Many cubes should take

00:51:06.494 --> 00:51:08.414
<v Speaker 0>I mean, I look bad, but I'm I'm

00:51:08.414 --> 00:51:09.855
<v Speaker 0>gonna assume it's gonna be okay.

00:51:10.894 --> 00:51:13.615
<v Speaker 0>It should just take oh, it's not okay.

00:51:13.615 --> 00:51:14.895
<v Speaker 0>It's there to delete.

00:51:15.055 --> 00:51:16.654
<v Speaker 0>Maybe I had one cluster and a half

00:51:16.654 --> 00:51:17.535
<v Speaker 0>set up state there.

00:51:19.440 --> 00:51:20.880
<v Speaker 0>If that doesn't work, was gonna be able

00:51:20.880 --> 00:51:23.920
<v Speaker 0>to wait. But it should just take roughly

00:51:23.920 --> 00:51:26.080
<v Speaker 0>about one minute, maybe a little bit less,

00:51:26.080 --> 00:51:27.600
<v Speaker 0>get us a working note.

00:51:28.480 --> 00:51:30.480
<v Speaker 0>And what we'll see following on but we

00:51:30.480 --> 00:51:32.755
<v Speaker 0>can already see the parameters being added now

00:51:32.755 --> 00:51:34.915
<v Speaker 0>to the different components, so schedule, the kubelet,

00:51:34.915 --> 00:51:36.995
<v Speaker 0>the controller manager, and the API server.

00:51:37.715 --> 00:51:38.835
<v Speaker 0>And we should be able to pull out

00:51:38.835 --> 00:51:40.435
<v Speaker 0>those logs, much missing by the tail of

00:51:40.435 --> 00:51:42.835
<v Speaker 0>that, only ours will be in adjacent representation.

00:51:43.075 --> 00:51:44.995
<v Speaker 0>The cool thing about that is it's gonna

00:51:44.995 --> 00:51:46.910
<v Speaker 0>be really easy for that to be parsed

00:51:46.910 --> 00:51:47.550
<v Speaker 0>by

00:51:47.710 --> 00:51:51.070
<v Speaker 0>long stash, elastic search, telegraph, vector, whatever tooling

00:51:51.070 --> 00:51:52.750
<v Speaker 0>you have in your setup.

00:51:53.950 --> 00:51:56.270
<v Speaker 0>Cool. It didn't crash this thing, so I'm

00:51:56.270 --> 00:51:56.750
<v Speaker 0>happy.

00:51:57.470 --> 00:51:58.670
<v Speaker 0>So if I run,

00:51:59.375 --> 00:52:01.615
<v Speaker 0>I do not have the fancy tool like

00:52:01.615 --> 00:52:03.695
<v Speaker 0>you do, cube namespace.

00:52:03.775 --> 00:52:06.015
<v Speaker 0>But I could do key dash n cube

00:52:06.015 --> 00:52:07.775
<v Speaker 0>system, and I'm gonna pull out the API

00:52:07.775 --> 00:52:09.935
<v Speaker 0>server logs. And when I do that,

00:52:12.734 --> 00:52:13.694
<v Speaker 0>it's not JSON.

00:52:18.440 --> 00:52:20.520
<v Speaker 0>So that's my I knew it was different.

00:52:20.520 --> 00:52:22.520
<v Speaker 0>That just means that my fork didn't work.

00:52:24.520 --> 00:52:27.080
<v Speaker 0>So let's just quickly do this the all

00:52:27.080 --> 00:52:29.000
<v Speaker 0>the way there, and I'll just do the

00:52:29.000 --> 00:52:30.040
<v Speaker 0>API server.

00:52:30.600 --> 00:52:33.025
<v Speaker 0>That was really unfortunate. I was so confident.

00:52:33.025 --> 00:52:33.665
<v Speaker 0>Was there.

00:52:35.985 --> 00:52:37.905
<v Speaker 1>I swear it's a it's as soon as

00:52:37.905 --> 00:52:39.825
<v Speaker 1>you do a live demo, that's a there's

00:52:39.825 --> 00:52:42.225
<v Speaker 1>something that happens. You lose your magical powers.

00:52:42.225 --> 00:52:43.665
<v Speaker 1>Don't know what it is, but, yeah, being

00:52:43.665 --> 00:52:45.745
<v Speaker 1>alone, you know, and just that solitude, that

00:52:45.745 --> 00:52:46.145
<v Speaker 1>focus

00:52:46.839 --> 00:52:47.560
<v Speaker 1>really

00:52:47.640 --> 00:52:49.320
<v Speaker 1>really brings it out of the demo.

00:52:49.640 --> 00:52:51.079
<v Speaker 0>Yeah. I don't know what I did wrong

00:52:51.079 --> 00:52:53.080
<v Speaker 0>there because I have tested this.

00:52:53.319 --> 00:52:55.800
<v Speaker 0>And I've told her on the API server,

00:52:56.440 --> 00:52:57.960
<v Speaker 0>and I did enable it on the API

00:52:57.960 --> 00:53:01.065
<v Speaker 0>server. Oh, well, it doesn't matter. So

00:53:01.705 --> 00:53:04.265
<v Speaker 0>what I did there is API server. Now

00:53:04.265 --> 00:53:05.705
<v Speaker 0>if this doesn't work again,

00:53:06.585 --> 00:53:08.585
<v Speaker 0>that means the API server just ignored it.

00:53:08.585 --> 00:53:10.105
<v Speaker 0>Oh, it did. Okay.

00:53:10.265 --> 00:53:11.224
<v Speaker 0>So you can see here,

00:53:13.230 --> 00:53:15.310
<v Speaker 0>we now actually have JSON for every single

00:53:15.310 --> 00:53:17.150
<v Speaker 0>line. And and if I just pick up

00:53:17.150 --> 00:53:18.670
<v Speaker 0>on a keynote page for j q

00:53:23.870 --> 00:53:24.430
<v Speaker 0>we

00:53:24.750 --> 00:53:26.990
<v Speaker 0>have JSON. It's easy to parse. I can

00:53:26.990 --> 00:53:28.190
<v Speaker 0>use other tools with it.

00:53:29.205 --> 00:53:30.085
<v Speaker 0>Much good.

00:53:30.805 --> 00:53:32.405
<v Speaker 0>That's it. A structured login is not one

00:53:32.405 --> 00:53:34.965
<v Speaker 0>of those things that has a substantial amount

00:53:34.965 --> 00:53:36.245
<v Speaker 0>of change. I think most of the changes

00:53:36.245 --> 00:53:36.965
<v Speaker 0>came

00:53:37.285 --> 00:53:40.165
<v Speaker 0>from you reusing the different key log methods

00:53:40.165 --> 00:53:41.125
<v Speaker 0>within the instrumentation.

00:53:42.510 --> 00:53:44.350
<v Speaker 0>But nice. Good.

00:53:44.670 --> 00:53:46.350
<v Speaker 0>I'm not gonna ask script anymore. It's just

00:53:46.430 --> 00:53:48.270
<v Speaker 0>I'm not brave. I'm not not at half

00:53:48.510 --> 00:53:50.430
<v Speaker 0>past six on a Monday.

00:53:52.990 --> 00:53:55.950
<v Speaker 0>Okay. So structured logging. Very cool. We like

00:53:55.950 --> 00:53:57.905
<v Speaker 0>it. We're looking forward to see tools, take

00:53:57.905 --> 00:54:00.465
<v Speaker 0>advantage of them, and store logs with

00:54:00.865 --> 00:54:02.465
<v Speaker 0>good debugging stuff.

00:54:03.025 --> 00:54:04.465
<v Speaker 0>What did we say was next?

00:54:05.665 --> 00:54:06.545
<v Speaker 1>What

00:54:06.545 --> 00:54:08.305
<v Speaker 1>is next? I think it was the I'm

00:54:08.305 --> 00:54:10.385
<v Speaker 1>not sure if you wanna save the oh,

00:54:10.385 --> 00:54:12.300
<v Speaker 1>this this one should be pretty easy. Immutable

00:54:12.300 --> 00:54:14.140
<v Speaker 1>secrets and config maps.

00:54:14.380 --> 00:54:16.220
<v Speaker 0>Yes. Right. Okay.

00:54:17.020 --> 00:54:17.740
<v Speaker 0>So

00:54:18.780 --> 00:54:20.300
<v Speaker 0>at pop open

00:54:20.860 --> 00:54:21.740
<v Speaker 0>Code

00:54:23.820 --> 00:54:25.195
<v Speaker 0>and let's deploy

00:54:26.474 --> 00:54:28.075
<v Speaker 0>I'm not gonna do We're doing a config

00:54:28.075 --> 00:54:28.635
<v Speaker 0>map.

00:54:31.915 --> 00:54:33.355
<v Speaker 0>And we'll call this

00:54:33.595 --> 00:54:35.195
<v Speaker 0>RTFM,

00:54:35.195 --> 00:54:38.395
<v Speaker 0>and we can just have any arbitrary value

00:54:38.395 --> 00:54:39.115
<v Speaker 0>like so.

00:54:39.990 --> 00:54:42.070
<v Speaker 0>I guess we should just show

00:54:42.710 --> 00:54:45.190
<v Speaker 0>and maybe talk about how this works currently

00:54:45.190 --> 00:54:47.510
<v Speaker 0>without making any modification because I don't think

00:54:47.510 --> 00:54:49.270
<v Speaker 0>people really understand what

00:54:49.830 --> 00:54:50.710
<v Speaker 0>happens

00:54:51.030 --> 00:54:52.550
<v Speaker 0>and why this is a bit of a

00:54:52.550 --> 00:54:53.430
<v Speaker 0>pain point. So

00:54:54.065 --> 00:54:55.345
<v Speaker 0>if we do apply

00:54:55.745 --> 00:54:56.385
<v Speaker 0>this,

00:54:56.545 --> 00:54:58.385
<v Speaker 0>then we can do a two p I'm

00:54:58.385 --> 00:54:59.825
<v Speaker 0>in bash, and then I'm not getting my

00:54:59.825 --> 00:55:00.545
<v Speaker 0>Elliot.

00:55:02.545 --> 00:55:03.905
<v Speaker 0>Config map

00:55:04.385 --> 00:55:05.425
<v Speaker 0>r t f m.

00:55:08.120 --> 00:55:10.360
<v Speaker 0>If I modify this value in fact, I

00:55:10.360 --> 00:55:11.560
<v Speaker 0>didn't show the value.

00:55:15.720 --> 00:55:17.880
<v Speaker 0>You can see here, key is 1545.

00:55:17.880 --> 00:55:20.840
<v Speaker 0>Now if I change this and reapply it,

00:55:21.815 --> 00:55:24.615
<v Speaker 0>I run git, we have this updated value.

00:55:25.095 --> 00:55:26.695
<v Speaker 0>That could be considered

00:55:26.935 --> 00:55:28.615
<v Speaker 0>good or bad depending

00:55:28.615 --> 00:55:31.255
<v Speaker 0>on what you're doing with your Kubernetes cluster.

00:55:31.255 --> 00:55:33.015
<v Speaker 0>So I'll speak from my own experience, and

00:55:33.015 --> 00:55:34.615
<v Speaker 0>then maybe you wanna chip in with how

00:55:34.615 --> 00:55:36.135
<v Speaker 0>you feel. I don't think of

00:55:36.789 --> 00:55:38.230
<v Speaker 0>I I I don't know if we both

00:55:38.230 --> 00:55:40.869
<v Speaker 0>have the same opinion or not. But there's

00:55:40.869 --> 00:55:43.029
<v Speaker 0>this weird thing that everyone in their Kubernetes

00:55:43.029 --> 00:55:44.789
<v Speaker 0>journey has to deal with at some point,

00:55:44.789 --> 00:55:46.390
<v Speaker 0>and that's when you make a modification to

00:55:46.390 --> 00:55:49.190
<v Speaker 0>a contact map. You have running pods inside

00:55:49.190 --> 00:55:49.990
<v Speaker 0>of your cluster,

00:55:50.775 --> 00:55:54.055
<v Speaker 0>and there's actually no notification or event that

00:55:54.055 --> 00:55:56.135
<v Speaker 0>tells that pod that it needs to restart

00:55:56.135 --> 00:55:57.975
<v Speaker 0>because the configuration changed.

00:55:58.535 --> 00:56:00.454
<v Speaker 0>And I see it's so common that there

00:56:00.454 --> 00:56:01.895
<v Speaker 0>are a lot of helm charts now that

00:56:01.895 --> 00:56:04.055
<v Speaker 0>will actually put an annotation on the pod

00:56:04.055 --> 00:56:07.280
<v Speaker 0>spec with the SHA of the config to

00:56:07.280 --> 00:56:09.360
<v Speaker 0>force that thing change.

00:56:10.560 --> 00:56:11.920
<v Speaker 0>But the other school bus thought this is

00:56:11.920 --> 00:56:14.560
<v Speaker 0>the config maps shouldn't change anyway and that

00:56:14.560 --> 00:56:16.400
<v Speaker 0>you should always deploy a new config map

00:56:16.400 --> 00:56:18.000
<v Speaker 0>and then we have a new deployment that

00:56:18.000 --> 00:56:20.240
<v Speaker 0>consumes it or an updated deployment that consumes

00:56:20.240 --> 00:56:22.295
<v Speaker 0>it. Is that kind of a name of

00:56:22.295 --> 00:56:23.575
<v Speaker 0>your experience as well?

00:56:25.015 --> 00:56:28.135
<v Speaker 1>Oh, absolutely. It's it's it's when you have

00:56:28.135 --> 00:56:30.295
<v Speaker 1>something especially when you follow, like, you know,

00:56:30.295 --> 00:56:32.855
<v Speaker 1>a GitOps type methodology

00:56:33.255 --> 00:56:33.815
<v Speaker 1>where

00:56:34.089 --> 00:56:36.569
<v Speaker 1>what you see in that repository or, like,

00:56:36.569 --> 00:56:38.410
<v Speaker 1>when you set up a cluster and app

00:56:38.410 --> 00:56:39.210
<v Speaker 1>something,

00:56:39.530 --> 00:56:42.010
<v Speaker 1>you you have to have in my opinion,

00:56:42.010 --> 00:56:44.650
<v Speaker 1>you have to have something that is static

00:56:44.730 --> 00:56:46.515
<v Speaker 1>so that you can reproduce it. If you

00:56:46.515 --> 00:56:48.914
<v Speaker 1>have a config map that's mutating or changing,

00:56:48.914 --> 00:56:51.315
<v Speaker 1>secrets that are mutating or changing, you don't

00:56:51.315 --> 00:56:52.755
<v Speaker 1>get that level of certainty.

00:56:52.835 --> 00:56:54.355
<v Speaker 1>And so that makes it kind of difficult

00:56:54.355 --> 00:56:56.195
<v Speaker 1>to troubleshoot, to reproduce

00:56:56.355 --> 00:56:57.475
<v Speaker 1>issues that happen,

00:56:57.795 --> 00:57:00.230
<v Speaker 1>things of that nature. And this also, say

00:57:00.230 --> 00:57:02.390
<v Speaker 1>this were, you know, a Bitcoin wallet, and,

00:57:02.549 --> 00:57:04.309
<v Speaker 1>and I found out what David's was, I

00:57:04.309 --> 00:57:06.309
<v Speaker 1>could quickly change that. And then, you know,

00:57:06.470 --> 00:57:08.470
<v Speaker 1>we could we could use, his money instead

00:57:08.470 --> 00:57:10.150
<v Speaker 1>of mine, and you you wouldn't want that,

00:57:10.150 --> 00:57:10.790
<v Speaker 1>would you?

00:57:11.910 --> 00:57:12.550
<v Speaker 0>No.

00:57:13.750 --> 00:57:15.349
<v Speaker 0>So

00:57:16.125 --> 00:57:18.125
<v Speaker 0>I guess yeah. And just to kind of

00:57:18.125 --> 00:57:20.045
<v Speaker 0>really cement why this was a problem is

00:57:20.045 --> 00:57:21.165
<v Speaker 0>that different

00:57:21.805 --> 00:57:23.565
<v Speaker 0>if some of your pods in your deployment,

00:57:23.565 --> 00:57:24.765
<v Speaker 0>if you get 20 pods and some of

00:57:24.765 --> 00:57:26.365
<v Speaker 0>them restart, they could be consuming an older

00:57:26.365 --> 00:57:27.405
<v Speaker 0>version of the config.

00:57:27.565 --> 00:57:29.405
<v Speaker 0>Some could be modifying a new version. And

00:57:29.405 --> 00:57:31.405
<v Speaker 0>if you've actually applied three, four, or five

00:57:31.680 --> 00:57:33.839
<v Speaker 0>changes to your contract map for whatever crazy

00:57:33.839 --> 00:57:35.680
<v Speaker 0>thing you're doing, all of your pods could,

00:57:35.680 --> 00:57:37.600
<v Speaker 0>in theory, be running a different configuration.

00:57:37.920 --> 00:57:39.120
<v Speaker 0>Really weird.

00:57:39.440 --> 00:57:41.520
<v Speaker 0>We had a comment. I think someone noticed

00:57:41.520 --> 00:57:43.280
<v Speaker 0>the error with my, by the way. It

00:57:43.280 --> 00:57:45.359
<v Speaker 0>was that I possibly wasn't actually using my

00:57:45.359 --> 00:57:47.120
<v Speaker 0>locally compelled one, but

00:57:47.599 --> 00:57:49.575
<v Speaker 0>I'm not gonna back to it. I'll hopefully

00:57:49.575 --> 00:57:51.655
<v Speaker 0>get that pull request merged and everyone else

00:57:51.655 --> 00:57:52.215
<v Speaker 0>can

00:57:52.855 --> 00:57:53.815
<v Speaker 0>seal that.

00:57:54.695 --> 00:57:58.135
<v Speaker 0>So one nineteen gives us this new thing,

00:57:58.855 --> 00:57:59.895
<v Speaker 0>and it should

00:58:00.135 --> 00:58:02.375
<v Speaker 0>I'm gonna say it should be as simple

00:58:03.069 --> 00:58:05.230
<v Speaker 0>as adding a new key to the config

00:58:05.230 --> 00:58:07.549
<v Speaker 0>map that says this is immutable.

00:58:15.565 --> 00:58:17.325
<v Speaker 0>K. So we now have that configured. If

00:58:17.325 --> 00:58:19.325
<v Speaker 0>I just pull it back down you know,

00:58:19.325 --> 00:58:22.685
<v Speaker 0>I've never actually modified an mutable conflict map

00:58:22.685 --> 00:58:25.485
<v Speaker 0>to be immutable. And so let's let's see

00:58:25.485 --> 00:58:27.245
<v Speaker 0>if this breaks or not. But you can

00:58:27.245 --> 00:58:30.045
<v Speaker 0>see here, we have the value

00:58:29.750 --> 00:58:32.790
<v Speaker 0>immutable true, and the value is 678.

00:58:33.109 --> 00:58:34.710
<v Speaker 0>Now if I've done this correctly and I

00:58:34.710 --> 00:58:35.750
<v Speaker 0>have to say that this should now be

00:58:35.750 --> 00:58:37.190
<v Speaker 0>a b 1 2 3,

00:58:38.069 --> 00:58:39.990
<v Speaker 0>when I apply this, we should get another

00:58:39.990 --> 00:58:41.910
<v Speaker 0>message that says you cannot modify this conflict.

00:58:44.875 --> 00:58:45.675
<v Speaker 0>It worked.

00:58:45.914 --> 00:58:46.635
<v Speaker 0>Yes.

00:58:47.355 --> 00:58:50.155
<v Speaker 0>So it's it's one of those really small

00:58:50.155 --> 00:58:50.955
<v Speaker 0>changes.

00:58:51.275 --> 00:58:53.914
<v Speaker 0>The API surface is really small, what mutable

00:58:53.914 --> 00:58:55.755
<v Speaker 0>true, and it's done. But I think the

00:58:55.755 --> 00:58:57.434
<v Speaker 0>quality of life of people that are consuming

00:58:57.434 --> 00:59:00.050
<v Speaker 0>and using Kubernetes and the deterministic

00:59:00.050 --> 00:59:02.210
<v Speaker 0>nature of now that a deployment of a

00:59:02.210 --> 00:59:04.530
<v Speaker 0>conflict map will always be in sync is

00:59:04.530 --> 00:59:06.770
<v Speaker 0>really, really important to people. At least, I

00:59:06.770 --> 00:59:08.610
<v Speaker 0>I think that would be a very welcomed

00:59:08.610 --> 00:59:10.290
<v Speaker 0>addition to the API for sure.

00:59:12.695 --> 00:59:15.095
<v Speaker 1>Absolutely agree. And and secrets are just as

00:59:15.095 --> 00:59:16.775
<v Speaker 1>easy too. All you need to add is

00:59:16.775 --> 00:59:18.855
<v Speaker 1>that immutable true flag,

00:59:18.935 --> 00:59:20.695
<v Speaker 1>and you're good to go. But definitely agree

00:59:20.695 --> 00:59:22.855
<v Speaker 1>with David on that front. It's e even

00:59:22.855 --> 00:59:24.695
<v Speaker 1>figuring out, you know, what what is tech

00:59:24.775 --> 00:59:26.055
<v Speaker 1>what is a secret in Kubernetes,

00:59:26.430 --> 00:59:28.510
<v Speaker 1>what is, you know, worthy of putting into

00:59:28.510 --> 00:59:29.470
<v Speaker 1>ConfigMap.

00:59:29.470 --> 00:59:30.589
<v Speaker 1>And at the end of the day, that's

00:59:30.589 --> 00:59:32.750
<v Speaker 1>typically, like, anything you're okay with seeing in

00:59:32.750 --> 00:59:33.630
<v Speaker 1>plain text

00:59:33.869 --> 00:59:37.310
<v Speaker 1>is usually a pretty good smell smell test,

00:59:37.310 --> 00:59:38.829
<v Speaker 1>you know, before you actually put it in

00:59:38.829 --> 00:59:41.225
<v Speaker 1>there as well. So, you know, credit card's

00:59:41.225 --> 00:59:43.545
<v Speaker 1>not a good config map entry to put

00:59:43.545 --> 00:59:44.105
<v Speaker 1>in there.

00:59:44.505 --> 00:59:45.865
<v Speaker 0>No. Alright.

00:59:46.265 --> 00:59:48.345
<v Speaker 0>We got two follow ups in the chat

00:59:48.345 --> 00:59:50.105
<v Speaker 0>there. So the first one being

00:59:51.065 --> 00:59:53.305
<v Speaker 0>another big issue is if you have a

00:59:53.305 --> 00:59:55.690
<v Speaker 0>config map managed in a separate repository, it's

00:59:55.690 --> 00:59:57.850
<v Speaker 0>a pain because of the Kubernetes native event.

00:59:57.850 --> 01:00:00.570
<v Speaker 0>Yeah. So that's just reaffirming that deployment situation.

01:00:01.050 --> 01:00:02.890
<v Speaker 0>And I think the use case here

01:00:03.450 --> 01:00:04.170
<v Speaker 0>is

01:00:04.330 --> 01:00:06.810
<v Speaker 0>if you've got, like, a platform GitOps repository

01:00:06.810 --> 01:00:09.295
<v Speaker 0>that provides those environment information and then your

01:00:09.295 --> 01:00:11.295
<v Speaker 0>applications are deployed separately,

01:00:11.455 --> 01:00:12.975
<v Speaker 0>there's no way to connect the dots between

01:00:12.975 --> 01:00:14.735
<v Speaker 0>that conflict map changing and what's in the

01:00:14.735 --> 01:00:16.975
<v Speaker 0>cluster. Yeah. It's a a huge problem.

01:00:17.135 --> 01:00:19.295
<v Speaker 0>Immutable conflict maps, just remove that because you

01:00:19.295 --> 01:00:20.735
<v Speaker 0>always have to deploy a new one and

01:00:20.735 --> 01:00:23.535
<v Speaker 0>update the surrounding thing. So, yeah, I think

01:00:23.535 --> 01:00:23.935
<v Speaker 0>it's cool.

01:00:24.940 --> 01:00:26.380
<v Speaker 0>The other question was,

01:00:26.540 --> 01:00:27.740
<v Speaker 0>can we delete

01:00:27.980 --> 01:00:31.020
<v Speaker 0>can we delete an immutable config map?

01:00:31.260 --> 01:00:32.380
<v Speaker 0>Yes.

01:00:33.100 --> 01:00:34.140
<v Speaker 0>He says confidently.

01:00:36.965 --> 01:00:39.845
<v Speaker 0>I did do this earlier, so it's gone.

01:00:39.845 --> 01:00:41.605
<v Speaker 0>And there's nothing there to stop you deleting

01:00:41.605 --> 01:00:43.765
<v Speaker 0>that. There's no protections from

01:00:44.885 --> 01:00:46.325
<v Speaker 0>there's there's nothing there to stop you deleting

01:00:46.325 --> 01:00:48.085
<v Speaker 0>something that's gonna be consumed by it. So,

01:00:48.085 --> 01:00:49.765
<v Speaker 0>yeah, if that's a challenge, you're gonna end

01:00:49.765 --> 01:00:51.605
<v Speaker 0>up with pods and a fail to restart

01:00:52.440 --> 01:00:54.599
<v Speaker 0>container create loop if you delete one that

01:00:54.599 --> 01:00:55.400
<v Speaker 0>is needed.

01:00:55.800 --> 01:00:57.240
<v Speaker 0>But at least you can be sure the

01:00:57.240 --> 01:00:58.520
<v Speaker 0>content's all very good.

01:00:59.560 --> 01:01:00.840
<v Speaker 0>Yes. Absolutely.

01:01:01.319 --> 01:01:03.640
<v Speaker 1>There there was one edit too because

01:01:04.825 --> 01:01:06.745
<v Speaker 1>even though, like, we had said before, David

01:01:06.745 --> 01:01:08.825
<v Speaker 1>pointed out the fact that, yeah, when you

01:01:08.825 --> 01:01:11.465
<v Speaker 1>change a config map, that doesn't automatically restart

01:01:11.465 --> 01:01:12.905
<v Speaker 1>all of your pods, you know, unless you

01:01:12.905 --> 01:01:14.825
<v Speaker 1>have some, you know, some some out of

01:01:14.825 --> 01:01:17.305
<v Speaker 1>band tooling that that handles that. But Kubernetes

01:01:17.305 --> 01:01:19.545
<v Speaker 1>native does not give you that that type

01:01:19.545 --> 01:01:20.105
<v Speaker 1>of experience.

01:01:20.520 --> 01:01:21.240
<v Speaker 1>However,

01:01:21.720 --> 01:01:23.960
<v Speaker 1>Kubernetes keeps track of, you know, hey. This

01:01:23.960 --> 01:01:25.800
<v Speaker 1>config map was updated. Right? Because it has

01:01:25.800 --> 01:01:27.000
<v Speaker 1>to store that state.

01:01:27.240 --> 01:01:29.400
<v Speaker 1>And so when you market as immutable,

01:01:29.560 --> 01:01:32.040
<v Speaker 1>Kubernetes gets that very, you know and and

01:01:32.040 --> 01:01:34.040
<v Speaker 1>I I believe in most cases, very small

01:01:34.040 --> 01:01:36.455
<v Speaker 1>performance gain where it doesn't keep checking to

01:01:36.455 --> 01:01:38.295
<v Speaker 1>see if that config map has been updated

01:01:38.295 --> 01:01:40.615
<v Speaker 1>because it knows it can't be. So there's

01:01:40.615 --> 01:01:42.775
<v Speaker 1>there's also that, like, hidden benefit as well.

01:01:43.095 --> 01:01:44.215
<v Speaker 1>You know, at the end of the day,

01:01:44.215 --> 01:01:45.815
<v Speaker 1>I'm not sure how much how much performance

01:01:45.815 --> 01:01:48.135
<v Speaker 1>it's going to net you, but just something

01:01:48.135 --> 01:01:50.099
<v Speaker 1>that's cool. Might be a good trivia question

01:01:50.099 --> 01:01:52.180
<v Speaker 1>or something to pay attention to with the

01:01:52.260 --> 01:01:54.099
<v Speaker 1>all the cloud trivia that that that we've

01:01:54.099 --> 01:01:56.099
<v Speaker 1>seen this. Yeah. So that that's a really

01:01:56.099 --> 01:01:57.619
<v Speaker 0>actually good point because

01:01:57.940 --> 01:02:00.339
<v Speaker 0>what you've just said has now put in

01:02:00.339 --> 01:02:02.420
<v Speaker 0>a bit of ambiguity into the problem domain

01:02:02.420 --> 01:02:03.700
<v Speaker 0>that I was mentioning. So I think we

01:02:03.700 --> 01:02:05.735
<v Speaker 0>should quick let's just clear this up.

01:02:06.375 --> 01:02:09.175
<v Speaker 0>Now the contact maps are and I if

01:02:09.175 --> 01:02:11.415
<v Speaker 0>I get this wrong, please correct me. When

01:02:11.415 --> 01:02:13.495
<v Speaker 0>they're exposed as environment variables or fails, well,

01:02:13.495 --> 01:02:15.975
<v Speaker 0>fails and environment variables are updated within the

01:02:15.975 --> 01:02:18.295
<v Speaker 0>pod. The challenge is the process running normally

01:02:18.295 --> 01:02:20.215
<v Speaker 0>doesn't know to take advantage of the reload,

01:02:20.215 --> 01:02:22.370
<v Speaker 0>which why you end up with multiple processes

01:02:22.370 --> 01:02:23.970
<v Speaker 0>consuming old information.

01:02:24.210 --> 01:02:26.050
<v Speaker 0>It's not that Kubernetes doesn't

01:02:26.050 --> 01:02:28.690
<v Speaker 0>update the file or the environment there. That's

01:02:28.690 --> 01:02:29.410
<v Speaker 0>right. Yeah.

01:02:30.370 --> 01:02:31.730
<v Speaker 1>Exactly. Exact.

01:02:32.210 --> 01:02:34.715
<v Speaker 0>Cool. And I think what we should just

01:02:34.715 --> 01:02:36.795
<v Speaker 0>do now is show off one other thing

01:02:36.795 --> 01:02:38.155
<v Speaker 0>because I'm sure there'll be a question on

01:02:38.155 --> 01:02:39.995
<v Speaker 0>it later. But what if I deploy this

01:02:39.995 --> 01:02:42.795
<v Speaker 0>as immutable and want to make it mutable?

01:02:43.195 --> 01:02:45.115
<v Speaker 0>I'm just gonna say unimmutable,

01:02:45.115 --> 01:02:46.715
<v Speaker 0>and I would have just left it like

01:02:46.715 --> 01:02:47.195
<v Speaker 0>that.

01:02:47.835 --> 01:02:48.395
<v Speaker 0>So

01:02:48.990 --> 01:02:51.310
<v Speaker 0>we now have an immutable conflict map. And

01:02:51.310 --> 01:02:54.030
<v Speaker 0>if I remember correctly, you cannot then make

01:02:54.030 --> 01:02:56.190
<v Speaker 0>it mutable. This will not work.

01:02:58.990 --> 01:03:01.070
<v Speaker 0>Okay. So if you make a conflict map

01:03:01.070 --> 01:03:03.625
<v Speaker 0>immutable, there is no undoing it to do

01:03:03.625 --> 01:03:05.385
<v Speaker 0>it online or hot updates.

01:03:05.545 --> 01:03:07.545
<v Speaker 0>You always have to create a new config

01:03:07.545 --> 01:03:08.185
<v Speaker 0>map.

01:03:08.985 --> 01:03:10.585
<v Speaker 0>But I can't do it, so let's get

01:03:10.585 --> 01:03:11.305
<v Speaker 0>rid of it.

01:03:12.345 --> 01:03:14.425
<v Speaker 1>That reminds me of Slack

01:03:14.425 --> 01:03:16.585
<v Speaker 1>channels, how you can make it private, but

01:03:16.585 --> 01:03:18.665
<v Speaker 1>you can't then turn a private channel back

01:03:18.360 --> 01:03:20.920
<v Speaker 1>into a public one, which also makes sense.

01:03:21.880 --> 01:03:23.480
<v Speaker 0>Yeah. I guess so. Yeah.

01:03:24.920 --> 01:03:27.000
<v Speaker 0>I don't think there's anything else to cover

01:03:27.000 --> 01:03:29.320
<v Speaker 0>on the immutability here. I think we've pretty

01:03:29.320 --> 01:03:32.440
<v Speaker 0>much covered every potential edge case and question.

01:03:32.440 --> 01:03:32.840
<v Speaker 0>So

01:03:33.295 --> 01:03:34.575
<v Speaker 0>that means we have to move on to

01:03:34.575 --> 01:03:36.415
<v Speaker 0>the difficult bit. So

01:03:38.175 --> 01:03:41.695
<v Speaker 0>we're gonna talk about the let's close that.

01:03:42.975 --> 01:03:44.255
<v Speaker 0>The promotion

01:03:44.255 --> 01:03:46.175
<v Speaker 0>of the SET Comp API.

01:03:47.799 --> 01:03:49.720
<v Speaker 0>Was the journal available? Yeah. I think it

01:03:49.720 --> 01:03:50.680
<v Speaker 0>was. Yes.

01:03:53.799 --> 01:03:55.560
<v Speaker 0>So I cheated.

01:03:55.960 --> 01:03:56.680
<v Speaker 0>I

01:03:57.319 --> 01:04:00.119
<v Speaker 0>have downloaded a seccomp profile. I am not

01:04:00.119 --> 01:04:02.485
<v Speaker 0>brave enough to try and put that together

01:04:02.485 --> 01:04:04.085
<v Speaker 0>during a livestream.

01:04:04.725 --> 01:04:06.885
<v Speaker 0>And this is for NGINX. What is really

01:04:06.885 --> 01:04:07.445
<v Speaker 0>cool

01:04:08.485 --> 01:04:10.885
<v Speaker 0>is if you deploy the set comp operator,

01:04:10.885 --> 01:04:13.779
<v Speaker 0>this profile is actually provided for you. I'm

01:04:13.779 --> 01:04:15.380
<v Speaker 0>not going to show the set pump operator

01:04:15.380 --> 01:04:17.059
<v Speaker 0>today. There's a stream on that last week.

01:04:17.059 --> 01:04:18.980
<v Speaker 0>Feel free to check it out. What we're

01:04:18.980 --> 01:04:21.059
<v Speaker 0>gonna look at today is just the raw

01:04:21.059 --> 01:04:23.380
<v Speaker 0>Kubernetes aspect of it working with the API

01:04:23.380 --> 01:04:23.700
<v Speaker 0>directly.

01:04:27.545 --> 01:04:29.545
<v Speaker 0>So what does that mean we need? We

01:04:29.545 --> 01:04:31.065
<v Speaker 0>need a deployment.

01:04:34.745 --> 01:04:36.745
<v Speaker 0>I see that's Versus code extension where you

01:04:36.745 --> 01:04:38.265
<v Speaker 0>never have to actually type the YAML. I

01:04:38.265 --> 01:04:39.545
<v Speaker 0>don't even know if I could type the

01:04:39.545 --> 01:04:40.665
<v Speaker 0>deployment YAML anymore.

01:04:42.270 --> 01:04:44.670
<v Speaker 1>Wow. So I'm just noticing I need to

01:04:44.670 --> 01:04:46.830
<v Speaker 1>add that and save myself hours of time.

01:04:46.830 --> 01:04:48.510
<v Speaker 1>Thank you, Dave. Yeah.

01:04:50.270 --> 01:04:52.510
<v Speaker 0>So that's the the resources.

01:04:52.910 --> 01:04:54.910
<v Speaker 0>I don't need the port, but I'm just

01:04:54.990 --> 01:04:56.910
<v Speaker 0>because it'll annoy me, I'll add the port.

01:04:57.875 --> 01:04:59.954
<v Speaker 0>Now what happens here is I can deploy

01:04:59.954 --> 01:05:01.555
<v Speaker 0>this engine x resource.

01:05:02.435 --> 01:05:04.355
<v Speaker 0>It's like any normal resource.

01:05:04.915 --> 01:05:06.595
<v Speaker 0>It's a minute. Okay. Nothing wrong.

01:05:12.050 --> 01:05:13.730
<v Speaker 0>Oh, I'm applying the JSON

01:05:15.570 --> 01:05:17.810
<v Speaker 0>because I called it deployment. There we go.

01:05:18.610 --> 01:05:20.130
<v Speaker 0>Which means I can now do

01:05:20.370 --> 01:05:22.130
<v Speaker 0>quick control, get parts.

01:05:23.345 --> 01:05:24.944
<v Speaker 0>Let's just get that second. It's gonna be

01:05:24.944 --> 01:05:26.865
<v Speaker 0>pulling down the NGINX image.

01:05:27.825 --> 01:05:30.145
<v Speaker 0>Running on a lot. Of course, it's running.

01:05:30.385 --> 01:05:32.224
<v Speaker 0>And now I could do exec

01:05:32.224 --> 01:05:33.425
<v Speaker 0>NGINX,

01:05:34.224 --> 01:05:36.144
<v Speaker 0>not my real shell, so I can't get

01:05:36.144 --> 01:05:36.785
<v Speaker 0>all complete.

01:05:40.550 --> 01:05:42.390
<v Speaker 0>And let's see then the next container, and

01:05:42.390 --> 01:05:43.510
<v Speaker 0>I can drop back in.

01:05:43.830 --> 01:05:46.630
<v Speaker 0>Nothing exciting there. All standard stuff.

01:05:47.510 --> 01:05:48.230
<v Speaker 0>However,

01:05:49.830 --> 01:05:52.710
<v Speaker 0>there is a certain attack vector

01:05:53.184 --> 01:05:55.585
<v Speaker 0>without specifying a set comp profile,

01:05:55.904 --> 01:05:58.865
<v Speaker 0>and that is if a malicious actor, sometimes

01:05:58.865 --> 01:06:00.865
<v Speaker 0>when they just to get within the process,

01:06:01.184 --> 01:06:03.744
<v Speaker 0>can they execute commands that we do not

01:06:03.744 --> 01:06:05.904
<v Speaker 0>want them to execute? Like, me exit me

01:06:05.904 --> 01:06:09.380
<v Speaker 0>getting inside of a a pod seems harmless,

01:06:09.380 --> 01:06:11.700
<v Speaker 0>but, you know, the ability to get inside

01:06:11.700 --> 01:06:14.740
<v Speaker 0>of that namespace could be potentially dangerous. Right?

01:06:16.420 --> 01:06:19.460
<v Speaker 0>So we can use the setcom profile

01:06:20.424 --> 01:06:21.145
<v Speaker 0>here,

01:06:21.785 --> 01:06:24.664
<v Speaker 0>which lets all of the syscalls that NGINX

01:06:24.664 --> 01:06:26.105
<v Speaker 0>is expected to make

01:06:26.664 --> 01:06:28.105
<v Speaker 0>and restricts it.

01:06:28.585 --> 01:06:30.184
<v Speaker 0>So what we have to do is copy

01:06:30.184 --> 01:06:30.744
<v Speaker 0>this,

01:06:31.625 --> 01:06:33.464
<v Speaker 0>and then if I do many qb s

01:06:33.464 --> 01:06:34.825
<v Speaker 0>s h so you have to be on

01:06:34.825 --> 01:06:36.730
<v Speaker 0>each of the hosts or the nodes, and

01:06:36.730 --> 01:06:38.250
<v Speaker 0>you have to put in a file.

01:06:39.289 --> 01:06:40.490
<v Speaker 0>I'm gonna have to

01:06:42.329 --> 01:06:43.130
<v Speaker 0>on RIP,

01:06:44.009 --> 01:06:46.170
<v Speaker 0>and we're gonna add a directory to the

01:06:46.170 --> 01:06:47.289
<v Speaker 0>kubelet configuration.

01:06:48.525 --> 01:06:50.365
<v Speaker 0>So that is where all the kubelet conflict

01:06:50.365 --> 01:06:52.845
<v Speaker 0>lives. We can create a new deck,

01:06:53.085 --> 01:06:54.525
<v Speaker 0>create a new directory

01:06:55.085 --> 01:06:56.605
<v Speaker 0>called seccomp

01:06:57.404 --> 01:06:58.445
<v Speaker 0>profiles,

01:06:59.565 --> 01:07:01.645
<v Speaker 0>and need to do an app update and

01:07:01.645 --> 01:07:03.484
<v Speaker 0>install them because I'm not gonna have it.

01:07:03.484 --> 01:07:04.125
<v Speaker 0>I just realized.

01:07:06.020 --> 01:07:07.060
<v Speaker 0>Magic

01:07:07.060 --> 01:07:08.020
<v Speaker 0>stuff happens.

01:07:10.740 --> 01:07:12.660
<v Speaker 0>I'm my Internet is not too bad.

01:07:13.620 --> 01:07:15.060
<v Speaker 0>And we can go ahead and set seccomp

01:07:15.060 --> 01:07:15.940
<v Speaker 0>profiles.

01:07:15.940 --> 01:07:18.660
<v Speaker 0>Now from here, I can create nginx

01:07:18.660 --> 01:07:19.620
<v Speaker 0>dot JSON,

01:07:20.525 --> 01:07:21.645
<v Speaker 0>paste that,

01:07:22.285 --> 01:07:23.485
<v Speaker 0>and leave it alone.

01:07:24.525 --> 01:07:26.685
<v Speaker 0>So this would obviously be part of your

01:07:26.685 --> 01:07:28.045
<v Speaker 0>configuration management

01:07:28.365 --> 01:07:30.925
<v Speaker 0>setup. You just have Terraform,

01:07:30.925 --> 01:07:33.405
<v Speaker 0>write this file, or SaltStack, or Puppet, whatever

01:07:33.405 --> 01:07:35.490
<v Speaker 0>you're using. Put all of your profiles into

01:07:35.490 --> 01:07:37.330
<v Speaker 0>a single location on each of your workers

01:07:37.330 --> 01:07:39.170
<v Speaker 0>so they can be considered by the pods.

01:07:39.250 --> 01:07:41.090
<v Speaker 0>Or you can use the second operator, which

01:07:41.090 --> 01:07:42.530
<v Speaker 0>does all that work. Anyway,

01:07:44.050 --> 01:07:46.610
<v Speaker 0>now we wanna restrict the Cisco's engine x

01:07:46.610 --> 01:07:49.095
<v Speaker 0>can make. And to do that, these changes

01:07:49.095 --> 01:07:52.455
<v Speaker 0>to the API leverage the security contact API.

01:07:52.455 --> 01:07:53.895
<v Speaker 0>So this already exists,

01:07:54.295 --> 01:07:56.135
<v Speaker 0>allows you to do things like what?

01:07:57.255 --> 01:07:59.255
<v Speaker 0>Force the UID, the GID. I think there's

01:07:59.255 --> 01:08:00.055
<v Speaker 0>a few other things.

01:08:02.390 --> 01:08:04.470
<v Speaker 0>But now we can specify

01:08:05.750 --> 01:08:06.870
<v Speaker 0>second profile,

01:08:07.510 --> 01:08:08.870
<v Speaker 0>and we have a type.

01:08:09.190 --> 01:08:09.830
<v Speaker 0>So

01:08:09.990 --> 01:08:11.510
<v Speaker 0>this is where I'm gonna start getting into

01:08:11.510 --> 01:08:13.590
<v Speaker 0>territory that I'm not entirely comfortable with, but

01:08:13.590 --> 01:08:15.350
<v Speaker 0>I'll try and remember it.

01:08:15.990 --> 01:08:16.710
<v Speaker 0>There are

01:08:17.515 --> 01:08:19.034
<v Speaker 0>local host types

01:08:19.274 --> 01:08:21.755
<v Speaker 0>and container runtime type.

01:08:23.354 --> 01:08:24.154
<v Speaker 0>Run time

01:08:24.475 --> 01:08:25.274
<v Speaker 0>I

01:08:25.675 --> 01:08:27.114
<v Speaker 0>think it's runtime default.

01:08:28.635 --> 01:08:30.395
<v Speaker 0>The documentation is gonna have that covered.

01:08:30.979 --> 01:08:32.580
<v Speaker 0>But this is a profile that ships with

01:08:32.580 --> 01:08:34.179
<v Speaker 0>your CRI implementation,

01:08:34.179 --> 01:08:35.380
<v Speaker 0>which tries to

01:08:36.340 --> 01:08:38.819
<v Speaker 0>remove some of the more dangerous syscalls,

01:08:38.819 --> 01:08:40.899
<v Speaker 0>like, privilege escalation and such,

01:08:41.300 --> 01:08:43.460
<v Speaker 0>but it's not really specific to applications you're

01:08:43.460 --> 01:08:45.604
<v Speaker 0>gonna run. For that, we have to tell

01:08:45.604 --> 01:08:47.205
<v Speaker 0>it to use a local host,

01:08:47.685 --> 01:08:49.205
<v Speaker 0>which is gonna use the profiles in the

01:08:49.205 --> 01:08:50.805
<v Speaker 0>directory we just provisioned,

01:08:51.125 --> 01:08:52.725
<v Speaker 0>and then we can tell it which profile

01:08:52.725 --> 01:08:53.845
<v Speaker 0>we want to use.

01:08:55.045 --> 01:08:56.725
<v Speaker 0>Assuming I've not messed this up, which is

01:08:56.725 --> 01:08:57.445
<v Speaker 0>extremely likely,

01:08:58.010 --> 01:09:00.489
<v Speaker 0>I should be able to do profiles engine

01:09:00.489 --> 01:09:02.569
<v Speaker 0>x dot JSON,

01:09:02.890 --> 01:09:04.250
<v Speaker 0>and that path

01:09:04.969 --> 01:09:06.170
<v Speaker 0>is just

01:09:07.370 --> 01:09:10.090
<v Speaker 0>profiles here, the directory that I created, and

01:09:10.090 --> 01:09:11.449
<v Speaker 0>the engine x dot JSON here.

01:09:13.175 --> 01:09:14.295
<v Speaker 0>We

01:09:14.455 --> 01:09:16.375
<v Speaker 0>can apply that. So I drop out my

01:09:16.375 --> 01:09:17.974
<v Speaker 0>mini cube SSH.

01:09:18.935 --> 01:09:21.335
<v Speaker 0>It will do a cube control apply

01:09:21.415 --> 01:09:23.654
<v Speaker 0>and redo the deployment.

01:09:23.734 --> 01:09:25.094
<v Speaker 0>No. We won't.

01:09:26.375 --> 01:09:27.660
<v Speaker 0>Oh, drop out of Brit, drop out of

01:09:27.660 --> 01:09:29.420
<v Speaker 0>Minikube. Now I can do it.

01:09:31.820 --> 01:09:32.540
<v Speaker 0>Okay.

01:09:35.260 --> 01:09:37.740
<v Speaker 0>But if I've not messed this up, I

01:09:37.740 --> 01:09:39.100
<v Speaker 0>should be able to run get pods and

01:09:39.100 --> 01:09:40.140
<v Speaker 0>see the pods running.

01:09:40.785 --> 01:09:41.505
<v Speaker 0>Good.

01:09:43.104 --> 01:09:44.545
<v Speaker 0>And we can confirm

01:09:44.864 --> 01:09:46.224
<v Speaker 0>that it has

01:09:47.425 --> 01:09:50.704
<v Speaker 0>and what we expect. So describe pods,

01:09:51.585 --> 01:09:52.704
<v Speaker 0>pod name,

01:09:52.785 --> 01:09:54.864
<v Speaker 0>and then we'll describe for

01:09:56.489 --> 01:09:57.369
<v Speaker 0>account.

01:09:58.010 --> 01:09:59.209
<v Speaker 0>You can see here,

01:10:00.570 --> 01:10:02.650
<v Speaker 0>we are running this NGINX

01:10:02.650 --> 01:10:03.530
<v Speaker 0>profile.

01:10:04.329 --> 01:10:06.409
<v Speaker 0>And what that means is I'm gonna use

01:10:06.409 --> 01:10:08.650
<v Speaker 0>a pod name again. As I try and

01:10:08.650 --> 01:10:09.929
<v Speaker 0>exec and save at this,

01:10:16.775 --> 01:10:18.455
<v Speaker 0>fails. Good.

01:10:19.095 --> 01:10:20.935
<v Speaker 0>So what happened there

01:10:21.895 --> 01:10:22.614
<v Speaker 0>is

01:10:22.935 --> 01:10:24.535
<v Speaker 0>this test call

01:10:25.390 --> 01:10:26.430
<v Speaker 0>get p

01:10:27.950 --> 01:10:30.110
<v Speaker 0>process group, I think that is the syscall,

01:10:30.110 --> 01:10:33.150
<v Speaker 0>failed because our set pump profile doesn't allow

01:10:33.150 --> 01:10:36.110
<v Speaker 0>engine x to run that syscall, and I

01:10:36.110 --> 01:10:37.550
<v Speaker 0>can no longer get in a container.

01:10:38.515 --> 01:10:40.595
<v Speaker 0>The good thing about that is if someone

01:10:40.595 --> 01:10:42.915
<v Speaker 0>were able to exploit an NGINX

01:10:43.075 --> 01:10:44.115
<v Speaker 0>vulnerability

01:10:44.115 --> 01:10:45.235
<v Speaker 0>or CVE

01:10:45.235 --> 01:10:47.555
<v Speaker 0>to get inside of that container, the chances

01:10:47.555 --> 01:10:49.475
<v Speaker 0>of them being able to execute any commands

01:10:49.475 --> 01:10:51.315
<v Speaker 0>that would potentially allow them to get back

01:10:51.315 --> 01:10:52.915
<v Speaker 0>then to the host should hopefully be not

01:10:52.915 --> 01:10:53.555
<v Speaker 0>done by it.

01:10:54.909 --> 01:10:55.629
<v Speaker 0>Hopefully.

01:10:58.270 --> 01:10:59.949
<v Speaker 0>I think that's it. Like,

01:11:00.429 --> 01:11:03.230
<v Speaker 0>the API surface is nice and small. Unfortunately,

01:11:03.230 --> 01:11:05.149
<v Speaker 0>writing the second profile is really difficult.

01:11:05.710 --> 01:11:07.230
<v Speaker 0>So the Google will try and find ones

01:11:07.230 --> 01:11:09.155
<v Speaker 0>that other people have written. And but the

01:11:09.155 --> 01:11:11.315
<v Speaker 0>application from a Kubernetes point of view could

01:11:11.315 --> 01:11:12.514
<v Speaker 0>not be simpler.

01:11:12.675 --> 01:11:14.195
<v Speaker 0>So, you know, a couple of lines on

01:11:14.195 --> 01:11:16.114
<v Speaker 0>the security context and you're good to go.

01:11:17.075 --> 01:11:18.515
<v Speaker 0>Is there anything

01:11:18.515 --> 01:11:19.555
<v Speaker 0>you wanna add to that?

01:11:21.989 --> 01:11:24.070
<v Speaker 1>No. I think just very much agreeing with

01:11:24.070 --> 01:11:26.230
<v Speaker 1>you that that that writing a seccomp profile

01:11:26.230 --> 01:11:28.389
<v Speaker 1>is is, you know, at least right now,

01:11:28.389 --> 01:11:29.989
<v Speaker 1>difficult. I definitely want to learn more on

01:11:29.989 --> 01:11:31.590
<v Speaker 1>that front as well. I think I'd feel

01:11:31.590 --> 01:11:34.230
<v Speaker 1>more comfortable writing an autobiography before a seccomp

01:11:34.230 --> 01:11:37.065
<v Speaker 1>profile as it stands today. But

01:11:38.345 --> 01:11:41.465
<v Speaker 1>no. Absolutely. It's one nineteen's fun. Go check

01:11:41.465 --> 01:11:43.305
<v Speaker 1>it out. If you have any questions about

01:11:43.305 --> 01:11:45.065
<v Speaker 1>features, you know, please feel free to reach

01:11:45.065 --> 01:11:47.625
<v Speaker 1>out. If there's any, you know, demos or

01:11:47.625 --> 01:11:49.410
<v Speaker 1>or, you know, you feel like there's a

01:11:49.410 --> 01:11:51.730
<v Speaker 1>blog entry that's needed or tutorials, things like

01:11:51.730 --> 01:11:55.010
<v Speaker 1>that, hit us up. You know? And it's

01:11:55.010 --> 01:11:56.370
<v Speaker 1>it's kinda fun to see what people are

01:11:56.370 --> 01:11:58.530
<v Speaker 1>using, to talk through those work streams and

01:11:58.530 --> 01:12:00.610
<v Speaker 1>those workflows, and just get a sense as

01:12:00.610 --> 01:12:03.330
<v Speaker 1>as to what everybody's interested in. Let's let's

01:12:03.245 --> 01:12:04.445
<v Speaker 1>have a conversation.

01:12:05.885 --> 01:12:08.685
<v Speaker 0>Awesome. Well, thank you so much for joining

01:12:08.685 --> 01:12:10.525
<v Speaker 0>me today. This is is really good to

01:12:10.525 --> 01:12:11.965
<v Speaker 0>just kinda sit down and go through some

01:12:11.965 --> 01:12:14.365
<v Speaker 0>of the new features, you know, understand how

01:12:14.365 --> 01:12:15.805
<v Speaker 0>they work and and dig in some a

01:12:15.805 --> 01:12:16.525
<v Speaker 0>little bit more. So

01:12:17.800 --> 01:12:19.640
<v Speaker 0>thank you. I'm

01:12:20.040 --> 01:12:20.520
<v Speaker 0>good.

01:12:20.920 --> 01:12:22.440
<v Speaker 1>Thanks for having me. No. This was a

01:12:22.440 --> 01:12:23.080
<v Speaker 1>blast.

01:12:24.120 --> 01:12:25.800
<v Speaker 1>Hope you all have a wonderful rest of

01:12:25.800 --> 01:12:28.200
<v Speaker 1>your Monday. And, yeah, thanks thanks for hanging

01:12:28.200 --> 01:12:30.520
<v Speaker 1>out with us. Alright. Thanks again, Taylor. I'll

01:12:30.520 --> 01:12:32.600
<v Speaker 0>speak to you soon. Bye, all. Thank you,

01:12:32.600 --> 01:12:32.840
<v Speaker 0>Nikki.
