WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: f5c16f72-d9fc-4317-a0c1-2a919322d12d
Created: 2025-04-29T16:49:38.331Z
Duration: 4105.2017
Channels: 1

00:02:03.765 --> 00:02:04.565
<v Speaker 0>Hello,

00:02:04.725 --> 00:02:06.005
<v Speaker 0>and welcome

00:02:06.165 --> 00:02:07.765
<v Speaker 0>to today's episode.

00:02:07.845 --> 00:02:09.765
<v Speaker 0>This is Rawkode Academy.

00:02:10.005 --> 00:02:11.365
<v Speaker 0>I am Rawkode.

00:02:11.525 --> 00:02:13.925
<v Speaker 0>And today we are taking a look at

00:02:13.925 --> 00:02:14.805
<v Speaker 0>Trivy,

00:02:14.805 --> 00:02:16.565
<v Speaker 0>an open source vulnerability

00:02:16.565 --> 00:02:19.530
<v Speaker 0>scanner amongst other things from the team over

00:02:19.530 --> 00:02:20.970
<v Speaker 0>at Aqua Security.

00:02:21.930 --> 00:02:24.410
<v Speaker 0>So say hello in the chat. We wanna

00:02:24.410 --> 00:02:26.490
<v Speaker 0>know who's here. We wanna get your questions

00:02:26.490 --> 00:02:27.930
<v Speaker 0>and have some fun today.

00:02:28.170 --> 00:02:30.010
<v Speaker 0>And to guide us on our journey of

00:02:30.010 --> 00:02:32.170
<v Speaker 0>Trivy, are going to be joined from

00:02:35.125 --> 00:02:38.485
<v Speaker 0>Rory McEwan. Hey, mate. How's it going? Fantastic.

00:02:38.485 --> 00:02:39.765
<v Speaker 1>Going well.

00:02:40.165 --> 00:02:42.965
<v Speaker 0>Alright. I'm I'm I'm curious because we're both

00:02:42.965 --> 00:02:45.125
<v Speaker 0>from Scotland if my accent is gonna change

00:02:45.125 --> 00:02:47.285
<v Speaker 0>throughout the session back to my normal original

00:02:47.285 --> 00:02:49.660
<v Speaker 0>voice or not. I was thinking that exact

00:02:49.660 --> 00:02:51.100
<v Speaker 1>thing. The more I talk to people from

00:02:51.100 --> 00:02:52.380
<v Speaker 1>Glasgow especially,

00:02:52.460 --> 00:02:55.020
<v Speaker 1>my accent becomes more Glaswegian and harder for

00:02:55.020 --> 00:02:56.620
<v Speaker 1>anyone else to understand.

00:02:56.940 --> 00:02:58.780
<v Speaker 0>Exactly. I I don't know if you're the

00:02:58.780 --> 00:03:00.060
<v Speaker 0>same as me, but, like, during my day

00:03:00.060 --> 00:03:01.260
<v Speaker 0>job, I spend a lot of my time

00:03:01.260 --> 00:03:03.295
<v Speaker 0>just trying to enunciate more and, like, speak

00:03:03.295 --> 00:03:06.175
<v Speaker 0>normal English. So it's gonna be a complete

00:03:06.175 --> 00:03:09.215
<v Speaker 0>regression today, I I think. And avoid putting

00:03:09.375 --> 00:03:11.935
<v Speaker 1>Britishisms into chat. I had to explain to

00:03:11.935 --> 00:03:14.175
<v Speaker 1>my Israeli colleagues that ta is thanks

00:03:14.335 --> 00:03:15.775
<v Speaker 1>so many times. It's like, when I say

00:03:15.775 --> 00:03:17.295
<v Speaker 1>ta, I mean thanks. Hope you're wondering what

00:03:17.295 --> 00:03:17.535
<v Speaker 1>I'm doing.

00:03:18.830 --> 00:03:19.630
<v Speaker 0>Yeah.

00:03:19.630 --> 00:03:20.990
<v Speaker 0>I don't think I've I've ever really said

00:03:20.990 --> 00:03:22.990
<v Speaker 0>task. I think I'm gonna be alright there.

00:03:23.470 --> 00:03:25.470
<v Speaker 0>Yeah. Just pop a few hellos up in

00:03:25.470 --> 00:03:27.550
<v Speaker 0>the top corner. While I do that, Rory,

00:03:27.550 --> 00:03:29.310
<v Speaker 0>do you wanna give yourself a wee introduction

00:03:29.310 --> 00:03:30.510
<v Speaker 0>and let everyone know who you are?

00:03:31.205 --> 00:03:33.205
<v Speaker 1>Sure. Yep. So hi, Rory. I

00:03:34.004 --> 00:03:36.724
<v Speaker 1>work for Aqua Security as a cloud native

00:03:36.724 --> 00:03:37.925
<v Speaker 1>security advocate.

00:03:38.325 --> 00:03:40.965
<v Speaker 1>My background is security. I've been doing IT

00:03:40.965 --> 00:03:42.965
<v Speaker 1>security for about over twenty years now.

00:03:43.659 --> 00:03:45.659
<v Speaker 1>And vulnerability scanning, which is one of the

00:03:45.659 --> 00:03:47.180
<v Speaker 1>reasons that I'm interested in doing this, is

00:03:47.180 --> 00:03:49.099
<v Speaker 1>I've been doing vulnerability scanning for most of

00:03:49.099 --> 00:03:51.260
<v Speaker 1>those twenty years. So it's something I've kinda

00:03:51.260 --> 00:03:53.260
<v Speaker 1>had the pain of and the and the

00:03:53.260 --> 00:03:55.659
<v Speaker 1>interest in for a long time now.

00:03:56.265 --> 00:03:57.945
<v Speaker 1>So, yeah, I did pen testing, did a

00:03:57.945 --> 00:03:59.225
<v Speaker 1>lot of technical stuff, did a lot of

00:03:59.225 --> 00:04:00.345
<v Speaker 1>container hacking.

00:04:01.065 --> 00:04:03.065
<v Speaker 1>And I also get involved with the community,

00:04:03.385 --> 00:04:05.945
<v Speaker 1>things like CIS benchmarks, help maintain those for

00:04:05.945 --> 00:04:07.065
<v Speaker 1>Docker and Kubernetes,

00:04:07.385 --> 00:04:10.585
<v Speaker 1>and also participation in Kubernetes security

00:04:10.585 --> 00:04:11.870
<v Speaker 1>and CNCF

00:04:11.870 --> 00:04:13.070
<v Speaker 1>tag security.

00:04:13.310 --> 00:04:15.070
<v Speaker 1>If you're interested in security in general and

00:04:15.070 --> 00:04:17.390
<v Speaker 1>cloud native, those are two great places to

00:04:17.390 --> 00:04:19.470
<v Speaker 1>get involved with. The meetings are open, anyone

00:04:19.470 --> 00:04:21.630
<v Speaker 1>can come along. Just listen. Or if you

00:04:21.630 --> 00:04:23.150
<v Speaker 1>wanna participate and help out, then you can

00:04:23.150 --> 00:04:23.710
<v Speaker 1>do that as well.

00:04:24.785 --> 00:04:25.505
<v Speaker 0>Awesome.

00:04:25.745 --> 00:04:27.825
<v Speaker 0>I thought containers couldn't be hacked. Right? Is

00:04:27.825 --> 00:04:28.545
<v Speaker 0>that not why we just

00:04:29.505 --> 00:04:31.665
<v Speaker 1>Well, my pen testing did say, well,

00:04:32.305 --> 00:04:33.985
<v Speaker 1>we can have lots of fun hacking containers.

00:04:33.985 --> 00:04:35.345
<v Speaker 1>That was that was great and still is

00:04:35.345 --> 00:04:35.665
<v Speaker 1>great fun.

00:04:36.639 --> 00:04:37.760
<v Speaker 0>Alright. Okay.

00:04:38.000 --> 00:04:39.919
<v Speaker 0>Well, thank you for for sharing all that

00:04:39.919 --> 00:04:41.199
<v Speaker 0>with us. It's a pleasure to have you

00:04:41.199 --> 00:04:42.560
<v Speaker 0>here today, and I'm I'm looking forward to

00:04:42.560 --> 00:04:45.360
<v Speaker 0>playing with Trivy. So for anyone watching who

00:04:45.360 --> 00:04:47.680
<v Speaker 0>hasn't tried out Trivy, has never heard the

00:04:47.680 --> 00:04:49.040
<v Speaker 0>name Trivy,

00:04:49.120 --> 00:04:50.400
<v Speaker 0>what is it that we are looking at

00:04:50.400 --> 00:04:52.625
<v Speaker 0>today? Yeah. So what we're looking at Trivy

00:04:52.625 --> 00:04:54.785
<v Speaker 1>is actually a project. It was I've been

00:04:54.785 --> 00:04:56.625
<v Speaker 1>using this well before I worked for Aqua.

00:04:57.104 --> 00:04:59.505
<v Speaker 1>And because back in pen testing days and

00:04:59.505 --> 00:05:00.944
<v Speaker 1>if you're in security, one of the things

00:05:00.944 --> 00:05:02.865
<v Speaker 1>you need to do is scan things for

00:05:02.865 --> 00:05:05.745
<v Speaker 1>missing patches. Right? You look at our container

00:05:05.745 --> 00:05:07.780
<v Speaker 1>image. You could look at a virtual machine.

00:05:07.780 --> 00:05:09.539
<v Speaker 1>You could look at anywhere and say, is

00:05:09.539 --> 00:05:12.900
<v Speaker 1>this missing security fixes? Is this being patched?

00:05:13.460 --> 00:05:15.780
<v Speaker 1>And Trivy essentially is the best tool, in

00:05:15.780 --> 00:05:16.420
<v Speaker 1>my opinion,

00:05:16.820 --> 00:05:18.660
<v Speaker 1>for for scanning containers.

00:05:19.225 --> 00:05:20.905
<v Speaker 1>And the reason is it's it's easy. Well,

00:05:20.905 --> 00:05:22.425
<v Speaker 1>what we'll see is it's easy to use.

00:05:22.425 --> 00:05:23.305
<v Speaker 1>It works well,

00:05:24.185 --> 00:05:25.865
<v Speaker 1>and it covers a lot of ground.

00:05:26.425 --> 00:05:29.145
<v Speaker 1>Vulnerability scanning in general is kind of this

00:05:29.145 --> 00:05:30.665
<v Speaker 1>this you do it anywhere. You might want

00:05:30.665 --> 00:05:31.945
<v Speaker 1>to do it on on VMs. You might

00:05:31.945 --> 00:05:34.550
<v Speaker 1>want to do it against images. Anything that

00:05:34.550 --> 00:05:35.110
<v Speaker 1>has,

00:05:35.590 --> 00:05:38.470
<v Speaker 1>like, potentially missing security patches, you need to

00:05:38.470 --> 00:05:40.069
<v Speaker 1>have some way of scanning them and checking

00:05:40.069 --> 00:05:41.990
<v Speaker 1>them. And it's the kind of thing that

00:05:41.990 --> 00:05:43.590
<v Speaker 1>gets seen a lot as a black box.

00:05:43.590 --> 00:05:45.590
<v Speaker 1>Right? You know, you you run a scanner,

00:05:45.590 --> 00:05:47.835
<v Speaker 1>it puts out some results. But there's surprisingly

00:05:47.835 --> 00:05:49.755
<v Speaker 1>amount of nuance and, like, things that can

00:05:49.755 --> 00:05:51.195
<v Speaker 1>go wrong or things that you need to

00:05:51.195 --> 00:05:52.955
<v Speaker 1>understand. So, hopefully, we can cover some of

00:05:52.955 --> 00:05:53.675
<v Speaker 1>that today.

00:05:54.475 --> 00:05:55.355
<v Speaker 0>Awesome.

00:05:56.075 --> 00:05:56.715
<v Speaker 0>You're gonna

00:05:57.995 --> 00:05:59.515
<v Speaker 0>I I I think I've got a I've

00:05:59.515 --> 00:06:00.955
<v Speaker 0>got a couple of questions. Right? But Yeah.

00:06:00.955 --> 00:06:03.400
<v Speaker 1>Go for What kind of things is Trivy

00:06:03.560 --> 00:06:05.160
<v Speaker 0>looking for? What what what's the low hanging

00:06:05.160 --> 00:06:07.000
<v Speaker 0>fruit here when we talk about scanning container

00:06:07.000 --> 00:06:08.200
<v Speaker 0>images and other things?

00:06:08.440 --> 00:06:09.960
<v Speaker 1>So there's a couple of sets of low

00:06:09.960 --> 00:06:12.200
<v Speaker 1>hanging fruit because Trivy's got two main angles.

00:06:12.520 --> 00:06:15.160
<v Speaker 1>First one is just literally saying, okay. Ah,

00:06:15.160 --> 00:06:17.160
<v Speaker 1>you're using an image. You're basing it on

00:06:17.535 --> 00:06:19.775
<v Speaker 1>a base image like an Ubuntu image, and,

00:06:19.775 --> 00:06:21.455
<v Speaker 1>you know, you haven't updated your your your

00:06:21.455 --> 00:06:23.615
<v Speaker 1>base image in the last month. Right? You're

00:06:23.615 --> 00:06:25.135
<v Speaker 1>now missing 20 patches.

00:06:25.295 --> 00:06:26.415
<v Speaker 1>So what does it gives you that quick

00:06:26.415 --> 00:06:28.015
<v Speaker 1>warning of, hey. You know, you're missing 20

00:06:28.015 --> 00:06:30.335
<v Speaker 1>things. Super simple. You need to update your

00:06:30.335 --> 00:06:32.819
<v Speaker 1>base image, rebuild it. Those will go away.

00:06:32.819 --> 00:06:35.060
<v Speaker 1>That's the first thing. But then also, you

00:06:35.060 --> 00:06:37.139
<v Speaker 1>get the same thing at your programming language

00:06:37.139 --> 00:06:40.979
<v Speaker 1>level. So you're using Ruby. You're using NPM.

00:06:41.139 --> 00:06:42.659
<v Speaker 1>And the same deal. Right? You've not updated

00:06:42.659 --> 00:06:45.195
<v Speaker 1>your dependencies. It's not something people want to

00:06:45.195 --> 00:06:46.555
<v Speaker 1>do. It's a bit of a chore. I

00:06:46.555 --> 00:06:47.675
<v Speaker 1>mean, you see it in GitHub. Right? You

00:06:47.675 --> 00:06:49.035
<v Speaker 1>see chore update

00:06:49.035 --> 00:06:49.995
<v Speaker 1>dependencies.

00:06:49.995 --> 00:06:51.675
<v Speaker 1>It is a chore, but this reminds you

00:06:51.675 --> 00:06:53.755
<v Speaker 1>and says, hey. Something critical's come out. So

00:06:53.755 --> 00:06:54.955
<v Speaker 1>this actually no. You might want to do

00:06:54.955 --> 00:06:56.875
<v Speaker 1>this right now. If it's just mediums and

00:06:56.875 --> 00:06:58.780
<v Speaker 1>lows, you might say, you know, next next

00:06:58.780 --> 00:07:00.460
<v Speaker 1>month, next sprint, whatever.

00:07:00.940 --> 00:07:02.700
<v Speaker 1>There's that side of things. And then there's

00:07:02.700 --> 00:07:04.460
<v Speaker 1>other thing which Trivy is getting more into

00:07:04.460 --> 00:07:06.060
<v Speaker 1>now, which is super useful,

00:07:06.300 --> 00:07:09.020
<v Speaker 1>which is scanning all your infrastructure's code stuff.

00:07:09.100 --> 00:07:10.860
<v Speaker 1>So scanning your Terraform,

00:07:11.100 --> 00:07:14.025
<v Speaker 1>also scanning things like Kubernetes manifests and Docker

00:07:14.025 --> 00:07:17.465
<v Speaker 1>files and saying, hey. There are good practices

00:07:17.625 --> 00:07:19.785
<v Speaker 1>that you could be doing here. For example,

00:07:19.785 --> 00:07:21.625
<v Speaker 1>you should not be running your Docker images

00:07:21.625 --> 00:07:22.345
<v Speaker 1>route,

00:07:22.505 --> 00:07:23.465
<v Speaker 1>and you are.

00:07:23.865 --> 00:07:25.705
<v Speaker 1>Right? Let's let's let's remind you, hey. You

00:07:25.705 --> 00:07:26.940
<v Speaker 1>know, you can change this, and you get

00:07:26.940 --> 00:07:28.060
<v Speaker 1>rid of that. Start running as a non

00:07:28.060 --> 00:07:29.259
<v Speaker 1>root user. So that kind of thing as

00:07:29.259 --> 00:07:30.780
<v Speaker 1>well. So it's kind of combo

00:07:30.780 --> 00:07:32.780
<v Speaker 1>of different types of things that you can

00:07:32.780 --> 00:07:33.660
<v Speaker 1>cover with it.

00:07:34.220 --> 00:07:34.940
<v Speaker 0>Okay.

00:07:35.419 --> 00:07:36.780
<v Speaker 0>Thank you for that. I I love the

00:07:36.780 --> 00:07:38.620
<v Speaker 0>root conversation because I'm gonna throw a question

00:07:38.620 --> 00:07:40.380
<v Speaker 0>that, you know, is not directly related to

00:07:40.380 --> 00:07:42.060
<v Speaker 0>Trivy, but I know that you've got the

00:07:42.215 --> 00:07:44.375
<v Speaker 0>the knowledge to maybe guide me on this.

00:07:44.375 --> 00:07:46.855
<v Speaker 1>Yeah. Is it okay for me to have

00:07:46.855 --> 00:07:49.575
<v Speaker 0>my process and my container run as root

00:07:49.655 --> 00:07:52.295
<v Speaker 0>if I'm using username space mapping on the

00:07:52.295 --> 00:07:52.535
<v Speaker 0>host?

00:07:54.240 --> 00:07:56.639
<v Speaker 1>That's an interesting question. The if you're using

00:07:56.639 --> 00:07:58.479
<v Speaker 1>user namespace mapping, which is fun because it

00:07:58.479 --> 00:08:00.479
<v Speaker 1>doesn't work super well in Kubernetes but does

00:08:00.479 --> 00:08:01.440
<v Speaker 1>in Docker,

00:08:01.840 --> 00:08:04.319
<v Speaker 1>then yes. Because your root user inside the

00:08:04.319 --> 00:08:07.120
<v Speaker 1>container isn't actually root. Your root user inside

00:08:07.120 --> 00:08:09.375
<v Speaker 1>the container is some high UID. So it's

00:08:09.375 --> 00:08:10.655
<v Speaker 1>it's it's only as far as the container

00:08:10.655 --> 00:08:12.974
<v Speaker 1>is concerned. And I'm gonna give one small

00:08:12.974 --> 00:08:16.014
<v Speaker 1>caveat to that, which is that usernamespaces

00:08:16.014 --> 00:08:18.414
<v Speaker 1>in Linux have a bit of a mixed

00:08:18.414 --> 00:08:19.615
<v Speaker 1>security history.

00:08:20.095 --> 00:08:21.534
<v Speaker 1>There was a great example of this, like,

00:08:21.534 --> 00:08:22.950
<v Speaker 1>two or three weeks ago. It was a

00:08:22.950 --> 00:08:25.670
<v Speaker 1>CVE twenty twenty two or 185.

00:08:25.750 --> 00:08:27.030
<v Speaker 1>How do you know the number of these

00:08:27.030 --> 00:08:27.590
<v Speaker 0>things?

00:08:27.990 --> 00:08:30.390
<v Speaker 1>Oh, I have a weird memory. CVE numbers

00:08:30.390 --> 00:08:32.630
<v Speaker 1>stick and other stuff like, what I had

00:08:32.630 --> 00:08:35.350
<v Speaker 1>to eat yesterday? No idea. CVE numbers were

00:08:35.350 --> 00:08:37.030
<v Speaker 1>stuff I wrote about a while ago? Yeah.

00:08:37.030 --> 00:08:38.070
<v Speaker 1>Easy. I can do that one.

00:08:38.834 --> 00:08:41.154
<v Speaker 0>There you go. But so that CV was

00:08:41.154 --> 00:08:42.914
<v Speaker 1>really interesting because what it was was it

00:08:42.914 --> 00:08:44.675
<v Speaker 1>was a local privilege escalation. So it's gonna

00:08:44.675 --> 00:08:46.435
<v Speaker 1>let you get root on the host, but

00:08:46.435 --> 00:08:49.875
<v Speaker 1>it needed Linux capability called Capsys admin. Now

00:08:49.875 --> 00:08:51.955
<v Speaker 1>usually Capsys admin is like, you're you're already

00:08:51.955 --> 00:08:54.560
<v Speaker 1>root. Right? So this isn't super important. However,

00:08:55.040 --> 00:08:57.840
<v Speaker 1>Capsus admin inside the username space

00:08:58.080 --> 00:09:00.720
<v Speaker 1>also got you access to this vulnerability.

00:09:01.120 --> 00:09:03.360
<v Speaker 1>So if you're using username spaces, it it

00:09:03.360 --> 00:09:05.760
<v Speaker 1>made this capability available. The code path that

00:09:05.760 --> 00:09:08.320
<v Speaker 1>was exploited was visible, and you could suddenly

00:09:08.595 --> 00:09:11.074
<v Speaker 1>compromise the host. So the thing about username

00:09:11.074 --> 00:09:12.514
<v Speaker 1>spaces is they've got a bit of a

00:09:12.514 --> 00:09:14.754
<v Speaker 1>mixed history. They're a nice idea, but there

00:09:14.754 --> 00:09:17.314
<v Speaker 1>are some extra tax or things that pop

00:09:17.314 --> 00:09:19.314
<v Speaker 1>up if you use them. So in an

00:09:19.314 --> 00:09:21.555
<v Speaker 1>ideal world, the best thing to do is

00:09:22.709 --> 00:09:24.310
<v Speaker 1>probably run instead of using this space and

00:09:24.310 --> 00:09:26.550
<v Speaker 1>don't use and don't use root users. Right?

00:09:26.550 --> 00:09:28.389
<v Speaker 1>That's the ultimate. But then, like, I'm giving

00:09:28.389 --> 00:09:30.310
<v Speaker 1>the security person's view, and I know that

00:09:30.310 --> 00:09:31.589
<v Speaker 1>that's not always practical.

00:09:32.149 --> 00:09:33.670
<v Speaker 1>So I I probably the easiest way to

00:09:33.670 --> 00:09:35.445
<v Speaker 1>do it is try not to run a

00:09:35.445 --> 00:09:37.045
<v Speaker 1>route in general. It's all it's it's the

00:09:37.045 --> 00:09:39.045
<v Speaker 1>best option. Or just to run software. I

00:09:39.045 --> 00:09:41.524
<v Speaker 0>mean, that's another option. Right? Yeah. Kelsey Hightower's

00:09:41.524 --> 00:09:43.285
<v Speaker 1>no code is actually the perfect solution. If

00:09:43.285 --> 00:09:45.605
<v Speaker 1>you have no code, you have no vulnerabilities,

00:09:45.845 --> 00:09:47.685
<v Speaker 1>and that's just, the perfect option. But if

00:09:47.685 --> 00:09:48.005
<v Speaker 1>you do,

00:09:48.980 --> 00:09:49.860
<v Speaker 1>unfortunately,

00:09:49.860 --> 00:09:52.180
<v Speaker 1>have to run some code, then I mean,

00:09:52.180 --> 00:09:53.300
<v Speaker 1>if you think about, like, the way we

00:09:53.300 --> 00:09:55.459
<v Speaker 1>used to run apps before containers in the

00:09:55.459 --> 00:09:56.180
<v Speaker 1>old days,

00:09:56.820 --> 00:09:58.820
<v Speaker 1>most apps didn't run as root. Right? If

00:09:58.820 --> 00:10:01.139
<v Speaker 1>you're running an application so so if think

00:10:01.300 --> 00:10:02.660
<v Speaker 1>if an app would work okay in that

00:10:02.660 --> 00:10:04.825
<v Speaker 1>environment, it should work okay as a non

00:10:04.825 --> 00:10:07.065
<v Speaker 1>root container because it's literally the same thing.

00:10:07.705 --> 00:10:08.985
<v Speaker 1>It's just you need to have, like, your

00:10:08.985 --> 00:10:10.505
<v Speaker 1>Dockerfile that is root for a little while

00:10:10.505 --> 00:10:11.865
<v Speaker 1>while it does all the root stuff and

00:10:11.865 --> 00:10:12.825
<v Speaker 1>then it switches.

00:10:13.225 --> 00:10:14.105
<v Speaker 1>And I know that that's a bit of

00:10:14.105 --> 00:10:15.865
<v Speaker 1>extra work, but once you've got it going,

00:10:15.865 --> 00:10:17.465
<v Speaker 1>it's like it should be not too bad.

00:10:17.625 --> 00:10:18.585
<v Speaker 1>That's the theory anyway.

00:10:19.520 --> 00:10:22.240
<v Speaker 0>Awesome. Well, thank you for entertaining my little

00:10:22.240 --> 00:10:24.240
<v Speaker 0>segue there. But let's jump back to the

00:10:24.240 --> 00:10:25.760
<v Speaker 0>back of the task at hand. Right? So

00:10:25.760 --> 00:10:27.760
<v Speaker 0>we're talking about Trivy. You mentioned something that

00:10:27.760 --> 00:10:29.360
<v Speaker 0>I thought was really interesting, and it's that

00:10:29.360 --> 00:10:31.040
<v Speaker 0>Trivy will prioritize

00:10:31.120 --> 00:10:32.640
<v Speaker 0>some of the things that are scanned in

00:10:32.640 --> 00:10:34.480
<v Speaker 0>my cluster. And I think that's really important

00:10:34.480 --> 00:10:34.960
<v Speaker 0>because

00:10:35.595 --> 00:10:38.395
<v Speaker 0>I'm not sure who's using GitHub, but there's

00:10:38.395 --> 00:10:40.154
<v Speaker 0>this, like, new feature that I think they

00:10:40.154 --> 00:10:42.795
<v Speaker 0>bought from some other developer called dependabot.

00:10:43.035 --> 00:10:46.235
<v Speaker 0>And I I have dependabot fatigue now from

00:10:46.235 --> 00:10:48.714
<v Speaker 0>the amount of issues and pull request that's

00:10:48.714 --> 00:10:49.675
<v Speaker 0>opening across

00:10:49.950 --> 00:10:51.470
<v Speaker 0>all of my repositories.

00:10:51.710 --> 00:10:52.910
<v Speaker 0>So I've been able to

00:10:53.790 --> 00:10:56.110
<v Speaker 0>triage them in a way where something can

00:10:56.110 --> 00:10:58.190
<v Speaker 0>tell me what ones are really important and

00:10:58.190 --> 00:10:59.630
<v Speaker 0>I can go and look at would be

00:10:59.630 --> 00:11:00.590
<v Speaker 0>a really cool tool.

00:11:01.150 --> 00:11:03.315
<v Speaker 1>Yeah. It is cool. And I wanna give

00:11:03.315 --> 00:11:05.155
<v Speaker 1>you my this is a nontrivy specific, but

00:11:05.155 --> 00:11:07.395
<v Speaker 1>but vulnerability scanning thing. And this is one

00:11:07.395 --> 00:11:08.835
<v Speaker 1>of those nuances, like one of those things

00:11:08.835 --> 00:11:10.595
<v Speaker 1>that I said, hey. This

00:11:11.075 --> 00:11:12.995
<v Speaker 1>is, like, something you need to know is

00:11:12.995 --> 00:11:14.515
<v Speaker 1>the way that vulnerability,

00:11:14.835 --> 00:11:16.595
<v Speaker 1>vulnerabilities are rated. So the the way they

00:11:16.595 --> 00:11:19.870
<v Speaker 1>get that critical high, medium, low is essentially,

00:11:19.870 --> 00:11:21.950
<v Speaker 1>there's a a thing called CVSS scoring, and

00:11:21.950 --> 00:11:23.710
<v Speaker 1>you get a number from zero to 10.

00:11:23.870 --> 00:11:25.390
<v Speaker 1>But this is done by an analyst who

00:11:25.390 --> 00:11:27.390
<v Speaker 1>doesn't know anything about your environment, and they

00:11:27.390 --> 00:11:28.670
<v Speaker 1>don't know anything about how you deploy the

00:11:28.670 --> 00:11:29.230
<v Speaker 1>software.

00:11:29.550 --> 00:11:32.670
<v Speaker 1>So CVSS scores, especially in container land, can

00:11:32.670 --> 00:11:34.585
<v Speaker 1>be a bit you know, you you have

00:11:34.585 --> 00:11:36.345
<v Speaker 1>to you can sometimes apply brain and go,

00:11:36.345 --> 00:11:38.345
<v Speaker 1>you know what? That's actually not too bad.

00:11:38.345 --> 00:11:40.185
<v Speaker 1>The the the the canonical example for me,

00:11:40.185 --> 00:11:41.465
<v Speaker 1>there was one in Alpine,

00:11:41.785 --> 00:11:43.865
<v Speaker 1>and it basically had a blank password in

00:11:43.865 --> 00:11:45.065
<v Speaker 1>ETC shadow.

00:11:45.305 --> 00:11:46.905
<v Speaker 1>So, obviously, on a VM, that's super bad

00:11:46.905 --> 00:11:48.265
<v Speaker 1>because it means I can just become root.

00:11:48.699 --> 00:11:50.540
<v Speaker 1>In a container, it only applied if you

00:11:50.540 --> 00:11:52.699
<v Speaker 1>were using PAM. No one uses PAM in

00:11:52.699 --> 00:11:54.699
<v Speaker 1>containers. You only have one user usually in

00:11:54.699 --> 00:11:56.699
<v Speaker 1>containers, so it was totally irrelevant. But if

00:11:56.699 --> 00:11:58.459
<v Speaker 1>you ran a vulnerability scanner on an image,

00:11:58.459 --> 00:12:00.220
<v Speaker 1>it said, hey. You've got a 9.8.

00:12:00.300 --> 00:12:02.255
<v Speaker 1>You know, drop everything in patch now. But

00:12:02.255 --> 00:12:04.654
<v Speaker 1>the reality was it really wasn't drop everything

00:12:04.654 --> 00:12:07.135
<v Speaker 1>in patch now because in containers, who cares?

00:12:07.135 --> 00:12:09.055
<v Speaker 1>So that's that's where save vulnerability scanning is

00:12:09.055 --> 00:12:10.415
<v Speaker 1>one of those things that, like,

00:12:10.895 --> 00:12:12.255
<v Speaker 1>you get those numbers and you can get

00:12:12.255 --> 00:12:14.655
<v Speaker 1>that fatigue of, like, 20 criticals, 30 criticals.

00:12:14.735 --> 00:12:16.335
<v Speaker 1>It can be hard to then to kinda

00:12:16.335 --> 00:12:16.575
<v Speaker 1>say,

00:12:17.300 --> 00:12:18.899
<v Speaker 1>have you, you know, make more sense of

00:12:18.899 --> 00:12:20.100
<v Speaker 1>that? And there's a lot of work going

00:12:20.100 --> 00:12:21.779
<v Speaker 1>on in the industry, and various different companies

00:12:21.779 --> 00:12:23.779
<v Speaker 1>are looking at this. How do you make

00:12:23.779 --> 00:12:24.980
<v Speaker 1>these things more,

00:12:25.220 --> 00:12:26.820
<v Speaker 1>like, more targeted?

00:12:27.620 --> 00:12:29.699
<v Speaker 1>And Aqua have got stuff, that we do

00:12:29.699 --> 00:12:31.300
<v Speaker 1>and other companies got stuff they do to

00:12:31.300 --> 00:12:32.894
<v Speaker 1>try and say, you know, are there live

00:12:32.894 --> 00:12:34.415
<v Speaker 1>exploits? So you can say, is there a

00:12:34.415 --> 00:12:36.095
<v Speaker 1>live exploit for this issue? Okay. Now it's

00:12:36.095 --> 00:12:37.774
<v Speaker 1>more serious. Now you really do want to

00:12:37.774 --> 00:12:39.295
<v Speaker 1>fix this before bad things happen to your

00:12:39.295 --> 00:12:40.894
<v Speaker 1>to your environment. So but it's it's one

00:12:40.894 --> 00:12:42.335
<v Speaker 1>of those things. It's it's a funny one.

00:12:43.295 --> 00:12:43.615
<v Speaker 0>Okay.

00:12:44.360 --> 00:12:47.320
<v Speaker 0>So we've kinda covered that Trivy will scan

00:12:47.320 --> 00:12:50.200
<v Speaker 0>my container images. It will scan my Kubernetes

00:12:50.200 --> 00:12:52.760
<v Speaker 0>manifest. It can scan my infrastructure's code. It's

00:12:52.760 --> 00:12:55.560
<v Speaker 0>looking not just for security vulnerabilities with known

00:12:55.560 --> 00:12:58.440
<v Speaker 0>CVEs, but also for best practices and to

00:12:58.440 --> 00:12:58.840
<v Speaker 0>guide us.

00:12:59.705 --> 00:13:00.905
<v Speaker 0>Where do I run it?

00:13:01.545 --> 00:13:02.745
<v Speaker 1>So you can run it in a number

00:13:02.745 --> 00:13:03.625
<v Speaker 1>of different places.

00:13:03.865 --> 00:13:05.945
<v Speaker 1>You can run it just on a workstation.

00:13:05.945 --> 00:13:07.145
<v Speaker 1>That is the one of the reasons I

00:13:07.145 --> 00:13:09.945
<v Speaker 1>like Trivy a lot is you basically install

00:13:09.945 --> 00:13:11.145
<v Speaker 1>it and run it. There's not a lot

00:13:11.145 --> 00:13:13.370
<v Speaker 1>of fancy setup. Some of the container boundary

00:13:13.370 --> 00:13:14.890
<v Speaker 1>scanners in the old days used to be,

00:13:14.890 --> 00:13:16.810
<v Speaker 1>like, quite complicated. You had to pretend to

00:13:16.810 --> 00:13:18.090
<v Speaker 1>be a container registry,

00:13:18.490 --> 00:13:19.450
<v Speaker 1>which was awkward,

00:13:19.770 --> 00:13:21.850
<v Speaker 1>but Trivy just works. We'll we'll as we'll

00:13:21.850 --> 00:13:23.370
<v Speaker 1>see when we get to to running it.

00:13:23.450 --> 00:13:26.730
<v Speaker 1>You can also run it in CICD pipelines.

00:13:26.730 --> 00:13:28.495
<v Speaker 1>So, obviously, a lot of people will use

00:13:28.495 --> 00:13:29.215
<v Speaker 1>GitHub.

00:13:30.015 --> 00:13:31.215
<v Speaker 1>And one of the things you can do

00:13:31.215 --> 00:13:32.895
<v Speaker 1>with Trivy and as I I was actually

00:13:32.895 --> 00:13:34.575
<v Speaker 1>practicing this this morning to make sure I

00:13:34.575 --> 00:13:36.335
<v Speaker 1>could remember exactly how to do it,

00:13:36.895 --> 00:13:38.575
<v Speaker 1>was you can set up a GitHub action.

00:13:38.575 --> 00:13:40.335
<v Speaker 1>And you can say whenever I, you know,

00:13:40.335 --> 00:13:42.899
<v Speaker 1>push to this repository or whenever I build

00:13:42.899 --> 00:13:45.700
<v Speaker 1>the container image, run a Trivy scan, and

00:13:45.700 --> 00:13:48.020
<v Speaker 1>then integrate that with GitHub code scanning and

00:13:48.020 --> 00:13:49.380
<v Speaker 1>tell me about and it goes in with

00:13:49.380 --> 00:13:50.820
<v Speaker 1>the depend reports, you know, and you'll get

00:13:50.820 --> 00:13:52.500
<v Speaker 1>this thing saying, here's all your vulnerabilities.

00:13:53.205 --> 00:13:54.565
<v Speaker 1>So there's a couple of different places you

00:13:54.565 --> 00:13:56.565
<v Speaker 1>can scan it. You can also integrate it

00:13:56.565 --> 00:13:58.165
<v Speaker 1>with container registries.

00:13:58.245 --> 00:13:59.765
<v Speaker 1>So if you're using an on prem registry

00:13:59.765 --> 00:14:00.645
<v Speaker 1>like Harbor,

00:14:01.125 --> 00:14:03.205
<v Speaker 1>you can integrate Trivy with Harbor,

00:14:03.845 --> 00:14:04.965
<v Speaker 1>or you can you know? So you can

00:14:04.965 --> 00:14:06.965
<v Speaker 1>run it against any container registry as well.

00:14:07.250 --> 00:14:09.329
<v Speaker 1>So it's it's pretty flexible in where you

00:14:09.329 --> 00:14:11.170
<v Speaker 1>can actually, like, go and target this stuff.

00:14:11.889 --> 00:14:14.690
<v Speaker 1>What I like about Trivy is you can

00:14:14.690 --> 00:14:16.050
<v Speaker 1>give it to developers,

00:14:16.690 --> 00:14:18.769
<v Speaker 1>and when they're writing the code, they can

00:14:18.769 --> 00:14:20.845
<v Speaker 1>run scans on their desktops. And then you

00:14:20.925 --> 00:14:23.085
<v Speaker 1>when the same scanner later on, and then

00:14:23.085 --> 00:14:25.245
<v Speaker 1>you get no surprises. Like, they know what's

00:14:25.245 --> 00:14:27.005
<v Speaker 1>coming. Because one of the worst things about

00:14:27.005 --> 00:14:28.925
<v Speaker 1>security is you don't tell people about the

00:14:28.925 --> 00:14:30.525
<v Speaker 1>problem till it's, like, five steps into the

00:14:30.525 --> 00:14:32.365
<v Speaker 1>process, like they're about to deploy live. And

00:14:32.365 --> 00:14:34.365
<v Speaker 1>suddenly, it's like, oh, you failed and you

00:14:34.365 --> 00:14:34.925
<v Speaker 1>can't deploy.

00:14:35.520 --> 00:14:37.520
<v Speaker 1>Much better to tell people in stage one.

00:14:37.520 --> 00:14:38.720
<v Speaker 1>You know, when you're writing the code, please

00:14:38.720 --> 00:14:41.120
<v Speaker 1>run this thing and remediate these these issues

00:14:41.360 --> 00:14:42.880
<v Speaker 1>so you don't get surprised when you're trying

00:14:42.880 --> 00:14:45.120
<v Speaker 1>to push to live. Right? And that that

00:14:45.280 --> 00:14:46.480
<v Speaker 1>I think that's one of the benefits.

00:14:48.085 --> 00:14:48.965
<v Speaker 0>Awesome.

00:14:49.205 --> 00:14:51.285
<v Speaker 0>Well, I think we've covered enough ground on

00:14:51.285 --> 00:14:54.165
<v Speaker 0>what and why. So shall we Yeah. We

00:14:54.165 --> 00:14:56.725
<v Speaker 0>play with it? Yeah. Let's let's install and

00:14:56.725 --> 00:14:57.925
<v Speaker 1>have a play and see how it all

00:14:57.925 --> 00:15:00.805
<v Speaker 1>works. Alright. Let's see. I have my screen

00:15:00.805 --> 00:15:04.270
<v Speaker 0>share here. I have the Trivy documentation,

00:15:04.589 --> 00:15:07.070
<v Speaker 1>which I'm sure we will be leveraging today.

00:15:07.070 --> 00:15:09.389
<v Speaker 0>And I have the GitHub repository here. So

00:15:09.389 --> 00:15:11.870
<v Speaker 0>if anyone doesn't

00:15:11.870 --> 00:15:13.389
<v Speaker 0>know how to Google, then you can go

00:15:13.389 --> 00:15:17.230
<v Speaker 0>to github.com/aquasecurity/trivywith1v.

00:15:17.295 --> 00:15:19.214
<v Speaker 0>I have been typoing it with two v's

00:15:19.214 --> 00:15:20.415
<v Speaker 0>all week.

00:15:21.214 --> 00:15:23.295
<v Speaker 0>But I'm getting better. I really am. Okay.

00:15:24.815 --> 00:15:26.575
<v Speaker 0>So we've got a nice little

00:15:26.815 --> 00:15:28.495
<v Speaker 0>Yep. Is this like a coverage map of

00:15:28.495 --> 00:15:30.520
<v Speaker 0>some sort? All the things that? Yeah. It's

00:15:30.520 --> 00:15:31.640
<v Speaker 1>trying to give you that view I was

00:15:31.640 --> 00:15:32.920
<v Speaker 1>talking about of the different things you can

00:15:32.920 --> 00:15:34.440
<v Speaker 1>do and where you can scan. So you've

00:15:34.440 --> 00:15:35.800
<v Speaker 1>kinda got trivia that the kind of base

00:15:35.800 --> 00:15:37.320
<v Speaker 1>there, and then it says, you you can

00:15:37.320 --> 00:15:39.560
<v Speaker 1>scan container images. You can scan the file

00:15:39.560 --> 00:15:40.920
<v Speaker 1>systems as well, and this is kind of

00:15:40.920 --> 00:15:43.480
<v Speaker 1>fun. You can actually scan virtual machines with

00:15:43.480 --> 00:15:44.600
<v Speaker 1>Trivy if you feel like it.

00:15:45.404 --> 00:15:46.605
<v Speaker 1>So you can use it for scanning your

00:15:46.605 --> 00:15:48.845
<v Speaker 1>VM images. And I say that because, like,

00:15:48.845 --> 00:15:51.485
<v Speaker 1>there's there's what I'll call traditional vulnerability scanners,

00:15:51.485 --> 00:15:52.525
<v Speaker 1>like Nessus

00:15:52.685 --> 00:15:53.885
<v Speaker 1>and Nexpose

00:15:53.885 --> 00:15:54.445
<v Speaker 1>and,

00:15:54.765 --> 00:15:56.285
<v Speaker 1>you know, a lot of older tools that

00:15:56.285 --> 00:15:57.725
<v Speaker 1>are in Qualys, obviously.

00:15:58.285 --> 00:15:59.644
<v Speaker 1>But you can also use Trivy to do

00:15:59.644 --> 00:16:01.480
<v Speaker 1>some of that as well. You can scan

00:16:01.480 --> 00:16:03.399
<v Speaker 1>Git repos, so that's the three boxes across

00:16:03.399 --> 00:16:04.040
<v Speaker 1>the middle.

00:16:04.440 --> 00:16:05.560
<v Speaker 1>And then you can see the types of

00:16:05.560 --> 00:16:06.839
<v Speaker 1>things you can scan them for. So you

00:16:06.839 --> 00:16:09.079
<v Speaker 1>can scan for vulnerabilities and misconfigurations.

00:16:10.279 --> 00:16:11.000
<v Speaker 1>Awesome.

00:16:11.639 --> 00:16:13.480
<v Speaker 0>Alright. I'm gonna click on getting started and

00:16:13.480 --> 00:16:15.720
<v Speaker 0>hope there's a That's always installed. That's always

00:16:15.720 --> 00:16:17.055
<v Speaker 1>a good place to start. Yeah. So we've

00:16:17.055 --> 00:16:18.495
<v Speaker 1>we've got an install link.

00:16:18.735 --> 00:16:20.255
<v Speaker 1>And then it's all down to what type

00:16:20.255 --> 00:16:20.735
<v Speaker 1>of

00:16:21.455 --> 00:16:22.655
<v Speaker 1>setup you're using.

00:16:23.215 --> 00:16:25.935
<v Speaker 0>I am on a Mac. So You're on

00:16:25.935 --> 00:16:28.175
<v Speaker 0>a Mac. So yeah. Go ahead. The Homebrew

00:16:28.175 --> 00:16:28.735
<v Speaker 1>one.

00:16:29.215 --> 00:16:29.535
<v Speaker 1>See.

00:16:31.120 --> 00:16:32.960
<v Speaker 0>Let's make that a bit bigger. Oh, I've

00:16:32.960 --> 00:16:34.240
<v Speaker 0>triggered the responsive

00:16:34.720 --> 00:16:36.560
<v Speaker 0>design. That's that's all good.

00:16:36.800 --> 00:16:38.480
<v Speaker 0>Alright. So we'll let that install in the

00:16:38.480 --> 00:16:40.400
<v Speaker 0>background. So it's quite good support here. I

00:16:40.400 --> 00:16:42.000
<v Speaker 0>love that when I see Next and NextOS

00:16:42.000 --> 00:16:44.320
<v Speaker 0>support. So Yeah. That's pretty cool. I'm a

00:16:44.320 --> 00:16:46.765
<v Speaker 0>huge fan of Next. There's a ton of

00:16:46.765 --> 00:16:48.125
<v Speaker 1>different ways. And, yeah, there has been a

00:16:48.125 --> 00:16:49.565
<v Speaker 1>lot of work done looking at fleshing these

00:16:49.565 --> 00:16:51.005
<v Speaker 1>out and, like, you know, it is one

00:16:51.005 --> 00:16:52.365
<v Speaker 1>of the challenges with open source. Right? It's

00:16:52.365 --> 00:16:54.045
<v Speaker 1>trying to meet everyone where they are per

00:16:54.045 --> 00:16:56.845
<v Speaker 1>package. There's so many different package install options

00:16:56.845 --> 00:16:58.525
<v Speaker 1>these days. Like, you know, which one are

00:16:58.525 --> 00:16:59.965
<v Speaker 1>you gonna be using? It's it's tricky.

00:17:00.930 --> 00:17:03.330
<v Speaker 0>Well, yeah, I guess so. I mean, it's

00:17:03.330 --> 00:17:04.770
<v Speaker 0>written in Go, is it? Is that is

00:17:04.770 --> 00:17:07.089
<v Speaker 0>that I just assumed that because we're, you

00:17:07.089 --> 00:17:09.010
<v Speaker 0>know, in the cloud native space. But We're

00:17:09.010 --> 00:17:10.210
<v Speaker 1>in cloud native. It's going to be Go.

00:17:10.210 --> 00:17:11.809
<v Speaker 1>It is Go. Yes. Absolutely.

00:17:11.890 --> 00:17:13.330
<v Speaker 0>Alright. I can see there's a whole bunch

00:17:13.330 --> 00:17:15.345
<v Speaker 0>of options for container images, which is great

00:17:15.345 --> 00:17:17.105
<v Speaker 0>because I get rate limited from Docker Hub

00:17:17.105 --> 00:17:19.425
<v Speaker 0>all the time. So I know. I actually

00:17:19.585 --> 00:17:20.705
<v Speaker 1>and this is the thing I was doing

00:17:20.705 --> 00:17:21.424
<v Speaker 1>this morning

00:17:22.065 --> 00:17:24.785
<v Speaker 1>was I realized how simple it is to

00:17:25.025 --> 00:17:26.945
<v Speaker 1>set up a GitHub action to build and

00:17:26.945 --> 00:17:29.960
<v Speaker 1>push and also check digital signatures and do

00:17:29.960 --> 00:17:32.040
<v Speaker 1>vulnerability scanning in, one action. So I'm I'm

00:17:32.040 --> 00:17:33.400
<v Speaker 1>probably gonna move all my images to GitHub

00:17:33.400 --> 00:17:35.000
<v Speaker 1>container registry now just for ease of use

00:17:35.000 --> 00:17:36.120
<v Speaker 1>because I'm there. More like code is there

00:17:36.120 --> 00:17:36.679
<v Speaker 1>anyway.

00:17:37.000 --> 00:17:38.600
<v Speaker 0>Yeah. I've started moving all of my stuff

00:17:38.600 --> 00:17:40.760
<v Speaker 0>over to GitHub's container registry as well. It

00:17:40.760 --> 00:17:42.595
<v Speaker 0>it just works really well. It's it's well

00:17:42.595 --> 00:17:45.475
<v Speaker 0>integrated with GitHub actions. So Yeah. That's basically

00:17:45.475 --> 00:17:46.914
<v Speaker 1>what I was like. I literally copy pasted

00:17:46.914 --> 00:17:48.034
<v Speaker 1>this thing and it worked. I was like,

00:17:48.034 --> 00:17:49.875
<v Speaker 1>oh my god. I was expecting at least

00:17:49.875 --> 00:17:51.154
<v Speaker 1>an hour of fighting here.

00:17:51.794 --> 00:17:54.195
<v Speaker 1>Woo hoo. Well, we have the Trivy CLI,

00:17:54.195 --> 00:17:56.210
<v Speaker 0>a whole bunch of subcommands. But before we

00:17:56.210 --> 00:17:58.210
<v Speaker 0>dive into that, there is a question from

00:17:58.210 --> 00:18:00.370
<v Speaker 0>Joseph in the the chat. So I'll pop

00:18:00.370 --> 00:18:02.530
<v Speaker 0>that on the screen. But Joseph is asking,

00:18:03.090 --> 00:18:05.650
<v Speaker 0>how does Trivy keep itself updated?

00:18:06.130 --> 00:18:08.050
<v Speaker 0>Does it get any latest info from any

00:18:08.050 --> 00:18:08.290
<v Speaker 0>server?

00:18:08.914 --> 00:18:10.835
<v Speaker 1>Yes. So what we'll see we'll see this

00:18:10.835 --> 00:18:12.755
<v Speaker 1>when we run it. Is Trivy will download

00:18:12.755 --> 00:18:15.235
<v Speaker 1>a database. So, essentially, what Trivy is doing,

00:18:15.235 --> 00:18:16.515
<v Speaker 1>and they actually have a list of all

00:18:16.515 --> 00:18:18.195
<v Speaker 1>the sources on the documentation,

00:18:18.674 --> 00:18:21.635
<v Speaker 1>is it is pulling security databases for lots

00:18:21.635 --> 00:18:22.914
<v Speaker 1>of different Linux distributions.

00:18:23.320 --> 00:18:25.320
<v Speaker 1>So it's pulling Alpine, it's pulling Ubuntu, it's

00:18:25.320 --> 00:18:27.400
<v Speaker 1>pulling Debian, Red Hat, all the all lots

00:18:27.400 --> 00:18:29.320
<v Speaker 1>of distros. And that's how it finds out

00:18:29.320 --> 00:18:32.120
<v Speaker 1>vulnerability information. Right? Because these databases online that

00:18:32.120 --> 00:18:34.840
<v Speaker 1>are maintained that say which package versions of

00:18:34.840 --> 00:18:35.880
<v Speaker 1>which CVEs.

00:18:35.960 --> 00:18:37.405
<v Speaker 1>So it has to pull that down. It

00:18:37.405 --> 00:18:39.645
<v Speaker 1>also pulls down the theme for, like, NPM

00:18:39.645 --> 00:18:41.565
<v Speaker 1>and Ruby gems and things like that.

00:18:42.285 --> 00:18:44.845
<v Speaker 1>You can run it offline. You know, if

00:18:44.845 --> 00:18:46.285
<v Speaker 1>you have a look at isolated air gapped

00:18:46.285 --> 00:18:48.445
<v Speaker 1>environment, we do have instructions for how to

00:18:48.445 --> 00:18:50.740
<v Speaker 1>do that. It is obviously more manual because

00:18:50.740 --> 00:18:52.580
<v Speaker 1>you can't do that process, but it is

00:18:52.580 --> 00:18:54.660
<v Speaker 1>possible. But in general, yeah, there's a database,

00:18:54.660 --> 00:18:56.100
<v Speaker 1>basically, and it updates itself.

00:18:56.420 --> 00:18:58.580
<v Speaker 0>So does this mean even if my infrastructure

00:18:58.580 --> 00:19:01.380
<v Speaker 0>has a relatively old version of Trivy that

00:19:01.380 --> 00:19:03.220
<v Speaker 0>it can still always get the latest security

00:19:03.220 --> 00:19:04.934
<v Speaker 0>information to do scanning?

00:19:05.015 --> 00:19:05.894
<v Speaker 1>Yes.

00:19:05.895 --> 00:19:07.335
<v Speaker 1>I I wanna say that there will be

00:19:07.335 --> 00:19:09.975
<v Speaker 1>times when database formats get changed, so it's

00:19:09.975 --> 00:19:12.054
<v Speaker 1>worth kinda keeping up to date. But in

00:19:12.054 --> 00:19:13.575
<v Speaker 1>general, yeah. Yeah. Yeah. I I I was

00:19:13.575 --> 00:19:14.775
<v Speaker 1>running a version of, like, at least two

00:19:14.775 --> 00:19:16.535
<v Speaker 1>or three old before this morning when I

00:19:16.535 --> 00:19:17.095
<v Speaker 1>updated it.

00:19:17.750 --> 00:19:19.830
<v Speaker 1>And, yeah, it's still working fine. So, yes,

00:19:19.830 --> 00:19:21.429
<v Speaker 1>it will do. But but, yeah, my caveat

00:19:21.429 --> 00:19:22.710
<v Speaker 1>there is I'm sure that we'll get database

00:19:22.710 --> 00:19:24.950
<v Speaker 1>changes as time goes on. Alright. You got

00:19:24.950 --> 00:19:27.110
<v Speaker 0>a snarky comment from your colleague, and I

00:19:27.110 --> 00:19:29.509
<v Speaker 0>speak slower. I made mistakes already.

00:19:29.990 --> 00:19:30.470
<v Speaker 1>Sorry.

00:19:31.755 --> 00:19:34.315
<v Speaker 1>So this is this is exactly the problem.

00:19:34.715 --> 00:19:37.275
<v Speaker 1>Was we do speak people speak quickly. If

00:19:37.275 --> 00:19:38.554
<v Speaker 1>you come to Glasgow

00:19:38.795 --> 00:19:40.475
<v Speaker 1>and you're not Glaswegian and you go into

00:19:40.475 --> 00:19:43.035
<v Speaker 1>Glasgow pub, you will not understand what's going

00:19:43.035 --> 00:19:44.635
<v Speaker 1>on. I'm sorry.

00:19:44.635 --> 00:19:46.760
<v Speaker 1>This is why. Yeah. When you get that

00:19:46.760 --> 00:19:48.360
<v Speaker 0>random tall person that just goes up to

00:19:48.360 --> 00:19:50.919
<v Speaker 0>this. Alright. How you doing? Alright. Yep. Alright,

00:19:50.919 --> 00:19:51.399
<v Speaker 1>mate.

00:19:52.440 --> 00:19:53.399
<v Speaker 1>And then Alright.

00:19:54.200 --> 00:19:56.280
<v Speaker 0>No. How'd you go? Okay. Yeah. No. I

00:19:56.280 --> 00:19:57.320
<v Speaker 1>was gonna say, yeah, it will just be

00:19:57.320 --> 00:19:58.440
<v Speaker 1>like that. So Yeah.

00:19:59.195 --> 00:20:00.635
<v Speaker 0>Is I know it's still their best, but

00:20:00.635 --> 00:20:02.235
<v Speaker 0>we'll we'll get it under We will our

00:20:02.235 --> 00:20:02.875
<v Speaker 0>control.

00:20:03.195 --> 00:20:03.995
<v Speaker 0>Okay.

00:20:03.995 --> 00:20:05.435
<v Speaker 0>So we got Trivy still alive. We got

00:20:05.435 --> 00:20:06.875
<v Speaker 0>all these sub commands. Do you want me

00:20:06.875 --> 00:20:08.235
<v Speaker 0>to go back to the get started guide

00:20:08.235 --> 00:20:10.395
<v Speaker 0>or should we just Should we do one?

00:20:10.395 --> 00:20:11.915
<v Speaker 1>Let let let let's do one to to

00:20:11.915 --> 00:20:14.180
<v Speaker 1>to make sure everything's working. So you can

00:20:14.180 --> 00:20:16.980
<v Speaker 1>do the the most basic Trivy scan is

00:20:16.980 --> 00:20:19.539
<v Speaker 1>to scan an image. So we do Trivy.

00:20:20.420 --> 00:20:22.340
<v Speaker 1>So if we have run Trivy and we

00:20:22.340 --> 00:20:24.260
<v Speaker 1>then give it the command image,

00:20:25.300 --> 00:20:27.380
<v Speaker 1>and then we put in, say, Ubuntu colon

00:20:27.380 --> 00:20:29.545
<v Speaker 1>20 dot o four as a really standard

00:20:29.545 --> 00:20:30.105
<v Speaker 1>image.

00:20:30.345 --> 00:20:31.705
<v Speaker 0>Yeah. That's the And that's like my

00:20:32.425 --> 00:20:34.345
<v Speaker 0>of Ubuntu, isn't it? Yeah. That's like that's

00:20:34.345 --> 00:20:35.465
<v Speaker 1>the latest LTS.

00:20:35.545 --> 00:20:36.425
<v Speaker 1>And you can see that was the thing

00:20:36.425 --> 00:20:37.865
<v Speaker 1>I was talking about at the database. There's

00:20:37.865 --> 00:20:40.105
<v Speaker 1>it going and getting that database and downloading

00:20:40.105 --> 00:20:41.785
<v Speaker 1>it. Okay. So I I've got a question.

00:20:42.710 --> 00:20:44.310
<v Speaker 0>I as far as I know, I don't

00:20:44.310 --> 00:20:46.790
<v Speaker 0>have the ubuntu image on my machine. In

00:20:46.790 --> 00:20:48.230
<v Speaker 0>fact, right now, I don't even have a

00:20:48.230 --> 00:20:50.710
<v Speaker 0>Docker daemon running. So I'm assuming it's Trivy.

00:20:50.790 --> 00:20:52.870
<v Speaker 0>It's not going through Docker as a proxy

00:20:52.870 --> 00:20:54.675
<v Speaker 0>or container d or anything like that. It's

00:20:54.675 --> 00:20:56.755
<v Speaker 0>pulling the image itself. It's pulling image and

00:20:56.755 --> 00:20:58.835
<v Speaker 1>and checking. So you don't actually necessarily have

00:20:58.835 --> 00:20:59.955
<v Speaker 1>to have the image down.

00:21:00.835 --> 00:21:02.515
<v Speaker 1>And and that's why it's using the same

00:21:02.515 --> 00:21:03.715
<v Speaker 1>URL format

00:21:03.715 --> 00:21:04.915
<v Speaker 1>as Docker,

00:21:05.155 --> 00:21:06.915
<v Speaker 1>which is it assumes Docker Hub if you

00:21:06.915 --> 00:21:08.355
<v Speaker 1>don't tell it anything otherwise.

00:21:09.910 --> 00:21:11.910
<v Speaker 1>If you're using that's why you're using Podman,

00:21:11.910 --> 00:21:13.750
<v Speaker 1>you might get some funny results,

00:21:14.230 --> 00:21:16.710
<v Speaker 1>but in general, you should be alright.

00:21:18.390 --> 00:21:21.270
<v Speaker 0>Okay. Well, my font is a little big,

00:21:21.270 --> 00:21:22.070
<v Speaker 0>but let's.

00:21:23.275 --> 00:21:23.914
<v Speaker 0>Yeah.

00:21:24.875 --> 00:21:26.155
<v Speaker 0>There we go. I could I could send

00:21:26.155 --> 00:21:27.595
<v Speaker 0>that back in, but why don't we kinda

00:21:27.595 --> 00:21:29.195
<v Speaker 0>walk through what what we've got here? So

00:21:29.195 --> 00:21:31.035
<v Speaker 1>this will give you a big long list

00:21:31.035 --> 00:21:32.475
<v Speaker 1>of it's not too long actually.

00:21:32.795 --> 00:21:34.235
<v Speaker 1>And what you can see here is this

00:21:34.235 --> 00:21:36.394
<v Speaker 1>is the basic information you're gonna get out.

00:21:37.115 --> 00:21:38.789
<v Speaker 1>And what you see at the top is

00:21:38.789 --> 00:21:40.710
<v Speaker 1>you'll get a list of the severity of

00:21:40.710 --> 00:21:43.909
<v Speaker 1>issues. So we've got 27 mediums, 40 lows,

00:21:44.549 --> 00:21:46.629
<v Speaker 1>a total of 67 vulnerabilities.

00:21:46.710 --> 00:21:48.390
<v Speaker 1>And then what it's gonna do is give

00:21:48.390 --> 00:21:51.664
<v Speaker 1>you the package names, the CVEs,

00:21:51.665 --> 00:21:53.505
<v Speaker 1>and then the severity rating

00:21:53.505 --> 00:21:55.265
<v Speaker 1>and and where it came from. So why

00:21:55.265 --> 00:21:56.865
<v Speaker 1>is it telling you you've got that?

00:21:57.985 --> 00:21:59.345
<v Speaker 1>And then you'll also see at the right

00:21:59.345 --> 00:22:00.465
<v Speaker 1>hand side, you get a little bit of

00:22:00.465 --> 00:22:02.785
<v Speaker 1>a description, you know, what is this CVE.

00:22:02.785 --> 00:22:04.559
<v Speaker 1>Now let's be honest.

00:22:06.160 --> 00:22:07.119
<v Speaker 1>I'd say

00:22:08.000 --> 00:22:09.760
<v Speaker 1>a lot of people probably wouldn't read that

00:22:09.760 --> 00:22:11.919
<v Speaker 1>that detailed information of each vulnerability,

00:22:12.160 --> 00:22:13.440
<v Speaker 1>but it is there if you want it.

00:22:13.440 --> 00:22:14.960
<v Speaker 1>And we also have an AVD link, which

00:22:14.960 --> 00:22:16.960
<v Speaker 1>is a vulnerability database we maintain,

00:22:17.280 --> 00:22:18.720
<v Speaker 1>which which has some more information.

00:22:20.835 --> 00:22:23.235
<v Speaker 0>This image looks alright. It's all low, medium.

00:22:23.235 --> 00:22:25.715
<v Speaker 0>There's nothing. Yeah. But the fun thing is,

00:22:25.715 --> 00:22:27.475
<v Speaker 1>and this is I picked that image kinda

00:22:27.475 --> 00:22:28.195
<v Speaker 1>deliberately.

00:22:29.395 --> 00:22:30.675
<v Speaker 1>We've got 67

00:22:30.675 --> 00:22:31.555
<v Speaker 1>vulnerabilities

00:22:31.555 --> 00:22:34.115
<v Speaker 1>in an image that is as fresh as

00:22:34.115 --> 00:22:36.810
<v Speaker 1>possible from Docker Hub. So this is a

00:22:36.810 --> 00:22:38.490
<v Speaker 1>Docker official image. This is one of the

00:22:38.490 --> 00:22:39.770
<v Speaker 1>maintain supported

00:22:39.850 --> 00:22:40.490
<v Speaker 1>things.

00:22:40.890 --> 00:22:43.610
<v Speaker 1>Why do we have 67 vulnerabilities?

00:22:43.610 --> 00:22:45.610
<v Speaker 1>And this is a weird nuance

00:22:45.770 --> 00:22:46.409
<v Speaker 1>of

00:22:46.570 --> 00:22:47.690
<v Speaker 1>Debian and Ubuntu.

00:22:48.075 --> 00:22:50.955
<v Speaker 1>Debian and Ubuntu both maintain a list of

00:22:50.955 --> 00:22:52.715
<v Speaker 1>what's called unfixed vulnerabilities.

00:22:53.034 --> 00:22:54.635
<v Speaker 1>So that's things for which there is a

00:22:54.635 --> 00:22:55.595
<v Speaker 1>CVE,

00:22:55.595 --> 00:22:57.195
<v Speaker 1>but they have not patched it yet.

00:22:57.835 --> 00:22:58.874
<v Speaker 1>By default,

00:22:59.195 --> 00:23:01.274
<v Speaker 1>all the container vulnerability scanners I've seen will

00:23:01.274 --> 00:23:03.115
<v Speaker 1>tell you about those even though you can't

00:23:03.115 --> 00:23:04.850
<v Speaker 1>patch them. So even if you got that

00:23:04.850 --> 00:23:06.690
<v Speaker 1>image and you did apt update, apt up

00:23:06.690 --> 00:23:07.570
<v Speaker 1>upgrade,

00:23:07.570 --> 00:23:09.570
<v Speaker 1>it would still come back with 67.

00:23:10.050 --> 00:23:12.850
<v Speaker 1>Most people don't want that because they can't

00:23:12.850 --> 00:23:13.570
<v Speaker 1>patch it.

00:23:13.970 --> 00:23:16.610
<v Speaker 1>So a very useful Trivy tip, this is

00:23:16.610 --> 00:23:18.530
<v Speaker 1>my first useful Trivy tip of the day,

00:23:18.845 --> 00:23:21.645
<v Speaker 1>is a flag call ignore unfixed.

00:23:22.605 --> 00:23:25.165
<v Speaker 1>So if you run that again and probably

00:23:25.165 --> 00:23:26.605
<v Speaker 1>before the image name,

00:23:27.085 --> 00:23:29.005
<v Speaker 1>just just you might I might work there

00:23:29.005 --> 00:23:29.885
<v Speaker 1>or you might just put it before the

00:23:29.885 --> 00:23:31.005
<v Speaker 1>image name. I think probably before the image

00:23:31.005 --> 00:23:31.245
<v Speaker 1>name.

00:23:33.690 --> 00:23:35.529
<v Speaker 1>And you run the same thing again.

00:23:38.730 --> 00:23:41.850
<v Speaker 0>Zero. Perfect score. Because in reality, that's what

00:23:41.850 --> 00:23:43.529
<v Speaker 1>you should get. Right? Because as far as

00:23:43.529 --> 00:23:45.609
<v Speaker 1>what Ubuntu can actually do for you,

00:23:46.409 --> 00:23:48.644
<v Speaker 1>that's zero. There's no you know, you've updated

00:23:48.644 --> 00:23:50.404
<v Speaker 1>every package, which you'd expect. Right? Because that's

00:23:50.404 --> 00:23:52.005
<v Speaker 1>the bang bang up to date image out

00:23:52.005 --> 00:23:53.124
<v Speaker 1>out of Docker Hub.

00:23:53.524 --> 00:23:55.044
<v Speaker 1>Whether you want which way you want to

00:23:55.044 --> 00:23:56.804
<v Speaker 1>run that will depend on your environment.

00:23:57.205 --> 00:23:59.524
<v Speaker 1>Old school vuln scanners, like, again, Nessus and

00:23:59.524 --> 00:24:01.684
<v Speaker 1>Expos, all the other traditional ones, they don't

00:24:01.684 --> 00:24:03.600
<v Speaker 1>show you unfixed issues. In fact, I don't

00:24:03.600 --> 00:24:04.800
<v Speaker 1>even think some of them can show you

00:24:04.800 --> 00:24:06.560
<v Speaker 1>unfixed issues. So it can be a bit

00:24:06.560 --> 00:24:07.920
<v Speaker 1>weird for people. They're like, oh, I've I've

00:24:07.920 --> 00:24:10.159
<v Speaker 1>scanned my images and there's all these issues.

00:24:10.880 --> 00:24:12.160
<v Speaker 1>Basically, I'd say most of the time you

00:24:12.160 --> 00:24:13.600
<v Speaker 1>probably want ignore unfixed.

00:24:13.840 --> 00:24:15.760
<v Speaker 1>It's not the default because that's how container

00:24:15.760 --> 00:24:18.240
<v Speaker 1>scanners tend to work, but it's worth definitely

00:24:18.240 --> 00:24:20.664
<v Speaker 1>adding that generally for Ubuntu and Debian based

00:24:20.664 --> 00:24:21.304
<v Speaker 1>images.

00:24:22.184 --> 00:24:23.624
<v Speaker 0>Okay. Cool.

00:24:25.304 --> 00:24:27.385
<v Speaker 0>Yeah. That works pretty well. We got a

00:24:27.385 --> 00:24:29.544
<v Speaker 0>a snarky comment from Russell, but I'm gonna

00:24:29.544 --> 00:24:31.945
<v Speaker 0>scan my clustered image because I'm curious. So

00:24:32.105 --> 00:24:32.424
<v Speaker 0>Yeah.

00:24:33.259 --> 00:24:34.139
<v Speaker 0>G c

00:24:34.379 --> 00:24:36.859
<v Speaker 0>a h c r. Oh, I can't type.

00:24:38.059 --> 00:24:39.259
<v Speaker 1>Typing hard.

00:24:40.460 --> 00:24:41.419
<v Speaker 0>Clustered

00:24:41.419 --> 00:24:42.219
<v Speaker 0>v

00:24:42.379 --> 00:24:42.860
<v Speaker 0>one.

00:24:47.095 --> 00:24:49.575
<v Speaker 0>So is it actually pulling down the the

00:24:49.575 --> 00:24:50.134
<v Speaker 0>layers?

00:24:50.375 --> 00:24:51.975
<v Speaker 1>Yeah. It's gonna have to pull the layers

00:24:51.975 --> 00:24:53.894
<v Speaker 1>because it needs to look inside the layers.

00:24:54.215 --> 00:24:55.895
<v Speaker 1>So it's gonna what what it's basically doing

00:24:55.895 --> 00:24:58.054
<v Speaker 1>is it it opens up the image and

00:24:58.054 --> 00:25:01.180
<v Speaker 1>it says, can I identify an and and

00:25:01.180 --> 00:25:03.500
<v Speaker 1>what Linux is running here? And so you

00:25:03.500 --> 00:25:04.700
<v Speaker 1>can see actually on the on the output

00:25:04.700 --> 00:25:06.300
<v Speaker 1>from the last time, it said detected OS

00:25:06.300 --> 00:25:08.780
<v Speaker 1>Ubuntu. So it looks for for essentially files

00:25:08.780 --> 00:25:11.500
<v Speaker 1>which indicate you're running Ubuntu or anything else.

00:25:11.900 --> 00:25:12.380
<v Speaker 1>What's it?

00:25:13.085 --> 00:25:15.325
<v Speaker 1>It's found Debian. Yep. It thinks you're clean,

00:25:15.405 --> 00:25:17.245
<v Speaker 1>which if you built that image recently, you

00:25:17.245 --> 00:25:17.885
<v Speaker 1>should be.

00:25:19.965 --> 00:25:22.365
<v Speaker 0>I haven't built that in a long time.

00:25:22.445 --> 00:25:23.965
<v Speaker 1>Oh, I wonder why that's come back clean

00:25:23.965 --> 00:25:25.565
<v Speaker 1>then. By the way, it does say error

00:25:25.565 --> 00:25:26.765
<v Speaker 0>gets in vulnerability

00:25:26.765 --> 00:25:28.860
<v Speaker 0>details, failed to get the vulnerability, failed to

00:25:29.020 --> 00:25:29.820
<v Speaker 1>I wonder why that's

00:25:30.300 --> 00:25:31.900
<v Speaker 1>I wonder why. I've seen that morning actually

00:25:31.900 --> 00:25:33.900
<v Speaker 1>recently, but I don't try it without an

00:25:33.900 --> 00:25:35.340
<v Speaker 1>ignore and fix, actually. I'm just curious to

00:25:35.340 --> 00:25:36.460
<v Speaker 1>see what happens if you take the ignore

00:25:36.460 --> 00:25:37.419
<v Speaker 1>and fix off.

00:25:41.580 --> 00:25:42.460
<v Speaker 1>Oh, fine stuff.

00:25:43.174 --> 00:25:43.815
<v Speaker 1>So it must

00:25:45.575 --> 00:25:46.934
<v Speaker 1>I haven't did any patches since the last

00:25:46.934 --> 00:25:47.975
<v Speaker 1>time it was built.

00:25:48.535 --> 00:25:49.815
<v Speaker 1>And because in order to fix it, it

00:25:49.815 --> 00:25:51.414
<v Speaker 1>it will still that consistently.

00:25:52.855 --> 00:25:53.335
<v Speaker 0>I

00:25:53.655 --> 00:25:54.934
<v Speaker 0>don't remember. I don't think it's been built

00:25:54.934 --> 00:25:56.215
<v Speaker 0>in a while, but then Yeah.

00:25:57.179 --> 00:26:00.140
<v Speaker 0>What about scratch images and such? So, yeah,

00:26:00.140 --> 00:26:01.419
<v Speaker 1>it can do scratch.

00:26:01.500 --> 00:26:03.899
<v Speaker 1>Now, obviously hold on. It can do no.

00:26:03.899 --> 00:26:05.739
<v Speaker 1>It can do distroless. Distroless.

00:26:05.820 --> 00:26:07.659
<v Speaker 1>And it can do scratch, and this is

00:26:07.659 --> 00:26:09.980
<v Speaker 1>where it gets a bit funky. Obviously, scratch

00:26:09.980 --> 00:26:12.495
<v Speaker 1>doesn't have any packages, so you're never gonna

00:26:12.495 --> 00:26:15.055
<v Speaker 1>get any package, you know, any distro level

00:26:15.055 --> 00:26:17.135
<v Speaker 1>stuff because there aren't any distro packages to

00:26:17.135 --> 00:26:17.615
<v Speaker 1>check.

00:26:18.575 --> 00:26:20.335
<v Speaker 1>What it will still do is it can

00:26:20.335 --> 00:26:22.655
<v Speaker 1>look inside Golang binaries,

00:26:22.895 --> 00:26:24.415
<v Speaker 1>and this is a fun trick. I'm not

00:26:24.415 --> 00:26:25.615
<v Speaker 1>sure if I find the right image to

00:26:25.615 --> 00:26:27.610
<v Speaker 1>test this on. It can look inside Golang

00:26:27.610 --> 00:26:30.409
<v Speaker 1>binaries because Golang binaries contain,

00:26:30.410 --> 00:26:31.929
<v Speaker 1>like, package information.

00:26:32.090 --> 00:26:34.170
<v Speaker 1>They're actually built into the image, and Trivy

00:26:34.170 --> 00:26:36.090
<v Speaker 1>knows how to unpack that and find what

00:26:36.090 --> 00:26:37.850
<v Speaker 1>you're looking for and say, here is the

00:26:37.850 --> 00:26:39.850
<v Speaker 1>stuff, the Golang piece, because that's a problem

00:26:39.850 --> 00:26:41.530
<v Speaker 1>with scratch images in general is how do

00:26:41.530 --> 00:26:43.424
<v Speaker 1>you scan them. Turns out there is a

00:26:43.424 --> 00:26:44.225
<v Speaker 1>way of doing it,

00:26:44.865 --> 00:26:46.785
<v Speaker 1>which which usually works. I think you probably

00:26:46.785 --> 00:26:48.304
<v Speaker 1>could strip that information,

00:26:48.385 --> 00:26:50.465
<v Speaker 1>at which point it wouldn't work anymore. But

00:26:50.465 --> 00:26:52.945
<v Speaker 1>by default, you can scan inside Golang scratch

00:26:52.945 --> 00:26:53.345
<v Speaker 1>images.

00:26:54.670 --> 00:26:56.910
<v Speaker 0>Okay. Yeah. Because I can in the Go

00:26:56.910 --> 00:26:59.950
<v Speaker 0>ecosystem where statically compiled binaries are are pretty

00:26:59.950 --> 00:27:02.510
<v Speaker 0>much the norm. Like, know, the type those

00:27:02.510 --> 00:27:04.190
<v Speaker 0>could be bundled with a whole bunch of,

00:27:04.190 --> 00:27:06.430
<v Speaker 0>like, lib SSH or lib x and lib

00:27:06.430 --> 00:27:09.070
<v Speaker 0>y, which potentially have vulnerabilities. So you're saying

00:27:09.070 --> 00:27:09.470
<v Speaker 0>there is

00:27:10.205 --> 00:27:12.445
<v Speaker 0>some support for pulling those out and understanding

00:27:12.445 --> 00:27:14.285
<v Speaker 0>them, but only if you don't strip all

00:27:14.285 --> 00:27:15.725
<v Speaker 0>the GC information. I was gonna say, yeah.

00:27:15.725 --> 00:27:17.245
<v Speaker 1>That that's the thing that in my head,

00:27:17.325 --> 00:27:19.245
<v Speaker 1>I'm thinking that a security person will probably

00:27:19.245 --> 00:27:21.325
<v Speaker 1>tell people to strip that information for security

00:27:21.325 --> 00:27:23.830
<v Speaker 1>purposes, at which point your scanner fails. And

00:27:23.830 --> 00:27:25.830
<v Speaker 1>there, that comes back to the, like, where

00:27:25.830 --> 00:27:27.670
<v Speaker 1>do you scan piece? Because you said before,

00:27:27.670 --> 00:27:29.670
<v Speaker 1>like, where can I scan stuff? Well,

00:27:29.670 --> 00:27:31.270
<v Speaker 1>if you're doing that, so if you've got,

00:27:31.270 --> 00:27:33.350
<v Speaker 1>like, a super hardened deploy process,

00:27:33.670 --> 00:27:35.270
<v Speaker 1>then the place to scan is the repository.

00:27:35.635 --> 00:27:38.195
<v Speaker 1>So you can scan the GitHub repo before

00:27:38.195 --> 00:27:40.115
<v Speaker 1>the thing gets built to find out. And

00:27:40.115 --> 00:27:41.075
<v Speaker 1>we can and that's one of the things

00:27:41.075 --> 00:27:43.394
<v Speaker 1>Trivy will work with. So Trivy will scan

00:27:43.794 --> 00:27:46.514
<v Speaker 1>a GitHub repository directly if you want to

00:27:47.155 --> 00:27:49.155
<v Speaker 1>or any did any Git repository. You just

00:27:49.155 --> 00:27:50.674
<v Speaker 1>point it at the Git repository, and it

00:27:50.674 --> 00:27:52.330
<v Speaker 1>will go and check. Alright. Well, we can

00:27:52.330 --> 00:27:54.490
<v Speaker 0>try that in just a moment. We got

00:27:54.490 --> 00:27:56.889
<v Speaker 0>another question this time from Jeffrey in the

00:27:56.889 --> 00:27:58.730
<v Speaker 0>chat who is asking, if the image has

00:27:58.730 --> 00:28:01.049
<v Speaker 0>already been pulled locally, does it still pull

00:28:01.049 --> 00:28:02.249
<v Speaker 0>the latest version?

00:28:03.450 --> 00:28:05.850
<v Speaker 1>You know, that's a good question. I think

00:28:05.850 --> 00:28:06.250
<v Speaker 1>so.

00:28:07.915 --> 00:28:09.275
<v Speaker 1>But it's one of those things that I

00:28:09.275 --> 00:28:10.795
<v Speaker 1>would need to go and ask someone to

00:28:10.795 --> 00:28:13.915
<v Speaker 1>be 100 certain. My my thinking is yes,

00:28:14.395 --> 00:28:15.675
<v Speaker 1>but I would need to check. I'm not

00:28:15.675 --> 00:28:17.275
<v Speaker 1>sure how how how we would test that.

00:28:17.275 --> 00:28:19.195
<v Speaker 0>Is there a flag for that? Let's look.

00:28:19.595 --> 00:28:21.115
<v Speaker 0>There's a clear cache.

00:28:21.649 --> 00:28:23.490
<v Speaker 1>Clear. Yeah. That that because Trivy does have

00:28:23.490 --> 00:28:25.570
<v Speaker 1>a cache. So if you rescan an image

00:28:25.570 --> 00:28:26.609
<v Speaker 1>that hasn't changed,

00:28:27.169 --> 00:28:28.850
<v Speaker 1>then, for example, if you got a latest

00:28:28.850 --> 00:28:29.489
<v Speaker 1>image

00:28:29.730 --> 00:28:31.169
<v Speaker 1>and you scan it twice,

00:28:31.649 --> 00:28:33.649
<v Speaker 1>it will not it'll it'll it'll actually warn

00:28:33.649 --> 00:28:34.610
<v Speaker 1>you about that if you do a latest

00:28:34.610 --> 00:28:36.769
<v Speaker 1>image. It'll say, hey. You're doing latest, and

00:28:36.769 --> 00:28:39.065
<v Speaker 1>I might not know what latest is. But

00:28:39.065 --> 00:28:40.585
<v Speaker 1>you can clear cache. So I said maybe

00:28:40.585 --> 00:28:41.545
<v Speaker 1>the way to do it. If you want

00:28:41.545 --> 00:28:43.145
<v Speaker 1>to be sure it's definitely pulling,

00:28:43.225 --> 00:28:44.425
<v Speaker 1>you do the clear cache, and then we

00:28:44.425 --> 00:28:45.304
<v Speaker 1>run the scan.

00:28:47.305 --> 00:28:49.625
<v Speaker 0>Alright. Thank you for answering that. Should

00:28:49.945 --> 00:28:51.625
<v Speaker 0>we scan a repository?

00:28:52.140 --> 00:28:54.059
<v Speaker 1>Yeah. We can scan a repository.

00:28:54.140 --> 00:28:55.340
<v Speaker 1>We've got lots of different ways we can

00:28:55.340 --> 00:28:57.020
<v Speaker 1>scan. Fun stuff. So, yeah, if you just

00:28:57.020 --> 00:28:59.500
<v Speaker 1>pick a a GitHub repo that's got things

00:28:59.500 --> 00:29:00.780
<v Speaker 1>in it right and I've got the one

00:29:00.780 --> 00:29:02.860
<v Speaker 1>that I can use. I've got the Pulumi

00:29:02.860 --> 00:29:06.095
<v Speaker 0>Pulumi repository here. Let's see what happens. And

00:29:06.095 --> 00:29:07.134
<v Speaker 1>what it's doing here

00:29:07.934 --> 00:29:09.774
<v Speaker 0>What have I got? You can you can

00:29:09.774 --> 00:29:11.134
<v Speaker 1>scan it either

00:29:11.135 --> 00:29:12.255
<v Speaker 1>in a file or you can scan it

00:29:12.255 --> 00:29:13.534
<v Speaker 1>directly on the Internet. So you can just

00:29:13.534 --> 00:29:15.534
<v Speaker 1>give it the URL of wherever it lives

00:29:15.534 --> 00:29:17.934
<v Speaker 1>in GitHub. Alright. And it'll happily it'll happily

00:29:17.934 --> 00:29:19.054
<v Speaker 1>go on to the Internet. So you do

00:29:19.054 --> 00:29:20.255
<v Speaker 1>a Trivy repo.

00:29:21.590 --> 00:29:23.030
<v Speaker 1>Is the repo scan?

00:29:23.990 --> 00:29:25.910
<v Speaker 1>It should be up there. Yeah. I was

00:29:25.910 --> 00:29:27.110
<v Speaker 0>I was close to that list, isn't it?

00:29:27.110 --> 00:29:28.230
<v Speaker 0>And I was in a little order. I

00:29:28.230 --> 00:29:30.710
<v Speaker 0>was getting myself very, very confused. Okay. Yeah.

00:29:30.710 --> 00:29:31.750
<v Speaker 1>I was looking at that as well. I

00:29:31.750 --> 00:29:33.030
<v Speaker 1>was thinking where is it? Where is

00:29:33.670 --> 00:29:35.030
<v Speaker 0>This scam fooling me. Why not?

00:29:35.905 --> 00:29:37.425
<v Speaker 0>And then it's HTTPS or

00:29:38.465 --> 00:29:39.825
<v Speaker 1>generally do. You could try without it and

00:29:39.825 --> 00:29:41.665
<v Speaker 1>see what happens. It might complain. Or just

00:29:41.665 --> 00:29:43.905
<v Speaker 1>gonna assume. No. It seems quite happy. Okay.

00:29:43.905 --> 00:29:45.505
<v Speaker 0>We're getting it going. So yeah. So it's

00:29:45.505 --> 00:29:47.105
<v Speaker 1>it's merely cloning away.

00:29:47.265 --> 00:29:49.505
<v Speaker 0>Where does it clone to? It's like It's

00:29:49.505 --> 00:29:51.184
<v Speaker 0>it's got cache directory. They've got a cache

00:29:51.184 --> 00:29:51.585
<v Speaker 1>directory.

00:29:52.280 --> 00:29:53.399
<v Speaker 1>Here we go. Alright.

00:29:53.880 --> 00:29:56.200
<v Speaker 0>Let's zoom in a bit more. Unrevelties. Maybe

00:29:56.360 --> 00:29:58.759
<v Speaker 0>that's getting too small, though. Yeah.

00:29:59.640 --> 00:30:01.559
<v Speaker 1>So you can see how it's identified, like,

00:30:01.559 --> 00:30:04.200
<v Speaker 1>specific files inside. So, like, at the top

00:30:04.200 --> 00:30:06.535
<v Speaker 1>of each table, it's identified a file and

00:30:06.535 --> 00:30:08.535
<v Speaker 1>said, in this file, here's what I'm seeing.

00:30:09.735 --> 00:30:12.375
<v Speaker 1>So you've got go some there in method

00:30:12.375 --> 00:30:13.175
<v Speaker 1>unknown,

00:30:13.175 --> 00:30:14.775
<v Speaker 1>and it's found some stuff in there.

00:30:15.975 --> 00:30:17.895
<v Speaker 0>So this is saying that in the JSON

00:30:17.895 --> 00:30:21.390
<v Speaker 0>web token go package, there's an access restriction

00:30:21.390 --> 00:30:23.470
<v Speaker 0>bypass vulnerability. So if I want to know

00:30:23.470 --> 00:30:24.590
<v Speaker 0>what that is, do I just go to

00:30:24.590 --> 00:30:25.710
<v Speaker 0>this link? Yeah. You can go to that

00:30:25.710 --> 00:30:26.990
<v Speaker 1>you can go to that URL.

00:30:32.270 --> 00:30:33.565
<v Speaker 1>See, we've got a nice little kind of

00:30:33.565 --> 00:30:34.845
<v Speaker 1>a and what that's gonna do is that's

00:30:34.845 --> 00:30:36.844
<v Speaker 1>gonna give you some information about what's affected,

00:30:38.605 --> 00:30:41.005
<v Speaker 1>and it's gonna give you some some CVSS

00:30:41.005 --> 00:30:42.845
<v Speaker 1>scoring. So that's that CVSS score I talked

00:30:42.845 --> 00:30:45.910
<v Speaker 1>about. It's not terrible, but you have to

00:30:45.910 --> 00:30:47.350
<v Speaker 1>recognize the person who came up with that

00:30:47.350 --> 00:30:49.510
<v Speaker 1>score had no idea how you were using

00:30:49.510 --> 00:30:50.309
<v Speaker 1>this package.

00:30:50.550 --> 00:30:52.549
<v Speaker 1>So depending on how you use it,

00:30:53.110 --> 00:30:54.390
<v Speaker 1>you know, you may or may not have

00:30:54.390 --> 00:30:56.630
<v Speaker 1>an accurate rating. Yeah. So it seems to

00:30:56.630 --> 00:30:58.710
<v Speaker 0>be that on Red Hat v three, it's

00:30:58.710 --> 00:30:59.190
<v Speaker 0>moderate,

00:30:59.535 --> 00:31:01.615
<v Speaker 0>but Red Hat v two is nonexistent. What

00:31:01.615 --> 00:31:02.975
<v Speaker 0>does how does how do I interpret that?

00:31:02.975 --> 00:31:03.615
<v Speaker 1>Yeah.

00:31:03.855 --> 00:31:05.775
<v Speaker 1>Here's a fun here's a fun part about

00:31:05.775 --> 00:31:06.735
<v Speaker 1>scoring is different

00:31:07.455 --> 00:31:09.695
<v Speaker 1>people will rate the same vulnerability

00:31:09.695 --> 00:31:10.495
<v Speaker 1>differently.

00:31:11.215 --> 00:31:12.975
<v Speaker 1>So there have been cases where

00:31:13.455 --> 00:31:15.615
<v Speaker 1>NVD, who is the as an American organization,

00:31:15.720 --> 00:31:17.639
<v Speaker 1>the national vulnerability database,

00:31:17.640 --> 00:31:19.160
<v Speaker 1>they'll do an analysis, and they'll say it's

00:31:19.160 --> 00:31:20.119
<v Speaker 1>rated x.

00:31:20.360 --> 00:31:21.960
<v Speaker 1>A vendor may also say, well, we use

00:31:21.960 --> 00:31:23.559
<v Speaker 1>this package, but because we use it in

00:31:23.559 --> 00:31:25.480
<v Speaker 1>a certain way, we rate it as something

00:31:25.480 --> 00:31:26.039
<v Speaker 1>different.

00:31:26.440 --> 00:31:28.280
<v Speaker 1>This is where I said about, like, vulnerability

00:31:28.280 --> 00:31:30.040
<v Speaker 1>scanning. Everyone thinks it's just a black box,

00:31:30.325 --> 00:31:31.605
<v Speaker 1>But when you start getting into it, it's

00:31:31.605 --> 00:31:32.965
<v Speaker 1>like, oh, no. There's a whole lot of

00:31:32.965 --> 00:31:34.885
<v Speaker 1>weird edge cases to do with how these

00:31:34.885 --> 00:31:35.845
<v Speaker 1>things are rated.

00:31:37.125 --> 00:31:38.645
<v Speaker 1>And so yeah. That one, I would say

00:31:38.645 --> 00:31:40.005
<v Speaker 1>that one that it looks to me like

00:31:40.005 --> 00:31:41.445
<v Speaker 1>is Red Hat v three will be a

00:31:41.445 --> 00:31:42.725
<v Speaker 1>CVSS v three score.

00:31:43.360 --> 00:31:44.960
<v Speaker 1>They may not have done it for version.

00:31:44.960 --> 00:31:47.519
<v Speaker 1>So there's different versions of CVSS scoring. There's

00:31:47.519 --> 00:31:49.519
<v Speaker 1>v two, which is the older version, and

00:31:49.519 --> 00:31:51.600
<v Speaker 1>v three, which should be a bit more

00:31:51.600 --> 00:31:52.239
<v Speaker 1>accurate,

00:31:53.200 --> 00:31:54.879
<v Speaker 1>but not everything uses it.

00:31:55.120 --> 00:31:57.440
<v Speaker 1>And typically, what I found just from, like,

00:31:57.635 --> 00:31:58.675
<v Speaker 1>anecdotal

00:31:58.675 --> 00:32:00.275
<v Speaker 1>is that v three scores tend to be

00:32:00.275 --> 00:32:01.075
<v Speaker 1>a bit higher.

00:32:01.395 --> 00:32:03.315
<v Speaker 1>So they they things rated under v three

00:32:03.315 --> 00:32:04.995
<v Speaker 1>tend to get rated a bit more seriously,

00:32:05.075 --> 00:32:06.355
<v Speaker 1>and that's just to do with how they

00:32:06.355 --> 00:32:07.555
<v Speaker 1>classify it.

00:32:07.875 --> 00:32:09.155
<v Speaker 1>I I and this will give you my

00:32:09.155 --> 00:32:12.195
<v Speaker 1>my controversial CVSS thing. I hate CVSS

00:32:12.195 --> 00:32:12.995
<v Speaker 1>because

00:32:13.555 --> 00:32:15.020
<v Speaker 1>and I'll explain why. There is a there

00:32:15.020 --> 00:32:16.300
<v Speaker 1>is a good reason. It's not just that

00:32:16.300 --> 00:32:18.059
<v Speaker 1>I'm a I'm a bad security person.

00:32:18.300 --> 00:32:18.940
<v Speaker 1>When

00:32:19.260 --> 00:32:20.780
<v Speaker 1>you see a number like 7.5,

00:32:20.780 --> 00:32:23.020
<v Speaker 1>right, and you see a big long formula,

00:32:23.020 --> 00:32:24.700
<v Speaker 1>you set that line where it says CVSS

00:32:24.700 --> 00:32:26.620
<v Speaker 1>3.1

00:32:25.515 --> 00:32:27.915
<v Speaker 1>slash something slash something and all that. Yep.

00:32:27.915 --> 00:32:29.434
<v Speaker 1>It sounds scientific.

00:32:29.755 --> 00:32:31.915
<v Speaker 1>To me, that sounds like it's science, and

00:32:31.915 --> 00:32:33.674
<v Speaker 1>it's not science. It's opinion.

00:32:34.315 --> 00:32:36.715
<v Speaker 1>That's an analyst's opinion of how exploitable something

00:32:36.715 --> 00:32:38.870
<v Speaker 1>is and how serious it is. But when

00:32:38.870 --> 00:32:40.710
<v Speaker 1>you see 7.5, I think people think, oh,

00:32:40.710 --> 00:32:43.429
<v Speaker 1>it's science. There's there's obviously you know? And

00:32:43.429 --> 00:32:44.070
<v Speaker 1>no.

00:32:44.630 --> 00:32:47.269
<v Speaker 1>No. It's it's people's opinions. Alright. Okay. Doesn't

00:32:47.269 --> 00:32:48.630
<v Speaker 1>mean it's useless. Just means you should take

00:32:48.630 --> 00:32:49.909
<v Speaker 1>it with with a grain of salt and

00:32:49.909 --> 00:32:51.350
<v Speaker 1>go, this is just someone's opinion of this

00:32:51.350 --> 00:32:52.870
<v Speaker 1>vulnerability, not necessarily

00:32:53.345 --> 00:32:54.544
<v Speaker 1>the ground fact.

00:32:55.105 --> 00:32:57.185
<v Speaker 0>Yeah. I think I'll just continue to stick

00:32:57.185 --> 00:32:58.385
<v Speaker 0>my head in the sand when it comes

00:32:58.385 --> 00:33:00.385
<v Speaker 0>to security. Yeah. You you you

00:33:01.185 --> 00:33:02.545
<v Speaker 1>if you want my other fun,

00:33:03.025 --> 00:33:03.745
<v Speaker 1>CVE,

00:33:03.905 --> 00:33:05.745
<v Speaker 1>fact is that that you might think that

00:33:05.745 --> 00:33:07.745
<v Speaker 1>if there's no CVEs, it means something secure.

00:33:08.429 --> 00:33:10.990
<v Speaker 1>Possibly not because some vendors refuse to issue

00:33:10.990 --> 00:33:14.269
<v Speaker 1>them. So for example, IBM for their mainframe

00:33:14.269 --> 00:33:15.789
<v Speaker 1>line, this is an official policy, so it's

00:33:15.789 --> 00:33:17.950
<v Speaker 1>not some hack thing I'm saying. Their official

00:33:17.950 --> 00:33:20.029
<v Speaker 1>policy is they do not issue CVEs for

00:33:20.029 --> 00:33:22.184
<v Speaker 1>their mainframe line of products. So if anyone

00:33:22.184 --> 00:33:23.945
<v Speaker 1>says to you, IBM mainframes are secure because

00:33:23.945 --> 00:33:26.424
<v Speaker 1>there's no vulnerabilities, that's just not true. The

00:33:26.424 --> 00:33:27.865
<v Speaker 1>only way you get their vulnerability list is

00:33:27.865 --> 00:33:29.304
<v Speaker 1>by being a paying customer,

00:33:29.465 --> 00:33:30.744
<v Speaker 1>and then we'll give you it.

00:33:31.544 --> 00:33:32.264
<v Speaker 1>So another

00:33:33.385 --> 00:33:35.465
<v Speaker 1>nuance of the vulnerability scanning world.

00:33:36.060 --> 00:33:37.580
<v Speaker 0>Today, we learn.

00:33:38.380 --> 00:33:41.100
<v Speaker 0>So Russell is in the chat saying, so

00:33:41.100 --> 00:33:41.500
<v Speaker 0>are

00:33:42.060 --> 00:33:44.380
<v Speaker 0>not all seven point fives are equal.

00:33:44.860 --> 00:33:46.460
<v Speaker 1>Yes. And the thing about it is is

00:33:46.460 --> 00:33:46.940
<v Speaker 1>that

00:33:47.580 --> 00:33:49.020
<v Speaker 1>that package has a vulnerability.

00:33:49.835 --> 00:33:52.155
<v Speaker 1>The question is, does my code use the

00:33:52.155 --> 00:33:54.315
<v Speaker 1>code path that has the vulnerability? So, like,

00:33:54.315 --> 00:33:55.434
<v Speaker 1>is it exploitable?

00:33:55.675 --> 00:33:57.995
<v Speaker 1>And that's a really hard question to answer.

00:33:58.395 --> 00:34:00.075
<v Speaker 1>To be honest, it's so hard to answer

00:34:00.075 --> 00:34:02.235
<v Speaker 1>that I typically say, you're probably easier just

00:34:02.235 --> 00:34:02.555
<v Speaker 1>patching.

00:34:03.270 --> 00:34:05.350
<v Speaker 1>Unless you really can't patch or it's gonna

00:34:05.350 --> 00:34:06.950
<v Speaker 1>be really bad for you to patch,

00:34:07.190 --> 00:34:09.750
<v Speaker 1>honestly, the easiest course of action is patch.

00:34:09.750 --> 00:34:11.190
<v Speaker 1>What you could do is you could, like,

00:34:11.190 --> 00:34:12.950
<v Speaker 1>go and find the relevant code path,

00:34:13.270 --> 00:34:15.670
<v Speaker 1>and you could go and say, does my

00:34:14.804 --> 00:34:16.885
<v Speaker 1>does my application actually make use of that?

00:34:16.885 --> 00:34:19.045
<v Speaker 1>If no, then put an ignore

00:34:19.364 --> 00:34:21.205
<v Speaker 1>on it and and away you go.

00:34:21.525 --> 00:34:23.525
<v Speaker 1>For Trivy, actually, I should mention, you can

00:34:23.525 --> 00:34:25.925
<v Speaker 1>have a file called dot Trivy ignore,

00:34:26.244 --> 00:34:28.485
<v Speaker 1>and you can put CVEs into that file.

00:34:28.724 --> 00:34:30.460
<v Speaker 1>So you'd say, for example, I analyze the

00:34:30.460 --> 00:34:32.060
<v Speaker 1>CVE. This has nothing to do with me.

00:34:32.060 --> 00:34:33.740
<v Speaker 1>It won't affect my code base, and Trivy

00:34:33.740 --> 00:34:34.940
<v Speaker 1>will stop reporting it.

00:34:35.180 --> 00:34:36.540
<v Speaker 1>So you get rid of that noise out

00:34:36.540 --> 00:34:37.660
<v Speaker 1>of your scanning results.

00:34:39.100 --> 00:34:39.900
<v Speaker 0>Awesome.

00:34:40.955 --> 00:34:42.795
<v Speaker 0>Okay. Let's close this back down, pop over

00:34:42.795 --> 00:34:44.075
<v Speaker 0>to our results

00:34:44.395 --> 00:34:45.915
<v Speaker 0>the scan. So

00:34:47.114 --> 00:34:48.555
<v Speaker 0>it seems to repeat.

00:34:49.275 --> 00:34:50.715
<v Speaker 0>Is that the same CV?

00:34:51.275 --> 00:34:53.675
<v Speaker 0>Oh, because then a different file. Different files.

00:34:53.675 --> 00:34:55.114
<v Speaker 1>Yeah. So what it's doing is it's basically

00:34:55.114 --> 00:34:57.460
<v Speaker 1>what it's doing is going opening each file

00:34:57.460 --> 00:34:59.700
<v Speaker 1>that looks like it's something it knows about,

00:34:59.860 --> 00:35:02.740
<v Speaker 1>scanning the versions, comparing the versions with what

00:35:02.740 --> 00:35:04.500
<v Speaker 1>it has in its database, and then just

00:35:04.500 --> 00:35:06.020
<v Speaker 1>saying, hey. You know, this one's that many

00:35:06.020 --> 00:35:08.900
<v Speaker 1>versions or older. Therefore, it's got these vulnerabilities.

00:35:11.205 --> 00:35:12.565
<v Speaker 0>Alright. Cool.

00:35:13.365 --> 00:35:15.445
<v Speaker 1>So yeah. So scanning scanning repos is is

00:35:15.445 --> 00:35:16.565
<v Speaker 1>is fun as well.

00:35:18.245 --> 00:35:20.485
<v Speaker 1>You can also scan obviously, you can scan,

00:35:20.485 --> 00:35:22.325
<v Speaker 1>like, a downloaded Git repository.

00:35:22.325 --> 00:35:23.620
<v Speaker 1>So you can like if you've got one

00:35:23.620 --> 00:35:24.660
<v Speaker 1>local and you don't want to have it

00:35:24.660 --> 00:35:26.260
<v Speaker 1>pull it down again, you can just say

00:35:26.260 --> 00:35:27.620
<v Speaker 1>I want to scan locally.

00:35:27.860 --> 00:35:30.020
<v Speaker 1>That's another option as well. So that was

00:35:30.020 --> 00:35:31.860
<v Speaker 0>a Go project we scanned. You said there

00:35:31.860 --> 00:35:34.340
<v Speaker 0>was support for other libraries as well. Yeah.

00:35:34.340 --> 00:35:36.820
<v Speaker 1>Yeah. There's there's there should be I'm gonna

00:35:36.900 --> 00:35:37.940
<v Speaker 1>find it on the

00:35:38.484 --> 00:35:40.005
<v Speaker 1>oh, yeah. On that on the on the

00:35:40.005 --> 00:35:41.445
<v Speaker 1>doc site, there's actually a list of all

00:35:41.445 --> 00:35:42.805
<v Speaker 1>the things they scan for,

00:35:43.525 --> 00:35:45.605
<v Speaker 1>and it's getting bigger every version. One of

00:35:45.605 --> 00:35:47.685
<v Speaker 1>the things that I think is super important

00:35:47.685 --> 00:35:50.964
<v Speaker 1>is we're supporting more and more Linux distributions

00:35:50.964 --> 00:35:53.285
<v Speaker 1>and more and more package formats as time

00:35:53.285 --> 00:35:53.685
<v Speaker 1>goes by.

00:35:55.540 --> 00:35:57.619
<v Speaker 0>Okay. Awesome. How do I scan a local

00:35:57.619 --> 00:35:59.540
<v Speaker 0>one? I tried So it's yeah.

00:35:59.940 --> 00:36:01.780
<v Speaker 1>It should be Trivy FS.

00:36:02.660 --> 00:36:05.220
<v Speaker 1>So Trivy space FS and then just a

00:36:05.220 --> 00:36:05.860
<v Speaker 1>path.

00:36:06.579 --> 00:36:07.859
<v Speaker 1>So local path that you've got.

00:36:08.755 --> 00:36:09.635
<v Speaker 1>Sorry. F s

00:36:10.675 --> 00:36:12.835
<v Speaker 1>Fails this. Foxtrot Foxtrot Sierra.

00:36:13.555 --> 00:36:15.875
<v Speaker 0>Yeah. Not even I can understand your accent.

00:36:16.115 --> 00:36:16.835
<v Speaker 1>I know.

00:36:17.075 --> 00:36:18.755
<v Speaker 1>Well, I I'm up at Argyle, so I

00:36:18.755 --> 00:36:21.075
<v Speaker 1>probably got the weird kinda like, you know,

00:36:21.075 --> 00:36:22.915
<v Speaker 1>Argyle twang to it, I guess, now.

00:36:24.880 --> 00:36:26.720
<v Speaker 0>Okay. Something I've noticed between the go one

00:36:26.720 --> 00:36:29.280
<v Speaker 0>and then this JavaScript one. So Yeah.

00:36:29.600 --> 00:36:30.880
<v Speaker 0>It's not scanning

00:36:31.440 --> 00:36:34.640
<v Speaker 0>my code, really. It's scanning the dependencies that

00:36:34.640 --> 00:36:36.480
<v Speaker 0>my code has. So it's looking Yeah. At

00:36:36.480 --> 00:36:38.000
<v Speaker 0>look at go mod with the go project.

00:36:38.000 --> 00:36:38.640
<v Speaker 0>It's looking at

00:36:39.204 --> 00:36:41.045
<v Speaker 0>the YARN and NPM, the package dot JSON

00:36:41.045 --> 00:36:42.005
<v Speaker 0>for JavaScript.

00:36:42.165 --> 00:36:44.244
<v Speaker 0>Guess that's the same across all supported run

00:36:44.244 --> 00:36:46.565
<v Speaker 0>time. It's it's about the dependencies that you're

00:36:46.565 --> 00:36:49.204
<v Speaker 0>pulling in and giving you insight into where

00:36:49.204 --> 00:36:50.245
<v Speaker 0>they are vulnerable.

00:36:50.645 --> 00:36:52.244
<v Speaker 1>Yeah. That that's a good really great point.

00:36:52.244 --> 00:36:55.125
<v Speaker 1>Yeah. Trivy is not a static analyzer. So

00:36:54.780 --> 00:36:56.140
<v Speaker 1>it's not gonna, like, go through your code

00:36:56.140 --> 00:36:57.740
<v Speaker 1>and go, oh, you're doing this thing and

00:36:57.740 --> 00:36:59.660
<v Speaker 1>you record badly. That's not what it does.

00:36:59.660 --> 00:37:01.340
<v Speaker 1>That's not its its its purpose.

00:37:01.500 --> 00:37:02.940
<v Speaker 1>Its purpose, yeah, is to look through all

00:37:02.940 --> 00:37:05.260
<v Speaker 1>the third party dependencies, that whole supply chain

00:37:05.260 --> 00:37:07.100
<v Speaker 1>thing. I'm going, right, you've got this massive

00:37:07.260 --> 00:37:08.620
<v Speaker 1>because if you think about about JavaScript,

00:37:09.115 --> 00:37:10.715
<v Speaker 1>you know, an NPM project has got this

00:37:10.715 --> 00:37:13.195
<v Speaker 1>massive pile of libraries, not just, like, the

00:37:13.195 --> 00:37:14.315
<v Speaker 1>initial dependencies,

00:37:14.315 --> 00:37:16.315
<v Speaker 1>but the dependencies of the dependencies and all

00:37:16.315 --> 00:37:18.075
<v Speaker 1>the way down the tree, and you need

00:37:18.075 --> 00:37:19.355
<v Speaker 1>to keep an eye on all of those.

00:37:19.595 --> 00:37:21.435
<v Speaker 1>And I think that's it's an ongoing problem

00:37:22.059 --> 00:37:24.059
<v Speaker 1>is that that with a lot of ecosystems,

00:37:24.059 --> 00:37:25.579
<v Speaker 1>you know, you have to use these these

00:37:25.579 --> 00:37:27.819
<v Speaker 1>piles of of libraries and, you know, they

00:37:27.819 --> 00:37:29.660
<v Speaker 1>have their own dependencies and it it can

00:37:29.660 --> 00:37:31.020
<v Speaker 1>be quite large and quite kind of, like,

00:37:31.020 --> 00:37:31.980
<v Speaker 1>complex as time goes by.

00:37:34.955 --> 00:37:36.635
<v Speaker 0>It's a scary world we live in with

00:37:36.635 --> 00:37:38.555
<v Speaker 0>this stuff for malarkey. It's

00:37:38.635 --> 00:37:40.475
<v Speaker 1>yeah. It's tricky. Yeah. It's it's well, you

00:37:40.475 --> 00:37:41.595
<v Speaker 1>saw you see

00:37:42.075 --> 00:37:43.755
<v Speaker 1>in in in supply chain stuff, we've seen

00:37:43.755 --> 00:37:45.435
<v Speaker 1>some scary things recently. Like, there was a

00:37:45.435 --> 00:37:47.595
<v Speaker 1>person who they got angry that they weren't

00:37:47.595 --> 00:37:50.280
<v Speaker 1>getting paid for their for their for their

00:37:50.280 --> 00:37:50.920
<v Speaker 1>efforts.

00:37:51.160 --> 00:37:53.880
<v Speaker 1>And so they nuked to their NPM libraries,

00:37:53.960 --> 00:37:55.960
<v Speaker 1>pushed new versions over it. They just printed

00:37:55.960 --> 00:37:58.040
<v Speaker 1>a lot of garbage text and broke a

00:37:58.040 --> 00:37:59.400
<v Speaker 1>whole lot of packages,

00:37:59.400 --> 00:38:01.560
<v Speaker 1>including things like Amazon CDK. But they broke

00:38:01.560 --> 00:38:04.135
<v Speaker 1>they broke big packages because, obviously, the way

00:38:04.135 --> 00:38:05.974
<v Speaker 1>NPM tends to work and everyone depends on

00:38:05.974 --> 00:38:08.214
<v Speaker 1>anything else. And, yeah, that's that's scary. That

00:38:08.295 --> 00:38:10.295
<v Speaker 1>and that's one malicious maintainer.

00:38:10.375 --> 00:38:11.654
<v Speaker 1>And you think, well, he did something really

00:38:11.654 --> 00:38:13.734
<v Speaker 1>obvious and really blatant and everyone could see

00:38:13.734 --> 00:38:16.055
<v Speaker 1>what he'd done. Someone who's done something more

00:38:16.055 --> 00:38:17.894
<v Speaker 1>subtle, you probably wouldn't notice

00:38:18.500 --> 00:38:20.180
<v Speaker 1>if they did it, you know, cleverly.

00:38:20.500 --> 00:38:21.860
<v Speaker 0>Yeah. I think there was

00:38:22.339 --> 00:38:25.220
<v Speaker 0>some package a call from maintainers a couple

00:38:25.220 --> 00:38:27.460
<v Speaker 0>of years ago, and then they snuck in

00:38:27.460 --> 00:38:29.300
<v Speaker 0>some crypto mining into it when they took

00:38:29.300 --> 00:38:31.140
<v Speaker 0>over the package, and nobody knows for months.

00:38:31.395 --> 00:38:34.515
<v Speaker 0>Much like months. Because, you know, if

00:38:34.515 --> 00:38:36.835
<v Speaker 1>you've got a hundred or a thousand dependencies,

00:38:37.235 --> 00:38:38.755
<v Speaker 1>you know, you don't have time to go

00:38:38.755 --> 00:38:40.675
<v Speaker 1>through a hundred or a thousand dependencies. No

00:38:40.675 --> 00:38:41.315
<v Speaker 1>one does.

00:38:41.955 --> 00:38:43.635
<v Speaker 1>But there's not a lot of I've not

00:38:43.635 --> 00:38:44.995
<v Speaker 1>seen a lot of take up for services

00:38:44.995 --> 00:38:47.590
<v Speaker 1>that provide curated. Like, I've thought some people

00:38:47.590 --> 00:38:49.590
<v Speaker 1>have tried as a business model. We'll curate

00:38:49.590 --> 00:38:51.590
<v Speaker 1>your packages for you. We'll do that work

00:38:51.590 --> 00:38:53.030
<v Speaker 1>and, like, give you a feed that's only

00:38:53.030 --> 00:38:55.350
<v Speaker 1>the ones we've checked, but doesn't seem to

00:38:55.350 --> 00:38:55.750
<v Speaker 1>take off.

00:38:58.515 --> 00:39:00.755
<v Speaker 0>Okay. Let's jump back on to our Yep.

00:39:00.835 --> 00:39:03.154
<v Speaker 0>Trivy learning. Trivy, what else we can do?

00:39:03.154 --> 00:39:05.954
<v Speaker 1>So we have done we've done image scan.

00:39:05.954 --> 00:39:08.035
<v Speaker 0>We've done the docs. Right? You get the

00:39:07.954 --> 00:39:09.075
<v Speaker 0>you are the docs. So

00:39:09.795 --> 00:39:10.275
<v Speaker 1>Yeah.

00:39:11.820 --> 00:39:13.820
<v Speaker 1>This is where I'm I'm hoping who's the

00:39:13.820 --> 00:39:15.900
<v Speaker 1>main maintainer. I'm hoping he's not watching, and

00:39:15.900 --> 00:39:17.900
<v Speaker 1>I wanna get and Teams, get all the

00:39:17.900 --> 00:39:19.660
<v Speaker 1>things I got wrong afterwards.

00:39:20.380 --> 00:39:22.380
<v Speaker 1>But hopefully not. So yeah. So we've done

00:39:22.380 --> 00:39:23.500
<v Speaker 1>image scan,

00:39:23.660 --> 00:39:25.500
<v Speaker 1>and, obviously, we can do file system scan

00:39:25.500 --> 00:39:27.315
<v Speaker 1>as well. So we scan directories. We can

00:39:27.315 --> 00:39:29.315
<v Speaker 1>scan root FS. So I don't know if

00:39:29.315 --> 00:39:30.275
<v Speaker 1>we'll able to do that because it won't

00:39:30.275 --> 00:39:31.235
<v Speaker 1>work on a Mac.

00:39:31.635 --> 00:39:33.155
<v Speaker 1>But if you have, like, a whole Linux

00:39:33.155 --> 00:39:33.875
<v Speaker 1>VM,

00:39:34.115 --> 00:39:36.275
<v Speaker 1>you can just say scan root FS, and

00:39:36.275 --> 00:39:37.555
<v Speaker 1>and they just point it at the root

00:39:37.555 --> 00:39:39.940
<v Speaker 1>of your your virtual machine. And so if

00:39:39.940 --> 00:39:42.100
<v Speaker 1>you don't have, like, an ordinary vulnerability scanner,

00:39:42.100 --> 00:39:43.060
<v Speaker 1>like, you don't have one of the kind

00:39:43.060 --> 00:39:44.900
<v Speaker 1>of traditional scanners, you can use Trivy for

00:39:44.900 --> 00:39:46.420
<v Speaker 1>that purpose too, which is great.

00:39:46.820 --> 00:39:48.180
<v Speaker 1>Because you'll you'll get good results from that

00:39:48.180 --> 00:39:48.740
<v Speaker 1>as well.

00:39:50.420 --> 00:39:52.340
<v Speaker 1>But those all basically do the same thing.

00:39:52.340 --> 00:39:53.940
<v Speaker 1>Right? They they do what we've just done,

00:39:54.275 --> 00:39:55.795
<v Speaker 1>which is that they scan

00:39:56.675 --> 00:39:58.195
<v Speaker 1>operating system and they scan programming

00:39:59.875 --> 00:40:01.715
<v Speaker 1>language repositories as well.

00:40:02.515 --> 00:40:05.075
<v Speaker 0>Okay. I think the thing that I'm really

00:40:05.075 --> 00:40:06.515
<v Speaker 0>interested in that I don't think we've taken

00:40:06.515 --> 00:40:08.035
<v Speaker 0>a look at yet is you mentioned that

00:40:08.035 --> 00:40:10.360
<v Speaker 0>it can scan infrastructure as code and Kubernetes

00:40:10.360 --> 00:40:11.480
<v Speaker 0>manifest.

00:40:11.640 --> 00:40:13.800
<v Speaker 0>Absolutely. Maybe that's something that we could Yeah.

00:40:13.800 --> 00:40:15.800
<v Speaker 1>Let's let's talk about that because that's that's

00:40:15.800 --> 00:40:17.960
<v Speaker 1>fun too. So that's the conf option or

00:40:17.960 --> 00:40:19.000
<v Speaker 1>config option.

00:40:20.200 --> 00:40:21.560
<v Speaker 1>And and what you can do there is

00:40:21.560 --> 00:40:23.880
<v Speaker 1>you point to either a directory that has

00:40:24.894 --> 00:40:27.375
<v Speaker 1>IC and things like that in it, or

00:40:27.375 --> 00:40:29.295
<v Speaker 1>you point it at a a file. So

00:40:29.295 --> 00:40:31.375
<v Speaker 1>you point to basically one file, one directory,

00:40:32.174 --> 00:40:33.775
<v Speaker 1>and it'll and it'll check those.

00:40:34.654 --> 00:40:36.414
<v Speaker 0>Okay. So if you have any or I

00:40:36.414 --> 00:40:37.615
<v Speaker 1>can find a repo if we don't. I

00:40:37.615 --> 00:40:39.454
<v Speaker 1>have some Kubernetes manifest.

00:40:39.910 --> 00:40:40.630
<v Speaker 1>Awesome.

00:40:42.550 --> 00:40:45.030
<v Speaker 0>I I don't need to specify the directory

00:40:45.030 --> 00:40:46.710
<v Speaker 0>specifically. Right? If I just do a dot,

00:40:46.710 --> 00:40:48.870
<v Speaker 0>it'll do subdirection. I think it will. I

00:40:49.830 --> 00:40:51.910
<v Speaker 1>wish maybe give it I'll it a directory.

00:40:51.910 --> 00:40:53.590
<v Speaker 1>Generally, I just give it directories to arms.

00:40:53.590 --> 00:40:56.325
<v Speaker 1>Oh, yeah. It's stuff. Yeah. It found them.

00:40:56.645 --> 00:40:58.565
<v Speaker 1>It found them because there you go.

00:40:59.045 --> 00:41:02.005
<v Speaker 1>So what it's doing here is it's doing

00:41:02.005 --> 00:41:04.405
<v Speaker 1>a set of Kubernetes security checks.

00:41:04.965 --> 00:41:07.125
<v Speaker 1>And these are checks that are essentially based

00:41:07.125 --> 00:41:09.845
<v Speaker 1>on a thing called Kubernetes pod security standards,

00:41:10.920 --> 00:41:13.000
<v Speaker 1>which is something the project Kubernetes project has

00:41:13.000 --> 00:41:15.400
<v Speaker 1>come up with to say, here are things

00:41:15.400 --> 00:41:16.360
<v Speaker 1>you should do

00:41:16.680 --> 00:41:19.400
<v Speaker 1>to improve the security of your manifest.

00:41:20.599 --> 00:41:21.240
<v Speaker 1>Okay.

00:41:21.560 --> 00:41:23.240
<v Speaker 1>And we can see a variety of ones

00:41:23.240 --> 00:41:23.640
<v Speaker 1>in there.

00:41:24.405 --> 00:41:26.645
<v Speaker 1>There's our root user, the top one, your

00:41:26.645 --> 00:41:27.685
<v Speaker 1>Dockerfile option.

00:41:28.005 --> 00:41:30.405
<v Speaker 0>Yep. You've not specified a user in your

00:41:30.405 --> 00:41:31.285
<v Speaker 1>Dockerfile.

00:41:32.405 --> 00:41:34.405
<v Speaker 0>But it but in in my defense, I

00:41:34.405 --> 00:41:36.325
<v Speaker 0>leave this image wide open for people to

00:41:36.325 --> 00:41:38.965
<v Speaker 0>intentionally break. Yeah. Oh, yeah. Yeah. Yeah. This

00:41:38.965 --> 00:41:40.280
<v Speaker 1>is I I mean, I'm gonna honest with

00:41:40.280 --> 00:41:41.880
<v Speaker 1>you. Most of my most of my images

00:41:41.880 --> 00:41:42.680
<v Speaker 1>don't do that,

00:41:43.000 --> 00:41:44.760
<v Speaker 1>typically because I don't do production. You know,

00:41:44.760 --> 00:41:46.520
<v Speaker 1>my stuff is all just hacks for my

00:41:46.520 --> 00:41:48.440
<v Speaker 1>purposes. If I I I promise I was

00:41:48.440 --> 00:41:50.200
<v Speaker 1>a prod developer, I would do these things.

00:41:50.200 --> 00:41:51.000
<v Speaker 0>Yeah. Yeah. Yeah.

00:41:52.085 --> 00:41:53.525
<v Speaker 1>But yeah. So the the what it's doing

00:41:53.525 --> 00:41:55.525
<v Speaker 1>with the Dockerfile is it's checking saying, hey.

00:41:55.684 --> 00:41:58.085
<v Speaker 1>You haven't checked that. In Kubernetes, it's then

00:41:58.085 --> 00:42:00.404
<v Speaker 1>got a set of checks of things you

00:42:00.404 --> 00:42:01.045
<v Speaker 1>can add.

00:42:01.765 --> 00:42:03.285
<v Speaker 1>And this is a you you generally in

00:42:03.285 --> 00:42:05.765
<v Speaker 1>Kubernetes land, you add these in security context.

00:42:08.800 --> 00:42:10.800
<v Speaker 0>K. So the first one here is telling

00:42:10.800 --> 00:42:13.680
<v Speaker 0>me that my cluster deployment should set a

00:42:13.680 --> 00:42:16.080
<v Speaker 0>low privilege escalation to false.

00:42:16.480 --> 00:42:18.160
<v Speaker 1>Yeah. I can explain that one. It's a

00:42:18.160 --> 00:42:19.920
<v Speaker 1>it's a weird one. K. Go for it.

00:42:20.465 --> 00:42:23.185
<v Speaker 1>Okay. So allow privilege escalation is a Linux

00:42:23.185 --> 00:42:24.065
<v Speaker 1>primitive.

00:42:24.545 --> 00:42:26.465
<v Speaker 1>And what it does is, say, I've got

00:42:26.465 --> 00:42:27.745
<v Speaker 1>a Linux process running,

00:42:27.985 --> 00:42:29.825
<v Speaker 1>and it runs as an ordinary user.

00:42:30.305 --> 00:42:32.625
<v Speaker 1>It if you have that flag set to

00:42:32.625 --> 00:42:35.585
<v Speaker 1>false, it can't get any additional privileges

00:42:36.020 --> 00:42:37.780
<v Speaker 1>once it's launched. So you can't have a

00:42:37.780 --> 00:42:39.940
<v Speaker 1>container that gets additional privileges over the top

00:42:39.940 --> 00:42:41.700
<v Speaker 1>of an existing what it's what it what

00:42:41.700 --> 00:42:43.859
<v Speaker 1>it starts with. So for example, if I

00:42:43.859 --> 00:42:45.619
<v Speaker 1>had a container and there was a set

00:42:45.619 --> 00:42:47.700
<v Speaker 1>UID shell in there, if you try and

00:42:47.700 --> 00:42:49.380
<v Speaker 1>ex you try and use that set UID

00:42:49.380 --> 00:42:51.140
<v Speaker 1>shell to suddenly become root inside the container,

00:42:51.225 --> 00:42:53.465
<v Speaker 1>it'll say no. Go away. You can't do

00:42:53.465 --> 00:42:53.945
<v Speaker 1>that.

00:42:55.225 --> 00:42:56.985
<v Speaker 1>And that's it's it's one of those things

00:42:56.985 --> 00:42:58.505
<v Speaker 1>I think it's a it's a it's an

00:42:58.505 --> 00:42:59.545
<v Speaker 1>easy setting.

00:42:59.865 --> 00:43:02.185
<v Speaker 1>It will almost never break anything,

00:43:02.745 --> 00:43:04.185
<v Speaker 1>and it and it's worth so it's worth

00:43:04.185 --> 00:43:05.865
<v Speaker 1>doing. Right? I've never seen a container get

00:43:05.865 --> 00:43:07.809
<v Speaker 1>broken by setting that, so it's kind of

00:43:07.809 --> 00:43:09.490
<v Speaker 1>a free hardening setting.

00:43:10.450 --> 00:43:11.490
<v Speaker 1>And it's one of those ones that I

00:43:11.490 --> 00:43:13.730
<v Speaker 1>wished Docker and Kubernetes had set by default,

00:43:13.730 --> 00:43:14.930
<v Speaker 1>but they don't. So

00:43:16.849 --> 00:43:18.930
<v Speaker 0>I had to switch camera because my room

00:43:18.930 --> 00:43:20.930
<v Speaker 0>is very hot and I think my camera

00:43:20.930 --> 00:43:21.410
<v Speaker 0>is overheating.

00:43:22.145 --> 00:43:24.224
<v Speaker 1>Oh, yeah. I have that because I I

00:43:24.224 --> 00:43:26.545
<v Speaker 1>have a Sony z v one and I

00:43:26.545 --> 00:43:28.464
<v Speaker 1>it hasn't overheated so far, but it does

00:43:28.464 --> 00:43:30.065
<v Speaker 1>does die if I leave it too long.

00:43:30.065 --> 00:43:31.505
<v Speaker 1>But, yeah, I have seen a couple that

00:43:31.505 --> 00:43:32.385
<v Speaker 1>do overheat.

00:43:33.105 --> 00:43:33.425
<v Speaker 0>Yeah.

00:43:34.660 --> 00:43:36.340
<v Speaker 0>Yeah. Okay. We'll stay on this one for

00:43:36.340 --> 00:43:36.900
<v Speaker 0>now.

00:43:37.220 --> 00:43:39.140
<v Speaker 0>Okay. Let let them cool down. Open the

00:43:39.140 --> 00:43:39.700
<v Speaker 1>window.

00:43:40.660 --> 00:43:43.540
<v Speaker 0>It's too loud. Like, my my office space

00:43:43.540 --> 00:43:46.260
<v Speaker 0>is an an industrial estate with Arctic lorries

00:43:46.260 --> 00:43:48.740
<v Speaker 0>driving around big mad. So I'll probably keep

00:43:48.740 --> 00:43:50.655
<v Speaker 0>the window closed, but I will turn off

00:43:50.655 --> 00:43:51.375
<v Speaker 0>my camera.

00:43:51.855 --> 00:43:54.975
<v Speaker 1>Yeah. Let it cool down. Okay. No big

00:43:54.975 --> 00:43:56.575
<v Speaker 0>deal. We can use the other camera.

00:43:56.735 --> 00:43:57.295
<v Speaker 0>So

00:43:57.615 --> 00:43:59.535
<v Speaker 0>this is really cool, and this is showing

00:43:59.535 --> 00:44:00.895
<v Speaker 0>me a lot of things that, you know,

00:44:00.895 --> 00:44:02.495
<v Speaker 0>like I said, are best practice. I really

00:44:02.495 --> 00:44:04.335
<v Speaker 0>should be doing these for my production deployment.

00:44:04.550 --> 00:44:06.630
<v Speaker 0>What I'm curious about is, can I just

00:44:06.630 --> 00:44:08.710
<v Speaker 0>tell Trivy to make these changes?

00:44:09.190 --> 00:44:11.430
<v Speaker 1>It doesn't do that. No. That's that's something

00:44:11.430 --> 00:44:12.470
<v Speaker 1>we could look at.

00:44:12.869 --> 00:44:13.510
<v Speaker 1>I mean,

00:44:13.910 --> 00:44:15.590
<v Speaker 1>yeah. Some of these are quite easy to

00:44:15.590 --> 00:44:18.150
<v Speaker 1>set. Some, I would be careful. Some of

00:44:18.150 --> 00:44:19.670
<v Speaker 1>them, for example, could break things.

00:44:20.555 --> 00:44:22.795
<v Speaker 1>A good example there is you got CPU

00:44:23.115 --> 00:44:26.395
<v Speaker 1>requests not specified and memory requests not specified.

00:44:26.395 --> 00:44:29.275
<v Speaker 1>So with containers, with Docker or Kubernetes,

00:44:29.355 --> 00:44:31.915
<v Speaker 1>you can specify max CPU and memory.

00:44:32.075 --> 00:44:34.395
<v Speaker 1>But if you get those especially memory, if

00:44:34.395 --> 00:44:36.510
<v Speaker 1>you set it too low, you'll out of

00:44:36.510 --> 00:44:38.590
<v Speaker 1>memory, kill the process. Because if you say

00:44:38.590 --> 00:44:40.030
<v Speaker 1>to if you say c group limit, you

00:44:40.030 --> 00:44:42.030
<v Speaker 1>can have 512 megs of memory. You use

00:44:42.030 --> 00:44:43.550
<v Speaker 1>over that. It'll just even kill the whole

00:44:43.550 --> 00:44:44.830
<v Speaker 1>thing, which obviously

00:44:44.990 --> 00:44:46.110
<v Speaker 1>has impact,

00:44:46.270 --> 00:44:48.350
<v Speaker 1>and your process will die. So it's not

00:44:48.350 --> 00:44:49.950
<v Speaker 1>something you'd want to set automatically.

00:44:51.875 --> 00:44:52.595
<v Speaker 0>Nice.

00:44:53.795 --> 00:44:56.195
<v Speaker 0>Yeah. I'm trying to work out what those

00:44:56.195 --> 00:44:58.835
<v Speaker 0>resource requests and limits should be is always

00:44:58.835 --> 00:44:59.795
<v Speaker 0>a trial.

00:45:00.035 --> 00:45:02.195
<v Speaker 1>That yeah. That is the thing with Kubernetes.

00:45:02.195 --> 00:45:03.715
<v Speaker 1>I I mean, it's in general problem with

00:45:03.715 --> 00:45:05.155
<v Speaker 1>containers is

00:45:05.520 --> 00:45:07.120
<v Speaker 1>like, you see why especially if you have

00:45:07.120 --> 00:45:09.360
<v Speaker 1>a cluster with maybe ten, fifteen applications,

00:45:09.680 --> 00:45:11.120
<v Speaker 1>it makes a lot of sense to limit

00:45:11.120 --> 00:45:12.000
<v Speaker 1>resources.

00:45:12.240 --> 00:45:13.680
<v Speaker 1>But on the other hand, like, just like

00:45:13.680 --> 00:45:15.840
<v Speaker 1>you said, how exactly do you make sure

00:45:16.000 --> 00:45:17.520
<v Speaker 1>because you don't want CPU

00:45:17.520 --> 00:45:20.075
<v Speaker 1>isn't too bad because it'll just throttle if

00:45:20.075 --> 00:45:22.075
<v Speaker 1>you go above what you've said. Memory is

00:45:22.075 --> 00:45:23.675
<v Speaker 1>the one that will it'll kill the process.

00:45:23.675 --> 00:45:24.795
<v Speaker 1>You don't want to do that.

00:45:27.275 --> 00:45:28.075
<v Speaker 1>So yeah.

00:45:28.635 --> 00:45:30.155
<v Speaker 0>Okay. We've got a

00:45:30.395 --> 00:45:31.994
<v Speaker 0>couple of questions that I'm gonna throw at

00:45:31.994 --> 00:45:33.194
<v Speaker 0>you, and then maybe we'll take a look

00:45:33.194 --> 00:45:34.954
<v Speaker 0>at the infrastructure

00:45:34.340 --> 00:45:35.540
<v Speaker 0>code scanning.

00:45:35.700 --> 00:45:39.540
<v Speaker 1>Yep. Yep. Okay. So asks

00:45:40.100 --> 00:45:41.620
<v Speaker 0>or oh, that was the

00:45:44.500 --> 00:45:47.115
<v Speaker 0>with our live debug. Oh, no. Debug. There

00:45:47.115 --> 00:45:47.915
<v Speaker 0>we I

00:45:49.515 --> 00:45:51.195
<v Speaker 0>used Trivy to scan for the log four

00:45:51.195 --> 00:45:53.595
<v Speaker 0>j vulnerability after fixing the log four j

00:45:53.595 --> 00:45:56.235
<v Speaker 0>vulnerability. I rescanned it but still got the

00:45:56.235 --> 00:45:59.195
<v Speaker 0>vulnerability and someone mentioned other Java libraries Yeah.

00:45:59.195 --> 00:46:01.115
<v Speaker 0>Actually using log four j internally.

00:46:01.859 --> 00:46:04.339
<v Speaker 1>So with Java, what it's doing is it's

00:46:04.339 --> 00:46:05.780
<v Speaker 1>opening up each of those

00:46:06.579 --> 00:46:09.060
<v Speaker 1>package formats and looking inside.

00:46:09.220 --> 00:46:11.140
<v Speaker 1>And this is the problem with dependencies.

00:46:11.380 --> 00:46:12.740
<v Speaker 1>If you have a dependency,

00:46:12.740 --> 00:46:15.299
<v Speaker 1>you don't directly call Log four j, but

00:46:15.299 --> 00:46:16.500
<v Speaker 1>one of your dependencies

00:46:16.805 --> 00:46:18.485
<v Speaker 1>calls Log four j or a package you've

00:46:18.485 --> 00:46:20.485
<v Speaker 1>installed calls Log four j.

00:46:20.805 --> 00:46:22.485
<v Speaker 1>And then you have that same problem with,

00:46:22.485 --> 00:46:23.925
<v Speaker 1>you know and tracking it down.

00:46:24.085 --> 00:46:25.445
<v Speaker 1>I I that's why I can't get, like,

00:46:25.445 --> 00:46:27.285
<v Speaker 1>an instant answer is tracking that down could

00:46:27.285 --> 00:46:29.525
<v Speaker 1>be difficult. It's really a question of understanding

00:46:29.525 --> 00:46:32.010
<v Speaker 1>everything you're including in your image or on

00:46:32.010 --> 00:46:34.330
<v Speaker 1>your VM and saying where is it pulling

00:46:34.330 --> 00:46:36.730
<v Speaker 1>things from and get access to its manifest.

00:46:36.810 --> 00:46:38.970
<v Speaker 1>Trivy should tell you what file it looked

00:46:38.970 --> 00:46:40.970
<v Speaker 1>in, though. So it should tell you where

00:46:40.970 --> 00:46:42.970
<v Speaker 1>did I find that version of Log four

00:46:42.970 --> 00:46:44.490
<v Speaker 1>j. And Log four j is a nightmare

00:46:44.490 --> 00:46:47.125
<v Speaker 1>because there's there's many different versions now. All

00:46:47.125 --> 00:46:49.445
<v Speaker 1>of them have different horrible set of vulnerabilities.

00:46:50.565 --> 00:46:52.405
<v Speaker 1>So yeah. Actually, I I believe it's called

00:46:52.405 --> 00:46:53.205
<v Speaker 1>LogForge.

00:46:53.205 --> 00:46:54.405
<v Speaker 1>Someone said to me the other day, it's

00:46:54.405 --> 00:46:55.205
<v Speaker 1>LogForge.

00:46:55.365 --> 00:46:56.245
<v Speaker 0>LogForge. Yeah.

00:46:56.885 --> 00:46:59.125
<v Speaker 1>Why would you call your logging package LogForge?

00:46:59.125 --> 00:47:00.405
<v Speaker 1>But I've I've been told that's how it's

00:47:00.405 --> 00:47:00.965
<v Speaker 1>meant to be pronounced.

00:47:01.520 --> 00:47:03.520
<v Speaker 0>Alright. Moving on. I'll I'll I'm not sure

00:47:03.520 --> 00:47:04.880
<v Speaker 1>I believe that. But, yeah, that's just what

00:47:04.960 --> 00:47:06.319
<v Speaker 1>someone said it back there. I was I

00:47:06.319 --> 00:47:08.240
<v Speaker 1>was I was dubious as well. Like, am

00:47:08.240 --> 00:47:09.599
<v Speaker 1>I being pranked here to get me to

00:47:09.599 --> 00:47:11.440
<v Speaker 1>sit sillyly on stream or something?

00:47:11.760 --> 00:47:12.480
<v Speaker 1>I mean,

00:47:13.440 --> 00:47:14.960
<v Speaker 0>I guess it's just a name that they

00:47:14.960 --> 00:47:17.085
<v Speaker 0>like. I I just assumed it meant log

00:47:17.085 --> 00:47:18.045
<v Speaker 0>for Java.

00:47:18.205 --> 00:47:19.965
<v Speaker 1>Yeah. Exactly. That's what I thought. I was

00:47:19.965 --> 00:47:21.885
<v Speaker 1>thinking it's gotta be that, but apparently not.

00:47:22.045 --> 00:47:23.245
<v Speaker 1>One of those weird ones.

00:47:23.725 --> 00:47:24.605
<v Speaker 0>Alright.

00:47:24.605 --> 00:47:26.685
<v Speaker 0>There you go. Again, today, I'm learning lots

00:47:26.685 --> 00:47:28.285
<v Speaker 0>from you. Some of it useful, some of

00:47:28.285 --> 00:47:30.190
<v Speaker 0>it not. Yeah. Some of this weird trivia

00:47:30.190 --> 00:47:31.790
<v Speaker 1>that I store up and then just like,

00:47:31.950 --> 00:47:33.790
<v Speaker 1>just bring us to mind. Yeah. What's the

00:47:33.790 --> 00:47:36.270
<v Speaker 0>CVE number for Log four j?

00:47:37.070 --> 00:47:38.910
<v Speaker 1>Oh, there were too many. I I I

00:47:38.910 --> 00:47:40.670
<v Speaker 1>wanna excuse myself on the basis that there

00:47:40.670 --> 00:47:41.550
<v Speaker 1>were literally,

00:47:41.790 --> 00:47:43.630
<v Speaker 1>like, six or seven in quick succession.

00:47:44.255 --> 00:47:46.015
<v Speaker 1>Every time they patched one. That's one of

00:47:46.015 --> 00:47:48.015
<v Speaker 1>the problems with, like, a lot of open

00:47:48.015 --> 00:47:49.215
<v Speaker 1>source vulnerabilities.

00:47:49.215 --> 00:47:50.815
<v Speaker 1>What you see is that I I will

00:47:50.815 --> 00:47:52.415
<v Speaker 1>always call it the blood in the water.

00:47:52.815 --> 00:47:54.975
<v Speaker 1>Once someone's done one thing, all these researchers

00:47:54.975 --> 00:47:56.175
<v Speaker 1>who are super bright

00:47:56.520 --> 00:47:58.120
<v Speaker 1>go, oh, that's an interesting one. We've not

00:47:58.120 --> 00:48:00.040
<v Speaker 1>looked there now. Let's all go and, like,

00:48:00.040 --> 00:48:01.960
<v Speaker 1>pull that code to pieces. And they did,

00:48:01.960 --> 00:48:03.480
<v Speaker 1>and they found, like, literally

00:48:03.560 --> 00:48:05.400
<v Speaker 1>half a dozen things. Yep.

00:48:05.720 --> 00:48:07.640
<v Speaker 1>I you know, that that's kind of inevitable

00:48:07.640 --> 00:48:09.240
<v Speaker 1>because there's so much code

00:48:09.605 --> 00:48:13.285
<v Speaker 1>and, you know, good code reviewers are scarce

00:48:13.285 --> 00:48:14.965
<v Speaker 1>because it's not an easy skill to learn.

00:48:15.605 --> 00:48:17.045
<v Speaker 1>So, you know, it tends to be when

00:48:17.045 --> 00:48:18.565
<v Speaker 1>something gets attention suddenly.

00:48:19.924 --> 00:48:20.724
<v Speaker 0>Awesome.

00:48:20.724 --> 00:48:22.565
<v Speaker 0>Alright. One more question, and then we'll we'll

00:48:22.565 --> 00:48:24.760
<v Speaker 0>pop back over to the terminal. I mean,

00:48:24.760 --> 00:48:25.880
<v Speaker 0>I guess I could just

00:48:28.280 --> 00:48:29.960
<v Speaker 0>we can pop here for a minute. Oh.

00:48:29.960 --> 00:48:30.840
<v Speaker 0>Excuse

00:48:30.840 --> 00:48:32.280
<v Speaker 0>me while I fix myself.

00:48:32.440 --> 00:48:33.480
<v Speaker 1>No. It's decided to

00:48:34.360 --> 00:48:36.360
<v Speaker 0>It's just because the seniors did different setup.

00:48:36.465 --> 00:48:38.465
<v Speaker 0>That's okay. Yeah. So Russell

00:48:38.465 --> 00:48:41.025
<v Speaker 0>now is asking, I'm guessing there is no

00:48:41.025 --> 00:48:43.105
<v Speaker 0>easy way to find an exploit of a

00:48:43.105 --> 00:48:44.945
<v Speaker 0>CVE for you to test your code against

00:48:44.945 --> 00:48:46.865
<v Speaker 0>to see how susceptible it is.

00:48:47.265 --> 00:48:49.025
<v Speaker 0>Yeah. Would be too valuable for misuse.

00:48:50.040 --> 00:48:52.280
<v Speaker 1>You can do it. So there are exploit

00:48:52.280 --> 00:48:53.080
<v Speaker 1>databases.

00:48:53.480 --> 00:48:56.360
<v Speaker 1>There's several exploit databases you can search.

00:48:56.840 --> 00:48:58.200
<v Speaker 1>The thing out a couple of points I

00:48:58.200 --> 00:49:01.160
<v Speaker 1>would say about that. One, it doesn't necessarily

00:49:01.160 --> 00:49:03.240
<v Speaker 1>mean the exploit will work on your code.

00:49:03.525 --> 00:49:05.444
<v Speaker 1>One of the most important things about exploits

00:49:05.444 --> 00:49:07.684
<v Speaker 1>and one of the reasons why certain vulnerabilities

00:49:07.684 --> 00:49:10.244
<v Speaker 1>are more serious than others is ease of

00:49:10.244 --> 00:49:11.045
<v Speaker 1>exploitation.

00:49:11.605 --> 00:49:13.845
<v Speaker 1>If you get something where it's, like, universal,

00:49:13.845 --> 00:49:15.204
<v Speaker 1>Log four g is a great example.

00:49:16.140 --> 00:49:19.099
<v Speaker 1>Everyone could exploit that because it literally was,

00:49:19.260 --> 00:49:21.180
<v Speaker 1>I make the application log

00:49:21.180 --> 00:49:22.220
<v Speaker 1>a string

00:49:22.460 --> 00:49:24.619
<v Speaker 1>and, boom, I've got an exploit. That's why

00:49:24.619 --> 00:49:25.980
<v Speaker 1>it was so dangerous. There were so many

00:49:25.980 --> 00:49:27.900
<v Speaker 1>different ways. Other exploits,

00:49:28.140 --> 00:49:29.579
<v Speaker 1>you look at them and you go, they're

00:49:29.579 --> 00:49:31.500
<v Speaker 1>serious, but you'll never even if you get

00:49:31.500 --> 00:49:32.915
<v Speaker 1>some code, try to make it work would

00:49:32.915 --> 00:49:33.875
<v Speaker 1>be a nightmare.

00:49:34.195 --> 00:49:35.315
<v Speaker 1>So there's that aspect.

00:49:35.475 --> 00:49:36.994
<v Speaker 1>The other thing to watch out for and

00:49:36.994 --> 00:49:39.475
<v Speaker 1>be very careful of is sometimes

00:49:39.875 --> 00:49:41.715
<v Speaker 1>exploit code does not say what it says

00:49:41.715 --> 00:49:42.515
<v Speaker 1>it will do.

00:49:42.835 --> 00:49:45.490
<v Speaker 1>The people who write this either sometimes they

00:49:45.490 --> 00:49:46.849
<v Speaker 1>are actively malicious

00:49:46.930 --> 00:49:48.930
<v Speaker 1>and sometimes they just have a funny sense

00:49:48.930 --> 00:49:49.650
<v Speaker 1>of humor.

00:49:50.210 --> 00:49:52.450
<v Speaker 1>There's a guy called Andy Gill from Glasgow,

00:49:52.609 --> 00:49:54.530
<v Speaker 1>and he wrote a thing called Honeypop,

00:49:54.690 --> 00:49:56.690
<v Speaker 1>which was proof of concept exploit code that

00:49:56.690 --> 00:49:58.555
<v Speaker 1>didn't do that. It just logged it to

00:49:58.555 --> 00:49:59.835
<v Speaker 1>him that you'd run his code without reading

00:49:59.835 --> 00:50:00.315
<v Speaker 1>it.

00:50:00.715 --> 00:50:02.715
<v Speaker 1>And he then wrote a conference talk based

00:50:02.715 --> 00:50:04.315
<v Speaker 1>on the idea of how many people ran

00:50:04.315 --> 00:50:06.395
<v Speaker 1>his code without reading what it did before

00:50:06.395 --> 00:50:07.275
<v Speaker 1>they ran it.

00:50:08.075 --> 00:50:09.915
<v Speaker 1>So be very careful when you go looking

00:50:09.915 --> 00:50:11.355
<v Speaker 1>into exploit land is all I'll say.

00:50:12.350 --> 00:50:13.710
<v Speaker 0>That's quite funny.

00:50:13.950 --> 00:50:14.590
<v Speaker 0>Alright.

00:50:15.230 --> 00:50:16.670
<v Speaker 0>Cool.

00:50:16.990 --> 00:50:17.630
<v Speaker 0>So

00:50:18.510 --> 00:50:21.790
<v Speaker 0>infrastructure is code scanning then, Rory. Yeah. So,

00:50:21.790 --> 00:50:23.870
<v Speaker 1>yes, we we can do infrastructure code as

00:50:23.870 --> 00:50:26.535
<v Speaker 1>well. So this I only have Pulumi code.

00:50:26.535 --> 00:50:28.535
<v Speaker 0>So I'm assuming it doesn't do that. So

00:50:28.535 --> 00:50:30.455
<v Speaker 0>we're gonna have to find a TerraForm repository.

00:50:30.455 --> 00:50:32.455
<v Speaker 0>Right? We are. But, you know, Pulumi is

00:50:32.455 --> 00:50:33.735
<v Speaker 1>something I think we should definitely be looking

00:50:33.735 --> 00:50:36.295
<v Speaker 1>at adding. Well, I mean, because Pulumi uses,

00:50:36.455 --> 00:50:38.360
<v Speaker 0>you know, real programming language, like, you can

00:50:38.360 --> 00:50:40.120
<v Speaker 0>do dependency scan and at least you can

00:50:40.120 --> 00:50:41.640
<v Speaker 0>be taking a look at the code apps

00:50:41.640 --> 00:50:43.400
<v Speaker 0>or the typescript apps or the Python apps,

00:50:43.400 --> 00:50:44.040
<v Speaker 0>etcetera.

00:50:44.440 --> 00:50:45.880
<v Speaker 1>And I'm guessing the same kind of things

00:50:45.880 --> 00:50:47.160
<v Speaker 1>as patterns we have

00:50:47.480 --> 00:50:49.560
<v Speaker 1>in Terraform that that we know are bad,

00:50:49.560 --> 00:50:51.080
<v Speaker 1>the same thing will apply to Pulumi. Right?

00:50:52.055 --> 00:50:52.935
<v Speaker 0>Yeah.

00:50:52.935 --> 00:50:54.615
<v Speaker 0>I think they would. You know, like, you

00:50:54.615 --> 00:50:56.615
<v Speaker 1>can see someone doing something dangerous, like, I'm

00:50:56.615 --> 00:50:58.615
<v Speaker 1>configuring an AWS resource,

00:50:58.615 --> 00:50:59.895
<v Speaker 1>and if I run it this way, it's

00:50:59.895 --> 00:51:01.415
<v Speaker 1>gonna be open to the world, which is

00:51:01.415 --> 00:51:02.375
<v Speaker 1>the kind of thing you can find in

00:51:02.375 --> 00:51:02.855
<v Speaker 1>Terraform.

00:51:05.230 --> 00:51:06.270
<v Speaker 0>Oh, this

00:51:07.070 --> 00:51:09.150
<v Speaker 0>starter kit might be a good one. Unless

00:51:09.150 --> 00:51:10.430
<v Speaker 0>you have something I should be cloning there.

00:51:10.430 --> 00:51:12.190
<v Speaker 1>I'm telling whether I I have an I

00:51:12.190 --> 00:51:13.550
<v Speaker 1>I probably can find a

00:51:14.510 --> 00:51:15.470
<v Speaker 1>do we have

00:51:17.390 --> 00:51:18.990
<v Speaker 1>oh, wait. There's an example link.

00:51:21.635 --> 00:51:25.234
<v Speaker 1>There is actually in the in the Trivy

00:51:25.234 --> 00:51:26.755
<v Speaker 1>repository on GitHub

00:51:26.915 --> 00:51:29.075
<v Speaker 0>Mhmm. There are some examples.

00:51:29.395 --> 00:51:31.395
<v Speaker 1>So it is a directory called

00:51:32.835 --> 00:51:35.555
<v Speaker 1>is it called examples or is it called

00:51:36.630 --> 00:51:37.510
<v Speaker 1>where is it?

00:51:38.069 --> 00:51:40.230
<v Speaker 0>Yep. Those examples and then missed con. Oh,

00:51:40.230 --> 00:51:43.109
<v Speaker 1>yeah. That's it. And then there's one called

00:51:43.109 --> 00:51:43.910
<v Speaker 1>mixed.

00:51:44.550 --> 00:51:46.710
<v Speaker 1>See the directory in there called mixed. Alright.

00:51:46.710 --> 00:51:47.270
<v Speaker 0>Let's

00:51:47.685 --> 00:51:49.205
<v Speaker 0>clone this down then. Yeah. We can clone

00:51:49.205 --> 00:51:50.405
<v Speaker 1>it down. I mean, we can we can

00:51:50.405 --> 00:51:51.685
<v Speaker 1>do that. That will that will get us

00:51:51.685 --> 00:51:52.405
<v Speaker 1>some stuff as well.

00:51:59.730 --> 00:52:01.170
<v Speaker 1>This is, like, one of the things I

00:52:01.170 --> 00:52:03.890
<v Speaker 1>always say that I really like about the

00:52:03.890 --> 00:52:05.970
<v Speaker 1>move to cloud native, like, as a security

00:52:05.970 --> 00:52:06.610
<v Speaker 1>person,

00:52:07.010 --> 00:52:08.450
<v Speaker 1>is that this is possible.

00:52:08.850 --> 00:52:10.610
<v Speaker 1>If you think about how people configure their

00:52:10.610 --> 00:52:11.490
<v Speaker 1>infrastructure,

00:52:11.490 --> 00:52:13.170
<v Speaker 1>like, go back to the early days or

00:52:13.170 --> 00:52:15.444
<v Speaker 1>my early days, ten, fifteen years ago, it

00:52:15.444 --> 00:52:18.405
<v Speaker 1>was manual changes to servers. People would log

00:52:18.405 --> 00:52:20.405
<v Speaker 1>in to servers SSH style Yeah. And they

00:52:20.405 --> 00:52:22.405
<v Speaker 1>would change things. There was no way it

00:52:22.405 --> 00:52:24.645
<v Speaker 1>was very hard to audit that at scale

00:52:25.045 --> 00:52:27.525
<v Speaker 1>without physically logging into every server and doing

00:52:27.525 --> 00:52:29.600
<v Speaker 1>things. With infrastructure's

00:52:29.600 --> 00:52:33.440
<v Speaker 1>code and with people moving to immutable infrastructure,

00:52:33.680 --> 00:52:35.680
<v Speaker 1>you have the chance of seeing, I can

00:52:35.680 --> 00:52:37.920
<v Speaker 1>scan this before I deploy it so that

00:52:37.920 --> 00:52:40.320
<v Speaker 1>I catch the problems before they're in production,

00:52:40.575 --> 00:52:42.895
<v Speaker 1>before some bright person finds them and exploits

00:52:42.895 --> 00:52:44.815
<v Speaker 1>them and puts me on the latest, you

00:52:44.815 --> 00:52:47.055
<v Speaker 1>know, blast of the day on hacker news

00:52:47.055 --> 00:52:47.775
<v Speaker 1>or whatever.

00:52:49.454 --> 00:52:51.775
<v Speaker 0>Yeah. I guess with everything being so declarative

00:52:51.775 --> 00:52:53.855
<v Speaker 0>these days that we have these descriptions that

00:52:53.855 --> 00:52:56.720
<v Speaker 0>can just be processed and parsed. Yeah.

00:52:57.440 --> 00:52:59.280
<v Speaker 1>And and and the magic then and this

00:52:59.280 --> 00:53:01.680
<v Speaker 1>is one of the tough parts for scanners

00:53:01.680 --> 00:53:03.680
<v Speaker 1>like Trivy and all the other there's like

00:53:03.680 --> 00:53:06.000
<v Speaker 1>a lot of infrastructures code scanners. The challenge

00:53:06.000 --> 00:53:07.440
<v Speaker 1>to my mind is keeping up with the

00:53:07.440 --> 00:53:07.680
<v Speaker 1>rules.

00:53:08.305 --> 00:53:09.665
<v Speaker 1>Mhmm. So the one I know about is

00:53:09.665 --> 00:53:12.545
<v Speaker 1>Kubernetes. That's my kind of area. And every

00:53:12.545 --> 00:53:14.865
<v Speaker 1>time Kubernetes does a release, they add new

00:53:14.865 --> 00:53:17.425
<v Speaker 1>stuff. And therefore, all the IAC scanning tools

00:53:17.425 --> 00:53:19.905
<v Speaker 1>have to go back and say, hey. This

00:53:19.905 --> 00:53:21.265
<v Speaker 1>version is a good example. There was a

00:53:21.265 --> 00:53:24.089
<v Speaker 1>thing called ephemeral containers that got launched in

00:53:24.089 --> 00:53:25.609
<v Speaker 1>Kubernetes 01/23.

00:53:25.849 --> 00:53:27.770
<v Speaker 1>And now all your I see scanning tools

00:53:27.770 --> 00:53:29.690
<v Speaker 1>or your admission controllers have to know about

00:53:29.690 --> 00:53:32.650
<v Speaker 1>ephemeral containers. Otherwise, they won't, like, find stuff

00:53:32.650 --> 00:53:33.290
<v Speaker 1>properly.

00:53:34.569 --> 00:53:37.529
<v Speaker 1>So the the eternal problem of of newness.

00:53:40.165 --> 00:53:42.565
<v Speaker 0>Alright. And remain making. Which directory in here

00:53:42.565 --> 00:53:44.325
<v Speaker 0>did you say? There's one called mixed mixed

00:53:44.325 --> 00:53:45.845
<v Speaker 1>definitely has something in it. I I looked.

00:53:45.845 --> 00:53:47.365
<v Speaker 1>There was some Terraform files in there.

00:53:48.165 --> 00:53:50.500
<v Speaker 1>In configs. Yeah. That was it. Yeah. There's

00:53:50.500 --> 00:53:52.260
<v Speaker 0>a t f files. There's couple t f

00:53:52.260 --> 00:53:54.020
<v Speaker 1>files there. So Trivy

00:53:54.100 --> 00:53:54.980
<v Speaker 0>config.

00:53:55.220 --> 00:53:56.260
<v Speaker 1>I've done yeah.

00:53:56.900 --> 00:53:58.580
<v Speaker 1>If you're in the directory, you should yay.

00:54:00.260 --> 00:54:02.820
<v Speaker 0>Page it. Okay. So it

00:54:03.220 --> 00:54:04.820
<v Speaker 0>vendor Docker file.

00:54:04.900 --> 00:54:05.300
<v Speaker 0>Yep.

00:54:06.795 --> 00:54:08.875
<v Speaker 0>And there And CloudFormation.

00:54:10.714 --> 00:54:12.875
<v Speaker 1>So we're doing CloudFormation as well. Oh, there

00:54:12.875 --> 00:54:14.075
<v Speaker 0>we go. Yeah. Okay. I was trying to

00:54:14.075 --> 00:54:15.435
<v Speaker 0>work out what that YAML was. I was

00:54:15.435 --> 00:54:17.994
<v Speaker 0>like, how is this, like, a cross

00:54:17.994 --> 00:54:19.915
<v Speaker 0>play or something, but it's quite it says

00:54:19.915 --> 00:54:22.450
<v Speaker 0>right there is Cloud information. Okay. Yeah. Yeah.

00:54:22.450 --> 00:54:24.530
<v Speaker 1>So it detects different types. And this, again,

00:54:24.530 --> 00:54:25.890
<v Speaker 1>this is one of the things that the

00:54:25.890 --> 00:54:28.770
<v Speaker 1>Trivy is expanding over time. So recently,

00:54:29.090 --> 00:54:30.610
<v Speaker 1>we got a couple of of of great

00:54:30.610 --> 00:54:32.530
<v Speaker 1>guys into the team who wrote TF sec,

00:54:32.705 --> 00:54:35.105
<v Speaker 1>which is a Terraform security tool, and that's

00:54:35.105 --> 00:54:37.505
<v Speaker 1>integrated now into Trivy, which is fantastic. So

00:54:37.505 --> 00:54:38.625
<v Speaker 1>now you can just run Trivy, and it

00:54:38.625 --> 00:54:40.145
<v Speaker 1>will, you know, do this TFsec stuff as

00:54:40.145 --> 00:54:41.105
<v Speaker 1>well, which is great.

00:54:43.105 --> 00:54:45.505
<v Speaker 0>So we can see here Yeah. That it's

00:54:45.505 --> 00:54:46.065
<v Speaker 0>complaining

00:54:47.220 --> 00:54:48.420
<v Speaker 0>that our s

00:54:49.300 --> 00:54:50.900
<v Speaker 0>buckets are public.

00:54:51.220 --> 00:54:53.140
<v Speaker 1>Yeah. Right. So that that's the kind of

00:54:53.140 --> 00:54:54.740
<v Speaker 1>thing and this is, again, this is another

00:54:54.740 --> 00:54:55.620
<v Speaker 1>one where,

00:54:55.940 --> 00:54:58.020
<v Speaker 1>like, you do have to think about responses

00:54:58.020 --> 00:54:59.859
<v Speaker 1>from these scanners. You can't take them blind

00:55:00.125 --> 00:55:01.565
<v Speaker 1>because it may be that your s three

00:55:01.565 --> 00:55:03.165
<v Speaker 1>bucket's meant to be public. Yep. You might

00:55:03.165 --> 00:55:04.845
<v Speaker 1>be hosting public documents there,

00:55:05.165 --> 00:55:06.525
<v Speaker 1>but you might not.

00:55:06.765 --> 00:55:08.285
<v Speaker 1>And so all this the scanning tool can

00:55:08.285 --> 00:55:10.525
<v Speaker 1>do is it can say this stuff looks

00:55:10.684 --> 00:55:11.724
<v Speaker 1>you know, here's your investigation.

00:55:12.309 --> 00:55:14.309
<v Speaker 1>And in general, this is a challenge for

00:55:14.309 --> 00:55:16.470
<v Speaker 1>security people because sometimes

00:55:16.549 --> 00:55:18.230
<v Speaker 1>auditors will use these tools,

00:55:18.549 --> 00:55:21.589
<v Speaker 1>and auditors don't always understand the technical details

00:55:21.589 --> 00:55:23.270
<v Speaker 1>of what they're scanning. And this but but

00:55:23.270 --> 00:55:24.309
<v Speaker 1>I don't think there's a good way to

00:55:24.309 --> 00:55:26.545
<v Speaker 1>get away from that. Apart from if I

00:55:26.545 --> 00:55:28.705
<v Speaker 1>was doing this work, I would run the

00:55:28.705 --> 00:55:30.785
<v Speaker 1>scanners myself and have an answer for their

00:55:30.785 --> 00:55:31.265
<v Speaker 1>questions.

00:55:31.665 --> 00:55:32.785
<v Speaker 1>So if you know if says, hey. This

00:55:32.785 --> 00:55:34.305
<v Speaker 1>this s three is public, go, yep. That

00:55:34.305 --> 00:55:36.385
<v Speaker 1>one's allowed. It's holds the stuff here. We

00:55:36.385 --> 00:55:38.625
<v Speaker 1>know what's in it. It's a static website.

00:55:38.625 --> 00:55:40.980
<v Speaker 0>It's supposed to be Exactly. It it it's

00:55:40.980 --> 00:55:42.180
<v Speaker 1>our t's and c's that we give to

00:55:42.180 --> 00:55:43.700
<v Speaker 1>all our customers or something. You know, it's

00:55:43.700 --> 00:55:44.660
<v Speaker 1>it's public docs.

00:55:44.900 --> 00:55:46.900
<v Speaker 0>Yeah. But it's important to get these messages.

00:55:46.900 --> 00:55:49.060
<v Speaker 0>I actually recorded a video of the Polyvio

00:55:49.060 --> 00:55:51.540
<v Speaker 0>channel just last week talking about the three

00:55:51.540 --> 00:55:53.300
<v Speaker 0>major exploits in the last two years, and

00:55:53.300 --> 00:55:55.155
<v Speaker 0>all of them are related to ACL on

00:55:55.155 --> 00:55:57.635
<v Speaker 0>a s three bucket. Yep. Hundreds

00:55:57.635 --> 00:56:00.515
<v Speaker 0>of thousands of private documents in the Ghana

00:56:00.515 --> 00:56:01.315
<v Speaker 0>government

00:56:01.395 --> 00:56:03.155
<v Speaker 0>and all the citizens was released to the

00:56:03.155 --> 00:56:03.715
<v Speaker 0>public.

00:56:03.955 --> 00:56:05.555
<v Speaker 0>Game companies are seem to be bad for

00:56:05.555 --> 00:56:07.155
<v Speaker 0>this as well. Game companies only can do

00:56:07.155 --> 00:56:08.595
<v Speaker 0>a left, right, and center via s three

00:56:08.595 --> 00:56:11.160
<v Speaker 0>buckets. It it doesn't surprise me because I

00:56:11.320 --> 00:56:13.560
<v Speaker 1>like, a lot of enterprises now,

00:56:13.800 --> 00:56:15.960
<v Speaker 1>it seems like their entire IT infrastructure is

00:56:15.960 --> 00:56:17.800
<v Speaker 1>in the cloud. Yeah. And I go back

00:56:17.800 --> 00:56:20.200
<v Speaker 1>to my old corporate security days when everything

00:56:20.200 --> 00:56:21.880
<v Speaker 1>was hidden behind the corporate firewall, so at

00:56:21.880 --> 00:56:23.685
<v Speaker 1>least you couldn't easily see it. I mean,

00:56:23.685 --> 00:56:24.965
<v Speaker 1>it still was hackable, but you had to

00:56:24.965 --> 00:56:26.165
<v Speaker 1>get past that firewall.

00:56:26.405 --> 00:56:28.725
<v Speaker 1>And back then, those I always called the

00:56:28.725 --> 00:56:30.325
<v Speaker 1>networks warm smarties.

00:56:30.565 --> 00:56:32.485
<v Speaker 1>So they're crunchy outside, they're all gooey and

00:56:32.485 --> 00:56:33.525
<v Speaker 1>soft on the inside.

00:56:34.085 --> 00:56:35.605
<v Speaker 1>And now everyone's put all that stuff straight

00:56:35.605 --> 00:56:36.085
<v Speaker 1>on the Internet.

00:56:37.210 --> 00:56:39.370
<v Speaker 1>If anyone from non UK is watching, warm

00:56:39.370 --> 00:56:41.290
<v Speaker 1>m and m would be the international

00:56:41.290 --> 00:56:42.970
<v Speaker 1>equivalent of warm smarty.

00:56:43.050 --> 00:56:44.970
<v Speaker 1>I call them warm smarty networks. But now

00:56:44.970 --> 00:56:47.290
<v Speaker 1>everyone puts that stuff straight in in AWS,

00:56:47.610 --> 00:56:49.130
<v Speaker 1>and then you're right there on the Internet.

00:56:49.130 --> 00:56:50.650
<v Speaker 1>If you make that same one mistake, you

00:56:50.650 --> 00:56:52.704
<v Speaker 1>know, you don't understand something. You've got a

00:56:52.704 --> 00:56:54.704
<v Speaker 1>line in a YAML file wrong, and suddenly

00:56:54.704 --> 00:56:56.625
<v Speaker 1>it's odd here, some bad person has found

00:56:56.625 --> 00:56:59.585
<v Speaker 1>your stuff. And Yeah. But this maybe

00:57:00.145 --> 00:57:01.585
<v Speaker 0>I I I said I would say there's

00:57:01.585 --> 00:57:03.345
<v Speaker 0>just security, but I'm seeing this massive push

00:57:03.345 --> 00:57:05.800
<v Speaker 0>towards zero trust, but we're still so early

00:57:05.800 --> 00:57:06.839
<v Speaker 0>in education

00:57:06.839 --> 00:57:09.400
<v Speaker 0>of zero trust to develop Yep. That that

00:57:12.920 --> 00:57:14.839
<v Speaker 1>there was weirdly, this is like, you know,

00:57:14.839 --> 00:57:16.200
<v Speaker 1>they all see what is old is new

00:57:16.200 --> 00:57:16.440
<v Speaker 1>again.

00:57:17.165 --> 00:57:19.805
<v Speaker 1>So in literally 02/2002, when I was starting

00:57:19.805 --> 00:57:21.165
<v Speaker 1>in security, there was a thing called the

00:57:21.165 --> 00:57:23.724
<v Speaker 1>Jericho Forum in The UK who pushed something

00:57:23.724 --> 00:57:25.325
<v Speaker 1>called deperemeterization,

00:57:25.565 --> 00:57:27.244
<v Speaker 1>which is the exact same thing as zero

00:57:27.244 --> 00:57:27.965
<v Speaker 1>trust.

00:57:28.205 --> 00:57:30.125
<v Speaker 1>It was removed the firewalls, put everything on

00:57:30.125 --> 00:57:31.484
<v Speaker 1>the Internet because you have to be able

00:57:31.484 --> 00:57:32.125
<v Speaker 1>to trust things.

00:57:33.599 --> 00:57:35.279
<v Speaker 1>Smart's not global. I I think they're not

00:57:35.279 --> 00:57:36.720
<v Speaker 1>global. I think I don't I think Americans

00:57:36.720 --> 00:57:37.920
<v Speaker 1>don't have smarties.

00:57:38.240 --> 00:57:40.000
<v Speaker 1>I believe it's horrible to say, but but

00:57:40.000 --> 00:57:40.960
<v Speaker 1>I believe it's true.

00:57:41.760 --> 00:57:43.599
<v Speaker 1>So, yeah, zero trust is my my business.

00:57:43.599 --> 00:57:46.815
<v Speaker 0>Today. Right? Yeah. Zero trust is cool if

00:57:46.815 --> 00:57:49.375
<v Speaker 1>you're doing it right. Like, if ever I

00:57:49.375 --> 00:57:51.615
<v Speaker 1>mean, yes. They're right in theory. Right? It's

00:57:51.615 --> 00:57:53.455
<v Speaker 1>one of those things. In theory, they're right.

00:57:53.455 --> 00:57:55.775
<v Speaker 1>Every system should stand alone. It shouldn't trust

00:57:55.775 --> 00:57:57.455
<v Speaker 1>anyone. It shouldn't say I want a trusted

00:57:57.455 --> 00:57:58.815
<v Speaker 1>network. It should just be

00:57:59.319 --> 00:58:00.440
<v Speaker 1>in reality.

00:58:01.400 --> 00:58:03.720
<v Speaker 1>That's not how things work. People make mistakes.

00:58:03.720 --> 00:58:05.480
<v Speaker 1>They stand up demo systems. They stand up

00:58:05.480 --> 00:58:07.880
<v Speaker 1>test systems. They don't always patch or secure.

00:58:08.040 --> 00:58:09.640
<v Speaker 1>And putting those all on the Internet sounds

00:58:09.640 --> 00:58:11.160
<v Speaker 1>like a kind of dangerous idea to me.

00:58:12.135 --> 00:58:12.935
<v Speaker 1>Luckily,

00:58:12.935 --> 00:58:14.295
<v Speaker 1>I'm not in that world, so I'm very

00:58:14.295 --> 00:58:15.815
<v Speaker 1>happy not to be in that world. I

00:58:15.815 --> 00:58:17.415
<v Speaker 0>I guess that's your option. Because you put

00:58:17.415 --> 00:58:18.935
<v Speaker 0>everything on the Internet, and you learn how

00:58:18.935 --> 00:58:20.535
<v Speaker 0>to secure it properly, and you try to

00:58:20.535 --> 00:58:23.015
<v Speaker 0>keep up with modern trends, or you stick

00:58:23.095 --> 00:58:25.255
<v Speaker 0>Bastion Box or VPN.

00:58:25.415 --> 00:58:26.135
<v Speaker 0>And Yep.

00:58:26.615 --> 00:58:28.340
<v Speaker 0>But then you still got lateral movement beyond

00:58:28.340 --> 00:58:30.340
<v Speaker 0>those parameters. So, like Yeah. Is

00:58:30.820 --> 00:58:32.580
<v Speaker 0>do you need to do both? I I

00:58:32.580 --> 00:58:34.100
<v Speaker 1>I would. I I have this I have

00:58:34.100 --> 00:58:36.100
<v Speaker 1>this concept. I I I did when this

00:58:36.100 --> 00:58:37.620
<v Speaker 1>talk with a guy from GCHQ,

00:58:37.620 --> 00:58:38.900
<v Speaker 1>and he had this concept. I won't use

00:58:38.900 --> 00:58:40.260
<v Speaker 1>the real his the way he called it

00:58:40.260 --> 00:58:42.005
<v Speaker 1>because it's a bit rude on stream. I

00:58:42.005 --> 00:58:43.445
<v Speaker 1>call it mess up tolerance.

00:58:43.605 --> 00:58:46.005
<v Speaker 1>He called it something else to up tolerance.

00:58:46.325 --> 00:58:48.645
<v Speaker 1>And the idea is, like, you don't want

00:58:48.645 --> 00:58:50.405
<v Speaker 1>to have a mess up tolerance of one

00:58:50.405 --> 00:58:52.325
<v Speaker 1>where if one bad thing goes wrong, your

00:58:52.325 --> 00:58:53.445
<v Speaker 1>entire network's stuffed.

00:58:54.260 --> 00:58:55.540
<v Speaker 1>And that to my mind, if you put

00:58:55.540 --> 00:58:57.940
<v Speaker 1>things on the Internet, like Kubernetes API servers,

00:58:58.020 --> 00:58:59.140
<v Speaker 1>there are 900,000

00:58:59.140 --> 00:59:02.180
<v Speaker 1>Kubernetes API servers directly connected to the Internet.

00:59:03.060 --> 00:59:04.980
<v Speaker 1>One bad day, you may lose a set

00:59:04.980 --> 00:59:06.900
<v Speaker 1>of creds, you make a mistake with your

00:59:06.900 --> 00:59:07.380
<v Speaker 1>RBAC,

00:59:07.815 --> 00:59:09.974
<v Speaker 1>and your entire cluster could get compromised, and

00:59:09.974 --> 00:59:11.335
<v Speaker 1>all the hosts and all the workloads get

00:59:11.415 --> 00:59:13.015
<v Speaker 1>go down with it. That's a messed up

00:59:13.015 --> 00:59:14.695
<v Speaker 1>tolerance of one. To my mind, put it

00:59:14.695 --> 00:59:16.375
<v Speaker 1>behind the bastion box, then at least two

00:59:16.375 --> 00:59:18.214
<v Speaker 1>things have to go wrong. Someone has access

00:59:18.214 --> 00:59:19.734
<v Speaker 1>to your bastion, and you have to make

00:59:19.734 --> 00:59:20.695
<v Speaker 1>a mess up with Kubernetes.

00:59:21.210 --> 00:59:22.650
<v Speaker 1>And you saw that, like, make your life

00:59:22.650 --> 00:59:24.490
<v Speaker 1>that little bit less painful because everyone makes

00:59:24.490 --> 00:59:26.730
<v Speaker 1>mistakes. Right? I make mistakes. You make mistakes.

00:59:26.730 --> 00:59:27.770
<v Speaker 1>We all make mistakes.

00:59:30.410 --> 00:59:32.170
<v Speaker 0>I've never made a mistake, Rory.

00:59:32.570 --> 00:59:34.250
<v Speaker 1>No. Me neither. My my my mistake is

00:59:34.250 --> 00:59:34.810
<v Speaker 1>perfect.

00:59:35.615 --> 00:59:37.295
<v Speaker 1>And don't go and look at my repositories

00:59:37.295 --> 00:59:38.655
<v Speaker 1>and look at the ones I've enabled VON

00:59:38.655 --> 00:59:39.855
<v Speaker 1>scanning on, and you won't see all the

00:59:39.855 --> 00:59:41.455
<v Speaker 1>hundreds of issues that I haven't patched.

00:59:42.974 --> 00:59:43.615
<v Speaker 0>Cool.

00:59:43.775 --> 00:59:45.454
<v Speaker 0>Well, let's go back to the important topic

00:59:45.454 --> 00:59:47.454
<v Speaker 0>for today. Yeah. Thomas Laff has told us

00:59:47.454 --> 00:59:49.535
<v Speaker 0>that they have Smarties in Croatia.

00:59:49.910 --> 00:59:52.550
<v Speaker 1>Oh, well, that's good. However, Russell has done

00:59:52.550 --> 00:59:53.430
<v Speaker 0>some research.

00:59:54.630 --> 00:59:56.230
<v Speaker 0>Good to find you there. But the term

00:59:56.230 --> 00:59:58.950
<v Speaker 0>Smarties in The US is used for what

00:59:58.950 --> 01:00:00.310
<v Speaker 0>we call refreshers.

01:00:00.550 --> 01:00:01.510
<v Speaker 1>Good grief.

01:00:01.830 --> 01:00:03.590
<v Speaker 1>That's a terrible one. That you could very

01:00:03.590 --> 01:00:05.110
<v Speaker 1>badly wrong there. So the question I've got

01:00:05.110 --> 01:00:07.205
<v Speaker 0>is, Thomas Lav, what is a smarty in

01:00:07.205 --> 01:00:10.245
<v Speaker 0>Croatia? Because maybe we're making too many assumptions.

01:00:10.645 --> 01:00:12.725
<v Speaker 1>That's true. We're assuming. So a smarty is

01:00:12.725 --> 01:00:14.965
<v Speaker 1>is a nice crunchy candy shell

01:00:15.285 --> 01:00:16.085
<v Speaker 1>with

01:00:16.245 --> 01:00:18.725
<v Speaker 1>chocolate inside. Good chocolate, not American chocolate.

01:00:19.510 --> 01:00:20.150
<v Speaker 0>Alright.

01:00:20.710 --> 01:00:21.510
<v Speaker 0>We we we

01:00:22.150 --> 01:00:24.150
<v Speaker 0>on an hour. No, Rory. And I'm I'm

01:00:24.150 --> 01:00:25.670
<v Speaker 0>having fun. I I could just sit here

01:00:25.590 --> 01:00:27.030
<v Speaker 0>do this all day. But

01:00:27.750 --> 01:00:29.270
<v Speaker 0>do you want to show us the GitHub

01:00:29.270 --> 01:00:30.950
<v Speaker 0>actions workflow or would you rather leave that

01:00:30.950 --> 01:00:32.625
<v Speaker 0>for another session? You want to? Let let's

01:00:32.625 --> 01:00:34.065
<v Speaker 1>quickly. I'll show you now because I I'm

01:00:34.065 --> 01:00:35.905
<v Speaker 1>gonna do a blog on this because I

01:00:35.905 --> 01:00:37.665
<v Speaker 1>I just looked at this today,

01:00:37.905 --> 01:00:39.665
<v Speaker 1>and I was like, this worked really well,

01:00:39.745 --> 01:00:41.425
<v Speaker 1>and I was super happy with it. So

01:00:41.425 --> 01:00:42.705
<v Speaker 1>I was I'm I but there will be

01:00:42.705 --> 01:00:44.625
<v Speaker 1>a blog that that goes into this some

01:00:44.625 --> 01:00:46.225
<v Speaker 1>more detail. I'll try and get out the

01:00:45.990 --> 01:00:47.190
<v Speaker 1>week or two, and I'll I'll tweet it

01:00:47.190 --> 01:00:48.470
<v Speaker 1>out. Yeah. Just get a link over to

01:00:48.470 --> 01:00:49.830
<v Speaker 0>me. I'll drop it in the description as

01:00:49.830 --> 01:00:52.070
<v Speaker 0>well for anyone watching after the fact. Yeah.

01:00:52.070 --> 01:00:53.430
<v Speaker 1>So we'll get that sorted out. I wanna

01:00:53.430 --> 01:00:55.110
<v Speaker 1>I wanna show you our our let me

01:00:55.110 --> 01:00:57.990
<v Speaker 1>get my window, and it's this window here.

01:00:58.695 --> 01:01:00.055
<v Speaker 1>So let's share that.

01:01:00.855 --> 01:01:02.855
<v Speaker 1>So that should pop up now. And this

01:01:02.855 --> 01:01:05.175
<v Speaker 1>is a this is a repository I have

01:01:05.175 --> 01:01:06.935
<v Speaker 1>for a little Ruby on Rails project I

01:01:06.935 --> 01:01:07.495
<v Speaker 1>wrote,

01:01:07.975 --> 01:01:09.735
<v Speaker 1>which is a little thing I did for

01:01:09.735 --> 01:01:11.575
<v Speaker 1>attack trees. It's not super important.

01:01:11.815 --> 01:01:13.335
<v Speaker 1>But what I've got here let me just

01:01:13.335 --> 01:01:15.869
<v Speaker 1>make this a bit bigger. Thank you. Is

01:01:16.109 --> 01:01:18.430
<v Speaker 1>I got the the basic

01:01:18.750 --> 01:01:20.270
<v Speaker 1>container build

01:01:20.910 --> 01:01:22.110
<v Speaker 1>GitHub action,

01:01:22.750 --> 01:01:23.950
<v Speaker 1>which is this one here.

01:01:24.589 --> 01:01:26.430
<v Speaker 1>And this actually worked really well. I was

01:01:26.430 --> 01:01:28.190
<v Speaker 1>super impressed by this just worked when I

01:01:28.190 --> 01:01:28.589
<v Speaker 1>built it.

01:01:29.484 --> 01:01:32.045
<v Speaker 1>And what this does is it builds up

01:01:32.045 --> 01:01:35.085
<v Speaker 1>a a docker image and pushes it to

01:01:35.085 --> 01:01:38.045
<v Speaker 1>GitHub, put to GitHub container repo. The other

01:01:38.045 --> 01:01:39.405
<v Speaker 1>really cool thing it did, and I did

01:01:39.405 --> 01:01:41.805
<v Speaker 1>literally didn't know until this morning, is it

01:01:41.805 --> 01:01:42.845
<v Speaker 1>uses cosign.

01:01:43.490 --> 01:01:45.010
<v Speaker 1>And cosign is

01:01:45.089 --> 01:01:47.089
<v Speaker 1>yeah. I was I was so impressed. So

01:01:47.089 --> 01:01:49.170
<v Speaker 1>cosign for anyone who's not seen it is

01:01:49.170 --> 01:01:52.690
<v Speaker 1>a digital signing tool. Essentially, will essentially put

01:01:52.690 --> 01:01:55.490
<v Speaker 1>digital signature on your container image, and anyone

01:01:55.490 --> 01:01:58.130
<v Speaker 1>who used your container image later can verify

01:01:58.130 --> 01:02:00.025
<v Speaker 1>that signature and make sure that the image

01:02:00.025 --> 01:02:01.945
<v Speaker 1>has not been tampered with since it was

01:02:01.945 --> 01:02:04.265
<v Speaker 1>pulled down from the registry. This is a

01:02:04.265 --> 01:02:05.625
<v Speaker 1>really great thing.

01:02:05.945 --> 01:02:08.505
<v Speaker 1>And in general, signing has been, like, a

01:02:08.505 --> 01:02:10.345
<v Speaker 1>awkward to use thing, so it never really

01:02:10.345 --> 01:02:12.505
<v Speaker 1>gets traction because it's hard. It's painful. You

01:02:12.505 --> 01:02:13.785
<v Speaker 1>have to manage keys.

01:02:13.945 --> 01:02:16.720
<v Speaker 1>This just worked. Like, I installed the action,

01:02:17.039 --> 01:02:18.960
<v Speaker 1>and it worked. It was magic. I was

01:02:18.960 --> 01:02:21.359
<v Speaker 1>like, wow. So impressed. But so it did

01:02:21.359 --> 01:02:23.759
<v Speaker 1>all this, and you see it's doing docker

01:02:23.759 --> 01:02:26.079
<v Speaker 1>build, and it's pushing the image.

01:02:26.640 --> 01:02:28.400
<v Speaker 1>And then what I did down the bottom

01:02:28.400 --> 01:02:30.319
<v Speaker 1>here, you'll see at the very bottom here,

01:02:30.495 --> 01:02:31.935
<v Speaker 1>I've got run Trivy.

01:02:32.095 --> 01:02:33.615
<v Speaker 1>So this is from our we have a

01:02:33.615 --> 01:02:34.975
<v Speaker 1>a trivy action,

01:02:35.775 --> 01:02:37.455
<v Speaker 1>and you see it just have a users,

01:02:37.455 --> 01:02:39.295
<v Speaker 1>so it's gonna use the trivy action,

01:02:39.935 --> 01:02:41.695
<v Speaker 1>and it's gonna tell it what image I

01:02:41.695 --> 01:02:43.615
<v Speaker 1>really should make this parameters and I will,

01:02:43.615 --> 01:02:45.420
<v Speaker 1>but right now, just named the image as

01:02:45.420 --> 01:02:46.860
<v Speaker 1>I was I was doing it quickly.

01:02:47.099 --> 01:02:49.660
<v Speaker 1>We used an output format called Serif. Now

01:02:49.660 --> 01:02:51.180
<v Speaker 1>Serif is just a way of, like, marking

01:02:51.180 --> 01:02:52.620
<v Speaker 1>up your vulnerabilities,

01:02:53.180 --> 01:02:54.700
<v Speaker 1>gave it a name, and that's just the

01:02:54.700 --> 01:02:56.940
<v Speaker 1>default name. Then we did this cool thing

01:02:56.940 --> 01:03:00.055
<v Speaker 1>here right down the bottom, which is we

01:03:00.055 --> 01:03:03.255
<v Speaker 1>upload the the results to GitHub security. So

01:03:03.255 --> 01:03:05.735
<v Speaker 1>GitHub has a security tab on every repo,

01:03:05.735 --> 01:03:07.975
<v Speaker 1>and you can get scanners to integrate with

01:03:07.975 --> 01:03:10.775
<v Speaker 1>that. This will work on any public repository.

01:03:10.775 --> 01:03:12.055
<v Speaker 1>I think if you use a private one,

01:03:12.055 --> 01:03:13.335
<v Speaker 1>you have to be like an enterprise customer.

01:03:13.470 --> 01:03:14.910
<v Speaker 1>But if your repo is public, it will

01:03:14.910 --> 01:03:17.630
<v Speaker 1>work. And it will actually upload it into

01:03:17.630 --> 01:03:18.830
<v Speaker 1>into GitHub

01:03:19.150 --> 01:03:20.110
<v Speaker 1>as a result,

01:03:20.590 --> 01:03:21.630
<v Speaker 1>which is really cool.

01:03:21.950 --> 01:03:23.550
<v Speaker 1>The only trick, and I will put this

01:03:23.550 --> 01:03:25.070
<v Speaker 1>in the blog, that I need that I

01:03:25.070 --> 01:03:26.590
<v Speaker 1>got wrong, like, three or four times. You

01:03:26.590 --> 01:03:28.109
<v Speaker 1>can see all my failed runs. You look

01:03:28.109 --> 01:03:28.830
<v Speaker 1>in this repository.

01:03:29.575 --> 01:03:32.135
<v Speaker 1>Is you need to give it security events

01:03:32.135 --> 01:03:32.935
<v Speaker 1>right

01:03:33.415 --> 01:03:34.215
<v Speaker 1>permission.

01:03:34.215 --> 01:03:35.655
<v Speaker 1>So there's a little permission to add there

01:03:35.655 --> 01:03:37.975
<v Speaker 1>into the permission section that wasn't there in

01:03:37.975 --> 01:03:40.375
<v Speaker 1>the default action that lets upload the SARIF

01:03:40.375 --> 01:03:43.300
<v Speaker 1>file. Are these permissions things new? I've I've

01:03:43.380 --> 01:03:44.980
<v Speaker 0>honestly, I've never seen those before to get

01:03:44.980 --> 01:03:47.059
<v Speaker 0>back And I hadn't either, which is why

01:03:47.059 --> 01:03:48.420
<v Speaker 1>I was like so I was doing my

01:03:48.420 --> 01:03:50.420
<v Speaker 1>u the usual thing. Right? I errored out

01:03:50.420 --> 01:03:51.859
<v Speaker 1>in the action, and I went and googled

01:03:51.859 --> 01:03:53.380
<v Speaker 1>that exact error message.

01:03:53.859 --> 01:03:56.099
<v Speaker 1>And some, like, playing around and where exactly

01:03:56.099 --> 01:03:58.155
<v Speaker 1>do I put this thing later, I worked

01:03:58.155 --> 01:03:59.275
<v Speaker 1>it. That's where you put it. So you

01:03:59.275 --> 01:04:00.955
<v Speaker 1>put it inside the build. These ones were

01:04:00.955 --> 01:04:01.915
<v Speaker 1>already there.

01:04:02.155 --> 01:04:03.915
<v Speaker 1>So these ones were part of the base,

01:04:03.915 --> 01:04:05.755
<v Speaker 1>like, the the one that GitHub gave me.

01:04:05.755 --> 01:04:07.115
<v Speaker 1>Mhmm. And then I just added that line

01:04:07.115 --> 01:04:08.715
<v Speaker 1>there, security events. Right?

01:04:09.515 --> 01:04:11.260
<v Speaker 1>And the end result is is that that

01:04:11.260 --> 01:04:12.540
<v Speaker 1>it will do that. It will build the

01:04:12.540 --> 01:04:14.460
<v Speaker 1>image, and then you go into the security

01:04:14.460 --> 01:04:15.020
<v Speaker 1>tab,

01:04:15.580 --> 01:04:18.940
<v Speaker 1>and what you'll see is I have 963

01:04:19.180 --> 01:04:20.700
<v Speaker 1>code scanning results.

01:04:21.020 --> 01:04:23.740
<v Speaker 1>I didn't turn on ignore unfixed yet. I

01:04:23.740 --> 01:04:25.655
<v Speaker 1>will turn on ignore unfixed, and that will

01:04:25.655 --> 01:04:27.734
<v Speaker 1>drop that number down. But, basically, what you

01:04:27.734 --> 01:04:29.015
<v Speaker 1>can see there is you can see all

01:04:29.015 --> 01:04:32.055
<v Speaker 1>of Trivy's output essentially in there. You can

01:04:32.055 --> 01:04:33.735
<v Speaker 1>see all the different CVs. Yep.

01:04:34.695 --> 01:04:37.015
<v Speaker 1>So that's really nice integration. Right? If you

01:04:37.015 --> 01:04:38.695
<v Speaker 1>are if you wanna use it as part

01:04:38.695 --> 01:04:39.575
<v Speaker 1>of your CICD,

01:04:39.800 --> 01:04:41.240
<v Speaker 1>just plop it in an action,

01:04:41.560 --> 01:04:43.320
<v Speaker 1>have it whenever you push or whenever you

01:04:43.320 --> 01:04:44.280
<v Speaker 1>build your images,

01:04:44.760 --> 01:04:45.960
<v Speaker 1>and it'll keep you up to date and

01:04:45.960 --> 01:04:47.400
<v Speaker 1>let you know, hey. You've got, like you

01:04:47.400 --> 01:04:48.520
<v Speaker 1>know, you need to go rebuild your base

01:04:48.520 --> 01:04:49.720
<v Speaker 1>image or something or you need to go

01:04:49.720 --> 01:04:51.880
<v Speaker 1>and upgrade your gem file. In my case,

01:04:51.880 --> 01:04:52.680
<v Speaker 1>it'll be a gem file

01:04:53.505 --> 01:04:55.265
<v Speaker 1>and or a YARM mock file. There's gonna

01:04:55.265 --> 01:04:56.545
<v Speaker 1>be stuff in there for all of those.

01:04:57.105 --> 01:04:59.505
<v Speaker 0>Sweet. Awesome. I like that. That's very cool.

01:04:59.664 --> 01:05:00.785
<v Speaker 1>I know. I was like it's one of

01:05:00.785 --> 01:05:01.905
<v Speaker 1>those things where I thought, I'm just gonna

01:05:01.905 --> 01:05:03.184
<v Speaker 1>try and get this working so I can

01:05:03.184 --> 01:05:05.025
<v Speaker 1>talk about it. Didn't expect to actually get

01:05:05.025 --> 01:05:06.890
<v Speaker 1>it working this morning. And I was like,

01:05:06.890 --> 01:05:09.770
<v Speaker 1>oh, this actually worked. I'm I'm pleasantly surprised.

01:05:09.850 --> 01:05:11.530
<v Speaker 0>Well, I'm I'm I'm really glad that I

01:05:11.530 --> 01:05:13.050
<v Speaker 0>have walked well, I will be walking away

01:05:13.050 --> 01:05:14.970
<v Speaker 0>from today's session. Understand the Trivy and how

01:05:14.970 --> 01:05:17.770
<v Speaker 0>to integrate it. But permissions and a workflow.

01:05:17.770 --> 01:05:19.290
<v Speaker 0>There we go. That's the value add for

01:05:19.290 --> 01:05:20.895
<v Speaker 0>me today. Because I Yeah. That was that

01:05:20.895 --> 01:05:22.495
<v Speaker 1>was something I learned today as well. It's

01:05:22.495 --> 01:05:24.015
<v Speaker 1>like, never a bad day when you learn

01:05:24.015 --> 01:05:25.615
<v Speaker 1>something new and I learned about permissions and

01:05:25.615 --> 01:05:27.535
<v Speaker 1>GitHub actions. I'm then motivated to go play

01:05:27.535 --> 01:05:29.855
<v Speaker 1>with it some more. And everyone should also

01:05:29.855 --> 01:05:33.130
<v Speaker 0>be cosigning all the things. Right? Yes. Cosign

01:05:33.130 --> 01:05:34.090
<v Speaker 1>is so cool.

01:05:34.810 --> 01:05:36.570
<v Speaker 1>And I yeah. Cosign

01:05:36.570 --> 01:05:39.370
<v Speaker 1>container images. You can cosign binaries as well,

01:05:40.090 --> 01:05:41.770
<v Speaker 1>and then you can integrate. So a good

01:05:41.770 --> 01:05:43.690
<v Speaker 1>thing you can do now, again, come back

01:05:43.690 --> 01:05:44.250
<v Speaker 1>to Kubernetes,

01:05:44.694 --> 01:05:47.255
<v Speaker 1>is you can put an admission controller onto

01:05:47.255 --> 01:05:49.575
<v Speaker 1>your clusters that will check those signatures.

01:05:49.815 --> 01:05:51.815
<v Speaker 1>So it'll say Right. Am I only getting

01:05:51.815 --> 01:05:53.414
<v Speaker 1>the same images in my cluster? So if

01:05:53.414 --> 01:05:54.694
<v Speaker 1>you have a prod cluster, you can start

01:05:54.694 --> 01:05:57.414
<v Speaker 1>sending your production images, and that stops people,

01:05:57.414 --> 01:05:59.830
<v Speaker 1>like, using images you're not expecting. Right? Because

01:05:59.830 --> 01:06:01.670
<v Speaker 1>it's always a problem. Someone might start running

01:06:01.670 --> 01:06:03.670
<v Speaker 1>an image from Docker Hub. Those things could

01:06:03.670 --> 01:06:06.070
<v Speaker 1>be anything in large part. So you only

01:06:06.070 --> 01:06:07.750
<v Speaker 1>want trusted images. So you can start trying

01:06:07.750 --> 01:06:09.910
<v Speaker 1>to do that. And I I I think

01:06:09.910 --> 01:06:11.910
<v Speaker 1>we'll see more support for cosign this year

01:06:11.910 --> 01:06:12.710
<v Speaker 1>as time goes on.

01:06:13.625 --> 01:06:16.665
<v Speaker 1>I know that the RubyGems folks are discussing

01:06:16.744 --> 01:06:18.585
<v Speaker 1>adding it for RubyGems packages.

01:06:18.744 --> 01:06:20.345
<v Speaker 1>So the the there's an RFC in for,

01:06:20.345 --> 01:06:22.585
<v Speaker 1>like, actually signing the RubyGems. So, hopefully, we'll

01:06:22.585 --> 01:06:24.265
<v Speaker 1>see more of that as well. Awesome.

01:06:25.080 --> 01:06:26.680
<v Speaker 0>If you get anything else to share on

01:06:26.680 --> 01:06:28.120
<v Speaker 0>your screen share, will pop us back over

01:06:28.120 --> 01:06:29.400
<v Speaker 0>to the I will pop pop us back

01:06:29.400 --> 01:06:30.840
<v Speaker 1>over. Yeah. Cool.

01:06:32.280 --> 01:06:35.240
<v Speaker 0>Alright. Well, thank you for joining me today

01:06:35.480 --> 01:06:37.880
<v Speaker 0>sharing Trivy with everyone. And not just Trivy,

01:06:37.880 --> 01:06:39.895
<v Speaker 0>just your general knowledge across the board is

01:06:39.895 --> 01:06:42.135
<v Speaker 0>always wonderful to have a a conversation. And,

01:06:43.174 --> 01:06:45.095
<v Speaker 0>I mean, Smarties was pretty important, but there

01:06:45.095 --> 01:06:46.454
<v Speaker 0>was lots of other good stuff in there

01:06:46.454 --> 01:06:48.295
<v Speaker 0>too. But we'll focus on the Smarties. I

01:06:48.295 --> 01:06:49.494
<v Speaker 1>mean, we could tagline for the for the

01:06:49.494 --> 01:06:52.200
<v Speaker 1>episode there. We talked about Smarties. And I

01:06:52.200 --> 01:06:53.720
<v Speaker 0>hope Harry is still with us and still

01:06:53.720 --> 01:06:55.400
<v Speaker 0>understanding most of what we say. I hope

01:06:55.400 --> 01:06:57.480
<v Speaker 0>he's Oh, I'm I'm probably gonna get my

01:06:57.800 --> 01:06:59.880
<v Speaker 1>slowdown afterwards in Teams. Alright.

01:07:01.160 --> 01:07:03.400
<v Speaker 0>We got a great stream from Russell. Thanks,

01:07:03.400 --> 01:07:03.880
<v Speaker 0>mate.

01:07:04.200 --> 01:07:05.880
<v Speaker 0>Any last words, Rory, before I let you

01:07:05.880 --> 01:07:06.520
<v Speaker 0>get back to your day?

01:07:07.494 --> 01:07:09.575
<v Speaker 1>Nope. Nope. If anyone's got any questions, I

01:07:09.575 --> 01:07:11.815
<v Speaker 1>will say, Racine there is on my is

01:07:11.815 --> 01:07:14.135
<v Speaker 1>my Twitter handle. It's also my GitHub handle.

01:07:14.295 --> 01:07:16.535
<v Speaker 1>Feel free to just ping me or drop

01:07:16.535 --> 01:07:19.015
<v Speaker 1>an email. Either way, I'm easy to find

01:07:19.015 --> 01:07:20.775
<v Speaker 1>online and always happy to try and answer

01:07:20.775 --> 01:07:21.095
<v Speaker 1>questions.

01:07:21.770 --> 01:07:24.089
<v Speaker 0>Awesome. Well, thank you again for joining us.

01:07:24.089 --> 01:07:25.290
<v Speaker 0>Have a great day. I hope to see

01:07:25.290 --> 01:07:28.329
<v Speaker 0>you soon. Maybe at KubeCon Valencia, and Yeah.

01:07:28.410 --> 01:07:29.210
<v Speaker 0>Till then,

01:07:30.010 --> 01:07:31.530
<v Speaker 0>I don't know. Stay healthy. Is that the

01:07:31.530 --> 01:07:33.609
<v Speaker 0>pandemic? Wait. You're saying things off now? Yeah.

01:07:33.609 --> 01:07:34.570
<v Speaker 1>Sounds possible.

01:07:35.290 --> 01:07:37.105
<v Speaker 0>Alright. I'll speak to you later. Thanks. Cool.

01:07:37.105 --> 01:07:37.345
<v Speaker 1>Cheers.
