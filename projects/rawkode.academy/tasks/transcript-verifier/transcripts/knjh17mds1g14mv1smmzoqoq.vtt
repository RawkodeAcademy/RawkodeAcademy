WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 9f448823-1618-4b6a-8759-c1f0fe2eab43
Created: 2025-04-29T22:16:41.081Z
Duration: 5184.0063
Channels: 1

00:01:12.915 --> 00:01:16.195
<v Speaker 0>Hello and welcome back. Hello, Kieran. How are

00:01:16.195 --> 00:01:18.034
<v Speaker 0>you? I'm good. Thank you, David. How are

00:01:18.034 --> 00:01:19.475
<v Speaker 1>you? Yes.

00:01:19.650 --> 00:01:22.770
<v Speaker 0>I'm very well. Thank you. I am looking

00:01:22.770 --> 00:01:26.050
<v Speaker 0>forward to part two of the Docker Kubernetes

00:01:26.050 --> 00:01:27.570
<v Speaker 0>and Laravel edition.

00:01:29.170 --> 00:01:30.850
<v Speaker 0>It's gonna be a tough one today.

00:01:31.170 --> 00:01:32.210
<v Speaker 1>I feel like you have to be really

00:01:32.210 --> 00:01:33.570
<v Speaker 1>high energy after your intro video.

00:01:35.555 --> 00:01:37.875
<v Speaker 0>I have considered so many times making a

00:01:37.875 --> 00:01:40.915
<v Speaker 0>joke about the polarity between the higher energy

00:01:40.915 --> 00:01:42.995
<v Speaker 0>intro and then my completely

00:01:43.475 --> 00:01:45.395
<v Speaker 0>low energy personality.

00:01:46.035 --> 00:01:48.195
<v Speaker 1>I think we shared that. So, yeah, we've

00:01:48.195 --> 00:01:49.715
<v Speaker 1>we've got lots of different things we could

00:01:49.715 --> 00:01:50.515
<v Speaker 1>do today, haven't we?

00:01:51.180 --> 00:01:53.580
<v Speaker 0>Oh, we do. So let's

00:01:54.060 --> 00:01:56.060
<v Speaker 0>let's build a little bit of context here.

00:01:56.060 --> 00:01:58.460
<v Speaker 0>So this session is we are trying to

00:01:58.460 --> 00:02:00.300
<v Speaker 0>show how to take a Laravel application

00:02:00.780 --> 00:02:03.820
<v Speaker 0>from your local machine, produce a container based

00:02:03.820 --> 00:02:07.075
<v Speaker 0>development environment using Docker and Docker Compose, and

00:02:07.075 --> 00:02:10.035
<v Speaker 0>show you the real kind of day one

00:02:10.035 --> 00:02:11.875
<v Speaker 0>deployed to Kubernetes scenario.

00:02:12.834 --> 00:02:14.194
<v Speaker 0>What we tried to do in the last

00:02:14.194 --> 00:02:17.395
<v Speaker 0>session was squeeze all Adam to two well,

00:02:17.395 --> 00:02:20.114
<v Speaker 0>two sessions now. That's actually I guess this

00:02:19.290 --> 00:02:21.290
<v Speaker 0>part three, we did non Laravel, then we

00:02:21.290 --> 00:02:22.890
<v Speaker 0>did Laravel, and now we're back to continue

00:02:22.890 --> 00:02:23.850
<v Speaker 0>with Laravel.

00:02:24.010 --> 00:02:25.209
<v Speaker 0>Mhmm. And I think the problem with that

00:02:25.209 --> 00:02:26.569
<v Speaker 0>is we tried to do all of and

00:02:26.569 --> 00:02:28.329
<v Speaker 0>all Laravel stuff in a single session. And

00:02:28.329 --> 00:02:30.010
<v Speaker 0>I think what we've realized is we really

00:02:30.010 --> 00:02:31.609
<v Speaker 0>just need to kinda slow down into this

00:02:31.609 --> 00:02:33.225
<v Speaker 0>bit by bit. Like,

00:02:33.705 --> 00:02:35.465
<v Speaker 0>there's a lot of different things that we

00:02:35.465 --> 00:02:37.145
<v Speaker 0>need to get right to really produce a

00:02:37.145 --> 00:02:39.545
<v Speaker 0>developer experience that's gonna work for people and

00:02:39.545 --> 00:02:41.065
<v Speaker 0>not be too cumbersome.

00:02:41.705 --> 00:02:42.665
<v Speaker 1>Yeah. Although,

00:02:42.985 --> 00:02:44.825
<v Speaker 1>you know, not to put people off, but

00:02:45.260 --> 00:02:47.340
<v Speaker 1>we've not spent that many hours on it.

00:02:47.340 --> 00:02:49.180
<v Speaker 1>It's that we've done across three sessions. But

00:02:49.180 --> 00:02:50.700
<v Speaker 1>if if we were at work and not

00:02:50.700 --> 00:02:53.420
<v Speaker 1>talking through things, that that and I if

00:02:53.420 --> 00:02:54.460
<v Speaker 1>this was lunchtime

00:02:54.700 --> 00:02:56.140
<v Speaker 1>and I spent three hours doing what we've

00:02:56.140 --> 00:02:57.420
<v Speaker 1>done so far, I'd feel like it was

00:02:57.420 --> 00:02:59.325
<v Speaker 1>a good day's work so far. Oh, yeah.

00:02:59.325 --> 00:03:01.965
<v Speaker 0>Definitely. Yeah. Yeah. That that's that's true.

00:03:02.205 --> 00:03:03.965
<v Speaker 0>And I think now that we're getting into

00:03:03.965 --> 00:03:06.765
<v Speaker 0>the individual components of the Laravel application,

00:03:07.885 --> 00:03:09.965
<v Speaker 0>you know, we we try to kind of

00:03:09.965 --> 00:03:11.565
<v Speaker 0>build a full pipeline on the last one,

00:03:11.565 --> 00:03:12.525
<v Speaker 0>and now we can go back and clean

00:03:12.525 --> 00:03:14.110
<v Speaker 0>up a few of those artifacts that maybe

00:03:14.110 --> 00:03:15.630
<v Speaker 0>aren't as great as we wanted.

00:03:16.670 --> 00:03:18.350
<v Speaker 1>So, John, we've got what we've got to.

00:03:18.350 --> 00:03:20.430
<v Speaker 1>We've

00:03:20.430 --> 00:03:21.550
<v Speaker 1>got a dev environment.

00:03:22.510 --> 00:03:23.310
<v Speaker 1>We're

00:03:23.310 --> 00:03:25.550
<v Speaker 1>building the front end assets.

00:03:25.870 --> 00:03:27.390
<v Speaker 1>We're populating the database.

00:03:28.905 --> 00:03:29.784
<v Speaker 1>It's

00:03:29.944 --> 00:03:32.745
<v Speaker 1>we deployed it to your local Kubernetes.

00:03:32.745 --> 00:03:33.225
<v Speaker 1>Right?

00:03:34.105 --> 00:03:36.185
<v Speaker 0>We did deploy it to Kubernetes.

00:03:36.185 --> 00:03:36.665
<v Speaker 0>Yep.

00:03:37.224 --> 00:03:39.784
<v Speaker 0>We left a few things to the imagination,

00:03:39.784 --> 00:03:41.465
<v Speaker 0>though. So I think if I just let's

00:03:41.465 --> 00:03:43.465
<v Speaker 0>pop up my my code.

00:03:44.720 --> 00:03:47.040
<v Speaker 0>My work code. This is pair programmed.

00:03:47.280 --> 00:03:47.840
<v Speaker 0>So

00:03:48.720 --> 00:03:51.120
<v Speaker 0>we put together a Docker proposed file.

00:03:51.440 --> 00:03:53.360
<v Speaker 0>We have an engineized container that is delivering

00:03:53.360 --> 00:03:55.360
<v Speaker 0>our front end assets. We have a PHP

00:03:55.360 --> 00:03:57.520
<v Speaker 0>container that is delivering the Laravel code.

00:03:58.115 --> 00:04:00.195
<v Speaker 0>And we have MariaDB,

00:04:00.195 --> 00:04:03.395
<v Speaker 0>which has a basic health check that allows

00:04:03.395 --> 00:04:06.275
<v Speaker 0>us to really provide a local experience for

00:04:06.275 --> 00:04:08.755
<v Speaker 0>working in containers that should be one command

00:04:08.915 --> 00:04:11.075
<v Speaker 0>using those health checks to handle the orchestration

00:04:11.075 --> 00:04:11.475
<v Speaker 0>component.

00:04:12.620 --> 00:04:14.459
<v Speaker 0>We have a Dockerfile

00:04:14.459 --> 00:04:15.820
<v Speaker 0>with multiple layers.

00:04:15.980 --> 00:04:17.820
<v Speaker 0>We did our best to put together a

00:04:17.820 --> 00:04:19.500
<v Speaker 0>base layer with dev tooling that we would

00:04:19.500 --> 00:04:21.660
<v Speaker 0>require and production tooling. So we've a PD

00:04:21.660 --> 00:04:23.020
<v Speaker 0>with mySQL extension.

00:04:23.419 --> 00:04:25.419
<v Speaker 0>We then augment that with a few developer

00:04:25.419 --> 00:04:27.660
<v Speaker 0>tools. Right now, we are bundling in Node.

00:04:27.660 --> 00:04:30.015
<v Speaker 0>Js and NPM to do asset compilation,

00:04:30.255 --> 00:04:32.175
<v Speaker 0>but one of the major themes for today.

00:04:32.655 --> 00:04:34.735
<v Speaker 0>We this is not something that we would

00:04:34.735 --> 00:04:36.495
<v Speaker 0>expect or this is not something we think

00:04:36.495 --> 00:04:37.695
<v Speaker 0>is is an ideal

00:04:38.015 --> 00:04:38.575
<v Speaker 0>what

00:04:39.615 --> 00:04:41.535
<v Speaker 0>else do we have? We have then

00:04:42.000 --> 00:04:43.360
<v Speaker 0>the FPM

00:04:43.360 --> 00:04:45.680
<v Speaker 0>image, which we're using to actually ship to

00:04:45.680 --> 00:04:46.480
<v Speaker 0>production.

00:04:46.960 --> 00:04:49.200
<v Speaker 0>We have a test layer, which we're gonna

00:04:49.200 --> 00:04:50.480
<v Speaker 0>run our test against.

00:04:51.360 --> 00:04:54.160
<v Speaker 0>And we have some asset compilation to produce

00:04:54.160 --> 00:04:56.480
<v Speaker 0>an asset production image, which can be deployed

00:04:56.480 --> 00:04:57.040
<v Speaker 0>separately,

00:04:57.745 --> 00:04:58.865
<v Speaker 0>which we did

00:04:59.585 --> 00:05:00.625
<v Speaker 0>show with

00:05:01.185 --> 00:05:02.625
<v Speaker 0>this really

00:05:03.025 --> 00:05:06.545
<v Speaker 0>primitive deployment YAML for Kubernetes, which deployed our

00:05:06.545 --> 00:05:09.505
<v Speaker 0>FPM and Nginx containers site by site.

00:05:10.020 --> 00:05:10.740
<v Speaker 0>Mhmm.

00:05:10.900 --> 00:05:13.940
<v Speaker 0>We added in because it was late in

00:05:13.940 --> 00:05:16.099
<v Speaker 0>the last session. Oh, this is how we

00:05:16.099 --> 00:05:17.940
<v Speaker 0>would draw on our database migrations, but we

00:05:17.940 --> 00:05:20.180
<v Speaker 0>didn't actually run that ourselves.

00:05:20.180 --> 00:05:22.099
<v Speaker 0>That's something that we will need to tackle

00:05:22.099 --> 00:05:23.780
<v Speaker 0>at some point. But we are gonna use

00:05:23.780 --> 00:05:25.875
<v Speaker 0>a concept code and a container. And if

00:05:25.875 --> 00:05:28.275
<v Speaker 0>I remember correctly on the last conversation,

00:05:29.074 --> 00:05:30.514
<v Speaker 0>I said there were really two ways to

00:05:30.514 --> 00:05:32.835
<v Speaker 0>handle this. The other way would be that

00:05:32.835 --> 00:05:34.915
<v Speaker 0>you could spin off a job

00:05:35.555 --> 00:05:38.595
<v Speaker 0>that ran alongside of your deployment to handle

00:05:38.595 --> 00:05:40.275
<v Speaker 0>the migrations asynchronously,

00:05:40.275 --> 00:05:41.900
<v Speaker 0>which is a flow you may wish to

00:05:41.900 --> 00:05:43.180
<v Speaker 0>adopt as

00:05:43.580 --> 00:05:45.900
<v Speaker 0>your migrations are additive.

00:05:45.979 --> 00:05:47.820
<v Speaker 0>They work in a way that no, like,

00:05:47.820 --> 00:05:49.100
<v Speaker 0>no new queries

00:05:50.699 --> 00:05:51.260
<v Speaker 0>yeah.

00:05:51.500 --> 00:05:53.900
<v Speaker 0>No new key queries could potentially break with

00:05:53.900 --> 00:05:56.095
<v Speaker 0>an older version of the schema. Yeah.

00:05:56.175 --> 00:05:57.375
<v Speaker 0>I think that's right.

00:05:58.815 --> 00:06:01.294
<v Speaker 0>Yeah. That's a lot. To do to do

00:06:01.294 --> 00:06:02.975
<v Speaker 1>it as part of an init container,

00:06:03.055 --> 00:06:04.815
<v Speaker 1>the migrations have to be

00:06:06.815 --> 00:06:08.574
<v Speaker 1>safe to run more than once. Right?

00:06:12.300 --> 00:06:13.500
<v Speaker 0>To do it as part of an an

00:06:13.500 --> 00:06:14.460
<v Speaker 0>Internet container.

00:06:16.060 --> 00:06:18.220
<v Speaker 0>Yes. So your your migrations definitely have to

00:06:18.220 --> 00:06:20.940
<v Speaker 0>be idempotent. They're gonna run every single

00:06:21.180 --> 00:06:21.820
<v Speaker 0>pod

00:06:22.060 --> 00:06:22.940
<v Speaker 0>that deploys.

00:06:23.345 --> 00:06:25.265
<v Speaker 0>But more importantly,

00:06:25.505 --> 00:06:27.185
<v Speaker 0>I guess, is that they have to be

00:06:27.185 --> 00:06:29.585
<v Speaker 0>able to handle some sort of locking mechanism

00:06:29.585 --> 00:06:31.345
<v Speaker 0>because there is the there

00:06:31.585 --> 00:06:34.385
<v Speaker 0>is the chance or likelihood that two pods

00:06:34.385 --> 00:06:36.465
<v Speaker 0>will try to run at roughly the same

00:06:36.465 --> 00:06:37.665
<v Speaker 0>time during that deployment.

00:06:38.120 --> 00:06:40.520
<v Speaker 0>Now we did briefly talk about update strategies

00:06:40.520 --> 00:06:41.880
<v Speaker 0>and how we can use that to limit

00:06:41.880 --> 00:06:43.960
<v Speaker 0>that risk. But really, you just wanna be

00:06:43.960 --> 00:06:45.480
<v Speaker 0>able to make sure that your migration says,

00:06:45.480 --> 00:06:47.400
<v Speaker 0>hey. I'm gonna lock this table right now.

00:06:47.400 --> 00:06:48.760
<v Speaker 0>No one else gets access.

00:06:49.080 --> 00:06:50.840
<v Speaker 0>It will put up that latency on other

00:06:50.840 --> 00:06:53.355
<v Speaker 0>pods starting up, but it definitely is the

00:06:53.355 --> 00:06:55.035
<v Speaker 0>safest way to handle our migration in this

00:06:55.035 --> 00:06:55.995
<v Speaker 0>kind of situation.

00:06:56.475 --> 00:06:58.395
<v Speaker 1>A lot of migration libraries,

00:06:58.395 --> 00:06:59.755
<v Speaker 1>there's obviously different ways to do it. They'll

00:06:59.755 --> 00:07:01.435
<v Speaker 1>have one table which shows

00:07:01.835 --> 00:07:03.595
<v Speaker 1>what version of the migration you're on, and

00:07:03.595 --> 00:07:04.795
<v Speaker 1>that's the only one you need to lock.

00:07:04.795 --> 00:07:05.915
<v Speaker 1>Right? So you wouldn't be

00:07:06.910 --> 00:07:07.950
<v Speaker 1>you wouldn't be

00:07:08.350 --> 00:07:11.230
<v Speaker 1>contending necessarily with live transactions happening on the

00:07:11.230 --> 00:07:14.830
<v Speaker 1>database for normal traffic. Yeah. Exactly. Spot on.

00:07:14.830 --> 00:07:16.670
<v Speaker 0>Like, it's I think

00:07:17.550 --> 00:07:19.470
<v Speaker 0>I think every migration library I played with

00:07:19.470 --> 00:07:21.550
<v Speaker 0>in the past has had a migrations table

00:07:21.724 --> 00:07:23.565
<v Speaker 0>which gets locked on a migration run to

00:07:23.565 --> 00:07:25.884
<v Speaker 0>protect it, which means your application will still

00:07:25.884 --> 00:07:27.965
<v Speaker 0>handle traffic pretty well. Alright.

00:07:31.805 --> 00:07:33.085
<v Speaker 1>So we know our Docker file.

00:07:33.880 --> 00:07:35.640
<v Speaker 1>Why were we installing NPM? Is that just

00:07:35.640 --> 00:07:37.320
<v Speaker 1>left over? Because it looks like we're using

00:07:37.320 --> 00:07:38.440
<v Speaker 1>an NPM

00:07:38.440 --> 00:07:40.440
<v Speaker 1>image to build the assets.

00:07:41.560 --> 00:07:43.240
<v Speaker 1>Oh, it was on dev, wasn't it, that

00:07:43.240 --> 00:07:44.600
<v Speaker 1>we were installing NPM?

00:07:45.000 --> 00:07:48.120
<v Speaker 0>Yeah. We do augment our development. So we

00:07:48.465 --> 00:07:49.585
<v Speaker 0>can figure out a way that we could

00:07:49.585 --> 00:07:51.265
<v Speaker 0>run this through a d shell environment so

00:07:51.265 --> 00:07:53.185
<v Speaker 0>that we could have, like, an interactive terminal.

00:07:53.185 --> 00:07:54.545
<v Speaker 0>I still think that's a really good way

00:07:54.545 --> 00:07:56.065
<v Speaker 0>of doing it, but what we didn't cover

00:07:56.065 --> 00:07:58.385
<v Speaker 0>was automatic re compilation

00:07:59.585 --> 00:08:02.065
<v Speaker 0>of those assets and then the ability to

00:08:02.065 --> 00:08:04.229
<v Speaker 0>deliver them for a different container. So it

00:08:04.229 --> 00:08:06.230
<v Speaker 0>may be that we break up

00:08:07.990 --> 00:08:09.350
<v Speaker 0>that environment and

00:08:09.750 --> 00:08:10.789
<v Speaker 0>well, we could talk about that in a

00:08:10.789 --> 00:08:12.550
<v Speaker 0>minute. I I think we we will separate

00:08:12.550 --> 00:08:13.190
<v Speaker 0>that.

00:08:13.430 --> 00:08:14.629
<v Speaker 0>And the d shell will only be for

00:08:14.629 --> 00:08:16.150
<v Speaker 0>the PHP commands because those are the ones

00:08:16.150 --> 00:08:17.830
<v Speaker 0>that I think are gonna run interactively,

00:08:18.315 --> 00:08:19.915
<v Speaker 0>and we'll try and move the MPM stuff

00:08:19.915 --> 00:08:21.675
<v Speaker 0>to be a more automated fashion.

00:08:21.835 --> 00:08:24.075
<v Speaker 0>Which is a diff the which which is

00:08:24.075 --> 00:08:26.555
<v Speaker 1>the difference that comes from the JavaScript stuff

00:08:26.555 --> 00:08:28.475
<v Speaker 1>being sort of built,

00:08:28.635 --> 00:08:29.515
<v Speaker 1>compiled

00:08:30.075 --> 00:08:30.715
<v Speaker 1>language,

00:08:31.830 --> 00:08:35.110
<v Speaker 1>whereas PHP is interactive. So there's a big

00:08:35.110 --> 00:08:37.110
<v Speaker 1>difference, isn't there? There's an explicit step of,

00:08:37.110 --> 00:08:38.470
<v Speaker 1>now it's ready to execute

00:08:39.110 --> 00:08:40.070
<v Speaker 1>in JavaScript.

00:08:41.350 --> 00:08:42.709
<v Speaker 0>Yes. Exactly.

00:08:42.709 --> 00:08:44.709
<v Speaker 0>You know, those those assets are assets are

00:08:44.709 --> 00:08:45.350
<v Speaker 0>being delivered.

00:08:46.045 --> 00:08:48.045
<v Speaker 0>There's no like, it's not like we have

00:08:48.045 --> 00:08:50.605
<v Speaker 0>to go ahead and run composer install. I

00:08:50.605 --> 00:08:52.365
<v Speaker 0>mean, we do have an NPM install, but

00:08:52.365 --> 00:08:54.125
<v Speaker 0>we'll handle that separately. It's not like we

00:08:54.125 --> 00:08:55.325
<v Speaker 0>need to do composer

00:08:55.325 --> 00:08:56.445
<v Speaker 0>cache for you. It's not like we have

00:08:56.445 --> 00:08:58.379
<v Speaker 0>to do database migrations. I mean, the only

00:08:58.379 --> 00:09:01.100
<v Speaker 0>interactive component here is Laravel. Our Laravel application

00:09:01.100 --> 00:09:03.180
<v Speaker 0>is what we're developing. The assets were something

00:09:03.180 --> 00:09:05.819
<v Speaker 0>that enriched that application with other things, and

00:09:05.819 --> 00:09:07.180
<v Speaker 0>we can push that to the site and

00:09:07.180 --> 00:09:08.779
<v Speaker 0>and have that work in a slightly different

00:09:08.779 --> 00:09:09.260
<v Speaker 0>way.

00:09:09.980 --> 00:09:10.220
<v Speaker 0>Yeah.

00:09:10.845 --> 00:09:12.125
<v Speaker 0>Yep. Okay.

00:09:12.125 --> 00:09:14.605
<v Speaker 0>So what we're gonna do we I think

00:09:14.605 --> 00:09:17.165
<v Speaker 0>we're gonna focus on the the asset stuff

00:09:17.165 --> 00:09:19.485
<v Speaker 0>today. That's where most of the questions came

00:09:19.725 --> 00:09:22.285
<v Speaker 0>via YouTube comments or Reddit or Twitter.

00:09:22.764 --> 00:09:24.840
<v Speaker 0>What I will suggest is for anyone that

00:09:24.840 --> 00:09:27.080
<v Speaker 0>is watching, if you want to ask questions,

00:09:27.080 --> 00:09:28.600
<v Speaker 0>you can leave them on the YouTube chat

00:09:28.600 --> 00:09:30.120
<v Speaker 0>live, and we will do our best to

00:09:30.120 --> 00:09:32.040
<v Speaker 0>ask them. If you have questions that you

00:09:32.040 --> 00:09:33.960
<v Speaker 0>wish to ask after this video or you're

00:09:33.960 --> 00:09:35.480
<v Speaker 0>not watching live, there's a link on the

00:09:35.480 --> 00:09:36.360
<v Speaker 0>bottom of the screen.

00:09:37.355 --> 00:09:39.274
<v Speaker 0>And if you're feeling brave and want to

00:09:39.274 --> 00:09:41.115
<v Speaker 0>come and join on and ask a question,

00:09:41.115 --> 00:09:43.115
<v Speaker 0>then we we're gonna try and encourage that

00:09:43.115 --> 00:09:44.635
<v Speaker 0>too. So you can take a message and

00:09:44.635 --> 00:09:46.635
<v Speaker 0>just follow YouTube. Either way to go.

00:09:48.075 --> 00:09:50.394
<v Speaker 0>Peter has a very loud plane overhead.

00:09:51.250 --> 00:09:52.930
<v Speaker 1>I think it's a helicopter. I'll just

00:09:55.650 --> 00:09:57.090
<v Speaker 0>I'll just mute Keith. We don't need to

00:09:57.090 --> 00:09:58.610
<v Speaker 0>hear from him anyway. So

00:09:59.250 --> 00:10:00.610
<v Speaker 0>sorry, mate. Alright.

00:10:03.324 --> 00:10:05.005
<v Speaker 0>So Kieran has told me that my link

00:10:05.005 --> 00:10:06.524
<v Speaker 0>is missing in HTTP.

00:10:06.605 --> 00:10:08.764
<v Speaker 0>It's not. I thought it was cool. I

00:10:08.764 --> 00:10:10.925
<v Speaker 0>thought that was Oh, right. That's on purpose.

00:10:11.245 --> 00:10:11.885
<v Speaker 0>Yeah.

00:10:12.445 --> 00:10:14.045
<v Speaker 0>I mean, everything that like, I wanted people

00:10:14.045 --> 00:10:15.324
<v Speaker 0>to know it was a URL, so I

00:10:15.324 --> 00:10:17.290
<v Speaker 0>put, like, colon slash slash. I didn't think

00:10:17.290 --> 00:10:19.290
<v Speaker 0>that HTTP or HTTPS was really

00:10:20.010 --> 00:10:22.410
<v Speaker 0>you're making me do all my things there.

00:10:22.410 --> 00:10:23.050
<v Speaker 0>Anyway,

00:10:23.690 --> 00:10:24.330
<v Speaker 0>I

00:10:25.050 --> 00:10:27.690
<v Speaker 0>thought it was cool. That's it. That's it.

00:10:29.690 --> 00:10:30.090
<v Speaker 0>Alright.

00:10:32.635 --> 00:10:33.515
<v Speaker 1>You want to

00:10:34.235 --> 00:10:35.915
<v Speaker 1>you want to protocol less URL, you don't

00:10:35.915 --> 00:10:37.115
<v Speaker 1>put the code long on.

00:10:38.635 --> 00:10:39.595
<v Speaker 0>Slash slash?

00:10:41.115 --> 00:10:42.635
<v Speaker 1>Yeah. If you you do a hyperlink like

00:10:42.635 --> 00:10:43.195
<v Speaker 1>that,

00:10:43.675 --> 00:10:45.515
<v Speaker 1>and it'll stick to the

00:10:45.995 --> 00:10:47.410
<v Speaker 1>which is very useful if you're serving your

00:10:47.410 --> 00:10:49.330
<v Speaker 1>site under HTTP and HTTPS,

00:10:49.330 --> 00:10:49.970
<v Speaker 1>for instance.

00:10:51.330 --> 00:10:52.130
<v Speaker 0>Okay.

00:10:52.290 --> 00:10:52.850
<v Speaker 0>Anyway

00:10:53.250 --> 00:10:55.170
<v Speaker 0>So today, I've learned something.

00:10:56.769 --> 00:10:58.370
<v Speaker 0>Alright. So let's take a look at our

00:10:58.370 --> 00:10:59.089
<v Speaker 0>current

00:10:59.649 --> 00:11:02.885
<v Speaker 0>development environment for this application then. So

00:11:03.445 --> 00:11:05.045
<v Speaker 0>what we said well, I don't know. We

00:11:05.204 --> 00:11:06.964
<v Speaker 0>did we use Maker just? Because I always

00:11:06.964 --> 00:11:08.325
<v Speaker 0>change Maker. Okay.

00:11:09.125 --> 00:11:10.885
<v Speaker 0>So what we said was we wanted this

00:11:10.885 --> 00:11:11.765
<v Speaker 0>d shell

00:11:12.404 --> 00:11:15.140
<v Speaker 0>environment to provide something that felt like I

00:11:15.140 --> 00:11:17.300
<v Speaker 0>was developing locally, but with the parity of

00:11:17.300 --> 00:11:18.820
<v Speaker 0>that container based deployment.

00:11:18.980 --> 00:11:21.300
<v Speaker 1>Mhmm. And that means I'm inside the container

00:11:21.300 --> 00:11:21.860
<v Speaker 0>right now.

00:11:25.835 --> 00:11:27.275
<v Speaker 0>What do we want to do?

00:11:28.715 --> 00:11:31.355
<v Speaker 0>In fact, let's just split this first. So

00:11:32.155 --> 00:11:34.315
<v Speaker 0>I could do a DCPS to see what

00:11:34.315 --> 00:11:35.755
<v Speaker 0>I have running when I do the make

00:11:35.755 --> 00:11:37.035
<v Speaker 0>d shell command.

00:11:37.435 --> 00:11:40.395
<v Speaker 0>So we do have a MariaDB database self.

00:11:41.100 --> 00:11:41.740
<v Speaker 0>Good.

00:11:42.140 --> 00:11:44.779
<v Speaker 0>We have an NGINX service static assets

00:11:45.100 --> 00:11:47.820
<v Speaker 0>and, hopefully, proxy in any request for PHP

00:11:47.820 --> 00:11:49.740
<v Speaker 0>back through to the FPM container.

00:11:50.300 --> 00:11:53.500
<v Speaker 0>We have our FPM server running,

00:11:53.740 --> 00:11:55.660
<v Speaker 0>and we have an interactive

00:11:55.660 --> 00:11:56.140
<v Speaker 0>shell.

00:11:56.675 --> 00:11:58.755
<v Speaker 1>Yep. Which is the same image, right, as

00:11:58.755 --> 00:11:59.315
<v Speaker 1>the

00:11:59.875 --> 00:12:03.795
<v Speaker 0>Exact same image with the same volume notes.

00:12:04.035 --> 00:12:06.675
<v Speaker 0>Yep. Just working as is.

00:12:08.514 --> 00:12:11.315
<v Speaker 0>So what we need now is confirmation

00:12:11.315 --> 00:12:14.420
<v Speaker 0>that this application is working. So

00:12:16.020 --> 00:12:17.940
<v Speaker 0>and I'm now typing h t t p

00:12:17.940 --> 00:12:20.500
<v Speaker 0>s. Sorry. Local host eighty eighty.

00:12:28.325 --> 00:12:29.205
<v Speaker 0>Hey.

00:12:29.845 --> 00:12:30.485
<v Speaker 0>Alright.

00:12:31.045 --> 00:12:33.845
<v Speaker 0>Okay. Not too bad. We haven't actually logged

00:12:33.845 --> 00:12:36.485
<v Speaker 1>in, have we? We're just trusting it works.

00:12:36.885 --> 00:12:38.405
<v Speaker 1>The database is there.

00:12:39.685 --> 00:12:41.765
<v Speaker 1>Looks like the assets are compiling correctly.

00:12:44.540 --> 00:12:45.420
<v Speaker 0>Yep.

00:12:45.500 --> 00:12:48.220
<v Speaker 0>So hello there. Welcome to Ping CRM.

00:12:48.540 --> 00:12:51.340
<v Speaker 0>We can artificially create five hundreds and four

00:12:51.340 --> 00:12:54.060
<v Speaker 0>hundreds. We have the ability to bridge organizations.

00:12:55.775 --> 00:12:57.935
<v Speaker 0>But this is not the fastest application right

00:12:57.935 --> 00:13:00.175
<v Speaker 0>now, and that is because I'm developing on

00:13:00.175 --> 00:13:01.055
<v Speaker 0>a Mac.

00:13:02.575 --> 00:13:04.575
<v Speaker 0>Now there is a flag to speed that

00:13:04.575 --> 00:13:05.215
<v Speaker 0>up.

00:13:06.255 --> 00:13:07.935
<v Speaker 0>So maybe that should just be the first

00:13:07.935 --> 00:13:09.455
<v Speaker 0>quality of life thing that we're gonna do.

00:13:12.250 --> 00:13:14.090
<v Speaker 1>And there's a whole new mechanism in Docker

00:13:14.090 --> 00:13:16.970
<v Speaker 1>for Mac that does some sort of syncing,

00:13:16.970 --> 00:13:18.410
<v Speaker 1>but I've not tried it out.

00:13:19.290 --> 00:13:20.250
<v Speaker 0>Say what?

00:13:20.970 --> 00:13:22.170
<v Speaker 1>There's a new file system.

00:13:24.714 --> 00:13:25.915
<v Speaker 1>Something RPC.

00:13:28.875 --> 00:13:31.514
<v Speaker 0>You got some link goodness there for me

00:13:31.514 --> 00:13:33.834
<v Speaker 0>to check out? Guess I can just Google

00:13:33.834 --> 00:13:36.555
<v Speaker 0>it over for Mac. Yep. If you're on

00:13:36.555 --> 00:13:37.355
<v Speaker 0>the RPC.

00:13:39.150 --> 00:13:40.590
<v Speaker 1>Think RPC. Yeah.

00:13:41.550 --> 00:13:42.350
<v Speaker 1>Not that.

00:13:43.550 --> 00:13:45.790
<v Speaker 1>It's in the new edge thing. So what

00:13:45.790 --> 00:13:47.070
<v Speaker 1>it does is instead of

00:13:47.630 --> 00:13:48.110
<v Speaker 1>it it

00:13:48.830 --> 00:13:50.750
<v Speaker 1>in the container uses a few the user

00:13:50.750 --> 00:13:52.750
<v Speaker 1>land fuse file system

00:13:53.390 --> 00:13:54.830
<v Speaker 1>that

00:13:56.885 --> 00:13:58.085
<v Speaker 1>has some RPC

00:13:58.565 --> 00:14:01.365
<v Speaker 1>thing. So it's syncing the Mac file system

00:14:01.365 --> 00:14:02.885
<v Speaker 1>events. It's then pushing them

00:14:03.845 --> 00:14:05.045
<v Speaker 1>to Docker.

00:14:05.525 --> 00:14:08.405
<v Speaker 1>It's not actually that much faster, allegedly.

00:14:09.700 --> 00:14:11.140
<v Speaker 1>So people I know have used it said

00:14:11.140 --> 00:14:13.540
<v Speaker 1>it's about 10 or 20% faster.

00:14:14.899 --> 00:14:18.180
<v Speaker 0>Okay. I am gonna enable the delegated feature

00:14:18.180 --> 00:14:21.460
<v Speaker 0>that I am somewhat familiar with. Yeah.

00:14:21.779 --> 00:14:23.140
<v Speaker 0>Let's see if we

00:14:23.705 --> 00:14:25.545
<v Speaker 0>see if we get a little bit of

00:14:25.545 --> 00:14:26.985
<v Speaker 0>improvement.

00:14:27.465 --> 00:14:28.345
<v Speaker 0>Do I spent

00:14:28.985 --> 00:14:29.385
<v Speaker 0>sorry?

00:14:30.985 --> 00:14:33.385
<v Speaker 1>Do a quick benchmark first before we change

00:14:33.385 --> 00:14:33.625
<v Speaker 1>it.

00:14:36.690 --> 00:14:38.610
<v Speaker 0>Let me just get the documentation so we

00:14:38.610 --> 00:14:40.690
<v Speaker 0>can share that to the Docker for Mac

00:14:40.690 --> 00:14:42.050
<v Speaker 0>delegated folder.

00:14:44.130 --> 00:14:46.530
<v Speaker 0>There we go. Okay. So And people get

00:14:46.530 --> 00:14:48.450
<v Speaker 1>very confused between delegated and cached.

00:14:50.545 --> 00:14:52.545
<v Speaker 0>Yeah. We'll try and cover that too then.

00:14:53.265 --> 00:14:55.025
<v Speaker 0>So how do we benchmark this? What we

00:14:55.025 --> 00:14:57.105
<v Speaker 0>wanna do is time how long it takes

00:14:57.105 --> 00:14:59.425
<v Speaker 0>for a curl request, I guess,

00:15:00.305 --> 00:15:03.185
<v Speaker 0>to pull down that index page. So let's

00:15:03.185 --> 00:15:04.990
<v Speaker 0>see. Localhost,

00:15:05.550 --> 00:15:07.550
<v Speaker 0>it it it it time.

00:15:12.750 --> 00:15:15.150
<v Speaker 0>22.4Seconds.

00:15:15.390 --> 00:15:17.390
<v Speaker 0>Although, that didn't give us a login page,

00:15:17.390 --> 00:15:18.670
<v Speaker 0>so let's render that too.

00:15:23.915 --> 00:15:25.675
<v Speaker 0>Alright. It looks like we're run

00:15:26.315 --> 00:15:28.875
<v Speaker 0>two point eight seconds. It definitely felt longer

00:15:28.875 --> 00:15:29.995
<v Speaker 0>than that here.

00:15:30.235 --> 00:15:30.875
<v Speaker 0>Is it not?

00:15:33.150 --> 00:15:35.870
<v Speaker 1>Maybe there's some sort of cold start booking.

00:15:37.790 --> 00:15:39.230
<v Speaker 1>I wonder if Laravel

00:15:39.790 --> 00:15:41.550
<v Speaker 1>in Devon caches

00:15:41.550 --> 00:15:42.670
<v Speaker 1>things. Do you know what I mean?

00:15:43.944 --> 00:15:46.264
<v Speaker 0>Maybe that was just under three seconds. Right?

00:15:46.264 --> 00:15:47.704
<v Speaker 0>Okay. So let's see if I can get

00:15:47.704 --> 00:15:49.464
<v Speaker 0>a little bit of performance out of that

00:15:49.464 --> 00:15:51.785
<v Speaker 0>then. So if we find delegated

00:15:53.865 --> 00:15:54.745
<v Speaker 0>there we go.

00:15:55.464 --> 00:15:57.225
<v Speaker 0>These are the three options that we have.

00:15:57.225 --> 00:15:57.625
<v Speaker 0>These are,

00:15:58.670 --> 00:16:01.709
<v Speaker 0>I believe, max specific things that change the

00:16:01.709 --> 00:16:03.230
<v Speaker 0>way the fail synchronization

00:16:03.870 --> 00:16:05.149
<v Speaker 0>well, they don't change the way it works.

00:16:05.149 --> 00:16:07.949
<v Speaker 0>They change the expectations on requesting fails from

00:16:07.949 --> 00:16:09.149
<v Speaker 0>the container side.

00:16:09.310 --> 00:16:09.950
<v Speaker 1>Mhmm.

00:16:10.269 --> 00:16:13.149
<v Speaker 0>So by default, I believe we get consistent.

00:16:13.895 --> 00:16:16.535
<v Speaker 0>That means whenever I modify a fail on

00:16:16.535 --> 00:16:17.415
<v Speaker 0>the host

00:16:17.895 --> 00:16:19.815
<v Speaker 0>and I then make a request against that

00:16:19.815 --> 00:16:21.895
<v Speaker 0>container, it is going away

00:16:22.455 --> 00:16:24.615
<v Speaker 0>and until both of those fail systems are

00:16:24.615 --> 00:16:26.855
<v Speaker 0>in complete sync before responding to any of

00:16:26.855 --> 00:16:29.470
<v Speaker 0>the requests coming in. This means that if

00:16:29.470 --> 00:16:30.670
<v Speaker 0>I modify

00:16:31.230 --> 00:16:33.550
<v Speaker 0>what did we get on this page? See,

00:16:33.550 --> 00:16:34.990
<v Speaker 0>I want to change dashboard.

00:16:35.870 --> 00:16:37.310
<v Speaker 0>Wait. That's not as easy as I'm hoping

00:16:37.310 --> 00:16:37.710
<v Speaker 0>it is.

00:16:44.655 --> 00:16:46.735
<v Speaker 0>Let's assume this is the template.

00:16:49.455 --> 00:16:50.815
<v Speaker 0>Go away. Okay.

00:16:51.775 --> 00:16:55.135
<v Speaker 0>Have I saved this from my oh, I

00:16:55.135 --> 00:16:55.935
<v Speaker 0>had log in,

00:16:58.240 --> 00:17:00.800
<v Speaker 0>and I'm not logged in here. Going well.

00:17:00.800 --> 00:17:01.840
<v Speaker 0>Okay. So

00:17:03.600 --> 00:17:04.720
<v Speaker 0>oh, it didn't.

00:17:05.599 --> 00:17:07.839
<v Speaker 0>Oh, Windows, the default behavior has not changed,

00:17:07.839 --> 00:17:09.280
<v Speaker 0>or have I just changed the wrong template?

00:17:10.585 --> 00:17:12.504
<v Speaker 0>Anyway, let's talk about it first.

00:17:13.304 --> 00:17:14.744
<v Speaker 0>Then we've got cached.

00:17:16.184 --> 00:17:20.104
<v Speaker 0>Cached just means that we are gonna

00:17:20.424 --> 00:17:23.304
<v Speaker 0>trust the host container as always correct.

00:17:23.740 --> 00:17:26.539
<v Speaker 0>Yep. And what that means is that we'll

00:17:26.539 --> 00:17:28.219
<v Speaker 0>happily take a little bit of

00:17:29.019 --> 00:17:30.779
<v Speaker 0>delay in a response.

00:17:30.940 --> 00:17:33.659
<v Speaker 0>Delegated means just invert that. It means whoever's

00:17:33.659 --> 00:17:35.980
<v Speaker 0>in the container, just use it. Now from

00:17:35.980 --> 00:17:38.005
<v Speaker 0>a performance point of view, just always using

00:17:38.005 --> 00:17:40.005
<v Speaker 0>delegated means that when you're working with your

00:17:40.005 --> 00:17:42.404
<v Speaker 0>application, you're always gonna get fast responses.

00:17:42.645 --> 00:17:44.165
<v Speaker 0>It may mean that you have to refresh

00:17:44.165 --> 00:17:44.965
<v Speaker 0>the page

00:17:45.365 --> 00:17:47.044
<v Speaker 0>to see that new change come in just

00:17:47.044 --> 00:17:48.965
<v Speaker 0>after. So it depends on how quickly your

00:17:48.965 --> 00:17:51.365
<v Speaker 0>workflow is between changing something on a template

00:17:51.365 --> 00:17:51.845
<v Speaker 0>site

00:17:52.170 --> 00:17:54.010
<v Speaker 0>and then moving over to your browser and

00:17:54.010 --> 00:17:57.610
<v Speaker 0>refreshing that. So I feel from a experience

00:17:57.610 --> 00:17:59.930
<v Speaker 0>point of view that fully delegated is better

00:17:59.930 --> 00:18:01.770
<v Speaker 0>because I would prefer that the

00:18:02.090 --> 00:18:04.490
<v Speaker 0>page responded faster even if it is not

00:18:04.490 --> 00:18:05.850
<v Speaker 0>entirely accurate

00:18:05.850 --> 00:18:08.045
<v Speaker 0>for the changes I've made. I agree with

00:18:08.045 --> 00:18:09.485
<v Speaker 1>that. I think it's

00:18:09.485 --> 00:18:11.644
<v Speaker 1>a no brainer for stuff that containers writing.

00:18:11.645 --> 00:18:14.285
<v Speaker 1>Right? So if you're mounting a logs folder

00:18:14.285 --> 00:18:17.165
<v Speaker 1>or, like, a temp a cache folder out

00:18:17.165 --> 00:18:18.044
<v Speaker 1>to your host,

00:18:18.365 --> 00:18:19.165
<v Speaker 1>delegated

00:18:19.165 --> 00:18:20.605
<v Speaker 1>is what you want because

00:18:22.190 --> 00:18:24.110
<v Speaker 1>there might be a slight delay in you

00:18:24.110 --> 00:18:25.630
<v Speaker 1>looking at that file on the host, but

00:18:25.630 --> 00:18:26.830
<v Speaker 1>you want the

00:18:27.309 --> 00:18:28.830
<v Speaker 1>you want the Docker file system to able

00:18:28.830 --> 00:18:30.990
<v Speaker 1>to write to that quickly without waiting for

00:18:30.990 --> 00:18:31.390
<v Speaker 1>updates.

00:18:34.125 --> 00:18:36.685
<v Speaker 1>It's also it's less of it's less obvious,

00:18:36.685 --> 00:18:38.365
<v Speaker 1>but I think it's the right behavior for

00:18:38.685 --> 00:18:40.605
<v Speaker 1>the code you're mounting because in your typical

00:18:40.605 --> 00:18:42.285
<v Speaker 1>workflow, you're gonna hit save, and then you're

00:18:42.285 --> 00:18:43.565
<v Speaker 1>gonna take a small amount of time to

00:18:43.565 --> 00:18:45.725
<v Speaker 1>switch window. And most of the time, the

00:18:45.725 --> 00:18:47.325
<v Speaker 1>sync will have happened before you get there.

00:18:47.779 --> 00:18:49.460
<v Speaker 1>It's really unlikely you're gonna be able to

00:18:49.460 --> 00:18:52.259
<v Speaker 1>run it in the few microseconds it takes.

00:18:53.139 --> 00:18:55.059
<v Speaker 1>And this is a problem for PHP specifically,

00:18:55.059 --> 00:18:57.059
<v Speaker 1>right, in other interpreted languages in a way

00:18:57.059 --> 00:18:58.259
<v Speaker 1>that it's not for

00:18:58.740 --> 00:18:59.220
<v Speaker 1>Go

00:19:00.115 --> 00:19:02.835
<v Speaker 1>Because if you're compiling Yeah. You if you've

00:19:02.835 --> 00:19:04.755
<v Speaker 1>got loads of source code and you're compiling

00:19:04.755 --> 00:19:06.275
<v Speaker 1>it into a binary file and the binary

00:19:06.275 --> 00:19:07.955
<v Speaker 1>file is the thing that you're mounting

00:19:08.674 --> 00:19:10.914
<v Speaker 1>into the container, that's one file to sync.

00:19:10.914 --> 00:19:12.674
<v Speaker 1>Whereas a typical JavaScript

00:19:13.715 --> 00:19:16.550
<v Speaker 1>not JavaScript. A typical sort of non minified,

00:19:17.110 --> 00:19:18.950
<v Speaker 1>non compiled JavaScript

00:19:19.510 --> 00:19:22.470
<v Speaker 1>library or PHP library. There's thousands of files,

00:19:22.710 --> 00:19:23.990
<v Speaker 1>lots of dependencies

00:19:24.070 --> 00:19:25.670
<v Speaker 1>that all have to be synced before it

00:19:25.670 --> 00:19:25.910
<v Speaker 1>works.

00:19:27.605 --> 00:19:30.085
<v Speaker 0>Yeah. Exactly. I I want a lot of

00:19:30.165 --> 00:19:32.405
<v Speaker 0>like, compared languages don't suffer this because, generally,

00:19:32.405 --> 00:19:34.965
<v Speaker 0>the completion steps is just explicit. People are

00:19:34.965 --> 00:19:36.245
<v Speaker 0>familiar with it. They have to do it

00:19:36.245 --> 00:19:38.005
<v Speaker 0>anyway. And if that completion happens when a

00:19:38.005 --> 00:19:40.405
<v Speaker 0>Docker image builds, then the tooling knows to

00:19:40.405 --> 00:19:41.765
<v Speaker 0>do that and restart the container.

00:19:42.259 --> 00:19:44.179
<v Speaker 0>For interpreted languages, yeah, this is the this

00:19:44.179 --> 00:19:45.860
<v Speaker 0>is where the pain points are because we

00:19:46.019 --> 00:19:48.499
<v Speaker 0>we're working directly with the source code itself.

00:19:49.059 --> 00:19:51.139
<v Speaker 1>And it's the file count, isn't it? It's

00:19:51.139 --> 00:19:51.859
<v Speaker 1>not the

00:19:52.100 --> 00:19:53.220
<v Speaker 1>size of the files, specifically.

00:19:54.255 --> 00:19:55.855
<v Speaker 0>Yeah. And if you've got 10 to 10

00:19:55.855 --> 00:19:58.815
<v Speaker 0>to small files, like, you know, vendor directories,

00:19:58.815 --> 00:20:00.495
<v Speaker 0>then that becomes a challenge. What a lot

00:20:00.495 --> 00:20:02.175
<v Speaker 0>of people do is move that vendor directory

00:20:02.175 --> 00:20:04.495
<v Speaker 0>into the container using some sort of container

00:20:04.495 --> 00:20:05.534
<v Speaker 0>side volume.

00:20:06.015 --> 00:20:07.455
<v Speaker 0>These are all things that we'll try and

00:20:07.455 --> 00:20:10.000
<v Speaker 0>cover over the next however many sessions we

00:20:10.000 --> 00:20:11.279
<v Speaker 0>we continue with this.

00:20:11.680 --> 00:20:13.120
<v Speaker 1>Yeah. I I mean, to be honest, for

00:20:13.120 --> 00:20:14.880
<v Speaker 1>me, because I work on a Mac as

00:20:14.880 --> 00:20:16.880
<v Speaker 1>well, and it's it's quite a slow Mac,

00:20:18.160 --> 00:20:20.880
<v Speaker 1>I often don't for instance, I might only

00:20:20.880 --> 00:20:22.080
<v Speaker 1>mount the source folder

00:20:22.684 --> 00:20:25.245
<v Speaker 1>or I'll actively be mounting the thing I'm

00:20:25.245 --> 00:20:26.765
<v Speaker 1>working on, but it involves a bit more

00:20:26.765 --> 00:20:30.045
<v Speaker 1>sort of thinking about which files are on

00:20:30.045 --> 00:20:31.645
<v Speaker 1>the host, which files are on the folder.

00:20:31.645 --> 00:20:34.045
<v Speaker 1>But you can get even without many tweaks,

00:20:34.045 --> 00:20:35.965
<v Speaker 1>you can get quite decent performance just by

00:20:35.965 --> 00:20:36.925
<v Speaker 1>not mounting much stuff.

00:20:39.389 --> 00:20:41.470
<v Speaker 1>You don't need to mount vendors unless you're

00:20:41.470 --> 00:20:42.269
<v Speaker 1>actively

00:20:42.830 --> 00:20:45.950
<v Speaker 1>editing your composer config and trying things out.

00:20:48.510 --> 00:20:49.710
<v Speaker 1>I have a question for you, David. Is

00:20:49.710 --> 00:20:51.710
<v Speaker 1>there a way to say mount this folder

00:20:51.710 --> 00:20:53.309
<v Speaker 1>except for these subfolders?

00:20:54.035 --> 00:20:57.075
<v Speaker 0>Oh, that's tricky. No. There

00:20:57.794 --> 00:20:58.835
<v Speaker 0>isn't No.

00:21:02.035 --> 00:21:04.355
<v Speaker 0>I've tried that so many times because it

00:21:04.355 --> 00:21:05.475
<v Speaker 0>would be really nice to be able to

00:21:05.475 --> 00:21:07.075
<v Speaker 0>say mount dot but not vendor.

00:21:07.720 --> 00:21:09.719
<v Speaker 0>Unfortunately, that is a challenge.

00:21:10.759 --> 00:21:12.360
<v Speaker 0>And then you'd you ran into this weird

00:21:12.360 --> 00:21:13.880
<v Speaker 0>checking and egg problem when you do want

00:21:13.880 --> 00:21:16.279
<v Speaker 0>to move your composer vendor folder to be

00:21:16.279 --> 00:21:18.360
<v Speaker 0>something that only exists in the container through

00:21:18.360 --> 00:21:21.085
<v Speaker 0>volume, the where the local one over sits

00:21:21.085 --> 00:21:23.085
<v Speaker 0>on the top of it anyway is is

00:21:23.085 --> 00:21:24.285
<v Speaker 0>really frustrating,

00:21:24.285 --> 00:21:25.005
<v Speaker 0>actually.

00:21:25.165 --> 00:21:27.085
<v Speaker 0>It's not a nice developer experience. It's not

00:21:27.085 --> 00:21:29.565
<v Speaker 0>really a way to make it nicer. It's

00:21:29.565 --> 00:21:30.045
<v Speaker 0>just

00:21:30.845 --> 00:21:33.005
<v Speaker 0>yeah. It's just painful. So if you only

00:21:33.005 --> 00:21:35.085
<v Speaker 1>want some folders mounted, you have to list

00:21:35.085 --> 00:21:36.605
<v Speaker 1>them out in the Docker Compose

00:21:36.870 --> 00:21:37.830
<v Speaker 1>explicitly.

00:21:40.870 --> 00:21:43.110
<v Speaker 1>You need to list everything except Blender

00:21:43.190 --> 00:21:45.510
<v Speaker 1>as I said. You would. Yeah.

00:21:45.670 --> 00:21:46.789
<v Speaker 0>I'm not

00:21:47.510 --> 00:21:49.845
<v Speaker 0>familiar with a way of yeah. I I

00:21:49.845 --> 00:21:50.965
<v Speaker 0>don't think it's on the on the way

00:21:50.965 --> 00:21:51.924
<v Speaker 0>of handling that.

00:21:52.245 --> 00:21:54.485
<v Speaker 1>Yeah. Thinking about how Unix mount points work,

00:21:54.565 --> 00:21:56.245
<v Speaker 1>there's probably not a nice way to do

00:21:56.245 --> 00:21:56.725
<v Speaker 1>that.

00:21:58.645 --> 00:22:00.405
<v Speaker 0>So I've made two changes to this view

00:22:00.405 --> 00:22:00.885
<v Speaker 0>template.

00:22:05.049 --> 00:22:07.450
<v Speaker 0>I'm not seeing it updated here. So this

00:22:07.450 --> 00:22:10.169
<v Speaker 0>is not the developer experience I'm hoping for.

00:22:11.210 --> 00:22:12.809
<v Speaker 0>And it seems to be

00:22:14.090 --> 00:22:15.450
<v Speaker 1>So you're already seeing them on host?

00:22:17.725 --> 00:22:19.004
<v Speaker 0>Yeah. Yeah.

00:22:19.885 --> 00:22:21.965
<v Speaker 0>Oh, no. This is a view. Ah, this

00:22:21.965 --> 00:22:23.724
<v Speaker 0>is asset compilation.

00:22:23.885 --> 00:22:25.644
<v Speaker 1>It's a building. Pardon me.

00:22:26.284 --> 00:22:27.804
<v Speaker 0>Alright. So we need to fix the build

00:22:27.804 --> 00:22:30.605
<v Speaker 0>pipeline in order to get this experience that

00:22:30.605 --> 00:22:31.965
<v Speaker 0>we need. It's a good illustration of why

00:22:31.965 --> 00:22:32.605
<v Speaker 1>people want it.

00:22:33.700 --> 00:22:35.379
<v Speaker 0>Yeah. That makes sense. Mhmm.

00:22:36.500 --> 00:22:37.299
<v Speaker 0>Alright.

00:22:37.380 --> 00:22:39.700
<v Speaker 0>Let's jump down to our Docker Compose because

00:22:39.700 --> 00:22:41.619
<v Speaker 0>what we're seeing now is

00:22:42.179 --> 00:22:43.059
<v Speaker 0>that

00:22:44.580 --> 00:22:46.100
<v Speaker 0>this needs to change.

00:22:49.305 --> 00:22:50.105
<v Speaker 0>Okay.

00:22:52.105 --> 00:22:54.025
<v Speaker 0>Now that probably means

00:22:56.825 --> 00:22:58.345
<v Speaker 1>Using a target

00:22:59.065 --> 00:22:59.785
<v Speaker 1>of our own?

00:23:05.880 --> 00:23:07.400
<v Speaker 0>I'm trying to work out whether we still

00:23:07.400 --> 00:23:09.640
<v Speaker 0>want to go through engine x and has

00:23:09.640 --> 00:23:10.760
<v Speaker 0>that consume

00:23:10.760 --> 00:23:11.639
<v Speaker 0>our

00:23:11.640 --> 00:23:13.559
<v Speaker 0>volume from our node

00:23:14.585 --> 00:23:17.225
<v Speaker 0>container that runs in a continuous loop, compiling

00:23:17.225 --> 00:23:19.145
<v Speaker 0>the assets whenever things change. Like, it's really

00:23:19.145 --> 00:23:21.225
<v Speaker 0>easy for us to That makes sense.

00:23:23.625 --> 00:23:25.065
<v Speaker 0>So let's start naively,

00:23:25.145 --> 00:23:27.305
<v Speaker 0>I think. Sorry. Yeah. Yeah. I was assuming

00:23:27.305 --> 00:23:28.185
<v Speaker 1>we would

00:23:30.049 --> 00:23:31.809
<v Speaker 1>be doing this as part of Docker build,

00:23:31.809 --> 00:23:33.650
<v Speaker 1>but no. We don't have to at all,

00:23:33.650 --> 00:23:35.809
<v Speaker 1>do we? We just need something that's constantly

00:23:35.970 --> 00:23:38.049
<v Speaker 1>doing the build into a into a volume.

00:23:39.250 --> 00:23:41.809
<v Speaker 1>Right. Yeah. I think so. We wanna be

00:23:41.809 --> 00:23:43.410
<v Speaker 0>able to they wanna be able we wanna

00:23:43.410 --> 00:23:44.875
<v Speaker 0>allow them to change these files whenever they

00:23:44.875 --> 00:23:46.794
<v Speaker 0>want, which means let's just fall back. Like,

00:23:46.794 --> 00:23:49.195
<v Speaker 0>whenever I speak to people and they're trying

00:23:49.195 --> 00:23:50.794
<v Speaker 0>to adopt containers, I say just try and

00:23:50.794 --> 00:23:52.635
<v Speaker 0>use the same tooling. Try and have the

00:23:52.635 --> 00:23:54.955
<v Speaker 0>same workflow that you have, but use containers

00:23:54.955 --> 00:23:56.715
<v Speaker 0>so that you have that party. And

00:23:57.034 --> 00:23:58.794
<v Speaker 0>from my experience of working on the the

00:23:58.794 --> 00:23:59.355
<v Speaker 0>node

00:24:00.000 --> 00:24:00.960
<v Speaker 0>ecosystem

00:24:00.960 --> 00:24:03.040
<v Speaker 0>is I would just run, like, an NPM

00:24:03.040 --> 00:24:03.760
<v Speaker 0>watch.

00:24:04.240 --> 00:24:06.080
<v Speaker 0>I would watch my assets. We can Yeah.

00:24:06.080 --> 00:24:07.760
<v Speaker 0>Do all the completion. And we need to

00:24:07.760 --> 00:24:09.200
<v Speaker 0>have that same workflow here.

00:24:09.520 --> 00:24:09.840
<v Speaker 0>So

00:24:11.855 --> 00:24:14.415
<v Speaker 0>what we'll do is we'll start very naively.

00:24:14.415 --> 00:24:16.575
<v Speaker 0>We're we're gonna provide a custom NGINX that

00:24:16.575 --> 00:24:17.855
<v Speaker 0>has node available.

00:24:19.375 --> 00:24:21.295
<v Speaker 0>No? Oh, you're looking at me funny. Okay.

00:24:21.295 --> 00:24:22.815
<v Speaker 0>Then we won't start naively. We'll just go

00:24:22.815 --> 00:24:24.815
<v Speaker 0>fill Then we end up with two of

00:24:24.815 --> 00:24:25.295
<v Speaker 1>them anyway.

00:24:25.830 --> 00:24:27.830
<v Speaker 1>One that's running this watch entry point and

00:24:27.830 --> 00:24:28.789
<v Speaker 1>one that's running

00:24:30.630 --> 00:24:33.509
<v Speaker 1>h t web server. Right. Right. Right.

00:24:33.750 --> 00:24:36.230
<v Speaker 0>Okay. Let's add a let's add node. So

00:24:36.390 --> 00:24:37.909
<v Speaker 1>And and we've already we're already using the

00:24:37.909 --> 00:24:38.789
<v Speaker 1>node image

00:24:39.750 --> 00:24:41.190
<v Speaker 1>in the in the live, so it's sort

00:24:41.190 --> 00:24:41.990
<v Speaker 1>of bringing us

00:24:44.125 --> 00:24:46.525
<v Speaker 0>Alright. So we're gonna add node. We'll use

00:24:46.525 --> 00:24:47.965
<v Speaker 0>the same image we were using on our

00:24:47.965 --> 00:24:48.925
<v Speaker 0>Docker file,

00:24:50.285 --> 00:24:51.965
<v Speaker 0>which is just node 10. Excellent.

00:24:52.445 --> 00:24:53.805
<v Speaker 0>We're gonna add a volume,

00:24:54.720 --> 00:24:56.000
<v Speaker 0>and we

00:24:56.080 --> 00:24:57.200
<v Speaker 0>want to mount

00:25:00.720 --> 00:25:02.560
<v Speaker 0>how is the directory structure here? Are we

00:25:02.560 --> 00:25:05.120
<v Speaker 0>doing a dot? We didn't bother working out

00:25:05.120 --> 00:25:07.120
<v Speaker 1>which files were important last time.

00:25:09.405 --> 00:25:11.325
<v Speaker 1>We we we did we went around that

00:25:11.405 --> 00:25:12.685
<v Speaker 1>we went down that route of only mounting

00:25:12.685 --> 00:25:14.445
<v Speaker 1>select things, and we couldn't work out which

00:25:14.445 --> 00:25:15.725
<v Speaker 1>ones are important or not.

00:25:16.045 --> 00:25:16.684
<v Speaker 0>K.

00:25:16.925 --> 00:25:19.085
<v Speaker 0>Well, like we said, we're gonna do things

00:25:19.085 --> 00:25:21.645
<v Speaker 0>slower this time. A bit more explicit. So

00:25:21.645 --> 00:25:23.165
<v Speaker 0>if we take a look at our our

00:25:23.165 --> 00:25:24.125
<v Speaker 0>package of JSON.

00:25:24.730 --> 00:25:27.769
<v Speaker 0>Yeah. We are using webpack.

00:25:27.769 --> 00:25:29.370
<v Speaker 0>It's got a watch. So this is what

00:25:29.370 --> 00:25:31.849
<v Speaker 0>we wanna use in development. It is

00:25:35.529 --> 00:25:36.169
<v Speaker 0>we're

00:25:36.815 --> 00:25:38.654
<v Speaker 0>m p m run development

00:25:38.655 --> 00:25:40.575
<v Speaker 0>that is doing this.

00:25:40.735 --> 00:25:43.135
<v Speaker 0>This is Laravel Mix, which is a wrapper

00:25:43.135 --> 00:25:44.654
<v Speaker 0>around webpack.

00:25:45.615 --> 00:25:47.695
<v Speaker 0>Leo told us that last time on the

00:25:47.695 --> 00:25:48.015
<v Speaker 0>chat.

00:25:49.470 --> 00:25:51.630
<v Speaker 0>But there's no directories here. They may just

00:25:51.630 --> 00:25:53.389
<v Speaker 0>be working against the same

00:25:55.230 --> 00:25:56.029
<v Speaker 0>assets.

00:25:56.350 --> 00:25:58.830
<v Speaker 1>We found out last time that the tailwind

00:25:58.830 --> 00:26:00.830
<v Speaker 1>config JS was important.

00:26:02.830 --> 00:26:03.150
<v Speaker 0>It was important.

00:26:03.945 --> 00:26:05.464
<v Speaker 1>There's there's another one.

00:26:06.985 --> 00:26:09.544
<v Speaker 1>The pack package dot JSON, obviously.

00:26:10.105 --> 00:26:12.344
<v Speaker 0>Yeah. There's something else, I thought.

00:26:13.225 --> 00:26:15.865
<v Speaker 0>I think this resources thing

00:26:17.050 --> 00:26:18.890
<v Speaker 0>well, that's what PHP in it too.

00:26:23.050 --> 00:26:24.330
<v Speaker 0>I think resources

00:26:24.330 --> 00:26:26.890
<v Speaker 0>might be enough plus the package JSON plus

00:26:26.890 --> 00:26:27.929
<v Speaker 0>the tailwind

00:26:28.410 --> 00:26:29.289
<v Speaker 1>plus We

00:26:30.890 --> 00:26:31.690
<v Speaker 1>can find out then.

00:26:33.075 --> 00:26:33.715
<v Speaker 0>Okay.

00:26:34.115 --> 00:26:36.275
<v Speaker 0>Let's go back here. So we're gonna do

00:26:36.275 --> 00:26:38.434
<v Speaker 0>package dot JSON, which we know we definitely

00:26:38.434 --> 00:26:39.154
<v Speaker 0>need.

00:26:41.635 --> 00:26:44.850
<v Speaker 0>Set a working dir of slash code. I

00:26:44.850 --> 00:26:47.330
<v Speaker 0>will call slash nodes to remove any ambiguity

00:26:47.330 --> 00:26:48.850
<v Speaker 0>between what we do

00:26:49.170 --> 00:26:50.369
<v Speaker 0>with PHP.

00:26:50.929 --> 00:26:54.130
<v Speaker 0>We also need the tailwind config dot j

00:26:54.130 --> 00:26:54.850
<v Speaker 0>s,

00:26:55.090 --> 00:26:56.530
<v Speaker 0>which we can just stick in there.

00:26:59.445 --> 00:27:00.885
<v Speaker 0>We need

00:27:01.845 --> 00:27:03.525
<v Speaker 0>webpack dot mix.

00:27:05.845 --> 00:27:07.285
<v Speaker 1>Do you need that trailing slash on the

00:27:07.285 --> 00:27:09.285
<v Speaker 1>node to stop it making a file?

00:27:12.370 --> 00:27:13.970
<v Speaker 1>Just a question about math.

00:27:15.650 --> 00:27:17.010
<v Speaker 0>Yes.

00:27:17.650 --> 00:27:19.809
<v Speaker 0>I'm hoping this is going to work.

00:27:20.290 --> 00:27:22.450
<v Speaker 0>Yes. The the slash should mean don't name

00:27:22.450 --> 00:27:24.370
<v Speaker 0>the file node, and then the slash should

00:27:24.370 --> 00:27:26.335
<v Speaker 0>mean put it in directory. I could also

00:27:26.335 --> 00:27:28.174
<v Speaker 0>just do package dot JSON.

00:27:28.255 --> 00:27:28.894
<v Speaker 1>Yeah.

00:27:30.414 --> 00:27:32.815
<v Speaker 1>You need package lock as well, I think,

00:27:32.894 --> 00:27:34.815
<v Speaker 1>depending if they're using that.

00:27:35.375 --> 00:27:37.294
<v Speaker 0>I'm gonna ignore that file forever.

00:27:37.615 --> 00:27:39.375
<v Speaker 0>I don't think we should commit lock files.

00:27:39.375 --> 00:27:40.575
<v Speaker 0>Oh, yeah. Yeah.

00:27:42.460 --> 00:27:44.940
<v Speaker 0>That's I mean, we have containers. We already

00:27:44.940 --> 00:27:46.380
<v Speaker 0>have immutability.

00:27:46.380 --> 00:27:47.500
<v Speaker 0>We have repeatability.

00:27:47.500 --> 00:27:48.860
<v Speaker 0>We have all of this stuff. It's like

00:27:48.860 --> 00:27:49.979
<v Speaker 0>the lock fail.

00:27:50.299 --> 00:27:52.539
<v Speaker 0>Like, your deployment without containers makes sense, but

00:27:52.539 --> 00:27:52.940
<v Speaker 0>I'm

00:27:53.415 --> 00:27:55.495
<v Speaker 0>not going to about this last time when

00:27:55.495 --> 00:27:56.855
<v Speaker 1>it made perfect sense when we were talking

00:27:56.855 --> 00:27:59.495
<v Speaker 1>about production. Does that still hold for development?

00:28:01.815 --> 00:28:04.295
<v Speaker 1>When It doesn't make sense for production. Having

00:28:04.295 --> 00:28:07.415
<v Speaker 0>the log file and the container for auditability

00:28:07.415 --> 00:28:09.820
<v Speaker 0>is fine, but not committing it yet.

00:28:09.980 --> 00:28:11.500
<v Speaker 0>The only reason I think we have to

00:28:11.500 --> 00:28:13.260
<v Speaker 0>make the lock fail last time was it

00:28:13.260 --> 00:28:14.780
<v Speaker 0>required shrink-wrap,

00:28:14.860 --> 00:28:16.860
<v Speaker 0>which looked for the lock fail. Yeah. No.

00:28:17.340 --> 00:28:19.260
<v Speaker 1>No. I mean, if I'm a developer and

00:28:19.260 --> 00:28:20.140
<v Speaker 1>I'm checking out a project,

00:28:22.535 --> 00:28:24.535
<v Speaker 1>the earliest time I'm gonna find out I've

00:28:24.535 --> 00:28:26.215
<v Speaker 1>been working with the wrong set of dependencies

00:28:26.215 --> 00:28:28.294
<v Speaker 1>will be when it runs through CI.

00:28:29.335 --> 00:28:31.495
<v Speaker 1>If the developer has access to that lock

00:28:31.495 --> 00:28:33.735
<v Speaker 1>file, they get an earlier

00:28:33.735 --> 00:28:34.615
<v Speaker 1>discovery

00:28:34.775 --> 00:28:36.295
<v Speaker 1>of what versions they should be using.

00:28:37.200 --> 00:28:39.440
<v Speaker 0>I I guess we're getting into this. So

00:28:39.760 --> 00:28:41.919
<v Speaker 0>the log file is

00:28:42.080 --> 00:28:43.519
<v Speaker 0>it guarantee

00:28:43.520 --> 00:28:45.440
<v Speaker 0>that the dependencies that I have in a

00:28:45.440 --> 00:28:47.520
<v Speaker 0>log file that I have either run test

00:28:47.520 --> 00:28:49.279
<v Speaker 0>against to confirm that it works,

00:28:50.085 --> 00:28:52.485
<v Speaker 0>and that's Yeah. Now if I remove that

00:28:52.485 --> 00:28:54.164
<v Speaker 0>log file, what I'm saying is I trust

00:28:54.164 --> 00:28:56.005
<v Speaker 0>whatever is in my package dot JSON, and

00:28:56.005 --> 00:28:58.005
<v Speaker 0>I have semantics there to indicate which major,

00:28:58.005 --> 00:28:59.525
<v Speaker 0>minor, or patch version of the package I

00:28:59.525 --> 00:29:00.085
<v Speaker 0>want,

00:29:00.565 --> 00:29:02.325
<v Speaker 0>which means I can always get security updates

00:29:02.325 --> 00:29:03.605
<v Speaker 0>and the and the latest and greatest where

00:29:03.605 --> 00:29:05.900
<v Speaker 0>needed for packages that I trust not to

00:29:05.900 --> 00:29:06.380
<v Speaker 0>be

00:29:06.780 --> 00:29:09.820
<v Speaker 0>breaking backwards compatibility regularly. Obviously, those things do

00:29:09.820 --> 00:29:11.820
<v Speaker 0>happen, and we can pin those versions and

00:29:11.820 --> 00:29:13.980
<v Speaker 0>the the JSON file, which serves a lock.

00:29:14.780 --> 00:29:17.260
<v Speaker 0>I just I don't like committing a lock

00:29:17.260 --> 00:29:18.700
<v Speaker 0>file because what I'm saying is whenever I

00:29:18.700 --> 00:29:20.595
<v Speaker 0>rebuild this project, I never want to get

00:29:20.595 --> 00:29:22.754
<v Speaker 0>security updates unless I manually

00:29:22.755 --> 00:29:24.835
<v Speaker 0>do it. And I think that's a really

00:29:24.835 --> 00:29:27.235
<v Speaker 0>big problem, especially with the amount of vulnerabilities.

00:29:27.235 --> 00:29:27.955
<v Speaker 0>I don't think

00:29:28.275 --> 00:29:30.595
<v Speaker 0>people that are ignorant to security

00:29:30.835 --> 00:29:32.915
<v Speaker 0>really understand how many CVEs there are.

00:29:34.000 --> 00:29:36.240
<v Speaker 0>Crypto miner ends up in MPM projects fairly

00:29:36.240 --> 00:29:37.039
<v Speaker 0>regularly.

00:29:37.360 --> 00:29:38.159
<v Speaker 1>Yeah. So

00:29:38.559 --> 00:29:40.640
<v Speaker 1>I guess what I'm thinking about is that

00:29:40.640 --> 00:29:41.759
<v Speaker 1>we talked about

00:29:42.159 --> 00:29:44.159
<v Speaker 1>we're in the deployment pipeline. We have this

00:29:44.159 --> 00:29:47.039
<v Speaker 1>guarantee, don't we, that the the exact image

00:29:47.039 --> 00:29:47.760
<v Speaker 1>that the

00:29:48.674 --> 00:29:50.355
<v Speaker 1>CI ran against is the one that's being

00:29:50.355 --> 00:29:51.875
<v Speaker 1>deployed. So that's giving you some of that

00:29:51.875 --> 00:29:52.674
<v Speaker 1>guarantee.

00:29:52.995 --> 00:29:53.874
<v Speaker 1>Whereas here,

00:29:54.595 --> 00:29:56.195
<v Speaker 1>maybe the developer isn't

00:29:56.195 --> 00:29:58.274
<v Speaker 1>someone who runs the tests locally.

00:29:59.955 --> 00:30:03.120
<v Speaker 1>We're rebuilding the image fairly regularly. We haven't

00:30:03.200 --> 00:30:04.720
<v Speaker 1>we don't really know

00:30:05.840 --> 00:30:08.080
<v Speaker 1>that the you know, we're about to start

00:30:08.080 --> 00:30:10.160
<v Speaker 1>recompiling the assets on the fly every time

00:30:10.160 --> 00:30:11.760
<v Speaker 1>you change a file. So we don't have

00:30:11.760 --> 00:30:13.120
<v Speaker 1>that guarantee that the

00:30:13.760 --> 00:30:15.520
<v Speaker 1>the code I'm working on, the versions I'm

00:30:15.520 --> 00:30:17.040
<v Speaker 1>using have passed the test.

00:30:18.044 --> 00:30:19.004
<v Speaker 1>So I guess

00:30:19.404 --> 00:30:21.005
<v Speaker 1>you do have the backup, of course, when

00:30:21.005 --> 00:30:21.964
<v Speaker 1>the CI

00:30:22.524 --> 00:30:23.244
<v Speaker 1>runs.

00:30:23.725 --> 00:30:25.245
<v Speaker 1>But, you know, I'm thinking about for some

00:30:25.245 --> 00:30:27.485
<v Speaker 1>developers I know, that's eight days later.

00:30:29.990 --> 00:30:31.350
<v Speaker 0>Yeah. So if you don't have a a

00:30:31.350 --> 00:30:33.670
<v Speaker 0>really tight integration and short feedback loop with

00:30:33.670 --> 00:30:35.190
<v Speaker 0>a CI server that runs

00:30:35.590 --> 00:30:38.550
<v Speaker 0>within minutes of pushing code somewhere, then, yeah,

00:30:38.550 --> 00:30:40.470
<v Speaker 0>you probably do wanna commit a log file.

00:30:40.630 --> 00:30:42.735
<v Speaker 0>If you work at for a bank where

00:30:42.735 --> 00:30:45.455
<v Speaker 0>you have to manually approve every patch update,

00:30:45.455 --> 00:30:48.175
<v Speaker 0>you probably wanna commit a log file. All

00:30:48.175 --> 00:30:51.055
<v Speaker 0>our scenarios, I'd say, embrace the ability to

00:30:51.055 --> 00:30:52.735
<v Speaker 0>update and get security updates.

00:30:53.055 --> 00:30:54.655
<v Speaker 0>A crypto minor may still end up in

00:30:54.655 --> 00:30:57.200
<v Speaker 0>there because of that, But, you know, we

00:30:57.200 --> 00:30:59.200
<v Speaker 0>we have other ways to audit that code.

00:30:59.760 --> 00:31:00.400
<v Speaker 0>Alright.

00:31:01.120 --> 00:31:03.120
<v Speaker 1>Let's

00:31:03.120 --> 00:31:04.880
<v Speaker 1>leave it there. We've run four lines of

00:31:04.880 --> 00:31:06.560
<v Speaker 0>code. So let's if we'll keep making some

00:31:06.560 --> 00:31:07.120
<v Speaker 0>progress here.

00:31:08.015 --> 00:31:11.855
<v Speaker 0>Okay. Resources, packages on tailwind, and webpack.

00:31:12.495 --> 00:31:14.735
<v Speaker 0>Let's see if we have enough to trigger

00:31:14.735 --> 00:31:17.535
<v Speaker 0>and run those MPM scripts. So

00:31:18.015 --> 00:31:21.190
<v Speaker 0>I'll use my other terminal here. Docker propose

00:31:21.190 --> 00:31:22.309
<v Speaker 0>run, interact

00:31:22.630 --> 00:31:25.029
<v Speaker 0>with the IT once it run.

00:31:25.909 --> 00:31:27.269
<v Speaker 0>We wanna run node.

00:31:27.509 --> 00:31:28.710
<v Speaker 0>Let's run the batch command.

00:31:33.095 --> 00:31:33.895
<v Speaker 0>Okay. Okay.

00:31:34.615 --> 00:31:36.455
<v Speaker 0>So it it's going to make me do

00:31:36.455 --> 00:31:36.934
<v Speaker 0>this.

00:31:39.895 --> 00:31:41.975
<v Speaker 1>And that's because the folder doesn't exist. Right?

00:31:41.975 --> 00:31:43.095
<v Speaker 1>If it existed,

00:31:43.255 --> 00:31:44.375
<v Speaker 1>everything would be happy.

00:31:45.820 --> 00:31:47.980
<v Speaker 0>When I set the directory to slash the

00:31:47.980 --> 00:31:49.740
<v Speaker 0>working directory to slash nodes, so that directory

00:31:49.740 --> 00:31:52.140
<v Speaker 0>does exist. Oh, does it get created?

00:31:53.260 --> 00:31:55.260
<v Speaker 0>Yeah. So we comment that's it.

00:31:59.075 --> 00:32:00.835
<v Speaker 1>Is

00:32:00.835 --> 00:32:02.035
<v Speaker 1>that created

00:32:02.195 --> 00:32:03.875
<v Speaker 1>what yeah. I don't know when that's created.

00:32:03.875 --> 00:32:05.155
<v Speaker 1>Is that created at run time or is

00:32:05.155 --> 00:32:06.195
<v Speaker 1>it created?

00:32:08.035 --> 00:32:10.035
<v Speaker 0>When the working directory is set and the

00:32:10.035 --> 00:32:12.115
<v Speaker 0>container metadata and the container is spun up,

00:32:12.115 --> 00:32:13.395
<v Speaker 0>that directory will exist.

00:32:14.650 --> 00:32:16.730
<v Speaker 0>And now I can drop back out, bring

00:32:16.730 --> 00:32:17.850
<v Speaker 0>these back in

00:32:18.650 --> 00:32:19.210
<v Speaker 0>Mhmm.

00:32:19.530 --> 00:32:22.090
<v Speaker 0>Then we have what we want. Okay. Cool.

00:32:23.610 --> 00:32:25.290
<v Speaker 0>And that's the directory with all the stuff

00:32:25.290 --> 00:32:25.850
<v Speaker 0>that we need.

00:32:26.595 --> 00:32:27.154
<v Speaker 0>So

00:32:27.475 --> 00:32:28.595
<v Speaker 0>I should

00:32:28.835 --> 00:32:31.315
<v Speaker 0>we pull up the package dot JSON again.

00:32:32.915 --> 00:32:34.275
<v Speaker 0>What we really wanna be able to run

00:32:34.275 --> 00:32:36.754
<v Speaker 0>here is MPM run dev.

00:32:38.595 --> 00:32:40.835
<v Speaker 0>We will need to do an MPM install.

00:32:42.360 --> 00:32:43.720
<v Speaker 0>Wasn't it watch?

00:32:45.640 --> 00:32:47.159
<v Speaker 0>The dev runs a watch.

00:32:48.440 --> 00:32:50.520
<v Speaker 0>So MPN dev runs development.

00:32:50.520 --> 00:32:52.200
<v Speaker 0>Development then runs

00:32:53.080 --> 00:32:53.879
<v Speaker 0>oh, no.

00:32:54.520 --> 00:32:56.600
<v Speaker 0>Oh, yeah. Okay. You're right. Development just does

00:32:56.600 --> 00:32:58.895
<v Speaker 0>the cool way pack stuff. Watch does the

00:32:58.895 --> 00:33:01.534
<v Speaker 0>watch. Good catch. Thank you.

00:33:08.495 --> 00:33:11.375
<v Speaker 1>We are what what are we gonna run-in?

00:33:11.375 --> 00:33:12.575
<v Speaker 1>Does watch do the install?

00:33:13.270 --> 00:33:14.790
<v Speaker 1>Do we we're gonna have to run install

00:33:14.790 --> 00:33:15.909
<v Speaker 1>and then watch?

00:33:19.190 --> 00:33:19.830
<v Speaker 0>So

00:33:22.309 --> 00:33:24.070
<v Speaker 0>yeah. We'll need to handle that. I'm not

00:33:24.070 --> 00:33:24.549
<v Speaker 0>sure.

00:33:25.190 --> 00:33:26.230
<v Speaker 1>Install, but that's good.

00:33:31.745 --> 00:33:33.184
<v Speaker 0>I think we have enough.

00:33:34.784 --> 00:33:37.424
<v Speaker 0>Don't wanna get too cocky, but I think

00:33:37.424 --> 00:33:38.304
<v Speaker 0>it looks good.

00:33:45.550 --> 00:33:47.950
<v Speaker 0>What's it doing there? Up building.

00:33:50.830 --> 00:33:52.590
<v Speaker 0>Alright. So let's assume this works. Right?

00:33:53.925 --> 00:33:57.685
<v Speaker 0>Of course. Right. We need the output public

00:33:57.685 --> 00:33:58.565
<v Speaker 0>directory.

00:34:02.485 --> 00:34:06.005
<v Speaker 0>Okay. So because the complete the compiled assets

00:34:06.005 --> 00:34:08.085
<v Speaker 0>are not something we need available locally, we're

00:34:08.085 --> 00:34:10.460
<v Speaker 0>going to use a named volume.

00:34:13.579 --> 00:34:16.619
<v Speaker 0>So what we'll do is node public.

00:34:17.420 --> 00:34:19.420
<v Speaker 0>Sorry. An anonymous volume. We don't need a

00:34:19.420 --> 00:34:21.500
<v Speaker 0>name. We're just saying make the just expose

00:34:21.500 --> 00:34:23.179
<v Speaker 0>this directory as a volume.

00:34:23.579 --> 00:34:23.900
<v Speaker 1>Yeah.

00:34:25.265 --> 00:34:27.505
<v Speaker 0>Now what may happen here is that it

00:34:27.505 --> 00:34:29.265
<v Speaker 0>fails on the same step again

00:34:29.425 --> 00:34:30.465
<v Speaker 0>because

00:34:31.265 --> 00:34:32.465
<v Speaker 0>the CSS,

00:34:32.465 --> 00:34:33.105
<v Speaker 0>JS,

00:34:33.265 --> 00:34:36.465
<v Speaker 0>and other directories don't exist. I don't know

00:34:37.139 --> 00:34:39.059
<v Speaker 0>if MPM will attempt to create them. The

00:34:39.059 --> 00:34:40.900
<v Speaker 0>other challenge we have now

00:34:41.699 --> 00:34:43.540
<v Speaker 0>is I don't know

00:34:44.900 --> 00:34:47.460
<v Speaker 0>if we need anything from this public. I

00:34:47.460 --> 00:34:49.859
<v Speaker 0>think only the PHP file is needed by

00:34:49.859 --> 00:34:50.819
<v Speaker 0>the PHP container.

00:34:51.625 --> 00:34:52.345
<v Speaker 1>Why

00:34:52.665 --> 00:34:53.865
<v Speaker 1>don't we do it

00:34:54.185 --> 00:34:55.865
<v Speaker 1>using the files on host?

00:34:58.105 --> 00:34:59.945
<v Speaker 1>Why do we mount the host? Why mount

00:34:59.945 --> 00:35:00.505
<v Speaker 1>it?

00:35:02.505 --> 00:35:05.220
<v Speaker 0>I I so I guess this is more

00:35:05.220 --> 00:35:07.380
<v Speaker 0>a subjective thing from my point of view.

00:35:07.620 --> 00:35:10.180
<v Speaker 0>Because it's compelled assets, like, I was working

00:35:10.180 --> 00:35:11.860
<v Speaker 0>with c, if I was working with any

00:35:11.860 --> 00:35:13.700
<v Speaker 0>other compelled language, all those things I don't

00:35:13.700 --> 00:35:15.700
<v Speaker 0>necessarily need on my host. There there's something

00:35:15.700 --> 00:35:17.714
<v Speaker 0>I built. Help me a lot. I can

00:35:17.714 --> 00:35:19.154
<v Speaker 0>run my application, and when I kill the

00:35:19.154 --> 00:35:20.835
<v Speaker 0>containers, I want them to disappear.

00:35:21.394 --> 00:35:23.474
<v Speaker 0>I don't want them back on my host.

00:35:23.954 --> 00:35:26.675
<v Speaker 0>And the other aspect would be just that

00:35:27.875 --> 00:35:30.599
<v Speaker 0>if you want this to be ubiquitous across

00:35:30.599 --> 00:35:32.920
<v Speaker 0>all operating system, Docker for Mac does a

00:35:32.920 --> 00:35:34.920
<v Speaker 0>really good job of mapping

00:35:34.920 --> 00:35:38.359
<v Speaker 0>the ownership of the files. On Linux, those

00:35:38.359 --> 00:35:40.279
<v Speaker 0>files will be owned by Root, and you

00:35:40.279 --> 00:35:41.640
<v Speaker 0>have to then jump to a whole bunch

00:35:41.640 --> 00:35:43.400
<v Speaker 0>of other groups

00:35:43.785 --> 00:35:45.704
<v Speaker 0>Yeah. To map them back to a non

00:35:45.704 --> 00:35:47.385
<v Speaker 0>root user on your local host, which means

00:35:47.385 --> 00:35:49.464
<v Speaker 0>if I were locally, I'd be able I'd

00:35:49.464 --> 00:35:50.825
<v Speaker 0>try and run RM on that file, and

00:35:50.825 --> 00:35:51.944
<v Speaker 0>it would say, hey. You need to sit

00:35:51.944 --> 00:35:53.865
<v Speaker 0>with that. And that always really frustrating from

00:35:53.865 --> 00:35:55.385
<v Speaker 0>someone because you've learned that daily.

00:35:55.625 --> 00:35:57.385
<v Speaker 0>The other aspect of it is

00:35:58.025 --> 00:35:59.625
<v Speaker 0>do I have another aspect of it?

00:36:00.400 --> 00:36:03.200
<v Speaker 0>And Yeah. I Maybe there's any front end

00:36:03.280 --> 00:36:04.160
<v Speaker 1>devs

00:36:04.560 --> 00:36:05.360
<v Speaker 1>participating.

00:36:05.360 --> 00:36:07.200
<v Speaker 1>They can comment, say, like, how often do

00:36:07.200 --> 00:36:08.080
<v Speaker 1>you actually

00:36:08.720 --> 00:36:09.600
<v Speaker 1>look at

00:36:10.080 --> 00:36:11.760
<v Speaker 1>the compiled assets?

00:36:12.400 --> 00:36:13.200
<v Speaker 1>Is it never?

00:36:15.645 --> 00:36:17.725
<v Speaker 0>I I'm gonna assume never. And, also, I

00:36:17.725 --> 00:36:19.645
<v Speaker 0>don't want people to have I I don't

00:36:19.645 --> 00:36:21.405
<v Speaker 0>want it to be too easy for people

00:36:21.405 --> 00:36:23.965
<v Speaker 0>to work locally and in a container at

00:36:23.965 --> 00:36:25.645
<v Speaker 0>the same time. I I want a workflow

00:36:25.645 --> 00:36:27.725
<v Speaker 0>that allows people to ignore Docker altogether if

00:36:27.725 --> 00:36:30.045
<v Speaker 0>they really want to work locally or use

00:36:30.045 --> 00:36:31.165
<v Speaker 0>a container based workflow.

00:36:31.779 --> 00:36:33.380
<v Speaker 0>If you end up in a mishmash of

00:36:33.380 --> 00:36:35.700
<v Speaker 0>both because I generate assets in a container

00:36:35.700 --> 00:36:37.299
<v Speaker 0>and then try to do something with them

00:36:37.299 --> 00:36:37.940
<v Speaker 0>locally,

00:36:38.259 --> 00:36:40.420
<v Speaker 0>they're compelling in something that like, the targets

00:36:40.420 --> 00:36:42.339
<v Speaker 0>are different, and I just I think that

00:36:42.339 --> 00:36:43.380
<v Speaker 0>could be rather complicated.

00:36:44.025 --> 00:36:45.704
<v Speaker 1>Yeah. I don't have a big clear picture

00:36:45.704 --> 00:36:47.865
<v Speaker 1>of whether that stuff's useful for debug.

00:36:48.505 --> 00:36:51.224
<v Speaker 1>Because I think the the converse

00:36:51.224 --> 00:36:52.105
<v Speaker 1>thing is

00:36:53.145 --> 00:36:55.625
<v Speaker 1>associates in PHP world with things like VAR

00:36:55.625 --> 00:36:58.424
<v Speaker 1>folders and compile you know, compiled containers and

00:36:58.424 --> 00:36:58.585
<v Speaker 1>things.

00:36:59.810 --> 00:37:00.450
<v Speaker 1>People

00:37:00.690 --> 00:37:03.010
<v Speaker 1>go looking for that stuff on their host,

00:37:03.010 --> 00:37:04.770
<v Speaker 1>and then they're confused because

00:37:05.010 --> 00:37:07.090
<v Speaker 1>it's not there. So I go look in

00:37:07.090 --> 00:37:08.690
<v Speaker 1>this public folder for the assets and get

00:37:09.890 --> 00:37:12.345
<v Speaker 1>have a little mental roadblock because there's an

00:37:12.345 --> 00:37:14.505
<v Speaker 1>older version of the compiled assets in there

00:37:14.505 --> 00:37:15.785
<v Speaker 1>from when I run it on host, and

00:37:15.785 --> 00:37:17.705
<v Speaker 1>I'm trying to set breakpoints.

00:37:18.744 --> 00:37:21.225
<v Speaker 1>So I don't I don't know how how

00:37:21.225 --> 00:37:22.985
<v Speaker 1>important that would be. Let's do it with

00:37:22.985 --> 00:37:23.385
<v Speaker 1>the volume.

00:37:24.920 --> 00:37:27.000
<v Speaker 0>Alright. So the first thing we're gonna notice

00:37:27.000 --> 00:37:28.680
<v Speaker 0>now is that my node modules is gone.

00:37:28.680 --> 00:37:31.080
<v Speaker 0>So we're gonna process that across runs.

00:37:31.640 --> 00:37:32.840
<v Speaker 0>That was a

00:37:33.720 --> 00:37:35.480
<v Speaker 0>dapt mistake of me. So what we're seeing

00:37:35.480 --> 00:37:36.680
<v Speaker 0>now is

00:37:37.095 --> 00:37:39.815
<v Speaker 0>node modules, stick in that container side volume,

00:37:39.815 --> 00:37:41.895
<v Speaker 0>public stick in that container side volume.

00:37:42.455 --> 00:37:44.375
<v Speaker 0>We'll drop out of those, run it again.

00:37:44.375 --> 00:37:46.375
<v Speaker 0>We'll have access to those two volumes.

00:37:47.175 --> 00:37:47.735
<v Speaker 1>I

00:37:48.215 --> 00:37:49.815
<v Speaker 1>honestly thought volumes had to be named.

00:37:50.880 --> 00:37:52.799
<v Speaker 1>I think I can take a few characters

00:37:52.799 --> 00:37:54.480
<v Speaker 1>out of a lot of my files now.

00:37:55.680 --> 00:37:57.119
<v Speaker 0>No. They they only have to be named

00:37:57.119 --> 00:37:58.559
<v Speaker 0>if you need to be able to reference

00:37:58.559 --> 00:37:59.119
<v Speaker 0>them

00:37:59.519 --> 00:38:01.839
<v Speaker 0>through other tools. Now that will be something

00:38:01.839 --> 00:38:03.760
<v Speaker 0>that we do with the public directory. We

00:38:03.760 --> 00:38:05.359
<v Speaker 0>are gonna expose this to NGINX.

00:38:05.705 --> 00:38:07.305
<v Speaker 0>But right now, it does not need to

00:38:07.305 --> 00:38:07.945
<v Speaker 0>be there.

00:38:08.505 --> 00:38:10.745
<v Speaker 1>And an image an image can

00:38:11.065 --> 00:38:13.225
<v Speaker 1>declare a volume as well in the build?

00:38:14.985 --> 00:38:17.465
<v Speaker 0>It can pass a hint to the container

00:38:17.465 --> 00:38:20.680
<v Speaker 0>run time that when you run this image,

00:38:20.680 --> 00:38:22.040
<v Speaker 0>this should be exposed

00:38:22.280 --> 00:38:24.840
<v Speaker 0>and consumable through other containers if you wish.

00:38:25.000 --> 00:38:26.520
<v Speaker 1>Yep. Yes. Okay.

00:38:26.680 --> 00:38:29.240
<v Speaker 1>Sure. There's some very weird semantics there, but

00:38:29.400 --> 00:38:29.880
<v Speaker 0>yes.

00:38:30.600 --> 00:38:32.360
<v Speaker 0>So what I'm gonna do is just drop

00:38:32.360 --> 00:38:33.640
<v Speaker 0>out of this and pop back in.

00:38:34.575 --> 00:38:36.415
<v Speaker 0>What we should see is

00:38:38.015 --> 00:38:39.775
<v Speaker 0>I'm empty node modules.

00:38:40.975 --> 00:38:42.655
<v Speaker 0>I wonder if it's not named, I'm not

00:38:42.655 --> 00:38:43.855
<v Speaker 0>gonna get persistence.

00:38:44.734 --> 00:38:47.000
<v Speaker 1>You just dropped out of the image, didn't

00:38:47.000 --> 00:38:49.160
<v Speaker 1>you? The container. Yeah. To show to show

00:38:49.160 --> 00:38:51.240
<v Speaker 0>that it would still be there. Oh, you're

00:38:51.240 --> 00:38:52.440
<v Speaker 1>still logged into it?

00:38:58.200 --> 00:38:59.160
<v Speaker 0>Let's name it

00:39:00.895 --> 00:39:01.615
<v Speaker 0>Public.

00:39:02.575 --> 00:39:04.494
<v Speaker 0>Or is it because I'm using Docker Proposal

00:39:04.655 --> 00:39:06.015
<v Speaker 0>ah, there we go.

00:39:10.734 --> 00:39:12.895
<v Speaker 0>Yes. This is I because I'm using a

00:39:12.895 --> 00:39:14.095
<v Speaker 0>weird syntax.

00:39:14.095 --> 00:39:14.415
<v Speaker 0>So

00:39:21.369 --> 00:39:22.970
<v Speaker 0>I'm not gonna be able to tell it

00:39:22.970 --> 00:39:25.210
<v Speaker 0>to consume that same volume each time unless

00:39:25.210 --> 00:39:27.530
<v Speaker 0>I name it. Okay. Yeah. That's just because

00:39:27.530 --> 00:39:29.050
<v Speaker 0>of the way I'm running this container.

00:39:30.375 --> 00:39:31.495
<v Speaker 0>Let's try that.

00:39:39.095 --> 00:39:41.095
<v Speaker 0>Oh, I did declare it. K.

00:39:43.700 --> 00:39:45.619
<v Speaker 0>So we need a node modules,

00:39:46.660 --> 00:39:48.500
<v Speaker 0>and we can just use a Tilde which

00:39:48.500 --> 00:39:51.220
<v Speaker 0>says use it to fall configuration.

00:39:54.579 --> 00:39:56.980
<v Speaker 0>Now anytime I use the Docker Propose run,

00:39:57.395 --> 00:40:00.194
<v Speaker 0>it should always use those named volumes, which

00:40:00.194 --> 00:40:01.635
<v Speaker 0>have now been created here.

00:40:01.795 --> 00:40:04.595
<v Speaker 0>And there's nothing special about them. Well, that

00:40:04.595 --> 00:40:05.315
<v Speaker 0>runs

00:40:06.515 --> 00:40:07.635
<v Speaker 0>oh, I won't be able to see it

00:40:07.635 --> 00:40:08.435
<v Speaker 0>on a Mac, will there?

00:40:10.590 --> 00:40:12.590
<v Speaker 0>No. I'm not gonna so it's just all

00:40:12.590 --> 00:40:14.510
<v Speaker 0>it does is create a directory under varlib

00:40:14.510 --> 00:40:15.710
<v Speaker 0>docker volumes.

00:40:15.950 --> 00:40:17.630
<v Speaker 0>And that's what that's where that fails. Let's

00:40:17.790 --> 00:40:20.030
<v Speaker 0>there's nothing magic or sophisticated

00:40:20.030 --> 00:40:20.990
<v Speaker 0>about that approach.

00:40:23.945 --> 00:40:25.625
<v Speaker 0>And I should be able to drop out

00:40:25.625 --> 00:40:26.665
<v Speaker 0>this container,

00:40:26.665 --> 00:40:29.065
<v Speaker 0>pop back in, run an LS on node

00:40:29.065 --> 00:40:30.345
<v Speaker 0>modules. And we won't have to run that

00:40:30.345 --> 00:40:32.265
<v Speaker 0>again, though, for as long as that that

00:40:32.265 --> 00:40:33.865
<v Speaker 0>named volume makes us do.

00:40:34.345 --> 00:40:36.425
<v Speaker 0>If I were using Docker Compose up, I

00:40:36.425 --> 00:40:39.400
<v Speaker 0>wouldn't need to name that volume. But Right.

00:40:39.720 --> 00:40:40.360
<v Speaker 0>Okay.

00:40:40.920 --> 00:40:43.080
<v Speaker 0>So l s with modules,

00:40:43.400 --> 00:40:44.360
<v Speaker 0>dropout,

00:40:44.760 --> 00:40:46.680
<v Speaker 0>spin up, hope for the best. Don't be

00:40:46.680 --> 00:40:47.320
<v Speaker 0>wrong.

00:40:47.800 --> 00:40:48.840
<v Speaker 0>Okay.

00:40:49.640 --> 00:40:51.000
<v Speaker 0>So then I can run n p m

00:40:51.000 --> 00:40:52.600
<v Speaker 0>I. It should just be really fast.

00:40:55.655 --> 00:40:57.175
<v Speaker 0>Well, as fast as n p m I

00:40:57.175 --> 00:40:58.135
<v Speaker 0>can be. But

00:40:58.695 --> 00:40:59.415
<v Speaker 0>okay.

00:41:01.575 --> 00:41:03.895
<v Speaker 0>Next step was we wanna try

00:41:04.935 --> 00:41:07.580
<v Speaker 0>we'll try running dev without watch first, see

00:41:07.580 --> 00:41:09.500
<v Speaker 0>if it has a problem with that public

00:41:09.500 --> 00:41:11.820
<v Speaker 0>directory and whether we actually need to create

00:41:11.820 --> 00:41:12.540
<v Speaker 0>those

00:41:12.620 --> 00:41:14.060
<v Speaker 0>subdirectories or not.

00:41:21.900 --> 00:41:23.915
<v Speaker 0>But I'm assuming if they don't exist. I

00:41:23.915 --> 00:41:26.315
<v Speaker 0>mean, maybe not creating the public directory, but

00:41:26.315 --> 00:41:27.835
<v Speaker 0>I would hope that no one is happy

00:41:27.835 --> 00:41:30.235
<v Speaker 0>to create the subsequent directories.

00:41:30.475 --> 00:41:31.835
<v Speaker 1>What what other files were in there? Is

00:41:31.835 --> 00:41:33.275
<v Speaker 1>it just robots text?

00:41:35.890 --> 00:41:38.930
<v Speaker 0>So this persistence here tells me that this

00:41:38.930 --> 00:41:41.090
<v Speaker 0>is maybe a real file. I thought it

00:41:41.090 --> 00:41:43.730
<v Speaker 0>should exist. It is not ephemeral or generated.

00:41:44.610 --> 00:41:45.490
<v Speaker 1>Let's see.

00:41:45.890 --> 00:41:46.370
<v Speaker 1>Yeah.

00:41:57.295 --> 00:41:58.895
<v Speaker 0>P s good. Not very happy.

00:41:59.375 --> 00:42:00.494
<v Speaker 0>Is it big?

00:42:07.080 --> 00:42:09.720
<v Speaker 0>Let's

00:42:09.720 --> 00:42:10.840
<v Speaker 0>take a look.

00:42:11.080 --> 00:42:12.600
<v Speaker 0>Public CSS,

00:42:12.600 --> 00:42:13.720
<v Speaker 0>app CSS,

00:42:14.520 --> 00:42:15.560
<v Speaker 0>batch h,

00:42:15.720 --> 00:42:16.760
<v Speaker 0>1.2 meg,

00:42:20.494 --> 00:42:21.694
<v Speaker 0>74,000

00:42:21.694 --> 00:42:22.494
<v Speaker 0>lanes.

00:42:26.414 --> 00:42:28.734
<v Speaker 0>Let's just close the oh, I've actually closed

00:42:28.734 --> 00:42:30.815
<v Speaker 0>my whole course. Alright. Okay. It's been back

00:42:30.815 --> 00:42:31.055
<v Speaker 0>up.

00:42:33.520 --> 00:42:35.119
<v Speaker 0>Lost my directory now.

00:42:35.200 --> 00:42:35.920
<v Speaker 0>Okay.

00:42:36.480 --> 00:42:37.200
<v Speaker 0>Good.

00:42:38.799 --> 00:42:40.240
<v Speaker 0>Back into my initial.

00:42:40.880 --> 00:42:42.720
<v Speaker 0>So let's maybe stop in that fail and

00:42:42.720 --> 00:42:44.720
<v Speaker 0>then then Well, it's so big. It must

00:42:44.720 --> 00:42:45.520
<v Speaker 1>be compiled.

00:42:46.674 --> 00:42:47.395
<v Speaker 1>Right?

00:42:49.795 --> 00:42:51.234
<v Speaker 0>It's not compiled.

00:42:53.795 --> 00:42:55.395
<v Speaker 0>Wow. This is

00:42:57.234 --> 00:42:59.395
<v Speaker 0>oh, this is the tailwind fail.

00:43:00.180 --> 00:43:01.540
<v Speaker 1>No one's written that.

00:43:03.460 --> 00:43:05.780
<v Speaker 0>But it may just be pasted pasted

00:43:05.780 --> 00:43:06.420
<v Speaker 0>in

00:43:06.980 --> 00:43:08.820
<v Speaker 0>the whole tailwind for configuration,

00:43:08.820 --> 00:43:11.220
<v Speaker 0>which will then be parsed in post CSS

00:43:11.220 --> 00:43:12.660
<v Speaker 0>to be minimized

00:43:12.980 --> 00:43:13.540
<v Speaker 0>later.

00:43:16.205 --> 00:43:18.765
<v Speaker 0>So that's meant see, now now we're in

00:43:18.765 --> 00:43:21.005
<v Speaker 0>this really weird territory where public is not

00:43:21.005 --> 00:43:23.005
<v Speaker 0>an ephemeral directory and is

00:43:24.605 --> 00:43:25.245
<v Speaker 0>is

00:43:25.565 --> 00:43:26.845
<v Speaker 0>not yeah.

00:43:27.645 --> 00:43:28.045
<v Speaker 0>Damn.

00:43:29.230 --> 00:43:31.070
<v Speaker 1>So what are the options? We could

00:43:32.590 --> 00:43:33.870
<v Speaker 1>build it into the image.

00:43:36.430 --> 00:43:38.350
<v Speaker 1>Assuming none of that stuff's actually gonna get

00:43:38.350 --> 00:43:39.070
<v Speaker 1>edited.

00:43:39.950 --> 00:43:43.150
<v Speaker 0>Let's mount it in first. And then Yeah.

00:43:45.785 --> 00:43:47.224
<v Speaker 0>Sorry. What I was gonna say there is

00:43:47.224 --> 00:43:48.905
<v Speaker 0>let's mount it in,

00:43:50.744 --> 00:43:53.464
<v Speaker 0>run the the development steps, see where that

00:43:53.464 --> 00:43:54.505
<v Speaker 0>asset completion

00:43:55.145 --> 00:43:56.984
<v Speaker 0>I mean Yeah. It must be out here.

00:43:56.984 --> 00:43:59.305
<v Speaker 0>Right? That's why these JS files are numbered.

00:44:01.040 --> 00:44:02.640
<v Speaker 0>In fact, here's what we can do.

00:44:03.360 --> 00:44:04.800
<v Speaker 0>Locally, let's

00:44:05.040 --> 00:44:06.560
<v Speaker 0>do an MPM.

00:44:07.120 --> 00:44:08.960
<v Speaker 0>Must be, like, a cache clear. Right?

00:44:10.240 --> 00:44:12.000
<v Speaker 1>Mhmm. And you can see if they're in

00:44:12.000 --> 00:44:12.320
<v Speaker 1>git.

00:44:14.375 --> 00:44:16.934
<v Speaker 0>Are we git to ignore? Okay. Ignore. Yeah.

00:44:16.934 --> 00:44:18.055
<v Speaker 0>That's a good idea.

00:44:19.095 --> 00:44:20.055
<v Speaker 1>Up a bit.

00:44:23.415 --> 00:44:25.175
<v Speaker 0>Yeah. CSS is there.

00:44:25.494 --> 00:44:26.934
<v Speaker 1>So they're the ephemeral ones.

00:44:30.940 --> 00:44:31.980
<v Speaker 0>So where

00:44:32.780 --> 00:44:35.260
<v Speaker 0>is that app CSS been generated if it's

00:44:35.260 --> 00:44:36.940
<v Speaker 0>not by the MPM?

00:44:37.660 --> 00:44:40.300
<v Speaker 1>Did you run it did you run it

00:44:40.300 --> 00:44:41.180
<v Speaker 1>locally

00:44:41.340 --> 00:44:42.380
<v Speaker 1>in the past

00:44:42.620 --> 00:44:43.420
<v Speaker 1>on host

00:44:44.415 --> 00:44:45.455
<v Speaker 1>last time?

00:44:46.975 --> 00:44:48.095
<v Speaker 1>Something like that.

00:44:52.095 --> 00:44:52.895
<v Speaker 0>Yes?

00:44:54.655 --> 00:44:56.015
<v Speaker 1>The native is in

00:44:56.735 --> 00:44:57.375
<v Speaker 1>git ignore.

00:45:02.020 --> 00:45:04.180
<v Speaker 0>But it's not mentioned that to the container.

00:45:06.820 --> 00:45:08.260
<v Speaker 1>I'm

00:45:08.260 --> 00:45:10.020
<v Speaker 1>saying you may have just generated it on

00:45:10.020 --> 00:45:11.860
<v Speaker 1>host when you're messing around with the code

00:45:11.860 --> 00:45:12.420
<v Speaker 1>previously.

00:45:14.425 --> 00:45:17.385
<v Speaker 0>Yeah. Okay. But how did we do that

00:45:17.385 --> 00:45:18.025
<v Speaker 0>then?

00:45:18.585 --> 00:45:20.744
<v Speaker 0>How can we how can we generate that

00:45:20.744 --> 00:45:21.465
<v Speaker 0>again?

00:45:22.585 --> 00:45:25.065
<v Speaker 1>Delete it or rename it and see if

00:45:25.065 --> 00:45:26.745
<v Speaker 1>it comes back again when you run the

00:45:26.905 --> 00:45:27.464
<v Speaker 1>command.

00:45:28.599 --> 00:45:30.680
<v Speaker 0>Alright. So we wanna go local. We want

00:45:30.680 --> 00:45:33.400
<v Speaker 0>to delete public CSS, app CSS,

00:45:33.720 --> 00:45:35.560
<v Speaker 1>and then we want to run the npm

00:45:35.560 --> 00:45:36.600
<v Speaker 0>run dev.

00:45:37.880 --> 00:45:39.560
<v Speaker 0>And your hypothesis beam, we wanna know if

00:45:39.560 --> 00:45:40.680
<v Speaker 0>that's created set again.

00:45:41.079 --> 00:45:41.400
<v Speaker 1>Yeah.

00:45:42.725 --> 00:45:44.485
<v Speaker 1>Could it be created by install?

00:45:44.645 --> 00:45:46.245
<v Speaker 1>I don't know if NPM drops stuff out

00:45:46.245 --> 00:45:47.445
<v Speaker 1>of node modules.

00:45:53.525 --> 00:45:55.365
<v Speaker 0>It was generated right there.

00:45:59.510 --> 00:46:01.670
<v Speaker 1>So we can use the git ignore as

00:46:01.670 --> 00:46:03.350
<v Speaker 1>a list of things that we want to

00:46:03.350 --> 00:46:04.310
<v Speaker 1>have as volumes.

00:46:06.710 --> 00:46:08.950
<v Speaker 1>It's effectively a list of the ephemeral folders.

00:46:08.950 --> 00:46:09.110
<v Speaker 1>Right?

00:46:13.205 --> 00:46:14.245
<v Speaker 0>Yes.

00:46:20.005 --> 00:46:22.485
<v Speaker 0>So you're let me clarify what you're saying

00:46:22.485 --> 00:46:25.205
<v Speaker 0>there. Is you believe the problem that this

00:46:25.205 --> 00:46:28.010
<v Speaker 0>is failing is because it's missing access

00:46:28.330 --> 00:46:29.210
<v Speaker 0>something?

00:46:30.410 --> 00:46:32.570
<v Speaker 0>And if we tweak our

00:46:34.410 --> 00:46:35.930
<v Speaker 0>so so that would mean there's something on

00:46:35.930 --> 00:46:37.690
<v Speaker 0>the public directory that we're not mounting that

00:46:37.690 --> 00:46:38.250
<v Speaker 0>is needed.

00:46:39.224 --> 00:46:39.865
<v Speaker 1>Yeah.

00:46:41.224 --> 00:46:43.305
<v Speaker 0>But if we look at this direction Probably

00:46:43.305 --> 00:46:44.825
<v Speaker 1>something how unrelated.

00:46:48.424 --> 00:46:50.825
<v Speaker 0>I just don't see what it could be.

00:46:55.339 --> 00:46:57.020
<v Speaker 1>You could try running it with a

00:46:57.660 --> 00:46:59.900
<v Speaker 1>mount of everything. Just mount dot and then

00:46:59.900 --> 00:47:01.820
<v Speaker 1>just to debug, check that works,

00:47:03.339 --> 00:47:05.019
<v Speaker 1>and take things out rather than adding things

00:47:05.019 --> 00:47:05.260
<v Speaker 1>in.

00:47:11.095 --> 00:47:12.055
<v Speaker 0>Excuse me.

00:47:12.935 --> 00:47:14.535
<v Speaker 0>Okay. Let's try it.

00:47:15.895 --> 00:47:17.735
<v Speaker 0>But we're saying we want to mount everything

00:47:17.735 --> 00:47:18.375
<v Speaker 0>to node.

00:47:19.340 --> 00:47:20.060
<v Speaker 0>Mhmm.

00:47:21.580 --> 00:47:23.900
<v Speaker 0>Node modules go over the top. I'm hoping

00:47:23.900 --> 00:47:24.780
<v Speaker 0>that works.

00:47:25.500 --> 00:47:26.860
<v Speaker 0>It can be a bit weird trying to

00:47:26.860 --> 00:47:29.500
<v Speaker 0>work out the order that's gonna happen in

00:47:30.620 --> 00:47:32.060
<v Speaker 0>and then MPM or dev.

00:47:33.335 --> 00:47:34.935
<v Speaker 1>And assuming that the

00:47:37.015 --> 00:47:38.694
<v Speaker 1>yeah. It didn't look like there were any

00:47:38.694 --> 00:47:40.455
<v Speaker 1>specific files get ignored.

00:47:41.415 --> 00:47:43.415
<v Speaker 1>We could check that. It looks like they

00:47:43.415 --> 00:47:44.615
<v Speaker 1>have got distinction between,

00:47:45.300 --> 00:47:48.340
<v Speaker 1>you know, ephemeral folders and non ephemeral folders.

00:47:48.340 --> 00:47:49.460
<v Speaker 1>So we could use that list in the

00:47:49.460 --> 00:47:50.420
<v Speaker 1>gitignore

00:47:50.660 --> 00:47:52.020
<v Speaker 1>as a list of things that we need

00:47:52.020 --> 00:47:53.620
<v Speaker 1>to mount as volumes.

00:47:56.580 --> 00:47:58.420
<v Speaker 0>Okay. I think that's a

00:47:58.820 --> 00:47:59.460
<v Speaker 0>solid idea.

00:48:01.835 --> 00:48:03.355
<v Speaker 0>Alright. So that worked.

00:48:03.914 --> 00:48:05.194
<v Speaker 0>So we

00:48:05.194 --> 00:48:06.635
<v Speaker 0>still wanna be in a position where we

00:48:06.635 --> 00:48:07.675
<v Speaker 0>don't have this.

00:48:08.954 --> 00:48:12.075
<v Speaker 0>We want this. So what what consider missing

00:48:12.075 --> 00:48:14.714
<v Speaker 0>then? Split open, get ignore, see what's there.

00:48:16.380 --> 00:48:17.980
<v Speaker 1>Because if we probably we're having was we're

00:48:18.140 --> 00:48:20.619
<v Speaker 1>we think we're having was is mounting public.

00:48:22.460 --> 00:48:23.980
<v Speaker 0>I I don't think it's public. I think

00:48:23.980 --> 00:48:26.460
<v Speaker 0>we're missing something from the root now. Okay.

00:48:26.460 --> 00:48:27.500
<v Speaker 0>I I think.

00:48:31.145 --> 00:48:32.425
<v Speaker 0>Okay. So

00:48:34.425 --> 00:48:36.665
<v Speaker 0>we got tailwind. We got webpack.

00:48:45.260 --> 00:48:47.500
<v Speaker 1>We don't have we don't have package lock,

00:48:47.500 --> 00:48:48.140
<v Speaker 1>do we?

00:48:48.860 --> 00:48:50.220
<v Speaker 1>It can't be that. It

00:48:52.300 --> 00:48:52.860
<v Speaker 0>could be.

00:48:54.075 --> 00:48:55.915
<v Speaker 0>Maybe maybe we should rule it.

00:48:56.555 --> 00:48:58.395
<v Speaker 0>Maybe we should rule that. Oh, wait. Do

00:48:58.395 --> 00:49:00.474
<v Speaker 0>we need Bootstrap? No. We have the PHP

00:49:00.474 --> 00:49:03.515
<v Speaker 0>Bootstrap, so it's not like a JavaScript Bootstrap.

00:49:04.234 --> 00:49:04.875
<v Speaker 0>At

00:49:05.035 --> 00:49:07.755
<v Speaker 0>nope. It's all very PHP centric. Opt is

00:49:07.755 --> 00:49:10.780
<v Speaker 0>my stuff. Database is not important now.

00:49:12.540 --> 00:49:13.980
<v Speaker 0>We source these.

00:49:14.460 --> 00:49:16.620
<v Speaker 0>We mount all of that in any way.

00:49:17.260 --> 00:49:18.859
<v Speaker 0>Storage PHP

00:49:18.859 --> 00:49:19.339
<v Speaker 0>test.

00:49:20.795 --> 00:49:21.675
<v Speaker 0>I mean,

00:49:22.555 --> 00:49:24.955
<v Speaker 0>let's add the lock, and then I'm gonna

00:49:26.155 --> 00:49:28.235
<v Speaker 0>so let's roll it out. Right? Yep.

00:49:33.115 --> 00:49:34.795
<v Speaker 0>So no with that package

00:49:34.795 --> 00:49:36.955
<v Speaker 0>lock

00:49:35.940 --> 00:49:36.820
<v Speaker 0>JSON.

00:49:37.540 --> 00:49:39.060
<v Speaker 0>I want to stick it down next to

00:49:39.060 --> 00:49:40.900
<v Speaker 0>this one. Alright.

00:49:41.460 --> 00:49:42.980
<v Speaker 0>So we drop it at this. We spin

00:49:42.980 --> 00:49:44.020
<v Speaker 0>this back up.

00:49:50.260 --> 00:49:52.615
<v Speaker 0>Thought it was the name. Alright.

00:49:54.215 --> 00:49:55.815
<v Speaker 0>So now we have our package or package

00:49:55.815 --> 00:49:56.615
<v Speaker 0>lock.

00:49:59.655 --> 00:50:01.575
<v Speaker 0>Should I blow in node modules to rule

00:50:01.575 --> 00:50:03.175
<v Speaker 0>that out now that we're bringing in this

00:50:03.175 --> 00:50:03.975
<v Speaker 0>lock and bail?

00:50:05.130 --> 00:50:07.049
<v Speaker 0>It's in We can just we'll just trust

00:50:07.049 --> 00:50:09.450
<v Speaker 0>MPM to kinda fix that up just now.

00:50:15.690 --> 00:50:16.809
<v Speaker 0>And if this works,

00:50:17.244 --> 00:50:19.484
<v Speaker 0>then we're actually in a position where there

00:50:19.484 --> 00:50:21.405
<v Speaker 0>is maybe a break

00:50:21.645 --> 00:50:24.045
<v Speaker 0>by automatically pulling in the updates. But I

00:50:24.045 --> 00:50:25.724
<v Speaker 0>am gonna refuse to believe that is the

00:50:25.724 --> 00:50:26.285
<v Speaker 0>case.

00:50:27.805 --> 00:50:29.964
<v Speaker 0>So you look at all these vulnerabilities

00:50:29.964 --> 00:50:31.405
<v Speaker 0>and there's lock fail version.

00:50:32.400 --> 00:50:33.120
<v Speaker 0>Yeah.

00:50:33.520 --> 00:50:35.200
<v Speaker 0>Right. This is this is the stuff you

00:50:35.200 --> 00:50:36.000
<v Speaker 0>don't want.

00:50:36.240 --> 00:50:37.680
<v Speaker 0>Okay. Run

00:50:38.079 --> 00:50:38.800
<v Speaker 0>dev.

00:50:39.920 --> 00:50:41.599
<v Speaker 0>But, of course, you also want your application

00:50:41.599 --> 00:50:44.079
<v Speaker 0>to work for a while. So That reminds

00:50:44.079 --> 00:50:46.960
<v Speaker 1>me. I did work in an environment where

00:50:49.335 --> 00:50:51.015
<v Speaker 1>there was some sort of corporate

00:50:51.255 --> 00:50:53.975
<v Speaker 1>vetting of which packages were allowed in.

00:50:55.095 --> 00:50:56.855
<v Speaker 1>So Yeah. They

00:50:56.855 --> 00:50:58.535
<v Speaker 1>had to have the lock file

00:50:59.015 --> 00:51:00.615
<v Speaker 1>in case one of their vendors went rogue

00:51:00.615 --> 00:51:01.975
<v Speaker 1>and stuck in some malware.

00:51:04.029 --> 00:51:05.630
<v Speaker 1>Sort of tightly regulated

00:51:06.349 --> 00:51:07.230
<v Speaker 1>setup.

00:51:08.990 --> 00:51:10.510
<v Speaker 1>Same error.

00:51:12.430 --> 00:51:14.109
<v Speaker 0>And that fail actually does exist.

00:51:16.345 --> 00:51:17.865
<v Speaker 1>Scroll up to the error message. Did it

00:51:17.865 --> 00:51:19.545
<v Speaker 1>have a trail leading forward

00:51:19.545 --> 00:51:20.185
<v Speaker 1>slash?

00:51:20.745 --> 00:51:22.505
<v Speaker 1>Yeah. Let me just again.

00:51:22.985 --> 00:51:25.385
<v Speaker 0>Should've cat should've catered that fail.

00:51:25.705 --> 00:51:28.505
<v Speaker 0>That 1.4 meg text file with 74,000

00:51:28.505 --> 00:51:29.385
<v Speaker 0>lines in it.

00:51:30.025 --> 00:51:32.070
<v Speaker 0>Let's just drag this up to

00:51:32.870 --> 00:51:35.350
<v Speaker 1>So node resources CSS up CSS.

00:51:39.590 --> 00:51:42.870
<v Speaker 0>Right. Or let's let's actually read the message.

00:51:42.870 --> 00:51:43.990
<v Speaker 0>Ah. Slash

00:51:44.045 --> 00:51:44.765
<v Speaker 0>public.

00:51:46.765 --> 00:51:50.045
<v Speaker 0>Root fail system public CSS app CSS.

00:51:50.045 --> 00:51:52.285
<v Speaker 0>Not slash node slash public.

00:51:53.405 --> 00:51:54.685
<v Speaker 0>So that's our issue.

00:51:58.460 --> 00:51:59.340
<v Speaker 0>Why?

00:52:01.580 --> 00:52:03.580
<v Speaker 0>It's great. One one thing we're not better

00:52:03.580 --> 00:52:04.619
<v Speaker 0>than is dot e n v.

00:52:08.775 --> 00:52:12.215
<v Speaker 0>Don't see anything particularly useful here.

00:52:13.494 --> 00:52:16.375
<v Speaker 1>So we think that somewhere there's a config

00:52:16.375 --> 00:52:18.535
<v Speaker 1>that tells it what folder to use. But

00:52:18.535 --> 00:52:20.215
<v Speaker 1>it must be relative because it's a

00:52:20.775 --> 00:52:22.760
<v Speaker 1>it's a project that one of the files

00:52:22.760 --> 00:52:23.800
<v Speaker 1>that didn't mount

00:52:25.000 --> 00:52:27.480
<v Speaker 1>tells it, use the current folder for this

00:52:27.480 --> 00:52:28.200
<v Speaker 1>install.

00:52:29.000 --> 00:52:29.880
<v Speaker 0>Indeed.

00:52:30.520 --> 00:52:32.440
<v Speaker 0>So let's take a look.

00:52:33.000 --> 00:52:33.400
<v Speaker 0>Is that

00:52:34.040 --> 00:52:36.185
<v Speaker 0>let's try and understand this. There's not gonna

00:52:36.185 --> 00:52:38.345
<v Speaker 1>be specific path anywhere because

00:52:44.185 --> 00:52:46.905
<v Speaker 0>So this is the post CSS right here.

00:52:59.080 --> 00:53:01.400
<v Speaker 0>We should use a Laravel mix. We do

00:53:01.400 --> 00:53:02.600
<v Speaker 0>have a Laravel

00:53:02.840 --> 00:53:04.760
<v Speaker 0>mix. Do we have a Laravel mix config?

00:53:04.760 --> 00:53:05.240
<v Speaker 0>Yeah. This

00:53:07.535 --> 00:53:10.015
<v Speaker 0>makes manifest. No. That's, like, the payload asset.

00:53:10.015 --> 00:53:11.295
<v Speaker 0>Okay. Something

00:53:12.255 --> 00:53:15.055
<v Speaker 0>in here is telling it where to find

00:53:18.655 --> 00:53:19.535
<v Speaker 0>those files.

00:53:24.880 --> 00:53:25.600
<v Speaker 0>So

00:53:25.839 --> 00:53:28.240
<v Speaker 0>the work's fine in the PHP environment. That's

00:53:28.240 --> 00:53:30.000
<v Speaker 0>worth pointing out. Like, if I come up

00:53:30.000 --> 00:53:30.640
<v Speaker 0>here

00:53:32.960 --> 00:53:34.400
<v Speaker 0>I don't That's my

00:53:34.994 --> 00:53:37.234
<v Speaker 1>It worked fine when we mounted everything.

00:53:37.795 --> 00:53:39.955
<v Speaker 0>Yeah. When we mount everything, it's fine.

00:53:41.315 --> 00:53:42.194
<v Speaker 1>In a in a

00:53:42.994 --> 00:53:45.075
<v Speaker 1>when we mounted everything into an NPM container

00:53:45.075 --> 00:53:46.994
<v Speaker 1>that doesn't have PHP, so there isn't a

00:53:46.994 --> 00:53:48.835
<v Speaker 1>PHP file doing it.

00:53:52.970 --> 00:53:54.650
<v Speaker 1>Is there anything it could be looking at

00:53:54.650 --> 00:53:55.690
<v Speaker 1>that isn't

00:53:56.490 --> 00:53:58.410
<v Speaker 1>right. So when we when we run it

00:53:58.410 --> 00:53:59.290
<v Speaker 1>normally,

00:53:59.690 --> 00:54:01.210
<v Speaker 1>it would look at, like, the current working

00:54:01.210 --> 00:54:02.170
<v Speaker 1>directory, probably.

00:54:03.384 --> 00:54:05.305
<v Speaker 1>The p w d or the c.

00:54:06.744 --> 00:54:08.505
<v Speaker 1>That will all get sent to the

00:54:09.625 --> 00:54:10.744
<v Speaker 1>working folder.

00:54:15.400 --> 00:54:16.920
<v Speaker 0>Let's try app env

00:54:18.360 --> 00:54:19.400
<v Speaker 0>on a web.

00:54:26.600 --> 00:54:27.800
<v Speaker 1>Can you look at the

00:54:28.680 --> 00:54:30.040
<v Speaker 1>mixed configuration again?

00:54:32.415 --> 00:54:33.295
<v Speaker 0>Yeah.

00:54:33.615 --> 00:54:34.095
<v Speaker 0>Sure.

00:54:37.695 --> 00:54:39.055
<v Speaker 0>Yeah. Alright. Okay.

00:54:39.615 --> 00:54:40.335
<v Speaker 0>So

00:54:40.415 --> 00:54:41.055
<v Speaker 0>this is

00:54:41.775 --> 00:54:43.055
<v Speaker 1>So if I'm just looking at some of

00:54:43.055 --> 00:54:43.775
<v Speaker 1>the docs.

00:54:43.935 --> 00:54:45.615
<v Speaker 1>That dot j s method

00:54:46.790 --> 00:54:48.710
<v Speaker 1>is source and a destination.

00:54:51.109 --> 00:54:52.710
<v Speaker 1>And that post CSS

00:54:52.710 --> 00:54:56.150
<v Speaker 1>mess this right hand the second parameters are

00:54:56.150 --> 00:54:57.110
<v Speaker 1>destinations

00:54:57.670 --> 00:54:57.990
<v Speaker 0>Yep.

00:54:59.755 --> 00:55:01.675
<v Speaker 1>Which look relative.

00:55:04.315 --> 00:55:06.875
<v Speaker 0>They do, which is why I'm assuming something

00:55:06.875 --> 00:55:09.675
<v Speaker 0>in dot e n v is to use

00:55:10.635 --> 00:55:12.970
<v Speaker 0>the current working directory, which is I was

00:55:12.970 --> 00:55:15.050
<v Speaker 0>hoping with the app and local.

00:55:16.010 --> 00:55:18.650
<v Speaker 0>Mean Is the current working directory not the

00:55:20.250 --> 00:55:20.890
<v Speaker 0>It is.

00:55:21.130 --> 00:55:21.930
<v Speaker 1>It is.

00:55:24.010 --> 00:55:26.010
<v Speaker 1>If you echo c w d or whatever.

00:55:27.425 --> 00:55:28.145
<v Speaker 0>Yeah.

00:55:28.785 --> 00:55:30.625
<v Speaker 0>Oh, I have p w d. Sorry.

00:55:32.385 --> 00:55:32.785
<v Speaker 1>Yeah.

00:55:42.310 --> 00:55:43.590
<v Speaker 0>It's gonna be something

00:55:44.069 --> 00:55:44.870
<v Speaker 0>so

00:55:45.670 --> 00:55:47.430
<v Speaker 0>easy and simple

00:55:50.710 --> 00:55:51.830
<v Speaker 0>if you know

00:55:54.069 --> 00:55:54.950
<v Speaker 1>if you know.

00:55:55.795 --> 00:55:58.675
<v Speaker 1>There's a method set public path.

00:56:02.115 --> 00:56:02.435
<v Speaker 0>But

00:56:07.795 --> 00:56:08.915
<v Speaker 0>Let's

00:56:08.915 --> 00:56:09.315
<v Speaker 0>try.

00:56:14.970 --> 00:56:16.730
<v Speaker 0>Oops. But in tier

00:56:18.009 --> 00:56:19.530
<v Speaker 0>front failures now.

00:56:21.769 --> 00:56:25.130
<v Speaker 0>Package dot JSON. There's nothing environment specific here.

00:56:25.855 --> 00:56:27.855
<v Speaker 1>Do we have the CSS directory?

00:56:31.615 --> 00:56:33.295
<v Speaker 1>Is it created at the point we're running

00:56:33.295 --> 00:56:35.375
<v Speaker 1>the command? Yeah. We we do have an

00:56:35.375 --> 00:56:37.935
<v Speaker 0>app dot CSS fail in that directory where

00:56:37.935 --> 00:56:39.615
<v Speaker 0>we run the develop command. Yeah.

00:56:40.430 --> 00:56:41.870
<v Speaker 0>I'm gonna take a look at

00:56:42.830 --> 00:56:44.910
<v Speaker 0>so we can actually see the web pack

00:56:44.910 --> 00:56:46.430
<v Speaker 0>config. And if we take a look at

00:56:46.430 --> 00:56:47.790
<v Speaker 0>that, that should expose

00:56:48.030 --> 00:56:50.110
<v Speaker 0>any environment variables that are needed.

00:56:52.110 --> 00:56:53.790
<v Speaker 0>So We need somebody knows how to use

00:56:53.790 --> 00:56:54.830
<v Speaker 1>mix on the chat, don't we?

00:56:55.765 --> 00:56:57.685
<v Speaker 0>Yeah. I was hoping for a magical comment

00:56:57.685 --> 00:56:59.765
<v Speaker 0>from somebody, but not today.

00:57:03.765 --> 00:57:06.405
<v Speaker 0>Right. So we've got them now. Let's take

00:57:06.405 --> 00:57:08.005
<v Speaker 0>a look at this actual config.

00:57:10.480 --> 00:57:12.240
<v Speaker 0>Right away, Max is trying to load something

00:57:12.240 --> 00:57:13.840
<v Speaker 0>from source index,

00:57:14.880 --> 00:57:15.920
<v Speaker 0>but that's from

00:57:17.039 --> 00:57:19.840
<v Speaker 0>its source. So it should be fine.

00:57:21.440 --> 00:57:22.960
<v Speaker 0>I've got edit task,

00:57:23.755 --> 00:57:25.115
<v Speaker 0>webpack builder.

00:57:26.715 --> 00:57:27.675
<v Speaker 0>That

00:57:28.155 --> 00:57:29.275
<v Speaker 0>wasn't very useful.

00:57:39.580 --> 00:57:41.820
<v Speaker 0>It just must be something.

00:57:50.315 --> 00:57:51.675
<v Speaker 1>Don't wanna rest the stream just to be

00:57:51.675 --> 00:57:53.115
<v Speaker 1>us reading the mixed document.

00:57:57.194 --> 00:57:59.035
<v Speaker 0>It is what it is. We're so we

00:57:59.035 --> 00:58:00.555
<v Speaker 0>said we're gonna slow it down, and we

00:58:00.555 --> 00:58:02.155
<v Speaker 0>were gonna do this properly,

00:58:02.155 --> 00:58:05.240
<v Speaker 0>and that means trying to learn new APIs.

00:58:05.800 --> 00:58:06.600
<v Speaker 1>Yeah.

00:58:07.080 --> 00:58:08.040
<v Speaker 0>Right. So

00:58:13.160 --> 00:58:14.600
<v Speaker 0>okay.

00:58:15.160 --> 00:58:16.599
<v Speaker 0>So it's

00:58:16.455 --> 00:58:18.615
<v Speaker 0>determined a path to the user's webpack mix

00:58:18.615 --> 00:58:20.295
<v Speaker 0>dot j s. Looks for

00:58:22.375 --> 00:58:23.975
<v Speaker 0>webpack dot mix.

00:58:26.775 --> 00:58:28.215
<v Speaker 0>We need to make sure that's in the

00:58:28.215 --> 00:58:28.935
<v Speaker 0>right path.

00:58:29.960 --> 00:58:31.800
<v Speaker 0>The route is then set

00:58:31.960 --> 00:58:33.080
<v Speaker 0>to the route.

00:58:35.880 --> 00:58:37.240
<v Speaker 0>Okay. This looks interesting.

00:58:43.895 --> 00:58:45.175
<v Speaker 1>So either looks at

00:58:47.735 --> 00:58:49.655
<v Speaker 1>yeah. It looks at process dot c w

00:58:49.655 --> 00:58:50.215
<v Speaker 1>d.

00:58:52.375 --> 00:58:55.015
<v Speaker 0>Yeah. On one one path.

00:58:55.015 --> 00:58:57.950
<v Speaker 0>So how can we ensure it takes that

00:58:57.950 --> 00:58:58.670
<v Speaker 0>path?

00:59:00.029 --> 00:59:02.590
<v Speaker 1>Put in Right. Okay. We're loading it.

00:59:03.470 --> 00:59:06.029
<v Speaker 0>So we do have webpack dot mix here,

00:59:06.029 --> 00:59:06.590
<v Speaker 0>which

00:59:09.470 --> 00:59:12.775
<v Speaker 0>kinda tells me that that should be in

00:59:12.775 --> 00:59:15.175
<v Speaker 0>setup.

00:59:25.850 --> 00:59:26.730
<v Speaker 0>Config.

00:59:27.130 --> 00:59:29.450
<v Speaker 0>Alright. So node ENB.

00:59:33.850 --> 00:59:35.210
<v Speaker 0>Okay. That just says that I have a

00:59:35.210 --> 00:59:36.090
<v Speaker 0>flag test.

00:59:42.145 --> 00:59:43.425
<v Speaker 0>Public path is

00:59:43.905 --> 00:59:44.945
<v Speaker 0>blank

00:59:47.345 --> 00:59:48.705
<v Speaker 0>resource rich

00:59:49.105 --> 00:59:50.145
<v Speaker 0>slash.

00:59:51.185 --> 00:59:52.065
<v Speaker 1>Is

00:59:52.785 --> 00:59:53.744
<v Speaker 1>that what we're looking for?

00:59:55.170 --> 00:59:57.730
<v Speaker 0>Resource view. We have two comments.

00:59:58.849 --> 00:59:59.570
<v Speaker 0>Oh.

01:00:01.330 --> 01:00:03.010
<v Speaker 0>They're not applicable.

01:00:03.250 --> 01:00:04.690
<v Speaker 0>I mean, this I read.

01:00:08.595 --> 01:00:10.675
<v Speaker 0>Okay. So

01:00:21.440 --> 01:00:23.600
<v Speaker 0>I feel like this should work. I feel

01:00:23.600 --> 01:00:25.200
<v Speaker 0>like we're mounting enough.

01:00:26.480 --> 01:00:27.760
<v Speaker 0>I mean, I know we're not.

01:00:29.280 --> 01:00:30.720
<v Speaker 1>So what was so what was that resource

01:00:30.720 --> 01:00:32.480
<v Speaker 1>route comp setting

01:00:32.640 --> 01:00:34.000
<v Speaker 1>that you just looked up?

01:00:34.400 --> 01:00:36.645
<v Speaker 1>It was set forward slash. Yeah. So I

01:00:36.645 --> 01:00:38.245
<v Speaker 0>think this is a default configuration.

01:00:38.245 --> 01:00:39.845
<v Speaker 0>So if we come into source

01:00:41.605 --> 01:00:44.245
<v Speaker 0>config, there is a resource route.

01:00:44.485 --> 01:00:45.285
<v Speaker 0>I

01:00:45.365 --> 01:00:47.205
<v Speaker 0>guess if we do a quick grab

01:00:48.085 --> 01:00:49.605
<v Speaker 1>But maybe that's for external.

01:00:52.380 --> 01:00:53.180
<v Speaker 0>Then

01:00:53.180 --> 01:00:53.900
<v Speaker 0>we

01:00:54.619 --> 01:00:56.940
<v Speaker 0>see that as over we can overwrite it

01:00:56.940 --> 01:00:58.300
<v Speaker 0>via the API.

01:01:04.059 --> 01:01:06.300
<v Speaker 0>If we call set resource group.

01:01:06.380 --> 01:01:06.700
<v Speaker 0>So

01:01:10.445 --> 01:01:12.045
<v Speaker 0>alright. So we it has to be a

01:01:12.045 --> 01:01:13.965
<v Speaker 0>fail. It works when we change the amount

01:01:13.965 --> 01:01:15.085
<v Speaker 0>to be a dot.

01:01:15.325 --> 01:01:15.965
<v Speaker 1>Yeah.

01:01:16.845 --> 01:01:18.845
<v Speaker 1>That's the bet that's really bugging me. We're

01:01:18.845 --> 01:01:20.685
<v Speaker 1>we're good developers. Right? We can do a,

01:01:20.685 --> 01:01:22.205
<v Speaker 1>like, a some binary

01:01:23.350 --> 01:01:24.230
<v Speaker 1>search.

01:01:25.590 --> 01:01:26.310
<v Speaker 1>Can you

01:01:27.670 --> 01:01:29.670
<v Speaker 0>I'm good about this file. Let's mount ENV

01:01:29.670 --> 01:01:32.310
<v Speaker 0>first. It's a really nice my thing because

01:01:32.310 --> 01:01:35.270
<v Speaker 0>it just feels instinctively like that is the

01:01:35.270 --> 01:01:35.990
<v Speaker 0>file.

01:01:36.230 --> 01:01:36.790
<v Speaker 0>I mean,

01:01:38.685 --> 01:01:39.965
<v Speaker 0>I guess I don't need to mind that

01:01:39.965 --> 01:01:41.565
<v Speaker 0>we can use ENV file.

01:01:43.085 --> 01:01:44.605
<v Speaker 0>I don't know. Because we had that syntax

01:01:44.605 --> 01:01:46.045
<v Speaker 0>issue last time. Okay.

01:01:48.765 --> 01:01:52.045
<v Speaker 0>Dot ENV to slash node dot ENV.

01:01:52.125 --> 01:01:53.805
<v Speaker 0>Let's drop out

01:01:55.400 --> 01:01:57.240
<v Speaker 0>and see if that changes

01:01:58.519 --> 01:01:59.559
<v Speaker 0>how this code run.

01:02:14.005 --> 01:02:16.485
<v Speaker 0>And it does not. Okay. So let's mount

01:02:16.485 --> 01:02:18.485
<v Speaker 0>and let's just keep adding files.

01:02:20.910 --> 01:02:22.270
<v Speaker 1>We'll add half of them.

01:02:24.670 --> 01:02:26.670
<v Speaker 0>You want a binary search that fails in

01:02:26.670 --> 01:02:27.869
<v Speaker 0>the missing configuration?

01:02:30.349 --> 01:02:31.710
<v Speaker 1>Are we are we assuming it's a file

01:02:31.710 --> 01:02:32.349
<v Speaker 1>that's in the root?

01:02:37.165 --> 01:02:38.445
<v Speaker 1>So

01:02:41.165 --> 01:02:42.605
<v Speaker 1>just get the full list of all the

01:02:42.605 --> 01:02:44.685
<v Speaker 1>files, paste it into your VIM, do a

01:02:44.685 --> 01:02:45.245
<v Speaker 1>quick

01:02:45.885 --> 01:02:47.085
<v Speaker 1>VIM magic,

01:02:47.484 --> 01:02:48.205
<v Speaker 1>mount them all,

01:02:48.960 --> 01:02:50.240
<v Speaker 1>and we'll find out if it's one of

01:02:50.240 --> 01:02:51.520
<v Speaker 1>the ones that's in the root folder first

01:02:51.520 --> 01:02:53.680
<v Speaker 1>rather than something buried in one

01:02:54.720 --> 01:02:55.840
<v Speaker 1>of those other folders.

01:02:57.119 --> 01:02:58.640
<v Speaker 0>Sorry. Can you say that again?

01:02:58.960 --> 01:03:00.400
<v Speaker 1>Just get the list of all the files

01:03:00.400 --> 01:03:01.599
<v Speaker 1>and make a mount for all of them

01:03:01.599 --> 01:03:02.960
<v Speaker 1>in whatever the quickest way is.

01:03:04.855 --> 01:03:07.335
<v Speaker 1>Copy paste. Do some Vim

01:03:08.855 --> 01:03:09.735
<v Speaker 1>craziness.

01:03:12.055 --> 01:03:13.095
<v Speaker 0>Okay.

01:03:16.980 --> 01:03:18.660
<v Speaker 1>Not the ones that are folders.

01:03:19.300 --> 01:03:21.060
<v Speaker 1>So grip out the ones that start with

01:03:21.060 --> 01:03:21.700
<v Speaker 1>d.

01:03:24.660 --> 01:03:25.860
<v Speaker 0>Right. Hold on.

01:03:26.260 --> 01:03:29.060
<v Speaker 0>S dash l. Now what we only want

01:03:29.060 --> 01:03:31.220
<v Speaker 0>files. We don't want folders.

01:03:31.220 --> 01:03:32.500
<v Speaker 1>Grip dash v.

01:03:32.740 --> 01:03:34.685
<v Speaker 0>So we don't want anything that has

01:03:36.205 --> 01:03:38.525
<v Speaker 0>dash e e v.

01:03:43.405 --> 01:03:45.085
<v Speaker 0>D. D. How's it?

01:03:46.800 --> 01:03:48.240
<v Speaker 1>It's d at the start. We don't want

01:03:50.960 --> 01:03:51.760
<v Speaker 0>Yeah.

01:03:52.560 --> 01:03:54.560
<v Speaker 0>So we're doing a regex graph where the

01:03:54.560 --> 01:03:56.000
<v Speaker 0>lane starts with a d

01:03:56.480 --> 01:03:57.920
<v Speaker 0>and arc

01:03:57.920 --> 01:03:58.800
<v Speaker 0>prints

01:03:59.200 --> 01:04:01.440
<v Speaker 0>one, two, three, four, five, six,

01:04:02.694 --> 01:04:03.335
<v Speaker 0>nine.

01:04:04.055 --> 01:04:05.015
<v Speaker 0>There we go.

01:04:06.135 --> 01:04:07.255
<v Speaker 1>And then said?

01:04:08.775 --> 01:04:10.135
<v Speaker 1>Or you can do it in Rawk, actually,

01:04:10.135 --> 01:04:11.494
<v Speaker 1>can't you? Just print.

01:04:11.895 --> 01:04:15.175
<v Speaker 0>We could do a begin statement. So begin

01:04:15.734 --> 01:04:17.734
<v Speaker 1>No. You can just do a print line

01:04:17.340 --> 01:04:19.580
<v Speaker 1>space. Oh, yeah. Yeah. I'm I'm over complicating

01:04:19.580 --> 01:04:21.580
<v Speaker 0>it now. So, yeah, we could do

01:04:22.540 --> 01:04:23.420
<v Speaker 0>dash

01:04:26.780 --> 01:04:29.340
<v Speaker 0>and copy it. Can we copy?

01:04:30.825 --> 01:04:31.545
<v Speaker 0>Some

01:04:33.145 --> 01:04:35.225
<v Speaker 1>shelters were Okay.

01:04:40.185 --> 01:04:41.545
<v Speaker 1>Wouldn't it be amazing if it turned out

01:04:41.545 --> 01:04:42.265
<v Speaker 1>to be the license?

01:04:42.830 --> 01:04:43.470
<v Speaker 0>I

01:04:44.750 --> 01:04:46.350
<v Speaker 0>don't think that's gonna happen.

01:04:48.670 --> 01:04:51.390
<v Speaker 0>Alistair Steve says I have a table and

01:04:51.390 --> 01:04:52.990
<v Speaker 0>a dot EMV night.

01:04:53.950 --> 01:04:55.150
<v Speaker 0>Oh, thanks, Alistair.

01:04:57.935 --> 01:05:00.735
<v Speaker 0>Is there ah, of course, it didn't.

01:05:01.935 --> 01:05:04.255
<v Speaker 0>I mean, we haven't confirmed that that is

01:05:04.255 --> 01:05:06.015
<v Speaker 0>the problem, but that's where my hunch is.

01:05:06.015 --> 01:05:08.415
<v Speaker 0>So let's comment this out. Yeah. Test that

01:05:08.575 --> 01:05:09.215
<v Speaker 0>test my hunch.

01:05:13.660 --> 01:05:15.100
<v Speaker 1>He always adds a bit of value as

01:05:15.100 --> 01:05:15.660
<v Speaker 1>well.

01:05:19.340 --> 01:05:21.180
<v Speaker 0>I can't believe you're not even catching my

01:05:21.180 --> 01:05:21.820
<v Speaker 0>tapers.

01:05:23.660 --> 01:05:25.020
<v Speaker 1>Quite a few of them.

01:05:25.580 --> 01:05:26.940
<v Speaker 0>Neither have I, not a dev.

01:05:27.795 --> 01:05:28.915
<v Speaker 0>Celebrating too early.

01:05:43.750 --> 01:05:44.550
<v Speaker 0>Okay.

01:05:45.030 --> 01:05:47.109
<v Speaker 0>My hutch did not work, so we're gonna

01:05:47.109 --> 01:05:48.390
<v Speaker 0>bring in everything.

01:05:48.710 --> 01:05:51.110
<v Speaker 0>We don't actually list the dot files,

01:05:52.390 --> 01:05:54.765
<v Speaker 0>but let's try anyway. We can always add

01:05:54.765 --> 01:05:55.964
<v Speaker 0>the dot files. Yeah.

01:06:15.610 --> 01:06:16.410
<v Speaker 1>No.

01:06:17.050 --> 01:06:18.250
<v Speaker 1>So it's something in the folder.

01:06:20.025 --> 01:06:22.505
<v Speaker 0>Either that or it could be one of

01:06:22.505 --> 01:06:24.345
<v Speaker 0>the dots. There's an ESLint.

01:06:24.825 --> 01:06:26.905
<v Speaker 0>Oh, I just lost access to my

01:06:28.904 --> 01:06:30.265
<v Speaker 1>You need to plug it in.

01:06:30.825 --> 01:06:32.345
<v Speaker 0>I do need to plug it in more.

01:06:32.345 --> 01:06:34.025
<v Speaker 0>Let's check this ESLint.

01:06:34.105 --> 01:06:34.984
<v Speaker 0>Yeah. I don't

01:06:36.730 --> 01:06:38.490
<v Speaker 0>think that would be needed to run our

01:06:38.490 --> 01:06:41.850
<v Speaker 0>dev step, but I will validate that.

01:06:44.330 --> 01:06:45.290
<v Speaker 0>K. Let's

01:06:46.410 --> 01:06:48.650
<v Speaker 0>let's run our wacky thing again.

01:06:49.265 --> 01:06:51.585
<v Speaker 0>This time at the LSE,

01:06:51.585 --> 01:06:53.665
<v Speaker 0>let's get all those fails

01:06:54.625 --> 01:06:57.265
<v Speaker 0>including the dots. Oh, that does work.

01:06:58.545 --> 01:06:59.505
<v Speaker 0>Delete.

01:07:00.385 --> 01:07:01.585
<v Speaker 0>Stick it back in.

01:07:04.220 --> 01:07:06.140
<v Speaker 1>It'd be good if any sort of junior

01:07:06.140 --> 01:07:08.539
<v Speaker 1>developers are watching to see this is what

01:07:08.539 --> 01:07:09.980
<v Speaker 1>you spend a lot of time doing.

01:07:14.140 --> 01:07:15.660
<v Speaker 0>Twenty years I've been doing this, and I

01:07:15.660 --> 01:07:17.420
<v Speaker 0>still spend all my time debugging.

01:07:19.565 --> 01:07:21.325
<v Speaker 0>In fact, I spend more time debugging those

01:07:21.325 --> 01:07:22.605
<v Speaker 0>than I ever did, probably.

01:07:25.404 --> 01:07:27.565
<v Speaker 0>And if this doesn't work, that means we're

01:07:27.565 --> 01:07:29.325
<v Speaker 0>looking at something which is in a nested

01:07:29.325 --> 01:07:30.125
<v Speaker 0>subdirectory

01:07:30.125 --> 01:07:30.765
<v Speaker 0>somewhere.

01:07:38.539 --> 01:07:40.220
<v Speaker 0>Really annoying.

01:07:42.380 --> 01:07:43.099
<v Speaker 0>Okay.

01:07:44.940 --> 01:07:46.619
<v Speaker 0>Alright. Let's try.

01:07:49.575 --> 01:07:50.935
<v Speaker 0>You know what? Let's

01:07:53.255 --> 01:07:53.975
<v Speaker 1>So

01:07:54.055 --> 01:07:55.175
<v Speaker 1>try all the folders?

01:07:55.415 --> 01:07:58.055
<v Speaker 0>Yeah. Try everything. So I'm just gonna remove

01:07:58.055 --> 01:07:59.655
<v Speaker 0>the Gorep here.

01:08:00.375 --> 01:08:01.815
<v Speaker 1>Well, no. Just invert it.

01:08:03.600 --> 01:08:04.560
<v Speaker 1>Because we want to

01:08:05.120 --> 01:08:07.120
<v Speaker 1>we know everything. If we mount everything that

01:08:07.120 --> 01:08:07.840
<v Speaker 1>it works.

01:08:08.720 --> 01:08:09.600
<v Speaker 1>Okay.

01:08:10.240 --> 01:08:12.320
<v Speaker 1>So true. See if it works, just take

01:08:12.320 --> 01:08:13.200
<v Speaker 1>the v out.

01:08:13.520 --> 01:08:14.160
<v Speaker 0>Oh.

01:08:14.800 --> 01:08:16.160
<v Speaker 0>Oh, yeah. Oh.

01:08:17.245 --> 01:08:19.005
<v Speaker 0>Well, that must still work, actually.

01:08:20.445 --> 01:08:22.045
<v Speaker 1>It would also catch any

01:08:22.525 --> 01:08:23.805
<v Speaker 1>files with d in.

01:08:24.445 --> 01:08:25.165
<v Speaker 0>Yeah.

01:08:25.885 --> 01:08:26.365
<v Speaker 0>Alright.

01:08:28.920 --> 01:08:30.279
<v Speaker 0>So we want

01:08:30.360 --> 01:08:31.640
<v Speaker 0>directory's

01:08:31.640 --> 01:08:32.680
<v Speaker 0>only. Okay.

01:08:35.160 --> 01:08:37.880
<v Speaker 0>Tripod thing is gonna get very annoying fast.

01:08:37.880 --> 01:08:38.120
<v Speaker 0>Okay.

01:08:45.045 --> 01:08:46.165
<v Speaker 0>Can't type.

01:08:46.885 --> 01:08:47.604
<v Speaker 0>Alright.

01:08:51.445 --> 01:08:52.965
<v Speaker 0>And then we'll just start ruling out the

01:08:52.965 --> 01:08:55.125
<v Speaker 0>things that we're pretty confident it is not.

01:08:56.740 --> 01:08:58.100
<v Speaker 0>Although, how funny would it be if this

01:08:58.100 --> 01:08:58.739
<v Speaker 0>fails?

01:09:00.420 --> 01:09:01.380
<v Speaker 1>I'll probably

01:09:01.700 --> 01:09:03.300
<v Speaker 1>go out and face something on the window.

01:09:07.060 --> 01:09:08.020
<v Speaker 0>Yeah.

01:09:08.020 --> 01:09:08.899
<v Speaker 0>It should work.

01:09:10.135 --> 01:09:12.694
<v Speaker 0>I mean, it might not work. This should

01:09:12.694 --> 01:09:13.334
<v Speaker 0>work.

01:09:14.534 --> 01:09:15.335
<v Speaker 0>It failed.

01:09:29.320 --> 01:09:30.600
<v Speaker 0>New hypothesis?

01:09:31.560 --> 01:09:32.840
<v Speaker 1>I'm working on it.

01:09:37.995 --> 01:09:39.995
<v Speaker 0>Did it work with a dot? Are we

01:09:39.995 --> 01:09:40.715
<v Speaker 0>making that Hang

01:09:41.675 --> 01:09:42.554
<v Speaker 1>on, David.

01:09:43.755 --> 01:09:45.435
<v Speaker 1>Don't know those files need to have where

01:09:45.435 --> 01:09:46.635
<v Speaker 1>are they gonna be mounted?

01:09:47.435 --> 01:09:48.234
<v Speaker 1>Those mounts.

01:09:51.850 --> 01:09:53.770
<v Speaker 0>Don't worry. I'm just creating a bunch of

01:09:53.770 --> 01:09:54.570
<v Speaker 0>dead volume.

01:09:55.370 --> 01:09:56.090
<v Speaker 1>Yeah.

01:09:58.170 --> 01:09:59.130
<v Speaker 1>So

01:09:59.130 --> 01:10:01.130
<v Speaker 1>we haven't actually been checking anything before.

01:10:01.450 --> 01:10:01.770
<v Speaker 0>No.

01:10:03.585 --> 01:10:04.465
<v Speaker 0>Okay. Let

01:10:07.505 --> 01:10:08.785
<v Speaker 1>Let's go back to the theory. It's one

01:10:08.785 --> 01:10:10.065
<v Speaker 1>of the files in the root

01:10:10.705 --> 01:10:11.505
<v Speaker 1>for now.

01:10:14.545 --> 01:10:17.185
<v Speaker 0>I make myself laugh sometimes. Other times, I

01:10:17.185 --> 01:10:18.065
<v Speaker 0>make myself cry.

01:10:18.510 --> 01:10:20.110
<v Speaker 1>But we'll feel really good when we figure

01:10:20.110 --> 01:10:20.750
<v Speaker 1>it out.

01:10:22.430 --> 01:10:23.150
<v Speaker 0>Okay.

01:10:23.630 --> 01:10:25.630
<v Speaker 0>I'm I'm sure there's a way to automate

01:10:25.630 --> 01:10:27.710
<v Speaker 0>this, but right now, it's not popping into

01:10:27.710 --> 01:10:29.390
<v Speaker 0>my head. You can automate it on the

01:10:29.390 --> 01:10:31.790
<v Speaker 1>command line again. So delete delete it all.

01:10:32.735 --> 01:10:34.815
<v Speaker 1>Yeah. I can do print print print. Yeah.

01:10:34.815 --> 01:10:35.374
<v Speaker 0>Okay.

01:10:37.534 --> 01:10:40.254
<v Speaker 0>Good idea. So we want dash dash dash

01:10:40.335 --> 01:10:41.454
<v Speaker 0>colon

01:10:42.335 --> 01:10:43.215
<v Speaker 0>slash

01:10:43.215 --> 01:10:44.655
<v Speaker 0>node slash

01:10:44.895 --> 01:10:46.014
<v Speaker 0>print name.

01:10:49.140 --> 01:10:50.820
<v Speaker 0>See, that's why you're here.

01:10:53.620 --> 01:10:56.420
<v Speaker 1>It's what good copilot does, isn't it? Shut

01:10:56.420 --> 01:10:57.620
<v Speaker 1>up when you're doing it.

01:10:58.580 --> 01:10:59.860
<v Speaker 1>Chip in with useful thing.

01:11:02.005 --> 01:11:04.085
<v Speaker 1>So it wasn't an error because Docker Compose

01:11:04.085 --> 01:11:05.925
<v Speaker 1>was creating lots of volumes.

01:11:09.685 --> 01:11:10.405
<v Speaker 0>Okay.

01:11:11.445 --> 01:11:13.125
<v Speaker 0>That's not quite right.

01:11:14.560 --> 01:11:15.840
<v Speaker 0>I didn't add on

01:11:17.600 --> 01:11:18.480
<v Speaker 0>flash.

01:11:19.680 --> 01:11:20.400
<v Speaker 0>It's just a

01:11:23.200 --> 01:11:24.960
<v Speaker 0>I can't remember how to do multiple cursors

01:11:24.960 --> 01:11:26.480
<v Speaker 0>on a Mac. On Linux, I've got it

01:11:26.480 --> 01:11:29.325
<v Speaker 0>down, but my the key is different. I

01:11:29.325 --> 01:11:30.605
<v Speaker 1>don't know Versus code.

01:11:34.285 --> 01:11:35.005
<v Speaker 0>Okay.

01:11:35.485 --> 01:11:39.085
<v Speaker 0>Alright. Hypothesis one, validation 14.

01:11:39.805 --> 01:11:41.645
<v Speaker 0>To put it that point is mounting everything

01:11:41.645 --> 01:11:42.605
<v Speaker 1>explicitly, is it?

01:11:43.530 --> 01:11:45.690
<v Speaker 0>Yeah. So we can probably just remove.

01:11:46.970 --> 01:11:48.730
<v Speaker 1>And then we'll do a half. We'll do

01:11:48.730 --> 01:11:50.890
<v Speaker 1>a Oh, that's the that's the directions we've

01:11:50.890 --> 01:11:51.050
<v Speaker 0>done.

01:11:56.575 --> 01:11:58.655
<v Speaker 0>So let's get the files now.

01:11:59.215 --> 01:12:00.175
<v Speaker 1>Did it work?

01:12:00.655 --> 01:12:02.975
<v Speaker 0>Well, no. Because I completed the righties. We

01:12:02.975 --> 01:12:04.735
<v Speaker 0>wanted to set the files first.

01:12:05.295 --> 01:12:06.655
<v Speaker 1>What's the error message?

01:12:08.815 --> 01:12:11.215
<v Speaker 0>That was a duplicate mode because of

01:12:11.820 --> 01:12:13.740
<v Speaker 0>stuff. So I'm just gonna take out all

01:12:13.740 --> 01:12:15.340
<v Speaker 0>of these midpoints

01:12:15.340 --> 01:12:17.020
<v Speaker 0>except for the node modules.

01:12:20.140 --> 01:12:22.699
<v Speaker 0>So we're gonna mount our node modules and

01:12:23.020 --> 01:12:24.460
<v Speaker 0>everything locally.

01:12:25.020 --> 01:12:25.820
<v Speaker 0>That is a fail.

01:12:28.275 --> 01:12:30.275
<v Speaker 1>Just for my sanity, can you check node

01:12:30.275 --> 01:12:32.035
<v Speaker 1>modules is in git ignore?

01:12:32.115 --> 01:12:33.235
<v Speaker 1>And there isn't some

01:12:34.275 --> 01:12:35.395
<v Speaker 1>super significant

01:12:35.715 --> 01:12:38.675
<v Speaker 0>It is. Yeah. Okay. That

01:12:39.075 --> 01:12:39.715
<v Speaker 1>would be crazy.

01:12:41.960 --> 01:12:44.040
<v Speaker 0>Okay. So now we are mounting every fail

01:12:44.040 --> 01:12:46.280
<v Speaker 0>in the root directory and so the container

01:12:46.280 --> 01:12:47.400
<v Speaker 0>very,

01:12:47.400 --> 01:12:49.320
<v Speaker 0>very manually. David David, look in the chat.

01:12:55.725 --> 01:12:58.045
<v Speaker 1>Has some has this person saved us? They're

01:12:58.045 --> 01:12:58.684
<v Speaker 1>anonymous.

01:13:01.405 --> 01:13:02.125
<v Speaker 0>No.

01:13:03.965 --> 01:13:05.805
<v Speaker 0>I would be very disappointed

01:13:05.805 --> 01:13:07.485
<v Speaker 0>if Moxie's

01:13:07.485 --> 01:13:08.364
<v Speaker 0>wrapper

01:13:08.830 --> 01:13:12.749
<v Speaker 0>around webpack required Artisan to exist, which means

01:13:13.070 --> 01:13:15.310
<v Speaker 0>you're probably right. Have a look at the

01:13:15.310 --> 01:13:17.150
<v Speaker 1>Artisan file. What's in it?

01:13:20.110 --> 01:13:20.750
<v Speaker 0>PHP?

01:13:25.685 --> 01:13:27.925
<v Speaker 1>But maybe it uses the artisan file

01:13:28.245 --> 01:13:30.165
<v Speaker 1>the presence of the artisan file for some

01:13:30.165 --> 01:13:30.804
<v Speaker 1>sort of

01:13:31.685 --> 01:13:32.645
<v Speaker 1>directory

01:13:32.725 --> 01:13:35.045
<v Speaker 1>relativeness to to find the root. Do you

01:13:35.045 --> 01:13:35.525
<v Speaker 1>know what I mean?

01:13:38.290 --> 01:13:40.450
<v Speaker 1>I didn't write it. Let's

01:13:41.890 --> 01:13:43.330
<v Speaker 0>Right. We know it doesn't have to run

01:13:43.330 --> 01:13:45.730
<v Speaker 0>PHP because we might end up, and it

01:13:45.730 --> 01:13:46.610
<v Speaker 0>worked. Right?

01:13:46.930 --> 01:13:49.010
<v Speaker 1>Yeah. But I'm saying I've seen projects that

01:13:49.090 --> 01:13:51.010
<v Speaker 1>find the root folder by finding where the

01:13:51.010 --> 01:13:52.130
<v Speaker 1>dot git folder is,

01:13:53.035 --> 01:13:54.074
<v Speaker 1>Things like that.

01:13:55.195 --> 01:13:58.074
<v Speaker 0>Okay. So we're gonna comment all of this.

01:13:59.675 --> 01:14:02.235
<v Speaker 0>We are gonna mount an artisan.

01:14:04.875 --> 01:14:06.554
<v Speaker 1>And we do need all the other stuff.

01:14:06.635 --> 01:14:08.075
<v Speaker 1>Yeah. The JS.

01:14:10.070 --> 01:14:11.350
<v Speaker 0>Let's try and go back to what we

01:14:11.350 --> 01:14:12.630
<v Speaker 0>actually wanted

01:14:12.630 --> 01:14:15.510
<v Speaker 0>though, right, which was to maintain resources.

01:14:19.350 --> 01:14:19.989
<v Speaker 0>We

01:14:20.790 --> 01:14:21.990
<v Speaker 0>we need public directory.

01:14:31.375 --> 01:14:32.815
<v Speaker 0>And then the web pack stuff.

01:14:40.760 --> 01:14:43.800
<v Speaker 0>Okay. It was just wait. It's okay. So

01:14:51.320 --> 01:14:53.159
<v Speaker 0>public, we've done resources.

01:14:55.144 --> 01:14:55.864
<v Speaker 0>Yep.

01:14:57.545 --> 01:14:58.744
<v Speaker 0>Okay. Let's try this.

01:15:06.110 --> 01:15:07.790
<v Speaker 0>And we're just about out of time as

01:15:07.790 --> 01:15:09.710
<v Speaker 0>well, which is unfortunate.

01:15:15.390 --> 01:15:17.070
<v Speaker 0>At least the show notes for this episode

01:15:17.070 --> 01:15:19.614
<v Speaker 0>will be really easy. Like, watch Kieran struggle.

01:15:19.614 --> 01:15:21.775
<v Speaker 0>What did Kieran and David struggle for forty

01:15:21.775 --> 01:15:23.534
<v Speaker 0>minutes? I can't believe that worked.

01:15:30.490 --> 01:15:32.330
<v Speaker 0>Yeah. Why why

01:15:32.410 --> 01:15:33.850
<v Speaker 0>does that need to

01:15:34.490 --> 01:15:36.330
<v Speaker 1>guess you can't use mix outside of Laravel

01:15:36.330 --> 01:15:37.130
<v Speaker 1>projects.

01:15:38.170 --> 01:15:39.770
<v Speaker 0>But you should try it try it with

01:15:39.770 --> 01:15:41.610
<v Speaker 1>an empty file called artisan.

01:15:42.810 --> 01:15:43.690
<v Speaker 1>Just for a laugh.

01:15:44.475 --> 01:15:47.594
<v Speaker 0>Oh, yeah. Because that's really that's so fun.

01:15:47.675 --> 01:15:48.395
<v Speaker 0>Alright.

01:15:50.555 --> 01:15:53.035
<v Speaker 0>Alright. So let's let's let's make it field

01:15:53.035 --> 01:15:54.155
<v Speaker 0>first again. Right?

01:15:54.635 --> 01:15:56.795
<v Speaker 0>And I'll touch touch artisan

01:15:57.515 --> 01:15:58.635
<v Speaker 0>and see if it passes.

01:15:59.130 --> 01:16:01.530
<v Speaker 0>And then someone could go and open a

01:16:01.530 --> 01:16:03.930
<v Speaker 0>very strongly worded issue against this repository.

01:16:04.570 --> 01:16:07.610
<v Speaker 0>Sorry. A politely worded issue. It's frustrating,

01:16:07.930 --> 01:16:09.290
<v Speaker 0>you know, this stuff happens.

01:16:10.410 --> 01:16:11.930
<v Speaker 1>Yeah. You gotta see it from the point

01:16:11.930 --> 01:16:14.545
<v Speaker 1>of view of someone who who's every every

01:16:14.545 --> 01:16:16.145
<v Speaker 1>project they ever have has an artisan file,

01:16:16.145 --> 01:16:17.905
<v Speaker 1>and it's a great way of locating.

01:16:19.425 --> 01:16:20.064
<v Speaker 1>Yeah.

01:16:20.385 --> 01:16:21.664
<v Speaker 1>Nice idea.

01:16:23.025 --> 01:16:23.585
<v Speaker 0>Is it?

01:16:26.980 --> 01:16:28.900
<v Speaker 0>An environment variable would have been just as

01:16:28.900 --> 01:16:29.460
<v Speaker 0>good.

01:16:30.740 --> 01:16:32.820
<v Speaker 1>I've written code that looks for composer JSON.

01:16:32.820 --> 01:16:34.100
<v Speaker 1>Let's just put it that way.

01:16:34.660 --> 01:16:35.699
<v Speaker 0>Unbelievable.

01:16:37.460 --> 01:16:39.700
<v Speaker 0>No. Thank you. No. If that was not

01:16:39.700 --> 01:16:42.054
<v Speaker 0>for your comment, we would have spent at

01:16:42.054 --> 01:16:43.414
<v Speaker 0>least the next three weeks.

01:16:43.735 --> 01:16:44.215
<v Speaker 0>So

01:16:47.255 --> 01:16:49.094
<v Speaker 1>do we have enough time to add to

01:16:49.094 --> 01:16:51.175
<v Speaker 1>the watch container that we were

01:16:52.215 --> 01:16:52.934
<v Speaker 1>trying to

01:16:53.415 --> 01:16:55.415
<v Speaker 0>Let's confirm that command work.

01:16:58.110 --> 01:16:58.590
<v Speaker 0>It should

01:16:59.310 --> 01:17:01.949
<v Speaker 0>no different from develop except the runs watching

01:17:01.949 --> 01:17:02.429
<v Speaker 0>the fail.

01:17:11.935 --> 01:17:12.574
<v Speaker 0>Alright.

01:17:12.975 --> 01:17:16.015
<v Speaker 0>So that means well, we can delete all

01:17:16.015 --> 01:17:17.855
<v Speaker 0>of that. I mean, I think that debugging

01:17:17.855 --> 01:17:19.535
<v Speaker 0>process is as painful as that may be

01:17:19.535 --> 01:17:21.135
<v Speaker 0>for some people to watch. There was some

01:17:21.135 --> 01:17:23.855
<v Speaker 0>good nuggets of bash there for people to

01:17:23.190 --> 01:17:24.070
<v Speaker 0>to learn.

01:17:24.630 --> 01:17:25.269
<v Speaker 0>Yeah.

01:17:29.510 --> 01:17:30.230
<v Speaker 0>No.

01:17:30.310 --> 01:17:32.390
<v Speaker 0>Okay. So we wanna automate that. So we're

01:17:32.390 --> 01:17:35.350
<v Speaker 0>gonna set our entry point to be MPM.

01:17:36.955 --> 01:17:40.155
<v Speaker 0>We'll set the command to be run or

01:17:40.155 --> 01:17:42.075
<v Speaker 0>watch. So that will now run that on

01:17:42.075 --> 01:17:44.555
<v Speaker 0>alert. Anytime those assets change, we'll see that

01:17:44.555 --> 01:17:45.995
<v Speaker 0>completion step happen.

01:17:46.395 --> 01:17:47.755
<v Speaker 0>We can now then

01:17:49.320 --> 01:17:53.160
<v Speaker 0>expose this public directory to engine x.

01:17:53.320 --> 01:17:55.880
<v Speaker 0>So instead of mounting in the local public,

01:17:57.640 --> 01:18:00.040
<v Speaker 0>we are going uphill or volume

01:18:00.840 --> 01:18:01.719
<v Speaker 0>from here.

01:18:02.200 --> 01:18:04.165
<v Speaker 0>Mhmm. That makes sense? Mhmm.

01:18:04.805 --> 01:18:06.405
<v Speaker 0>Okay. So let's

01:18:06.565 --> 01:18:07.364
<v Speaker 0>do

01:18:09.525 --> 01:18:10.005
<v Speaker 0>Did

01:18:10.485 --> 01:18:11.925
<v Speaker 0>Just spin it all up. We can just

01:18:12.005 --> 01:18:13.285
<v Speaker 1>Did you make did you actually make that

01:18:13.285 --> 01:18:14.325
<v Speaker 1>change? I think

01:18:15.125 --> 01:18:17.365
<v Speaker 0>Which Which Look at the YAML again?

01:18:19.400 --> 01:18:21.000
<v Speaker 1>Yeah. You have. Sorry. Yeah.

01:18:21.720 --> 01:18:23.800
<v Speaker 0>I can run a Docker Compose PS. We're

01:18:23.800 --> 01:18:26.840
<v Speaker 0>gonna see engine x is running. Hopefully, it's

01:18:26.840 --> 01:18:28.200
<v Speaker 0>not been running long. It has our new

01:18:28.200 --> 01:18:30.840
<v Speaker 0>changes. We've got our node watch running.

01:18:33.065 --> 01:18:35.465
<v Speaker 0>Now let's confirm this works.

01:18:36.345 --> 01:18:38.345
<v Speaker 0>We should be able to reload this.

01:18:39.385 --> 01:18:40.265
<v Speaker 0>And

01:18:41.385 --> 01:18:43.545
<v Speaker 0>dashboard two is there. Now the final test

01:18:43.545 --> 01:18:45.625
<v Speaker 0>is if I change that to dashboard three.

01:18:46.070 --> 01:18:47.510
<v Speaker 1>Can you tell the locks of the watch

01:18:47.510 --> 01:18:48.469
<v Speaker 1>container?

01:18:48.790 --> 01:18:49.829
<v Speaker 0>Yeah. Sure.

01:18:51.190 --> 01:18:51.829
<v Speaker 0>Note.

01:18:55.910 --> 01:18:58.710
<v Speaker 0>And we wanna change that view template from

01:18:58.710 --> 01:19:00.230
<v Speaker 0>earlier, which was here.

01:19:02.865 --> 01:19:04.945
<v Speaker 0>If I can find out this here.

01:19:05.345 --> 01:19:07.105
<v Speaker 1>It's time for dashboard three.

01:19:08.545 --> 01:19:09.985
<v Speaker 0>Compilation step.

01:19:10.225 --> 01:19:11.105
<v Speaker 0>Jump over here.

01:19:15.450 --> 01:19:16.090
<v Speaker 1>Oh.

01:19:16.730 --> 01:19:18.489
<v Speaker 1>Oh, no. Wait. It sent two places in

01:19:18.489 --> 01:19:19.690
<v Speaker 0>that file, actually.

01:19:21.530 --> 01:19:22.730
<v Speaker 0>That's for three.

01:19:22.810 --> 01:19:25.210
<v Speaker 0>There's that's oh, yeah. There's another one here.

01:19:26.410 --> 01:19:28.010
<v Speaker 1>That's the title tag, I think.

01:19:29.755 --> 01:19:31.514
<v Speaker 0>That should run.

01:19:39.355 --> 01:19:41.514
<v Speaker 1>Is this browser cache issue?

01:19:43.620 --> 01:19:44.900
<v Speaker 1>Do a force reload.

01:19:45.460 --> 01:19:48.260
<v Speaker 0>Alright. Let's let me let's confirm that what's

01:19:48.260 --> 01:19:48.980
<v Speaker 0>running.

01:19:50.260 --> 01:19:51.780
<v Speaker 0>Yeah. Definitely. Okay.

01:19:55.460 --> 01:19:57.220
<v Speaker 0>Let's check the NGINX container.

01:19:59.235 --> 01:20:00.755
<v Speaker 0>Is this NGINX?

01:20:01.075 --> 01:20:02.515
<v Speaker 0>No. I see PHP.

01:20:03.315 --> 01:20:06.275
<v Speaker 0>D c e x d NGINX

01:20:06.355 --> 01:20:07.395
<v Speaker 0>bash.

01:20:09.315 --> 01:20:10.035
<v Speaker 0>Email.

01:20:10.115 --> 01:20:10.835
<v Speaker 0>Public.

01:20:10.995 --> 01:20:13.075
<v Speaker 0>Nope. Where did we mount that to?

01:20:15.699 --> 01:20:18.340
<v Speaker 1>The w w w HTML.

01:20:20.179 --> 01:20:21.139
<v Speaker 0>Oh, okay.

01:20:22.900 --> 01:20:23.459
<v Speaker 1>Oh.

01:20:24.020 --> 01:20:24.579
<v Speaker 1>Oh,

01:20:26.580 --> 01:20:27.235
<v Speaker 0>yeah. Oh, wait.

01:20:27.555 --> 01:20:29.875
<v Speaker 0>There's no view templates. Oh, okay.

01:20:31.555 --> 01:20:33.155
<v Speaker 1>We don't expect the view templates to be

01:20:33.155 --> 01:20:33.955
<v Speaker 1>there, do we?

01:20:35.555 --> 01:20:37.155
<v Speaker 0>No. We should change the CSS.

01:20:42.000 --> 01:20:42.800
<v Speaker 0>How would it be

01:20:43.920 --> 01:20:46.400
<v Speaker 0>I wish I knew how view worked. They'll

01:20:46.400 --> 01:20:47.040
<v Speaker 1>be in this

01:20:47.760 --> 01:20:50.000
<v Speaker 1>in the logs it was generating. In the

01:20:50.000 --> 01:20:50.959
<v Speaker 1>tailed logs,

01:20:51.440 --> 01:20:53.679
<v Speaker 1>it generated j s 13 dot j s.

01:21:08.320 --> 01:21:09.440
<v Speaker 1>So one line.

01:21:12.080 --> 01:21:12.800
<v Speaker 0>Yeah.

01:21:12.880 --> 01:21:14.400
<v Speaker 0>So, I mean, we could we should be

01:21:14.400 --> 01:21:15.600
<v Speaker 0>able to see this fail of the actual

01:21:15.600 --> 01:21:17.600
<v Speaker 0>dashboard for a floor. Right?

01:21:17.760 --> 01:21:19.920
<v Speaker 0>And we're hoping dashboard four,

01:21:20.400 --> 01:21:20.720
<v Speaker 0>three,

01:21:21.645 --> 01:21:24.365
<v Speaker 0>two. So two okay. So that's interesting.

01:21:35.160 --> 01:21:37.480
<v Speaker 0>Okay. Let's confirm.

01:21:39.320 --> 01:21:40.199
<v Speaker 0>13

01:21:40.199 --> 01:21:43.079
<v Speaker 0>JS was edited at 12:17.

01:21:43.719 --> 01:21:45.320
<v Speaker 0>I have a reservation, Dave.

01:21:48.625 --> 01:21:50.385
<v Speaker 1>No. You so the file you edited was

01:21:50.385 --> 01:21:51.344
<v Speaker 1>in resources.

01:21:53.425 --> 01:21:54.065
<v Speaker 0>Correct.

01:21:56.705 --> 01:21:57.425
<v Speaker 0>Yep.

01:21:59.025 --> 01:22:01.265
<v Speaker 1>And it's the same volume in both containers.

01:22:02.545 --> 01:22:05.210
<v Speaker 1>So is does it contain a two or

01:22:05.210 --> 01:22:05.929
<v Speaker 1>a three

01:22:06.489 --> 01:22:09.050
<v Speaker 1>when you look at that folder from the

01:22:09.130 --> 01:22:10.010
<v Speaker 1>node

01:22:10.489 --> 01:22:11.530
<v Speaker 1>running container?

01:22:16.364 --> 01:22:18.445
<v Speaker 0>Okay. So from a node point of view

01:22:19.085 --> 01:22:21.164
<v Speaker 1>Yes. If you shell into the node one.

01:22:24.525 --> 01:22:25.644
<v Speaker 0>Resources.

01:22:26.525 --> 01:22:27.084
<v Speaker 0>Where was Public.

01:22:28.525 --> 01:22:29.645
<v Speaker 1>It's node public.

01:22:30.770 --> 01:22:31.570
<v Speaker 0>Yes.

01:22:31.650 --> 01:22:33.010
<v Speaker 0>Cat 13.

01:22:33.570 --> 01:22:34.210
<v Speaker 0>Correct.

01:22:34.770 --> 01:22:35.730
<v Speaker 0>Dashboard

01:22:35.730 --> 01:22:36.449
<v Speaker 0>four.

01:22:37.810 --> 01:22:39.489
<v Speaker 0>Nope. That work two is still there.

01:22:44.235 --> 01:22:46.315
<v Speaker 1>Is this us just not understanding Vue?

01:22:46.875 --> 01:22:47.835
<v Speaker 0>I

01:22:47.835 --> 01:22:49.594
<v Speaker 0>mean, I definitely have never used Vue before

01:22:49.594 --> 01:22:50.795
<v Speaker 0>in my entire life.

01:22:51.035 --> 01:22:51.835
<v Speaker 0>So let's

01:22:52.315 --> 01:22:54.395
<v Speaker 0>but we do see asset compilation. We do

01:22:54.395 --> 01:22:57.139
<v Speaker 0>see JavaScript files being written. Let's change the

01:22:57.139 --> 01:23:00.179
<v Speaker 0>CSS. Let's let's maybe you're right. Right? Okay.

01:23:00.179 --> 01:23:01.860
<v Speaker 0>So what about if we change one of

01:23:01.860 --> 01:23:02.659
<v Speaker 0>these colors?

01:23:03.060 --> 01:23:03.699
<v Speaker 1>Mhmm.

01:23:06.340 --> 01:23:09.219
<v Speaker 1>That would be in the tailwind thing, though,

01:23:09.780 --> 01:23:10.260
<v Speaker 1>I think.

01:23:11.295 --> 01:23:13.295
<v Speaker 1>So it's basically, if you would change the

01:23:13.295 --> 01:23:15.615
<v Speaker 1>class name and the template. Well, let's change

01:23:15.615 --> 01:23:17.215
<v Speaker 0>indigo to be

01:23:18.175 --> 01:23:18.975
<v Speaker 0>black.

01:23:21.775 --> 01:23:24.015
<v Speaker 0>I'm assuming that indigo is the state bar.

01:23:25.050 --> 01:23:26.409
<v Speaker 1>Yes. I rock and roll.

01:23:26.969 --> 01:23:27.769
<v Speaker 1>And

01:23:32.010 --> 01:23:33.369
<v Speaker 0>that's now run again.

01:23:39.225 --> 01:23:40.905
<v Speaker 0>Okay. That worked.

01:23:41.145 --> 01:23:42.665
<v Speaker 1>So it's just us not knowing how to

01:23:42.665 --> 01:23:43.864
<v Speaker 1>edit the view thing.

01:23:44.905 --> 01:23:45.704
<v Speaker 0>Alright.

01:23:45.705 --> 01:23:47.465
<v Speaker 0>Let's

01:23:47.465 --> 01:23:49.305
<v Speaker 0>wrap this up and explain,

01:23:51.250 --> 01:23:53.090
<v Speaker 0>hopefully, what the hell we did. So

01:23:55.810 --> 01:23:57.410
<v Speaker 0>we have separate seats

01:23:57.730 --> 01:23:58.930
<v Speaker 0>very painfully,

01:23:59.490 --> 01:24:00.770
<v Speaker 0>node watcher

01:24:00.770 --> 01:24:03.890
<v Speaker 0>out of our PHP serving image into its

01:24:03.890 --> 01:24:06.804
<v Speaker 0>own container that runs in the background, continually

01:24:06.804 --> 01:24:09.364
<v Speaker 0>watching the assets, recompiling the JavaScript and the

01:24:09.364 --> 01:24:10.084
<v Speaker 0>CSS.

01:24:10.485 --> 01:24:11.925
<v Speaker 0>Now I think you're right that we don't

01:24:11.925 --> 01:24:14.645
<v Speaker 0>understand the view component of this yet, which

01:24:14.645 --> 01:24:16.645
<v Speaker 0>is why that dashboard change never made it

01:24:16.645 --> 01:24:19.740
<v Speaker 0>on the live reloading bit. But we were

01:24:19.740 --> 01:24:22.300
<v Speaker 0>able to change the tailwind configuration, and I'm

01:24:22.300 --> 01:24:24.060
<v Speaker 0>assuming we could change other parts of that

01:24:24.060 --> 01:24:25.980
<v Speaker 0>CSS and JavaScript to work.

01:24:26.940 --> 01:24:28.140
<v Speaker 0>So we do need to work at the

01:24:28.140 --> 01:24:29.900
<v Speaker 0>view component next time.

01:24:30.300 --> 01:24:30.860
<v Speaker 0>What

01:24:32.780 --> 01:24:33.980
<v Speaker 0>else? What have I meant?

01:24:35.875 --> 01:24:37.075
<v Speaker 1>That's what we did.

01:24:37.395 --> 01:24:38.275
<v Speaker 0>I got it.

01:24:38.755 --> 01:24:41.395
<v Speaker 1>I mean, we haven't modified the product we

01:24:41.395 --> 01:24:43.395
<v Speaker 1>didn't modify any of the production deploy stuff

01:24:43.395 --> 01:24:46.035
<v Speaker 1>because that already builds the

01:24:46.275 --> 01:24:47.395
<v Speaker 1>same pipeline

01:24:47.475 --> 01:24:48.035
<v Speaker 1>successfully.

01:24:49.970 --> 01:24:51.970
<v Speaker 0>Yeah. We just focused on trying to get

01:24:51.970 --> 01:24:54.290
<v Speaker 0>a shorter feedback loop in the development environment.

01:24:54.290 --> 01:24:55.890
<v Speaker 0>That means that on our next session or

01:24:55.890 --> 01:24:57.810
<v Speaker 0>we can definitely tackle the view template. We

01:24:57.810 --> 01:24:59.810
<v Speaker 0>can work out how we we trigger the

01:24:59.810 --> 01:25:01.970
<v Speaker 0>the rebuild, the redeploy, whatever has to happen

01:25:01.970 --> 01:25:04.675
<v Speaker 0>there. I don't even know if Laravel delivers

01:25:05.075 --> 01:25:07.155
<v Speaker 0>the view, and I'll need to do a

01:25:07.155 --> 01:25:08.755
<v Speaker 0>little bit of research on that. I'll spare

01:25:08.755 --> 01:25:10.114
<v Speaker 0>people that on the stream.

01:25:10.835 --> 01:25:13.075
<v Speaker 0>Then we will move back over to the

01:25:13.075 --> 01:25:15.790
<v Speaker 0>PHP development environment and really clean up that

01:25:15.790 --> 01:25:17.870
<v Speaker 0>workflow as well with regards to how we

01:25:17.870 --> 01:25:19.470
<v Speaker 0>interact with composer.

01:25:20.750 --> 01:25:22.910
<v Speaker 1>How do we run tests? And yeah. We

01:25:22.910 --> 01:25:24.750
<v Speaker 0>definitely will tackle the tests on the next

01:25:24.750 --> 01:25:27.550
<v Speaker 0>session for sure. Okay. Look forward to it.

01:25:27.550 --> 01:25:29.710
<v Speaker 0>Alright. Awesome. That was

01:25:30.715 --> 01:25:31.594
<v Speaker 0>challenging,

01:25:31.594 --> 01:25:33.515
<v Speaker 0>but really, I I I definitely learned a

01:25:33.515 --> 01:25:35.995
<v Speaker 0>lot from Yeah. Just working with the this

01:25:35.995 --> 01:25:37.755
<v Speaker 0>tool. Again, Laravel is new to both of

01:25:37.755 --> 01:25:39.675
<v Speaker 0>us, but I think we're making good progress.

01:25:39.675 --> 01:25:41.915
<v Speaker 0>And, hopefully, people find this useful. So, you

01:25:41.915 --> 01:25:43.435
<v Speaker 0>know, thank you for tuning in. Keenan, thank

01:25:43.435 --> 01:25:44.475
<v Speaker 0>you for joining me. It was an absolute

01:25:44.475 --> 01:25:46.140
<v Speaker 0>pleasure again. Enjoyed it. And I will see

01:25:46.140 --> 01:25:47.260
<v Speaker 0>you all soon. Thanks.
