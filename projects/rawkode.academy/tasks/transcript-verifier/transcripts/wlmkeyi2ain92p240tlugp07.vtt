WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 38a86d53-3ac8-4a81-a732-a8b1ebcde43e
Created: 2025-04-29T17:26:44.790Z
Duration: 4335.439
Channels: 1

00:00:55.550 --> 00:00:59.070
<v Speaker 0>Hello, and welcome to today's episode of Rawkode

00:00:59.070 --> 00:01:01.949
<v Speaker 0>Live at the Rawkode Academy. I am Rawkode.

00:01:02.030 --> 00:01:03.790
<v Speaker 0>That is three of the Rawkodes too many.

00:01:04.355 --> 00:01:06.195
<v Speaker 0>Today, we are taking a look at CueBlox,

00:01:06.195 --> 00:01:08.595
<v Speaker 0>a actual personal project of mine and a

00:01:08.595 --> 00:01:11.075
<v Speaker 0>friend and colleague, Brian Kettleson. We're gonna be

00:01:11.075 --> 00:01:12.595
<v Speaker 0>guiding you through everything you need to know

00:01:12.595 --> 00:01:14.275
<v Speaker 0>to do cool things with your data.

00:01:15.315 --> 00:01:18.195
<v Speaker 0>Please remember to like, share, subscribe, comment to

00:01:18.195 --> 00:01:18.835
<v Speaker 0>these videos,

00:01:19.370 --> 00:01:21.850
<v Speaker 0>join the channel, and you'll get updates for

00:01:21.850 --> 00:01:24.170
<v Speaker 0>all new episodes of Rawkode Live. We also

00:01:24.170 --> 00:01:26.490
<v Speaker 0>have a course in flight on InfluxDB,

00:01:26.490 --> 00:01:28.330
<v Speaker 0>so check out the options for joining the

00:01:28.330 --> 00:01:29.050
<v Speaker 0>academy.

00:01:29.690 --> 00:01:31.930
<v Speaker 0>And there's also a rather active Discord server,

00:01:32.425 --> 00:01:35.305
<v Speaker 0>over 500, nearly 600 people talking cloud native

00:01:35.305 --> 00:01:37.945
<v Speaker 0>Kubernetes, Go, Rust, you know, all sorts of

00:01:37.945 --> 00:01:40.105
<v Speaker 0>cool technology things. So come and join us.

00:01:40.105 --> 00:01:42.185
<v Speaker 0>Say hello, and I look forward to meeting

00:01:42.185 --> 00:01:42.665
<v Speaker 0>you.

00:01:43.385 --> 00:01:45.865
<v Speaker 0>Okay. That's the housekeeping over the way today.

00:01:45.865 --> 00:01:47.750
<v Speaker 0>Like I said, it's a personal project. Brian

00:01:47.750 --> 00:01:49.030
<v Speaker 0>and I have been working on this for

00:01:49.030 --> 00:01:50.790
<v Speaker 0>for months and months and months, and I

00:01:50.870 --> 00:01:53.110
<v Speaker 0>we're both really excited to share it. Right,

00:01:53.110 --> 00:01:53.590
<v Speaker 0>Brian?

00:01:54.070 --> 00:01:56.790
<v Speaker 1>This is really exciting. We've been we've been

00:01:56.790 --> 00:01:59.350
<v Speaker 1>iterating on this forever,

00:01:59.350 --> 00:02:00.790
<v Speaker 1>I think, and

00:02:01.185 --> 00:02:05.104
<v Speaker 1>it's starting to become something that feels right,

00:02:05.265 --> 00:02:06.225
<v Speaker 1>which is awesome.

00:02:06.784 --> 00:02:09.185
<v Speaker 0>Yeah, I couldn't agree more. I think we

00:02:09.185 --> 00:02:10.465
<v Speaker 0>talked about it for a while before we

00:02:10.465 --> 00:02:12.545
<v Speaker 0>even started building it. I think our conversations

00:02:12.545 --> 00:02:14.785
<v Speaker 0>around us maybe started towards the end of

00:02:14.785 --> 00:02:16.705
<v Speaker 0>last year, maybe a little bit earlier,

00:02:16.865 --> 00:02:18.750
<v Speaker 0>where we both just had these grand plans

00:02:18.750 --> 00:02:21.630
<v Speaker 0>for how we wanted our data to work.

00:02:22.430 --> 00:02:23.390
<v Speaker 0>And just,

00:02:23.710 --> 00:02:26.350
<v Speaker 0>it's been really cool watching this project change

00:02:26.350 --> 00:02:28.430
<v Speaker 0>a lot over the last seven

00:02:28.430 --> 00:02:28.990
<v Speaker 0>or eight months.

00:02:29.925 --> 00:02:31.765
<v Speaker 1>Yeah. I think my favorite thing about this

00:02:31.765 --> 00:02:33.765
<v Speaker 1>particular project is the fact that

00:02:34.165 --> 00:02:37.285
<v Speaker 1>we've been completely unafraid to evolve

00:02:37.765 --> 00:02:39.365
<v Speaker 1>our implementations

00:02:39.365 --> 00:02:40.645
<v Speaker 1>as we realize

00:02:41.890 --> 00:02:43.410
<v Speaker 1>the way things are working

00:02:44.450 --> 00:02:47.890
<v Speaker 1>didn't really meet our visions. And and when

00:02:48.209 --> 00:02:50.129
<v Speaker 1>when the the code takes you in the

00:02:50.129 --> 00:02:51.810
<v Speaker 1>direction you don't wanna be, it's it's totally

00:02:51.810 --> 00:02:53.409
<v Speaker 1>okay to throw that out and and start

00:02:53.409 --> 00:02:56.050
<v Speaker 1>over. And we've definitely done that more than

00:02:56.129 --> 00:02:56.769
<v Speaker 1>five times.

00:02:58.585 --> 00:03:01.225
<v Speaker 0>Yeah. I hadn't I hadn't actually thought about

00:03:01.225 --> 00:03:03.305
<v Speaker 0>that. But, yeah, we do we we experiment

00:03:03.305 --> 00:03:05.465
<v Speaker 0>a lot. Right? We're definitely tankers always playing

00:03:05.465 --> 00:03:07.385
<v Speaker 0>with new technologies and and new tools. And

00:03:07.385 --> 00:03:08.905
<v Speaker 0>I think we we kind of take those

00:03:08.905 --> 00:03:11.545
<v Speaker 0>learnings and experience and and bring them back

00:03:11.545 --> 00:03:13.930
<v Speaker 0>to what we're actually doing. So yeah.

00:03:14.410 --> 00:03:14.810
<v Speaker 0>Let let

00:03:15.450 --> 00:03:17.130
<v Speaker 0>we kinda skip the step here. For anyone

00:03:17.130 --> 00:03:18.650
<v Speaker 0>that's not aware of you, Brian, can you

00:03:18.650 --> 00:03:19.770
<v Speaker 0>give us a little bit of an introduction

00:03:19.770 --> 00:03:21.050
<v Speaker 0>and tell us a little bit about yourself,

00:03:21.050 --> 00:03:22.010
<v Speaker 0>please? Sure.

00:03:22.170 --> 00:03:23.770
<v Speaker 1>My name is Brian Kettleson,

00:03:24.250 --> 00:03:26.295
<v Speaker 1>I'm let's see My nice little lower third

00:03:26.295 --> 00:03:28.135
<v Speaker 1>there. I did text name off. That's it.

00:03:28.135 --> 00:03:30.375
<v Speaker 0>You you don't deserve my purple name anymore.

00:03:30.855 --> 00:03:33.575
<v Speaker 1>I'm a cloud developer advocate at Microsoft on

00:03:33.575 --> 00:03:35.735
<v Speaker 1>Azure, and we focus on

00:03:36.055 --> 00:03:37.975
<v Speaker 1>Linux and open source,

00:03:39.680 --> 00:03:42.000
<v Speaker 1>all of the fun stuff. So,

00:03:42.640 --> 00:03:44.720
<v Speaker 1>I really enjoy my job because I get

00:03:44.720 --> 00:03:47.200
<v Speaker 1>to do open source y, Linux y things

00:03:47.200 --> 00:03:48.960
<v Speaker 1>all day long for Microsoft

00:03:48.960 --> 00:03:49.600
<v Speaker 1>and

00:03:49.840 --> 00:03:52.000
<v Speaker 1>surprise people. I guess it's it's maybe less

00:03:52.000 --> 00:03:53.760
<v Speaker 1>surprising now than it used to be, but,

00:03:53.760 --> 00:03:55.655
<v Speaker 1>you know, Microsoft has a ton of open

00:03:55.655 --> 00:03:56.935
<v Speaker 1>source and

00:03:57.175 --> 00:03:58.855
<v Speaker 1>we really enjoy

00:03:59.495 --> 00:04:02.295
<v Speaker 1>contributing back to the community and and helping

00:04:02.375 --> 00:04:03.015
<v Speaker 1>people

00:04:04.215 --> 00:04:06.935
<v Speaker 1>with their open source projects running them anywhere,

00:04:06.935 --> 00:04:07.815
<v Speaker 1>including Azure.

00:04:08.420 --> 00:04:10.980
<v Speaker 1>And our our team is full of contributors

00:04:10.980 --> 00:04:14.420
<v Speaker 1>to all sorts of different OSS projects.

00:04:15.620 --> 00:04:16.340
<v Speaker 0>Yes.

00:04:16.820 --> 00:04:19.140
<v Speaker 0>Definitely not the Microsoft of the nineties. I'm

00:04:19.140 --> 00:04:21.540
<v Speaker 0>always super impressed with the work coming out

00:04:21.540 --> 00:04:22.820
<v Speaker 0>of Microsoft

00:04:22.525 --> 00:04:24.365
<v Speaker 0>over the last ten years. It's it's really

00:04:24.365 --> 00:04:25.965
<v Speaker 0>refreshing and it's great to see.

00:04:27.405 --> 00:04:28.045
<v Speaker 0>Push,

00:04:28.685 --> 00:04:31.405
<v Speaker 0>you're always hacking on weird things on Azure

00:04:31.405 --> 00:04:32.685
<v Speaker 0>too. And in fact, there's been a couple

00:04:32.685 --> 00:04:34.205
<v Speaker 0>of really cool experiments that you've done with

00:04:34.205 --> 00:04:36.285
<v Speaker 0>CueBlox alone on Azure, which I've done really

00:04:36.285 --> 00:04:38.280
<v Speaker 0>interesting as well. Like, you just seem to

00:04:38.280 --> 00:04:39.879
<v Speaker 0>have this really cool way of being able

00:04:39.879 --> 00:04:42.199
<v Speaker 0>to take stuff that should be run on,

00:04:42.360 --> 00:04:44.840
<v Speaker 0>like, a real machine and making it serverless

00:04:44.840 --> 00:04:46.600
<v Speaker 0>in some way, which is always exciting.

00:04:47.000 --> 00:04:49.319
<v Speaker 1>You know, it's so funny because maybe three

00:04:49.319 --> 00:04:52.235
<v Speaker 1>or four years ago, I was as anti

00:04:52.235 --> 00:04:53.995
<v Speaker 1>serverless as one can be.

00:04:54.315 --> 00:04:56.555
<v Speaker 1>Just why in the world would you want

00:04:56.555 --> 00:04:59.035
<v Speaker 1>to give up control of your code and

00:04:59.035 --> 00:05:00.715
<v Speaker 1>how it's hosted? And now,

00:05:01.275 --> 00:05:03.980
<v Speaker 1>I don't want to host anything of my

00:05:03.980 --> 00:05:05.980
<v Speaker 1>own at all. It it better be in

00:05:05.980 --> 00:05:07.660
<v Speaker 1>the cloud or I'm not gonna run it.

00:05:07.660 --> 00:05:10.460
<v Speaker 1>That's just it's it's so weird how

00:05:10.700 --> 00:05:13.580
<v Speaker 1>how quickly I changed my mind on the

00:05:13.580 --> 00:05:14.460
<v Speaker 1>serverless concept.

00:05:15.895 --> 00:05:16.455
<v Speaker 1>And,

00:05:16.775 --> 00:05:18.935
<v Speaker 1>you know, I'm I'm I'm totally embracing the

00:05:18.935 --> 00:05:21.255
<v Speaker 1>fact that I used to be anti serverless,

00:05:21.255 --> 00:05:23.495
<v Speaker 1>and now I'm very pro serverless. It you

00:05:23.495 --> 00:05:25.014
<v Speaker 1>know, it's it's okay to change your mind.

00:05:25.014 --> 00:05:26.935
<v Speaker 1>It's okay to have new opinions and

00:05:27.095 --> 00:05:27.815
<v Speaker 1>and learn.

00:05:28.370 --> 00:05:30.450
<v Speaker 0>Yeah. I think the frameworks are also I

00:05:30.450 --> 00:05:31.890
<v Speaker 0>I mean, I don't wanna throw into a

00:05:31.890 --> 00:05:34.450
<v Speaker 0>pro serverless conversation by any means, but serverless

00:05:34.450 --> 00:05:36.210
<v Speaker 0>as a technology has improved so much as

00:05:36.210 --> 00:05:37.410
<v Speaker 0>well over the last few years. Like, you

00:05:37.410 --> 00:05:39.330
<v Speaker 0>can now take go by any reason or

00:05:39.330 --> 00:05:42.370
<v Speaker 0>Java application, Python applications, whereas initially, was really

00:05:42.370 --> 00:05:44.835
<v Speaker 0>just here's about JavaScript and we're gonna run

00:05:44.835 --> 00:05:46.195
<v Speaker 0>it in some way for you on this

00:05:46.195 --> 00:05:46.835
<v Speaker 0>platform.

00:05:47.235 --> 00:05:49.875
<v Speaker 1>Yeah. Yeah. It would it's definitely evolved a

00:05:49.875 --> 00:05:52.515
<v Speaker 1>lot and it's still evolving. I mean,

00:05:53.075 --> 00:05:54.675
<v Speaker 1>most of the platforms

00:05:54.675 --> 00:05:56.115
<v Speaker 1>that where you can run

00:05:56.849 --> 00:05:58.610
<v Speaker 1>things that aren't JavaScript,

00:05:58.610 --> 00:06:00.770
<v Speaker 1>you have to do them over some sort

00:06:00.770 --> 00:06:03.810
<v Speaker 1>of HTTP bridge, you know. So it's we're

00:06:03.810 --> 00:06:05.969
<v Speaker 1>we're we're way back in the nineties doing

00:06:05.969 --> 00:06:08.130
<v Speaker 1>CGI again, and that's okay.

00:06:08.449 --> 00:06:09.889
<v Speaker 1>It works and it's fun.

00:06:10.575 --> 00:06:12.095
<v Speaker 1>It will evolve more

00:06:12.415 --> 00:06:13.455
<v Speaker 1>and that's fine.

00:06:14.495 --> 00:06:16.815
<v Speaker 0>Sweet. Alright. So the topic of the day

00:06:16.815 --> 00:06:18.335
<v Speaker 0>is CueBlox.

00:06:18.735 --> 00:06:20.415
<v Speaker 0>Do you wanna give people the

00:06:21.695 --> 00:06:24.230
<v Speaker 0>that Taylor thing is super cool. Do you

00:06:24.230 --> 00:06:26.150
<v Speaker 0>wanna give people the TLDR? Have you have

00:06:26.150 --> 00:06:28.150
<v Speaker 0>you got a patch ready for it? How

00:06:28.150 --> 00:06:30.950
<v Speaker 1>does one do the TLDR of CueBlox? So

00:06:31.990 --> 00:06:33.110
<v Speaker 1>CueBlox

00:06:33.510 --> 00:06:34.710
<v Speaker 1>as a vision

00:06:34.790 --> 00:06:36.230
<v Speaker 1>was

00:06:36.655 --> 00:06:39.615
<v Speaker 1>started because we wanted a way to have

00:06:39.615 --> 00:06:41.375
<v Speaker 1>a schema for our

00:06:41.775 --> 00:06:44.655
<v Speaker 1>data that we could share in a group.

00:06:44.975 --> 00:06:47.294
<v Speaker 1>So if if you and I were talking

00:06:47.294 --> 00:06:49.135
<v Speaker 1>about an event and that event happened to

00:06:49.135 --> 00:06:50.975
<v Speaker 1>be described in a YAML file or a

00:06:50.975 --> 00:06:51.615
<v Speaker 1>JSON file,

00:06:52.229 --> 00:06:54.310
<v Speaker 1>we wanted to be able to share those

00:06:54.310 --> 00:06:56.630
<v Speaker 1>events in our teams and our groups

00:06:56.870 --> 00:06:58.790
<v Speaker 1>and be able to reuse them

00:06:59.270 --> 00:07:00.070
<v Speaker 1>across

00:07:00.789 --> 00:07:01.750
<v Speaker 1>the team

00:07:02.150 --> 00:07:06.150
<v Speaker 1>without any crazy translation of, you know, your

00:07:06.150 --> 00:07:08.365
<v Speaker 1>field names and my field names. So,

00:07:08.925 --> 00:07:11.725
<v Speaker 1>that was the beginning of the discussion that

00:07:11.805 --> 00:07:14.685
<v Speaker 1>ended up with us writing thousands of lines

00:07:14.685 --> 00:07:16.925
<v Speaker 1>of Go and learning Cue

00:07:17.245 --> 00:07:17.725
<v Speaker 1>and,

00:07:18.605 --> 00:07:20.285
<v Speaker 1>months and months and hours of work.

00:07:21.090 --> 00:07:23.490
<v Speaker 1>And what we've ended up with is

00:07:23.650 --> 00:07:25.090
<v Speaker 1>way to define

00:07:25.490 --> 00:07:28.850
<v Speaker 1>a schema for a record set and

00:07:29.169 --> 00:07:32.129
<v Speaker 1>use that schema to validate your record set,

00:07:32.129 --> 00:07:35.650
<v Speaker 1>including referential integrity between groups of records,

00:07:36.285 --> 00:07:39.645
<v Speaker 1>and then publish it using all kinds of

00:07:39.645 --> 00:07:40.525
<v Speaker 1>really interesting

00:07:40.765 --> 00:07:42.845
<v Speaker 1>little tools that we've built along the way

00:07:42.845 --> 00:07:43.965
<v Speaker 1>for publishing

00:07:44.365 --> 00:07:44.925
<v Speaker 1>and,

00:07:45.565 --> 00:07:46.685
<v Speaker 1>share that data

00:07:46.925 --> 00:07:47.725
<v Speaker 1>among,

00:07:48.045 --> 00:07:51.760
<v Speaker 1>just yourself or among a team with published

00:07:51.760 --> 00:07:52.960
<v Speaker 1>group schemas.

00:07:53.760 --> 00:07:55.520
<v Speaker 1>We've got a lot going on in in

00:07:55.520 --> 00:07:57.760
<v Speaker 1>CueBlox. It's it's I don't know if there

00:07:57.760 --> 00:08:00.320
<v Speaker 1>is a TLDR. There's certainly no elevator pitch.

00:08:00.880 --> 00:08:03.765
<v Speaker 0>Yeah. I mean, I think, you know, if,

00:08:03.765 --> 00:08:05.605
<v Speaker 0>you know, if if if anyone's watching this

00:08:05.605 --> 00:08:07.365
<v Speaker 0>and they go, I have YAML data or,

00:08:07.365 --> 00:08:08.965
<v Speaker 0>you know, I have JSON data or you

00:08:08.965 --> 00:08:11.125
<v Speaker 0>have marked down data with front matter. Like,

00:08:11.845 --> 00:08:13.765
<v Speaker 0>if you want to be able to enforce

00:08:13.765 --> 00:08:16.165
<v Speaker 0>a schema on that front matter or the

00:08:16.165 --> 00:08:18.169
<v Speaker 0>YAML or the JSON, There are certain ways

00:08:18.169 --> 00:08:19.290
<v Speaker 0>to do it right now, but none of

00:08:19.290 --> 00:08:21.530
<v Speaker 0>them really provide, I feel,

00:08:22.250 --> 00:08:24.010
<v Speaker 0>like the platform. I feel like CueBlox is

00:08:24.010 --> 00:08:25.770
<v Speaker 0>is turned into a platform to work with

00:08:25.770 --> 00:08:27.290
<v Speaker 0>that data. And if I I'm gonna pull

00:08:27.290 --> 00:08:28.889
<v Speaker 0>up something that you created on the website

00:08:28.889 --> 00:08:31.130
<v Speaker 0>that I just absolutely love. So

00:08:31.655 --> 00:08:34.455
<v Speaker 1>The pyramid? The pyramids. There we go.

00:08:35.174 --> 00:08:37.654
<v Speaker 1>This is Maslow's hierarchy of data.

00:08:40.375 --> 00:08:42.054
<v Speaker 0>I think this pyramid does a really good

00:08:42.054 --> 00:08:45.170
<v Speaker 0>job of explaining why people should be interested

00:08:45.170 --> 00:08:47.570
<v Speaker 0>in CueBlox. You know, we we start with

00:08:47.570 --> 00:08:49.570
<v Speaker 0>markdown and YAML validation. I think that's one

00:08:49.570 --> 00:08:50.850
<v Speaker 0>of the things that when you define the

00:08:50.850 --> 00:08:53.810
<v Speaker 0>schema and you point CueBlox to it, you

00:08:53.810 --> 00:08:55.890
<v Speaker 0>just get that by running a a blocks

00:08:56.050 --> 00:08:57.570
<v Speaker 0>validate command and

00:08:57.965 --> 00:08:59.325
<v Speaker 0>it just says, yeah, your data is good

00:08:59.325 --> 00:09:00.845
<v Speaker 0>or no, your data is bad.

00:09:01.405 --> 00:09:03.085
<v Speaker 1>Yeah. And at the basic level, that's a

00:09:03.085 --> 00:09:05.405
<v Speaker 1>really great way to do things like validation

00:09:05.405 --> 00:09:07.805
<v Speaker 1>for the front matter in your blog posts.

00:09:07.805 --> 00:09:09.965
<v Speaker 1>You know, something really simple, you're not gonna

00:09:09.965 --> 00:09:11.885
<v Speaker 1>ship a blog post without

00:09:13.405 --> 00:09:15.940
<v Speaker 1>a date or a title or an OG

00:09:15.940 --> 00:09:17.860
<v Speaker 1>field, you know, whatever it is that you've

00:09:17.860 --> 00:09:19.620
<v Speaker 1>got in your blog that is important to

00:09:19.620 --> 00:09:21.700
<v Speaker 1>make your website look good. Yep. You you

00:09:21.700 --> 00:09:23.620
<v Speaker 1>can use blocks to validate that they're all

00:09:23.620 --> 00:09:24.900
<v Speaker 1>there and in the right format.

00:09:26.745 --> 00:09:28.025
<v Speaker 0>Yeah. And the

00:09:28.585 --> 00:09:30.905
<v Speaker 0>referential integrity, I think, kinda comes in as

00:09:30.905 --> 00:09:32.345
<v Speaker 0>there too. I mean, I don't think I've

00:09:32.345 --> 00:09:35.225
<v Speaker 0>seen anything else offer that for YAML data,

00:09:35.225 --> 00:09:37.225
<v Speaker 0>and I think that that alone is a

00:09:37.225 --> 00:09:40.025
<v Speaker 0>great reason for people to be curious or

00:09:40.025 --> 00:09:42.425
<v Speaker 0>at least their interest to be piqued. I

00:09:41.670 --> 00:09:43.110
<v Speaker 0>I I won't describe that though. I think

00:09:43.110 --> 00:09:44.709
<v Speaker 0>when I say reference on Checkatrade, I hope

00:09:44.709 --> 00:09:46.310
<v Speaker 0>people understand what that means and we'll we'll

00:09:46.310 --> 00:09:49.350
<v Speaker 0>definitely show it as a natural demo in

00:09:49.350 --> 00:09:50.230
<v Speaker 0>a few moments.

00:09:51.510 --> 00:09:53.750
<v Speaker 0>We then have the ability to convert or

00:09:53.750 --> 00:09:55.510
<v Speaker 0>manipulate that that data.

00:09:55.995 --> 00:09:57.675
<v Speaker 0>And you've done some really cool things there,

00:09:57.675 --> 00:09:59.275
<v Speaker 0>I'll let you kinda tackle that one.

00:09:59.835 --> 00:10:02.795
<v Speaker 1>Yeah. We we start with either YAML or

00:10:02.795 --> 00:10:06.235
<v Speaker 1>or Markdown and we can convert it into

00:10:06.715 --> 00:10:07.355
<v Speaker 1>all

00:10:08.155 --> 00:10:09.595
<v Speaker 1>sorts of different things,

00:10:09.995 --> 00:10:12.750
<v Speaker 1>JSON being the most obvious and basic of

00:10:12.750 --> 00:10:13.310
<v Speaker 1>them.

00:10:13.709 --> 00:10:14.190
<v Speaker 1>But,

00:10:14.510 --> 00:10:17.070
<v Speaker 1>we built a templating engine into

00:10:17.230 --> 00:10:20.350
<v Speaker 1>CueBlox so we can use Go's templates

00:10:20.830 --> 00:10:21.550
<v Speaker 1>to

00:10:22.510 --> 00:10:23.870
<v Speaker 1>run

00:10:24.345 --> 00:10:27.065
<v Speaker 1>any sort of template over either a record

00:10:27.065 --> 00:10:30.105
<v Speaker 1>set or individual records. Mhmm. And I've used

00:10:30.105 --> 00:10:32.505
<v Speaker 1>that for some ridiculously awesome stuff. I built

00:10:32.505 --> 00:10:35.305
<v Speaker 1>a template that builds Bash scripts

00:10:35.385 --> 00:10:36.345
<v Speaker 1>and

00:10:36.345 --> 00:10:39.020
<v Speaker 1>runs the Bash scripts for each record and

00:10:39.020 --> 00:10:41.100
<v Speaker 1>each record set. And it's just I mean,

00:10:41.100 --> 00:10:44.300
<v Speaker 1>it's amazing how much power you have with,

00:10:44.540 --> 00:10:46.140
<v Speaker 1>Turing complete language.

00:10:46.860 --> 00:10:48.940
<v Speaker 1>It's a lot of fun. I can't remember

00:10:48.940 --> 00:10:50.700
<v Speaker 0>if we talked about it or you actually

00:10:50.855 --> 00:10:52.855
<v Speaker 0>you did it one day, but the Atom

00:10:52.855 --> 00:10:55.175
<v Speaker 0>RSS feed, is that something did we just

00:10:55.175 --> 00:10:56.695
<v Speaker 0>talk about that? But another that would be

00:10:56.695 --> 00:10:58.055
<v Speaker 0>a really good use case for this as

00:10:58.055 --> 00:11:00.535
<v Speaker 0>well. Right? No. We we did that. There's

00:11:00.695 --> 00:11:02.055
<v Speaker 1>we have an RSS feed.

00:11:04.319 --> 00:11:05.120
<v Speaker 1>You

00:11:05.120 --> 00:11:06.639
<v Speaker 1>name it, you can build it with the

00:11:06.639 --> 00:11:08.000
<v Speaker 1>templating engine. It's

00:11:08.480 --> 00:11:09.279
<v Speaker 1>really fun.

00:11:10.399 --> 00:11:12.720
<v Speaker 0>Alright. Moving up our pyramid, we have the

00:11:12.720 --> 00:11:13.839
<v Speaker 0>shared schemata.

00:11:15.735 --> 00:11:17.495
<v Speaker 0>But one of the primitives,

00:11:17.495 --> 00:11:20.214
<v Speaker 0>I guess, in CueBlox is that we we

00:11:20.214 --> 00:11:22.214
<v Speaker 0>try to provide some functionality for you to

00:11:22.214 --> 00:11:23.815
<v Speaker 0>pull in schemata that is stored in a

00:11:23.815 --> 00:11:25.415
<v Speaker 0>central location so it can be shared with

00:11:25.415 --> 00:11:27.175
<v Speaker 0>other people. And the way that we do

00:11:27.175 --> 00:11:29.415
<v Speaker 0>that is just by defining metadata on all

00:11:29.415 --> 00:11:32.774
<v Speaker 0>of the on all of the schemata that

00:11:31.590 --> 00:11:33.590
<v Speaker 0>gives it a namespace and a type. So

00:11:33.590 --> 00:11:36.230
<v Speaker 0>we kind of explore that as we write

00:11:36.230 --> 00:11:39.350
<v Speaker 0>our first schema during kind of today's session.

00:11:39.830 --> 00:11:41.910
<v Speaker 0>And then a custom schemata repository, I think,

00:11:41.910 --> 00:11:43.670
<v Speaker 0>is just really a follow on to that.

00:11:44.805 --> 00:11:46.885
<v Speaker 0>So Yeah. If if I can expand on

00:11:46.885 --> 00:11:48.325
<v Speaker 1>that though, the Oh, please do. This is

00:11:48.325 --> 00:11:50.645
<v Speaker 1>this is really the core of of what

00:11:50.645 --> 00:11:51.845
<v Speaker 1>brought us into

00:11:52.245 --> 00:11:54.965
<v Speaker 1>CueBlox in building this was getting people on

00:11:54.965 --> 00:11:57.560
<v Speaker 1>the same page and making sure that my

00:11:57.560 --> 00:11:59.720
<v Speaker 1>definition of an event is the same as

00:11:59.720 --> 00:12:01.320
<v Speaker 1>your definition of event.

00:12:01.560 --> 00:12:04.120
<v Speaker 1>And once we share the same definitions,

00:12:04.120 --> 00:12:06.280
<v Speaker 1>it makes sense to be able to publish

00:12:06.280 --> 00:12:08.840
<v Speaker 1>them either privately or publicly.

00:12:09.160 --> 00:12:12.440
<v Speaker 1>And so now we have the idea of

00:12:11.985 --> 00:12:14.545
<v Speaker 1>creating our own schemata repositories

00:12:14.785 --> 00:12:15.985
<v Speaker 1>that we can use,

00:12:16.545 --> 00:12:19.024
<v Speaker 1>and everybody points at that repository and our

00:12:19.024 --> 00:12:21.584
<v Speaker 1>command line tools make that dead simple. You

00:12:21.584 --> 00:12:23.185
<v Speaker 1>know, it's it's as simple as a go

00:12:23.185 --> 00:12:24.464
<v Speaker 1>get is in Go,

00:12:25.380 --> 00:12:27.220
<v Speaker 1>we can do the same thing for a

00:12:27.220 --> 00:12:29.300
<v Speaker 1>schema in in blocks.

00:12:30.020 --> 00:12:32.260
<v Speaker 0>Yeah. Definitely. And and some of the really

00:12:32.260 --> 00:12:33.860
<v Speaker 0>cool work you've been doing this week actually

00:12:33.860 --> 00:12:35.540
<v Speaker 0>moves some of this functionality out of core

00:12:35.540 --> 00:12:37.780
<v Speaker 0>and into plugins, which we'll get to have

00:12:37.780 --> 00:12:39.460
<v Speaker 0>a really fun look at as well during

00:12:39.460 --> 00:12:40.100
<v Speaker 0>today's session.

00:12:41.595 --> 00:12:44.475
<v Speaker 0>And the last one is consistent aggregated team

00:12:44.475 --> 00:12:46.875
<v Speaker 0>data. So, you know, something Brian and I

00:12:46.875 --> 00:12:48.875
<v Speaker 0>have been trying to think about as we

00:12:48.875 --> 00:12:50.555
<v Speaker 0>build out this tooling is that, you know,

00:12:50.555 --> 00:12:51.515
<v Speaker 0>individual

00:12:52.075 --> 00:12:54.235
<v Speaker 0>people may own a subset of data, but

00:12:54.235 --> 00:12:56.149
<v Speaker 0>you may wanna aggregate that at a team

00:12:56.149 --> 00:12:57.589
<v Speaker 0>or organization

00:12:57.750 --> 00:12:58.630
<v Speaker 0>level.

00:12:58.630 --> 00:13:00.149
<v Speaker 0>We wanna be able to make that as

00:13:00.149 --> 00:13:01.670
<v Speaker 0>easy as possible.

00:13:02.790 --> 00:13:04.470
<v Speaker 0>Have I missed anything that you wanna add

00:13:04.470 --> 00:13:06.550
<v Speaker 0>to that? No. I

00:13:06.870 --> 00:13:08.389
<v Speaker 1>think the core

00:13:08.895 --> 00:13:11.215
<v Speaker 1>of where we ended up is the idea

00:13:11.215 --> 00:13:12.495
<v Speaker 1>that we have these

00:13:12.895 --> 00:13:15.135
<v Speaker 1>federated independent datasets

00:13:15.375 --> 00:13:19.695
<v Speaker 1>that share some properties in their schemata

00:13:19.855 --> 00:13:22.655
<v Speaker 1>that allow us to aggregate pieces of them.

00:13:22.655 --> 00:13:23.935
<v Speaker 1>I mean, my blog

00:13:24.540 --> 00:13:27.020
<v Speaker 1>articles may not look anything like yours,

00:13:27.420 --> 00:13:30.620
<v Speaker 1>but our event schema are the same and

00:13:30.620 --> 00:13:33.180
<v Speaker 1>that means that we can publish an aggregated

00:13:33.180 --> 00:13:34.060
<v Speaker 1>calendar

00:13:34.220 --> 00:13:36.140
<v Speaker 1>for you and I if we were on

00:13:36.140 --> 00:13:38.620
<v Speaker 1>the same team. And the data would would

00:13:38.620 --> 00:13:40.135
<v Speaker 1>be perfectly

00:13:40.695 --> 00:13:42.295
<v Speaker 1>in in good shape. We wouldn't have to

00:13:42.295 --> 00:13:44.455
<v Speaker 1>do anything to that data because of that.

00:13:44.695 --> 00:13:47.095
<v Speaker 1>And that's really fun. That that made this

00:13:47.255 --> 00:13:48.935
<v Speaker 1>project well worthwhile,

00:13:48.935 --> 00:13:49.495
<v Speaker 1>I think.

00:13:50.455 --> 00:13:53.335
<v Speaker 0>Yeah. I still enjoy seeing Scamata just for

00:13:53.335 --> 00:13:55.170
<v Speaker 0>the record. I think it's a great word.

00:13:56.449 --> 00:13:58.050
<v Speaker 1>It is a great word. And you know,

00:13:58.050 --> 00:14:00.290
<v Speaker 1>what what what we haven't really talked about

00:14:00.370 --> 00:14:02.690
<v Speaker 1>in this whole pyramid is is the

00:14:03.250 --> 00:14:05.490
<v Speaker 1>the myriad of tools that we've built

00:14:05.985 --> 00:14:08.545
<v Speaker 1>to consume this data and to publish it.

00:14:08.545 --> 00:14:10.785
<v Speaker 1>You know, we've we've had a lot of

00:14:10.785 --> 00:14:12.305
<v Speaker 1>fun along the way,

00:14:13.904 --> 00:14:17.105
<v Speaker 1>building things that make REST APIs out of

00:14:17.105 --> 00:14:19.904
<v Speaker 1>CUE data automatically and GraphQL APIs.

00:14:20.790 --> 00:14:23.190
<v Speaker 1>And Yep. You know, all of that is

00:14:23.190 --> 00:14:25.190
<v Speaker 1>is dead simple and

00:14:25.430 --> 00:14:27.670
<v Speaker 1>one GitHub action away. So

00:14:29.029 --> 00:14:29.910
<v Speaker 1>David,

00:14:29.990 --> 00:14:31.510
<v Speaker 1>from minute one,

00:14:31.990 --> 00:14:34.870
<v Speaker 1>has been insistent emphatically insistent that

00:14:35.055 --> 00:14:37.774
<v Speaker 1>this is GitOps. You push to a Git

00:14:37.774 --> 00:14:39.695
<v Speaker 1>repository and things happen.

00:14:40.255 --> 00:14:42.575
<v Speaker 1>And I think that's been a really solid,

00:14:43.535 --> 00:14:46.015
<v Speaker 1>goal for us is to have Git be

00:14:46.015 --> 00:14:48.015
<v Speaker 1>the source of truth for this data and

00:14:48.015 --> 00:14:51.589
<v Speaker 1>then publishing things just happen afterwards.

00:14:52.470 --> 00:14:54.709
<v Speaker 1>And that's that's that's where I've had most

00:14:54.709 --> 00:14:57.190
<v Speaker 1>of my fun, think, is is taking that

00:14:57.190 --> 00:14:59.110
<v Speaker 1>cue data and alright. How are we gonna

00:14:59.110 --> 00:15:00.150
<v Speaker 1>make this into

00:15:00.870 --> 00:15:01.830
<v Speaker 1>GraphQL

00:15:01.830 --> 00:15:03.029
<v Speaker 1>serverless

00:15:02.645 --> 00:15:05.205
<v Speaker 1>on for sale or on Azure,

00:15:05.205 --> 00:15:07.925
<v Speaker 1>on Google Cloud, you know, and I've had

00:15:07.925 --> 00:15:09.205
<v Speaker 1>a lot of fun doing that.

00:15:09.765 --> 00:15:11.685
<v Speaker 0>Yes. 100%.

00:15:12.245 --> 00:15:14.325
<v Speaker 0>Alright. Before we dive into the hands on

00:15:14.325 --> 00:15:16.485
<v Speaker 0>bit and we start actually playing with CueBlox,

00:15:16.485 --> 00:15:17.765
<v Speaker 0>I think let's try and

00:15:18.279 --> 00:15:20.120
<v Speaker 0>cement everything we've said so far with like

00:15:20.120 --> 00:15:21.960
<v Speaker 0>a real world use case for what we're

00:15:21.960 --> 00:15:23.640
<v Speaker 0>actually using CueBlox for.

00:15:25.240 --> 00:15:25.800
<v Speaker 0>So

00:15:26.120 --> 00:15:28.120
<v Speaker 0>I think we'll try and stick with what

00:15:28.120 --> 00:15:29.240
<v Speaker 0>we have in common and then feel free

00:15:29.240 --> 00:15:31.560
<v Speaker 0>to add on whatever you wish from your

00:15:32.040 --> 00:15:33.080
<v Speaker 0>own project too.

00:15:33.560 --> 00:15:35.555
<v Speaker 0>But I think as developer advocates,

00:15:35.635 --> 00:15:36.835
<v Speaker 0>we we both have

00:15:37.155 --> 00:15:39.155
<v Speaker 0>articles that we write that we wanna publish

00:15:39.155 --> 00:15:40.275
<v Speaker 0>to our website.

00:15:41.315 --> 00:15:44.035
<v Speaker 0>Those articles are typically marked down and we

00:15:44.035 --> 00:15:45.715
<v Speaker 0>would now both have them living in a

00:15:45.715 --> 00:15:49.149
<v Speaker 0>git directory with a git hub action that

00:15:49.149 --> 00:15:50.430
<v Speaker 0>on every commit,

00:15:50.750 --> 00:15:53.149
<v Speaker 0>it will validate the front matter on every

00:15:53.149 --> 00:15:53.870
<v Speaker 0>article.

00:15:54.589 --> 00:15:56.350
<v Speaker 0>And if it passes,

00:15:56.430 --> 00:15:58.750
<v Speaker 0>it will output a JSON blob that can

00:15:58.750 --> 00:16:00.350
<v Speaker 0>be consumed by other tooling.

00:16:01.394 --> 00:16:03.955
<v Speaker 0>That JSON blob is published as a release

00:16:03.955 --> 00:16:06.355
<v Speaker 0>artifact on both of our GitHub

00:16:06.355 --> 00:16:07.555
<v Speaker 0>repositories.

00:16:08.595 --> 00:16:09.395
<v Speaker 0>And

00:16:10.435 --> 00:16:11.555
<v Speaker 0>we have

00:16:11.795 --> 00:16:12.355
<v Speaker 0>oh,

00:16:12.755 --> 00:16:14.274
<v Speaker 0>how are you using your API right now?

00:16:15.460 --> 00:16:18.260
<v Speaker 1>I'm using well, actually, I'm using it in

00:16:18.260 --> 00:16:20.500
<v Speaker 1>two different ways in the same blog. I'm

00:16:20.500 --> 00:16:23.060
<v Speaker 1>I'm I'm pulling it directly out of the

00:16:23.060 --> 00:16:24.580
<v Speaker 1>file system in markdown

00:16:24.900 --> 00:16:26.580
<v Speaker 1>and using MDX,

00:16:26.820 --> 00:16:29.940
<v Speaker 1>and I'm also consuming it over the new

00:16:31.514 --> 00:16:32.555
<v Speaker 1>API

00:16:33.514 --> 00:16:34.475
<v Speaker 0>The surf command. The

00:16:35.355 --> 00:16:37.915
<v Speaker 1>no. Not the surf command. The the static

00:16:37.915 --> 00:16:38.795
<v Speaker 1>CDN.

00:16:38.795 --> 00:16:40.795
<v Speaker 0>Oh, nice. So that that's the plugin that

00:16:40.795 --> 00:16:41.995
<v Speaker 1>I built last week,

00:16:42.475 --> 00:16:43.435
<v Speaker 1>which I can show off.

00:16:45.060 --> 00:16:47.380
<v Speaker 1>Plugins have been so much fun. Yeah.

00:16:47.620 --> 00:16:49.140
<v Speaker 0>I've only been keeping up with what you've

00:16:49.140 --> 00:16:50.820
<v Speaker 0>shared with me on Discord, but I'm loving

00:16:50.820 --> 00:16:52.260
<v Speaker 0>what I'm seeing. So because we got a

00:16:52.260 --> 00:16:53.540
<v Speaker 0>really good demo of that.

00:16:54.340 --> 00:16:57.060
<v Speaker 0>So, yeah, your data lives in in Git.

00:16:57.225 --> 00:16:59.065
<v Speaker 0>You can validate it in a GitHub action.

00:16:59.065 --> 00:17:00.665
<v Speaker 0>You can publish it as an artifact, as

00:17:00.665 --> 00:17:02.425
<v Speaker 0>JSON to consume it from other tooling. We

00:17:02.425 --> 00:17:05.224
<v Speaker 0>also provide helpers to serve a GraphQL API,

00:17:06.664 --> 00:17:09.145
<v Speaker 0>and all just kinda works really nicely. So

00:17:11.210 --> 00:17:13.450
<v Speaker 0>I'll share my screen again and we will

00:17:13.450 --> 00:17:14.410
<v Speaker 0>jump over

00:17:15.290 --> 00:17:17.929
<v Speaker 0>to a terminal and maybe we can just

00:17:18.890 --> 00:17:20.410
<v Speaker 0>show how to get started with the tool

00:17:20.410 --> 00:17:20.810
<v Speaker 0>itself.

00:17:22.804 --> 00:17:23.524
<v Speaker 0>So

00:17:23.684 --> 00:17:27.124
<v Speaker 0>our latest version, zero seven o, released,

00:17:27.605 --> 00:17:29.525
<v Speaker 0>what, two hours ago, three years ago? At

00:17:29.525 --> 00:17:31.764
<v Speaker 0>least some point this afternoon. More than that.

00:17:31.924 --> 00:17:33.525
<v Speaker 0>Was it? Yeah.

00:17:33.525 --> 00:17:34.565
<v Speaker 1>It was

00:17:34.860 --> 00:17:36.780
<v Speaker 1>it was pretty early this morning, my time.

00:17:36.780 --> 00:17:39.340
<v Speaker 0>Oh, okay. Maybe six or seven hours ago.

00:17:39.820 --> 00:17:41.500
<v Speaker 0>Oh, we we don't have a version command

00:17:41.500 --> 00:17:42.860
<v Speaker 0>as a flag. There we go.

00:17:43.900 --> 00:17:44.619
<v Speaker 0>Nice.

00:17:45.900 --> 00:17:47.580
<v Speaker 0>And the way that you would get started

00:17:47.580 --> 00:17:49.500
<v Speaker 0>with blocks is first to run a blocks

00:17:49.500 --> 00:17:50.299
<v Speaker 0>init command,

00:17:50.995 --> 00:17:52.995
<v Speaker 0>which is gonna set up a little bit

00:17:52.995 --> 00:17:54.514
<v Speaker 0>of boilerplate

00:17:54.914 --> 00:17:56.674
<v Speaker 0>that just tells you where to store your

00:17:56.674 --> 00:17:57.474
<v Speaker 0>schema,

00:17:57.635 --> 00:17:59.634
<v Speaker 0>assets, the data itself,

00:18:00.195 --> 00:18:03.315
<v Speaker 0>and build directory for any intermediaries

00:18:03.315 --> 00:18:05.154
<v Speaker 0>or outputs that we produce as part of

00:18:05.154 --> 00:18:05.955
<v Speaker 0>the block project.

00:18:07.080 --> 00:18:09.080
<v Speaker 1>Yeah. It's probably important to notice that this

00:18:09.080 --> 00:18:11.320
<v Speaker 1>is opinionated but completely changeable.

00:18:11.559 --> 00:18:14.360
<v Speaker 1>The blocks dot cue file has references to

00:18:14.360 --> 00:18:16.120
<v Speaker 1>each of these directories, you can change them

00:18:16.120 --> 00:18:17.320
<v Speaker 1>if it suits you.

00:18:17.799 --> 00:18:20.120
<v Speaker 1>And that's something that I take

00:18:20.715 --> 00:18:23.355
<v Speaker 1>advantage of heavily in my blog. For example,

00:18:23.355 --> 00:18:25.034
<v Speaker 1>the static directory

00:18:25.275 --> 00:18:28.395
<v Speaker 1>is actually the same public static directory as

00:18:28.395 --> 00:18:29.674
<v Speaker 1>my Next JS

00:18:30.155 --> 00:18:33.674
<v Speaker 1>blog. So I share the the static directory

00:18:33.674 --> 00:18:34.155
<v Speaker 1>between

00:18:34.680 --> 00:18:36.120
<v Speaker 1>the blocks repository

00:18:36.120 --> 00:18:37.880
<v Speaker 1>and the website

00:18:38.200 --> 00:18:39.320
<v Speaker 1>because why not?

00:18:41.160 --> 00:18:44.120
<v Speaker 0>Yes. So this is the blocks up here.

00:18:44.680 --> 00:18:47.080
<v Speaker 0>All configurable and do whatever you want. But,

00:18:47.080 --> 00:18:48.760
<v Speaker 0>you know, we'll we'll stick with the basics

00:18:48.760 --> 00:18:49.240
<v Speaker 0>for today.

00:18:49.755 --> 00:18:51.434
<v Speaker 0>My Versus code is

00:18:52.075 --> 00:18:53.434
<v Speaker 0>crawling today.

00:18:54.875 --> 00:18:56.075
<v Speaker 0>Hopefully, that'll be alright.

00:18:56.955 --> 00:18:58.555
<v Speaker 0>This is what happens when you use your

00:18:58.555 --> 00:19:00.555
<v Speaker 0>development machine and the streaming machine at the

00:19:00.555 --> 00:19:01.355
<v Speaker 0>same time. So

00:19:02.580 --> 00:19:03.620
<v Speaker 0>the first thing we need to do is

00:19:03.620 --> 00:19:05.460
<v Speaker 0>define a schema. So I think we'll keep

00:19:05.460 --> 00:19:08.020
<v Speaker 0>this relatively simple for today's exercise, and I'm

00:19:08.020 --> 00:19:09.299
<v Speaker 0>gonna cheat and just

00:19:10.340 --> 00:19:12.659
<v Speaker 0>have a single schema dot queue file.

00:19:15.434 --> 00:19:17.515
<v Speaker 0>And we need to raise some Q. So

00:19:17.515 --> 00:19:19.994
<v Speaker 0>for anyone that's not familiar with Q,

00:19:20.395 --> 00:19:21.914
<v Speaker 0>I think you're missing out, it's such an

00:19:21.914 --> 00:19:25.914
<v Speaker 0>exceptional language for working with constraints across data

00:19:25.914 --> 00:19:27.434
<v Speaker 0>and schema together

00:19:27.595 --> 00:19:29.114
<v Speaker 0>with some really cool

00:19:29.434 --> 00:19:32.169
<v Speaker 0>abilities to like query the document and do

00:19:32.169 --> 00:19:34.090
<v Speaker 0>interpolation and stuff like that. I'm I'm really

00:19:34.090 --> 00:19:36.010
<v Speaker 0>impressed with Cue, but it's not the focus

00:19:36.010 --> 00:19:37.129
<v Speaker 0>of today's session.

00:19:38.090 --> 00:19:40.490
<v Speaker 0>But this is a a Cue document and

00:19:40.490 --> 00:19:42.649
<v Speaker 0>in order to in order for it to

00:19:42.649 --> 00:19:44.169
<v Speaker 0>be a CueBlox schema,

00:19:44.644 --> 00:19:47.764
<v Speaker 0>it requires one piece of metadata,

00:19:49.044 --> 00:19:51.764
<v Speaker 0>which is something called a schema.

00:19:52.644 --> 00:19:55.284
<v Speaker 0>I think it's named. Right? And I'll call

00:19:55.284 --> 00:19:57.604
<v Speaker 0>this Rawkode.demo.live.

00:19:57.764 --> 00:19:58.325
<v Speaker 0>There we go.

00:20:01.350 --> 00:20:02.870
<v Speaker 0>Demo. There we go. I forgot how to

00:20:02.870 --> 00:20:03.749
<v Speaker 0>name space.

00:20:04.309 --> 00:20:06.389
<v Speaker 0>And a name, this will be my

00:20:07.190 --> 00:20:08.149
<v Speaker 0>article

00:20:08.149 --> 00:20:09.909
<v Speaker 0>schema. I think we both know the article

00:20:09.909 --> 00:20:11.590
<v Speaker 0>spec pretty well, so maybe we'll run through

00:20:11.590 --> 00:20:13.110
<v Speaker 0>that and touch on some of the features

00:20:13.110 --> 00:20:13.750
<v Speaker 0>as we go.

00:20:14.325 --> 00:20:16.244
<v Speaker 0>So that's right away is

00:20:16.885 --> 00:20:19.845
<v Speaker 0>valid. CueBlox would scan this directory, read this

00:20:19.845 --> 00:20:21.524
<v Speaker 0>file, and say, hey, we have a namespace

00:20:21.524 --> 00:20:24.244
<v Speaker 0>and we have schema for an article.

00:20:25.125 --> 00:20:27.845
<v Speaker 0>However, we've not really declared any

00:20:29.280 --> 00:20:30.960
<v Speaker 0>types, any definitions,

00:20:31.040 --> 00:20:33.200
<v Speaker 0>any entities, whatever you wanna call them from

00:20:33.200 --> 00:20:34.240
<v Speaker 0>your own background.

00:20:34.640 --> 00:20:36.799
<v Speaker 0>Cue denotes these through

00:20:36.960 --> 00:20:39.360
<v Speaker 0>something called well, through the the hash or

00:20:39.360 --> 00:20:41.040
<v Speaker 0>pound sign depending on where you're from, but

00:20:41.040 --> 00:20:42.880
<v Speaker 0>this is called a definition in Cue. So

00:20:42.880 --> 00:20:45.075
<v Speaker 0>here I can define a person and I

00:20:45.075 --> 00:20:46.914
<v Speaker 0>can define an article,

00:20:47.715 --> 00:20:48.514
<v Speaker 0>like so.

00:20:50.275 --> 00:20:52.755
<v Speaker 0>Now in order for CueBlox to know that

00:20:52.755 --> 00:20:55.475
<v Speaker 0>this definition should be consumed by CueBlox,

00:20:55.715 --> 00:20:57.715
<v Speaker 0>we also need to provide

00:20:58.115 --> 00:21:00.275
<v Speaker 0>oh, sorry. Data set

00:21:01.210 --> 00:21:02.649
<v Speaker 0>tag like this.

00:21:02.809 --> 00:21:04.169
<v Speaker 0>And this just requires

00:21:04.730 --> 00:21:06.169
<v Speaker 0>I can't remember. Does it yeah. I think

00:21:06.169 --> 00:21:07.850
<v Speaker 0>it is required, but you have to set

00:21:08.090 --> 00:21:10.649
<v Speaker 0>Want the plural? Yeah. And you can also

00:21:10.649 --> 00:21:12.250
<v Speaker 0>provide a supported extensions,

00:21:12.725 --> 00:21:15.284
<v Speaker 0>which we'll talk about right now, I guess.

00:21:15.925 --> 00:21:17.765
<v Speaker 0>I think this does default to what we

00:21:17.765 --> 00:21:18.404
<v Speaker 0>consider

00:21:18.805 --> 00:21:21.044
<v Speaker 0>data that we can read, which is what

00:21:21.125 --> 00:21:22.005
<v Speaker 0>YAML

00:21:22.485 --> 00:21:25.300
<v Speaker 1>YAML and Markdown. And Markdown. Yeah. Perfect. Yeah.

00:21:25.300 --> 00:21:26.740
<v Speaker 1>And those extensions are

00:21:26.900 --> 00:21:28.580
<v Speaker 1>YML and MD.

00:21:28.900 --> 00:21:31.780
<v Speaker 1>I changed mine to add MDX

00:21:31.780 --> 00:21:32.500
<v Speaker 1>too.

00:21:33.540 --> 00:21:35.380
<v Speaker 1>Alright. We'll just we'll add a few in

00:21:35.380 --> 00:21:37.059
<v Speaker 0>just now, and we'll show how that works.

00:21:37.140 --> 00:21:39.140
<v Speaker 0>So the plural of person is going to

00:21:39.140 --> 00:21:39.700
<v Speaker 0>be people.

00:21:41.305 --> 00:21:43.625
<v Speaker 0>And we'll copy this down here. Now,

00:21:43.945 --> 00:21:45.625
<v Speaker 0>why do we need a plural?

00:21:45.705 --> 00:21:47.545
<v Speaker 0>You wanna tackle that with that tape?

00:21:49.545 --> 00:21:51.785
<v Speaker 1>Yeah. Why do we need a plural? Because

00:21:52.745 --> 00:21:53.945
<v Speaker 1>English is funny.

00:21:55.490 --> 00:21:57.090
<v Speaker 1>Because we store

00:21:58.770 --> 00:22:02.130
<v Speaker 1>the data in directories named after the plural.

00:22:03.090 --> 00:22:05.730
<v Speaker 1>It's really that simple. Yeah. Yeah. We use

00:22:05.730 --> 00:22:08.290
<v Speaker 0>it for the data directory's name. It ties

00:22:08.290 --> 00:22:09.810
<v Speaker 0>the clue there still that you don't have

00:22:09.810 --> 00:22:10.770
<v Speaker 0>purse persons

00:22:11.775 --> 00:22:13.375
<v Speaker 0>would be a directory name. Or if you

00:22:13.375 --> 00:22:15.535
<v Speaker 0>wanna expose it for GraphQL, you can

00:22:16.415 --> 00:22:17.695
<v Speaker 0>do cool things there too.

00:22:18.655 --> 00:22:19.375
<v Speaker 0>Alright.

00:22:20.095 --> 00:22:22.655
<v Speaker 0>What does a person have? Let's

00:22:22.655 --> 00:22:25.190
<v Speaker 0>do a really simple schema here. Name. Or

00:22:25.190 --> 00:22:26.710
<v Speaker 0>name. Alright. Yeah. We'll just do name. We'll

00:22:26.710 --> 00:22:27.590
<v Speaker 0>keep it simple.

00:22:28.710 --> 00:22:29.350
<v Speaker 0>And

00:22:29.750 --> 00:22:30.389
<v Speaker 0>age.

00:22:31.110 --> 00:22:32.389
<v Speaker 0>You happy with that person?

00:22:33.510 --> 00:22:34.870
<v Speaker 1>No. No.

00:22:35.190 --> 00:22:36.870
<v Speaker 1>I would never put an age in a

00:22:36.870 --> 00:22:38.309
<v Speaker 1>data field. You could put a date of

00:22:38.309 --> 00:22:39.750
<v Speaker 1>birth or a year of birth,

00:22:40.605 --> 00:22:43.325
<v Speaker 1>but age is immediately invalid as soon as

00:22:43.325 --> 00:22:44.284
<v Speaker 1>you store it.

00:22:45.725 --> 00:22:47.725
<v Speaker 1>Because time carries on.

00:22:48.765 --> 00:22:49.725
<v Speaker 0>You're

00:22:49.725 --> 00:22:51.085
<v Speaker 0>100% correct.

00:22:52.445 --> 00:22:53.885
<v Speaker 1>I also used to be a DBA.

00:22:55.630 --> 00:22:56.990
<v Speaker 0>Alright. So you're gonna hear that if I

00:22:56.990 --> 00:22:58.510
<v Speaker 0>do a title too then. Right? And then

00:22:58.510 --> 00:22:59.230
<v Speaker 0>maybe Okay.

00:23:02.030 --> 00:23:03.470
<v Speaker 0>And then we have an article,

00:23:03.710 --> 00:23:05.790
<v Speaker 0>which we're just gonna give a title and

00:23:05.790 --> 00:23:07.710
<v Speaker 0>a body for right now. And then we'll

00:23:07.710 --> 00:23:09.790
<v Speaker 0>have a concept of an author, which right

00:23:09.790 --> 00:23:12.884
<v Speaker 0>now, I'm just going to do person ID.

00:23:14.485 --> 00:23:16.965
<v Speaker 0>So CueBlox has a little bit of magic

00:23:16.965 --> 00:23:17.845
<v Speaker 0>logic.

00:23:18.485 --> 00:23:20.005
<v Speaker 0>There's nicer ways to do this, but I

00:23:20.005 --> 00:23:21.365
<v Speaker 0>think we'll start off with the magic and

00:23:21.365 --> 00:23:23.365
<v Speaker 0>that anything with an underscore ID

00:23:24.030 --> 00:23:25.549
<v Speaker 0>will automatically be

00:23:26.030 --> 00:23:26.830
<v Speaker 0>inferred

00:23:26.830 --> 00:23:28.430
<v Speaker 0>as a relationship

00:23:28.430 --> 00:23:30.350
<v Speaker 0>to the person type, and we can use

00:23:30.350 --> 00:23:32.830
<v Speaker 0>the referential integrity on that data to validate

00:23:32.830 --> 00:23:33.950
<v Speaker 0>that it is correct.

00:23:35.150 --> 00:23:37.470
<v Speaker 0>So let's run two really quick documents.

00:23:38.054 --> 00:23:39.894
<v Speaker 0>So we've got the plural name here, so

00:23:39.894 --> 00:23:41.174
<v Speaker 0>that's going to be people

00:23:41.654 --> 00:23:44.534
<v Speaker 0>and we'll create another directory under data called

00:23:44.534 --> 00:23:45.414
<v Speaker 0>articles.

00:23:45.815 --> 00:23:47.654
<v Speaker 0>And I'll create one in each.

00:23:49.174 --> 00:23:50.934
<v Speaker 0>I don't know if we ever changed

00:23:50.934 --> 00:23:51.254
<v Speaker 0>this,

00:23:53.030 --> 00:23:55.030
<v Speaker 0>but the ID

00:23:55.030 --> 00:23:57.590
<v Speaker 0>is the file name. Is that still correct?

00:23:57.910 --> 00:24:00.230
<v Speaker 1>Yes. The what you would consider to be

00:24:00.230 --> 00:24:01.190
<v Speaker 1>the slug,

00:24:01.910 --> 00:24:03.669
<v Speaker 1>the the first part of the file name

00:24:03.669 --> 00:24:04.790
<v Speaker 1>is the ID.

00:24:07.955 --> 00:24:09.554
<v Speaker 0>Can you see my Versus code is telling

00:24:09.554 --> 00:24:12.355
<v Speaker 0>me that the markdown extension does not understand

00:24:12.355 --> 00:24:14.355
<v Speaker 0>backspace or on key enter.

00:24:15.155 --> 00:24:17.315
<v Speaker 0>And I cannot delete or press return.

00:24:21.059 --> 00:24:23.139
<v Speaker 1>Maybe you should kill that extension. Yeah. I

00:24:23.139 --> 00:24:24.580
<v Speaker 0>think I will be disabled in the markdown

00:24:24.580 --> 00:24:26.899
<v Speaker 0>extension. That is particularly weird.

00:24:27.380 --> 00:24:29.139
<v Speaker 0>And I'm pretty sure that's a baked in

00:24:29.139 --> 00:24:30.580
<v Speaker 0>one. That's not one I install. Right?

00:24:39.424 --> 00:24:42.225
<v Speaker 1>Well, you really made Versus Code mad. I'm

00:24:42.225 --> 00:24:45.265
<v Speaker 0>not sure why. That Docker running. That's normally

00:24:45.265 --> 00:24:46.065
<v Speaker 0>what happens.

00:24:46.945 --> 00:24:49.345
<v Speaker 1>Now you've got some markdown stuff installed there.

00:24:50.920 --> 00:24:52.279
<v Speaker 1>Oh, no. Those are No.

00:24:52.920 --> 00:24:54.360
<v Speaker 1>Not the installed ones.

00:24:54.920 --> 00:24:55.560
<v Speaker 0>You can do

00:24:57.080 --> 00:24:59.000
<v Speaker 0>how'd you do the weird search? Is is

00:24:59.000 --> 00:25:01.960
<v Speaker 0>installed colon true? That's really struggling. I don't

00:25:01.960 --> 00:25:03.000
<v Speaker 0>know. I'm gonna use Vim.

00:25:09.345 --> 00:25:10.065
<v Speaker 0>Okay.

00:25:11.505 --> 00:25:12.304
<v Speaker 0>Data

00:25:12.385 --> 00:25:13.105
<v Speaker 0>people

00:25:13.265 --> 00:25:14.624
<v Speaker 0>Rawkode. Okay.

00:25:17.025 --> 00:25:19.265
<v Speaker 0>Comment from Kevin in the chat. Did I

00:25:19.265 --> 00:25:21.424
<v Speaker 0>break something again? It's not even Thursday yet.

00:25:22.960 --> 00:25:25.679
<v Speaker 0>My computer has just been technically unhappy with

00:25:25.679 --> 00:25:26.559
<v Speaker 0>me lately.

00:25:26.720 --> 00:25:28.720
<v Speaker 0>I'm not unsure why,

00:25:29.200 --> 00:25:30.320
<v Speaker 0>and this definitely

00:25:30.480 --> 00:25:31.440
<v Speaker 0>hates me.

00:25:33.440 --> 00:25:35.200
<v Speaker 0>So this is a markdown fail,

00:25:35.440 --> 00:25:36.960
<v Speaker 0>so we just need to indicate that it's

00:25:36.960 --> 00:25:37.600
<v Speaker 0>front matter.

00:25:40.774 --> 00:25:42.215
<v Speaker 0>In fact, I'll just change that to YAML

00:25:42.215 --> 00:25:44.054
<v Speaker 0>because then we can show the body

00:25:44.054 --> 00:25:46.215
<v Speaker 0>processing that works in CueBlox, which we haven't

00:25:46.215 --> 00:25:46.774
<v Speaker 0>covered.

00:25:47.095 --> 00:25:49.095
<v Speaker 0>I'm gonna modify our schemata slightly.

00:25:50.870 --> 00:25:52.789
<v Speaker 0>In fact, yeah, doesn't matter because we support

00:25:52.789 --> 00:25:53.429
<v Speaker 0>both.

00:25:54.230 --> 00:25:56.309
<v Speaker 0>So we need to rename this to data

00:25:56.309 --> 00:25:59.510
<v Speaker 0>people raw code dot yaml. Okay. And we'll

00:25:59.510 --> 00:26:01.109
<v Speaker 0>add one more, which is going to

00:26:01.750 --> 00:26:02.229
<v Speaker 0>be

00:26:02.630 --> 00:26:03.429
<v Speaker 0>our article,

00:26:04.265 --> 00:26:08.185
<v Speaker 0>which will be helloworld.md.

00:26:09.305 --> 00:26:11.305
<v Speaker 0>I don't have any more than don't have

00:26:11.305 --> 00:26:13.225
<v Speaker 0>any react stuff, so we'll just do that.

00:26:13.865 --> 00:26:16.665
<v Speaker 0>Okay. And this requires a title. So hello

00:26:16.950 --> 00:26:19.029
<v Speaker 0>world and a body, and the body will

00:26:19.029 --> 00:26:20.709
<v Speaker 0>automatically be inferred

00:26:20.710 --> 00:26:21.269
<v Speaker 0>from

00:26:23.110 --> 00:26:25.590
<v Speaker 0>what comes after the front matter and the

00:26:25.590 --> 00:26:26.309
<v Speaker 0>document.

00:26:27.510 --> 00:26:29.190
<v Speaker 0>Now as long as I haven't messed this

00:26:29.190 --> 00:26:30.549
<v Speaker 0>up, but I'm sure Brian would be in

00:26:30.549 --> 00:26:33.154
<v Speaker 0>there quick if I had, we should be

00:26:34.115 --> 00:26:35.395
<v Speaker 0>we should be in a position now where

00:26:35.395 --> 00:26:37.235
<v Speaker 0>where we can run block build on this

00:26:37.235 --> 00:26:37.955
<v Speaker 0>directory.

00:26:38.035 --> 00:26:40.195
<v Speaker 0>It'll load the schemata. It will validate the

00:26:40.195 --> 00:26:41.955
<v Speaker 0>data, and it'll tell us it was good.

00:26:42.355 --> 00:26:45.315
<v Speaker 0>And it it worked. Okay. So what actually

00:26:45.315 --> 00:26:47.869
<v Speaker 0>happened there plugins. That's so sexy.

00:26:49.150 --> 00:26:50.830
<v Speaker 0>The plugins are pretty great.

00:26:50.990 --> 00:26:52.429
<v Speaker 0>Yeah. I'm really happy with that. Oh, we

00:26:52.429 --> 00:26:54.830
<v Speaker 0>just just added those. We didn't add the

00:26:54.830 --> 00:26:55.629
<v Speaker 0>author.

00:26:56.029 --> 00:26:56.510
<v Speaker 0>Did we

00:26:58.905 --> 00:26:59.545
<v Speaker 0>okay.

00:27:00.185 --> 00:27:02.905
<v Speaker 0>I've got a typo there, but hopefully this

00:27:03.145 --> 00:27:04.345
<v Speaker 0>still works. Good.

00:27:04.585 --> 00:27:06.745
<v Speaker 0>Okay. So I've now

00:27:06.825 --> 00:27:09.465
<v Speaker 0>contrived the situation where the data is incorrect.

00:27:09.465 --> 00:27:11.865
<v Speaker 0>Now the BlogsBelled by default does not handle

00:27:11.865 --> 00:27:12.905
<v Speaker 0>referential integrity,

00:27:13.820 --> 00:27:16.300
<v Speaker 0>but you can see from what I have

00:27:16.300 --> 00:27:17.340
<v Speaker 0>in data

00:27:17.820 --> 00:27:19.500
<v Speaker 0>people Rawkode

00:27:19.580 --> 00:27:20.940
<v Speaker 0>and my ID,

00:27:21.020 --> 00:27:23.659
<v Speaker 0>so what I've used to reference this entity

00:27:23.740 --> 00:27:25.340
<v Speaker 0>as the filename of Rawkode.

00:27:25.894 --> 00:27:28.615
<v Speaker 0>However, under articles and then hello world, we

00:27:28.615 --> 00:27:31.254
<v Speaker 0>have person ID, which is loaded magically as

00:27:31.254 --> 00:27:32.294
<v Speaker 0>a relationship

00:27:32.615 --> 00:27:33.654
<v Speaker 0>should fail.

00:27:34.054 --> 00:27:36.214
<v Speaker 0>And we can pass the dash I flag.

00:27:36.294 --> 00:27:36.934
<v Speaker 0>Oh,

00:27:37.095 --> 00:27:37.735
<v Speaker 0>it worked.

00:27:41.630 --> 00:27:44.510
<v Speaker 1>Does it not do relationships without the relationship

00:27:44.510 --> 00:27:45.230
<v Speaker 1>tag?

00:27:45.790 --> 00:27:47.390
<v Speaker 0>Did we remove that? I think I made

00:27:47.390 --> 00:27:48.510
<v Speaker 0>it I made I think I made it

00:27:48.510 --> 00:27:50.910
<v Speaker 0>before. Alright. We're just gonna pretend

00:27:50.910 --> 00:27:52.750
<v Speaker 0>that that gave us another message and said

00:27:52.750 --> 00:27:53.870
<v Speaker 0>that ID doesn't exist.

00:27:54.475 --> 00:27:56.715
<v Speaker 1>Oh, add the relationship tag and show it

00:27:56.715 --> 00:27:58.394
<v Speaker 1>works. Yeah. Yeah. Yeah.

00:27:59.995 --> 00:28:01.755
<v Speaker 0>Brian and I weren't happy with that approach

00:28:01.755 --> 00:28:04.554
<v Speaker 0>anyway. Because when you expose this data to

00:28:04.554 --> 00:28:07.355
<v Speaker 0>other tooling, it also has to be aware

00:28:07.590 --> 00:28:09.029
<v Speaker 0>that person ID

00:28:10.150 --> 00:28:12.789
<v Speaker 0>is a reference to some entity called person.

00:28:12.789 --> 00:28:15.429
<v Speaker 0>And in my GraphQL API, I actually want

00:28:15.429 --> 00:28:16.710
<v Speaker 0>it just to say author,

00:28:17.270 --> 00:28:18.149
<v Speaker 0>like so,

00:28:18.390 --> 00:28:20.070
<v Speaker 0>and still work. Now the way that we

00:28:20.070 --> 00:28:22.815
<v Speaker 0>do this through CueBlox is by using an

00:28:22.815 --> 00:28:23.695
<v Speaker 0>attribute

00:28:24.255 --> 00:28:25.455
<v Speaker 0>called relationship

00:28:25.455 --> 00:28:28.655
<v Speaker 0>on our data and telling it the entity

00:28:28.975 --> 00:28:30.495
<v Speaker 0>to join the thing too.

00:28:31.215 --> 00:28:32.655
<v Speaker 0>So I'm gonna go out on a limb

00:28:32.655 --> 00:28:34.975
<v Speaker 0>and break this again and and and just

00:28:34.975 --> 00:28:37.750
<v Speaker 0>hope that something that I've written here works.

00:28:38.150 --> 00:28:40.230
<v Speaker 0>So now we have Just

00:28:40.630 --> 00:28:42.550
<v Speaker 1>you can add that relationship tag in the

00:28:42.550 --> 00:28:43.190
<v Speaker 1>data?

00:28:43.910 --> 00:28:45.110
<v Speaker 1>I thought that has to go in the

00:28:45.110 --> 00:28:45.590
<v Speaker 1>schema.

00:28:47.935 --> 00:28:49.054
<v Speaker 0>You are correct.

00:28:53.055 --> 00:28:54.335
<v Speaker 0>Thank you.

00:28:55.695 --> 00:28:57.135
<v Speaker 0>Or should we run a block spells and

00:28:57.135 --> 00:28:58.655
<v Speaker 0>see what happens anyway? Because now we have

00:28:58.655 --> 00:29:01.375
<v Speaker 0>a field that shouldn't be there. Right? Correct.

00:29:02.400 --> 00:29:04.320
<v Speaker 0>Why is we not getting our messages?

00:29:07.120 --> 00:29:08.480
<v Speaker 1>What's your schema look like?

00:29:14.235 --> 00:29:16.235
<v Speaker 0>I'm going to set it to 23. Give

00:29:16.235 --> 00:29:17.355
<v Speaker 0>me one error message.

00:29:18.875 --> 00:29:20.315
<v Speaker 0>I've broken something.

00:29:21.275 --> 00:29:22.875
<v Speaker 0>I'm just going to keep playing.

00:29:23.434 --> 00:29:25.275
<v Speaker 0>Okay, let's modify my schemata now.

00:29:27.370 --> 00:29:29.770
<v Speaker 0>And we're going to now say that we

00:29:29.770 --> 00:29:32.649
<v Speaker 0>actually want this to be a relationship

00:29:33.450 --> 00:29:34.729
<v Speaker 0>to a person

00:29:35.610 --> 00:29:37.210
<v Speaker 0>and we don't want to use the magic

00:29:37.210 --> 00:29:38.489
<v Speaker 0>IT thing.

00:29:39.850 --> 00:29:41.049
<v Speaker 0>And we'll go with author.

00:29:43.635 --> 00:29:44.274
<v Speaker 0>Okay.

00:29:45.554 --> 00:29:47.395
<v Speaker 0>Oh, we're not getting any error messages at

00:29:47.395 --> 00:29:47.955
<v Speaker 0>all.

00:29:51.075 --> 00:29:52.195
<v Speaker 0>Dataset

00:29:53.075 --> 00:29:55.874
<v Speaker 1>name and namespace. Pull up your schema again.

00:29:55.875 --> 00:29:57.794
<v Speaker 1>There's gotta be something wrong with the schema.

00:30:00.090 --> 00:30:01.929
<v Speaker 0>The builder effect's okay.

00:30:03.690 --> 00:30:06.489
<v Speaker 0>Oh, we're not getting the article. Okay. No.

00:30:06.889 --> 00:30:08.409
<v Speaker 0>Something is wrong.

00:30:09.289 --> 00:30:10.889
<v Speaker 1>My plurals

00:30:10.970 --> 00:30:12.009
<v Speaker 1>are lowercase

00:30:12.805 --> 00:30:14.165
<v Speaker 1>in all of my I don't know if

00:30:14.165 --> 00:30:15.205
<v Speaker 1>that makes any difference,

00:30:17.285 --> 00:30:19.684
<v Speaker 1>just looking at my data compared to

00:30:21.205 --> 00:30:21.924
<v Speaker 0>okay.

00:30:22.085 --> 00:30:24.245
<v Speaker 0>Build data schema static.

00:30:24.885 --> 00:30:25.445
<v Speaker 0>Schema.

00:30:27.780 --> 00:30:30.100
<v Speaker 0>Maybe supported extensions as required.

00:30:33.780 --> 00:30:36.179
<v Speaker 0>Let's find out. It is because if

00:30:36.340 --> 00:30:37.700
<v Speaker 1>I I can think of the line of

00:30:37.700 --> 00:30:39.425
<v Speaker 1>code in my head if it checks to

00:30:39.425 --> 00:30:41.905
<v Speaker 1>see if the extension isn't in support supported

00:30:41.905 --> 00:30:42.705
<v Speaker 1>extensions,

00:30:42.865 --> 00:30:44.065
<v Speaker 1>it's not gonna happen.

00:30:46.945 --> 00:30:48.545
<v Speaker 0>And then what do we have in build?

00:30:52.530 --> 00:30:54.610
<v Speaker 0>Okay. So it's not that. It's definitely me

00:30:54.610 --> 00:30:55.650
<v Speaker 0>broken something.

00:30:56.130 --> 00:30:57.410
<v Speaker 0>Maybe I should just jump to the dog

00:30:57.410 --> 00:30:58.450
<v Speaker 0>fit repository.

00:30:58.770 --> 00:31:01.010
<v Speaker 1>And change the plurals to lowercase, see if

00:31:01.010 --> 00:31:03.650
<v Speaker 1>that makes any difference. Maybe it won't, but

00:31:04.050 --> 00:31:05.330
<v Speaker 0>Yeah. I don't think it

00:31:06.485 --> 00:31:08.645
<v Speaker 0>it shouldn't matter.

00:31:11.685 --> 00:31:12.725
<v Speaker 0>Data set,

00:31:13.285 --> 00:31:13.925
<v Speaker 0>portal,

00:31:15.365 --> 00:31:16.725
<v Speaker 0>ported extensions.

00:31:22.289 --> 00:31:23.409
<v Speaker 0>Then data.

00:31:24.929 --> 00:31:26.369
<v Speaker 0>Oh, no. I made it worse.

00:31:26.610 --> 00:31:28.690
<v Speaker 0>Someone stop me typing. I mean, come on.

00:31:28.690 --> 00:31:29.809
<v Speaker 1>Wait. Don't you need

00:31:30.130 --> 00:31:30.929
<v Speaker 1>can you

00:31:33.010 --> 00:31:33.409
<v Speaker 1>person.

00:31:38.365 --> 00:31:39.085
<v Speaker 0>Alright.

00:31:40.525 --> 00:31:42.285
<v Speaker 0>Okay. So now we don't have articles. So

00:31:42.285 --> 00:31:43.884
<v Speaker 0>I've I've got it closer.

00:31:44.925 --> 00:31:46.684
<v Speaker 0>Why are my articles not being loaded?

00:31:58.370 --> 00:31:59.570
<v Speaker 0>I'm gonna copy

00:31:59.809 --> 00:32:02.610
<v Speaker 0>this. I must be doing something really

00:32:03.405 --> 00:32:04.125
<v Speaker 0>silly.

00:32:08.285 --> 00:32:10.684
<v Speaker 0>Yeah. I didn't want the right extension. Right?

00:32:11.725 --> 00:32:12.445
<v Speaker 0>Phew.

00:32:12.605 --> 00:32:13.725
<v Speaker 0>Okay. So

00:32:13.965 --> 00:32:15.405
<v Speaker 0>supported extensions

00:32:16.080 --> 00:32:18.320
<v Speaker 0>was required. Then I spent then I spelled

00:32:18.320 --> 00:32:20.080
<v Speaker 0>it supported extension, and then I got it

00:32:20.080 --> 00:32:21.679
<v Speaker 0>right, but doesn't include MD for it to

00:32:21.679 --> 00:32:23.360
<v Speaker 0>load the file. I'm gonna go out on

00:32:23.360 --> 00:32:25.440
<v Speaker 0>a limb here. Right? And I'm gonna I'm

00:32:25.440 --> 00:32:26.720
<v Speaker 0>gonna go back to the magic

00:32:26.960 --> 00:32:27.360
<v Speaker 0>first.

00:32:28.414 --> 00:32:30.094
<v Speaker 0>All right. Let's see.

00:32:32.414 --> 00:32:34.174
<v Speaker 0>Okay, so person

00:32:36.335 --> 00:32:37.134
<v Speaker 0>ID

00:32:37.615 --> 00:32:39.774
<v Speaker 0>lock, oh no, I need to update my

00:32:39.774 --> 00:32:40.095
<v Speaker 0>data.

00:32:43.160 --> 00:32:44.679
<v Speaker 0>I thought I could leave that.

00:32:51.400 --> 00:32:52.920
<v Speaker 0>What'd you think my notes are here? Is

00:32:52.920 --> 00:32:53.720
<v Speaker 0>it gonna work?

00:32:54.120 --> 00:32:54.840
<v Speaker 0>I don't know.

00:32:55.965 --> 00:32:57.244
<v Speaker 0>It does. Okay.

00:32:59.005 --> 00:33:00.924
<v Speaker 0>So everything works as long as I am

00:33:00.924 --> 00:33:01.804
<v Speaker 0>not an idiot.

00:33:02.365 --> 00:33:04.205
<v Speaker 0>Okay. So this is our our let me

00:33:04.205 --> 00:33:05.885
<v Speaker 0>go back into our schema because I I

00:33:05.885 --> 00:33:07.404
<v Speaker 0>know I typed a lot there very fast.

00:33:07.980 --> 00:33:10.299
<v Speaker 0>Right now we have author with the relationship

00:33:10.299 --> 00:33:12.380
<v Speaker 0>attribute commented out. It has no longer been

00:33:12.380 --> 00:33:13.499
<v Speaker 0>listened to or

00:33:13.820 --> 00:33:15.500
<v Speaker 0>adhered to by CueBlox.

00:33:15.500 --> 00:33:17.740
<v Speaker 0>However, we have the person ID and the

00:33:17.740 --> 00:33:20.940
<v Speaker 0>elephant underscore ID as a magic relationship. It

00:33:20.940 --> 00:33:23.419
<v Speaker 0>will be inferred to the type where a

00:33:23.419 --> 00:33:26.355
<v Speaker 0>person, lowercase version of the definition name here.

00:33:26.355 --> 00:33:28.115
<v Speaker 0>And what you'll see in my data where

00:33:28.115 --> 00:33:30.034
<v Speaker 0>we define the article is that we define

00:33:30.034 --> 00:33:31.874
<v Speaker 0>person ID as Rawkode.

00:33:32.434 --> 00:33:34.835
<v Speaker 0>And when we run the blocks build with

00:33:34.835 --> 00:33:37.180
<v Speaker 0>the dash I, so the dash I just

00:33:37.180 --> 00:33:38.620
<v Speaker 0>means verify

00:33:38.620 --> 00:33:40.860
<v Speaker 0>the referential integrity and we can ignore this.

00:33:40.860 --> 00:33:42.780
<v Speaker 0>This is that field that shouldn't be allowed.

00:33:43.740 --> 00:33:46.380
<v Speaker 0>It says that we have a referential integrity

00:33:46.380 --> 00:33:49.315
<v Speaker 0>failure because data articles and then the hello

00:33:49.315 --> 00:33:50.355
<v Speaker 0>world article,

00:33:50.355 --> 00:33:52.515
<v Speaker 0>the person ID does not exist as a

00:33:52.515 --> 00:33:53.155
<v Speaker 0>person,

00:33:53.955 --> 00:33:55.875
<v Speaker 0>which is perfect. So now if we come

00:33:55.875 --> 00:33:57.155
<v Speaker 0>in and we fix this

00:33:57.555 --> 00:33:59.875
<v Speaker 0>and we say you are Rawkode and

00:34:00.435 --> 00:34:02.915
<v Speaker 0>we build it again with referential integrity, things

00:34:02.915 --> 00:34:05.080
<v Speaker 0>will work. However, we've now got a field

00:34:05.080 --> 00:34:06.840
<v Speaker 0>error that we don't want. So

00:34:07.320 --> 00:34:09.560
<v Speaker 0>we'll remove the magic. We'll go back to

00:34:09.560 --> 00:34:10.520
<v Speaker 0>our schemata,

00:34:11.560 --> 00:34:13.960
<v Speaker 0>and I'm gonna bring back the less magic,

00:34:13.960 --> 00:34:15.400
<v Speaker 0>but the one that is more flexible with

00:34:15.400 --> 00:34:17.315
<v Speaker 0>regards to the naming of the field So

00:34:17.315 --> 00:34:19.555
<v Speaker 0>we can use the at syntax in Cue

00:34:19.555 --> 00:34:21.315
<v Speaker 0>to define a relationship

00:34:21.395 --> 00:34:23.955
<v Speaker 0>where the entity or the definition is a

00:34:23.955 --> 00:34:24.595
<v Speaker 0>person.

00:34:25.475 --> 00:34:27.075
<v Speaker 1>Yeah. And just to be clear about that

00:34:27.075 --> 00:34:29.315
<v Speaker 1>at syntax, that's just a tag in Cue,

00:34:29.760 --> 00:34:32.880
<v Speaker 1>and we're using it as arbitrary metadata. So

00:34:32.880 --> 00:34:33.760
<v Speaker 1>we're

00:34:33.760 --> 00:34:36.160
<v Speaker 1>creating a tag in that definition

00:34:36.560 --> 00:34:37.280
<v Speaker 1>and

00:34:37.760 --> 00:34:40.239
<v Speaker 1>because the tag is relationship,

00:34:40.480 --> 00:34:42.719
<v Speaker 1>we're treating that data a specific way. There

00:34:42.719 --> 00:34:43.360
<v Speaker 1>is no

00:34:43.695 --> 00:34:45.535
<v Speaker 1>there's no relationship

00:34:45.535 --> 00:34:49.535
<v Speaker 1>thing in queue where we built that code.

00:34:50.575 --> 00:34:52.415
<v Speaker 0>We did build that, which is probably why

00:34:52.415 --> 00:34:54.015
<v Speaker 0>I'm having so much problems now. So now

00:34:54.015 --> 00:34:56.175
<v Speaker 0>it's telling me that my author doesn't exist.

00:35:00.350 --> 00:35:04.430
<v Speaker 0>It's

00:35:04.430 --> 00:35:05.870
<v Speaker 0>at relationship. Right?

00:35:06.350 --> 00:35:08.190
<v Speaker 1>It's at relationship

00:35:08.190 --> 00:35:09.950
<v Speaker 1>and then capital

00:35:10.030 --> 00:35:10.750
<v Speaker 1>person.

00:35:11.070 --> 00:35:12.030
<v Speaker 1>That's how

00:35:12.110 --> 00:35:12.750
<v Speaker 1>mine work.

00:35:13.974 --> 00:35:15.575
<v Speaker 0>Yeah. Try that. It told me to go

00:35:15.575 --> 00:35:16.215
<v Speaker 0>away.

00:35:25.095 --> 00:35:27.095
<v Speaker 0>What have I got wrong? Oh, that's fine.

00:35:27.095 --> 00:35:29.335
<v Speaker 0>I actually do have a referential integrity. Oh.

00:35:29.970 --> 00:35:31.570
<v Speaker 0>I am making an absolute new Every

00:35:32.369 --> 00:35:32.930
<v Speaker 1>time.

00:35:33.810 --> 00:35:35.970
<v Speaker 0>Again, when you do things right, they just

00:35:35.970 --> 00:35:37.490
<v Speaker 0>work. Okay.

00:35:37.570 --> 00:35:39.570
<v Speaker 0>So we have a schema. We are defining

00:35:39.570 --> 00:35:42.130
<v Speaker 0>two types within the system and we can

00:35:42.130 --> 00:35:44.210
<v Speaker 0>see how adding data to this

00:35:44.694 --> 00:35:46.775
<v Speaker 0>works, validates integrity.

00:35:46.775 --> 00:35:48.695
<v Speaker 0>And we could take a look at the

00:35:50.694 --> 00:35:52.055
<v Speaker 0>build output,

00:35:53.494 --> 00:35:54.135
<v Speaker 0>which build,

00:35:57.599 --> 00:35:59.279
<v Speaker 0>I need to cat it and then put

00:35:59.440 --> 00:36:00.960
<v Speaker 0>Or I can get a second and put

00:36:00.960 --> 00:36:01.440
<v Speaker 0>it.

00:36:04.160 --> 00:36:05.680
<v Speaker 0>And we get this JSON blob at the

00:36:05.680 --> 00:36:08.880
<v Speaker 0>other side. You'll see the body is automatically

00:36:08.880 --> 00:36:10.960
<v Speaker 0>parsed through the markdown and the front matter.

00:36:10.960 --> 00:36:13.115
<v Speaker 0>So that works together really nicely.

00:36:13.675 --> 00:36:15.835
<v Speaker 0>The ID and the author are all joined

00:36:15.835 --> 00:36:17.435
<v Speaker 0>there. So that's another JSON

00:36:17.515 --> 00:36:19.595
<v Speaker 0>payload that you can work within your application

00:36:19.595 --> 00:36:21.595
<v Speaker 0>to consume all of those types and you're

00:36:21.595 --> 00:36:22.795
<v Speaker 0>got this guarantee

00:36:23.035 --> 00:36:25.115
<v Speaker 0>that any references to other types within the

00:36:25.115 --> 00:36:26.235
<v Speaker 0>system just

00:36:26.474 --> 00:36:26.955
<v Speaker 0>work.

00:36:28.380 --> 00:36:29.260
<v Speaker 0>That

00:36:29.260 --> 00:36:30.380
<v Speaker 0>was a lot harder than it should have

00:36:30.380 --> 00:36:30.940
<v Speaker 0>been.

00:36:31.500 --> 00:36:33.900
<v Speaker 1>Yeah. And this this for the first couple

00:36:33.900 --> 00:36:35.660
<v Speaker 1>months, this was our

00:36:36.140 --> 00:36:36.619
<v Speaker 1>our

00:36:37.579 --> 00:36:40.299
<v Speaker 1>the the extent of our output. We we

00:36:40.299 --> 00:36:42.059
<v Speaker 1>output this data dot JSON file,

00:36:42.585 --> 00:36:45.785
<v Speaker 1>and that was what we use to build

00:36:45.785 --> 00:36:49.305
<v Speaker 1>and and populate everything else everywhere else.

00:36:49.785 --> 00:36:53.145
<v Speaker 1>But only recently have we exposed the Cue

00:36:53.145 --> 00:36:54.025
<v Speaker 1>database,

00:36:54.585 --> 00:36:57.065
<v Speaker 1>as an API so that we can use

00:36:57.065 --> 00:36:58.025
<v Speaker 1>other tools

00:36:58.480 --> 00:37:01.440
<v Speaker 1>to read that database once the

00:37:01.680 --> 00:37:04.160
<v Speaker 1>validation has been completed. And that really changed

00:37:04.160 --> 00:37:05.680
<v Speaker 1>a lot of things. That that's what allowed

00:37:05.680 --> 00:37:07.680
<v Speaker 1>us to do GraphQL

00:37:07.680 --> 00:37:09.040
<v Speaker 1>and HTTP

00:37:09.040 --> 00:37:09.680
<v Speaker 1>servers

00:37:10.494 --> 00:37:13.775
<v Speaker 1>without exporting the the data to JSON format,

00:37:13.775 --> 00:37:14.655
<v Speaker 1>which saves

00:37:15.214 --> 00:37:17.695
<v Speaker 1>IO and time and processing power.

00:37:18.815 --> 00:37:22.015
<v Speaker 0>Alright. I will show the surf command, and

00:37:22.015 --> 00:37:24.015
<v Speaker 0>then I'll hand over to you for all

00:37:24.015 --> 00:37:26.170
<v Speaker 0>the fun stuff, if that sounds good to

00:37:26.170 --> 00:37:29.450
<v Speaker 0>you. Sure. Nuno has jumped by the chat,

00:37:29.450 --> 00:37:31.450
<v Speaker 0>someone we we both know. Pass him by

00:37:31.450 --> 00:37:33.530
<v Speaker 0>to see how amazing you both are. Thank

00:37:33.530 --> 00:37:35.530
<v Speaker 0>you, Nuno. I appreciate that.

00:37:36.730 --> 00:37:37.130
<v Speaker 0>Okay.

00:37:38.295 --> 00:37:39.974
<v Speaker 0>I guess I could well, I run GraphQL

00:37:39.974 --> 00:37:42.375
<v Speaker 0>and and Dogfood or rather than my my

00:37:42.375 --> 00:37:43.735
<v Speaker 0>cellular data here.

00:37:44.375 --> 00:37:46.535
<v Speaker 0>We have relationships and stuff there, don't we?

00:37:47.335 --> 00:37:49.815
<v Speaker 1>Yes. There's lots of relationships in Dogfood.

00:37:49.974 --> 00:37:52.295
<v Speaker 0>Okay. So we actually this is one of

00:37:52.295 --> 00:37:54.670
<v Speaker 0>Brian's really cool initiatives. Oh, there's some work

00:37:54.670 --> 00:37:56.110
<v Speaker 0>I've been working on.

00:37:56.670 --> 00:37:57.870
<v Speaker 0>Stash it.

00:38:01.070 --> 00:38:02.030
<v Speaker 0>So Brian,

00:38:02.590 --> 00:38:05.070
<v Speaker 0>you built the docs with the pyramid and

00:38:05.070 --> 00:38:06.830
<v Speaker 0>you did that all for CueBlox, which I

00:38:06.830 --> 00:38:08.350
<v Speaker 0>think is really cool. So

00:38:08.885 --> 00:38:11.365
<v Speaker 0>I'm gonna run a blocks build here

00:38:11.765 --> 00:38:13.204
<v Speaker 0>and you'll see we have a lot of

00:38:13.204 --> 00:38:14.165
<v Speaker 0>different types.

00:38:16.165 --> 00:38:18.245
<v Speaker 0>Do we stall your dog food,

00:38:18.724 --> 00:38:19.365
<v Speaker 0>schemata.

00:38:20.980 --> 00:38:22.980
<v Speaker 0>So we have a concept of an article.

00:38:22.980 --> 00:38:24.980
<v Speaker 0>We have categories. We have images. We have

00:38:24.980 --> 00:38:28.260
<v Speaker 0>pages, profile sections, and websites. Literally, our entire

00:38:28.260 --> 00:38:29.860
<v Speaker 0>website is defined

00:38:30.020 --> 00:38:30.660
<v Speaker 0>through

00:38:30.900 --> 00:38:31.860
<v Speaker 0>CueBlox.

00:38:32.660 --> 00:38:34.820
<v Speaker 0>Articles here, and we've got some really cool

00:38:34.820 --> 00:38:36.395
<v Speaker 0>stuff, I guess, we could talk about. We

00:38:36.395 --> 00:38:38.955
<v Speaker 0>have the ability to template through attributes.

00:38:39.595 --> 00:38:41.515
<v Speaker 0>So you can actually use the Block CLI

00:38:41.515 --> 00:38:43.275
<v Speaker 0>to generate new YAML

00:38:43.275 --> 00:38:45.595
<v Speaker 0>and markdown files and use the templates as

00:38:45.595 --> 00:38:46.635
<v Speaker 0>initial values.

00:38:47.515 --> 00:38:49.355
<v Speaker 0>Cue allows you to set default values.

00:38:50.360 --> 00:38:52.200
<v Speaker 0>We have our relationships here.

00:38:52.440 --> 00:38:55.000
<v Speaker 0>You can even have lists as well.

00:38:55.720 --> 00:38:57.480
<v Speaker 0>One more that I think is maybe quite

00:38:57.480 --> 00:38:59.080
<v Speaker 0>interesting is

00:38:59.320 --> 00:38:59.960
<v Speaker 0>do

00:39:01.320 --> 00:39:01.800
<v Speaker 0>profile.

00:39:02.835 --> 00:39:05.235
<v Speaker 0>Profile has multiple types. So you can see

00:39:05.235 --> 00:39:06.515
<v Speaker 0>you can define a Twitter

00:39:06.835 --> 00:39:09.235
<v Speaker 0>account, a GitHub account, a miscellaneous social account.

00:39:09.235 --> 00:39:10.835
<v Speaker 0>And then social accounts can actually have an

00:39:10.835 --> 00:39:12.995
<v Speaker 0>arbitrary list of any of those types.

00:39:13.155 --> 00:39:14.675
<v Speaker 0>And so really cool use of it kind

00:39:14.675 --> 00:39:16.435
<v Speaker 0>of enumeration types within queue.

00:39:18.030 --> 00:39:20.750
<v Speaker 0>And we can actually generate the Twitter URL

00:39:20.750 --> 00:39:23.870
<v Speaker 0>from other parameters within the queue value itself.

00:39:23.870 --> 00:39:25.950
<v Speaker 0>And you can see we interpolate username into

00:39:25.950 --> 00:39:26.750
<v Speaker 0>twitter.com.

00:39:26.750 --> 00:39:28.750
<v Speaker 0>So the dog fit directory, if you just

00:39:28.750 --> 00:39:30.990
<v Speaker 0>wanna learn what we're doing with CueBlox is

00:39:30.990 --> 00:39:32.270
<v Speaker 0>probably one of the best ways to do

00:39:32.270 --> 00:39:32.430
<v Speaker 0>it.

00:39:34.325 --> 00:39:37.765
<v Speaker 0>Let's run Blocks serve. So what Blocks serve

00:39:37.765 --> 00:39:40.244
<v Speaker 0>does is validate all of that data,

00:39:40.885 --> 00:39:43.125
<v Speaker 0>generate a GraphQL schema,

00:39:43.444 --> 00:39:46.165
<v Speaker 0>and then serve it for you over HTTP.

00:39:46.565 --> 00:39:48.190
<v Speaker 0>So you'll see here, we have a server

00:39:48.190 --> 00:39:50.590
<v Speaker 0>running on 8080,

00:39:51.230 --> 00:39:53.150
<v Speaker 0>and that's that pop over here.

00:39:56.910 --> 00:39:58.750
<v Speaker 0>And what's really cool is that if you

00:39:58.750 --> 00:40:00.030
<v Speaker 0>don't want to use the

00:40:01.025 --> 00:40:02.865
<v Speaker 0>don't go to HTTPS. Just go to

00:40:04.385 --> 00:40:05.825
<v Speaker 0>oh, it's redirecting.

00:40:06.865 --> 00:40:08.785
<v Speaker 0>Is that Firefox been really annoying?

00:40:09.905 --> 00:40:10.465
<v Speaker 0>Could be.

00:40:17.850 --> 00:40:21.370
<v Speaker 1>That's one Firefox. If you use 127001,

00:40:21.370 --> 00:40:22.250
<v Speaker 1>will it do the same?

00:40:27.095 --> 00:40:28.855
<v Speaker 0>Oh, I think it's just because I'm not

00:40:28.855 --> 00:40:29.495
<v Speaker 0>doing

00:40:31.734 --> 00:40:33.095
<v Speaker 0>we serve on

00:40:33.255 --> 00:40:34.215
<v Speaker 0>GraphQL.

00:40:36.214 --> 00:40:38.855
<v Speaker 1>Yeah. But Firefox keeps putting that HTTPS in

00:40:38.855 --> 00:40:40.695
<v Speaker 1>there because it's a word, not a number.

00:40:47.760 --> 00:40:48.800
<v Speaker 0>Where does that

00:40:49.440 --> 00:40:50.960
<v Speaker 0>GraphQL thing live again?

00:40:54.515 --> 00:40:55.795
<v Speaker 0>It's configurable.

00:40:56.115 --> 00:40:57.555
<v Speaker 0>I just can't remember.

00:40:57.635 --> 00:40:59.235
<v Speaker 1>It's configurable.

00:41:02.515 --> 00:41:04.195
<v Speaker 0>I should be more prepared.

00:41:04.595 --> 00:41:05.715
<v Speaker 1>Positive story.

00:41:11.539 --> 00:41:12.500
<v Speaker 1>Looking at the code.

00:41:22.975 --> 00:41:26.575
<v Speaker 1>UI. The GraphQL UI is under slash UI.

00:41:27.295 --> 00:41:28.255
<v Speaker 0>Thank you.

00:41:28.655 --> 00:41:30.975
<v Speaker 1>Which makes perfect sense. Right?

00:41:31.695 --> 00:41:32.895
<v Speaker 1>I'm sure I did that.

00:41:34.670 --> 00:41:36.589
<v Speaker 0>Well, there's more than one. There's this one,

00:41:36.589 --> 00:41:37.470
<v Speaker 0>which is the

00:41:38.829 --> 00:41:40.829
<v Speaker 0>kind of fancy UI, the playground one, and

00:41:40.829 --> 00:41:42.910
<v Speaker 0>then there's the graphical one, which I can't

00:41:42.910 --> 00:41:44.349
<v Speaker 0>remember where we made that live.

00:41:44.910 --> 00:41:47.865
<v Speaker 0>However, we should be able to say, hey,

00:41:47.865 --> 00:41:49.065
<v Speaker 0>I want all

00:41:49.145 --> 00:41:49.945
<v Speaker 0>articles

00:41:50.825 --> 00:41:52.985
<v Speaker 0>and then use my all complete. So you

00:41:52.985 --> 00:41:54.905
<v Speaker 0>give me the title,

00:41:55.225 --> 00:41:56.185
<v Speaker 0>the body,

00:41:56.905 --> 00:41:59.705
<v Speaker 0>and let's get a nested attribute. So we

00:41:59.705 --> 00:42:00.665
<v Speaker 0>want a profile

00:42:01.280 --> 00:42:04.079
<v Speaker 0>and we want the first name and the

00:42:04.079 --> 00:42:04.960
<v Speaker 0>last name.

00:42:05.280 --> 00:42:06.560
<v Speaker 0>And then if we hit go,

00:42:06.720 --> 00:42:08.960
<v Speaker 0>we get all our data back over GraphQL.

00:42:10.480 --> 00:42:12.000
<v Speaker 0>And I think this is just amazing.

00:42:12.320 --> 00:42:14.240
<v Speaker 1>It really is. I gotta make a huge

00:42:14.240 --> 00:42:16.994
<v Speaker 1>shout out to you. You plumbed so deeply

00:42:16.994 --> 00:42:18.915
<v Speaker 1>into the depths of Cue

00:42:19.155 --> 00:42:21.954
<v Speaker 1>to make this GraphQL handler work, and I

00:42:21.954 --> 00:42:23.955
<v Speaker 1>still have zero clue

00:42:24.115 --> 00:42:25.075
<v Speaker 1>how it works.

00:42:25.315 --> 00:42:27.635
<v Speaker 1>This is all you, and it's some of

00:42:27.635 --> 00:42:29.635
<v Speaker 1>the most amazing code I've seen put together

00:42:29.635 --> 00:42:31.810
<v Speaker 1>in a long time. So kudos. This is

00:42:31.810 --> 00:42:32.610
<v Speaker 1>really awesome.

00:42:33.089 --> 00:42:34.690
<v Speaker 0>Thank you. I've I've never blushed on my

00:42:34.690 --> 00:42:36.290
<v Speaker 0>own stream before, so there you go. You're

00:42:36.290 --> 00:42:37.410
<v Speaker 0>responsible for that.

00:42:37.970 --> 00:42:41.170
<v Speaker 1>Well, turning YAML into a a full GraphQL

00:42:41.170 --> 00:42:43.170
<v Speaker 1>dataset, that's not a small feat.

00:42:43.570 --> 00:42:43.810
<v Speaker 0>Yeah.

00:42:45.065 --> 00:42:46.585
<v Speaker 0>And we'll highlight some of your work with

00:42:46.585 --> 00:42:48.585
<v Speaker 0>that because I I'm not I'm not gonna

00:42:48.585 --> 00:42:50.664
<v Speaker 0>let you pull credit this way. But this

00:42:50.664 --> 00:42:52.345
<v Speaker 0>also works with serverless, but not with the

00:42:52.345 --> 00:42:55.464
<v Speaker 0>serve command. Right? Because users work with Azure,

00:42:55.785 --> 00:42:57.065
<v Speaker 0>Versal, Netlify.

00:42:58.320 --> 00:43:00.720
<v Speaker 0>I think there was one more where the

00:43:01.920 --> 00:43:04.640
<v Speaker 0>there is a static GraphQL JS library that

00:43:04.640 --> 00:43:07.600
<v Speaker 0>can serve the build output, the build artifact

00:43:07.600 --> 00:43:10.320
<v Speaker 0>from a blocks build over GraphQL too. So,

00:43:10.320 --> 00:43:12.385
<v Speaker 0>like, you don't want to run servers, you

00:43:12.385 --> 00:43:14.065
<v Speaker 0>can still make this work. However, you will

00:43:14.065 --> 00:43:17.184
<v Speaker 0>lose access to the relationship attribute, but Brian

00:43:17.184 --> 00:43:18.625
<v Speaker 0>and I are working on that too.

00:43:19.184 --> 00:43:20.944
<v Speaker 0>Or you can use the block server command,

00:43:20.944 --> 00:43:23.025
<v Speaker 0>which builds the schema on the fly for

00:43:23.025 --> 00:43:23.184
<v Speaker 0>you.

00:43:24.050 --> 00:43:26.930
<v Speaker 1>And it you can also run blocks serve

00:43:26.930 --> 00:43:29.490
<v Speaker 1>in all of those serverless environments because all

00:43:29.490 --> 00:43:31.490
<v Speaker 1>of the ones you mentioned support Go.

00:43:32.210 --> 00:43:34.609
<v Speaker 1>So that's that's not hard at all. In

00:43:34.609 --> 00:43:37.010
<v Speaker 1>fact, I have a repo somewhere.

00:43:37.010 --> 00:43:38.530
<v Speaker 1>I don't know. I've got so many repos.

00:43:38.845 --> 00:43:42.285
<v Speaker 1>I've got an example of that somewhere.

00:43:42.765 --> 00:43:44.125
<v Speaker 1>We can dig it up when we're we're

00:43:44.125 --> 00:43:46.605
<v Speaker 1>doing our show and tell. Alright. Sweet.

00:43:47.485 --> 00:43:49.085
<v Speaker 0>Alright. Well, that is

00:43:49.565 --> 00:43:52.290
<v Speaker 0>that's CueBlox as its basics. We can initialize

00:43:52.290 --> 00:43:54.450
<v Speaker 0>in your repository. We can very quickly using

00:43:54.450 --> 00:43:56.850
<v Speaker 0>Cue define our schemata. We can define the

00:43:56.850 --> 00:43:58.450
<v Speaker 0>types within that schema.

00:43:58.610 --> 00:44:01.330
<v Speaker 0>We can start to generate data. There's data

00:44:01.330 --> 00:44:01.650
<v Speaker 0>data.

00:44:03.855 --> 00:44:05.135
<v Speaker 0>What was the command from that? We've got

00:44:05.135 --> 00:44:06.655
<v Speaker 0>a lot of commands. Let's list them.

00:44:07.455 --> 00:44:08.815
<v Speaker 0>And there's

00:44:08.815 --> 00:44:11.215
<v Speaker 0>new, which allow you to template. So generate

00:44:11.215 --> 00:44:13.535
<v Speaker 0>new data, YAML files or Martin files based

00:44:13.535 --> 00:44:16.095
<v Speaker 0>on the schema itself. The remote commands are

00:44:16.095 --> 00:44:18.490
<v Speaker 0>managing this schemata. The render one is really

00:44:18.490 --> 00:44:20.890
<v Speaker 0>cool, which Brian's gonna maybe Yeah. Renders are

00:44:20.890 --> 00:44:23.610
<v Speaker 1>small, so that off. And plugins,

00:44:23.690 --> 00:44:24.570
<v Speaker 0>which I

00:44:25.130 --> 00:44:27.050
<v Speaker 0>I don't know anything about. I'm gonna I'm

00:44:27.050 --> 00:44:28.570
<v Speaker 0>gonna I'm gonna throw that over to you

00:44:28.570 --> 00:44:29.770
<v Speaker 0>to to do that justice.

00:44:30.555 --> 00:44:32.395
<v Speaker 1>I snuck those in under the fence this

00:44:32.395 --> 00:44:34.635
<v Speaker 1>last week and David approved them. I think

00:44:34.635 --> 00:44:36.475
<v Speaker 1>you read the code though, let's be honest.

00:44:36.954 --> 00:44:38.795
<v Speaker 0>Yeah. I think we're in a position where,

00:44:38.795 --> 00:44:40.075
<v Speaker 0>you know, we were adding a lot and

00:44:40.075 --> 00:44:41.275
<v Speaker 0>you you raised us

00:44:41.515 --> 00:44:43.194
<v Speaker 0>a week ago, maybe two weeks ago that

00:44:43.194 --> 00:44:45.194
<v Speaker 0>we we just got a lot of code

00:44:44.730 --> 00:44:46.330
<v Speaker 0>and we need to find a way to

00:44:46.330 --> 00:44:47.050
<v Speaker 0>make this

00:44:47.609 --> 00:44:49.290
<v Speaker 0>to extract some of it and make other

00:44:49.450 --> 00:44:50.810
<v Speaker 0>make it easier for other people to also

00:44:50.810 --> 00:44:52.170
<v Speaker 0>contribute plugins.

00:44:52.490 --> 00:44:55.370
<v Speaker 0>Yeah. If you wanna pop your screen off,

00:44:55.530 --> 00:44:58.125
<v Speaker 0>once that's there, I'll jump over to our

00:44:58.125 --> 00:44:59.805
<v Speaker 0>other screen share mode and we can show

00:44:59.805 --> 00:45:01.645
<v Speaker 0>off plugins and render.

00:45:03.085 --> 00:45:04.525
<v Speaker 0>But if you have if you're watching, you

00:45:04.525 --> 00:45:05.405
<v Speaker 0>have questions,

00:45:05.485 --> 00:45:07.805
<v Speaker 0>you're curious about maybe you have a use

00:45:07.805 --> 00:45:09.645
<v Speaker 0>case for CueBlox and you wanna know or

00:45:09.645 --> 00:45:11.620
<v Speaker 0>you want us to confirm that, yes, that

00:45:11.620 --> 00:45:12.740
<v Speaker 0>would be an awesome way to use it,

00:45:12.740 --> 00:45:15.620
<v Speaker 0>jump into the comments. And if anything I

00:45:15.620 --> 00:45:17.140
<v Speaker 0>have covered you want a bit more detail

00:45:17.140 --> 00:45:18.660
<v Speaker 0>on, just drop that in the comments too.

00:45:30.355 --> 00:45:31.955
<v Speaker 0>Is that screen share coming?

00:45:32.355 --> 00:45:33.395
<v Speaker 0>It's coming.

00:45:35.235 --> 00:45:36.675
<v Speaker 0>Is the computer behaving badly?

00:45:38.289 --> 00:45:41.410
<v Speaker 1>Oh, Edge wants to control my screen or

00:45:41.410 --> 00:45:44.049
<v Speaker 1>share my screen, and I have to remember

00:45:44.049 --> 00:45:45.250
<v Speaker 1>what my password is.

00:45:46.049 --> 00:45:48.369
<v Speaker 0>It's then gonna ask you to restart Edge,

00:45:48.369 --> 00:45:49.650
<v Speaker 0>which you don't have to do. You can

00:45:49.650 --> 00:45:51.825
<v Speaker 0>just say no, and it still works. I

00:45:51.825 --> 00:45:52.945
<v Speaker 0>do that a lot. Good.

00:45:53.505 --> 00:45:54.225
<v Speaker 0>Later.

00:45:55.265 --> 00:45:57.265
<v Speaker 0>Alright. So I'm gonna do a window,

00:45:58.145 --> 00:45:58.865
<v Speaker 1>blocks.

00:45:59.505 --> 00:46:01.745
<v Speaker 1>I cheated just a little bit, and

00:46:02.145 --> 00:46:03.185
<v Speaker 1>I put

00:46:03.984 --> 00:46:06.305
<v Speaker 1>ton of projects into one workspace

00:46:07.030 --> 00:46:09.670
<v Speaker 1>so that we can show them off differently,

00:46:09.670 --> 00:46:11.830
<v Speaker 1>separately. Your Versus code is now live, so

00:46:11.830 --> 00:46:13.510
<v Speaker 0>feel free to to take it away.

00:46:14.070 --> 00:46:16.550
<v Speaker 1>It's live? My Versus code works.

00:46:17.110 --> 00:46:17.830
<v Speaker 1>So

00:46:18.470 --> 00:46:20.950
<v Speaker 1>we've got that as a starting point here.

00:46:20.950 --> 00:46:24.015
<v Speaker 1>This is a working Versus code. And even

00:46:24.015 --> 00:46:27.214
<v Speaker 1>if for some reason I could have the

00:46:27.214 --> 00:46:29.935
<v Speaker 1>strange problem where backspace didn't work, I use

00:46:29.935 --> 00:46:31.295
<v Speaker 1>Vim key bindings,

00:46:31.375 --> 00:46:33.454
<v Speaker 1>so I could just d d and get

00:46:33.454 --> 00:46:34.975
<v Speaker 1>rid of those files.

00:46:35.375 --> 00:46:36.495
<v Speaker 1>Yeah. Show off.

00:46:37.055 --> 00:46:37.855
<v Speaker 1>Yeah. Well,

00:46:38.500 --> 00:46:40.020
<v Speaker 1>it's not so much a show off. It's

00:46:40.020 --> 00:46:41.700
<v Speaker 1>it's muscle memory. And I blame Eric St.

00:46:41.700 --> 00:46:43.380
<v Speaker 1>Martin for that. You know, twelve years ago,

00:46:43.380 --> 00:46:44.900
<v Speaker 1>he's like, you need to learn VIM.

00:46:45.300 --> 00:46:48.100
<v Speaker 1>And once you learn VIM, it's really hard

00:46:48.100 --> 00:46:48.980
<v Speaker 1>to unlearn VIM.

00:46:51.005 --> 00:46:51.885
<v Speaker 1>Alright. So,

00:46:52.285 --> 00:46:54.525
<v Speaker 1>one of the things that I built very

00:46:54.525 --> 00:46:58.125
<v Speaker 1>recently is the idea of plugins. We have

00:46:58.125 --> 00:47:01.085
<v Speaker 1>we have a ton of commands. Let's look

00:47:01.085 --> 00:47:04.089
<v Speaker 1>in our internal command directory here. There's a

00:47:04.089 --> 00:47:06.650
<v Speaker 1>ton of commands. And I was looking at

00:47:06.650 --> 00:47:10.730
<v Speaker 1>the the code that manages the remote repository.

00:47:10.730 --> 00:47:11.290
<v Speaker 1>So

00:47:11.609 --> 00:47:14.810
<v Speaker 1>blocks build and blocks serve and blocks render,

00:47:14.810 --> 00:47:15.770
<v Speaker 1>that's all

00:47:19.545 --> 00:47:22.505
<v Speaker 1>use in your local repository. But then we

00:47:22.505 --> 00:47:24.105
<v Speaker 1>have this whole concept of

00:47:24.505 --> 00:47:27.145
<v Speaker 1>a a schema repository that you can create

00:47:27.145 --> 00:47:29.065
<v Speaker 1>for your company or your group or your

00:47:29.065 --> 00:47:29.305
<v Speaker 1>team.

00:47:30.000 --> 00:47:31.760
<v Speaker 1>And there's a bunch of commands that manage

00:47:31.760 --> 00:47:33.360
<v Speaker 1>that, and it feels to me like that

00:47:33.360 --> 00:47:35.360
<v Speaker 1>code doesn't really belong in the same place.

00:47:35.360 --> 00:47:37.600
<v Speaker 1>It doesn't belong polluting our

00:47:37.760 --> 00:47:39.520
<v Speaker 1>blocks help file.

00:47:40.000 --> 00:47:41.360
<v Speaker 1>It it should be somewhere else. It should

00:47:41.360 --> 00:47:43.605
<v Speaker 1>be a plug in. So I went down

00:47:43.605 --> 00:47:48.005
<v Speaker 1>a total rabbit hole and found the HashiCorp

00:47:48.965 --> 00:47:49.925
<v Speaker 1>plugin

00:47:50.965 --> 00:47:52.645
<v Speaker 1>code. Let me see if I can show

00:47:52.645 --> 00:47:53.765
<v Speaker 1>an example of that.

00:47:54.579 --> 00:47:56.819
<v Speaker 1>And I'm really impressed with this go plug

00:47:56.819 --> 00:47:58.819
<v Speaker 1>in package. It allows you to create an

00:47:58.819 --> 00:48:00.740
<v Speaker 1>interface, to find an interface.

00:48:01.859 --> 00:48:03.860
<v Speaker 1>And in the interface

00:48:04.500 --> 00:48:08.099
<v Speaker 1>is just a contract between the caller and

00:48:08.099 --> 00:48:09.299
<v Speaker 1>the thing that's called

00:48:09.795 --> 00:48:11.315
<v Speaker 1>and it uses RPC

00:48:11.474 --> 00:48:12.915
<v Speaker 1>or gRPC

00:48:12.994 --> 00:48:13.955
<v Speaker 1>to talk

00:48:14.275 --> 00:48:16.435
<v Speaker 1>between the the server and the client,

00:48:16.915 --> 00:48:19.234
<v Speaker 1>and it it could not have worked any

00:48:19.234 --> 00:48:20.035
<v Speaker 1>easier.

00:48:20.035 --> 00:48:22.434
<v Speaker 1>So I I I thought about it, and

00:48:23.300 --> 00:48:25.700
<v Speaker 1>for the basic use cases, we really have

00:48:25.700 --> 00:48:27.300
<v Speaker 1>kinda two things that we need to do.

00:48:27.300 --> 00:48:28.180
<v Speaker 1>We need to have,

00:48:28.820 --> 00:48:31.220
<v Speaker 1>things that happen before the build and things

00:48:31.220 --> 00:48:32.980
<v Speaker 1>that happen after the build. So I created

00:48:32.980 --> 00:48:34.260
<v Speaker 1>prebuild

00:48:34.260 --> 00:48:35.540
<v Speaker 1>and postbuild

00:48:35.915 --> 00:48:36.715
<v Speaker 1>as

00:48:36.875 --> 00:48:38.235
<v Speaker 1>plug in interfaces.

00:48:38.474 --> 00:48:39.675
<v Speaker 1>And then the

00:48:42.315 --> 00:48:45.435
<v Speaker 1>GoPlugin package has this concept of a magic

00:48:45.435 --> 00:48:47.595
<v Speaker 1>key and a magic cookie,

00:48:48.155 --> 00:48:49.675
<v Speaker 1>the key and the value. And those are

00:48:49.675 --> 00:48:53.300
<v Speaker 1>just handshakes that that let the, the client

00:48:53.300 --> 00:48:55.620
<v Speaker 1>and the server know that they're both speaking

00:48:55.620 --> 00:48:58.020
<v Speaker 1>the same protocol and and they should be,

00:48:58.340 --> 00:49:00.020
<v Speaker 1>talking to each other. And and like the

00:49:00.020 --> 00:49:01.940
<v Speaker 1>comment says, this is not a security feature.

00:49:01.940 --> 00:49:03.940
<v Speaker 1>This is more of a are we speaking

00:49:03.940 --> 00:49:05.940
<v Speaker 1>the same language and and should we be

00:49:05.940 --> 00:49:08.645
<v Speaker 1>talking to each other kind of feature. So

00:49:08.645 --> 00:49:09.365
<v Speaker 1>we've got these,

00:49:09.845 --> 00:49:12.965
<v Speaker 1>handshakes configured and the interface is configured. It

00:49:12.965 --> 00:49:15.605
<v Speaker 1>made it really easy to build plugins. So

00:49:15.605 --> 00:49:17.445
<v Speaker 1>let's take a look at,

00:49:18.325 --> 00:49:19.845
<v Speaker 1>the first plugin I built

00:49:21.210 --> 00:49:23.050
<v Speaker 1>is blocked images.

00:49:23.450 --> 00:49:25.450
<v Speaker 1>And I am obsessed

00:49:25.450 --> 00:49:28.730
<v Speaker 1>with serving the right size images for the

00:49:28.730 --> 00:49:30.730
<v Speaker 1>screen that's on on display

00:49:31.050 --> 00:49:32.570
<v Speaker 1>and being able to use

00:49:34.385 --> 00:49:36.944
<v Speaker 1>the height and width fields in my image

00:49:36.944 --> 00:49:37.665
<v Speaker 1>tags.

00:49:38.305 --> 00:49:40.145
<v Speaker 1>So I built this plugin

00:49:40.464 --> 00:49:43.184
<v Speaker 1>that reads all of the files from the

00:49:43.184 --> 00:49:47.025
<v Speaker 1>static directory and that's declared in your queue

00:49:46.740 --> 00:49:48.500
<v Speaker 1>or your blocks dot queue file.

00:49:48.980 --> 00:49:51.700
<v Speaker 1>And it goes through and

00:49:51.940 --> 00:49:53.060
<v Speaker 1>uses

00:49:53.220 --> 00:49:53.940
<v Speaker 1>this

00:49:55.460 --> 00:49:56.660
<v Speaker 1>where is it?

00:49:57.220 --> 00:49:59.940
<v Speaker 1>Imaging dot open. So it reads the reads

00:49:59.940 --> 00:50:01.619
<v Speaker 1>the file. If it's if it's an image,

00:50:01.619 --> 00:50:02.580
<v Speaker 1>it reads the file

00:50:03.405 --> 00:50:04.285
<v Speaker 1>and then,

00:50:05.325 --> 00:50:08.845
<v Speaker 1>modifies the YAML or actually creates YAML,

00:50:09.165 --> 00:50:10.685
<v Speaker 1>excuse me, with a

00:50:11.245 --> 00:50:13.485
<v Speaker 1>file name, the height and width and then

00:50:13.485 --> 00:50:16.045
<v Speaker 1>potentially a CDN endpoint which would be a

00:50:16.045 --> 00:50:17.165
<v Speaker 1>prefix for the URL.

00:50:18.600 --> 00:50:20.680
<v Speaker 1>So because this is a pre,

00:50:21.480 --> 00:50:22.360
<v Speaker 1>plugin,

00:50:22.520 --> 00:50:24.040
<v Speaker 1>we're actually creating,

00:50:25.320 --> 00:50:26.040
<v Speaker 1>data

00:50:26.280 --> 00:50:29.560
<v Speaker 1>that will then be compiled and built by

00:50:30.040 --> 00:50:30.600
<v Speaker 1>CueBlox.

00:50:31.494 --> 00:50:33.575
<v Speaker 1>So let's look at that in practice in

00:50:33.575 --> 00:50:34.535
<v Speaker 1>my blog.

00:50:35.255 --> 00:50:37.975
<v Speaker 1>I've got my blocks dot queue

00:50:38.295 --> 00:50:41.415
<v Speaker 1>in the root directory of my blog.

00:50:42.215 --> 00:50:45.240
<v Speaker 1>And you can see my data and schema,

00:50:45.240 --> 00:50:47.080
<v Speaker 1>all these directories are a little bit different

00:50:47.080 --> 00:50:49.800
<v Speaker 1>than the demo that David showed because I

00:50:49.800 --> 00:50:51.960
<v Speaker 1>want to be able to share these directories

00:50:51.960 --> 00:50:52.760
<v Speaker 1>among,

00:50:53.160 --> 00:50:55.480
<v Speaker 1>both CueBlox and the blog itself.

00:50:55.880 --> 00:50:58.920
<v Speaker 1>So specifically, the static directory is public static.

00:51:00.185 --> 00:51:02.825
<v Speaker 1>And that means that when CueBlox runs,

00:51:03.225 --> 00:51:05.385
<v Speaker 1>it's gonna be looking for static files in

00:51:05.385 --> 00:51:08.505
<v Speaker 1>that public static directory, which is the same

00:51:08.505 --> 00:51:10.265
<v Speaker 1>static directory that

00:51:12.570 --> 00:51:14.890
<v Speaker 1>Next uses when it's serving

00:51:15.450 --> 00:51:17.850
<v Speaker 1>images. So I've got all these images in

00:51:17.850 --> 00:51:19.450
<v Speaker 1>my public static directory.

00:51:19.770 --> 00:51:21.770
<v Speaker 1>If I open up a terminal

00:51:22.730 --> 00:51:24.330
<v Speaker 1>sorry. I'm on a strange keyboard.

00:51:26.045 --> 00:51:29.005
<v Speaker 1>Where's the terminal thing? Here we go.

00:51:30.365 --> 00:51:32.285
<v Speaker 1>I put away my loud keyboard.

00:51:36.125 --> 00:51:38.125
<v Speaker 0>Yeah. I can hear you typing there. That's

00:51:38.125 --> 00:51:39.645
<v Speaker 0>that's different. I like it.

00:51:44.990 --> 00:51:47.150
<v Speaker 1>Get rid of my custom

00:51:47.150 --> 00:51:49.630
<v Speaker 1>built blog or blocks and make sure that

00:51:49.630 --> 00:51:51.310
<v Speaker 1>I'm using the one that I brew installed.

00:51:54.435 --> 00:51:56.355
<v Speaker 1>Oh, by the way, Blocks is available on

00:51:56.355 --> 00:51:57.075
<v Speaker 1>Homebrew.

00:51:57.795 --> 00:51:59.955
<v Speaker 1>You can use that on Linux or Mac

00:51:59.955 --> 00:52:00.595
<v Speaker 1>OS.

00:52:01.555 --> 00:52:03.795
<v Speaker 1>So if I do a Blocks build,

00:52:03.955 --> 00:52:05.875
<v Speaker 1>what it's going to do is

00:52:06.595 --> 00:52:08.515
<v Speaker 1>run those plugins. Let's go back to my

00:52:08.515 --> 00:52:11.620
<v Speaker 1>Blocks queue. There's a pre build section with

00:52:11.620 --> 00:52:13.380
<v Speaker 1>an array of plugins and a post build

00:52:13.380 --> 00:52:15.220
<v Speaker 1>section with an array of plugins.

00:52:15.300 --> 00:52:17.540
<v Speaker 1>So I've got a plugin called Blocks images,

00:52:17.540 --> 00:52:19.780
<v Speaker 1>and the executable is Blocks images. Let's make

00:52:19.780 --> 00:52:20.580
<v Speaker 1>sure that exists.

00:52:23.795 --> 00:52:24.515
<v Speaker 1>So

00:52:24.595 --> 00:52:26.355
<v Speaker 1>if I type box build,

00:52:31.235 --> 00:52:33.155
<v Speaker 1>it's modern. Oh, I need to be in

00:52:33.155 --> 00:52:33.955
<v Speaker 1>the data directory.

00:52:49.305 --> 00:52:50.105
<v Speaker 0>I do?

00:52:51.465 --> 00:52:54.585
<v Speaker 0>It said that your data schemata directory didn't

00:52:54.585 --> 00:52:55.305
<v Speaker 0>exist.

00:52:56.905 --> 00:52:58.105
<v Speaker 1>How can that be?

00:52:59.145 --> 00:53:00.105
<v Speaker 1>Where did it go?

00:53:03.030 --> 00:53:04.870
<v Speaker 1>It it's really gone too.

00:53:07.110 --> 00:53:08.390
<v Speaker 1>Git restore.

00:53:12.230 --> 00:53:12.870
<v Speaker 0>How about that?

00:53:14.625 --> 00:53:15.505
<v Speaker 0>Uh-oh.

00:53:16.625 --> 00:53:17.905
<v Speaker 1>Yeah. That's frightening.

00:53:18.305 --> 00:53:20.225
<v Speaker 1>Where's the schemata directory?

00:53:26.065 --> 00:53:27.265
<v Speaker 1>I bet it got moved.

00:53:29.420 --> 00:53:31.500
<v Speaker 1>Sections. Look at that. See? It's schemata. It

00:53:31.500 --> 00:53:32.380
<v Speaker 1>got moved. I

00:53:33.180 --> 00:53:35.259
<v Speaker 1>do that all the time on my laptop

00:53:35.259 --> 00:53:37.980
<v Speaker 1>somehow. I fat finger and move things.

00:53:38.779 --> 00:53:40.700
<v Speaker 1>Alright. Let's see if it's back. Oh, it's

00:53:40.700 --> 00:53:41.660
<v Speaker 1>back. Good news.

00:53:43.915 --> 00:53:46.075
<v Speaker 1>Alright. Let's try that block build again. There

00:53:46.075 --> 00:53:48.155
<v Speaker 1>we go. So sir. You see that it's

00:53:48.155 --> 00:53:49.595
<v Speaker 1>running the plugins.

00:53:50.075 --> 00:53:52.635
<v Speaker 1>It registered the blocks images plugin.

00:53:53.355 --> 00:53:56.155
<v Speaker 1>It initialized it, and now it appears to

00:53:56.155 --> 00:53:58.234
<v Speaker 1>be doing nothing. But what it's actually doing

00:53:58.234 --> 00:54:00.155
<v Speaker 1>is

00:53:59.410 --> 00:54:00.210
<v Speaker 1>blowing up

00:54:00.530 --> 00:54:03.410
<v Speaker 1>because the post plugin isn't there, but that's

00:54:03.410 --> 00:54:03.970
<v Speaker 1>okay.

00:54:04.770 --> 00:54:06.770
<v Speaker 1>The pre plugin actually ran.

00:54:07.170 --> 00:54:10.450
<v Speaker 1>And if you look at the public static

00:54:10.770 --> 00:54:12.050
<v Speaker 1>images directory,

00:54:12.210 --> 00:54:13.890
<v Speaker 1>you can see this directory structure and a

00:54:13.890 --> 00:54:15.785
<v Speaker 1>bunch of images. And now we go back

00:54:15.785 --> 00:54:18.105
<v Speaker 1>up to my data directory,

00:54:18.665 --> 00:54:21.305
<v Speaker 1>and you can see that my my prebuild

00:54:21.305 --> 00:54:22.105
<v Speaker 1>plugin

00:54:22.185 --> 00:54:25.385
<v Speaker 1>created YAML files for each of those images

00:54:25.785 --> 00:54:27.865
<v Speaker 1>that has the height and width and the

00:54:27.865 --> 00:54:28.425
<v Speaker 1>file name.

00:54:29.360 --> 00:54:30.960
<v Speaker 1>And because it has those,

00:54:31.120 --> 00:54:33.920
<v Speaker 1>now in Next. Js in the templates for

00:54:33.920 --> 00:54:34.720
<v Speaker 1>my

00:54:35.440 --> 00:54:36.560
<v Speaker 1>my website,

00:54:36.800 --> 00:54:38.080
<v Speaker 1>I can specify

00:54:38.240 --> 00:54:38.880
<v Speaker 1>the

00:54:39.920 --> 00:54:41.440
<v Speaker 1>the image information

00:54:42.035 --> 00:54:45.395
<v Speaker 1>directly from that slug or directly from that

00:54:45.395 --> 00:54:46.435
<v Speaker 1>YAML file

00:54:46.755 --> 00:54:47.395
<v Speaker 1>and,

00:54:47.635 --> 00:54:50.115
<v Speaker 1>get the nice pretty image

00:54:50.195 --> 00:54:52.915
<v Speaker 1>tags from Next. Js that does

00:54:53.235 --> 00:54:55.075
<v Speaker 1>the responsive image sizing.

00:54:55.720 --> 00:54:57.960
<v Speaker 0>Very cool. I like that. Right. This is

00:54:57.960 --> 00:54:59.400
<v Speaker 1>the most talking I've done in three months

00:54:59.400 --> 00:55:01.320
<v Speaker 1>since I've been on paternity leave.

00:55:02.280 --> 00:55:03.640
<v Speaker 1>Yeah. I've done a lot of nursery song

00:55:03.640 --> 00:55:04.600
<v Speaker 1>singing, though.

00:55:07.000 --> 00:55:09.245
<v Speaker 0>Yeah. You've only been back, what, less than

00:55:09.245 --> 00:55:10.765
<v Speaker 0>a week, and I've already dragged you in

00:55:10.765 --> 00:55:12.445
<v Speaker 0>front of the camera to do a stream.

00:55:12.445 --> 00:55:14.925
<v Speaker 0>So, you know Just a couple days. Yeah.

00:55:15.405 --> 00:55:16.045
<v Speaker 1>So

00:55:17.085 --> 00:55:19.885
<v Speaker 1>that's the prebuild plugin. It creates all of

00:55:19.885 --> 00:55:21.565
<v Speaker 1>these YAML files.

00:55:21.990 --> 00:55:24.070
<v Speaker 1>And then if you look in the build

00:55:24.070 --> 00:55:25.270
<v Speaker 1>directory here,

00:55:26.390 --> 00:55:29.670
<v Speaker 1>you can see individual data files because that's

00:55:29.670 --> 00:55:31.270
<v Speaker 1>another thing I added recently.

00:55:32.310 --> 00:55:34.630
<v Speaker 1>Instead of just a single data dot

00:55:34.869 --> 00:55:37.030
<v Speaker 1>JSON file, which still exists,

00:55:38.335 --> 00:55:40.495
<v Speaker 1>I also break them out into,

00:55:41.295 --> 00:55:42.015
<v Speaker 1>both

00:55:43.615 --> 00:55:45.615
<v Speaker 1>record set level data

00:55:46.015 --> 00:55:48.815
<v Speaker 1>and then individual record data so that I

00:55:48.815 --> 00:55:51.215
<v Speaker 1>can serve them from a CDN, and that's

00:55:51.215 --> 00:55:54.869
<v Speaker 1>part of my post build process. So that's

00:55:54.869 --> 00:55:56.869
<v Speaker 1>a great segue into

00:55:59.109 --> 00:56:00.550
<v Speaker 1>plug in number two,

00:56:00.789 --> 00:56:02.310
<v Speaker 1>which is static sync.

00:56:03.270 --> 00:56:04.550
<v Speaker 1>Static sync

00:56:05.670 --> 00:56:07.990
<v Speaker 1>takes the output

00:56:07.585 --> 00:56:10.225
<v Speaker 1>either in the images

00:56:10.225 --> 00:56:13.025
<v Speaker 1>or the data that's built and syncs it

00:56:13.025 --> 00:56:16.945
<v Speaker 1>up to any CDN or cloud bucket

00:56:16.945 --> 00:56:19.665
<v Speaker 1>that's supported by go go cloud. So in

00:56:19.665 --> 00:56:20.145
<v Speaker 1>my case,

00:56:21.010 --> 00:56:23.170
<v Speaker 1>it's using Azure's

00:56:23.330 --> 00:56:25.330
<v Speaker 1>blob storage with a CDN in front of

00:56:25.330 --> 00:56:25.890
<v Speaker 1>it.

00:56:26.770 --> 00:56:28.050
<v Speaker 1>Bucket missing.

00:56:28.130 --> 00:56:29.330
<v Speaker 1>I must have

00:56:32.370 --> 00:56:34.050
<v Speaker 0>Did you use DRAM when you went into

00:56:34.050 --> 00:56:36.395
<v Speaker 0>that directory? M r c. Well, I just

00:56:36.395 --> 00:56:38.075
<v Speaker 1>have to be careful not to

00:56:39.994 --> 00:56:41.355
<v Speaker 1>give away keys here.

00:56:52.190 --> 00:56:54.270
<v Speaker 1>Edit bucket. We should be there.

00:56:59.710 --> 00:57:00.910
<v Speaker 1>Bucket missing.

00:57:01.390 --> 00:57:02.829
<v Speaker 1>Oh, I might not be signed in to

00:57:02.829 --> 00:57:04.430
<v Speaker 1>Azure on this machine. I do most of

00:57:04.430 --> 00:57:07.525
<v Speaker 1>my development on a different laptop. So Uh-huh.

00:57:07.525 --> 00:57:09.765
<v Speaker 1>Possible that I'm just not signed in.

00:57:12.245 --> 00:57:15.365
<v Speaker 1>But what this plug in does is

00:57:16.485 --> 00:57:17.525
<v Speaker 1>it's actually

00:57:17.765 --> 00:57:20.085
<v Speaker 1>a good example of that interface,

00:57:20.520 --> 00:57:23.240
<v Speaker 1>that plugin interface being used twice.

00:57:23.240 --> 00:57:23.800
<v Speaker 1>So

00:57:24.040 --> 00:57:27.400
<v Speaker 1>in the main, I've got two different plugins

00:57:27.400 --> 00:57:29.480
<v Speaker 1>defined in the same binary here. So I've

00:57:29.480 --> 00:57:31.800
<v Speaker 1>got the static sync plugin and the data

00:57:31.800 --> 00:57:32.440
<v Speaker 1>sync plugin,

00:57:32.934 --> 00:57:35.255
<v Speaker 1>and those are each in two different Go

00:57:35.255 --> 00:57:37.095
<v Speaker 1>files. So the data sync plugin

00:57:37.255 --> 00:57:39.255
<v Speaker 1>reads the build directory,

00:57:39.255 --> 00:57:41.174
<v Speaker 1>that output directory that has the data dot

00:57:41.174 --> 00:57:42.135
<v Speaker 1>JSON file.

00:57:42.775 --> 00:57:45.895
<v Speaker 1>And the static plugin reads the build directory

00:57:45.895 --> 00:57:48.320
<v Speaker 1>for the stat I'm sorry, the static directory

00:57:48.320 --> 00:57:50.880
<v Speaker 1>for our images and and other files.

00:57:51.200 --> 00:57:51.840
<v Speaker 1>So

00:57:52.080 --> 00:57:54.800
<v Speaker 1>by setting a couple environment variables and running

00:57:54.800 --> 00:57:58.480
<v Speaker 1>this plug in, the output gets synced to

00:57:59.424 --> 00:58:01.984
<v Speaker 1>two different buckets up in Azure storage, which

00:58:01.984 --> 00:58:03.825
<v Speaker 1>are fronted by a CDN.

00:58:04.145 --> 00:58:07.744
<v Speaker 1>So you can go to images.brian.dev/images

00:58:07.744 --> 00:58:09.744
<v Speaker 1>and get all of the images that,

00:58:10.065 --> 00:58:12.650
<v Speaker 1>are in this static directory.

00:58:12.970 --> 00:58:15.210
<v Speaker 1>But also the build data

00:58:15.370 --> 00:58:16.730
<v Speaker 1>gets output

00:58:16.730 --> 00:58:17.530
<v Speaker 1>as well.

00:58:18.010 --> 00:58:21.370
<v Speaker 1>So instead of wasting any time running blocks

00:58:21.370 --> 00:58:24.890
<v Speaker 1>serve or spinning up some sort of, Node

00:58:24.890 --> 00:58:27.825
<v Speaker 1>JS server or anything else like that, I

00:58:27.825 --> 00:58:33.744
<v Speaker 1>can now just call images.brian.dev/data/articles.json

00:58:33.744 --> 00:58:34.705
<v Speaker 1>and get

00:58:34.865 --> 00:58:35.745
<v Speaker 1>the latest

00:58:35.905 --> 00:58:36.625
<v Speaker 1>articles

00:58:36.785 --> 00:58:38.385
<v Speaker 1>as JSON file,

00:58:38.865 --> 00:58:40.145
<v Speaker 1>and they're

00:58:40.224 --> 00:58:42.385
<v Speaker 1>cached with an appropriate time to live,

00:58:42.980 --> 00:58:44.260
<v Speaker 1>and the build,

00:58:44.980 --> 00:58:47.460
<v Speaker 1>process automatically kills the,

00:58:47.859 --> 00:58:49.220
<v Speaker 1>CDN cache

00:58:49.539 --> 00:58:52.819
<v Speaker 1>when I rebuild it. So a really awesome

00:58:52.819 --> 00:58:55.220
<v Speaker 1>and great way to take advantage

00:58:55.220 --> 00:58:55.460
<v Speaker 1>of

00:58:56.055 --> 00:58:57.255
<v Speaker 1>cloud storage

00:58:57.494 --> 00:58:59.335
<v Speaker 1>and run one less server.

00:59:01.255 --> 00:59:03.415
<v Speaker 1>So those are the two plugins.

00:59:03.415 --> 00:59:05.175
<v Speaker 1>I'm sorry. Go ahead. Yeah. I I

00:59:05.895 --> 00:59:07.655
<v Speaker 0>think what you know, just to

00:59:08.490 --> 00:59:09.370
<v Speaker 0>clarify

00:59:09.450 --> 00:59:11.370
<v Speaker 0>is that CueBlox doesn't try to be too

00:59:11.370 --> 00:59:13.370
<v Speaker 0>opinionated on what you do with your data,

00:59:13.370 --> 00:59:15.610
<v Speaker 0>but instead open up pipelines for whatever you

00:59:15.610 --> 00:59:17.050
<v Speaker 0>want to do with your data. Like, we

00:59:17.050 --> 00:59:18.650
<v Speaker 0>have completely different

00:59:18.890 --> 00:59:20.650
<v Speaker 0>ideas of how our data works on our

00:59:20.650 --> 00:59:23.005
<v Speaker 0>our site, but CueBlox is still the critical

00:59:23.005 --> 00:59:24.765
<v Speaker 0>bit of infrastructure in the middle that allows

00:59:24.765 --> 00:59:26.765
<v Speaker 0>all of those pipelines to happen, which I

00:59:26.765 --> 00:59:28.125
<v Speaker 0>think is just, you know, I think we

00:59:28.125 --> 00:59:30.525
<v Speaker 0>got the experience just right with a lot

00:59:30.525 --> 00:59:32.445
<v Speaker 0>of that. Yeah. I agree. And and that

00:59:32.445 --> 00:59:34.365
<v Speaker 1>was because of all of the

00:59:35.260 --> 00:59:37.980
<v Speaker 1>meeting in the middle about how things should

00:59:37.980 --> 00:59:38.460
<v Speaker 1>work.

00:59:39.020 --> 00:59:41.580
<v Speaker 1>It's flexible enough that it handles both of

00:59:41.580 --> 00:59:42.540
<v Speaker 1>our unique

00:59:43.100 --> 00:59:46.380
<v Speaker 1>styles of of serving and and consuming data

00:59:46.700 --> 00:59:47.820
<v Speaker 1>without getting in the way.

00:59:48.695 --> 00:59:50.455
<v Speaker 1>And a great example of that, if you

00:59:50.455 --> 00:59:52.535
<v Speaker 1>look at the GitHub workflows

00:59:52.855 --> 00:59:53.655
<v Speaker 1>for

00:59:53.655 --> 00:59:55.655
<v Speaker 1>the blocks project itself,

00:59:56.215 --> 00:59:57.415
<v Speaker 1>in the main,

00:59:57.655 --> 00:59:59.415
<v Speaker 1>this is the thing that builds

01:00:00.150 --> 01:00:00.950
<v Speaker 1>CueBlox

01:00:00.950 --> 01:00:02.790
<v Speaker 1>and runs GoReleaser,

01:00:03.029 --> 01:00:05.349
<v Speaker 1>and it also runs

01:00:05.430 --> 01:00:05.990
<v Speaker 1>our,

01:00:09.270 --> 01:00:10.390
<v Speaker 1>where is it?

01:00:11.349 --> 01:00:13.510
<v Speaker 1>Data. Here we go. So this is the

01:00:13.670 --> 01:00:15.670
<v Speaker 1>the thing that publishes the data

01:00:16.595 --> 01:00:19.555
<v Speaker 1>and then also builds our websites.

01:00:20.434 --> 01:00:21.555
<v Speaker 1>All of that

01:00:21.875 --> 01:00:24.755
<v Speaker 1>works across the same set of data,

01:00:25.635 --> 01:00:27.475
<v Speaker 1>but can push to

01:00:28.035 --> 01:00:29.714
<v Speaker 1>any number of different

01:00:31.130 --> 01:00:32.090
<v Speaker 1>endpoints.

01:00:32.730 --> 01:00:34.330
<v Speaker 1>This particular

01:00:35.370 --> 01:00:36.170
<v Speaker 1>GitHub

01:00:36.490 --> 01:00:39.770
<v Speaker 1>action is pushing to, Azure static web apps,

01:00:40.330 --> 01:00:42.970
<v Speaker 1>but we've also got some in here that

01:00:42.970 --> 01:00:44.090
<v Speaker 1>push to,

01:00:44.410 --> 01:00:44.970
<v Speaker 1>Vercel

01:00:45.505 --> 01:00:47.665
<v Speaker 1>just as an example because we can.

01:00:47.984 --> 01:00:49.665
<v Speaker 1>And it's it's really fun

01:00:50.145 --> 01:00:52.145
<v Speaker 1>taking that same data,

01:00:52.545 --> 01:00:54.465
<v Speaker 1>using it as many different ways as you

01:00:54.465 --> 01:00:55.025
<v Speaker 1>want.

01:00:56.145 --> 01:00:58.065
<v Speaker 1>Here's another example of that.

01:00:59.840 --> 01:01:03.280
<v Speaker 1>Let's see here. I've got this particular dataset.

01:01:03.280 --> 01:01:05.440
<v Speaker 1>This is my b k m l library,

01:01:06.400 --> 01:01:09.840
<v Speaker 1>and it's actually served by a Go binary.

01:01:10.720 --> 01:01:12.400
<v Speaker 1>And this Go binary

01:01:12.640 --> 01:01:13.040
<v Speaker 1>has

01:01:13.805 --> 01:01:14.525
<v Speaker 1>the

01:01:15.485 --> 01:01:16.365
<v Speaker 1>HTTP

01:01:16.365 --> 01:01:18.205
<v Speaker 1>and GraphQL handlers

01:01:18.605 --> 01:01:20.845
<v Speaker 1>that are built into CueBlox,

01:01:21.485 --> 01:01:22.845
<v Speaker 1>and they're served

01:01:22.925 --> 01:01:23.565
<v Speaker 1>as

01:01:25.165 --> 01:01:26.205
<v Speaker 1>an endpoint,

01:01:27.010 --> 01:01:29.650
<v Speaker 1>one for GraphQL and one for REST. But

01:01:29.650 --> 01:01:31.810
<v Speaker 1>then I also added a

01:01:33.410 --> 01:01:36.530
<v Speaker 1>image handling service that will resize images

01:01:36.530 --> 01:01:37.810
<v Speaker 1>and perform,

01:01:38.370 --> 01:01:40.690
<v Speaker 1>image manipulation if you want to.

01:01:41.010 --> 01:01:44.825
<v Speaker 1>And then also an OG image creator. So

01:01:44.825 --> 01:01:46.185
<v Speaker 1>you can pass in,

01:01:46.585 --> 01:01:48.985
<v Speaker 1>text and it will automatically create

01:01:49.065 --> 01:01:52.185
<v Speaker 1>OG images that look like this, for example,

01:01:52.505 --> 01:01:55.065
<v Speaker 1>for Twitter and social

01:01:55.065 --> 01:01:56.345
<v Speaker 1>media sharing. So

01:01:58.020 --> 01:02:00.900
<v Speaker 1>completely different take on serving the data, and

01:02:00.900 --> 01:02:03.860
<v Speaker 1>this particular one gets served by,

01:02:04.420 --> 01:02:06.900
<v Speaker 1>Fly, fly dot I o, which is an

01:02:06.900 --> 01:02:08.020
<v Speaker 1>amazingly

01:02:08.660 --> 01:02:10.500
<v Speaker 1>flexible service for running

01:02:10.965 --> 01:02:12.805
<v Speaker 1>stuff. I'm having a lot of fun playing

01:02:12.805 --> 01:02:15.445
<v Speaker 1>with Fly. Yeah. Fly's pretty neat. Really impressed

01:02:15.445 --> 01:02:16.805
<v Speaker 0>with their service as well.

01:02:18.245 --> 01:02:20.485
<v Speaker 1>Yeah. So that's that's a good example of

01:02:20.485 --> 01:02:21.365
<v Speaker 1>taking

01:02:22.085 --> 01:02:23.285
<v Speaker 1>that same data.

01:02:23.445 --> 01:02:26.230
<v Speaker 1>So this is the same it's actually a

01:02:26.230 --> 01:02:28.310
<v Speaker 1>copy of the data in my blog. So

01:02:28.310 --> 01:02:31.110
<v Speaker 1>it's the same data, same articles, images, whatever,

01:02:31.670 --> 01:02:33.910
<v Speaker 1>and it's being served in a completely different

01:02:33.910 --> 01:02:34.470
<v Speaker 1>way,

01:02:35.030 --> 01:02:36.150
<v Speaker 1>over fly. So

01:02:39.315 --> 01:02:41.555
<v Speaker 1>that that lack of opinion in terms of

01:02:41.555 --> 01:02:42.915
<v Speaker 1>how to serve the data,

01:02:43.395 --> 01:02:44.835
<v Speaker 1>has been a lot of fun.

01:02:46.195 --> 01:02:48.035
<v Speaker 0>Alright. Shall we take a look sorry.

01:02:48.355 --> 01:02:50.675
<v Speaker 1>I need to ahead. No. It's okay. Just

01:02:50.675 --> 01:02:52.275
<v Speaker 1>wanted to show off the templates real quick.

01:02:53.640 --> 01:02:55.960
<v Speaker 1>So here's here's another repository.

01:02:56.119 --> 01:02:58.039
<v Speaker 1>I've got a lot of these laying around

01:02:58.039 --> 01:02:58.839
<v Speaker 1>with

01:02:58.839 --> 01:03:01.160
<v Speaker 1>different datasets so that we can

01:03:01.480 --> 01:03:02.599
<v Speaker 1>make sure we're not

01:03:03.559 --> 01:03:06.039
<v Speaker 1>getting too opinionated about our own datasets and

01:03:06.039 --> 01:03:08.680
<v Speaker 1>things work well with other use cases.

01:03:10.065 --> 01:03:12.145
<v Speaker 1>So this one, we talked a little bit

01:03:12.145 --> 01:03:13.665
<v Speaker 1>earlier about blocks render.

01:03:13.984 --> 01:03:16.065
<v Speaker 1>This one has some templates in it, and

01:03:16.065 --> 01:03:17.105
<v Speaker 1>the templates

01:03:17.425 --> 01:03:19.185
<v Speaker 1>build shell scripts.

01:03:19.585 --> 01:03:20.945
<v Speaker 1>So if you look at,

01:03:21.665 --> 01:03:24.460
<v Speaker 1>the articles.text.tmpl,

01:03:24.620 --> 01:03:26.140
<v Speaker 1>it will run for,

01:03:27.820 --> 01:03:29.340
<v Speaker 1>the articles dataset.

01:03:29.660 --> 01:03:31.340
<v Speaker 1>So you can see there's a range in

01:03:31.340 --> 01:03:34.300
<v Speaker 1>in Go's template format. So for each article,

01:03:34.460 --> 01:03:37.340
<v Speaker 1>it's gonna call Azure OG, which will create

01:03:37.835 --> 01:03:39.115
<v Speaker 1>OG image,

01:03:39.595 --> 01:03:41.595
<v Speaker 1>and that's just a quick Go app that

01:03:41.595 --> 01:03:43.434
<v Speaker 1>I wrote that does the same thing as

01:03:43.434 --> 01:03:45.194
<v Speaker 1>the OG image we looked at just a

01:03:45.194 --> 01:03:45.994
<v Speaker 1>second ago.

01:03:46.714 --> 01:03:49.595
<v Speaker 1>So this creates a shell script

01:03:49.835 --> 01:03:50.555
<v Speaker 1>that

01:03:50.795 --> 01:03:52.315
<v Speaker 1>builds the OG images

01:03:53.490 --> 01:03:54.530
<v Speaker 1>and then,

01:03:55.250 --> 01:03:57.490
<v Speaker 1>executes it. So this this first one creates

01:03:57.490 --> 01:03:59.810
<v Speaker 1>the shell scripts. The second one actually

01:03:59.890 --> 01:04:02.130
<v Speaker 1>executes the shell scripts. And I think that's

01:04:02.130 --> 01:04:04.370
<v Speaker 1>just so much fun. That's there's so much

01:04:04.370 --> 01:04:05.410
<v Speaker 1>power in that,

01:04:05.810 --> 01:04:09.265
<v Speaker 1>generating scripts and then executing them all based

01:04:09.265 --> 01:04:10.305
<v Speaker 1>on the data.

01:04:11.265 --> 01:04:12.385
<v Speaker 1>And then we've got,

01:04:12.705 --> 01:04:14.385
<v Speaker 1>that's something I think I was just playing

01:04:14.385 --> 01:04:14.865
<v Speaker 1>with.

01:04:15.585 --> 01:04:17.905
<v Speaker 1>Here's one that creates OG images for each

01:04:17.905 --> 01:04:19.745
<v Speaker 1>of the pages in the website,

01:04:20.305 --> 01:04:23.585
<v Speaker 1>and then here's a template for the RSS

01:04:23.585 --> 01:04:26.510
<v Speaker 1>feed. That's it. There's there's almost nothing to

01:04:26.510 --> 01:04:27.950
<v Speaker 1>it when you think about this. This is

01:04:27.950 --> 01:04:28.910
<v Speaker 1>almost all

01:04:30.430 --> 01:04:32.190
<v Speaker 1>boilerplate for RSS

01:04:32.190 --> 01:04:34.430
<v Speaker 1>and just a tiny little bit of

01:04:34.830 --> 01:04:35.870
<v Speaker 1>Go templating.

01:04:36.030 --> 01:04:38.030
<v Speaker 1>And So cool. I I didn't have to

01:04:38.030 --> 01:04:40.685
<v Speaker 1>write hundreds of lines of anything to make

01:04:40.685 --> 01:04:42.525
<v Speaker 1>this happen. I just ran it through the

01:04:42.525 --> 01:04:43.485
<v Speaker 1>template engine.

01:04:43.885 --> 01:04:44.765
<v Speaker 1>That's fun.

01:04:46.045 --> 01:04:47.405
<v Speaker 0>Yeah. Definitely.

01:04:47.725 --> 01:04:49.245
<v Speaker 0>I didn't know the RSS one which is

01:04:49.245 --> 01:04:51.005
<v Speaker 0>sitting there in your repository. I'm I'm definitely

01:04:51.005 --> 01:04:53.325
<v Speaker 0>gonna be stealing that at some point. Good.

01:04:53.325 --> 01:04:53.485
<v Speaker 1>Yeah.

01:04:54.789 --> 01:04:57.589
<v Speaker 0>But I think it's just really cool the

01:04:57.589 --> 01:04:58.630
<v Speaker 0>way CueBlox

01:04:58.789 --> 01:05:00.150
<v Speaker 0>gets out your way and just lets you

01:05:00.150 --> 01:05:01.990
<v Speaker 0>manipulate the data in this way.

01:05:02.309 --> 01:05:03.270
<v Speaker 0>And the

01:05:04.069 --> 01:05:05.349
<v Speaker 0>way the render

01:05:05.829 --> 01:05:07.589
<v Speaker 0>the render sub command with the templates works

01:05:07.589 --> 01:05:07.990
<v Speaker 0>is just,

01:05:08.675 --> 01:05:10.115
<v Speaker 0>you know, it's so

01:05:10.435 --> 01:05:12.675
<v Speaker 0>simple and yet so powerful at the same

01:05:12.675 --> 01:05:14.195
<v Speaker 0>time. And I think that's just the sweet

01:05:14.195 --> 01:05:14.835
<v Speaker 0>spot.

01:05:15.635 --> 01:05:16.994
<v Speaker 0>I really love it. Yeah. And this this

01:05:16.994 --> 01:05:17.795
<v Speaker 1>repository,

01:05:17.795 --> 01:05:20.915
<v Speaker 1>this is the b k API repository under

01:05:20.915 --> 01:05:23.315
<v Speaker 1>GitHub, b kettleson. This one is

01:05:23.850 --> 01:05:24.650
<v Speaker 1>built specific

01:05:25.770 --> 01:05:27.450
<v Speaker 1>to deploy to Vercel.

01:05:27.690 --> 01:05:29.610
<v Speaker 1>So this one deploys

01:05:29.610 --> 01:05:31.930
<v Speaker 1>a Vercel serverless API

01:05:32.010 --> 01:05:32.810
<v Speaker 1>using,

01:05:33.770 --> 01:05:35.130
<v Speaker 1>the JavaScript

01:05:35.690 --> 01:05:36.170
<v Speaker 1>engines.

01:05:36.965 --> 01:05:38.885
<v Speaker 1>And let's look at that real quick. Here's

01:05:38.885 --> 01:05:39.765
<v Speaker 1>the API.

01:05:40.085 --> 01:05:43.125
<v Speaker 1>This uses that JSON GraphQL server we were

01:05:43.125 --> 01:05:44.805
<v Speaker 1>talking about just a bit earlier and then

01:05:44.805 --> 01:05:46.565
<v Speaker 1>JSON server. These are two

01:05:46.805 --> 01:05:48.165
<v Speaker 1>really generic

01:05:50.280 --> 01:05:51.960
<v Speaker 1>services that we found

01:05:52.520 --> 01:05:54.520
<v Speaker 1>just kinda screwing around on the Internet one

01:05:54.520 --> 01:05:56.920
<v Speaker 1>day, and JSON GraphQL

01:05:57.160 --> 01:06:00.280
<v Speaker 1>takes data that almost exactly happens to be

01:06:00.280 --> 01:06:02.280
<v Speaker 1>shaped like the data that we build

01:06:02.934 --> 01:06:03.974
<v Speaker 1>in blocks,

01:06:03.974 --> 01:06:06.454
<v Speaker 1>and it serves it as a GraphQL dataset

01:06:06.454 --> 01:06:08.535
<v Speaker 1>as long as it follows those same conventions

01:06:08.535 --> 01:06:10.695
<v Speaker 1>of using the underscore IDs

01:06:10.855 --> 01:06:12.375
<v Speaker 1>for relationals.

01:06:13.015 --> 01:06:15.015
<v Speaker 1>And then JSON server does the same thing

01:06:15.015 --> 01:06:15.974
<v Speaker 1>except with REST.

01:06:16.420 --> 01:06:17.060
<v Speaker 1>So

01:06:17.300 --> 01:06:17.940
<v Speaker 1>this is,

01:06:18.820 --> 01:06:21.380
<v Speaker 1>20 odd lines of code in JavaScript

01:06:21.540 --> 01:06:24.100
<v Speaker 1>that create a an express,

01:06:24.580 --> 01:06:25.540
<v Speaker 1>endpoint

01:06:25.780 --> 01:06:27.860
<v Speaker 1>with both REST and

01:06:28.100 --> 01:06:28.980
<v Speaker 1>GraphQL

01:06:29.465 --> 01:06:30.505
<v Speaker 1>and also

01:06:31.065 --> 01:06:32.265
<v Speaker 1>image handling

01:06:32.745 --> 01:06:33.705
<v Speaker 1>in Vercel.

01:06:34.185 --> 01:06:36.185
<v Speaker 1>So lots of examples of

01:06:37.225 --> 01:06:39.865
<v Speaker 1>very strongly opinionated ways to serve this data

01:06:39.865 --> 01:06:40.585
<v Speaker 1>in

01:06:41.145 --> 01:06:42.105
<v Speaker 1>very different ways,

01:06:43.569 --> 01:06:46.050
<v Speaker 1>but it's all the same tool underneath. And

01:06:46.050 --> 01:06:47.250
<v Speaker 1>that's that's really fun.

01:06:47.490 --> 01:06:48.450
<v Speaker 0>Yeah. Definitely.

01:06:50.130 --> 01:06:50.850
<v Speaker 0>Alright.

01:06:51.010 --> 01:06:52.690
<v Speaker 0>Is that everything we we want to look

01:06:52.690 --> 01:06:53.650
<v Speaker 0>at on your side?

01:06:53.890 --> 01:06:55.250
<v Speaker 0>Will I pop us back over into, like,

01:06:55.250 --> 01:06:56.609
<v Speaker 0>face mode? Or Sure.

01:06:58.815 --> 01:06:59.775
<v Speaker 0>There we go.

01:07:00.415 --> 01:07:00.815
<v Speaker 0>So,

01:07:01.455 --> 01:07:03.375
<v Speaker 0>I mean, we're just gonna we'll wrap this

01:07:03.375 --> 01:07:04.735
<v Speaker 0>up though, but I think

01:07:05.215 --> 01:07:06.975
<v Speaker 0>this has been a lot of fun. Like,

01:07:06.975 --> 01:07:10.175
<v Speaker 0>we haven't really spoken about CueBlox much, like,

01:07:10.175 --> 01:07:12.240
<v Speaker 0>publicly or on a stream. You know, we've

01:07:12.240 --> 01:07:14.080
<v Speaker 0>just been kind of iterating on it. What

01:07:14.080 --> 01:07:16.080
<v Speaker 0>I would like, you know, the audience that

01:07:16.080 --> 01:07:18.160
<v Speaker 0>are watching is to to play with it

01:07:18.160 --> 01:07:19.920
<v Speaker 0>and give it give us feedback. Like, if

01:07:19.920 --> 01:07:21.360
<v Speaker 0>it doesn't fit your use case, we'd love

01:07:21.360 --> 01:07:23.280
<v Speaker 0>to know why, and we're still iterating on

01:07:23.280 --> 01:07:25.040
<v Speaker 0>it a lot. We wanna add more features.

01:07:25.685 --> 01:07:28.244
<v Speaker 0>After what I've just seen from the plugins

01:07:28.244 --> 01:07:29.605
<v Speaker 0>that Brian's done, I think we're gonna be

01:07:29.605 --> 01:07:31.125
<v Speaker 0>adding a lot more plugins over the next

01:07:31.125 --> 01:07:33.685
<v Speaker 0>kinda weeks and months. So maybe we should

01:07:33.685 --> 01:07:35.285
<v Speaker 0>try and get together and just do this

01:07:35.285 --> 01:07:37.605
<v Speaker 0>regularly as an update to CueBlox, maybe every

01:07:37.605 --> 01:07:39.000
<v Speaker 0>other month or like that. But I think

01:07:39.080 --> 01:07:40.840
<v Speaker 1>That's a great idea. Yeah. Yeah. I've got

01:07:40.840 --> 01:07:41.640
<v Speaker 1>literally

01:07:41.640 --> 01:07:44.040
<v Speaker 1>a dozen plugins that I wanna build. I

01:07:44.040 --> 01:07:45.800
<v Speaker 1>mean, now that the plugin

01:07:45.800 --> 01:07:48.360
<v Speaker 1>engine is so easy to use, I I

01:07:48.680 --> 01:07:51.480
<v Speaker 1>can think of just so many different plugins

01:07:51.480 --> 01:07:55.325
<v Speaker 1>that I can add without polluting the Blocks

01:07:55.325 --> 01:07:57.325
<v Speaker 1>code base, and that makes me so happy.

01:07:57.645 --> 01:07:59.885
<v Speaker 0>Yeah. One of the ones I think you

01:07:59.885 --> 01:08:01.405
<v Speaker 0>were talking about, and I think I'm really

01:08:01.405 --> 01:08:02.925
<v Speaker 0>keen on, I was getting to work sooner

01:08:02.925 --> 01:08:04.925
<v Speaker 0>rather than later, is, like, you know, leveraging

01:08:04.925 --> 01:08:07.245
<v Speaker 0>all of these cloud databases that have, like,

01:08:07.245 --> 01:08:09.270
<v Speaker 0>a free tier. Like, know, being able to

01:08:09.270 --> 01:08:11.670
<v Speaker 0>run a blocked build and have that

01:08:12.310 --> 01:08:15.270
<v Speaker 0>first validate all my YAML, markdown, and JSON,

01:08:15.270 --> 01:08:17.189
<v Speaker 0>etcetera, but then store it at a cloud

01:08:17.189 --> 01:08:18.550
<v Speaker 0>database. And I don't need to worry about

01:08:18.550 --> 01:08:19.990
<v Speaker 0>the block server, and I maybe just get

01:08:19.990 --> 01:08:22.854
<v Speaker 0>access to the Contentful API or the FaunaDB

01:08:22.854 --> 01:08:24.774
<v Speaker 0>API or the DataStax,

01:08:24.774 --> 01:08:26.295
<v Speaker 0>AstroDB API.

01:08:26.375 --> 01:08:28.135
<v Speaker 0>It's just it's just there. Right? Like, I

01:08:28.135 --> 01:08:30.054
<v Speaker 0>think that's so many, you know, planet scale.

01:08:30.135 --> 01:08:33.335
<v Speaker 1>There's all of these different great cloud databases

01:08:33.335 --> 01:08:36.840
<v Speaker 1>that have free developer tiers that would easily

01:08:36.840 --> 01:08:39.479
<v Speaker 1>serve any traffic that my blog could could

01:08:39.479 --> 01:08:40.600
<v Speaker 1>send it.

01:08:41.000 --> 01:08:41.399
<v Speaker 1>And,

01:08:41.880 --> 01:08:43.960
<v Speaker 1>you know, these plug ins make it really

01:08:43.960 --> 01:08:45.960
<v Speaker 1>easy for us to build an adapter that

01:08:45.960 --> 01:08:48.920
<v Speaker 1>that synchronizes our data. In fact, this morning,

01:08:48.920 --> 01:08:49.560
<v Speaker 1>I saw

01:08:50.185 --> 01:08:51.225
<v Speaker 1>Supabase,

01:08:51.225 --> 01:08:52.984
<v Speaker 1>which is, yet another,

01:08:54.104 --> 01:08:55.465
<v Speaker 1>Firebase clone

01:08:55.705 --> 01:08:57.225
<v Speaker 1>that is hostable

01:08:57.305 --> 01:08:59.625
<v Speaker 1>both for them and you can self host

01:08:59.625 --> 01:09:02.505
<v Speaker 1>it. And that inspired me because it has

01:09:02.505 --> 01:09:03.625
<v Speaker 1>real time

01:09:04.239 --> 01:09:07.359
<v Speaker 1>eventing. So you can you can notify your

01:09:07.359 --> 01:09:09.920
<v Speaker 1>web clients when there's new data added and

01:09:09.920 --> 01:09:11.679
<v Speaker 1>that big kind of fun plug in to

01:09:11.679 --> 01:09:14.399
<v Speaker 1>build, sync my blocks data up to Supabase

01:09:14.399 --> 01:09:15.039
<v Speaker 1>and

01:09:15.359 --> 01:09:17.135
<v Speaker 1>and build my website so that when I

01:09:17.135 --> 01:09:18.975
<v Speaker 1>post a new blog post, it gets up

01:09:18.975 --> 01:09:20.655
<v Speaker 1>in your face and annoys you and tells

01:09:20.655 --> 01:09:22.095
<v Speaker 1>you that there's a new post that you

01:09:22.095 --> 01:09:23.375
<v Speaker 1>should be reading instead of the one that

01:09:23.375 --> 01:09:24.335
<v Speaker 1>you were reading.

01:09:25.615 --> 01:09:27.775
<v Speaker 0>Yeah. That's really interesting. Like, imagine we had

01:09:27.775 --> 01:09:31.055
<v Speaker 0>like a pre build step that checks what's

01:09:31.055 --> 01:09:32.335
<v Speaker 0>changed since last

01:09:32.670 --> 01:09:34.910
<v Speaker 0>build, like using the get history,

01:09:35.070 --> 01:09:36.750
<v Speaker 0>and then propagate that through to a post

01:09:36.750 --> 01:09:38.750
<v Speaker 0>step that actually fired off those

01:09:39.310 --> 01:09:41.710
<v Speaker 0>only publish those changes to, like, super base

01:09:41.710 --> 01:09:44.189
<v Speaker 0>or to FunnelDB, etcetera. I'm not sure how

01:09:44.189 --> 01:09:45.310
<v Speaker 0>that would work, but I think we could

01:09:45.310 --> 01:09:47.215
<v Speaker 0>make that work. I've got faith in you.

01:09:47.694 --> 01:09:48.975
<v Speaker 1>Well, I was gonna say maybe it's not

01:09:48.975 --> 01:09:50.895
<v Speaker 1>necessary though if we just upsert all of

01:09:50.895 --> 01:09:51.694
<v Speaker 1>the data.

01:09:52.255 --> 01:09:53.934
<v Speaker 0>I was thinking about deletes.

01:09:54.655 --> 01:09:56.335
<v Speaker 0>Oh, yeah. We need to work at that.

01:09:56.335 --> 01:09:58.175
<v Speaker 1>Good point. But we we for that our

01:09:58.175 --> 01:10:00.095
<v Speaker 0>next session, we'll we'll have that working. I'm

01:10:00.095 --> 01:10:01.880
<v Speaker 0>guaranteed about Yeah. We'll link that through.

01:10:03.320 --> 01:10:06.360
<v Speaker 0>Alright. Awesome. Well, I hope people are are

01:10:06.360 --> 01:10:08.280
<v Speaker 0>interested in CueBlox. I think you like what

01:10:08.280 --> 01:10:09.880
<v Speaker 0>you're seeing. Like I said, drop us comments.

01:10:09.880 --> 01:10:11.480
<v Speaker 0>We're both really active on Twitter. Both of

01:10:11.480 --> 01:10:13.239
<v Speaker 0>Twitter handles are on the screen, so reach

01:10:13.239 --> 01:10:14.440
<v Speaker 0>out to us if you need any help.

01:10:14.955 --> 01:10:16.955
<v Speaker 0>We're both in the Discord. You can ping

01:10:16.955 --> 01:10:19.034
<v Speaker 0>us there. Brian's got these fancy titles. I'm

01:10:19.034 --> 01:10:20.074
<v Speaker 0>gonna have to steal that. I don't know

01:10:20.074 --> 01:10:21.195
<v Speaker 0>how I'm gonna make that work, but I

01:10:21.195 --> 01:10:21.755
<v Speaker 0>want it.

01:10:22.395 --> 01:10:24.074
<v Speaker 0>Any last words, Brian, before I let you

01:10:24.074 --> 01:10:26.155
<v Speaker 0>go? No. Thanks for having me on. This

01:10:26.155 --> 01:10:28.810
<v Speaker 1>has been great, And, this is truly one

01:10:28.810 --> 01:10:30.410
<v Speaker 1>of the most fun projects that I've worked

01:10:30.410 --> 01:10:32.810
<v Speaker 1>on, in in forever. You know, we've we've

01:10:32.810 --> 01:10:34.650
<v Speaker 1>had such a great time iterating

01:10:34.970 --> 01:10:36.890
<v Speaker 1>slowly, throwing things away,

01:10:38.010 --> 01:10:40.170
<v Speaker 1>and the and the debate we've had about

01:10:40.170 --> 01:10:41.850
<v Speaker 1>how things should work has been

01:10:42.355 --> 01:10:45.315
<v Speaker 1>really educational, and and I'm proud of of

01:10:45.315 --> 01:10:47.395
<v Speaker 1>how this is coming out and how it's

01:10:47.395 --> 01:10:48.034
<v Speaker 1>evolved.

01:10:48.994 --> 01:10:50.914
<v Speaker 0>I couldn't agree more.

01:10:51.235 --> 01:10:53.074
<v Speaker 0>It has been. If if folks check

01:10:53.395 --> 01:10:54.514
<v Speaker 1>out CueBlox,

01:10:55.150 --> 01:10:57.870
<v Speaker 1>please do let us know what your pain

01:10:57.870 --> 01:10:59.870
<v Speaker 1>points are. We we tried to put a

01:10:59.870 --> 01:11:01.949
<v Speaker 1>lot of energy into the documentation,

01:11:01.950 --> 01:11:03.550
<v Speaker 1>but some of it might be outdated.

01:11:03.710 --> 01:11:05.230
<v Speaker 1>You know, if things don't make sense or

01:11:05.230 --> 01:11:07.230
<v Speaker 1>if you stumble somewhere, let us know where

01:11:07.230 --> 01:11:09.375
<v Speaker 1>so we can get those docs cleaned up

01:11:09.375 --> 01:11:11.135
<v Speaker 1>and make it easier for people to jump

01:11:11.135 --> 01:11:13.375
<v Speaker 1>in. You know, so much of this is

01:11:13.375 --> 01:11:15.534
<v Speaker 1>locked into what we intend

01:11:15.535 --> 01:11:18.175
<v Speaker 1>versus what we've written. And, we hate for

01:11:18.175 --> 01:11:20.095
<v Speaker 1>people to not be able to enjoy CueBlox

01:11:20.095 --> 01:11:20.815
<v Speaker 1>because

01:11:20.975 --> 01:11:22.655
<v Speaker 1>didn't spend enough time on docs.

01:11:24.190 --> 01:11:25.550
<v Speaker 0>Awesome. Well said.

01:11:26.110 --> 01:11:28.030
<v Speaker 0>Alright, Brian. Thank you for joining me. Have

01:11:28.030 --> 01:11:31.150
<v Speaker 0>a wonderful day. I'm sure and hopeful we

01:11:31.150 --> 01:11:33.070
<v Speaker 0>will do this again soon. Well, thanks again.

01:11:33.070 --> 01:11:34.909
<v Speaker 1>Thanks for having me. Bye all.

01:11:52.310 --> 01:11:54.550
<v Speaker 0>Thank you for watching Rawkode Live.
