WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: ed00621a-9303-4954-85fe-c8f21d555147
Created: 2025-04-29T22:12:02.955Z
Duration: 4706.033
Channels: 1

00:02:27.435 --> 00:02:29.275
<v Speaker 0>Hello and welcome.

00:02:29.675 --> 00:02:32.875
<v Speaker 0>Today's

00:02:31.530 --> 00:02:34.330
<v Speaker 0>today's episode, we're taking a look at Fleet

00:02:34.330 --> 00:02:36.330
<v Speaker 0>and k c s by Rancher Labs. You

00:02:36.330 --> 00:02:37.610
<v Speaker 0>can't laugh at me in the first ten

00:02:37.610 --> 00:02:39.370
<v Speaker 0>seconds of that. Sorry. I

00:02:40.410 --> 00:02:42.170
<v Speaker 1>was already abused by the intro and then

00:02:42.170 --> 00:02:44.090
<v Speaker 1>the error message appearing

00:02:44.490 --> 00:02:44.730
<v Speaker 1>there.

00:02:45.435 --> 00:02:45.995
<v Speaker 0>Yeah.

00:02:46.315 --> 00:02:47.675
<v Speaker 0>I I really like that when I first

00:02:47.675 --> 00:02:49.435
<v Speaker 0>did it and I'm kinda like, I'm getting

00:02:49.435 --> 00:02:50.635
<v Speaker 0>really bored of it, but I have seen

00:02:50.635 --> 00:02:53.355
<v Speaker 0>it every day many times. Anyway, we're joined

00:02:53.355 --> 00:02:55.755
<v Speaker 0>by Bastian today from Rancher. We're gonna be

00:02:55.755 --> 00:02:57.275
<v Speaker 0>taking a look at Fleet k three s.

00:02:57.275 --> 00:03:00.000
<v Speaker 0>We're gonna be spaying up Kubernetes clusters and

00:03:00.000 --> 00:03:01.520
<v Speaker 0>having a bit of fun and seeing what

00:03:01.520 --> 00:03:04.160
<v Speaker 0>these tools provide to this common workflow.

00:03:04.480 --> 00:03:06.000
<v Speaker 0>And hopefully, make all of our lives a

00:03:06.000 --> 00:03:06.880
<v Speaker 0>little bit easier.

00:03:07.440 --> 00:03:09.920
<v Speaker 0>So hello, Bastian. How are you? Very good.

00:03:09.920 --> 00:03:12.160
<v Speaker 1>And thanks for the invitation. It's great to

00:03:12.160 --> 00:03:14.955
<v Speaker 1>be here. Yeah. I'm really excited for today.

00:03:15.115 --> 00:03:17.995
<v Speaker 0>So before we pop over to Bastian,

00:03:18.474 --> 00:03:20.555
<v Speaker 0>I have had some issues with audio lately.

00:03:20.555 --> 00:03:22.315
<v Speaker 0>So if anyone's watching live and I can

00:03:22.315 --> 00:03:23.755
<v Speaker 0>see a few of you now, please just

00:03:23.755 --> 00:03:25.515
<v Speaker 0>comment and tell me if my my levels

00:03:25.515 --> 00:03:28.060
<v Speaker 0>are too low or too high. Because yesterday,

00:03:28.060 --> 00:03:30.060
<v Speaker 0>someone informed me my levels were too low,

00:03:30.380 --> 00:03:32.140
<v Speaker 0>an error in five minutes into the stream.

00:03:32.140 --> 00:03:34.060
<v Speaker 0>So let's not make that mistake again.

00:03:34.860 --> 00:03:37.340
<v Speaker 0>Now for now, what we're gonna do is,

00:03:37.340 --> 00:03:39.260
<v Speaker 0>Bastian, would you like to share your screen

00:03:39.260 --> 00:03:41.420
<v Speaker 0>and just give us a quick introduction to

00:03:41.420 --> 00:03:43.215
<v Speaker 0>the tools we're gonna be playing with today.

00:03:43.215 --> 00:03:44.015
<v Speaker 1>Certainly.

00:03:46.175 --> 00:03:47.455
<v Speaker 0>Awesome. Okay.

00:03:47.775 --> 00:03:49.535
<v Speaker 1>I can't see any you anymore. Am I

00:03:49.535 --> 00:03:51.775
<v Speaker 1>sharing now? You are. Your slides are up.

00:03:51.775 --> 00:03:53.775
<v Speaker 0>We're on the side. Perfect. Great.

00:03:54.495 --> 00:03:55.215
<v Speaker 1>So

00:03:55.375 --> 00:03:58.480
<v Speaker 1>what we wanna look at today is how

00:03:58.480 --> 00:04:02.240
<v Speaker 1>you can manage multiple Kubernetes clusters running everywhere

00:04:02.240 --> 00:04:03.840
<v Speaker 1>up to thousands of them

00:04:04.240 --> 00:04:06.400
<v Speaker 1>with k three s Rancher and the project

00:04:06.400 --> 00:04:08.320
<v Speaker 1>we called Fleet that is gonna be introduced

00:04:08.320 --> 00:04:10.400
<v Speaker 1>in Rancher two dot five, which is scheduled

00:04:10.400 --> 00:04:11.520
<v Speaker 1>to be released next week.

00:04:12.885 --> 00:04:15.125
<v Speaker 1>And just to kick off off kick us

00:04:15.125 --> 00:04:17.845
<v Speaker 1>off, I wanna quickly talk, like, five minutes

00:04:17.845 --> 00:04:19.845
<v Speaker 1>or so why you actually would want to

00:04:19.845 --> 00:04:21.925
<v Speaker 1>do this and how this all ties in

00:04:21.925 --> 00:04:22.565
<v Speaker 1>together.

00:04:23.525 --> 00:04:26.085
<v Speaker 1>One of the nice things about Kubernetes is

00:04:26.085 --> 00:04:28.650
<v Speaker 1>that it's a common compute platform that you

00:04:28.650 --> 00:04:30.889
<v Speaker 1>can use everywhere across any infrastructure.

00:04:31.610 --> 00:04:33.690
<v Speaker 1>So you cannot only use Kubernetes to run

00:04:33.690 --> 00:04:35.289
<v Speaker 1>it somewhere in the cloud or in your

00:04:35.289 --> 00:04:36.330
<v Speaker 1>data center,

00:04:36.650 --> 00:04:38.650
<v Speaker 1>like, with one, two, three, four clusters

00:04:39.095 --> 00:04:39.895
<v Speaker 1>to,

00:04:40.375 --> 00:04:42.695
<v Speaker 1>yeah, power your websites

00:04:42.775 --> 00:04:44.055
<v Speaker 1>and your APIs.

00:04:44.215 --> 00:04:46.535
<v Speaker 1>You can also use it anywhere else from

00:04:46.535 --> 00:04:49.655
<v Speaker 1>your development laptop to edge use cases where

00:04:49.655 --> 00:04:51.335
<v Speaker 1>you run Kubernetes in factories,

00:04:52.919 --> 00:04:53.640
<v Speaker 1>in

00:04:54.759 --> 00:04:55.480
<v Speaker 1>shops,

00:04:55.560 --> 00:04:56.200
<v Speaker 1>in

00:04:56.840 --> 00:04:57.880
<v Speaker 1>windmills,

00:04:57.880 --> 00:04:59.720
<v Speaker 1>in five g towers,

00:05:00.120 --> 00:05:03.240
<v Speaker 1>wherever you have something where software is running.

00:05:04.199 --> 00:05:06.919
<v Speaker 1>And as a developer or a DevOps person,

00:05:06.919 --> 00:05:09.275
<v Speaker 1>the huge benefit you have from that is

00:05:09.275 --> 00:05:12.235
<v Speaker 1>that across all these different infrastructures where you

00:05:12.235 --> 00:05:13.675
<v Speaker 1>wanna deploy applications

00:05:13.675 --> 00:05:16.475
<v Speaker 1>and software too, you have a common API

00:05:16.634 --> 00:05:18.955
<v Speaker 1>to orchestrate all these deployments. You have a

00:05:18.955 --> 00:05:22.360
<v Speaker 1>common API to care about backup and recovery,

00:05:22.360 --> 00:05:24.360
<v Speaker 1>auto scaling, networking,

00:05:24.440 --> 00:05:25.720
<v Speaker 1>service discovery,

00:05:25.960 --> 00:05:27.800
<v Speaker 1>role based access control,

00:05:27.800 --> 00:05:29.479
<v Speaker 1>low balancing, and so on.

00:05:29.960 --> 00:05:31.560
<v Speaker 1>And all the differences

00:05:31.639 --> 00:05:37.240
<v Speaker 1>of all these different environments and infrastructures are

00:05:35.335 --> 00:05:37.254
<v Speaker 1>evened out, and they'll all look the same

00:05:37.254 --> 00:05:37.975
<v Speaker 1>for you.

00:05:39.175 --> 00:05:41.735
<v Speaker 1>Still, from an operational point of view, you

00:05:41.735 --> 00:05:43.414
<v Speaker 1>still have the challenge that you actually have

00:05:43.414 --> 00:05:46.695
<v Speaker 1>to manage all these Kubernetes environments

00:05:46.775 --> 00:05:48.694
<v Speaker 1>on all these different infrastructures.

00:05:49.699 --> 00:05:50.340
<v Speaker 1>And

00:05:50.580 --> 00:05:51.220
<v Speaker 1>whoever

00:05:51.380 --> 00:05:53.620
<v Speaker 1>all of you who maybe tried to set

00:05:53.620 --> 00:05:55.300
<v Speaker 1>up Kubernetes on their own at some point

00:05:55.300 --> 00:05:57.460
<v Speaker 1>in time probably discovered

00:05:57.460 --> 00:05:59.380
<v Speaker 1>that it's kind of complex to do.

00:05:59.940 --> 00:06:03.585
<v Speaker 1>Kubernetes consists of multiple different micro services that

00:06:03.585 --> 00:06:06.065
<v Speaker 1>all talk with each other. You have to

00:06:06.305 --> 00:06:09.025
<v Speaker 1>manage then each the d historic mechanism

00:06:09.025 --> 00:06:11.745
<v Speaker 1>in a highly available way that also means

00:06:11.985 --> 00:06:13.905
<v Speaker 1>more than one instance. You have to care

00:06:13.905 --> 00:06:15.025
<v Speaker 1>about certificates

00:06:15.025 --> 00:06:16.545
<v Speaker 1>and networking

00:06:16.625 --> 00:06:18.145
<v Speaker 1>and persistent storage.

00:06:18.860 --> 00:06:21.420
<v Speaker 1>And then even just orchestrating all the different

00:06:21.420 --> 00:06:24.300
<v Speaker 1>components of Kubernetes and making sure that they

00:06:24.300 --> 00:06:26.540
<v Speaker 1>are configured in a consistent way and can

00:06:26.540 --> 00:06:29.020
<v Speaker 1>communicate with each other is challenging.

00:06:29.500 --> 00:06:30.700
<v Speaker 1>And then, of course, you also have to

00:06:30.700 --> 00:06:32.780
<v Speaker 1>upgrade Kubernetes at some point in time

00:06:33.664 --> 00:06:35.665
<v Speaker 1>that can even make it more complex.

00:06:36.785 --> 00:06:39.505
<v Speaker 1>To make this easier and especially

00:06:39.824 --> 00:06:40.544
<v Speaker 1>in

00:06:40.705 --> 00:06:43.264
<v Speaker 1>these use cases where you wanna have hundreds

00:06:43.264 --> 00:06:45.345
<v Speaker 1>or thousands of clusters on all your different

00:06:45.345 --> 00:06:46.145
<v Speaker 1>edge devices,

00:06:46.620 --> 00:06:49.740
<v Speaker 1>at Rancher, we created a Kubernetes distribution called

00:06:49.740 --> 00:06:50.540
<v Speaker 1>k three

00:06:51.740 --> 00:06:54.780
<v Speaker 1>It's basically a Kubernetes, and it's also completely

00:06:54.780 --> 00:06:56.140
<v Speaker 1>standard compliant.

00:06:56.140 --> 00:06:58.220
<v Speaker 1>It is certified to be a standard compliant

00:06:58.220 --> 00:06:59.020
<v Speaker 1>Kubernetes,

00:06:59.020 --> 00:07:01.660
<v Speaker 1>so everything that works with Kubernetes can run-in

00:07:01.660 --> 00:07:02.220
<v Speaker 1>k three s.

00:07:02.835 --> 00:07:04.675
<v Speaker 1>But the difference is that all the different

00:07:04.675 --> 00:07:07.475
<v Speaker 1>components are bundled together in a single binary.

00:07:08.355 --> 00:07:10.675
<v Speaker 1>That means all the Kubernetes microservice

00:07:10.755 --> 00:07:12.755
<v Speaker 1>the services are now one binary,

00:07:13.075 --> 00:07:15.555
<v Speaker 1>and it also includes either for a single

00:07:15.555 --> 00:07:18.470
<v Speaker 1>node use case, an embedded SQLite database for

00:07:18.470 --> 00:07:19.110
<v Speaker 1>storage,

00:07:19.350 --> 00:07:21.910
<v Speaker 1>or for an use case, an embedded ETCD

00:07:21.910 --> 00:07:22.630
<v Speaker 1>storage.

00:07:23.110 --> 00:07:26.310
<v Speaker 1>It also directly bundles a container runtime, so

00:07:26.310 --> 00:07:28.630
<v Speaker 1>you don't need to have docker installed somewhere

00:07:28.789 --> 00:07:31.375
<v Speaker 1>or container. It bundles a c and I

00:07:31.375 --> 00:07:34.895
<v Speaker 1>plug in, DNS service, ingress controller, everything you

00:07:34.895 --> 00:07:36.735
<v Speaker 1>need to directly get started.

00:07:37.775 --> 00:07:39.854
<v Speaker 1>And because it's also all bundled in one

00:07:39.854 --> 00:07:43.055
<v Speaker 1>binary, the whole memory footprint of running k

00:07:43.055 --> 00:07:45.500
<v Speaker 1>three s is a lot lower than when

00:07:45.500 --> 00:07:47.740
<v Speaker 1>you run all the single microservices.

00:07:47.980 --> 00:07:50.300
<v Speaker 1>So, usually, you can get by with less

00:07:50.300 --> 00:07:53.260
<v Speaker 1>than 512 megabytes of RAM for

00:07:54.060 --> 00:07:56.700
<v Speaker 1>server, k three s server, and with less

00:07:56.700 --> 00:07:58.860
<v Speaker 1>than 200 megabytes of RAM for a worker

00:07:58.860 --> 00:07:59.180
<v Speaker 1>agent.

00:08:00.015 --> 00:08:02.575
<v Speaker 1>And this also makes it a very good

00:08:02.575 --> 00:08:05.055
<v Speaker 1>tool to run-in edge scenarios

00:08:05.055 --> 00:08:07.855
<v Speaker 1>where not only you have tons of clusters,

00:08:07.935 --> 00:08:10.975
<v Speaker 1>but also these clusters are limited in computer

00:08:10.975 --> 00:08:12.175
<v Speaker 1>sources that you have available.

00:08:14.950 --> 00:08:17.990
<v Speaker 1>And, of course, being a single binary deployments

00:08:17.990 --> 00:08:20.550
<v Speaker 1>are also very fast and very easy.

00:08:22.230 --> 00:08:25.510
<v Speaker 1>So that can solve actually running Kubernetes

00:08:25.510 --> 00:08:28.295
<v Speaker 1>on all of these edge devices

00:08:28.375 --> 00:08:29.575
<v Speaker 1>and all of these

00:08:30.615 --> 00:08:31.175
<v Speaker 1>small

00:08:32.135 --> 00:08:34.295
<v Speaker 1>micro devices. Ah, a good point is also

00:08:34.295 --> 00:08:36.615
<v Speaker 1>k three s also runs on ARM. So

00:08:36.615 --> 00:08:38.375
<v Speaker 1>if you have a Raspberry Pi, it also

00:08:38.375 --> 00:08:39.335
<v Speaker 1>works perfectly.

00:08:40.455 --> 00:08:43.309
<v Speaker 1>But still, you have thousands of clusters, and

00:08:43.309 --> 00:08:45.070
<v Speaker 1>somehow you have to deploy them, you have

00:08:45.070 --> 00:08:46.670
<v Speaker 1>to provision them, you have to do backups

00:08:46.670 --> 00:08:48.670
<v Speaker 1>and recovery of them, you have to monitor

00:08:48.670 --> 00:08:49.310
<v Speaker 1>them,

00:08:49.870 --> 00:08:51.070
<v Speaker 1>and also

00:08:51.310 --> 00:08:53.790
<v Speaker 1>you have to roll out authentication policies and

00:08:53.790 --> 00:08:54.110
<v Speaker 1>so on.

00:08:56.125 --> 00:08:57.725
<v Speaker 1>Of course, you can write your own Terraform

00:08:57.725 --> 00:08:59.805
<v Speaker 1>scripts, Ansible playbooks,

00:08:59.805 --> 00:09:02.205
<v Speaker 1>puppet modules, or whatever for that.

00:09:03.085 --> 00:09:05.885
<v Speaker 1>Or and that where Rancher comes in,

00:09:06.365 --> 00:09:08.605
<v Speaker 1>you can use the Rancher management server for

00:09:08.605 --> 00:09:08.845
<v Speaker 1>this.

00:09:10.530 --> 00:09:13.250
<v Speaker 1>With Rancher, you have a central management server

00:09:13.250 --> 00:09:15.730
<v Speaker 1>from which you can provision and manage

00:09:16.130 --> 00:09:19.410
<v Speaker 1>up to thousands of Kubernetes clusters on all

00:09:19.410 --> 00:09:21.250
<v Speaker 1>the different environments and infrastructures.

00:09:21.905 --> 00:09:23.585
<v Speaker 1>And then you have a central place to

00:09:23.585 --> 00:09:25.905
<v Speaker 1>not only provision them and upgrade them, but

00:09:25.905 --> 00:09:27.665
<v Speaker 1>also to set up authentication,

00:09:27.745 --> 00:09:29.025
<v Speaker 1>security policies,

00:09:29.265 --> 00:09:30.225
<v Speaker 1>monitoring,

00:09:30.305 --> 00:09:31.265
<v Speaker 1>and so on.

00:09:32.545 --> 00:09:33.105
<v Speaker 1>So

00:09:33.585 --> 00:09:36.065
<v Speaker 1>so just like a rough graph,

00:09:36.590 --> 00:09:38.350
<v Speaker 1>what we are gonna set up in the

00:09:38.350 --> 00:09:41.070
<v Speaker 1>next hour or so is we are gonna

00:09:41.070 --> 00:09:42.190
<v Speaker 1>set up Rancher.

00:09:42.510 --> 00:09:44.670
<v Speaker 1>Rancher is actually also just a workload that

00:09:44.670 --> 00:09:45.870
<v Speaker 1>runs in Kubernetes.

00:09:46.750 --> 00:09:48.910
<v Speaker 1>And from there, we are gonna create multiple

00:09:48.910 --> 00:09:51.385
<v Speaker 1>clusters. And, of course, they are all on

00:09:51.385 --> 00:09:53.065
<v Speaker 1>some VMs, but they could be running on

00:09:53.065 --> 00:09:54.665
<v Speaker 1>any kind of edge infrastructure

00:09:54.985 --> 00:09:57.225
<v Speaker 1>with different sizings and different

00:09:57.545 --> 00:10:00.425
<v Speaker 1>size of nodes, join them to Rancher, and

00:10:00.425 --> 00:10:02.584
<v Speaker 1>then we can manage all these clusters from

00:10:02.584 --> 00:10:02.825
<v Speaker 1>there.

00:10:04.569 --> 00:10:07.449
<v Speaker 1>So that solves managing clusters,

00:10:08.410 --> 00:10:10.970
<v Speaker 1>but still we have another challenge.

00:10:11.449 --> 00:10:13.930
<v Speaker 1>We also if we have thousands of clusters,

00:10:13.930 --> 00:10:16.089
<v Speaker 1>it's actually not trivial to deploy our our

00:10:16.089 --> 00:10:18.945
<v Speaker 1>our workloads or applications or software to these

00:10:18.945 --> 00:10:19.745
<v Speaker 1>clusters.

00:10:20.625 --> 00:10:22.145
<v Speaker 1>Of course, we can write script for that

00:10:22.305 --> 00:10:24.465
<v Speaker 1>scripts for that, and it's

00:10:24.705 --> 00:10:26.545
<v Speaker 1>a lot easier because we have a common

00:10:26.545 --> 00:10:28.545
<v Speaker 1>API to do these deployments.

00:10:29.025 --> 00:10:32.065
<v Speaker 1>But if you're imagining a script that deploys

00:10:32.065 --> 00:10:33.745
<v Speaker 1>to 1,000 Kubernetes clusters,

00:10:34.110 --> 00:10:35.870
<v Speaker 1>first of all, it probably will take quite

00:10:35.870 --> 00:10:38.110
<v Speaker 1>a long time. You have a scalability issue.

00:10:39.230 --> 00:10:41.230
<v Speaker 1>Then you also may have a connectivity and

00:10:41.230 --> 00:10:43.790
<v Speaker 1>fault tolerance issue because not every one of

00:10:43.790 --> 00:10:46.350
<v Speaker 1>your edge clusters on a windmill, for example,

00:10:46.430 --> 00:10:48.350
<v Speaker 1>will be available when you wanna deploy something.

00:10:49.005 --> 00:10:50.685
<v Speaker 1>You have to then care for that and

00:10:50.685 --> 00:10:52.365
<v Speaker 1>handle all these different problems.

00:10:52.925 --> 00:10:53.485
<v Speaker 1>And

00:10:53.725 --> 00:10:56.605
<v Speaker 1>we thought, okay. Since edge and these edge

00:10:56.605 --> 00:10:58.525
<v Speaker 1>use cases are very important, a lot of

00:10:58.525 --> 00:11:01.005
<v Speaker 1>our customers are going into this direction. Let's

00:11:01.005 --> 00:11:03.950
<v Speaker 1>make this easy as well. And there is

00:11:04.029 --> 00:11:05.390
<v Speaker 1>their fleet comes in.

00:11:05.870 --> 00:11:07.070
<v Speaker 1>Fleet is,

00:11:07.870 --> 00:11:10.029
<v Speaker 1>first of all, a standalone project, but it's

00:11:10.029 --> 00:11:12.270
<v Speaker 1>gonna be fully integrated into Rancher two dot

00:11:12.270 --> 00:11:12.830
<v Speaker 1>five.

00:11:13.230 --> 00:11:16.190
<v Speaker 1>And what it allows is to do multi

00:11:16.190 --> 00:11:19.075
<v Speaker 1>cluster GitOps deployment on scale.

00:11:19.555 --> 00:11:21.875
<v Speaker 1>The way it will work is you have

00:11:21.875 --> 00:11:24.435
<v Speaker 1>here down here all your clusters that you

00:11:24.435 --> 00:11:25.875
<v Speaker 1>attach to Rancher.

00:11:26.115 --> 00:11:28.115
<v Speaker 1>So Rancher would be this year, which also

00:11:28.115 --> 00:11:29.475
<v Speaker 1>directly includes Fleet.

00:11:29.795 --> 00:11:32.270
<v Speaker 1>You can organize your clusters in groups and

00:11:32.270 --> 00:11:34.750
<v Speaker 1>use labels to tag them, and then you

00:11:34.750 --> 00:11:35.310
<v Speaker 1>can

00:11:35.950 --> 00:11:37.070
<v Speaker 1>tell

00:11:37.070 --> 00:11:40.190
<v Speaker 1>with a GitOps approach, hey, Rancher and Fleet.

00:11:40.190 --> 00:11:42.590
<v Speaker 1>Here are my applications, and these applications are

00:11:42.590 --> 00:11:43.870
<v Speaker 1>called bundles

00:11:44.030 --> 00:11:44.590
<v Speaker 1>in Fleet.

00:11:45.285 --> 00:11:47.605
<v Speaker 1>And I wanna deploy this bundle with my

00:11:47.605 --> 00:11:50.725
<v Speaker 1>applications and helm charts or Kubernetes YAML files

00:11:50.725 --> 00:11:52.165
<v Speaker 1>or customized files

00:11:52.325 --> 00:11:54.325
<v Speaker 1>to these groups of clusters.

00:11:55.285 --> 00:11:57.685
<v Speaker 1>And you just do one API call to

00:11:58.005 --> 00:12:00.730
<v Speaker 1>set this up. And then these clusters down

00:12:00.730 --> 00:12:03.210
<v Speaker 1>here, they will pull the information asynchronously

00:12:03.210 --> 00:12:04.730
<v Speaker 1>and update themselves.

00:12:04.810 --> 00:12:06.730
<v Speaker 1>So you have a more scalable and more

00:12:06.730 --> 00:12:08.410
<v Speaker 1>fault tolerant solution.

00:12:08.570 --> 00:12:10.170
<v Speaker 1>And if one of the clusters currently is

00:12:10.170 --> 00:12:12.250
<v Speaker 1>offline, as soon as it comes online, it

00:12:12.250 --> 00:12:14.490
<v Speaker 1>will connect to the manager again and pull

00:12:14.490 --> 00:12:16.625
<v Speaker 1>down the new information what it should be

00:12:16.625 --> 00:12:17.185
<v Speaker 1>running.

00:12:19.345 --> 00:12:21.105
<v Speaker 1>So, yeah, that's

00:12:21.105 --> 00:12:23.904
<v Speaker 1>was my short introduction. Let's maybe then get

00:12:23.904 --> 00:12:26.225
<v Speaker 1>into actually setting this up and doing this.

00:12:27.080 --> 00:12:29.320
<v Speaker 1>Or do you have questions already so far?

00:12:31.160 --> 00:12:34.280
<v Speaker 0>Okay. Let's see what we have. So we

00:12:34.280 --> 00:12:37.320
<v Speaker 0>have a Hello Bastion from Chandrika.

00:12:37.400 --> 00:12:38.440
<v Speaker 0>We

00:12:39.240 --> 00:12:41.400
<v Speaker 0>have a nice wave from Siam. Nice to

00:12:41.400 --> 00:12:42.440
<v Speaker 0>see you again, Siam.

00:12:43.654 --> 00:12:45.894
<v Speaker 1>Very good. Who also has a little compliment

00:12:45.894 --> 00:12:47.654
<v Speaker 0>there for you. Fleet is awesome. He has

00:12:47.654 --> 00:12:49.255
<v Speaker 1>been Also, we're looking forward to get some

00:12:49.255 --> 00:12:50.214
<v Speaker 1>feedback then

00:12:50.535 --> 00:12:51.654
<v Speaker 1>about it. Yeah.

00:12:54.774 --> 00:12:55.175
<v Speaker 0>Okay.

00:12:56.210 --> 00:12:58.850
<v Speaker 0>Oh, and I think is that a question?

00:13:02.530 --> 00:13:04.130
<v Speaker 0>Alright. Let me just pop that up. So

00:13:04.130 --> 00:13:05.890
<v Speaker 0>they're saying that on a single Raspberry Pi

00:13:05.890 --> 00:13:07.570
<v Speaker 0>at home, they're running Docker and Cortina. They

00:13:07.570 --> 00:13:09.250
<v Speaker 0>have seen k three s, but wasn't sure

00:13:09.250 --> 00:13:10.770
<v Speaker 0>whether there were enough benefits

00:13:10.985 --> 00:13:12.425
<v Speaker 0>to run on a device. It depends on

00:13:12.425 --> 00:13:14.985
<v Speaker 1>how much RAM you have. So Kubernetes and

00:13:14.985 --> 00:13:17.144
<v Speaker 1>also k three s needs some of it.

00:13:18.345 --> 00:13:19.704
<v Speaker 1>You have probably a benefit if you have

00:13:19.704 --> 00:13:21.384
<v Speaker 1>multiple of the Raspberry Pi's. If you have

00:13:21.384 --> 00:13:21.945
<v Speaker 1>just one,

00:13:23.320 --> 00:13:24.839
<v Speaker 1>then you can also just do docker run

00:13:24.839 --> 00:13:27.080
<v Speaker 1>and Kubernetes doesn't give you that much benefit

00:13:27.399 --> 00:13:29.560
<v Speaker 1>besides playing around with it and maybe getting

00:13:29.560 --> 00:13:31.320
<v Speaker 1>used to Kubernetes.

00:13:31.320 --> 00:13:31.960
<v Speaker 1>But

00:13:32.520 --> 00:13:34.040
<v Speaker 1>it also depends on the Raspberry Pi. If

00:13:34.040 --> 00:13:37.035
<v Speaker 1>it's a one gig gram Raspberry Pi, it's

00:13:37.115 --> 00:13:39.035
<v Speaker 1>probably still very limited what you can do,

00:13:39.035 --> 00:13:40.555
<v Speaker 1>and you waste too much waste too much

00:13:40.555 --> 00:13:42.394
<v Speaker 1>memory for it. If you if it's a

00:13:42.394 --> 00:13:44.315
<v Speaker 1>larger four gig one or so, then it's

00:13:44.315 --> 00:13:44.795
<v Speaker 1>different.

00:13:45.435 --> 00:13:47.355
<v Speaker 0>Yeah. I think that's that's good advice across

00:13:47.355 --> 00:13:48.875
<v Speaker 0>the board. If you've got a single node,

00:13:48.875 --> 00:13:51.250
<v Speaker 0>you probably don't need to be running Kubernetes

00:13:51.250 --> 00:13:53.010
<v Speaker 0>or anything like that. The difference is if

00:13:53.010 --> 00:13:55.010
<v Speaker 1>you have 1,000 of these single node clusters,

00:13:55.010 --> 00:13:56.530
<v Speaker 1>then it could be interesting again.

00:13:58.290 --> 00:14:00.370
<v Speaker 0>Yeah. That's a good point. Yeah. I keep,

00:14:00.370 --> 00:14:02.610
<v Speaker 0>you know, Rancher at the management platform for

00:14:02.610 --> 00:14:05.464
<v Speaker 0>all those clusters. It's cool. So let me

00:14:05.464 --> 00:14:07.464
<v Speaker 0>share my screen now and show you where

00:14:07.464 --> 00:14:09.385
<v Speaker 0>we're at. So this is the the hands

00:14:09.385 --> 00:14:11.225
<v Speaker 0>on portion there. So in order to do

00:14:11.225 --> 00:14:12.665
<v Speaker 0>that, we have to provision a little bit

00:14:12.665 --> 00:14:13.385
<v Speaker 0>of hardware.

00:14:14.105 --> 00:14:17.385
<v Speaker 0>So through packet, I have provisioned as Rancher

00:14:17.385 --> 00:14:19.650
<v Speaker 0>one, two, three, four, and five. These are

00:14:19.650 --> 00:14:21.970
<v Speaker 0>all Ubuntu 20 o four machines.

00:14:23.010 --> 00:14:23.570
<v Speaker 0>All

00:14:24.210 --> 00:14:26.930
<v Speaker 0>x 86 m d 60 fours. Good to

00:14:26.930 --> 00:14:27.410
<v Speaker 0>go.

00:14:27.890 --> 00:14:29.810
<v Speaker 0>Now depending on time constraints and how we

00:14:29.810 --> 00:14:31.250
<v Speaker 0>can run today, I've added in a couple

00:14:31.250 --> 00:14:32.770
<v Speaker 0>of extra machines that we can maybe try

00:14:32.770 --> 00:14:34.625
<v Speaker 0>and take a look at. I added a

00:14:34.625 --> 00:14:37.185
<v Speaker 0>CentOS eight box and I have added an

00:14:37.185 --> 00:14:39.745
<v Speaker 0>ARM machine as well. So we can maybe

00:14:39.745 --> 00:14:41.825
<v Speaker 0>see that management playing across

00:14:42.065 --> 00:14:43.825
<v Speaker 0>the disparate clusters.

00:14:45.105 --> 00:14:46.465
<v Speaker 0>So the first step

00:14:46.790 --> 00:14:47.430
<v Speaker 0>is

00:14:47.910 --> 00:14:49.029
<v Speaker 0>installation,

00:14:49.029 --> 00:14:51.189
<v Speaker 0>I guess. Should I just pick the first

00:14:51.189 --> 00:14:52.389
<v Speaker 0>box SSHN

00:14:52.389 --> 00:14:54.470
<v Speaker 0>and then get started, or would you recommend

00:14:54.470 --> 00:14:56.949
<v Speaker 1>something else? Yeah. Let's just pick the Rancher

00:14:56.949 --> 00:14:59.350
<v Speaker 1>one box and install a small k three

00:14:59.350 --> 00:15:01.189
<v Speaker 1>s cluster on it and install Rancher on

00:15:01.189 --> 00:15:01.269
<v Speaker 1>it.

00:15:02.495 --> 00:15:04.175
<v Speaker 1>This is, of course, not a highly available

00:15:04.175 --> 00:15:06.335
<v Speaker 1>installation. Normally, you would need, like, three nodes

00:15:06.335 --> 00:15:08.095
<v Speaker 1>for this, but we are just playing around.

00:15:08.175 --> 00:15:10.255
<v Speaker 1>And the process of setting this up highly

00:15:10.255 --> 00:15:12.575
<v Speaker 1>available is very similar. What you mean playing

00:15:12.575 --> 00:15:14.575
<v Speaker 0>around? That's that's his prod for me. That's

00:15:14.655 --> 00:15:15.215
<v Speaker 0>okay.

00:15:15.775 --> 00:15:17.375
<v Speaker 0>This cluster is stuck in a row forever.

00:15:17.750 --> 00:15:18.550
<v Speaker 0>Okay.

00:15:19.029 --> 00:15:21.350
<v Speaker 0>Alright. I am on Rancher one. I do

00:15:21.350 --> 00:15:23.829
<v Speaker 0>have some documentation here as well. So this

00:15:23.829 --> 00:15:26.230
<v Speaker 0>is the k c s docs. Is this

00:15:26.230 --> 00:15:27.029
<v Speaker 0>where I start?

00:15:27.670 --> 00:15:29.670
<v Speaker 1>Yeah. You can either start with this one

00:15:29.670 --> 00:15:32.230
<v Speaker 1>or the installing Rancher one. It has the

00:15:32.230 --> 00:15:33.675
<v Speaker 1>same commands to set up a k three

00:15:33.675 --> 00:15:34.475
<v Speaker 1>s cluster.

00:15:34.955 --> 00:15:35.995
<v Speaker 0>And that's

00:15:36.315 --> 00:15:38.715
<v Speaker 0>This one. This one here. Okay. So we

00:15:38.715 --> 00:15:39.915
<v Speaker 1>can probably skip

00:15:40.154 --> 00:15:41.035
<v Speaker 1>the first

00:15:41.435 --> 00:15:43.275
<v Speaker 1>step on the left side. There are, like,

00:15:43.755 --> 00:15:45.515
<v Speaker 1>sub pages on that. So we set up

00:15:45.515 --> 00:15:47.275
<v Speaker 1>already the infrastructure. So the first thing we

00:15:47.275 --> 00:15:48.875
<v Speaker 1>do now is set up a Kubernetes cluster.

00:15:50.009 --> 00:15:51.930
<v Speaker 0>And this is a single node installation we're

00:15:51.930 --> 00:15:53.930
<v Speaker 0>doing. Correct? Yes.

00:15:54.170 --> 00:15:56.250
<v Speaker 1>And then we already have to adapt the

00:15:56.250 --> 00:15:58.250
<v Speaker 1>first command a bit because we are doing

00:15:58.250 --> 00:16:01.449
<v Speaker 1>a single node installation with just the embedded

00:16:01.449 --> 00:16:02.490
<v Speaker 1>SQLite database.

00:16:02.995 --> 00:16:04.355
<v Speaker 1>We don't need to

00:16:05.475 --> 00:16:08.035
<v Speaker 1>point it to a MySQL database for storage.

00:16:08.195 --> 00:16:09.955
<v Speaker 1>So one of the nice things also about

00:16:09.955 --> 00:16:11.955
<v Speaker 1>k three s is that you can point

00:16:11.955 --> 00:16:13.795
<v Speaker 1>it not only to the etcd

00:16:13.795 --> 00:16:15.715
<v Speaker 1>or to

00:16:14.940 --> 00:16:16.780
<v Speaker 1>to an embedded ETCD or to an embedded

00:16:16.780 --> 00:16:19.980
<v Speaker 1>SQLite, but also to external SQL databases for

00:16:19.980 --> 00:16:20.620
<v Speaker 1>storage.

00:16:21.100 --> 00:16:23.100
<v Speaker 1>Especially, a cloud provider that could be interesting.

00:16:23.100 --> 00:16:25.100
<v Speaker 1>Instead of having to run your own ETCD,

00:16:25.100 --> 00:16:27.900
<v Speaker 1>you can just fire up an Aurora or

00:16:27.900 --> 00:16:29.820
<v Speaker 1>something like that and point then k three

00:16:29.820 --> 00:16:30.700
<v Speaker 1>s to it when you set.

00:16:31.894 --> 00:16:34.454
<v Speaker 0>Nice. I like that. That flexibility to pick

00:16:34.454 --> 00:16:36.214
<v Speaker 0>the the back end store is pretty cool.

00:16:36.214 --> 00:16:37.815
<v Speaker 0>So you're saying all I need is this

00:16:37.815 --> 00:16:40.535
<v Speaker 0>curl s h server and then we're maybe

00:16:40.535 --> 00:16:41.975
<v Speaker 0>gonna add something to that?

00:16:43.735 --> 00:16:46.774
<v Speaker 1>For now, I would say we use the

00:16:46.110 --> 00:16:47.070
<v Speaker 1>default

00:16:47.070 --> 00:16:48.670
<v Speaker 1>version so we can

00:16:50.269 --> 00:16:52.750
<v Speaker 1>yeah. That should be fine.

00:16:54.670 --> 00:16:55.310
<v Speaker 1>Alright.

00:16:55.870 --> 00:16:58.350
<v Speaker 1>Yeah. So we removed the data sorting. So

00:16:58.350 --> 00:16:59.950
<v Speaker 1>that means that it's using by default an

00:16:59.950 --> 00:17:00.990
<v Speaker 1>embedded SQLite.

00:17:01.495 --> 00:17:04.614
<v Speaker 1>And what it's doing now, it's basically downloading

00:17:05.095 --> 00:17:07.575
<v Speaker 1>what the script is doing. It's seeing, okay,

00:17:07.655 --> 00:17:10.135
<v Speaker 1>which operating system are you running on, downloading

00:17:10.135 --> 00:17:12.054
<v Speaker 1>the correct binary. In this case,

00:17:12.534 --> 00:17:14.534
<v Speaker 1>Linux m d 64

00:17:14.775 --> 00:17:15.255
<v Speaker 1>binary,

00:17:16.060 --> 00:17:18.460
<v Speaker 1>then setting up some swim links for kubectl

00:17:18.460 --> 00:17:19.579
<v Speaker 1>and so on.

00:17:20.300 --> 00:17:23.099
<v Speaker 1>It creates a script to uninstall case regs

00:17:23.099 --> 00:17:24.940
<v Speaker 1>again, in this case, because we're in a

00:17:24.940 --> 00:17:26.700
<v Speaker 1>bundle sets of a system d service.

00:17:28.784 --> 00:17:31.424
<v Speaker 0>Hey. Cool. I mean Yep. So that's

00:17:31.825 --> 00:17:33.745
<v Speaker 1>what was this? Like, twenty seconds, thirty seconds

00:17:33.745 --> 00:17:35.424
<v Speaker 1>to set up a Kubernetes cluster?

00:17:35.505 --> 00:17:37.024
<v Speaker 0>Yeah. I thought we were gonna have to,

00:17:37.024 --> 00:17:38.544
<v Speaker 0>like, you know, make a cup of tea,

00:17:38.544 --> 00:17:41.024
<v Speaker 0>have a better chat back and forward. Right

00:17:41.024 --> 00:17:43.240
<v Speaker 0>away, I've got, like you said, under thirty

00:17:43.240 --> 00:17:45.320
<v Speaker 0>seconds, I'm typing cube control get nodes, and

00:17:45.320 --> 00:17:47.240
<v Speaker 0>it's telling me that my cluster is healthy.

00:17:47.240 --> 00:17:49.000
<v Speaker 0>That's pretty cool. I like that.

00:17:49.640 --> 00:17:51.880
<v Speaker 1>Maybe you can run h top. We can

00:17:51.880 --> 00:17:53.160
<v Speaker 1>have a look at bit of the memory

00:17:53.160 --> 00:17:54.440
<v Speaker 1>consumption. That could be interesting.

00:17:56.385 --> 00:17:57.185
<v Speaker 0>We're

00:17:57.185 --> 00:17:58.945
<v Speaker 0>barely tackling this thing.

00:17:59.265 --> 00:17:59.905
<v Speaker 1>Yeah.

00:18:00.385 --> 00:18:00.625
<v Speaker 1>So

00:18:01.185 --> 00:18:03.985
<v Speaker 0>We got 1.3 gig of memory of 62

00:18:03.985 --> 00:18:06.625
<v Speaker 0>being used. Maybe I over provisioned this cluster

00:18:06.625 --> 00:18:08.545
<v Speaker 0>a little bit. There's probably also bit of

00:18:08.545 --> 00:18:10.865
<v Speaker 1>bit of other stuff running on this. Yeah.

00:18:11.160 --> 00:18:13.559
<v Speaker 1>Well, this is really beefy box. Okay. Nice.

00:18:15.640 --> 00:18:18.040
<v Speaker 1>Yeah. We can we can maybe also have

00:18:18.040 --> 00:18:19.160
<v Speaker 1>a look at the

00:18:19.800 --> 00:18:21.160
<v Speaker 1>pots that are running in.

00:18:25.365 --> 00:18:27.365
<v Speaker 1>Yeah. Maybe in all namespaces,

00:18:27.365 --> 00:18:29.525
<v Speaker 1>and there you can see it already installs,

00:18:29.525 --> 00:18:30.325
<v Speaker 1>coordinates,

00:18:30.325 --> 00:18:33.125
<v Speaker 1>and traffic as an English controller, metrics server,

00:18:34.245 --> 00:18:37.365
<v Speaker 1>some local pass provision for local storage volume.

00:18:37.685 --> 00:18:39.090
<v Speaker 1>You, of course, you can also switch this

00:18:39.090 --> 00:18:40.610
<v Speaker 1>all out. If you don't like traffic, you

00:18:40.610 --> 00:18:42.770
<v Speaker 1>can say on installation, disable traffic, and then

00:18:42.770 --> 00:18:44.610
<v Speaker 1>roll your own English controller. It's a bit

00:18:44.610 --> 00:18:47.170
<v Speaker 1>for convenience that it's there. And is that

00:18:47.170 --> 00:18:49.169
<v Speaker 0>true for the CNI implementation,

00:18:49.170 --> 00:18:50.785
<v Speaker 0>or do I just get flannel and

00:18:51.425 --> 00:18:53.025
<v Speaker 1>You get by default, you get flannel, but

00:18:53.025 --> 00:18:54.705
<v Speaker 1>you can also say, I want don't don't

00:18:54.705 --> 00:18:56.545
<v Speaker 1>wanna use flannel and then install your own

00:18:56.545 --> 00:18:57.664
<v Speaker 1>CNI plugin

00:18:57.905 --> 00:19:00.145
<v Speaker 0>to install anything else. Because in the end,

00:19:00.145 --> 00:19:01.265
<v Speaker 1>it is standard Kubernetes.

00:19:02.350 --> 00:19:04.509
<v Speaker 0>Okay. Nice. So we have

00:19:04.990 --> 00:19:07.549
<v Speaker 0>we have our first k c s cluster.

00:19:07.870 --> 00:19:08.589
<v Speaker 1>Okay.

00:19:09.070 --> 00:19:12.109
<v Speaker 1>Then what we can use this one for

00:19:12.429 --> 00:19:14.990
<v Speaker 1>is then to yeah. We have k three

00:19:14.990 --> 00:19:15.470
<v Speaker 1>s running.

00:19:16.975 --> 00:19:20.255
<v Speaker 0>So just out of curiosity, why is this

00:19:20.255 --> 00:19:23.375
<v Speaker 0>prefix, this k c s? Kubectl is not

00:19:23.375 --> 00:19:25.934
<v Speaker 1>actually not installed. It's also kubectl is also

00:19:25.934 --> 00:19:27.534
<v Speaker 1>bundled in k three s in the binary,

00:19:27.534 --> 00:19:28.894
<v Speaker 1>and that's just like a

00:19:29.375 --> 00:19:31.840
<v Speaker 1>some link for this. Alright. So if I

00:19:31.840 --> 00:19:34.320
<v Speaker 0>run should be a symlink to

00:19:35.520 --> 00:19:37.039
<v Speaker 1>to the k three s binary.

00:19:37.600 --> 00:19:40.000
<v Speaker 0>Alright. Cool. Okay. So So and you can

00:19:40.000 --> 00:19:41.360
<v Speaker 1>also say k three s k three s

00:19:41.360 --> 00:19:42.400
<v Speaker 1>three s, and that will be the same

00:19:42.400 --> 00:19:42.640
<v Speaker 1>thing.

00:19:46.684 --> 00:19:48.844
<v Speaker 0>Always like to run the command. Okay.

00:19:49.325 --> 00:19:51.565
<v Speaker 0>Alright. Okay. So it's all embedded in a

00:19:51.565 --> 00:19:53.565
<v Speaker 0>single binary. Yep. And then the

00:19:53.885 --> 00:19:55.885
<v Speaker 0>cubes the cube control I actually have on

00:19:55.885 --> 00:19:57.965
<v Speaker 0>my machine is really just a wrapper or

00:19:57.965 --> 00:20:00.000
<v Speaker 0>something around this thing or link to it.

00:20:00.000 --> 00:20:01.840
<v Speaker 1>You can also use any of your own

00:20:01.840 --> 00:20:03.600
<v Speaker 1>cube procedures just like to make it easier

00:20:03.600 --> 00:20:05.680
<v Speaker 1>to use. Yeah. That makes sense to me.

00:20:05.680 --> 00:20:07.600
<v Speaker 0>So is there a next step then to

00:20:07.600 --> 00:20:09.120
<v Speaker 0>to install Rancher?

00:20:10.080 --> 00:20:12.160
<v Speaker 1>Yes. So you can see the next one

00:20:12.160 --> 00:20:13.360
<v Speaker 1>would be this

00:20:13.680 --> 00:20:14.320
<v Speaker 1>this

00:20:14.635 --> 00:20:17.195
<v Speaker 1>location where it actually wrote the cube config.

00:20:17.434 --> 00:20:19.914
<v Speaker 1>You could either download this

00:20:20.155 --> 00:20:22.475
<v Speaker 1>or we can use just directly use cube

00:20:22.475 --> 00:20:23.355
<v Speaker 1>CTL

00:20:23.755 --> 00:20:24.875
<v Speaker 1>on this box

00:20:25.035 --> 00:20:25.915
<v Speaker 1>however you want.

00:20:27.750 --> 00:20:28.630
<v Speaker 1>Susan?

00:20:28.630 --> 00:20:30.470
<v Speaker 0>This is a cube config? So I'm not

00:20:30.230 --> 00:20:32.150
<v Speaker 1>No. This is just a normal cube config.

00:20:32.150 --> 00:20:35.030
<v Speaker 1>Yeah. Yeah. Maybe don't show the total certificate

00:20:35.030 --> 00:20:36.950
<v Speaker 1>in there. Yeah. Yeah.

00:20:37.350 --> 00:20:39.750
<v Speaker 0>Alright. So let's get like this. Yeah. So

00:20:39.750 --> 00:20:41.905
<v Speaker 1>maybe let's use this box tool just because

00:20:41.905 --> 00:20:43.665
<v Speaker 1>we don't do we're not gonna use much

00:20:43.665 --> 00:20:45.745
<v Speaker 1>cube CTL stuff on the in this cluster

00:20:45.745 --> 00:20:46.465
<v Speaker 1>anyways.

00:20:47.105 --> 00:20:48.945
<v Speaker 1>So the next step would be then to

00:20:48.945 --> 00:20:50.065
<v Speaker 1>install Rancher.

00:20:51.105 --> 00:20:52.065
<v Speaker 0>Alright. Next.

00:20:53.740 --> 00:20:54.700
<v Speaker 0>Let's see.

00:20:55.820 --> 00:20:58.700
<v Speaker 1>And Rancher is used to install Helm, so

00:20:58.700 --> 00:21:00.620
<v Speaker 1>we probably need Helm need to install Helm

00:21:00.620 --> 00:21:02.539
<v Speaker 1>on this box. If you haven't

00:21:02.860 --> 00:21:04.860
<v Speaker 1>you can, I guess, use it use Snap

00:21:04.860 --> 00:21:05.900
<v Speaker 1>also to install it?

00:21:08.985 --> 00:21:10.985
<v Speaker 0>Okay. Let me just check. Yeah. We're not

00:21:10.985 --> 00:21:13.225
<v Speaker 0>gonna have Helm. Do I have Snap?

00:21:13.865 --> 00:21:16.505
<v Speaker 0>Nope. Let's just grab the Helm. Okay. And

00:21:16.505 --> 00:21:18.265
<v Speaker 1>then we have to it's just download the

00:21:18.265 --> 00:21:18.985
<v Speaker 1>binary, I guess.

00:21:20.740 --> 00:21:22.740
<v Speaker 0>I'm sure there's a curl bash here. I

00:21:22.740 --> 00:21:24.659
<v Speaker 0>can just yeah. There we go. Yeah.

00:21:30.340 --> 00:21:31.460
<v Speaker 0>X.

00:21:31.460 --> 00:21:33.380
<v Speaker 0>Get help. Get help. Okay.

00:21:35.725 --> 00:21:37.965
<v Speaker 0>So what we're saying is we can add

00:21:37.965 --> 00:21:39.404
<v Speaker 0>the Rancher

00:21:39.404 --> 00:21:40.844
<v Speaker 0>Helm repository,

00:21:41.004 --> 00:21:43.004
<v Speaker 0>and then we've got

00:21:43.485 --> 00:21:44.764
<v Speaker 0>oh, we need a namespace.

00:21:47.770 --> 00:21:48.570
<v Speaker 0>Got it?

00:21:49.210 --> 00:21:51.769
<v Speaker 1>Okay. Now we have to make one decision

00:21:51.929 --> 00:21:53.929
<v Speaker 1>because Rancher is

00:21:53.929 --> 00:21:55.450
<v Speaker 1>a sensitive workload

00:21:55.610 --> 00:21:58.170
<v Speaker 1>because you can manage Kubernetes clusters through it.

00:21:58.170 --> 00:22:00.330
<v Speaker 1>So you need a TLS certificate.

00:22:01.355 --> 00:22:03.195
<v Speaker 1>There are three options. Either

00:22:03.915 --> 00:22:06.315
<v Speaker 1>you provide your own certificate in a Kubernetes

00:22:06.315 --> 00:22:08.235
<v Speaker 1>secret. If you have your own CA or

00:22:08.235 --> 00:22:10.155
<v Speaker 1>you bought an expensive certificate, you can use

00:22:10.155 --> 00:22:10.715
<v Speaker 1>that.

00:22:10.955 --> 00:22:13.195
<v Speaker 1>We could use let's encrypt for it, or

00:22:13.195 --> 00:22:15.035
<v Speaker 1>we can just say, let's make it easy

00:22:15.035 --> 00:22:16.620
<v Speaker 1>and let Rancher

00:22:16.620 --> 00:22:17.340
<v Speaker 1>generate

00:22:18.460 --> 00:22:19.740
<v Speaker 1>a self signed certificate.

00:22:20.540 --> 00:22:22.780
<v Speaker 1>And for this for both let's encrypt and

00:22:22.780 --> 00:22:25.900
<v Speaker 1>self signed certificate, Rancher uses cert manager. So

00:22:25.900 --> 00:22:27.660
<v Speaker 1>we would need to use in source cert

00:22:27.660 --> 00:22:27.980
<v Speaker 1>manager.

00:22:28.665 --> 00:22:29.705
<v Speaker 0>Alright. So

00:22:30.825 --> 00:22:33.305
<v Speaker 0>that's going, create the names. I can just

00:22:33.305 --> 00:22:34.985
<v Speaker 0>copy all of the comments. So

00:22:35.305 --> 00:22:35.865
<v Speaker 0>I

00:22:36.905 --> 00:22:38.905
<v Speaker 1>think, yeah, it should be copyable.

00:22:38.905 --> 00:22:40.825
<v Speaker 0>Yeah. Yeah. It'll be it'll be fine. Okay.

00:22:42.580 --> 00:22:44.259
<v Speaker 0>Is that the last

00:22:44.340 --> 00:22:44.979
<v Speaker 0>Yeah.

00:22:45.700 --> 00:22:47.299
<v Speaker 1>We have to want do one thing. Of

00:22:47.299 --> 00:22:49.139
<v Speaker 1>course, the Helm binary

00:22:49.220 --> 00:22:50.499
<v Speaker 1>doesn't understand

00:22:51.860 --> 00:22:52.499
<v Speaker 1>the

00:22:54.179 --> 00:22:56.715
<v Speaker 1>the this symlink to k three s cube

00:22:56.715 --> 00:22:58.315
<v Speaker 1>config, so you have to export the cube

00:22:58.315 --> 00:22:58.954
<v Speaker 1>config.

00:23:00.475 --> 00:23:04.154
<v Speaker 0>Okay. So that's the export cube config equals

00:23:04.235 --> 00:23:06.394
<v Speaker 0>slash Rancher?

00:23:07.115 --> 00:23:10.075
<v Speaker 1>No. Yeah. ETC Rancher Case3SCase3SYamo.

00:23:10.250 --> 00:23:10.890
<v Speaker 1>Yeah.

00:23:11.290 --> 00:23:13.290
<v Speaker 1>And then also the Helm CLI

00:23:14.490 --> 00:23:15.530
<v Speaker 1>knows now.

00:23:17.370 --> 00:23:18.330
<v Speaker 0>Perfect. Okay.

00:23:18.650 --> 00:23:20.650
<v Speaker 1>So I think we have to wait now

00:23:20.650 --> 00:23:22.890
<v Speaker 1>until swap manager has started because it has

00:23:22.890 --> 00:23:23.690
<v Speaker 1>this nice webhook.

00:23:26.275 --> 00:23:27.715
<v Speaker 1>Okay. We don't have

00:23:28.355 --> 00:23:28.995
<v Speaker 1>k.

00:23:30.515 --> 00:23:32.675
<v Speaker 1>I mean usually have locally. It's not, of

00:23:32.675 --> 00:23:34.515
<v Speaker 1>course, you don't have this on VM. Yep.

00:23:34.515 --> 00:23:37.075
<v Speaker 1>Exactly. Already there. Yep. I can either make

00:23:37.075 --> 00:23:39.460
<v Speaker 0>that table 14,000 times over the next fifteen

00:23:39.460 --> 00:23:41.220
<v Speaker 0>minutes or whatever or just alias it now.

00:23:41.220 --> 00:23:42.100
<v Speaker 1>So Yep.

00:23:43.300 --> 00:23:45.060
<v Speaker 1>Yeah. Why I said we have to wait

00:23:45.060 --> 00:23:47.540
<v Speaker 1>is because this webhook needs to be started.

00:23:47.780 --> 00:23:50.420
<v Speaker 1>Otherwise, the creation of the certificate will fail

00:23:50.420 --> 00:23:52.660
<v Speaker 1>because Kubernetes will directly try to

00:23:54.385 --> 00:23:57.345
<v Speaker 1>call this webhook wherever a certificate is created,

00:23:57.345 --> 00:23:59.505
<v Speaker 1>and the Rancher Helm chart will directly create

00:23:59.505 --> 00:24:00.385
<v Speaker 1>a certificate.

00:24:00.705 --> 00:24:01.105
<v Speaker 1>Okay.

00:24:03.745 --> 00:24:06.545
<v Speaker 1>So next is then we have to install

00:24:06.545 --> 00:24:07.265
<v Speaker 1>Rancher.

00:24:07.519 --> 00:24:09.759
<v Speaker 1>And, basically, that's the command, but we have

00:24:09.759 --> 00:24:11.840
<v Speaker 1>to modify it a bit because we want

00:24:11.840 --> 00:24:12.399
<v Speaker 1>to

00:24:12.960 --> 00:24:14.159
<v Speaker 1>install the

00:24:14.320 --> 00:24:15.199
<v Speaker 1>newest

00:24:15.279 --> 00:24:17.359
<v Speaker 1>two dot five release candidate

00:24:17.440 --> 00:24:18.159
<v Speaker 1>to it.

00:24:18.799 --> 00:24:20.960
<v Speaker 1>So maybe if you Yep. Go to text

00:24:20.960 --> 00:24:22.159
<v Speaker 1>editor somewhere,

00:24:22.320 --> 00:24:23.360
<v Speaker 1>that makes it probably easiest.

00:24:25.175 --> 00:24:26.934
<v Speaker 0>Hey. Let's just quickly Perfect.

00:24:29.015 --> 00:24:30.135
<v Speaker 0>I'm assuming

00:24:30.535 --> 00:24:32.455
<v Speaker 0>I just copy this and change the number.

00:24:32.455 --> 00:24:34.135
<v Speaker 1>Yep. No? Yep. Correct.

00:24:34.695 --> 00:24:36.055
<v Speaker 0>I like it when things are intuitive.

00:24:37.530 --> 00:24:41.850
<v Speaker 1>So the newest one will be 250DashRC3.

00:24:42.410 --> 00:24:44.410
<v Speaker 1>And let's hope that RC 3 will work.

00:24:44.410 --> 00:24:46.410
<v Speaker 1>I have only tested r C 2 R

00:24:46.410 --> 00:24:47.690
<v Speaker 1>C 2 yesterday.

00:24:47.930 --> 00:24:49.690
<v Speaker 1>And the second thing is we have to

00:24:49.690 --> 00:24:51.050
<v Speaker 1>change the host name. Yeah.

00:24:52.695 --> 00:24:54.054
<v Speaker 1>And since

00:24:54.215 --> 00:24:55.575
<v Speaker 1>probably we

00:24:55.975 --> 00:24:57.255
<v Speaker 1>yeah. It would be a bit too much

00:24:57.255 --> 00:24:59.575
<v Speaker 1>to create now DNS entry. We could use

00:24:59.575 --> 00:25:01.815
<v Speaker 1>this zip.io magic DNS.

00:25:02.215 --> 00:25:02.855
<v Speaker 1>Do you know that?

00:25:04.230 --> 00:25:07.110
<v Speaker 0>Is that the IP address followed by

00:25:07.350 --> 00:25:08.070
<v Speaker 0>this?

00:25:09.590 --> 00:25:10.309
<v Speaker 1>Yeah. Correct.

00:25:11.430 --> 00:25:11.990
<v Speaker 1>So

00:25:12.630 --> 00:25:15.750
<v Speaker 0>Oh, I think actually from Basecamp, the service,

00:25:16.310 --> 00:25:17.590
<v Speaker 1>and you

00:25:17.825 --> 00:25:20.304
<v Speaker 1>that basically will resolve everything

00:25:21.505 --> 00:25:24.145
<v Speaker 1>to this IP address. And maybe add Rancher

00:25:24.145 --> 00:25:26.384
<v Speaker 1>in front of it, like rancher. And then

00:25:27.585 --> 00:25:28.225
<v Speaker 1>because

00:25:28.865 --> 00:25:30.945
<v Speaker 1>we may wanna have more than one.

00:25:32.060 --> 00:25:34.220
<v Speaker 0>That's great. You'll actually we're already getting the

00:25:34.220 --> 00:25:36.700
<v Speaker 0>traffic for a four page. Because yeah. Yeah.

00:25:36.700 --> 00:25:38.780
<v Speaker 1>Because English controller is there, and the default

00:25:38.940 --> 00:25:40.780
<v Speaker 1>by default, the case is English controller just

00:25:40.780 --> 00:25:42.380
<v Speaker 1>listens on port eighty and four four three

00:25:42.380 --> 00:25:43.260
<v Speaker 1>on the host network.

00:25:44.625 --> 00:25:47.265
<v Speaker 0>Okay. So what was your last comment there?

00:25:47.265 --> 00:25:48.705
<v Speaker 0>I've been putting do you think Let's maybe

00:25:48.705 --> 00:25:51.505
<v Speaker 1>do Rancher. And then the IP address just

00:25:51.505 --> 00:25:53.184
<v Speaker 1>to have, like, a nicer URL.

00:25:55.825 --> 00:25:56.145
<v Speaker 1>Yep.

00:25:56.659 --> 00:25:59.539
<v Speaker 1>Happy with that? That should be yeah. Looks

00:25:59.539 --> 00:26:00.179
<v Speaker 1>good.

00:26:01.380 --> 00:26:03.460
<v Speaker 1>If not, we can just fix

00:26:03.460 --> 00:26:04.419
<v Speaker 1>it and change.

00:26:06.740 --> 00:26:07.059
<v Speaker 1>Okay.

00:26:10.355 --> 00:26:10.995
<v Speaker 1>So

00:26:11.475 --> 00:26:14.435
<v Speaker 1>it's it's now starting, of course, three pots

00:26:14.435 --> 00:26:16.755
<v Speaker 1>because that's the default. Well, it doesn't matter.

00:26:16.755 --> 00:26:18.115
<v Speaker 1>They don't need some. We have a very

00:26:18.115 --> 00:26:19.075
<v Speaker 1>busy machine.

00:26:19.955 --> 00:26:21.955
<v Speaker 1>Otherwise, we could have set the replicas to

00:26:21.955 --> 00:26:23.155
<v Speaker 1>one or so in

00:26:23.715 --> 00:26:24.835
<v Speaker 1>this

00:26:26.000 --> 00:26:27.599
<v Speaker 1>one note installation.

00:26:28.480 --> 00:26:30.239
<v Speaker 0>So when this installs,

00:26:30.399 --> 00:26:33.360
<v Speaker 0>I'm assuming that we get some ingress set

00:26:33.360 --> 00:26:35.919
<v Speaker 0>up Yep. That's gonna make this resolve to

00:26:35.919 --> 00:26:37.200
<v Speaker 0>the the Rancher UI.

00:26:37.825 --> 00:26:38.625
<v Speaker 1>Correct.

00:26:38.705 --> 00:26:39.505
<v Speaker 1>So

00:26:39.665 --> 00:26:40.545
<v Speaker 1>it will

00:26:42.065 --> 00:26:43.424
<v Speaker 1>it will directly

00:26:46.625 --> 00:26:48.465
<v Speaker 1>one Rancher port is up and running.

00:26:49.105 --> 00:26:50.865
<v Speaker 1>And, yeah, the Rancher Helm chart will directly

00:26:50.865 --> 00:26:52.945
<v Speaker 1>set up an English resource as well as

00:26:52.945 --> 00:26:55.159
<v Speaker 1>the cert manager certificate

00:26:55.160 --> 00:26:57.320
<v Speaker 1>to get a self signed certificate for the

00:26:57.320 --> 00:27:00.280
<v Speaker 1>source. Is there a authentication by default, or

00:27:00.280 --> 00:27:01.960
<v Speaker 0>have I just given people access to a

00:27:01.960 --> 00:27:03.000
<v Speaker 0>Rancher UI?

00:27:03.560 --> 00:27:05.000
<v Speaker 1>No. There's authentication by default.

00:27:07.184 --> 00:27:08.705
<v Speaker 1>But you have to set up the set

00:27:08.705 --> 00:27:10.225
<v Speaker 1>up the admin password first.

00:27:10.385 --> 00:27:11.825
<v Speaker 1>One is faster

00:27:12.465 --> 00:27:14.065
<v Speaker 1>and set up one already.

00:27:15.585 --> 00:27:17.345
<v Speaker 1>We can but you can also reset the

00:27:17.345 --> 00:27:18.705
<v Speaker 1>admin password then.

00:27:18.945 --> 00:27:19.184
<v Speaker 1>Yeah.

00:27:20.920 --> 00:27:21.800
<v Speaker 0>First.

00:27:21.800 --> 00:27:24.200
<v Speaker 1>Okay. And we also gonna

00:27:24.680 --> 00:27:25.720
<v Speaker 1>use the

00:27:26.200 --> 00:27:28.280
<v Speaker 1>multiple cluster management thing

00:27:28.680 --> 00:27:30.600
<v Speaker 1>because we wanna manage multiple clusters.

00:27:32.475 --> 00:27:33.274
<v Speaker 1>Great.

00:27:33.275 --> 00:27:34.155
<v Speaker 1>And

00:27:34.155 --> 00:27:36.634
<v Speaker 1>we can just save this.

00:27:36.795 --> 00:27:38.155
<v Speaker 1>That can be useful if you have a

00:27:38.155 --> 00:27:40.155
<v Speaker 1>reverse proxy in front, it may not may

00:27:40.155 --> 00:27:41.994
<v Speaker 1>be able to detect the correct setting.

00:27:42.235 --> 00:27:44.875
<v Speaker 1>And we have a Rancher installation up and

00:27:44.875 --> 00:27:45.115
<v Speaker 1>running.

00:27:46.540 --> 00:27:47.179
<v Speaker 0>Awesome.

00:27:48.060 --> 00:27:50.380
<v Speaker 1>Yep. 2Dot5RC3.

00:27:50.780 --> 00:27:53.100
<v Speaker 1>The local cluster that is already in there

00:27:53.100 --> 00:27:54.299
<v Speaker 1>is the

00:27:54.540 --> 00:27:57.100
<v Speaker 1>cluster where Rancher is running in. So this

00:27:57.100 --> 00:27:59.820
<v Speaker 1>is also, by default, directly available. We could

00:27:59.820 --> 00:28:02.155
<v Speaker 1>also hide this if we don't want to

00:28:03.195 --> 00:28:04.635
<v Speaker 1>want users to see it.

00:28:05.115 --> 00:28:07.275
<v Speaker 1>It is a good practice to have Rancher

00:28:07.275 --> 00:28:09.035
<v Speaker 1>running in a single cluster just on its

00:28:09.035 --> 00:28:11.434
<v Speaker 1>own, just to separate the management

00:28:12.075 --> 00:28:13.195
<v Speaker 1>tool Rancher

00:28:13.195 --> 00:28:15.275
<v Speaker 1>as a control plane from

00:28:15.435 --> 00:28:17.890
<v Speaker 1>where you are running your workloads in in

00:28:17.890 --> 00:28:19.409
<v Speaker 1>different Kubernetes clusters

00:28:19.730 --> 00:28:22.770
<v Speaker 1>so that your workloads are not refer influencing

00:28:22.770 --> 00:28:24.690
<v Speaker 1>Rancher too much and that Rancher is not

00:28:24.690 --> 00:28:26.529
<v Speaker 1>influencing your workloads more importantly.

00:28:28.530 --> 00:28:29.169
<v Speaker 0>Okay.

00:28:29.810 --> 00:28:32.210
<v Speaker 0>So I'm liking this, a nice visual representation

00:28:32.210 --> 00:28:34.554
<v Speaker 0>of of my clusters and my individual cluster.

00:28:34.554 --> 00:28:36.955
<v Speaker 0>We just have another quick question there from

00:28:36.955 --> 00:28:40.075
<v Speaker 0>from Siam who's saying multiple management option is

00:28:40.075 --> 00:28:41.674
<v Speaker 0>not there in r c two. Is that

00:28:41.674 --> 00:28:42.234
<v Speaker 0>correct?

00:28:43.035 --> 00:28:44.950
<v Speaker 1>It's still there. I think it's just in

00:28:44.950 --> 00:28:47.190
<v Speaker 1>r c two. For some reason, someone removed

00:28:47.190 --> 00:28:48.950
<v Speaker 1>the that you can choose it when you

00:28:48.950 --> 00:28:50.470
<v Speaker 1>install it, and you directly go to the

00:28:50.470 --> 00:28:51.750
<v Speaker 1>multi management setup.

00:28:52.230 --> 00:28:53.750
<v Speaker 1>And you could not switch to the just

00:28:53.750 --> 00:28:55.910
<v Speaker 1>a single cluster management, which is new in

00:28:55.910 --> 00:28:56.790
<v Speaker 1>Rancher two five.

00:28:58.304 --> 00:29:00.465
<v Speaker 0>Awesome. But the multi cluster management is actually

00:29:00.465 --> 00:29:02.225
<v Speaker 1>what you see in Rancher two four already

00:29:02.225 --> 00:29:04.065
<v Speaker 1>or two three or two two. That should

00:29:04.304 --> 00:29:06.065
<v Speaker 1>this is what you're seeing now. This is

00:29:06.065 --> 00:29:06.864
<v Speaker 1>more new.

00:29:07.184 --> 00:29:09.960
<v Speaker 1>And what you saw before is then what

00:29:10.040 --> 00:29:12.279
<v Speaker 1>existing Rancher users should be familiar with.

00:29:13.480 --> 00:29:15.320
<v Speaker 0>Okay. So just to recap, I mean, there's

00:29:15.320 --> 00:29:17.400
<v Speaker 0>there's a lot that happened with that element

00:29:17.400 --> 00:29:18.759
<v Speaker 0>still there. We

00:29:19.640 --> 00:29:21.720
<v Speaker 0>have deployed the Rancher.

00:29:22.440 --> 00:29:23.559
<v Speaker 0>I mean, it's

00:29:24.475 --> 00:29:26.155
<v Speaker 0>is it just a UI? Rancher is just

00:29:26.155 --> 00:29:27.914
<v Speaker 0>a UI that allows me to manage,

00:29:28.715 --> 00:29:31.914
<v Speaker 0>integrate, explore my customers. There's no other components

00:29:31.914 --> 00:29:33.755
<v Speaker 0>to it. Is that have I got to

00:29:33.755 --> 00:29:35.515
<v Speaker 0>understand it correct? Yeah. It's a UI and

00:29:35.515 --> 00:29:37.914
<v Speaker 1>API and kind of like an operator, you

00:29:37.914 --> 00:29:38.235
<v Speaker 1>would say.

00:29:38.990 --> 00:29:42.270
<v Speaker 0>Okay. So Rancher did operators before operators were

00:29:42.270 --> 00:29:42.830
<v Speaker 1>cool.

00:29:44.110 --> 00:29:44.910
<v Speaker 0>Nice.

00:29:44.990 --> 00:29:46.190
<v Speaker 0>Okay.

00:29:46.190 --> 00:29:48.669
<v Speaker 0>So this is the cluster explorer.

00:29:49.470 --> 00:29:51.950
<v Speaker 0>I mean, besides just taking a look at

00:29:51.950 --> 00:29:54.625
<v Speaker 0>pods, jobs, all the other Kubernetes resource, Is

00:29:54.625 --> 00:29:55.424
<v Speaker 0>there anything

00:29:55.825 --> 00:29:57.985
<v Speaker 0>that particularly cool or important that you wanna

00:29:57.985 --> 00:29:59.664
<v Speaker 0>cover on that before we move on to

00:29:59.664 --> 00:30:02.065
<v Speaker 0>the Maybe go back to the cluster manager.

00:30:03.905 --> 00:30:06.304
<v Speaker 1>Upper upper right. Oh, there we go. Yeah.

00:30:06.304 --> 00:30:08.544
<v Speaker 1>So where you can see all your the

00:30:08.544 --> 00:30:11.200
<v Speaker 1>multiple clusters. And if you go back to

00:30:11.200 --> 00:30:13.679
<v Speaker 1>on the left upper upper left where low

00:30:13.760 --> 00:30:15.600
<v Speaker 1>where is local to global,

00:30:17.200 --> 00:30:19.360
<v Speaker 1>you can see that you can add clusters

00:30:19.360 --> 00:30:21.039
<v Speaker 1>there. Maybe if you click on it on

00:30:21.039 --> 00:30:23.575
<v Speaker 1>the upper right side, you can now then

00:30:23.575 --> 00:30:26.054
<v Speaker 1>now start to add clusters on any kind

00:30:26.054 --> 00:30:27.014
<v Speaker 1>of infrastructure.

00:30:27.495 --> 00:30:30.615
<v Speaker 1>And the cloud providers you see there are

00:30:30.615 --> 00:30:32.534
<v Speaker 1>just the ones that that are activated. It's

00:30:32.534 --> 00:30:34.054
<v Speaker 1>a plug in system. You can even add

00:30:34.054 --> 00:30:34.534
<v Speaker 1>more to it.

00:30:35.530 --> 00:30:37.289
<v Speaker 1>You can register

00:30:37.450 --> 00:30:39.770
<v Speaker 1>all the cloud provided managed solutions,

00:30:40.250 --> 00:30:42.809
<v Speaker 1>or you can install a new Kubernetes cluster

00:30:42.890 --> 00:30:45.130
<v Speaker 1>on existing node or just import an existing

00:30:45.130 --> 00:30:46.330
<v Speaker 1>Kubernetes cluster.

00:30:46.570 --> 00:30:48.890
<v Speaker 1>Directly, you've I'm not feeling the the packet

00:30:48.890 --> 00:30:49.930
<v Speaker 0>love here, Bastian.

00:30:51.535 --> 00:30:53.135
<v Speaker 1>In the end, it's Docker machine. So it's

00:30:53.135 --> 00:30:55.215
<v Speaker 1>also not something that we completely invented, and

00:30:55.215 --> 00:30:56.655
<v Speaker 1>I think there is a Packet Docker machine

00:30:56.655 --> 00:30:58.975
<v Speaker 1>driver. Is a Packet Docker machine driver. You

00:30:58.975 --> 00:30:59.695
<v Speaker 1>wanna edit?

00:31:00.175 --> 00:31:01.695
<v Speaker 0>Yeah. Yeah. I'm gonna get that. I'll work

00:31:01.695 --> 00:31:03.099
<v Speaker 0>on that next week for sure.

00:31:03.659 --> 00:31:06.620
<v Speaker 1>I think one of the things is for

00:31:06.620 --> 00:31:08.940
<v Speaker 1>all the supported ones, the usually, you also

00:31:08.940 --> 00:31:10.460
<v Speaker 1>have, like, a nice UI then.

00:31:10.700 --> 00:31:11.419
<v Speaker 1>If you

00:31:14.059 --> 00:31:15.659
<v Speaker 1>if you just use a plain Docker machine

00:31:15.659 --> 00:31:17.419
<v Speaker 1>driver, you probably just have input boxes in

00:31:17.419 --> 00:31:19.235
<v Speaker 1>the UI and not, like, drop downs or

00:31:19.235 --> 00:31:20.035
<v Speaker 1>stuff like that.

00:31:20.435 --> 00:31:21.475
<v Speaker 0>Okay. Nice.

00:31:21.715 --> 00:31:22.675
<v Speaker 1>Also, what

00:31:23.235 --> 00:31:25.635
<v Speaker 1>interesting there is that under if you click

00:31:25.635 --> 00:31:27.555
<v Speaker 1>on security in the top box

00:31:27.795 --> 00:31:29.955
<v Speaker 1>Yep. Yeah, and then authentication,

00:31:32.110 --> 00:31:33.789
<v Speaker 1>You can see that you can

00:31:34.110 --> 00:31:36.270
<v Speaker 1>configure all kinds of enterprise

00:31:36.270 --> 00:31:39.310
<v Speaker 1>authentication systems, some are based ones, active directory,

00:31:39.310 --> 00:31:40.590
<v Speaker 1>l dub, you name it.

00:31:40.910 --> 00:31:42.350
<v Speaker 1>And then you can get all your users

00:31:42.350 --> 00:31:44.605
<v Speaker 1>and groups imported for there so that these

00:31:44.605 --> 00:31:46.845
<v Speaker 1>users and groups can authenticate at Rancher.

00:31:47.005 --> 00:31:48.685
<v Speaker 1>But not only at Rancher, but also on

00:31:48.685 --> 00:31:50.524
<v Speaker 1>all connected Kubernetes clusters.

00:31:50.525 --> 00:31:52.605
<v Speaker 1>And then you can set up directly

00:31:52.605 --> 00:31:54.125
<v Speaker 1>centrally in Rancher,

00:31:54.685 --> 00:31:55.325
<v Speaker 1>granuly

00:31:55.610 --> 00:31:58.010
<v Speaker 1>all the roles that you wanna give people

00:31:58.010 --> 00:32:00.330
<v Speaker 1>globally in Rancher, but also within one cluster.

00:32:00.330 --> 00:32:01.770
<v Speaker 1>And these are then gonna be rolled out

00:32:01.770 --> 00:32:04.490
<v Speaker 1>as standard Kubernetes role based access control to

00:32:04.490 --> 00:32:05.610
<v Speaker 1>all attached clusters.

00:32:05.930 --> 00:32:08.250
<v Speaker 0>So is this managing the deployment of decks

00:32:08.225 --> 00:32:10.625
<v Speaker 0>across my Kubernetes cluster, or is it its

00:32:10.625 --> 00:32:11.664
<v Speaker 0>own mechanisms?

00:32:11.665 --> 00:32:12.304
<v Speaker 1>It's

00:32:12.785 --> 00:32:14.225
<v Speaker 1>it's own mechanism.

00:32:14.705 --> 00:32:16.385
<v Speaker 1>So in the end, every user will get

00:32:16.385 --> 00:32:18.785
<v Speaker 1>a token, a dedicated token. This token was

00:32:18.785 --> 00:32:21.025
<v Speaker 1>synchronized in every Kubernetes cluster,

00:32:21.825 --> 00:32:22.305
<v Speaker 1>and

00:32:22.870 --> 00:32:25.270
<v Speaker 1>it also can expire and everything. So it's

00:32:25.270 --> 00:32:27.590
<v Speaker 1>a token based authentication on Kubernetes level, and

00:32:27.590 --> 00:32:29.909
<v Speaker 1>these tokens are then managed by Rancher

00:32:30.309 --> 00:32:32.470
<v Speaker 1>and attached to this active directory users, for

00:32:32.470 --> 00:32:33.029
<v Speaker 1>example.

00:32:34.309 --> 00:32:36.765
<v Speaker 0>Okay. Nice. I like it. So I would

00:32:36.765 --> 00:32:38.445
<v Speaker 1>say let's add more clusters to it to

00:32:38.445 --> 00:32:40.925
<v Speaker 1>have some fun and deploy stuff for. Right?

00:32:41.325 --> 00:32:43.245
<v Speaker 0>Oh, yeah. So we do have another question

00:32:43.245 --> 00:32:45.725
<v Speaker 0>from my friend, Sam, here who's asking if

00:32:45.725 --> 00:32:48.205
<v Speaker 0>we're able to update the k c s

00:32:48.205 --> 00:32:49.725
<v Speaker 0>cluster from the UI.

00:32:49.885 --> 00:32:51.860
<v Speaker 0>Yeah. Let's let's go let's do this next

00:32:51.860 --> 00:32:54.179
<v Speaker 1>and install a bit older one. Right? I

00:32:54.179 --> 00:32:55.539
<v Speaker 1>would say. Yeah.

00:32:57.140 --> 00:32:57.859
<v Speaker 1>And

00:32:59.620 --> 00:33:00.499
<v Speaker 1>yeah.

00:33:01.460 --> 00:33:02.499
<v Speaker 1>Let's do

00:33:02.980 --> 00:33:03.299
<v Speaker 1>that.

00:33:05.165 --> 00:33:07.965
<v Speaker 1>So if you I would say let's add

00:33:07.965 --> 00:33:10.125
<v Speaker 1>two three clusters for now.

00:33:10.365 --> 00:33:12.765
<v Speaker 1>One single node cluster that can we can

00:33:12.765 --> 00:33:14.765
<v Speaker 1>run-in a slightly older version, and then we

00:33:14.765 --> 00:33:15.645
<v Speaker 1>can test the update.

00:33:16.330 --> 00:33:17.450
<v Speaker 1>And then maybe

00:33:17.770 --> 00:33:20.810
<v Speaker 1>also on three VMs, a highly variable cluster

00:33:20.810 --> 00:33:22.730
<v Speaker 1>to have to see how that looks like.

00:33:22.890 --> 00:33:24.890
<v Speaker 0>Okay. So the the process for them doing

00:33:24.890 --> 00:33:26.650
<v Speaker 0>this. Now do I go on to each

00:33:26.650 --> 00:33:28.970
<v Speaker 0>of these machines and provision k three s

00:33:28.755 --> 00:33:30.435
<v Speaker 0>and then add them to Rancher? Or do

00:33:30.595 --> 00:33:32.675
<v Speaker 0>or can Rancher do something with the IP

00:33:32.675 --> 00:33:34.434
<v Speaker 0>address, like, on provision?

00:33:34.915 --> 00:33:35.875
<v Speaker 1>Currently,

00:33:35.955 --> 00:33:38.835
<v Speaker 1>there's a way there is a way for

00:33:38.835 --> 00:33:39.955
<v Speaker 1>Rancher

00:33:39.955 --> 00:33:42.755
<v Speaker 1>to directly install Kubernetes cluster on these machines,

00:33:43.475 --> 00:33:43.955
<v Speaker 1>but

00:33:44.680 --> 00:33:47.960
<v Speaker 1>that would be an RKE cluster running on

00:33:47.960 --> 00:33:48.679
<v Speaker 1>Docker.

00:33:48.840 --> 00:33:51.960
<v Speaker 1>It's also standard Kubernetes, just a different distribution,

00:33:51.960 --> 00:33:55.320
<v Speaker 1>and it's using the upstream images. So there's

00:33:55.320 --> 00:33:56.520
<v Speaker 1>no modification at all.

00:33:57.434 --> 00:33:59.114
<v Speaker 1>The downside of it,

00:33:59.355 --> 00:34:00.875
<v Speaker 1>why I wanna go the k three s

00:34:00.875 --> 00:34:02.635
<v Speaker 1>way is k three s is much faster.

00:34:02.635 --> 00:34:04.715
<v Speaker 1>And with RKE, it's like five, six, seven

00:34:04.715 --> 00:34:06.635
<v Speaker 1>docker images. It needs to configure each d

00:34:06.635 --> 00:34:08.474
<v Speaker 1>and everything. It just takes longer.

00:34:09.050 --> 00:34:10.889
<v Speaker 0>Alright. So let's And there's no benefit to

00:34:10.889 --> 00:34:13.449
<v Speaker 1>it. So we first create currently

00:34:13.609 --> 00:34:15.369
<v Speaker 1>on the VMs, a k three s cluster,

00:34:15.369 --> 00:34:17.449
<v Speaker 1>and then we can import it into Rancher.

00:34:18.090 --> 00:34:19.929
<v Speaker 1>But then we can manage everything through Rancher

00:34:19.929 --> 00:34:20.889
<v Speaker 1>upgrades and so on.

00:34:22.224 --> 00:34:22.864
<v Speaker 0>Okay.

00:34:23.025 --> 00:34:24.945
<v Speaker 1>So maybe can I post

00:34:25.264 --> 00:34:27.984
<v Speaker 1>easiest as we is I just put the

00:34:27.984 --> 00:34:28.864
<v Speaker 1>command

00:34:29.025 --> 00:34:31.905
<v Speaker 1>instead of our private chat? Right? Then Yeah.

00:34:31.905 --> 00:34:32.705
<v Speaker 0>Go for it.

00:34:33.264 --> 00:34:35.429
<v Speaker 1>Just so that we can install k three

00:34:35.429 --> 00:34:37.989
<v Speaker 1>s in a slightly older version.

00:34:38.790 --> 00:34:40.949
<v Speaker 0>Alright. So this is the same k three

00:34:40.949 --> 00:34:42.469
<v Speaker 0>s command we used earlier,

00:34:42.550 --> 00:34:44.630
<v Speaker 0>only this time we are setting an environment

00:34:44.630 --> 00:34:47.270
<v Speaker 0>variable to specify an just an older version

00:34:47.270 --> 00:34:48.150
<v Speaker 0>so that we can

00:34:48.469 --> 00:34:50.865
<v Speaker 1>That we can upgrade it. Yeah. Got it.

00:34:52.385 --> 00:34:55.025
<v Speaker 1>And it's now using the newest one seventeen.

00:34:55.025 --> 00:34:57.345
<v Speaker 1>We could also specify the exact version if

00:34:57.345 --> 00:34:58.225
<v Speaker 1>we wanted to,

00:34:58.945 --> 00:34:59.505
<v Speaker 1>but

00:35:00.640 --> 00:35:02.720
<v Speaker 1>I'm always too lazy to do that.

00:35:04.480 --> 00:35:07.200
<v Speaker 0>I love this curl command that in twenty,

00:35:07.200 --> 00:35:09.280
<v Speaker 0>thirty seconds, I get a cluster. That's just

00:35:09.280 --> 00:35:10.000
<v Speaker 0>ridiculous.

00:35:10.560 --> 00:35:11.200
<v Speaker 1>Okay.

00:35:12.400 --> 00:35:14.635
<v Speaker 1>So we have a cluster now. And to

00:35:14.635 --> 00:35:16.155
<v Speaker 1>add a torrential, if you go back to

00:35:16.155 --> 00:35:16.875
<v Speaker 1>UI

00:35:18.795 --> 00:35:21.755
<v Speaker 0>Got it. And you click on add cluster,

00:35:22.475 --> 00:35:25.435
<v Speaker 1>you can now import register an existing cluster.

00:35:26.829 --> 00:35:27.390
<v Speaker 1>No.

00:35:27.630 --> 00:35:29.070
<v Speaker 1>Not on existing notes.

00:35:29.309 --> 00:35:30.270
<v Speaker 1>This

00:35:30.430 --> 00:35:32.589
<v Speaker 1>register an existing cluster above this and then

00:35:32.589 --> 00:35:33.710
<v Speaker 1>other cluster.

00:35:33.869 --> 00:35:35.470
<v Speaker 0>Got it. And then we can give it

00:35:35.470 --> 00:35:36.110
<v Speaker 1>a name.

00:35:38.589 --> 00:35:40.510
<v Speaker 1>We could now directly

00:35:40.510 --> 00:35:43.085
<v Speaker 1>add. If you have multiple users or groups,

00:35:43.085 --> 00:35:44.845
<v Speaker 1>you could directly give them permissions in this

00:35:44.845 --> 00:35:46.605
<v Speaker 1>cluster. Of course, you can also do this

00:35:46.605 --> 00:35:47.405
<v Speaker 1>later on.

00:35:47.645 --> 00:35:48.205
<v Speaker 1>And

00:35:48.845 --> 00:35:52.045
<v Speaker 1>maybe let's directly give this also a label

00:35:52.045 --> 00:35:53.244
<v Speaker 1>for late later on.

00:35:54.400 --> 00:35:55.760
<v Speaker 1>And maybe label

00:35:55.920 --> 00:35:59.040
<v Speaker 1>I don't know. Group also doesn't matter so

00:35:59.040 --> 00:36:00.640
<v Speaker 1>much. And then one

00:36:00.960 --> 00:36:03.520
<v Speaker 1>or Ubuntu. Yeah. Let's maybe Google Ubuntu. That's

00:36:03.520 --> 00:36:03.760
<v Speaker 1>great.

00:36:06.125 --> 00:36:07.805
<v Speaker 1>We can use this later on to fleet

00:36:07.805 --> 00:36:09.645
<v Speaker 1>to decide then, okay, deploy to all Ubuntu

00:36:09.645 --> 00:36:11.725
<v Speaker 1>clusters or deploy to all clusters.

00:36:11.885 --> 00:36:13.885
<v Speaker 0>Ah, nice. Okay. And

00:36:13.885 --> 00:36:17.005
<v Speaker 1>now we basically get a kubectl apply command

00:36:17.244 --> 00:36:19.790
<v Speaker 1>that we can execute. And we since it's

00:36:19.790 --> 00:36:21.790
<v Speaker 1>self signed, we have to use the one

00:36:21.790 --> 00:36:24.350
<v Speaker 1>below that because it is a self signed

00:36:24.350 --> 00:36:28.190
<v Speaker 1>certificate. Otherwise, kubectl will say invalid TLS certificate.

00:36:28.830 --> 00:36:30.110
<v Speaker 0>Got it. Okay. So

00:36:30.744 --> 00:36:32.665
<v Speaker 0>this is the same as this command only.

00:36:32.665 --> 00:36:34.905
<v Speaker 1>Yeah. Just that downloads the YAML with scroll

00:36:34.905 --> 00:36:37.385
<v Speaker 1>and then pipes us into kubectl apply.

00:36:38.905 --> 00:36:39.705
<v Speaker 0>Done.

00:36:40.265 --> 00:36:43.065
<v Speaker 1>K. Yeah. Once these pods are started,

00:36:43.705 --> 00:36:44.744
<v Speaker 1>they

00:36:45.500 --> 00:36:47.180
<v Speaker 1>should then also

00:36:47.740 --> 00:36:50.300
<v Speaker 1>build up the connection to Rancher.

00:36:52.540 --> 00:36:54.540
<v Speaker 1>Basically, what this is is it insults a

00:36:54.540 --> 00:36:56.700
<v Speaker 1>small agent into the cluster. And this is

00:36:56.700 --> 00:36:58.940
<v Speaker 1>also in every connected Kubernetes cluster. The only

00:36:58.940 --> 00:37:01.985
<v Speaker 1>Rancher specific thing that is not standard Kubernetes

00:37:01.985 --> 00:37:03.745
<v Speaker 1>is this one agent. And the job of

00:37:03.745 --> 00:37:05.425
<v Speaker 1>the agent is to connect to the API

00:37:05.425 --> 00:37:06.625
<v Speaker 1>and make it manageable.

00:37:07.505 --> 00:37:09.505
<v Speaker 1>And the rest is standard Kubernetes.

00:37:10.065 --> 00:37:11.985
<v Speaker 1>Yep. And now we have the second cluster

00:37:11.985 --> 00:37:14.385
<v Speaker 1>there, and maybe we can directly upgrade it.

00:37:14.385 --> 00:37:14.625
<v Speaker 1>Right?

00:37:16.070 --> 00:37:17.830
<v Speaker 0>I'll take your word for it. Yeah. So

00:37:17.830 --> 00:37:19.910
<v Speaker 0>can I click on this cluster?

00:37:20.230 --> 00:37:20.790
<v Speaker 1>Yep.

00:37:21.430 --> 00:37:23.430
<v Speaker 1>So first of all, maybe before we upgrade

00:37:23.430 --> 00:37:25.190
<v Speaker 1>it, can you just click on the cube

00:37:25.190 --> 00:37:26.230
<v Speaker 1>config file

00:37:26.550 --> 00:37:26.950
<v Speaker 1>there?

00:37:28.255 --> 00:37:30.494
<v Speaker 1>This gives you you're gonna hit on everything

00:37:30.494 --> 00:37:32.575
<v Speaker 1>afterwards. Otherwise, it will show you a token.

00:37:33.535 --> 00:37:35.215
<v Speaker 1>Okay. Then let's not show it.

00:37:35.455 --> 00:37:36.974
<v Speaker 1>This is also the way how you get

00:37:36.974 --> 00:37:38.335
<v Speaker 1>now a cube config

00:37:38.575 --> 00:37:39.295
<v Speaker 1>with

00:37:39.535 --> 00:37:42.039
<v Speaker 1>user token that is dedicated to the user

00:37:42.039 --> 00:37:43.799
<v Speaker 1>you are logged in into Rancher. So if

00:37:43.799 --> 00:37:45.560
<v Speaker 1>you have had your active directory

00:37:46.119 --> 00:37:46.920
<v Speaker 1>connected,

00:37:46.920 --> 00:37:49.559
<v Speaker 1>you would now have active directory based authentication

00:37:49.559 --> 00:37:50.600
<v Speaker 1>at this cluster.

00:37:51.480 --> 00:37:52.760
<v Speaker 1>So that's cool. Really cool.

00:37:53.664 --> 00:37:54.385
<v Speaker 1>But

00:37:55.105 --> 00:37:57.185
<v Speaker 0>Well I mean, was fast enough.

00:37:57.505 --> 00:37:59.345
<v Speaker 0>Oh, people can pause it, I'm sure. So

00:37:59.424 --> 00:38:01.265
<v Speaker 0>Yeah. It's well, whatever. But I'll turn it

00:38:01.664 --> 00:38:04.144
<v Speaker 0>just don't go mining crypto for the next

00:38:04.144 --> 00:38:04.625
<v Speaker 0>half hour.

00:38:06.309 --> 00:38:07.030
<v Speaker 1>Okay.

00:38:07.510 --> 00:38:09.190
<v Speaker 1>We can now also

00:38:09.829 --> 00:38:11.589
<v Speaker 1>yeah. If you click on the context menu

00:38:11.589 --> 00:38:13.510
<v Speaker 1>with the three dots in the upper right

00:38:14.230 --> 00:38:16.470
<v Speaker 0>Got it. And click on edit.

00:38:18.230 --> 00:38:19.589
<v Speaker 1>And there you have a drop down with

00:38:19.589 --> 00:38:22.605
<v Speaker 1>the Kubernetes version. And, yeah, you can choose

00:38:22.685 --> 00:38:23.885
<v Speaker 1>any new one.

00:38:24.125 --> 00:38:25.245
<v Speaker 1>Click save.

00:38:28.125 --> 00:38:29.885
<v Speaker 1>With the concurrency, you could have also if

00:38:29.885 --> 00:38:31.165
<v Speaker 1>you have a multi cluster

00:38:31.645 --> 00:38:33.725
<v Speaker 1>multi node setup, configure

00:38:33.725 --> 00:38:36.285
<v Speaker 1>how many nodes should be updated in parallel.

00:38:37.130 --> 00:38:38.810
<v Speaker 1>If you have 50 worker notes, you probably

00:38:38.810 --> 00:38:40.730
<v Speaker 1>don't wanna go one by one, but

00:38:41.290 --> 00:38:42.890
<v Speaker 1>update several ones in parallel.

00:38:43.130 --> 00:38:46.490
<v Speaker 1>And it also can directly if a multi

00:38:46.490 --> 00:38:49.770
<v Speaker 1>node setup, then drain containers away before updating.

00:38:50.835 --> 00:38:53.555
<v Speaker 0>And I'm assuming because k three s is

00:38:53.555 --> 00:38:55.395
<v Speaker 0>bundled as a single binary, is that the

00:38:55.395 --> 00:38:57.315
<v Speaker 0>upgrade process is just pulling down a new

00:38:57.315 --> 00:38:59.555
<v Speaker 0>binary and then replacing the process. Yep. Like,

00:38:59.555 --> 00:39:01.155
<v Speaker 0>that's done. It's also done already.

00:39:05.230 --> 00:39:07.470
<v Speaker 0>Okay. So, I mean, I could run

00:39:11.710 --> 00:39:12.750
<v Speaker 0>SCS.

00:39:13.470 --> 00:39:15.630
<v Speaker 0>That doesn't show the version. Version. I

00:39:16.345 --> 00:39:17.305
<v Speaker 1>think it's just for

00:39:18.265 --> 00:39:20.025
<v Speaker 0>Of course. There we go. Oh, yeah. One

00:39:20.025 --> 00:39:20.745
<v Speaker 0>nineteen.

00:39:22.425 --> 00:39:24.425
<v Speaker 0>Our client and server. Alright. Nice. So it's

00:39:24.425 --> 00:39:26.185
<v Speaker 0>upgrade. Oh, of course. Yeah. It also this

00:39:26.185 --> 00:39:28.825
<v Speaker 1>is funded. It also directly up updates KubeCTL

00:39:28.825 --> 00:39:29.945
<v Speaker 1>on that note as well.

00:39:31.145 --> 00:39:33.950
<v Speaker 1>Yeah. So that was the single note setup.

00:39:35.070 --> 00:39:38.349
<v Speaker 1>Should we directly add an assert to assert

00:39:38.349 --> 00:39:39.470
<v Speaker 1>cluster to it?

00:39:40.750 --> 00:39:43.630
<v Speaker 0>Yes. Okay. So I grab this IP address.

00:39:43.630 --> 00:39:46.205
<v Speaker 0>And And I would say let's do it

00:39:46.205 --> 00:39:47.485
<v Speaker 1>slightly

00:39:47.565 --> 00:39:48.445
<v Speaker 1>differently

00:39:49.245 --> 00:39:50.685
<v Speaker 1>and set up

00:39:53.725 --> 00:39:56.205
<v Speaker 1>a highly available multi node cluster

00:39:56.285 --> 00:39:59.165
<v Speaker 1>and maybe also we see embedded SCD so

00:39:59.165 --> 00:40:00.605
<v Speaker 1>that we directly have

00:40:00.880 --> 00:40:03.119
<v Speaker 1>not only one control plane server node, but

00:40:03.119 --> 00:40:04.160
<v Speaker 1>multiple ones.

00:40:04.640 --> 00:40:06.320
<v Speaker 0>And is this where you tell me you're

00:40:06.320 --> 00:40:07.840
<v Speaker 0>gonna give me the command for that. Right?

00:40:07.840 --> 00:40:08.400
<v Speaker 1>Yes.

00:40:10.800 --> 00:40:11.440
<v Speaker 1>So

00:40:11.680 --> 00:40:13.680
<v Speaker 1>one you're on one on the first node

00:40:13.680 --> 00:40:14.720
<v Speaker 1>for this cluster,

00:40:16.095 --> 00:40:18.655
<v Speaker 1>this this embedded entity is only available in

00:40:18.655 --> 00:40:21.375
<v Speaker 1>one nineteen. So I directly specified one nineteen.

00:40:21.695 --> 00:40:23.135
<v Speaker 1>And to make it easier,

00:40:23.375 --> 00:40:24.815
<v Speaker 1>I directly specified

00:40:24.815 --> 00:40:27.215
<v Speaker 1>a token secret that we need the the

00:40:27.215 --> 00:40:30.770
<v Speaker 1>secret this token secret we need afterwards to

00:40:33.090 --> 00:40:34.930
<v Speaker 1>to connect all these notes together. It needs

00:40:34.930 --> 00:40:36.530
<v Speaker 1>to be the same in every command.

00:40:38.210 --> 00:40:38.770
<v Speaker 1>And

00:40:39.570 --> 00:40:41.570
<v Speaker 1>with this cluster in a variable, I'm basically

00:40:41.570 --> 00:40:43.010
<v Speaker 1>saying initialize

00:40:43.010 --> 00:40:45.235
<v Speaker 1>it's the cluster as well.

00:40:47.635 --> 00:40:48.275
<v Speaker 0>Okay.

00:40:48.755 --> 00:40:50.755
<v Speaker 1>And with this case, we have x x

00:40:50.755 --> 00:40:52.435
<v Speaker 1>server saying this should be a server node

00:40:52.435 --> 00:40:53.795
<v Speaker 1>and not an agent node.

00:40:54.115 --> 00:40:54.755
<v Speaker 1>Yeah.

00:40:55.075 --> 00:40:58.115
<v Speaker 1>But, basically, it's doing same thing, just one

00:40:58.115 --> 00:40:59.635
<v Speaker 1>nineteen with x d

00:41:00.460 --> 00:41:01.020
<v Speaker 1>included.

00:41:02.300 --> 00:41:04.140
<v Speaker 0>And is this still gonna take twenty to

00:41:04.140 --> 00:41:05.900
<v Speaker 0>thirty seconds? Or Yes.

00:41:06.940 --> 00:41:07.660
<v Speaker 0>And

00:41:10.380 --> 00:41:11.100
<v Speaker 1>the

00:41:11.500 --> 00:41:12.220
<v Speaker 1>second

00:41:12.540 --> 00:41:14.815
<v Speaker 1>command, we do the so we probably should

00:41:14.815 --> 00:41:16.655
<v Speaker 1>do a three node cluster because at city

00:41:16.655 --> 00:41:17.855
<v Speaker 1>needs forum. Right?

00:41:18.975 --> 00:41:20.735
<v Speaker 0>Okay. So we have two more nodes. So

00:41:20.735 --> 00:41:23.695
<v Speaker 0>that's good. Yep. So the we need the

00:41:23.695 --> 00:41:24.015
<v Speaker 1>IP

00:41:24.575 --> 00:41:26.255
<v Speaker 1>on the two other nodes, we definitely need

00:41:26.255 --> 00:41:27.935
<v Speaker 1>now now the IP address on of the

00:41:27.935 --> 00:41:28.975
<v Speaker 1>first server node.

00:41:30.790 --> 00:41:31.430
<v Speaker 1>And,

00:41:31.910 --> 00:41:34.390
<v Speaker 1>yeah, I also send you the command for

00:41:34.390 --> 00:41:35.349
<v Speaker 1>the other two notes.

00:41:42.375 --> 00:41:44.215
<v Speaker 0>Alright. Got it. So

00:41:44.855 --> 00:41:46.615
<v Speaker 1>And you have to change the 3 u

00:41:46.615 --> 00:41:48.775
<v Speaker 1>l then to the correct IP address.

00:41:49.655 --> 00:41:52.375
<v Speaker 0>That, I can just about manage.

00:41:52.455 --> 00:41:55.095
<v Speaker 1>So So this is pointing, basically, 6443

00:41:55.095 --> 00:41:55.575
<v Speaker 1>is the

00:41:56.619 --> 00:41:58.460
<v Speaker 1>port of the API server

00:41:58.700 --> 00:42:00.460
<v Speaker 1>so that it can connect to it correctly,

00:42:00.460 --> 00:42:02.620
<v Speaker 1>and it is all then authentication versus

00:42:02.700 --> 00:42:04.140
<v Speaker 1>very unsecured token.

00:42:04.619 --> 00:42:06.540
<v Speaker 0>Well, yeah. I was thinking that. I mean,

00:42:06.540 --> 00:42:08.380
<v Speaker 0>people could join this cluster just

00:42:08.635 --> 00:42:09.995
<v Speaker 0>by heading these IP.

00:42:11.035 --> 00:42:13.035
<v Speaker 1>Let's hope that they're not destroying our demo.

00:42:13.035 --> 00:42:13.515
<v Speaker 1>Right?

00:42:16.635 --> 00:42:17.915
<v Speaker 0>It'll be fine.

00:42:18.875 --> 00:42:21.355
<v Speaker 0>People are nice. Right? Yeah. So

00:42:21.995 --> 00:42:24.390
<v Speaker 0>well, we add this arm one. Would that

00:42:24.390 --> 00:42:24.869
<v Speaker 0>work?

00:42:25.990 --> 00:42:27.670
<v Speaker 0>That's the third part. Question

00:42:28.069 --> 00:42:28.710
<v Speaker 1>it.

00:42:29.270 --> 00:42:31.750
<v Speaker 1>Yeah. Let's try this maybe. I have never

00:42:31.990 --> 00:42:33.030
<v Speaker 1>had a

00:42:36.630 --> 00:42:41.510
<v Speaker 1>never did did a setup with

00:42:39.935 --> 00:42:43.055
<v Speaker 1>share with different CPU architectures in the control,

00:42:43.055 --> 00:42:44.255
<v Speaker 1>it should work actually.

00:42:44.494 --> 00:42:46.175
<v Speaker 1>I don't see what I'm trying to think

00:42:46.175 --> 00:42:48.255
<v Speaker 0>if there's any components that wouldn't run on

00:42:48.255 --> 00:42:50.095
<v Speaker 0>ARM, but I think it should be okay.

00:42:53.250 --> 00:42:54.850
<v Speaker 0>Yeah. I mean, it it I've seen the

00:42:54.850 --> 00:42:56.850
<v Speaker 0>URL change there. It was definitely done with

00:42:56.850 --> 00:42:58.050
<v Speaker 0>an ARM binaries.

00:42:58.050 --> 00:42:58.690
<v Speaker 0>So

00:42:59.970 --> 00:43:01.810
<v Speaker 0>let's So if you do QC to get

00:43:01.810 --> 00:43:04.210
<v Speaker 1>notes, you should see that there are no

00:43:07.005 --> 00:43:08.765
<v Speaker 1>yeah, two That one is just starting. The

00:43:08.765 --> 00:43:10.365
<v Speaker 1>other one is still starting the system d

00:43:10.365 --> 00:43:11.405
<v Speaker 1>service. So

00:43:12.045 --> 00:43:12.685
<v Speaker 1>yeah.

00:43:14.765 --> 00:43:17.885
<v Speaker 0>So it's not ready yet, but maybe it

00:43:17.885 --> 00:43:19.645
<v Speaker 1>just takes a couple seconds because it also

00:43:19.645 --> 00:43:21.165
<v Speaker 1>needs to install the c n I plug

00:43:21.165 --> 00:43:23.165
<v Speaker 1>in

00:43:22.180 --> 00:43:24.340
<v Speaker 1>or yep. Now it's ready.

00:43:25.700 --> 00:43:26.420
<v Speaker 1>Nice.

00:43:26.660 --> 00:43:28.740
<v Speaker 1>So we have now a three node Kubernetes

00:43:28.740 --> 00:43:29.540
<v Speaker 1>cluster

00:43:29.540 --> 00:43:32.180
<v Speaker 1>with one r we basically, what we have

00:43:32.180 --> 00:43:34.820
<v Speaker 1>now is three nodes, and all nodes have

00:43:34.820 --> 00:43:36.660
<v Speaker 1>all roads. So there are worker nodes, it's

00:43:36.660 --> 00:43:38.635
<v Speaker 1>a d, and master nodes or control plane

00:43:38.635 --> 00:43:39.195
<v Speaker 1>nodes.

00:43:39.915 --> 00:43:41.435
<v Speaker 0>Yeah. Every time I run this, I expect

00:43:41.435 --> 00:43:43.515
<v Speaker 0>to see a fourth node, but you know?

00:43:44.235 --> 00:43:45.675
<v Speaker 1>We could also add a fourth node to

00:43:45.675 --> 00:43:46.155
<v Speaker 1>it.

00:43:46.555 --> 00:43:49.435
<v Speaker 1>If that would be probably where we say,

00:43:49.835 --> 00:43:52.075
<v Speaker 1>hey. We just add a fourth worker node

00:43:52.075 --> 00:43:54.000
<v Speaker 1>to it if you want to. No. No.

00:43:54.000 --> 00:43:56.000
<v Speaker 0>I'll I'll let our audience add that force

00:43:56.000 --> 00:43:58.080
<v Speaker 0>code if they're feeling brave. So Okay.

00:44:00.160 --> 00:44:02.320
<v Speaker 1>Yeah. Then the next step would be also

00:44:02.320 --> 00:44:04.320
<v Speaker 1>to add this to Rancher the same way

00:44:04.320 --> 00:44:04.960
<v Speaker 1>we did before.

00:44:05.675 --> 00:44:08.795
<v Speaker 0>Okay. So I just pop back over to

00:44:08.795 --> 00:44:09.595
<v Speaker 0>global.

00:44:09.595 --> 00:44:10.395
<v Speaker 0>I add

00:44:11.035 --> 00:44:11.835
<v Speaker 0>cluster,

00:44:11.835 --> 00:44:13.035
<v Speaker 0>other cluster.

00:44:13.035 --> 00:44:14.955
<v Speaker 0>I give it a name. So this is

00:44:14.955 --> 00:44:16.795
<v Speaker 0>our cluster.

00:44:18.795 --> 00:44:20.395
<v Speaker 0>And I'll get this

00:44:21.759 --> 00:44:23.599
<v Speaker 0>a p j. And even though it's not

00:44:23.599 --> 00:44:25.920
<v Speaker 0>all Ubuntu, I just wanna grip that with

00:44:25.920 --> 00:44:27.680
<v Speaker 0>the previous one. Yeah. Yeah. That would be

00:44:27.680 --> 00:44:30.400
<v Speaker 1>nice that we can still connect it to

00:44:30.400 --> 00:44:32.000
<v Speaker 1>it. And it has some Ubuntu notes in

00:44:32.000 --> 00:44:32.640
<v Speaker 1>it. Right?

00:44:32.960 --> 00:44:34.960
<v Speaker 0>It does. Yeah. I think was it group

00:44:34.960 --> 00:44:36.319
<v Speaker 0>that I used, the key? I think it

00:44:36.319 --> 00:44:37.645
<v Speaker 0>was. I group. Yeah.

00:44:39.005 --> 00:44:41.645
<v Speaker 0>Alright. We grab the insecure

00:44:41.645 --> 00:44:42.525
<v Speaker 0>command,

00:44:44.365 --> 00:44:46.365
<v Speaker 0>and we run that. And

00:44:47.164 --> 00:44:49.085
<v Speaker 0>this is magically gonna show up again.

00:44:50.170 --> 00:44:51.210
<v Speaker 0>Pending.

00:44:53.050 --> 00:44:53.850
<v Speaker 1>Yep.

00:44:54.730 --> 00:44:55.530
<v Speaker 1>Okay.

00:44:57.210 --> 00:44:59.130
<v Speaker 1>Are we okay with two clusters to deploy

00:44:59.130 --> 00:45:00.250
<v Speaker 1>to them, or do you wanna add a

00:45:00.250 --> 00:45:01.130
<v Speaker 1>third cluster?

00:45:01.610 --> 00:45:03.210
<v Speaker 0>No. I I think that's good. You know,

00:45:03.210 --> 00:45:05.065
<v Speaker 0>we've got a single solo node one. We've

00:45:05.065 --> 00:45:06.745
<v Speaker 0>got the agents It it would be basically

00:45:06.745 --> 00:45:07.545
<v Speaker 1>the same.

00:45:08.425 --> 00:45:10.745
<v Speaker 1>And also the command to add additional worker

00:45:10.745 --> 00:45:11.385
<v Speaker 1>nodes,

00:45:11.705 --> 00:45:13.625
<v Speaker 1>so non control play nodes to k three

00:45:13.625 --> 00:45:16.105
<v Speaker 1>r s is basically also the same same

00:45:16.105 --> 00:45:17.625
<v Speaker 1>instead of saying

00:45:17.970 --> 00:45:20.290
<v Speaker 1>server, you say agent, right, in the command.

00:45:21.650 --> 00:45:23.890
<v Speaker 0>Okay. Cool. Well, that's important.

00:45:24.130 --> 00:45:24.770
<v Speaker 1>Yeah.

00:45:25.810 --> 00:45:27.890
<v Speaker 1>Maybe on this bigger cluster,

00:45:27.970 --> 00:45:28.450
<v Speaker 1>we

00:45:28.849 --> 00:45:31.490
<v Speaker 1>can see here in the UI that it

00:45:31.490 --> 00:45:33.970
<v Speaker 1>already shows you a bit of information about

00:45:34.265 --> 00:45:36.665
<v Speaker 1>what is kind of reserved as resources into

00:45:36.665 --> 00:45:37.385
<v Speaker 1>the cluster.

00:45:37.705 --> 00:45:41.305
<v Speaker 1>But maybe let's also activate the Rancher integrated

00:45:41.305 --> 00:45:42.185
<v Speaker 1>monitoring

00:45:42.425 --> 00:45:44.905
<v Speaker 1>to see a bit more metrics and dashboards.

00:45:45.785 --> 00:45:46.425
<v Speaker 1>And,

00:45:47.225 --> 00:45:49.840
<v Speaker 1>yeah, let's let's keep yeah. Let's keep it

00:45:49.840 --> 00:45:52.160
<v Speaker 1>at this because I I'm fairly con convinced

00:45:52.160 --> 00:45:53.520
<v Speaker 1>that this will run on ARM.

00:45:55.840 --> 00:45:59.280
<v Speaker 1>Yeah. We can just use the default.

00:45:59.680 --> 00:46:00.480
<v Speaker 1>It should be fine.

00:46:01.815 --> 00:46:03.415
<v Speaker 0>Sorry. I was getting ahead of myself there.

00:46:03.415 --> 00:46:04.615
<v Speaker 0>I'm just clicking buttons.

00:46:05.335 --> 00:46:05.975
<v Speaker 1>That's fine.

00:46:06.615 --> 00:46:08.375
<v Speaker 1>Maybe one interesting

00:46:08.375 --> 00:46:10.295
<v Speaker 1>thing is that we are it was Rancher

00:46:10.295 --> 00:46:12.055
<v Speaker 1>2 Five, and it mentions this at the

00:46:12.295 --> 00:46:14.950
<v Speaker 1>in the top that we are also provided

00:46:14.950 --> 00:46:17.750
<v Speaker 1>version two of all this monitoring integration that

00:46:17.750 --> 00:46:19.030
<v Speaker 1>is even more flexible.

00:46:19.270 --> 00:46:20.870
<v Speaker 1>But let's keep the v r v r

00:46:21.030 --> 00:46:23.350
<v Speaker 1>v one one because I'm not sure if

00:46:23.350 --> 00:46:25.270
<v Speaker 1>the version two of the monitoring that is

00:46:25.270 --> 00:46:25.910
<v Speaker 1>new

00:46:26.870 --> 00:46:29.975
<v Speaker 1>already works on ARM. It should probably, but

00:46:29.975 --> 00:46:30.935
<v Speaker 1>I'm not sure.

00:46:32.375 --> 00:46:34.215
<v Speaker 0>So this is the the new one. Right?

00:46:34.215 --> 00:46:35.735
<v Speaker 1>The new one is a new one. In

00:46:35.735 --> 00:46:37.815
<v Speaker 1>the end, it's it's using the premises operator.

00:46:37.815 --> 00:46:38.775
<v Speaker 1>Both of them do.

00:46:39.335 --> 00:46:41.495
<v Speaker 1>The new one is more flexible and more

00:46:41.495 --> 00:46:42.695
<v Speaker 1>in line with what is upstream.

00:46:44.760 --> 00:46:46.200
<v Speaker 1>But we can

00:46:46.360 --> 00:46:47.800
<v Speaker 1>yeah. Let's keep it to this. If you

00:46:47.800 --> 00:46:49.320
<v Speaker 1>go back to the cluster page, if you

00:46:49.320 --> 00:46:50.280
<v Speaker 1>click on cluster

00:46:51.000 --> 00:46:52.600
<v Speaker 0>yeah. Cluster. Okay.

00:46:53.080 --> 00:46:54.840
<v Speaker 1>That's not completely ready yet.

00:46:55.805 --> 00:46:58.445
<v Speaker 0>What does that's just deploying exports.

00:46:58.445 --> 00:47:00.525
<v Speaker 0>Right? Am I am I correct? Yeah. It's

00:47:00.525 --> 00:47:01.405
<v Speaker 1>deploying

00:47:01.405 --> 00:47:02.445
<v Speaker 1>Prometheus

00:47:02.525 --> 00:47:03.245
<v Speaker 1>and

00:47:04.525 --> 00:47:05.405
<v Speaker 0>here we go.

00:47:07.725 --> 00:47:10.285
<v Speaker 1>I think it may have scheduled something

00:47:10.839 --> 00:47:12.680
<v Speaker 1>on the ARM note that is doesn't have

00:47:12.680 --> 00:47:13.720
<v Speaker 1>an ARM image

00:47:14.440 --> 00:47:15.240
<v Speaker 1>app.

00:47:15.480 --> 00:47:17.880
<v Speaker 0>Yeah. It's some sort of operator, and it

00:47:17.880 --> 00:47:20.920
<v Speaker 0>is Can you try to re delete these

00:47:20.920 --> 00:47:23.400
<v Speaker 1>ports and hope that they are or maybe

00:47:23.400 --> 00:47:26.200
<v Speaker 1>let's let's cordon the ARM note for now.

00:47:30.495 --> 00:47:31.535
<v Speaker 0>Rancher,

00:47:31.695 --> 00:47:32.735
<v Speaker 0>tap in.

00:47:34.495 --> 00:47:36.175
<v Speaker 0>Yep. And to

00:47:36.335 --> 00:47:37.215
<v Speaker 0>delete

00:47:37.695 --> 00:47:38.255
<v Speaker 0>parts.

00:47:45.330 --> 00:47:46.690
<v Speaker 0>Long pasty window.

00:47:48.609 --> 00:47:50.130
<v Speaker 1>The kettle the

00:47:50.849 --> 00:47:51.970
<v Speaker 0>The namespace.

00:47:52.050 --> 00:47:53.730
<v Speaker 1>The namespace is kettle

00:47:54.210 --> 00:47:54.930
<v Speaker 1>well,

00:47:55.730 --> 00:47:56.450
<v Speaker 1>Prometheus

00:47:57.414 --> 00:47:58.375
<v Speaker 1>something.

00:47:59.335 --> 00:48:02.934
<v Speaker 0>Kettle system. No. It's not this one. Okay.

00:48:02.934 --> 00:48:04.375
<v Speaker 1>Kettle Prometheus. Yeah.

00:48:07.974 --> 00:48:09.734
<v Speaker 0>So I don't think I regret my my

00:48:09.734 --> 00:48:12.135
<v Speaker 0>poor choice of tabbing layout here. But No.

00:48:12.135 --> 00:48:13.870
<v Speaker 1>You can also go to the Rancher UI.

00:48:13.870 --> 00:48:16.270
<v Speaker 1>I think that was a a good point

00:48:17.150 --> 00:48:17.870
<v Speaker 1>to

00:48:19.310 --> 00:48:21.070
<v Speaker 1>have a look at the all these ports

00:48:21.070 --> 00:48:23.310
<v Speaker 1>in the Rancher UI, then it's oh, there

00:48:23.310 --> 00:48:24.110
<v Speaker 1>it's up.

00:48:24.990 --> 00:48:25.230
<v Speaker 1>So

00:48:26.055 --> 00:48:28.375
<v Speaker 1>you can see here now, you have now

00:48:28.375 --> 00:48:29.895
<v Speaker 1>a bit more metrics. And if you open

00:48:29.895 --> 00:48:31.735
<v Speaker 1>up this cluster metrics box

00:48:33.815 --> 00:48:34.935
<v Speaker 0>Where is that?

00:48:35.734 --> 00:48:37.655
<v Speaker 1>At the bottom of the screen. Yeah.

00:48:38.214 --> 00:48:40.694
<v Speaker 1>You can see it already starts pulling metrics

00:48:40.694 --> 00:48:41.895
<v Speaker 1>of all the different notes.

00:48:43.550 --> 00:48:45.870
<v Speaker 1>Of course, we take some time until all

00:48:45.870 --> 00:48:47.550
<v Speaker 1>the data's there, and you also have a

00:48:47.550 --> 00:48:49.630
<v Speaker 1>link everywhere to Grafana that gives you more

00:48:49.630 --> 00:48:50.750
<v Speaker 1>detailed dashboards.

00:48:51.790 --> 00:48:53.550
<v Speaker 1>And, of course, you can then extend this

00:48:53.550 --> 00:48:55.885
<v Speaker 1>and monitor your own applications if you add

00:48:55.885 --> 00:48:57.565
<v Speaker 1>an influx to be to it or so.

00:48:57.565 --> 00:48:59.725
<v Speaker 1>You can also scrape this with Prometheus

00:48:59.805 --> 00:49:01.805
<v Speaker 1>at your own dashboards to Grafana.

00:49:01.805 --> 00:49:03.565
<v Speaker 1>It's very flexible.

00:49:03.964 --> 00:49:06.444
<v Speaker 0>Yeah. Nice. Very cool. I like it. And

00:49:06.444 --> 00:49:08.125
<v Speaker 1>you get it set up with all the

00:49:08.125 --> 00:49:10.640
<v Speaker 1>defaults with a sensible set of alerts, sensible

00:49:10.640 --> 00:49:12.640
<v Speaker 1>dashboards for everything you need to discriminate to

00:49:12.640 --> 00:49:13.520
<v Speaker 1>do the click.

00:49:13.839 --> 00:49:15.599
<v Speaker 1>That is also quite nice.

00:49:18.079 --> 00:49:18.800
<v Speaker 1>Okay.

00:49:20.000 --> 00:49:21.279
<v Speaker 0>So I think

00:49:21.905 --> 00:49:23.345
<v Speaker 0>that's a really

00:49:23.505 --> 00:49:24.785
<v Speaker 0>it's

00:49:24.785 --> 00:49:26.305
<v Speaker 0>it's it's cool. I like this. You know,

00:49:26.305 --> 00:49:28.545
<v Speaker 0>we've got cluster management. Important that was if

00:49:28.545 --> 00:49:30.865
<v Speaker 0>I even provisioning the clusters themselves was an

00:49:30.865 --> 00:49:33.825
<v Speaker 0>absolute breeze. And we now have this single

00:49:33.825 --> 00:49:35.345
<v Speaker 0>pane of glass for lack of a better

00:49:35.345 --> 00:49:37.105
<v Speaker 0>term for working with my clusters.

00:49:37.720 --> 00:49:39.240
<v Speaker 0>As now, when we

00:49:39.400 --> 00:49:41.960
<v Speaker 0>look at Fleet and start deploying stuff? I

00:49:41.960 --> 00:49:44.360
<v Speaker 1>would say so. Or if you of course,

00:49:44.360 --> 00:49:45.640
<v Speaker 1>you can look at other things if you

00:49:45.640 --> 00:49:48.120
<v Speaker 1>want to first, but maybe Fleet would be

00:49:48.120 --> 00:49:48.920
<v Speaker 1>kind of nice.

00:49:49.320 --> 00:49:51.000
<v Speaker 0>Yeah. Let's let's get some work load running

00:49:51.000 --> 00:49:51.320
<v Speaker 0>on this.

00:49:52.075 --> 00:49:52.795
<v Speaker 1>Okay.

00:49:53.355 --> 00:49:55.995
<v Speaker 1>For that, you have to go to the

00:49:55.995 --> 00:49:59.035
<v Speaker 1>Explorer UI because that's where the fleet UI

00:49:59.035 --> 00:50:00.955
<v Speaker 1>is located. So click on Explorer, maybe on

00:50:00.955 --> 00:50:02.555
<v Speaker 1>the local cluster. I think it doesn't matter

00:50:02.555 --> 00:50:03.195
<v Speaker 1>even.

00:50:03.995 --> 00:50:04.875
<v Speaker 1>It doesn't matter.

00:50:05.275 --> 00:50:07.115
<v Speaker 1>You should go to both.

00:50:09.380 --> 00:50:11.700
<v Speaker 1>Click on cluster explorer on the top. It

00:50:11.700 --> 00:50:13.140
<v Speaker 1>goes all to the same UI in the

00:50:13.140 --> 00:50:13.860
<v Speaker 1>end. Yeah.

00:50:16.260 --> 00:50:17.220
<v Speaker 1>And if

00:50:17.300 --> 00:50:19.940
<v Speaker 1>you go now into the upper left corner

00:50:20.755 --> 00:50:22.835
<v Speaker 1>on the drop down there for our cluster

00:50:22.835 --> 00:50:23.715
<v Speaker 1>explorer

00:50:23.875 --> 00:50:24.275
<v Speaker 0>Yep.

00:50:25.155 --> 00:50:26.675
<v Speaker 1>And go to Fleet.

00:50:28.355 --> 00:50:31.235
<v Speaker 1>So this is the Fleet user interface.

00:50:31.315 --> 00:50:33.235
<v Speaker 1>And what you can see already

00:50:33.395 --> 00:50:34.435
<v Speaker 1>on the clusters,

00:50:36.990 --> 00:50:38.270
<v Speaker 1>As you would expect,

00:50:38.750 --> 00:50:39.870
<v Speaker 1>there are

00:50:40.270 --> 00:50:43.870
<v Speaker 1>two three clusters already registered, the local one,

00:50:44.590 --> 00:50:47.230
<v Speaker 1>and then the two ones we created then.

00:50:47.230 --> 00:50:48.110
<v Speaker 1>And by default,

00:50:48.945 --> 00:50:50.145
<v Speaker 1>it created

00:50:51.265 --> 00:50:51.985
<v Speaker 1>the

00:50:54.065 --> 00:50:55.905
<v Speaker 1>new clusters we added in the fleet default

00:50:55.905 --> 00:50:56.865
<v Speaker 1>workspace,

00:50:57.425 --> 00:50:59.585
<v Speaker 1>but we could add multiple workspaces and move

00:50:59.585 --> 00:51:02.385
<v Speaker 1>all clusters around and organize them to workspaces.

00:51:04.280 --> 00:51:07.320
<v Speaker 1>And if you go to cluster groups,

00:51:08.280 --> 00:51:10.840
<v Speaker 1>this is how you can group clusters together,

00:51:10.840 --> 00:51:12.120
<v Speaker 1>and there's already

00:51:12.280 --> 00:51:15.240
<v Speaker 1>one cluster group. Maybe we can add additional

00:51:15.240 --> 00:51:16.920
<v Speaker 1>group for our one to 20

00:51:18.944 --> 00:51:19.744
<v Speaker 1>clusters.

00:51:19.825 --> 00:51:21.184
<v Speaker 0>Alright. Let's see if I can work this

00:51:21.184 --> 00:51:21.744
<v Speaker 0>out.

00:51:23.424 --> 00:51:25.744
<v Speaker 0>That would be easy. Yeah. We're already in

00:51:25.744 --> 00:51:27.184
<v Speaker 1>the default workspace

00:51:27.184 --> 00:51:28.464
<v Speaker 1>and yeah.

00:51:30.065 --> 00:51:32.065
<v Speaker 0>Have been to 20 clusters.

00:51:34.930 --> 00:51:36.210
<v Speaker 0>The selector's

00:51:36.210 --> 00:51:38.370
<v Speaker 0>gonna be Yeah. The labels. Selector. Yep.

00:51:39.890 --> 00:51:41.810
<v Speaker 1>And, of course, we had connect we could

00:51:41.810 --> 00:51:43.490
<v Speaker 1>also give that labels if you wanted to,

00:51:43.490 --> 00:51:45.170
<v Speaker 1>but it's probably not necessary.

00:51:45.330 --> 00:51:47.650
<v Speaker 0>Labels all the way there. Yeah. And

00:51:48.165 --> 00:51:50.805
<v Speaker 1>then you should be if it works

00:51:52.645 --> 00:51:53.365
<v Speaker 1>can

00:51:58.325 --> 00:51:59.605
<v Speaker 1>you click on the group?

00:52:01.029 --> 00:52:03.190
<v Speaker 0>It's not there, is it? No. The group

00:52:03.190 --> 00:52:06.069
<v Speaker 1>is there, but the clusters are not registered.

00:52:06.069 --> 00:52:07.990
<v Speaker 0>Oh, that's oh, okay. That's just the workspace

00:52:07.990 --> 00:52:09.990
<v Speaker 0>default. Got it. In the workspace default, you

00:52:09.990 --> 00:52:11.829
<v Speaker 1>have the group there, but we have

00:52:12.309 --> 00:52:15.335
<v Speaker 1>zero clusters. Why is that? I probably just

00:52:15.335 --> 00:52:17.494
<v Speaker 0>messed up. So I'm gonna see Can you

00:52:17.494 --> 00:52:19.015
<v Speaker 1>go back to maybe

00:52:19.015 --> 00:52:20.375
<v Speaker 1>no. Go back to Fleet. We can also

00:52:20.375 --> 00:52:21.895
<v Speaker 1>directly edit it from there

00:52:22.535 --> 00:52:23.815
<v Speaker 1>and should see it.

00:52:24.934 --> 00:52:26.454
<v Speaker 0>But if I was if I were debugging

00:52:26.454 --> 00:52:28.089
<v Speaker 0>this on my own, like, the way I

00:52:28.089 --> 00:52:29.210
<v Speaker 0>was I guess I would have to go

00:52:29.210 --> 00:52:30.890
<v Speaker 0>check the labels that I added to my

00:52:30.890 --> 00:52:32.490
<v Speaker 0>cluster here. Yeah.

00:52:34.810 --> 00:52:36.330
<v Speaker 0>If I had oh, that was in the

00:52:36.330 --> 00:52:37.530
<v Speaker 0>edit menu, wasn't And

00:52:39.210 --> 00:52:41.770
<v Speaker 0>then here I added labels. Annotations

00:52:42.035 --> 00:52:44.435
<v Speaker 1>and the first, there are the annotations and

00:52:44.435 --> 00:52:46.035
<v Speaker 1>the labels.

00:52:48.595 --> 00:52:50.595
<v Speaker 0>So did I not add

00:52:51.075 --> 00:52:52.675
<v Speaker 0>Okay. We'll add it that. I think I

00:52:52.675 --> 00:52:54.755
<v Speaker 1>did, but maybe let's yeah. Let's go back

00:52:54.755 --> 00:52:56.195
<v Speaker 1>to the fleet interface.

00:52:57.680 --> 00:52:59.200
<v Speaker 1>There we can definitely edit.

00:52:59.359 --> 00:53:01.680
<v Speaker 1>Excuse me? Interesting. I would have expected that

00:53:01.680 --> 00:53:03.039
<v Speaker 1>this will work because I think I saw

00:53:03.039 --> 00:53:03.520
<v Speaker 1>you

00:53:04.319 --> 00:53:06.079
<v Speaker 1>doing this. So if you go to clusters

00:53:06.799 --> 00:53:09.440
<v Speaker 0>Yep. Got it. And then you click on,

00:53:09.440 --> 00:53:10.240
<v Speaker 1>for example,

00:53:10.720 --> 00:53:14.105
<v Speaker 1>one the cluster also. Yep. And you can

00:53:14.105 --> 00:53:16.825
<v Speaker 1>now go in the context menu, edit it.

00:53:16.825 --> 00:53:18.665
<v Speaker 1>But it has a label group Ubuntu 20.

00:53:18.665 --> 00:53:19.945
<v Speaker 1>There you can also see it.

00:53:21.945 --> 00:53:24.105
<v Speaker 0>Oh, yeah. I do see it. Oh, but

00:53:25.230 --> 00:53:26.590
<v Speaker 1>Did we do a typo?

00:53:27.790 --> 00:53:30.270
<v Speaker 0>Probably. I mean, whenever something goes wrong, it's

00:53:30.270 --> 00:53:31.310
<v Speaker 0>generally my fault. So

00:53:32.430 --> 00:53:33.230
<v Speaker 1>Okay.

00:53:35.630 --> 00:53:37.070
<v Speaker 1>Or did we do this in the?

00:53:38.394 --> 00:53:40.954
<v Speaker 0>So if I click on my cluster group

00:53:40.954 --> 00:53:43.115
<v Speaker 0>and edit as form

00:53:44.154 --> 00:53:46.315
<v Speaker 0>oh, my rule's not there. Okay.

00:53:52.730 --> 00:53:54.570
<v Speaker 1>Can you edit this as YAML?

00:53:59.049 --> 00:54:01.130
<v Speaker 1>Oh, no. It's the it's match labels.

00:54:02.410 --> 00:54:03.050
<v Speaker 1>So

00:54:04.170 --> 00:54:04.970
<v Speaker 1>k.

00:54:05.049 --> 00:54:06.730
<v Speaker 1>Can you go to back to cluster groups?

00:54:07.695 --> 00:54:09.535
<v Speaker 1>Maybe it's just worked and we were too

00:54:09.535 --> 00:54:11.775
<v Speaker 1>fast also. So this is all declarative. Right?

00:54:11.775 --> 00:54:13.135
<v Speaker 0>I mean, I could have this in a

00:54:13.135 --> 00:54:15.375
<v Speaker 0>get repository and apply it to my cluster

00:54:15.375 --> 00:54:17.375
<v Speaker 0>without ever touching the UI. That's pretty cool.

00:54:17.375 --> 00:54:20.335
<v Speaker 0>I like that. Yeah. It's all good based.

00:54:20.335 --> 00:54:21.695
<v Speaker 1>Can you refresh maybe?

00:54:23.590 --> 00:54:24.390
<v Speaker 0>Yeah.

00:54:24.470 --> 00:54:26.070
<v Speaker 1>It definitely worked yesterday.

00:54:28.550 --> 00:54:29.750
<v Speaker 1>Okay. Interesting.

00:54:30.470 --> 00:54:32.630
<v Speaker 1>Okay. Let's not use cluster groups then and

00:54:32.630 --> 00:54:34.230
<v Speaker 1>just go forward.

00:54:34.790 --> 00:54:37.510
<v Speaker 1>What we can now do is we can

00:54:37.845 --> 00:54:38.725
<v Speaker 1>so

00:54:39.125 --> 00:54:40.885
<v Speaker 1>to deploy something with Fleet, it is a

00:54:40.885 --> 00:54:43.845
<v Speaker 1>GitOps based approach. So you have all your

00:54:44.005 --> 00:54:46.885
<v Speaker 1>resources, your applications in Git repositories,

00:54:47.045 --> 00:54:49.765
<v Speaker 1>and we can now add a Git repository

00:54:51.210 --> 00:54:52.330
<v Speaker 1>to Fleet.

00:54:52.890 --> 00:54:54.890
<v Speaker 1>Basically, is we have to give it a

00:54:54.890 --> 00:54:55.450
<v Speaker 1>name,

00:54:56.090 --> 00:54:58.730
<v Speaker 1>the URL to the repository.

00:55:01.610 --> 00:55:02.810
<v Speaker 0>This is a

00:55:03.050 --> 00:55:04.890
<v Speaker 0>repository that I prepared.

00:55:07.345 --> 00:55:08.945
<v Speaker 0>And, I mean, I I didn't really speak

00:55:08.945 --> 00:55:10.545
<v Speaker 0>to you about it. I just gone ahead

00:55:10.545 --> 00:55:12.145
<v Speaker 0>and added some YAML to it. So it's

00:55:12.145 --> 00:55:14.705
<v Speaker 0>just straight up Kubernetes manifest fails to deploy

00:55:14.705 --> 00:55:17.025
<v Speaker 0>Telegraph and and FlexDB. Okay.

00:55:17.425 --> 00:55:18.640
<v Speaker 1>Yep. Looks good.

00:55:19.280 --> 00:55:21.520
<v Speaker 1>Then you could set up authentication

00:55:21.520 --> 00:55:24.000
<v Speaker 1>if we had not a public repository.

00:55:24.000 --> 00:55:26.960
<v Speaker 1>It is an either username based or SHK

00:55:26.960 --> 00:55:28.800
<v Speaker 1>based. You can set up the branch that

00:55:28.800 --> 00:55:29.760
<v Speaker 1>should be watched,

00:55:30.640 --> 00:55:32.800
<v Speaker 1>and then we can now add multiple pass

00:55:32.800 --> 00:55:34.525
<v Speaker 1>to it. And

00:55:34.685 --> 00:55:35.485
<v Speaker 1>Because I applied

00:55:36.045 --> 00:55:37.485
<v Speaker 1>every pass will be

00:55:38.125 --> 00:55:39.405
<v Speaker 1>will be a bundle

00:55:39.725 --> 00:55:40.445
<v Speaker 1>in

00:55:42.365 --> 00:55:43.085
<v Speaker 0>Right.

00:55:43.245 --> 00:55:44.685
<v Speaker 0>So if I do enter For every bundle,

00:55:44.685 --> 00:55:47.005
<v Speaker 1>it's kind of like in one application. And

00:55:46.770 --> 00:55:48.610
<v Speaker 1>don't do I think you have to remove

00:55:48.610 --> 00:55:50.290
<v Speaker 1>the leading slash.

00:55:50.930 --> 00:55:53.250
<v Speaker 1>In my test yesterday, it only works without

00:55:53.250 --> 00:55:54.370
<v Speaker 1>the leading slash.

00:55:54.690 --> 00:55:56.370
<v Speaker 0>The example is wrong then. Yeah.

00:55:58.985 --> 00:56:00.745
<v Speaker 1>People are heavy at work, especially at the

00:56:00.745 --> 00:56:02.745
<v Speaker 1>UI. And maybe at a a second pass,

00:56:02.745 --> 00:56:04.505
<v Speaker 1>we could for the second application for to

00:56:04.505 --> 00:56:06.985
<v Speaker 1>it. I guess that that's important just to

00:56:06.985 --> 00:56:09.145
<v Speaker 0>remind people. We are running on a release

00:56:09.145 --> 00:56:12.265
<v Speaker 0>candidate version of 02/2005. So these little these

00:56:12.265 --> 00:56:13.800
<v Speaker 0>little things

00:56:13.800 --> 00:56:14.920
<v Speaker 0>are expected.

00:56:15.000 --> 00:56:17.480
<v Speaker 1>Okay. And then we can basically under deploy

00:56:17.480 --> 00:56:19.000
<v Speaker 1>to configure

00:56:19.240 --> 00:56:21.560
<v Speaker 1>which where this good repository should deploy to,

00:56:21.560 --> 00:56:24.680
<v Speaker 1>and you can choose your workspace.

00:56:24.680 --> 00:56:26.200
<v Speaker 1>And I think I know what happened with

00:56:26.200 --> 00:56:27.000
<v Speaker 1>the cluster group.

00:56:28.985 --> 00:56:31.945
<v Speaker 1>We added it to the wrong workspace.

00:56:33.145 --> 00:56:34.265
<v Speaker 1>Can

00:56:34.265 --> 00:56:37.065
<v Speaker 1>you maybe go open a new tab also

00:56:37.065 --> 00:56:38.345
<v Speaker 1>just to check?

00:56:39.065 --> 00:56:39.945
<v Speaker 1>And

00:56:40.505 --> 00:56:42.425
<v Speaker 1>can you delete this cluster group that we

00:56:42.425 --> 00:56:42.665
<v Speaker 1>added?

00:56:45.859 --> 00:56:46.580
<v Speaker 1>Yep.

00:56:47.539 --> 00:56:49.619
<v Speaker 1>And let's create a new one.

00:56:51.140 --> 00:56:52.500
<v Speaker 1>And in the workspace

00:56:52.740 --> 00:56:54.980
<v Speaker 1>yeah. You have to choose fleet default

00:56:56.465 --> 00:56:58.865
<v Speaker 1>because the clusters are in the workspace fleet

00:56:58.865 --> 00:57:01.105
<v Speaker 1>default and not in the workspace default.

00:57:02.065 --> 00:57:04.625
<v Speaker 0>If I just add my group

00:57:05.025 --> 00:57:08.385
<v Speaker 0>into 20 label and then hit create. Yeah.

00:57:09.300 --> 00:57:10.020
<v Speaker 1>Know we have

00:57:12.580 --> 00:57:13.540
<v Speaker 1>That's good.

00:57:14.260 --> 00:57:14.900
<v Speaker 1>So

00:57:15.220 --> 00:57:17.700
<v Speaker 1>we could say cluster group and yeah.

00:57:18.180 --> 00:57:20.740
<v Speaker 1>And this will then deploy should deploy this

00:57:20.740 --> 00:57:21.780
<v Speaker 1>to all clusters.

00:57:25.435 --> 00:57:27.915
<v Speaker 1>You can also click on the name, and

00:57:27.915 --> 00:57:30.475
<v Speaker 1>you should see the events popping in.

00:57:31.755 --> 00:57:32.955
<v Speaker 1>Maybe

00:57:32.955 --> 00:57:34.475
<v Speaker 1>we have to wait a bit or yep.

00:57:34.475 --> 00:57:35.755
<v Speaker 1>Now you see the

00:57:36.235 --> 00:57:39.020
<v Speaker 1>resources are being applied

00:57:40.300 --> 00:57:41.100
<v Speaker 1>in

00:57:41.500 --> 00:57:42.620
<v Speaker 1>the cluster.

00:57:44.540 --> 00:57:45.340
<v Speaker 0>Nice.

00:57:46.060 --> 00:57:47.980
<v Speaker 0>So if I pop over here,

00:57:49.660 --> 00:57:50.540
<v Speaker 0>pods

00:57:51.420 --> 00:57:52.220
<v Speaker 0>and watch,

00:57:53.775 --> 00:57:55.455
<v Speaker 0>And plug TV is running.

00:57:58.494 --> 00:58:00.175
<v Speaker 0>My telegraph is running.

00:58:01.055 --> 00:58:03.454
<v Speaker 0>My arm one failed. And that's annoying because

00:58:03.454 --> 00:58:04.895
<v Speaker 0>I checked that there was an arm in

00:58:04.895 --> 00:58:05.855
<v Speaker 0>the manifest.

00:58:07.214 --> 00:58:07.615
<v Speaker 0>Well,

00:58:09.660 --> 00:58:10.940
<v Speaker 0>but besides that,

00:58:11.420 --> 00:58:13.100
<v Speaker 0>my job is completed, which means I have

00:58:13.100 --> 00:58:13.980
<v Speaker 0>authentication.

00:58:14.140 --> 00:58:15.980
<v Speaker 1>So Is it maybe

00:58:17.340 --> 00:58:19.180
<v Speaker 1>I don't know if wrong version also

00:58:21.345 --> 00:58:23.345
<v Speaker 1>that we are using in the YAML or

00:58:23.985 --> 00:58:25.985
<v Speaker 0>So if I do Or can maybe just

00:58:25.985 --> 00:58:27.425
<v Speaker 1>try to debug it a bit and then

00:58:27.425 --> 00:58:29.185
<v Speaker 1>fix the error, push it to the repository,

00:58:29.185 --> 00:58:30.225
<v Speaker 1>and see it updating.

00:58:30.545 --> 00:58:32.305
<v Speaker 1>That will pass. So what I would normally

00:58:32.305 --> 00:58:34.705
<v Speaker 0>do is I could describe my my daemon

00:58:34.705 --> 00:58:36.700
<v Speaker 0>set here and check the image, but I

00:58:36.700 --> 00:58:38.300
<v Speaker 0>guess I can just use the UI now.

00:58:38.300 --> 00:58:39.500
<v Speaker 0>Right? Sure.

00:58:39.980 --> 00:58:41.500
<v Speaker 1>You if you go

00:58:42.140 --> 00:58:43.660
<v Speaker 1>back from the Fleet

00:58:43.980 --> 00:58:44.700
<v Speaker 1>UI,

00:58:44.780 --> 00:58:46.380
<v Speaker 1>you can choose no. You can either do

00:58:46.380 --> 00:58:48.380
<v Speaker 1>that. At the moment, they are both two

00:58:48.380 --> 00:58:49.900
<v Speaker 1>ways because we are in the phase of

00:58:49.900 --> 00:58:51.980
<v Speaker 1>transitioning to a more flexible UI.

00:58:52.060 --> 00:58:53.954
<v Speaker 1>So can go to the cluster explorer,

00:58:53.954 --> 00:58:56.675
<v Speaker 1>choose the correct cluster, like the cluster

00:58:56.994 --> 00:58:58.434
<v Speaker 1>that is correct, and then you can, for

00:58:58.434 --> 00:59:00.115
<v Speaker 1>example, go to stateful sets.

00:59:00.674 --> 00:59:01.234
<v Speaker 0>Mhmm.

00:59:01.795 --> 00:59:04.035
<v Speaker 0>Oh, daemon's daemon's set. Oh, daemon's sets. Sure.

00:59:04.035 --> 00:59:06.670
<v Speaker 1>Sorry. Yeah. Daemon's and go in there and

00:59:06.670 --> 00:59:09.870
<v Speaker 1>you see all your ports and events

00:59:10.750 --> 00:59:12.910
<v Speaker 1>and maybe click on the

00:59:13.470 --> 00:59:14.590
<v Speaker 1>trailing one.

00:59:14.910 --> 00:59:16.030
<v Speaker 0>So I think yes.

00:59:17.055 --> 00:59:20.175
<v Speaker 0>The Alpine one probably doesn't work on ARM.

00:59:20.175 --> 00:59:22.255
<v Speaker 1>Ah, that could be maybe we have to

00:59:22.255 --> 00:59:24.815
<v Speaker 1>use the non Alpine one. Right?

00:59:26.494 --> 00:59:28.015
<v Speaker 0>At telegraph

00:59:28.015 --> 00:59:28.575
<v Speaker 0>one

00:59:28.815 --> 00:59:31.055
<v Speaker 0>so one fourteen definitely has ARM.

00:59:35.180 --> 00:59:36.620
<v Speaker 0>Give that a second.

00:59:37.900 --> 00:59:39.500
<v Speaker 0>Yep. There's ARM 64,

00:59:39.500 --> 00:59:40.540
<v Speaker 0>but I'm assuming

00:59:40.700 --> 00:59:42.620
<v Speaker 0>maybe the Alpine one doesn't.

00:59:44.060 --> 00:59:46.395
<v Speaker 0>Let's let's just. Yeah. There we go. Yep.

00:59:46.395 --> 00:59:47.435
<v Speaker 0>It's okay.

00:59:47.835 --> 00:59:49.035
<v Speaker 1>So I But it's great that

00:59:50.795 --> 00:59:52.475
<v Speaker 0>Yeah. I was like, I I tested that

00:59:52.475 --> 00:59:54.075
<v Speaker 0>manifest. I know it's good.

00:59:55.995 --> 00:59:57.275
<v Speaker 0>So let's

00:59:57.720 --> 00:59:59.560
<v Speaker 0>take off the Alpine. So

00:59:59.800 --> 01:00:01.720
<v Speaker 0>I'm just gonna make some assumptions here. Please

01:00:01.720 --> 01:00:03.400
<v Speaker 0>feel free to correct me. If I just

01:00:03.400 --> 01:00:05.240
<v Speaker 0>push this to my GET repository,

01:00:05.240 --> 01:00:07.800
<v Speaker 0>is there a auto sync that runs or

01:00:07.800 --> 01:00:10.520
<v Speaker 0>do I need to configure that through Fleet?

01:00:10.600 --> 01:00:12.280
<v Speaker 1>Nope. Push should be fine.

01:00:13.655 --> 01:00:15.575
<v Speaker 1>That's your that's that's the whole goal of

01:00:15.575 --> 01:00:16.455
<v Speaker 1>it to

01:00:17.175 --> 01:00:19.655
<v Speaker 1>make this like a GitOps based approach to

01:00:19.655 --> 01:00:20.295
<v Speaker 1>manage.

01:00:20.695 --> 01:00:23.335
<v Speaker 1>Now we have two clusters. Imagine, again, you

01:00:23.335 --> 01:00:26.375
<v Speaker 1>have windmill park, and on every windmill, you

01:00:26.375 --> 01:00:26.695
<v Speaker 1>have

01:00:27.260 --> 01:00:29.020
<v Speaker 1>like, on a turbine, you have, like, a

01:00:29.020 --> 01:00:31.500
<v Speaker 1>small Kubernetes cluster and you have thousands of

01:00:31.500 --> 01:00:32.540
<v Speaker 1>them. You

01:00:32.780 --> 01:00:34.300
<v Speaker 1>wanna have such approach.

01:00:37.980 --> 01:00:40.300
<v Speaker 0>Alright. So I hope that works.

01:00:41.964 --> 01:00:44.285
<v Speaker 1>Because, actually, this is I had not tested

01:00:44.285 --> 01:00:44.925
<v Speaker 1>that.

01:00:45.244 --> 01:00:46.204
<v Speaker 1>Maybe you can

01:00:46.845 --> 01:00:49.165
<v Speaker 1>you should be able to follow it in

01:00:49.165 --> 01:00:50.205
<v Speaker 1>the Fleet UI.

01:00:51.964 --> 01:00:53.805
<v Speaker 1>Of course, it will also update here at

01:00:53.805 --> 01:00:54.525
<v Speaker 1>some point,

01:00:54.925 --> 01:00:58.200
<v Speaker 1>but maybe the fleet are out of sync,

01:00:58.200 --> 01:01:00.440
<v Speaker 1>and it should now start synchronizing.

01:01:03.080 --> 01:01:05.240
<v Speaker 1>Because it saw okay. There is a new

01:01:05.240 --> 01:01:05.640
<v Speaker 1>commit.

01:01:08.115 --> 01:01:08.995
<v Speaker 1>And

01:01:09.395 --> 01:01:11.155
<v Speaker 1>the daemon I also saw that the daemon

01:01:11.155 --> 01:01:12.675
<v Speaker 1>sets changed.

01:01:13.715 --> 01:01:14.355
<v Speaker 1>Okay.

01:01:24.250 --> 01:01:25.210
<v Speaker 0>Excuse me.

01:01:26.970 --> 01:01:27.609
<v Speaker 1>K.

01:01:29.210 --> 01:01:31.690
<v Speaker 0>Oh, there we go. Modified. Modified.

01:01:34.410 --> 01:01:36.465
<v Speaker 0>No longer out of sync. So if I

01:01:36.465 --> 01:01:37.345
<v Speaker 0>go to

01:01:37.665 --> 01:01:39.265
<v Speaker 0>cluster explorer,

01:01:40.945 --> 01:01:42.385
<v Speaker 0>daemon sets,

01:01:43.745 --> 01:01:45.665
<v Speaker 0>we have 303. It worked. So

01:01:47.825 --> 01:01:49.105
<v Speaker 0>that means I

01:01:49.425 --> 01:01:51.105
<v Speaker 0>oh, I'm not on my machine.

01:01:53.400 --> 01:01:54.280
<v Speaker 0>Let's

01:01:54.599 --> 01:01:55.720
<v Speaker 0>port forward.

01:01:58.200 --> 01:02:00.200
<v Speaker 0>Oh, I'm gonna need the kube config, aren't

01:02:00.200 --> 01:02:00.680
<v Speaker 0>I?

01:02:02.840 --> 01:02:04.840
<v Speaker 1>Yeah. You could just SCP it or pull

01:02:04.840 --> 01:02:05.000
<v Speaker 1>it.

01:02:05.645 --> 01:02:07.165
<v Speaker 1>Or you can download one.

01:02:07.484 --> 01:02:10.045
<v Speaker 1>If you go back to the cluster manager,

01:02:12.605 --> 01:02:14.685
<v Speaker 1>you could go on cube config file and

01:02:14.685 --> 01:02:16.525
<v Speaker 1>quickly copy it or

01:02:16.845 --> 01:02:19.340
<v Speaker 1>download it. I'm gonna shut this down in,

01:02:19.340 --> 01:02:21.980
<v Speaker 0>three seconds. Oh, go Not quick. Download link

01:02:21.980 --> 01:02:23.980
<v Speaker 1>if you wanted to have that. Okay.

01:02:24.540 --> 01:02:25.500
<v Speaker 0>Okay.

01:02:25.500 --> 01:02:27.180
<v Speaker 0>So call this

01:02:27.340 --> 01:02:27.980
<v Speaker 0>cube

01:02:28.220 --> 01:02:28.620
<v Speaker 0>config.

01:02:30.265 --> 01:02:31.465
<v Speaker 0>And if I

01:02:32.425 --> 01:02:34.345
<v Speaker 0>grab my terminal here okay. So we can

01:02:34.345 --> 01:02:35.385
<v Speaker 0>do export

01:02:35.385 --> 01:02:37.705
<v Speaker 0>cube config equals

01:02:39.465 --> 01:02:40.505
<v Speaker 0>cube config.

01:02:42.750 --> 01:02:44.270
<v Speaker 0>That's not the right directory.

01:02:45.310 --> 01:02:47.390
<v Speaker 0>Where did I save you to? Oh, it's

01:02:47.390 --> 01:02:49.150
<v Speaker 0>M Site Telegraph D S. Okay.

01:02:52.110 --> 01:02:54.750
<v Speaker 0>That environment variable should still work. So in

01:02:54.750 --> 01:02:56.510
<v Speaker 0>theory, I can run get notes.

01:03:00.125 --> 01:03:01.005
<v Speaker 0>Nice.

01:03:01.165 --> 01:03:02.285
<v Speaker 0>Can run

01:03:03.005 --> 01:03:03.485
<v Speaker 0>yeah.

01:03:04.445 --> 01:03:06.605
<v Speaker 0>I have my aliases now too. So get

01:03:06.605 --> 01:03:07.485
<v Speaker 0>pods,

01:03:08.205 --> 01:03:10.445
<v Speaker 0>port forward, and I wanna log in to

01:03:10.445 --> 01:03:11.245
<v Speaker 0>InboxDB.

01:03:11.245 --> 01:03:12.685
<v Speaker 0>I wanna see those metrics

01:03:12.685 --> 01:03:13.165
<v Speaker 0>working.

01:03:15.170 --> 01:03:16.609
<v Speaker 1>And also to just

01:03:16.849 --> 01:03:17.890
<v Speaker 1>reiterate,

01:03:17.890 --> 01:03:20.369
<v Speaker 1>you now have only the permissions that

01:03:20.609 --> 01:03:23.329
<v Speaker 1>you were assigned in Rancher. So the whole

01:03:23.410 --> 01:03:26.529
<v Speaker 1>if you had LDAP or active directory authentication,

01:03:26.529 --> 01:03:28.130
<v Speaker 1>that will be would be all now reflected.

01:03:29.885 --> 01:03:31.405
<v Speaker 0>Okay. Excellent.

01:03:31.725 --> 01:03:34.125
<v Speaker 0>I like the authentication stuff being made easy

01:03:34.125 --> 01:03:34.925
<v Speaker 0>because

01:03:35.325 --> 01:03:38.285
<v Speaker 0>I'm very bad for just letting that slide

01:03:38.285 --> 01:03:40.605
<v Speaker 0>for convenience. So Yeah.

01:03:42.130 --> 01:03:44.530
<v Speaker 0>There's one thing I need. So I create

01:03:44.530 --> 01:03:46.369
<v Speaker 0>a secret in this, and I can't remember

01:03:46.369 --> 01:03:48.849
<v Speaker 0>what the password is. So let's just decode

01:03:48.849 --> 01:03:51.730
<v Speaker 0>that. You can also just maybe

01:03:51.730 --> 01:03:53.170
<v Speaker 1>a trick go to the Rancher UI and

01:03:53.170 --> 01:03:53.810
<v Speaker 1>copy it from there.

01:03:54.535 --> 01:03:55.575
<v Speaker 0>Oh, nice.

01:03:55.815 --> 01:03:58.215
<v Speaker 1>If you go, for example, to projects and

01:03:58.215 --> 01:04:00.375
<v Speaker 1>namespaces this is one way.

01:04:00.855 --> 01:04:01.975
<v Speaker 1>And now

01:04:02.535 --> 01:04:04.455
<v Speaker 1>you have it in it was in in

01:04:04.455 --> 01:04:06.135
<v Speaker 1>the default namespace created?

01:04:06.135 --> 01:04:07.815
<v Speaker 0>Yes. You create in the default namespace. And

01:04:07.815 --> 01:04:09.095
<v Speaker 1>click on the project default.

01:04:10.780 --> 01:04:13.180
<v Speaker 1>Yeah. And then on the resources

01:04:13.660 --> 01:04:14.700
<v Speaker 1>in the top,

01:04:15.260 --> 01:04:16.380
<v Speaker 1>you have secrets.

01:04:17.660 --> 01:04:18.460
<v Speaker 1>And

01:04:18.460 --> 01:04:20.700
<v Speaker 1>yeah. There you have and then you can

01:04:20.700 --> 01:04:22.140
<v Speaker 1>just double click

01:04:23.575 --> 01:04:24.455
<v Speaker 1>on this,

01:04:24.935 --> 01:04:26.455
<v Speaker 1>or you can just copy it now from

01:04:26.455 --> 01:04:28.135
<v Speaker 1>there. I think if you copy it, you

01:04:28.135 --> 01:04:29.735
<v Speaker 1>have it in clear text.

01:04:31.415 --> 01:04:33.575
<v Speaker 0>With some sort of what? Voodoo?

01:04:36.135 --> 01:04:36.775
<v Speaker 0>Let's see.

01:04:40.109 --> 01:04:41.470
<v Speaker 0>No. That didn't work. No.

01:04:42.030 --> 01:04:42.990
<v Speaker 1>Okay.

01:04:42.990 --> 01:04:45.069
<v Speaker 1>Maybe then just click on the upper right

01:04:45.069 --> 01:04:45.790
<v Speaker 1>on edit.

01:04:46.589 --> 01:04:48.349
<v Speaker 0>Well, will the cluster screen will give me

01:04:48.349 --> 01:04:50.270
<v Speaker 0>a nicer view than you want? I don't

01:04:50.270 --> 01:04:51.630
<v Speaker 1>actually don't know. We can check.

01:04:53.155 --> 01:04:54.595
<v Speaker 1>But you can definitely

01:04:54.835 --> 01:04:56.595
<v Speaker 1>go to it and then click There we

01:04:56.595 --> 01:04:58.355
<v Speaker 0>go. Oh, yeah. It shows us in clear

01:04:58.355 --> 01:04:59.235
<v Speaker 1>text. Yay.

01:05:02.275 --> 01:05:03.075
<v Speaker 1>Okay.

01:05:04.035 --> 01:05:05.555
<v Speaker 0>I had explorer.

01:05:05.635 --> 01:05:06.915
<v Speaker 0>Ah, there we go.

01:05:07.635 --> 01:05:08.195
<v Speaker 0>Look at that.

01:05:14.090 --> 01:05:14.810
<v Speaker 0>Maybe?

01:05:18.170 --> 01:05:20.010
<v Speaker 0>There we go. Alright. Let's just drop that

01:05:20.010 --> 01:05:21.210
<v Speaker 0>down to five minutes.

01:05:22.674 --> 01:05:24.115
<v Speaker 0>I wonder why that's

01:05:24.515 --> 01:05:26.595
<v Speaker 0>slow coming down the wire. I guess it's

01:05:26.595 --> 01:05:27.315
<v Speaker 0>not important.

01:05:27.795 --> 01:05:29.795
<v Speaker 0>Alright. I have my metrics. Nice.

01:05:30.035 --> 01:05:31.075
<v Speaker 0>So that's

01:05:31.234 --> 01:05:32.755
<v Speaker 0>taken a GET repository

01:05:33.075 --> 01:05:35.960
<v Speaker 0>with my manifest, my applications in it, deployed

01:05:35.960 --> 01:05:38.119
<v Speaker 0>it to the cluster based on my

01:05:38.680 --> 01:05:41.480
<v Speaker 0>cluster group that we configured through labels.

01:05:41.960 --> 01:05:44.200
<v Speaker 0>I mean, I guess, my question is I

01:05:44.200 --> 01:05:44.920
<v Speaker 0>can just

01:05:45.319 --> 01:05:46.840
<v Speaker 0>add extra

01:05:47.685 --> 01:05:49.125
<v Speaker 0>if I added that label to my other

01:05:49.125 --> 01:05:50.805
<v Speaker 0>customers, that workload would just be shipped out

01:05:50.805 --> 01:05:53.125
<v Speaker 0>to them all. Right? Yeah. Sure. Maybe we

01:05:53.125 --> 01:05:54.325
<v Speaker 1>can even try this.

01:05:54.645 --> 01:05:58.485
<v Speaker 1>Let's maybe add a certain an additional cluster

01:05:58.645 --> 01:06:00.645
<v Speaker 1>and see that it's also rolled out there.

01:06:02.600 --> 01:06:05.240
<v Speaker 1>So maybe if you go to if you

01:06:05.240 --> 01:06:06.920
<v Speaker 1>go to cluster manager again, and you have

01:06:06.920 --> 01:06:08.360
<v Speaker 1>one we have left. Right?

01:06:11.640 --> 01:06:12.200
<v Speaker 1>I think.

01:06:13.125 --> 01:06:14.965
<v Speaker 0>So we oh, no. I think we deployed

01:06:14.965 --> 01:06:16.485
<v Speaker 0>to H E and Rancher 2. It's the

01:06:16.485 --> 01:06:17.845
<v Speaker 0>same labels there, didn't we?

01:06:19.445 --> 01:06:21.845
<v Speaker 1>So you wanted to see now that if

01:06:21.845 --> 01:06:23.605
<v Speaker 1>you added an additional cluster

01:06:23.765 --> 01:06:25.685
<v Speaker 1>to it, that it also deploys it on

01:06:25.685 --> 01:06:26.485
<v Speaker 1>there or

01:06:26.820 --> 01:06:29.140
<v Speaker 0>Yeah. So is Yep. I mean, it's it's

01:06:29.140 --> 01:06:31.380
<v Speaker 0>already done it. Like, both my both

01:06:31.380 --> 01:06:34.020
<v Speaker 0>my clusters are running Telegraph and then FlexDB.

01:06:34.020 --> 01:06:35.780
<v Speaker 1>I mean, if you added now an additional

01:06:35.780 --> 01:06:37.940
<v Speaker 1>cluster and also gave it this label so

01:06:37.940 --> 01:06:39.860
<v Speaker 1>that that actually met matches this

01:06:40.100 --> 01:06:42.665
<v Speaker 1>this cluster group, it also would Fleet would

01:06:42.665 --> 01:06:44.265
<v Speaker 1>directly add this new cluster to the cluster

01:06:44.265 --> 01:06:45.785
<v Speaker 1>group and also deploy it there.

01:06:46.105 --> 01:06:48.025
<v Speaker 1>If you want, we can demo that.

01:06:48.905 --> 01:06:50.825
<v Speaker 0>Yeah. Sure. So what's the what's what's step

01:06:50.825 --> 01:06:53.145
<v Speaker 0>on there? So we would add an additional

01:06:53.145 --> 01:06:54.985
<v Speaker 1>k three s cluster, create a new one.

01:06:55.619 --> 01:06:57.220
<v Speaker 1>We I think we have one VM left.

01:06:57.220 --> 01:07:00.019
<v Speaker 1>Right? Alright. We have Rancher five, which I

01:07:00.019 --> 01:07:02.579
<v Speaker 0>don't believe we're using it. Yep. So I

01:07:02.579 --> 01:07:05.700
<v Speaker 0>just SSH on there, execute our lovely little

01:07:05.700 --> 01:07:07.059
<v Speaker 0>curl command. Yep.

01:07:10.005 --> 01:07:12.724
<v Speaker 0>Let me just grab that from over here.

01:07:17.605 --> 01:07:19.684
<v Speaker 0>We can just use a default one. Right?

01:07:19.684 --> 01:07:20.405
<v Speaker 1>Yeah. Sure.

01:07:21.605 --> 01:07:23.525
<v Speaker 0>I mean, let's just stick one nineteen on

01:07:23.525 --> 01:07:23.765
<v Speaker 0>it.

01:07:26.910 --> 01:07:29.230
<v Speaker 0>And then to add a cluster, I come

01:07:29.230 --> 01:07:30.750
<v Speaker 0>to the UI.

01:07:30.750 --> 01:07:32.350
<v Speaker 0>I click cluster manager.

01:07:32.350 --> 01:07:34.110
<v Speaker 0>I click add cluster.

01:07:34.190 --> 01:07:35.710
<v Speaker 0>I'm getting the hang of this.

01:07:37.070 --> 01:07:37.950
<v Speaker 0>Global

01:07:38.510 --> 01:07:39.230
<v Speaker 0>at

01:07:39.630 --> 01:07:39.950
<v Speaker 0>see,

01:07:40.785 --> 01:07:42.705
<v Speaker 0>this is it's just too easy.

01:07:44.944 --> 01:07:47.665
<v Speaker 1>Yeah. Also, direct stop directly at the

01:07:48.464 --> 01:07:51.664
<v Speaker 1>the group label. Yeah. Open to 20.

01:07:54.880 --> 01:07:57.680
<v Speaker 0>We grab this this command here.

01:07:59.280 --> 01:08:01.200
<v Speaker 0>And then I'm gonna pop over here

01:08:01.360 --> 01:08:02.160
<v Speaker 0>and

01:08:03.280 --> 01:08:04.960
<v Speaker 0>we're now in a pending state. So what's

01:08:04.960 --> 01:08:07.280
<v Speaker 0>gonna happen here is that's gonna bring

01:08:07.280 --> 01:08:09.760
<v Speaker 0>this cluster under management by Rancher.

01:08:10.055 --> 01:08:12.055
<v Speaker 0>Fleet is gonna detect the label, add it

01:08:12.055 --> 01:08:14.215
<v Speaker 0>to our cluster group, and then deploy or

01:08:14.215 --> 01:08:16.935
<v Speaker 0>get ops workflow to the cluster. That's that's

01:08:16.935 --> 01:08:18.535
<v Speaker 0>that's the magic you're telling me about to

01:08:18.535 --> 01:08:18.774
<v Speaker 0>happen. Hopefully.

01:08:22.230 --> 01:08:24.310
<v Speaker 0>Alright. So I don't have access to cluster

01:08:24.310 --> 01:08:26.550
<v Speaker 0>explorer yet. It's still importing. Let's just give

01:08:26.550 --> 01:08:27.830
<v Speaker 0>that a few minutes.

01:08:28.070 --> 01:08:29.910
<v Speaker 0>Yep. Let's see what we have on the

01:08:29.910 --> 01:08:30.310
<v Speaker 0>comments.

01:08:34.814 --> 01:08:38.175
<v Speaker 0>So we got a tada from Jason. Yeah.

01:08:38.175 --> 01:08:39.935
<v Speaker 0>I was very happy that it worked too.

01:08:39.935 --> 01:08:40.894
<v Speaker 0>That was awesome.

01:08:41.215 --> 01:08:43.455
<v Speaker 0>John says the stream looked great. Thank you,

01:08:43.455 --> 01:08:44.654
<v Speaker 0>John. Appreciate it.

01:08:44.895 --> 01:08:47.295
<v Speaker 0>And Sam saying here comes the influx the

01:08:47.295 --> 01:08:47.774
<v Speaker 0>expert.

01:08:48.109 --> 01:08:50.029
<v Speaker 0>Yeah. Whenever you find them, let me know.

01:08:50.029 --> 01:08:51.709
<v Speaker 0>I don't know where that person is.

01:08:53.389 --> 01:08:55.550
<v Speaker 0>And we have our cluster. We have a

01:08:55.550 --> 01:08:56.989
<v Speaker 0>cluster explorer.

01:08:57.710 --> 01:08:59.710
<v Speaker 0>I'm excited to the human set already.

01:09:01.345 --> 01:09:03.185
<v Speaker 0>Yep. We've got our get ups here.

01:09:04.145 --> 01:09:05.425
<v Speaker 0>If I go back

01:09:05.905 --> 01:09:07.904
<v Speaker 0>is it there? It is.

01:09:08.465 --> 01:09:09.104
<v Speaker 0>Yep.

01:09:10.385 --> 01:09:11.905
<v Speaker 0>Too easy, man. Too easy.

01:09:12.600 --> 01:09:14.600
<v Speaker 1>Maybe I sent you another link in the

01:09:14.600 --> 01:09:17.240
<v Speaker 1>private chat that would be maybe nice to

01:09:17.240 --> 01:09:20.120
<v Speaker 1>just show the documentation page once for Fleet.

01:09:21.880 --> 01:09:23.319
<v Speaker 0>Let's do that.

01:09:24.359 --> 01:09:27.160
<v Speaker 1>Because what's also nice about it that

01:09:26.935 --> 01:09:29.975
<v Speaker 1>for these git repositories, you cannot only put

01:09:29.975 --> 01:09:32.455
<v Speaker 1>just standard Kubernetes YAML in there. It also

01:09:32.455 --> 01:09:35.415
<v Speaker 1>understands Helm chart. It understands customize.

01:09:35.575 --> 01:09:37.814
<v Speaker 1>And there is even, like, this fleet YAML

01:09:37.814 --> 01:09:39.949
<v Speaker 1>file that you can add to it to

01:09:39.949 --> 01:09:43.229
<v Speaker 1>make them customization based on cluster labels.

01:09:43.389 --> 01:09:44.829
<v Speaker 1>So you can say you have

01:09:45.630 --> 01:09:48.029
<v Speaker 1>you deploy this to the whole cluster group,

01:09:48.029 --> 01:09:50.749
<v Speaker 1>but on all clusters that are labeled

01:09:50.830 --> 01:09:52.349
<v Speaker 1>with something production,

01:09:52.510 --> 01:09:54.189
<v Speaker 1>you configure it slightly differently

01:09:55.355 --> 01:09:55.995
<v Speaker 1>to

01:09:56.875 --> 01:09:59.275
<v Speaker 1>add to also have these use cases. So

01:09:59.275 --> 01:10:00.635
<v Speaker 1>it's actually very powerful.

01:10:00.955 --> 01:10:02.955
<v Speaker 1>So if you scroll a bit down, you

01:10:02.955 --> 01:10:05.275
<v Speaker 1>can have a look at the fleet YAML,

01:10:05.435 --> 01:10:06.795
<v Speaker 1>you can see you can pass all kinds

01:10:06.795 --> 01:10:08.555
<v Speaker 1>of helm values in it, and then there

01:10:08.555 --> 01:10:09.630
<v Speaker 1>should be also

01:10:10.030 --> 01:10:12.590
<v Speaker 1>below this customization.

01:10:16.510 --> 01:10:19.309
<v Speaker 1>Yeah. These target customizations, you could say, okay.

01:10:20.110 --> 01:10:23.665
<v Speaker 1>For these targets, please use these overlays and

01:10:23.665 --> 01:10:26.625
<v Speaker 1>do different helm, values for it. Yeah.

01:10:27.985 --> 01:10:29.105
<v Speaker 1>For the whole bundle.

01:10:29.585 --> 01:10:31.744
<v Speaker 1>It's actually very very flexible.

01:10:32.465 --> 01:10:34.390
<v Speaker 1>And if you scroll up a bit, it's

01:10:34.390 --> 01:10:35.430
<v Speaker 1>also interesting.

01:10:35.910 --> 01:10:38.630
<v Speaker 1>You can also configure a rollout strategy for

01:10:38.630 --> 01:10:39.670
<v Speaker 1>all the clusters.

01:10:41.510 --> 01:10:43.830
<v Speaker 1>So this rollout strategy is not for the

01:10:43.830 --> 01:10:45.990
<v Speaker 1>deployments or so. It's actually how many clusters

01:10:45.990 --> 01:10:48.710
<v Speaker 1>should be updated in parallel and how many

01:10:48.710 --> 01:10:51.435
<v Speaker 1>should be max unavailable or something like this.

01:10:51.435 --> 01:10:53.515
<v Speaker 1>And unavailable means it's currently being updated.

01:10:54.075 --> 01:10:57.195
<v Speaker 0>So it's an actual a gradual rollout of

01:10:57.195 --> 01:10:59.835
<v Speaker 0>my workloads on a cluster basis. So roll

01:10:59.835 --> 01:11:01.595
<v Speaker 0>out to two of my clusters before I

01:11:01.595 --> 01:11:03.115
<v Speaker 0>send out to two all of my cluster.

01:11:03.115 --> 01:11:04.475
<v Speaker 0>Yep. And that works for

01:11:05.090 --> 01:11:07.730
<v Speaker 0>the modifications that I make to so when

01:11:07.730 --> 01:11:10.050
<v Speaker 0>I modify my Gelb thing, it's gonna test

01:11:10.050 --> 01:11:12.050
<v Speaker 0>it in one cluster then start rolling out.

01:11:12.050 --> 01:11:12.929
<v Speaker 0>Right? Yep.

01:11:13.250 --> 01:11:15.250
<v Speaker 1>Of course, what it's doing in the end,

01:11:15.250 --> 01:11:18.530
<v Speaker 1>it's doing helm upgrade, kubectl apply, or the

01:11:18.530 --> 01:11:19.489
<v Speaker 1>equivalence for this.

01:11:20.525 --> 01:11:22.765
<v Speaker 1>There is not something in that then that's

01:11:22.765 --> 01:11:24.205
<v Speaker 1>kind of like load testing,

01:11:24.365 --> 01:11:26.525
<v Speaker 1>but it's just checking that the applications are

01:11:26.525 --> 01:11:28.685
<v Speaker 1>coming up. But if you have proper

01:11:29.725 --> 01:11:32.205
<v Speaker 1>readiness probes and live disk probes, that would

01:11:32.205 --> 01:11:32.765
<v Speaker 1>be reflected.

01:11:35.080 --> 01:11:38.280
<v Speaker 0>It's pretty impressive. I gotta say, like Yep.

01:11:38.360 --> 01:11:39.400
<v Speaker 0>What's the

01:11:40.120 --> 01:11:41.880
<v Speaker 0>I mean, the golden question here is is

01:11:41.880 --> 01:11:43.400
<v Speaker 0>Fleet's pretty new. Right?

01:11:44.360 --> 01:11:44.760
<v Speaker 0>So

01:11:45.595 --> 01:11:47.275
<v Speaker 0>have I should I be rolling this out

01:11:47.275 --> 01:11:49.435
<v Speaker 0>to production? Do would you advise that we

01:11:49.435 --> 01:11:51.115
<v Speaker 0>just keep an eye on the project? I

01:11:51.115 --> 01:11:52.795
<v Speaker 0>mean, what what's the consensus on that at

01:11:52.795 --> 01:11:53.435
<v Speaker 0>the moment?

01:11:54.075 --> 01:11:57.195
<v Speaker 1>So it's gonna be generally available and under

01:11:57.195 --> 01:11:59.355
<v Speaker 1>enterprise support by us

01:11:59.595 --> 01:12:01.670
<v Speaker 1>with Rancher two dot five. So

01:12:02.310 --> 01:12:03.030
<v Speaker 1>the

01:12:03.110 --> 01:12:05.350
<v Speaker 1>two dot two five o release is

01:12:06.150 --> 01:12:07.510
<v Speaker 1>scheduled next week,

01:12:07.830 --> 01:12:09.990
<v Speaker 1>and then a reset is gonna be marked

01:12:09.990 --> 01:12:11.670
<v Speaker 1>as stable. So

01:12:12.470 --> 01:12:14.550
<v Speaker 1>that usually takes, like, two five one or

01:12:14.550 --> 01:12:16.715
<v Speaker 1>so until we say it's not the latest

01:12:16.715 --> 01:12:18.954
<v Speaker 1>release anymore, but one that we consider stable

01:12:18.954 --> 01:12:21.354
<v Speaker 1>and that also the community tested before.

01:12:21.434 --> 01:12:22.314
<v Speaker 1>And yep.

01:12:22.715 --> 01:12:24.474
<v Speaker 1>Then you can definitely

01:12:25.355 --> 01:12:26.235
<v Speaker 1>use it.

01:12:26.875 --> 01:12:29.355
<v Speaker 0>Awesome. So we have a a question here

01:12:29.355 --> 01:12:31.500
<v Speaker 0>from Jason. Jason is asking if there are

01:12:31.500 --> 01:12:32.459
<v Speaker 0>any hooks.

01:12:32.860 --> 01:12:35.020
<v Speaker 0>I'm assuming Jason is asking if there's, like,

01:12:35.020 --> 01:12:37.020
<v Speaker 0>a pre install, post install hook similar to

01:12:37.020 --> 01:12:38.219
<v Speaker 0>what Helm offers.

01:12:38.540 --> 01:12:40.780
<v Speaker 1>The Helm hooks definitely will work. So if

01:12:40.780 --> 01:12:42.699
<v Speaker 1>you use the Helm hooks in a Helm

01:12:42.699 --> 01:12:44.699
<v Speaker 1>chart, these are gonna be executed.

01:12:46.155 --> 01:12:49.195
<v Speaker 1>For non Helm resources,

01:12:49.755 --> 01:12:51.355
<v Speaker 1>that's actually a really good question.

01:12:54.395 --> 01:12:55.675
<v Speaker 1>Actually

01:12:56.475 --> 01:12:56.795
<v Speaker 1>okay.

01:12:57.630 --> 01:13:00.830
<v Speaker 1>Sayam says it's yes. It's possible. Okay. That's

01:13:00.830 --> 01:13:01.630
<v Speaker 1>all there are.

01:13:02.270 --> 01:13:03.790
<v Speaker 0>If you have a a link to any

01:13:03.790 --> 01:13:05.710
<v Speaker 0>documentation on that, Sayam, if you wanna drop

01:13:05.710 --> 01:13:07.630
<v Speaker 0>that in a chat, we'll pop that up.

01:13:07.949 --> 01:13:09.870
<v Speaker 0>Yep. So it sounds like that is possible,

01:13:09.870 --> 01:13:11.630
<v Speaker 0>Jason, and we'll try and get you more

01:13:11.630 --> 01:13:11.949
<v Speaker 0>information.

01:13:14.045 --> 01:13:15.724
<v Speaker 0>They have another question here.

01:13:16.445 --> 01:13:19.885
<v Speaker 0>So I'm Eric is asking Fleet without Rancher.

01:13:19.885 --> 01:13:20.925
<v Speaker 0>Is that possible?

01:13:21.645 --> 01:13:24.045
<v Speaker 1>Yes. So Fleet is a standalone project. You

01:13:24.045 --> 01:13:25.005
<v Speaker 1>can use it on your own.

01:13:26.400 --> 01:13:28.160
<v Speaker 1>Just for the Rancher Ads, it's like the

01:13:28.160 --> 01:13:30.560
<v Speaker 1>nice integration with the UI. So the UI

01:13:30.560 --> 01:13:33.280
<v Speaker 1>is not available as a standalone UI,

01:13:33.600 --> 01:13:36.480
<v Speaker 1>but then you could just use Rancher for

01:13:36.480 --> 01:13:38.535
<v Speaker 1>that. It is also open source. But if

01:13:38.535 --> 01:13:39.815
<v Speaker 1>you don't wanna use it, you can also

01:13:39.815 --> 01:13:41.335
<v Speaker 1>just use Fleet on your own in any

01:13:41.335 --> 01:13:43.575
<v Speaker 1>kind of Kubernetes clusters. So if I can

01:13:43.575 --> 01:13:46.535
<v Speaker 0>take any vanilla Kubernetes cluster, run the Fleet

01:13:46.535 --> 01:13:48.855
<v Speaker 0>controller, point it to my Git repositories, and

01:13:48.855 --> 01:13:50.855
<v Speaker 0>get that same GitOps workflow without

01:13:51.310 --> 01:13:53.789
<v Speaker 0>anything else. Yeah. You also quickly showed it

01:13:53.949 --> 01:13:55.949
<v Speaker 1>that in the end, everything that Rancher does

01:13:55.949 --> 01:13:59.630
<v Speaker 1>is just creating Kubernetes resources for Fleet. Right?

01:14:01.390 --> 01:14:03.229
<v Speaker 0>So can I just do get

01:14:04.705 --> 01:14:06.625
<v Speaker 1>They are in the local cluster? So in

01:14:06.625 --> 01:14:08.784
<v Speaker 1>the first Rancher cluster, you can see.

01:14:09.425 --> 01:14:10.864
<v Speaker 0>Oh, that was that was too many tabs

01:14:10.864 --> 01:14:14.945
<v Speaker 0>ago. Come on. Okay. Let's

01:14:14.945 --> 01:14:16.625
<v Speaker 0>jump back on that issue. Yeah.

01:14:18.850 --> 01:14:21.570
<v Speaker 1>So for Fleet, there are customer source definitions

01:14:21.570 --> 01:14:23.329
<v Speaker 1>for git repos and

01:14:23.489 --> 01:14:25.969
<v Speaker 1>everything. So can you could say kubectl

01:14:25.969 --> 01:14:28.050
<v Speaker 1>get, I guess, git repos also.

01:14:31.965 --> 01:14:33.885
<v Speaker 0>There we go. So I can do a

01:14:33.885 --> 01:14:35.965
<v Speaker 0>kubectl get repos.

01:14:35.965 --> 01:14:37.645
<v Speaker 1>I think it's git repos.

01:14:38.845 --> 01:14:40.365
<v Speaker 1>Or I think there also should be a

01:14:40.365 --> 01:14:42.685
<v Speaker 1>cluster. And then in all namespaces, you can

01:14:42.685 --> 01:14:44.445
<v Speaker 1>see, yep, there is this one git repository.

01:14:45.170 --> 01:14:47.170
<v Speaker 1>So you it's in the end Kubernetes resources

01:14:47.170 --> 01:14:48.770
<v Speaker 1>that you can create in any cluster.

01:14:49.010 --> 01:14:51.650
<v Speaker 0>So my provisioning step for launching a new

01:14:51.650 --> 01:14:54.370
<v Speaker 0>Kubernetes cluster with Fleet is to deploy the

01:14:54.370 --> 01:14:55.570
<v Speaker 0>Fleet operator,

01:14:55.570 --> 01:14:58.210
<v Speaker 0>add the CRDs to find my repositories,

01:14:58.210 --> 01:14:59.905
<v Speaker 0>and just let it let it do the

01:14:59.905 --> 01:15:02.065
<v Speaker 0>same. That's great. In the end, the UI

01:15:02.065 --> 01:15:03.985
<v Speaker 1>is nice and fine, but you probably will

01:15:03.985 --> 01:15:05.985
<v Speaker 1>not click this together but have if you

01:15:05.985 --> 01:15:07.585
<v Speaker 1>manage thousands of classes also have kind of

01:15:07.585 --> 01:15:09.824
<v Speaker 1>like a pipeline for that and automation for

01:15:09.824 --> 01:15:10.224
<v Speaker 1>that.

01:15:11.025 --> 01:15:12.705
<v Speaker 0>Excellent. I like it. It's very cool.

01:15:14.860 --> 01:15:16.780
<v Speaker 0>I think there's been a an awful lot

01:15:16.780 --> 01:15:18.460
<v Speaker 0>to take in here today, but like I

01:15:18.460 --> 01:15:20.619
<v Speaker 0>said, I'm very impressed by what we've seen.

01:15:20.620 --> 01:15:22.460
<v Speaker 0>I'm gonna check one thing before we finish

01:15:22.460 --> 01:15:24.700
<v Speaker 0>up, and that's the size of that cluster

01:15:24.700 --> 01:15:26.700
<v Speaker 0>to see if anyone that take me up

01:15:26.700 --> 01:15:28.140
<v Speaker 0>on the offer to add the fourth note.

01:15:29.555 --> 01:15:31.875
<v Speaker 0>I'll be disappointed if no one did it.

01:15:35.155 --> 01:15:39.475
<v Speaker 0>Where's

01:15:39.475 --> 01:15:42.115
<v Speaker 0>my note? You can on the notes in

01:15:42.115 --> 01:15:42.515
<v Speaker 1>the top.

01:15:45.270 --> 01:15:46.630
<v Speaker 0>No fourth notes.

01:15:46.950 --> 01:15:49.190
<v Speaker 0>I gave you a cube conflict publicly as

01:15:49.190 --> 01:15:49.670
<v Speaker 0>well.

01:15:50.630 --> 01:15:52.230
<v Speaker 1>Maybe it was too fast.

01:15:53.430 --> 01:15:54.310
<v Speaker 0>Oh, well.

01:15:54.470 --> 01:15:56.950
<v Speaker 0>That's great, Bastian. Is there anything you wanna

01:15:56.950 --> 01:15:58.550
<v Speaker 0>cover before we wrap up for today?

01:16:00.045 --> 01:16:01.965
<v Speaker 1>I would say, maybe let's have a look

01:16:01.965 --> 01:16:04.045
<v Speaker 1>at the questions if there was something else.

01:16:04.845 --> 01:16:06.925
<v Speaker 0>Yep. If there are any more questions, you've

01:16:06.925 --> 01:16:08.605
<v Speaker 0>got a minute to drop them in and

01:16:08.605 --> 01:16:10.685
<v Speaker 0>then we will wrap up for today's session.

01:16:10.685 --> 01:16:12.445
<v Speaker 1>Otherwise, it was what I wanted to show.

01:16:14.840 --> 01:16:16.920
<v Speaker 0>Yeah. We we covered a lot. Like, that's

01:16:16.920 --> 01:16:19.000
<v Speaker 0>an hour and fifteen minutes. We've covered, you

01:16:19.000 --> 01:16:20.039
<v Speaker 0>know, provision

01:16:20.679 --> 01:16:22.519
<v Speaker 0>in a k c s cluster with a

01:16:22.519 --> 01:16:24.920
<v Speaker 0>single command and under thirty seconds, which I'm

01:16:24.920 --> 01:16:28.280
<v Speaker 0>still mentally impressed with. We covered the deployment

01:16:28.280 --> 01:16:29.880
<v Speaker 0>of Rancher

01:16:30.435 --> 01:16:33.795
<v Speaker 0>to that cluster. We then spun up more

01:16:33.795 --> 01:16:36.675
<v Speaker 0>Kubernetes. The KCS clusters, one h e, one

01:16:36.675 --> 01:16:38.755
<v Speaker 0>not h e. Again, by tweaking it with

01:16:38.755 --> 01:16:41.395
<v Speaker 0>a couple of environment variables, which again ridiculously

01:16:41.395 --> 01:16:43.875
<v Speaker 0>easy. We brought them under management with Rancher

01:16:44.720 --> 01:16:47.120
<v Speaker 0>through one command, a cube CTL command and

01:16:47.120 --> 01:16:48.239
<v Speaker 0>a curl command.

01:16:48.400 --> 01:16:50.880
<v Speaker 0>And then we managed miraculously

01:16:50.880 --> 01:16:52.720
<v Speaker 0>all of us in an hour to deploy

01:16:52.720 --> 01:16:54.000
<v Speaker 0>Fleet and

01:16:54.560 --> 01:16:56.480
<v Speaker 0>deployment get all these workflows to all of

01:16:56.480 --> 01:16:58.315
<v Speaker 0>my clusters through labels. Like

01:16:59.435 --> 01:17:01.355
<v Speaker 0>yeah. It's a nice setup. I can see

01:17:01.355 --> 01:17:02.954
<v Speaker 0>the the appeal here. I can see why

01:17:02.954 --> 01:17:04.155
<v Speaker 0>people would want this.

01:17:04.395 --> 01:17:06.235
<v Speaker 1>Yeah. I also talked a lot about of

01:17:06.235 --> 01:17:08.155
<v Speaker 1>these of these edge use cases.

01:17:08.554 --> 01:17:10.474
<v Speaker 1>That makes complete sense to use something like

01:17:10.474 --> 01:17:12.235
<v Speaker 1>this because otherwise, it will just not scale

01:17:12.235 --> 01:17:14.410
<v Speaker 1>and work. But even if you have two,

01:17:14.410 --> 01:17:16.250
<v Speaker 1>three clusters or even if you have one

01:17:16.250 --> 01:17:18.570
<v Speaker 1>cluster, it would be also, this GitOps based

01:17:18.570 --> 01:17:20.090
<v Speaker 1>workflow can be very nice

01:17:20.810 --> 01:17:23.290
<v Speaker 1>to roll out your applications to staging and

01:17:23.290 --> 01:17:24.090
<v Speaker 1>production, for example.

01:17:25.065 --> 01:17:27.225
<v Speaker 0>Oh, yeah. Definitely. I can definitely see that.

01:17:27.225 --> 01:17:28.665
<v Speaker 0>I I I mean, I don't wanna rope

01:17:28.665 --> 01:17:29.945
<v Speaker 0>you in because we're, you know, on a

01:17:29.945 --> 01:17:31.865
<v Speaker 0>livestream and stuff and have you commit to

01:17:31.865 --> 01:17:34.025
<v Speaker 0>something, but I will. As I I definitely

01:17:34.025 --> 01:17:35.465
<v Speaker 0>think there's a lot of room here for

01:17:35.465 --> 01:17:37.625
<v Speaker 0>another session where we can dive into some

01:17:37.625 --> 01:17:39.670
<v Speaker 0>of the RBAC stuff. I mean, that's an

01:17:39.670 --> 01:17:41.510
<v Speaker 0>occasion things that we provide here. I think

01:17:41.510 --> 01:17:42.550
<v Speaker 0>it would be really cool to do a

01:17:42.550 --> 01:17:44.790
<v Speaker 0>deeper dive into that configure. But I won't

01:17:44.790 --> 01:17:45.910
<v Speaker 0>make you see a guest on the stream,

01:17:45.910 --> 01:17:47.590
<v Speaker 0>but I will chase you up afterwards.

01:17:48.150 --> 01:17:50.470
<v Speaker 1>Looking forward to it. Alright. Well, thank you

01:17:50.470 --> 01:17:52.070
<v Speaker 0>very much for joining me today. I think

01:17:52.095 --> 01:17:54.655
<v Speaker 0>that's a fantastic introduction to three different projects

01:17:54.655 --> 01:17:56.815
<v Speaker 0>there. I love what I see, and I'm

01:17:56.815 --> 01:17:58.095
<v Speaker 0>hoping I get to play with us more

01:17:58.095 --> 01:17:59.775
<v Speaker 0>in the future. So thank you very much

01:17:59.775 --> 01:18:01.455
<v Speaker 0>again, Sebastian. I hope the people have watched

01:18:01.455 --> 01:18:03.375
<v Speaker 0>and tuned in have enjoyed this. And I

01:18:03.375 --> 01:18:05.375
<v Speaker 0>will be back again soon. Thank you. Thank

01:18:05.375 --> 01:18:07.340
<v Speaker 1>you for having me. My pleasure. Thanks.
