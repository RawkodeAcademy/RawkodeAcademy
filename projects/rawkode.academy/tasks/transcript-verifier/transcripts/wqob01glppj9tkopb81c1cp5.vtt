WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: b5fbe58c-6705-4378-a1e7-69ebca70412f
Created: 2025-04-29T21:26:35.500Z
Duration: 5103.644
Channels: 1

00:00:10.080 --> 00:00:11.040
<v Speaker 0>I'll

00:00:11.040 --> 00:00:11.679
<v Speaker 0>fix that later.

00:00:12.695 --> 00:00:15.094
<v Speaker 0>Please remember to subscribe to the channel as

00:00:15.094 --> 00:00:16.695
<v Speaker 0>well and thumbs up that video if you

00:00:16.695 --> 00:00:18.695
<v Speaker 0>get an opportunity and you enjoy it. It

00:00:18.695 --> 00:00:21.015
<v Speaker 0>really helps other people discover and find this

00:00:21.015 --> 00:00:22.134
<v Speaker 0>content as well.

00:00:22.855 --> 00:00:25.895
<v Speaker 0>Today we're gonna take a look at n8n

00:00:25.560 --> 00:00:27.800
<v Speaker 0>and to do that I am joined by

00:00:27.800 --> 00:00:30.840
<v Speaker 0>Tanny Pant. Hello Tanny. How are you?

00:00:31.720 --> 00:00:33.800
<v Speaker 1>Very well. How are you doing today?

00:00:34.280 --> 00:00:36.600
<v Speaker 0>Yeah, I'm alright. I did pretty well. The

00:00:36.600 --> 00:00:38.840
<v Speaker 0>weather's nice in Scotland which is a rare

00:00:38.840 --> 00:00:40.760
<v Speaker 0>feat especially at this time of the year.

00:00:41.215 --> 00:00:42.735
<v Speaker 0>And this is my last day of work

00:00:42.735 --> 00:00:44.095
<v Speaker 0>this week. I'm just gonna give you far

00:00:44.095 --> 00:00:45.775
<v Speaker 0>too much information though. My last day of

00:00:45.775 --> 00:00:47.535
<v Speaker 0>work this week there's no streams tomorrow, I'm

00:00:47.535 --> 00:00:49.295
<v Speaker 0>off for my birthday so I'm quite happy

00:00:49.295 --> 00:00:51.295
<v Speaker 0>about that too and of course I'm very

00:00:51.295 --> 00:00:52.655
<v Speaker 0>happy to be joined by you to cover

00:00:52.655 --> 00:00:53.215
<v Speaker 0>n8n.

00:00:54.910 --> 00:00:56.829
<v Speaker 0>Do you wanna just take a moment to

00:00:56.829 --> 00:00:59.230
<v Speaker 0>tell us about you, who you work for,

00:00:59.309 --> 00:01:00.910
<v Speaker 0>and and then we'll dive into the to

00:01:00.910 --> 00:01:02.030
<v Speaker 0>today's content.

00:01:03.230 --> 00:01:05.710
<v Speaker 0>Sure. So I'm Tane, and I'm the head

00:01:05.710 --> 00:01:08.215
<v Speaker 1>of developer relations at n a ten. And

00:01:08.215 --> 00:01:10.215
<v Speaker 1>what that entails is, like, I have been

00:01:10.215 --> 00:01:13.495
<v Speaker 1>working on several exciting things recently, like helping

00:01:13.495 --> 00:01:15.815
<v Speaker 1>our community automate a lot of really cool

00:01:15.815 --> 00:01:18.295
<v Speaker 1>stuff and help them unleash their productivity.

00:01:18.935 --> 00:01:20.775
<v Speaker 1>I've been involved in the world of open

00:01:20.775 --> 00:01:22.935
<v Speaker 1>source and DevRel for almost six years now.

00:01:23.310 --> 00:01:25.229
<v Speaker 1>And before this, I've been involved with the

00:01:25.229 --> 00:01:28.110
<v Speaker 1>Mozilla Foundation on several tracks. And I've also

00:01:28.110 --> 00:01:30.430
<v Speaker 1>published books on some of my favorite topics

00:01:30.430 --> 00:01:33.070
<v Speaker 1>like Firefox OS, WebVR,

00:01:33.070 --> 00:01:34.990
<v Speaker 1>and virtual assistance on Raspberry Pi.

00:01:36.345 --> 00:01:36.985
<v Speaker 1>And

00:01:37.465 --> 00:01:39.465
<v Speaker 1>since I have a background in computer science,

00:01:39.465 --> 00:01:42.505
<v Speaker 1>I'm very familiar with programming and software development.

00:01:42.985 --> 00:01:44.985
<v Speaker 1>And a while back, I learned about the

00:01:44.985 --> 00:01:46.505
<v Speaker 1>LEGO programming language.

00:01:46.585 --> 00:01:47.625
<v Speaker 1>Have you heard of it, David?

00:01:48.310 --> 00:01:48.870
<v Speaker 0>I

00:01:49.270 --> 00:01:51.510
<v Speaker 0>mean, I consider myself quite well versed when

00:01:51.510 --> 00:01:53.590
<v Speaker 0>it comes to esoteric programming languages, but I

00:01:53.590 --> 00:01:55.350
<v Speaker 0>must say I did not know the LEGO

00:01:55.350 --> 00:01:56.470
<v Speaker 0>programming language.

00:01:57.830 --> 00:01:59.830
<v Speaker 1>Okay. So what they do is they use

00:01:59.830 --> 00:02:01.510
<v Speaker 1>it in their Mindstorms products,

00:02:02.175 --> 00:02:02.655
<v Speaker 1>and,

00:02:03.135 --> 00:02:05.135
<v Speaker 1>those robots can be move made to move

00:02:05.135 --> 00:02:08.414
<v Speaker 1>in certain patterns by connecting these preprogrammed

00:02:08.414 --> 00:02:09.695
<v Speaker 1>blocks of movements.

00:02:10.095 --> 00:02:11.935
<v Speaker 1>So when I saw that, I recognized the

00:02:11.935 --> 00:02:13.855
<v Speaker 1>value it provides in reducing

00:02:13.855 --> 00:02:16.334
<v Speaker 1>the effort of doing things by abstracting the

00:02:16.550 --> 00:02:19.430
<v Speaker 1>complexity of making a robot physically move.

00:02:19.830 --> 00:02:21.750
<v Speaker 1>And then last year, I came across n

00:02:21.750 --> 00:02:23.670
<v Speaker 1>a 10, and something clicked in the back

00:02:23.670 --> 00:02:25.830
<v Speaker 1>of my head. I could totally see the

00:02:25.830 --> 00:02:28.470
<v Speaker 1>genius of having a node based system with

00:02:28.470 --> 00:02:31.645
<v Speaker 1>nodes for concepts like conditional logic along with

00:02:31.645 --> 00:02:33.805
<v Speaker 1>products and services to automate things.

00:02:34.045 --> 00:02:36.685
<v Speaker 1>And, this for me was like finding Lego

00:02:36.685 --> 00:02:37.885
<v Speaker 1>for the real world.

00:02:38.285 --> 00:02:40.525
<v Speaker 1>So as a developer advocate, a tool like

00:02:40.525 --> 00:02:42.925
<v Speaker 1>n8n provides immense value to me to be

00:02:42.925 --> 00:02:45.710
<v Speaker 1>able to build real world scalable demos so

00:02:45.710 --> 00:02:48.190
<v Speaker 1>quickly. And as an educator, I need to

00:02:48.190 --> 00:02:50.990
<v Speaker 1>be able to teach newcomers into tech about

00:02:50.990 --> 00:02:53.630
<v Speaker 1>how things work with the support of node

00:02:53.630 --> 00:02:54.510
<v Speaker 1>based thinking.

00:02:54.910 --> 00:02:57.710
<v Speaker 1>And for me, no code is about empowerment,

00:02:57.790 --> 00:02:59.230
<v Speaker 1>and n eight n allows me to do

00:02:59.230 --> 00:02:59.630
<v Speaker 1>just that.

00:03:00.805 --> 00:03:03.765
<v Speaker 1>So I can introduce n eight ten, shortly.

00:03:04.965 --> 00:03:07.685
<v Speaker 1>So n eight ten is an extendable

00:03:07.685 --> 00:03:09.205
<v Speaker 1>workflow automation tool,

00:03:09.525 --> 00:03:12.005
<v Speaker 1>and it has a fair code distribution model,

00:03:12.005 --> 00:03:13.830
<v Speaker 1>which means that n a n a 10

00:03:13.830 --> 00:03:16.549
<v Speaker 1>will always have visible source code, be available

00:03:16.549 --> 00:03:19.110
<v Speaker 1>to self host, and allow you to add

00:03:19.110 --> 00:03:21.670
<v Speaker 1>custom functions, logic, and apps.

00:03:22.069 --> 00:03:24.629
<v Speaker 1>And its node based approach makes it very

00:03:24.629 --> 00:03:25.110
<v Speaker 1>versatile,

00:03:25.445 --> 00:03:28.325
<v Speaker 1>enabling you to connect anything to everything.

00:03:28.565 --> 00:03:31.765
<v Speaker 1>And our mission is to give everyone who

00:03:31.765 --> 00:03:34.325
<v Speaker 1>uses a computer technical superpowers.

00:03:35.765 --> 00:03:38.645
<v Speaker 0>Okay. So there are a few words there

00:03:38.645 --> 00:03:41.310
<v Speaker 0>that I heard that kinda give away a

00:03:41.310 --> 00:03:43.069
<v Speaker 0>lot of flavor about what any n is

00:03:43.069 --> 00:03:44.349
<v Speaker 0>then. So I'm gonna try and pick a

00:03:44.349 --> 00:03:46.590
<v Speaker 0>few out. Like, you mentioned no code. Can

00:03:46.590 --> 00:03:48.830
<v Speaker 0>we just talk about what no code is?

00:03:50.110 --> 00:03:50.830
<v Speaker 1>Sure.

00:03:51.390 --> 00:03:54.830
<v Speaker 1>So no code is the ability to build

00:03:55.475 --> 00:03:56.595
<v Speaker 1>services,

00:03:56.755 --> 00:03:57.635
<v Speaker 1>products,

00:03:57.715 --> 00:04:00.835
<v Speaker 1>or or workflows without writing any code.

00:04:01.155 --> 00:04:01.715
<v Speaker 1>So

00:04:01.955 --> 00:04:04.595
<v Speaker 1>let's say I don't know, like, every what

00:04:04.595 --> 00:04:06.595
<v Speaker 1>happens to me often living in Berlin is

00:04:06.595 --> 00:04:08.595
<v Speaker 1>I go out, I forget my umbrella,

00:04:08.675 --> 00:04:10.940
<v Speaker 1>and it rains, and I arrive in the

00:04:10.940 --> 00:04:11.980
<v Speaker 1>office drenched.

00:04:12.060 --> 00:04:14.620
<v Speaker 1>So, you know, having something as simple as,

00:04:14.620 --> 00:04:16.460
<v Speaker 1>you know, running a cron job

00:04:16.860 --> 00:04:17.580
<v Speaker 1>every

00:04:17.660 --> 00:04:20.380
<v Speaker 1>morning, let's say, at eight, and getting weather

00:04:20.380 --> 00:04:23.420
<v Speaker 1>information and getting a text saying, like, hey.

00:04:23.420 --> 00:04:25.420
<v Speaker 1>You should take an umbrella today because it's

00:04:25.420 --> 00:04:28.294
<v Speaker 1>gonna rain. So even as simple as workflows

00:04:28.294 --> 00:04:30.535
<v Speaker 1>like these, you can completely build them without

00:04:30.535 --> 00:04:31.575
<v Speaker 1>writing any code.

00:04:32.375 --> 00:04:33.655
<v Speaker 0>Okay. So that's

00:04:34.055 --> 00:04:36.135
<v Speaker 0>really cool. People that

00:04:36.535 --> 00:04:38.215
<v Speaker 0>not guess, people

00:04:38.294 --> 00:04:39.975
<v Speaker 0>don't need code to build these workflows, which

00:04:39.840 --> 00:04:41.680
<v Speaker 0>great. But you also the other thing that

00:04:41.680 --> 00:04:42.800
<v Speaker 0>stuck out to me when you mentioned this

00:04:42.800 --> 00:04:45.440
<v Speaker 0>was you said extendable workflow automation. So I'm

00:04:45.440 --> 00:04:47.680
<v Speaker 0>assuming I have the option to write code

00:04:47.680 --> 00:04:48.320
<v Speaker 0>as well?

00:04:49.680 --> 00:04:51.600
<v Speaker 1>You do. You do. So

00:04:51.760 --> 00:04:54.639
<v Speaker 1>extensible actually covers different facets of n a

00:04:54.639 --> 00:04:54.800
<v Speaker 1>10.

00:04:55.855 --> 00:04:58.095
<v Speaker 1>One of them being, yes, we have a

00:04:58.095 --> 00:05:00.095
<v Speaker 1>function node so in that you can write

00:05:00.095 --> 00:05:02.655
<v Speaker 1>JavaScript code. So in case there's something

00:05:03.055 --> 00:05:05.135
<v Speaker 1>that isn't available in n eight n, you

00:05:05.135 --> 00:05:07.935
<v Speaker 1>can write JavaScript code for making that happen,

00:05:07.935 --> 00:05:09.455
<v Speaker 1>be that data transformation

00:05:10.139 --> 00:05:11.580
<v Speaker 1>or something else.

00:05:12.380 --> 00:05:14.540
<v Speaker 1>Then also, like, as I mentioned, n eight

00:05:14.540 --> 00:05:17.340
<v Speaker 1>n is on GitHub. It's source code visible,

00:05:17.740 --> 00:05:18.220
<v Speaker 1>and

00:05:18.620 --> 00:05:21.020
<v Speaker 1>you can write your own custom notes if

00:05:21.020 --> 00:05:21.820
<v Speaker 1>you know TypeScript.

00:05:22.315 --> 00:05:24.395
<v Speaker 1>I've been doing that since the last week

00:05:24.395 --> 00:05:25.515
<v Speaker 1>and it's a lot of fun I must

00:05:25.515 --> 00:05:25.995
<v Speaker 1>say.

00:05:27.115 --> 00:05:29.675
<v Speaker 0>Okay. Cool. Let me pull up the the

00:05:29.675 --> 00:05:31.595
<v Speaker 0>website then. Though

00:05:31.915 --> 00:05:33.835
<v Speaker 0>right away I can see, you know, the

00:05:33.835 --> 00:05:36.075
<v Speaker 0>fair code, the extendable workflows. I can see

00:05:36.075 --> 00:05:37.850
<v Speaker 0>the number one product of the week. So

00:05:37.850 --> 00:05:39.610
<v Speaker 0>you know, people are obviously liking this and

00:05:39.610 --> 00:05:41.290
<v Speaker 0>then using it and that's backed up by

00:05:41.290 --> 00:05:43.210
<v Speaker 0>you know, you've got 10,000 stars and a

00:05:43.210 --> 00:05:45.290
<v Speaker 0>quite a high ratio of forks as well.

00:05:45.290 --> 00:05:47.850
<v Speaker 0>So it sounds like it's maybe a really

00:05:47.850 --> 00:05:50.010
<v Speaker 0>good project for people to contribute to as

00:05:50.010 --> 00:05:51.850
<v Speaker 0>well and I'm just gonna make that assumption

00:05:51.850 --> 00:05:52.730
<v Speaker 0>based on that like,

00:05:54.035 --> 00:05:56.115
<v Speaker 0>and JavaScript is such a prominent language in

00:05:56.115 --> 00:05:58.515
<v Speaker 0>TypeScript, so that's pretty cool too. Now,

00:05:59.155 --> 00:06:02.115
<v Speaker 0>what are some of the I'm assuming that

00:06:02.115 --> 00:06:04.195
<v Speaker 0>you use any n on a daily basis,

00:06:04.195 --> 00:06:06.195
<v Speaker 0>I'm assuming that your colleagues use any n

00:06:06.195 --> 00:06:07.590
<v Speaker 0>on a daily basis. Can you maybe just

00:06:07.590 --> 00:06:09.190
<v Speaker 0>give us a little bit of insight into

00:06:09.190 --> 00:06:11.110
<v Speaker 0>some of the tasks that you're automating with

00:06:11.110 --> 00:06:11.830
<v Speaker 0>this tool?

00:06:13.030 --> 00:06:13.670
<v Speaker 1>Sure.

00:06:14.310 --> 00:06:16.790
<v Speaker 1>So we're using n eight n in quite

00:06:16.790 --> 00:06:17.910
<v Speaker 1>a lot of different ways.

00:06:19.895 --> 00:06:21.575
<v Speaker 1>So we use

00:06:21.975 --> 00:06:23.175
<v Speaker 1>this chatting

00:06:23.335 --> 00:06:25.095
<v Speaker 1>platform called Mattermost.

00:06:25.095 --> 00:06:26.615
<v Speaker 1>So for those of you who are unaware,

00:06:26.615 --> 00:06:28.855
<v Speaker 1>it's an open source alternative to Slack,

00:06:29.975 --> 00:06:30.535
<v Speaker 1>and

00:06:31.095 --> 00:06:34.215
<v Speaker 1>they allow you to create custom slash commands

00:06:33.680 --> 00:06:36.400
<v Speaker 1>similar to the Slack ecosystem, I'd say.

00:06:37.120 --> 00:06:38.800
<v Speaker 1>So we have a lot of different things

00:06:38.800 --> 00:06:42.080
<v Speaker 1>like we use a slash call command that

00:06:42.080 --> 00:06:44.160
<v Speaker 1>sends the other people in the company the

00:06:44.160 --> 00:06:46.320
<v Speaker 1>link to the whereby room of the person

00:06:46.320 --> 00:06:47.200
<v Speaker 1>who issued the command,

00:06:47.795 --> 00:06:50.915
<v Speaker 1>and, whereby is a video conferencing service that

00:06:50.915 --> 00:06:51.795
<v Speaker 1>we use.

00:06:52.515 --> 00:06:53.795
<v Speaker 1>Then we have

00:06:54.355 --> 00:06:57.075
<v Speaker 1>a slash GitHub command. So sometimes, you know,

00:06:57.075 --> 00:06:59.155
<v Speaker 1>there's people contributing to the project

00:06:59.395 --> 00:06:59.955
<v Speaker 1>or,

00:07:00.275 --> 00:07:02.435
<v Speaker 1>making some pull requests and so on. And

00:07:02.700 --> 00:07:05.420
<v Speaker 1>this helps us get information about the GitHub

00:07:05.420 --> 00:07:07.660
<v Speaker 1>users, like, maybe their Twitter or their email

00:07:07.660 --> 00:07:09.260
<v Speaker 1>so, you know, we can reach out to

00:07:09.260 --> 00:07:11.260
<v Speaker 1>them and thank them for supporting us.

00:07:12.300 --> 00:07:14.860
<v Speaker 1>It also helps us, like, reduce unnecessary

00:07:14.860 --> 00:07:18.460
<v Speaker 1>communication at times. Like, one of our colleagues

00:07:18.585 --> 00:07:21.544
<v Speaker 1>is working on the n eight n cloud.

00:07:21.544 --> 00:07:23.385
<v Speaker 1>It's the hosted version of n eight n.

00:07:23.625 --> 00:07:25.544
<v Speaker 1>And, you know, we used to ping him

00:07:25.544 --> 00:07:27.544
<v Speaker 1>from time to time, like, hey. How's it

00:07:27.544 --> 00:07:30.104
<v Speaker 1>going? How many people have signed up? And

00:07:30.104 --> 00:07:31.465
<v Speaker 1>this is unnecessary

00:07:31.785 --> 00:07:33.865
<v Speaker 1>overhead. Right? And what we did was we

00:07:33.865 --> 00:07:36.080
<v Speaker 1>created a slash SaaS command, which gets all

00:07:36.080 --> 00:07:38.000
<v Speaker 1>the metrics about n eight ten cloud. So,

00:07:38.000 --> 00:07:39.840
<v Speaker 1>you know, the conversations have to be more

00:07:39.840 --> 00:07:42.320
<v Speaker 1>meaningful, like, oh, I have a specific question.

00:07:43.600 --> 00:07:46.320
<v Speaker 1>And, like, something really interesting we did recently,

00:07:46.720 --> 00:07:47.120
<v Speaker 1>was

00:07:47.735 --> 00:07:49.895
<v Speaker 1>so I'm working on me and my team

00:07:49.895 --> 00:07:51.975
<v Speaker 1>is working on creating the documentation

00:07:51.975 --> 00:07:53.815
<v Speaker 1>for different nodes in n8n.

00:07:53.975 --> 00:07:54.375
<v Speaker 1>And

00:07:55.975 --> 00:07:58.294
<v Speaker 1>so when we started doing this, n8n already

00:07:58.294 --> 00:08:00.215
<v Speaker 1>had somewhere around 30,

00:08:00.215 --> 00:08:01.095
<v Speaker 1>hundred and 40 nodes.

00:08:01.860 --> 00:08:02.500
<v Speaker 1>And

00:08:02.820 --> 00:08:04.820
<v Speaker 1>we add notes rather quickly. Like, if you

00:08:04.820 --> 00:08:06.100
<v Speaker 1>take a look at our change talk, we

00:08:06.100 --> 00:08:08.420
<v Speaker 1>have been adding notes at a great velocity.

00:08:08.820 --> 00:08:10.980
<v Speaker 1>So, you know, like, we are creating

00:08:11.380 --> 00:08:12.660
<v Speaker 1>documentations,

00:08:13.460 --> 00:08:15.380
<v Speaker 1>but new notes are getting added. And sometimes,

00:08:15.380 --> 00:08:16.985
<v Speaker 1>like, you're going on vacations and you have

00:08:16.985 --> 00:08:19.385
<v Speaker 1>no idea, okay, which ones have been documented,

00:08:19.385 --> 00:08:22.025
<v Speaker 1>which ones haven't. So what we did was

00:08:22.105 --> 00:08:24.345
<v Speaker 1>we also created slash docs command,

00:08:25.065 --> 00:08:26.985
<v Speaker 1>but this also runs as a cron job

00:08:26.985 --> 00:08:29.919
<v Speaker 1>every Monday. So what it does is it,

00:08:30.720 --> 00:08:33.039
<v Speaker 1>gets information on what are all the nodes

00:08:33.039 --> 00:08:35.280
<v Speaker 1>in n eight n through a GraphQL endpoint,

00:08:36.000 --> 00:08:38.320
<v Speaker 1>and that data is being fed fed through

00:08:38.320 --> 00:08:39.200
<v Speaker 1>Strapi.

00:08:39.679 --> 00:08:40.880
<v Speaker 1>We get that data,

00:08:41.505 --> 00:08:43.105
<v Speaker 1>and the name of the nodes sort of

00:08:43.105 --> 00:08:46.225
<v Speaker 1>correlates to the doc URL of the documentation.

00:08:46.545 --> 00:08:48.385
<v Speaker 1>So we use HTTP request node to see

00:08:48.385 --> 00:08:50.065
<v Speaker 1>if we get a four zero four. If

00:08:50.065 --> 00:08:52.865
<v Speaker 1>it did, then that documentation doesn't exist. So

00:08:52.865 --> 00:08:54.385
<v Speaker 1>it sort of gives us a list. Okay.

00:08:54.385 --> 00:08:55.825
<v Speaker 1>These nodes need to be documented.

00:08:56.480 --> 00:08:58.400
<v Speaker 1>So that's like one of the

00:08:59.040 --> 00:09:00.320
<v Speaker 1>ways like some of the ways that we

00:09:00.320 --> 00:09:01.840
<v Speaker 1>have been using in it and for.

00:09:02.400 --> 00:09:04.480
<v Speaker 0>Nice. There's there was a lot of practical

00:09:04.480 --> 00:09:06.960
<v Speaker 0>examples there. Things that I can immediately relate

00:09:06.960 --> 00:09:08.640
<v Speaker 0>to and I'm thinking, wow. Like, I could

00:09:08.880 --> 00:09:10.560
<v Speaker 0>we could use that in in in our

00:09:10.560 --> 00:09:11.520
<v Speaker 0>team for sure.

00:09:12.185 --> 00:09:12.825
<v Speaker 0>So

00:09:13.065 --> 00:09:15.545
<v Speaker 0>pop quiz then. You mentioned there were a

00:09:15.545 --> 00:09:18.024
<v Speaker 0>30 nodes. How many are there today?

00:09:19.305 --> 00:09:20.904
<v Speaker 1>That's a good question.

00:09:22.824 --> 00:09:24.665
<v Speaker 1>I'd I'd take a chance and say around

00:09:24.665 --> 00:09:25.144
<v Speaker 1>200.

00:09:27.640 --> 00:09:29.560
<v Speaker 0>Okay. So if I had I'm just gonna

00:09:29.560 --> 00:09:31.240
<v Speaker 0>click around on the docs now because I'm

00:09:31.240 --> 00:09:32.360
<v Speaker 0>I'm I'm curious.

00:09:34.120 --> 00:09:36.040
<v Speaker 0>This is the node library here.

00:09:37.640 --> 00:09:38.360
<v Speaker 0>Yes. This one?

00:09:39.695 --> 00:09:42.095
<v Speaker 0>Yeah. Alright. Okay. There's a fair few and

00:09:42.095 --> 00:09:43.935
<v Speaker 0>I'm not gonna count them. I'm not gonna

00:09:43.935 --> 00:09:45.615
<v Speaker 0>count them. I'll just say you're close enough

00:09:45.615 --> 00:09:47.695
<v Speaker 0>that it seems plausible.

00:09:48.575 --> 00:09:50.975
<v Speaker 0>Alright. I think what we should do is

00:09:50.975 --> 00:09:53.210
<v Speaker 0>just get hands on it and start and

00:09:53.210 --> 00:09:55.050
<v Speaker 0>start playing with n8n. So

00:09:55.530 --> 00:09:57.930
<v Speaker 0>as a newcomer to the project how

00:09:58.490 --> 00:09:59.690
<v Speaker 0>I was gonna say how they get started

00:09:59.690 --> 00:10:01.370
<v Speaker 0>but as always there is a getting started

00:10:01.370 --> 00:10:02.970
<v Speaker 0>part of the documentation.

00:10:04.490 --> 00:10:07.795
<v Speaker 0>I'm just gonna assume and click please feel

00:10:07.795 --> 00:10:09.155
<v Speaker 0>free to say stop, you're going the wrong

00:10:09.155 --> 00:10:10.195
<v Speaker 0>way or whatever but

00:10:10.755 --> 00:10:11.795
<v Speaker 0>MPX. No.

00:10:12.595 --> 00:10:14.035
<v Speaker 0>I'm I'd

00:10:14.035 --> 00:10:16.515
<v Speaker 0>say I'm comfortable writing JavaScript but the tooling

00:10:16.515 --> 00:10:18.435
<v Speaker 0>has always kind of eluded me. I believe

00:10:18.435 --> 00:10:20.595
<v Speaker 0>MPX is just a way to execute

00:10:21.040 --> 00:10:23.520
<v Speaker 0>random, not random, but you know, some arbitrary

00:10:23.520 --> 00:10:25.520
<v Speaker 0>package from NPM as long as I provide

00:10:25.520 --> 00:10:27.600
<v Speaker 0>the name is that's that's correct. Right?

00:10:28.160 --> 00:10:30.800
<v Speaker 1>Yeah. And once you close it, all the

00:10:30.800 --> 00:10:32.320
<v Speaker 1>data would be lost though. So it's it's

00:10:32.320 --> 00:10:33.600
<v Speaker 1>sort of like running

00:10:33.600 --> 00:10:35.760
<v Speaker 1>on a docker container without any persistence.

00:10:36.685 --> 00:10:38.205
<v Speaker 0>Okay. And I can see we have docker

00:10:38.205 --> 00:10:40.205
<v Speaker 0>as an option too and we have the

00:10:40.205 --> 00:10:42.845
<v Speaker 0>ability just to globally install it with npm.

00:10:43.165 --> 00:10:46.045
<v Speaker 0>Alright. Yeah. I think I may actually had

00:10:46.045 --> 00:10:48.205
<v Speaker 0>done this at some point when I was

00:10:48.205 --> 00:10:51.245
<v Speaker 0>curious. So let me grab my terminal.

00:10:56.089 --> 00:10:57.370
<v Speaker 0>Move over here.

00:10:58.410 --> 00:10:59.610
<v Speaker 0>Thank

00:11:00.889 --> 00:11:01.449
<v Speaker 0>you.

00:11:02.569 --> 00:11:03.290
<v Speaker 0>So

00:11:03.690 --> 00:11:04.649
<v Speaker 0>let's see what happens.

00:11:08.895 --> 00:11:10.335
<v Speaker 0>Okay. Maybe I haven't done it because the

00:11:10.335 --> 00:11:11.935
<v Speaker 0>list is installing. We

00:11:13.855 --> 00:11:16.095
<v Speaker 1>put out a release yesterday, so perfect. You'll

00:11:16.095 --> 00:11:16.895
<v Speaker 1>have the latest version.

00:11:17.779 --> 00:11:19.620
<v Speaker 0>Oh, wow. So we're playing with bleeding edge

00:11:19.620 --> 00:11:20.980
<v Speaker 0>as well. Excellent.

00:11:21.139 --> 00:11:21.779
<v Speaker 0>And

00:11:23.699 --> 00:11:26.100
<v Speaker 1>I'm very exciting because I I added three

00:11:26.100 --> 00:11:28.899
<v Speaker 1>nodes to yesterday's release, so hey.

00:11:31.139 --> 00:11:33.585
<v Speaker 0>Three new nodes. Alright. I mean,

00:11:34.065 --> 00:11:35.985
<v Speaker 0>when you say that it's easier, right, to

00:11:35.985 --> 00:11:37.345
<v Speaker 0>add a new node.

00:11:37.745 --> 00:11:38.785
<v Speaker 0>What do you mean?

00:11:39.105 --> 00:11:41.665
<v Speaker 0>So let me me actually rephrase that question.

00:11:42.145 --> 00:11:43.425
<v Speaker 0>How simple is it to add a new

00:11:43.425 --> 00:11:44.945
<v Speaker 0>node? Are we talking like 10 lines of

00:11:44.945 --> 00:11:47.339
<v Speaker 0>code, 50 lines of code, any dependencies? I

00:11:47.339 --> 00:11:48.779
<v Speaker 0>guess it all depends on the node. Can

00:11:48.779 --> 00:11:50.140
<v Speaker 0>you maybe just pick one of the ones

00:11:50.140 --> 00:11:51.980
<v Speaker 0>that you released yesterday and tell us how

00:11:51.980 --> 00:11:52.940
<v Speaker 0>you went about it?

00:11:54.140 --> 00:11:57.580
<v Speaker 1>Alright. So yesterday we released Orbit.

00:11:57.580 --> 00:11:58.540
<v Speaker 1>Do you know about Orbit?

00:11:59.705 --> 00:12:02.425
<v Speaker 0>Yeah. The DevRel kind of metrics community Yes.

00:12:02.425 --> 00:12:02.905
<v Speaker 0>Exactly.

00:12:03.225 --> 00:12:04.905
<v Speaker 0>Yeah. Exactly.

00:12:05.625 --> 00:12:07.225
<v Speaker 1>So I'd say, like, my

00:12:07.545 --> 00:12:08.905
<v Speaker 1>first node was

00:12:09.305 --> 00:12:10.585
<v Speaker 1>for Apache Kafka.

00:12:12.170 --> 00:12:15.210
<v Speaker 1>And, like, that took me around three hours

00:12:15.210 --> 00:12:16.090
<v Speaker 1>to build it.

00:12:17.530 --> 00:12:19.690
<v Speaker 1>And there was a reason because, like, I

00:12:19.690 --> 00:12:22.730
<v Speaker 1>hadn't written JavaScript in around one and a

00:12:22.730 --> 00:12:23.770
<v Speaker 1>half or two years.

00:12:23.930 --> 00:12:25.930
<v Speaker 1>I have never worked with TypeScript before.

00:12:26.565 --> 00:12:27.125
<v Speaker 1>And

00:12:27.525 --> 00:12:29.525
<v Speaker 1>so Like, that was a bit of a

00:12:29.525 --> 00:12:32.645
<v Speaker 1>bit of an effort there, but like it

00:12:32.645 --> 00:12:33.765
<v Speaker 1>really depends on

00:12:34.405 --> 00:12:35.525
<v Speaker 0>yeah. I

00:12:35.525 --> 00:12:38.005
<v Speaker 0>mean, I'm hearing such contradictory stuff there. You

00:12:38.005 --> 00:12:40.005
<v Speaker 0>haven't written JavaScript or TypeScript in a year

00:12:40.005 --> 00:12:42.480
<v Speaker 0>and a half. Kafka is a bit complex,

00:12:42.480 --> 00:12:43.600
<v Speaker 0>but a software

00:12:43.920 --> 00:12:46.800
<v Speaker 0>and you're saying that three hours was long

00:12:46.800 --> 00:12:49.279
<v Speaker 0>for implementing that. I mean, seems really quick.

00:12:49.440 --> 00:12:51.360
<v Speaker 0>Like if I were able to build a

00:12:51.360 --> 00:12:53.040
<v Speaker 0>node for any end in under three hours,

00:12:53.040 --> 00:12:54.480
<v Speaker 0>I'd be pretty shocked for myself. And you

00:12:54.480 --> 00:12:56.000
<v Speaker 0>seem to be like, no, it should have

00:12:56.000 --> 00:12:56.480
<v Speaker 0>been faster.

00:12:56.985 --> 00:12:57.705
<v Speaker 1>So

00:12:59.065 --> 00:13:01.464
<v Speaker 1>yeah. Like, it really depends on two things.

00:13:01.464 --> 00:13:03.704
<v Speaker 1>It's like how familiar are you with this

00:13:03.704 --> 00:13:05.145
<v Speaker 1>whole JS ecosystem.

00:13:05.704 --> 00:13:07.545
<v Speaker 1>So TypeScript was a bit new for me.

00:13:07.545 --> 00:13:09.464
<v Speaker 1>So that could have definitely

00:13:09.730 --> 00:13:12.370
<v Speaker 1>increased the speed of development there. And second

00:13:12.370 --> 00:13:14.450
<v Speaker 1>is the API or the service that you

00:13:14.450 --> 00:13:15.410
<v Speaker 1>are implementing,

00:13:15.890 --> 00:13:17.970
<v Speaker 1>how well documented it is.

00:13:18.290 --> 00:13:18.930
<v Speaker 1>So

00:13:19.650 --> 00:13:21.810
<v Speaker 1>just as an example, what we did

00:13:22.130 --> 00:13:23.970
<v Speaker 1>so I I created this over the weekend.

00:13:23.970 --> 00:13:25.250
<v Speaker 1>Right? And

00:13:25.625 --> 00:13:28.024
<v Speaker 1>I was implementing it using the Kafka JS

00:13:28.024 --> 00:13:28.745
<v Speaker 1>library.

00:13:28.985 --> 00:13:30.345
<v Speaker 1>So I was having a chat with one

00:13:30.345 --> 00:13:32.264
<v Speaker 1>of my colleagues in the office, and I

00:13:32.264 --> 00:13:33.545
<v Speaker 1>was telling him, like, hey. I did this

00:13:33.545 --> 00:13:35.305
<v Speaker 1>on the weekend. Really excited about it.

00:13:35.704 --> 00:13:37.464
<v Speaker 1>And he was like, oh, how long did

00:13:37.464 --> 00:13:39.145
<v Speaker 1>you take? We had the same conversation.

00:13:39.225 --> 00:13:40.264
<v Speaker 1>And then he said, like,

00:13:41.100 --> 00:13:42.779
<v Speaker 1>can we should take shall we take a

00:13:42.779 --> 00:13:44.540
<v Speaker 1>look at how quick it can be?

00:13:44.860 --> 00:13:46.620
<v Speaker 1>And I was like, okay. We should definitely

00:13:46.620 --> 00:13:49.100
<v Speaker 1>do that. So we picked up Google Translate.

00:13:49.100 --> 00:13:50.460
<v Speaker 1>Right? And

00:13:51.019 --> 00:13:53.260
<v Speaker 1>also depends on how complete the note is.

00:13:53.260 --> 00:13:56.515
<v Speaker 1>So Kafka, for instance okay. Like, you just

00:13:56.515 --> 00:13:59.315
<v Speaker 1>send data to it, to a Kafka broker,

00:13:59.555 --> 00:14:01.155
<v Speaker 1>but Orbit, for instance, had a lot of

00:14:01.155 --> 00:14:02.835
<v Speaker 1>different endpoints. You can create

00:14:03.075 --> 00:14:05.635
<v Speaker 1>crew member, crew to node, post a lot

00:14:05.635 --> 00:14:06.595
<v Speaker 1>of different things.

00:14:07.315 --> 00:14:09.940
<v Speaker 1>So translate, we said, okay. You put in

00:14:09.940 --> 00:14:10.980
<v Speaker 1>a text query,

00:14:11.620 --> 00:14:13.860
<v Speaker 1>it translates it to the target language. That's

00:14:13.860 --> 00:14:15.380
<v Speaker 1>it. It does one thing. Right?

00:14:16.260 --> 00:14:19.140
<v Speaker 1>That took me about twenty minutes to implement.

00:14:19.460 --> 00:14:21.460
<v Speaker 1>So, like, at that point, I had played

00:14:21.460 --> 00:14:23.220
<v Speaker 1>a bit around with n eight n, was

00:14:23.220 --> 00:14:25.075
<v Speaker 1>a bit familiar with, like, how the notes

00:14:25.075 --> 00:14:25.795
<v Speaker 1>look like.

00:14:26.275 --> 00:14:26.835
<v Speaker 1>And,

00:14:27.395 --> 00:14:28.355
<v Speaker 1>yeah, like, basically,

00:14:28.835 --> 00:14:31.315
<v Speaker 1>how how TypeScript essentially works. So it can

00:14:31.315 --> 00:14:33.235
<v Speaker 1>be very quick. But then, again, like, I've

00:14:33.235 --> 00:14:34.675
<v Speaker 1>heard from my colleagues who have been working

00:14:34.675 --> 00:14:37.075
<v Speaker 1>on this is, like, it really boils down

00:14:37.075 --> 00:14:38.195
<v Speaker 1>to how well

00:14:38.730 --> 00:14:42.330
<v Speaker 1>documented, implemented the API itself is because that

00:14:42.330 --> 00:14:44.089
<v Speaker 1>can make a lot of difference in the

00:14:44.089 --> 00:14:46.730
<v Speaker 1>development time as well. Yeah. That makes sense

00:14:46.730 --> 00:14:47.930
<v Speaker 0>to me. Definitely.

00:14:49.770 --> 00:14:51.995
<v Speaker 0>Okay. We can talk more about the, you

00:14:51.995 --> 00:14:54.075
<v Speaker 0>know, contributing notes a little bit later. Let

00:14:54.154 --> 00:14:55.915
<v Speaker 0>let's cover some of the basics first. So

00:14:55.915 --> 00:14:57.755
<v Speaker 0>I've done that install. Does that mean I

00:14:57.755 --> 00:14:59.435
<v Speaker 0>can just run n a n?

00:15:00.315 --> 00:15:02.955
<v Speaker 1>Yes. So there's two ways that you can

00:15:02.955 --> 00:15:03.675
<v Speaker 1>do that for sure.

00:15:04.700 --> 00:15:07.020
<v Speaker 1>You can this will run n a 10,

00:15:07.100 --> 00:15:09.740
<v Speaker 1>and there's another way of writing running n

00:15:09.740 --> 00:15:11.820
<v Speaker 1>a 10. Is it and that's with tunnel.

00:15:12.380 --> 00:15:12.940
<v Speaker 1>So,

00:15:13.180 --> 00:15:15.340
<v Speaker 1>basically, that is n a 10 space start

00:15:15.340 --> 00:15:18.585
<v Speaker 1>space hyphen hyphen tunnel. And what that does

00:15:18.585 --> 00:15:20.745
<v Speaker 1>is oh, it start without the hyphen.

00:15:22.185 --> 00:15:24.425
<v Speaker 0>Dash dash tunnel. And then hyphen hyphen. Yeah.

00:15:24.425 --> 00:15:24.905
<v Speaker 1>So

00:15:25.465 --> 00:15:27.065
<v Speaker 1>what this would do is is, like, if

00:15:27.065 --> 00:15:30.320
<v Speaker 1>you are using a trigger node, which so,

00:15:30.400 --> 00:15:32.320
<v Speaker 1>like, if you're using a Telegram trigger, for

00:15:32.320 --> 00:15:34.400
<v Speaker 1>instance, or a GitHub trigger, your n eight

00:15:34.400 --> 00:15:36.800
<v Speaker 1>n instance needs to be accessible from the

00:15:36.800 --> 00:15:37.440
<v Speaker 1>Internet.

00:15:38.000 --> 00:15:39.920
<v Speaker 1>So this will use the local tunnel

00:15:40.240 --> 00:15:42.215
<v Speaker 1>and make it accessible to the Internet. But

00:15:42.215 --> 00:15:43.335
<v Speaker 1>this is really for

00:15:43.815 --> 00:15:45.815
<v Speaker 1>development and testing purposes.

00:15:46.695 --> 00:15:50.215
<v Speaker 0>Great. Okay. So we're anticipating that we may

00:15:50.215 --> 00:15:51.655
<v Speaker 0>do something that requires

00:15:52.135 --> 00:15:53.895
<v Speaker 0>something on the internet to speak back to

00:15:53.895 --> 00:15:55.415
<v Speaker 0>our n a n, so we're adding the

00:15:55.415 --> 00:15:56.135
<v Speaker 0>tunnel parameter.

00:15:56.930 --> 00:15:59.089
<v Speaker 0>Yes. I think I understood that right. Okay.

00:16:00.130 --> 00:16:02.769
<v Speaker 0>So waiting for tunnel, I suppose I should

00:16:02.769 --> 00:16:03.890
<v Speaker 0>let on the network.

00:16:04.690 --> 00:16:06.370
<v Speaker 0>I can just push oh,

00:16:06.769 --> 00:16:08.769
<v Speaker 0>I bet it opens over here. Oh, it

00:16:08.769 --> 00:16:09.570
<v Speaker 0>didn't. Wow.

00:16:10.065 --> 00:16:11.825
<v Speaker 0>That was good. Okay.

00:16:12.865 --> 00:16:14.785
<v Speaker 0>No, I'm just every time I've opened a

00:16:14.785 --> 00:16:16.625
<v Speaker 0>browser when I'm on the stream it moves

00:16:16.625 --> 00:16:17.825
<v Speaker 0>over there and I have to go and

00:16:17.825 --> 00:16:20.385
<v Speaker 0>fetch it but we're good. Anyway, not important.

00:16:20.625 --> 00:16:22.305
<v Speaker 0>Awesome. So what do we have

00:16:23.300 --> 00:16:26.500
<v Speaker 0>here? I see a draggy thing. I see

00:16:26.580 --> 00:16:28.260
<v Speaker 0>yeah. I figured that was gonna do something

00:16:28.260 --> 00:16:30.100
<v Speaker 0>there. Oh, code that.

00:16:31.540 --> 00:16:34.260
<v Speaker 0>I'm assuming with my naive knowledge here, this

00:16:34.260 --> 00:16:35.380
<v Speaker 0>is an empty workflow.

00:16:36.615 --> 00:16:38.375
<v Speaker 1>It is an empty workflow. So this is

00:16:38.375 --> 00:16:40.055
<v Speaker 1>a new workflow. And

00:16:40.455 --> 00:16:42.615
<v Speaker 1>what we are looking at this whole screen

00:16:42.615 --> 00:16:43.255
<v Speaker 1>is

00:16:43.975 --> 00:16:46.535
<v Speaker 1>called the editor UI. So it's essentially an

00:16:46.535 --> 00:16:49.495
<v Speaker 1>empty canvas for you to design your workflows.

00:16:49.495 --> 00:16:50.935
<v Speaker 0>Yeah. Alright.

00:16:51.095 --> 00:16:53.010
<v Speaker 0>I'm just gonna keep executing that because it's

00:16:53.010 --> 00:16:54.290
<v Speaker 0>cool. Like alright.

00:16:56.050 --> 00:16:57.570
<v Speaker 1>So I So we start off

00:16:57.970 --> 00:16:59.330
<v Speaker 0>Sorry. On your go, Tanny.

00:17:00.130 --> 00:17:01.970
<v Speaker 1>Yeah. I I was mentioning, like, we start

00:17:01.970 --> 00:17:03.090
<v Speaker 1>off with the start node.

00:17:04.115 --> 00:17:06.275
<v Speaker 1>Like, all workflows would have a start node

00:17:06.275 --> 00:17:07.874
<v Speaker 1>even if it's used or not.

00:17:08.675 --> 00:17:10.915
<v Speaker 1>So in case you're using a workflow that's

00:17:10.915 --> 00:17:12.914
<v Speaker 1>being called with a trigger node,

00:17:13.714 --> 00:17:14.994
<v Speaker 1>you can safely ignore it.

00:17:16.319 --> 00:17:18.720
<v Speaker 0>Okay. But if you are manually executing

00:17:18.720 --> 00:17:19.839
<v Speaker 1>workflow,

00:17:19.919 --> 00:17:21.440
<v Speaker 1>the first node needs to be connected to

00:17:21.440 --> 00:17:22.480
<v Speaker 1>the start node.

00:17:23.679 --> 00:17:26.000
<v Speaker 0>Right. Okay. So that so when I drag

00:17:26.000 --> 00:17:27.520
<v Speaker 0>this over here, I get to create a

00:17:27.520 --> 00:17:29.039
<v Speaker 0>node thing and I can just

00:17:29.905 --> 00:17:31.745
<v Speaker 0>pick any of these that I want. Right?

00:17:31.745 --> 00:17:34.865
<v Speaker 0>And it's gonna Yes. Do something. Okay. What

00:17:34.865 --> 00:17:36.865
<v Speaker 0>is a a good note then for us

00:17:36.865 --> 00:17:38.945
<v Speaker 0>just to do something that is visual and

00:17:38.945 --> 00:17:39.985
<v Speaker 0>we can see it working?

00:17:41.105 --> 00:17:41.745
<v Speaker 1>Okay.

00:17:42.625 --> 00:17:44.065
<v Speaker 1>That's a very tough question.

00:17:46.330 --> 00:17:47.770
<v Speaker 1>Let's do HTTP

00:17:47.770 --> 00:17:50.649
<v Speaker 1>request node. I was just thinking that so

00:17:50.649 --> 00:17:51.210
<v Speaker 0>good.

00:17:51.690 --> 00:17:52.489
<v Speaker 0>So

00:17:52.490 --> 00:17:53.369
<v Speaker 0>we have

00:17:54.490 --> 00:17:56.490
<v Speaker 0>my friend wrote this app and I've used

00:17:56.490 --> 00:17:57.690
<v Speaker 0>this a few times now on a stream

00:17:57.690 --> 00:17:59.529
<v Speaker 0>called Rbox.app that just gives us a web

00:17:59.529 --> 00:18:01.365
<v Speaker 0>hook endpoint. So I guess we we can

00:18:01.365 --> 00:18:02.485
<v Speaker 0>send something to this.

00:18:02.965 --> 00:18:04.325
<v Speaker 0>Yeah. We can for sure. We can. Let's

00:18:04.325 --> 00:18:05.845
<v Speaker 1>do it. See plans

00:18:06.245 --> 00:18:07.445
<v Speaker 0>coming already.

00:18:07.605 --> 00:18:09.605
<v Speaker 0>So let me see if I can work

00:18:09.605 --> 00:18:11.605
<v Speaker 0>this out. So no authentication.

00:18:12.165 --> 00:18:13.445
<v Speaker 0>I am gonna send

00:18:15.300 --> 00:18:17.140
<v Speaker 0>a put because

00:18:17.140 --> 00:18:20.260
<v Speaker 0>why not. I'm gonna drop in that URL.

00:18:23.140 --> 00:18:24.740
<v Speaker 0>I'll just ignore that for now. I don't

00:18:24.740 --> 00:18:26.420
<v Speaker 0>know if it I don't think it will

00:18:26.420 --> 00:18:27.060
<v Speaker 0>do anything.

00:18:28.745 --> 00:18:30.505
<v Speaker 0>Can

00:18:30.505 --> 00:18:31.625
<v Speaker 0>I send?

00:18:31.625 --> 00:18:33.065
<v Speaker 0>Yeah. Okay.

00:18:35.705 --> 00:18:38.025
<v Speaker 0>So I can just click add parameter.

00:18:38.025 --> 00:18:39.225
<v Speaker 0>Can I just send JSON?

00:18:40.710 --> 00:18:43.590
<v Speaker 1>You can. So you can send so this

00:18:43.590 --> 00:18:46.549
<v Speaker 1>would basically create a key value pair

00:18:47.750 --> 00:18:49.270
<v Speaker 1>in body parameters

00:18:49.270 --> 00:18:50.549
<v Speaker 1>if you use this.

00:18:51.270 --> 00:18:53.830
<v Speaker 1>But also if you click on JSON

00:18:54.565 --> 00:18:57.605
<v Speaker 1>yeah. So you could also then add JSON

00:18:57.605 --> 00:18:58.485
<v Speaker 1>in there

00:19:00.245 --> 00:19:01.924
<v Speaker 1>in the body parameters.

00:19:04.085 --> 00:19:06.725
<v Speaker 1>Yeah. You can enter add JSON there. There

00:19:06.725 --> 00:19:07.045
<v Speaker 0>we go.

00:19:08.140 --> 00:19:09.820
<v Speaker 0>Now I feel at home. Right.

00:19:12.220 --> 00:19:14.140
<v Speaker 0>Cool that tab key worked. There's a feature

00:19:14.140 --> 00:19:14.940
<v Speaker 0>request.

00:19:15.580 --> 00:19:16.299
<v Speaker 0>Name,

00:19:18.220 --> 00:19:19.179
<v Speaker 0>David.

00:19:21.980 --> 00:19:23.044
<v Speaker 0>Let the

00:19:23.445 --> 00:19:25.684
<v Speaker 0>it's gonna be my birthday. I'll add my

00:19:25.684 --> 00:19:26.404
<v Speaker 0>age

00:19:27.125 --> 00:19:28.164
<v Speaker 0>and

00:19:29.045 --> 00:19:30.164
<v Speaker 0>we'll see

00:19:31.525 --> 00:19:32.404
<v Speaker 0>website.

00:19:32.885 --> 00:19:35.285
<v Speaker 0>I know this is completely unimportant,

00:19:35.285 --> 00:19:36.565
<v Speaker 0>but I'm just gonna do it.

00:19:39.880 --> 00:19:41.320
<v Speaker 0>So I just click close. Yeah.

00:19:42.519 --> 00:19:44.999
<v Speaker 1>If I'm not mistaken, you'd probably have to

00:19:45.720 --> 00:19:48.440
<v Speaker 1>send that as parameter because this is

00:19:49.000 --> 00:19:51.445
<v Speaker 1>like, send that as a JSON object and

00:19:51.445 --> 00:19:53.684
<v Speaker 1>this right now is like a string.

00:19:54.405 --> 00:19:56.165
<v Speaker 1>But let's see what the notes says if

00:19:56.165 --> 00:19:58.805
<v Speaker 1>you execute it. So I I was just

00:19:58.805 --> 00:20:01.045
<v Speaker 0>under the assumption and when I click this

00:20:02.805 --> 00:20:04.805
<v Speaker 0>Mhmm. I was just gonna do raw JSON

00:20:04.805 --> 00:20:07.480
<v Speaker 0>which this let's try it. Alright. Well, I

00:20:07.480 --> 00:20:08.680
<v Speaker 0>think it can happen it can break. Now

00:20:08.680 --> 00:20:10.760
<v Speaker 0>I also see settings. I always like to

00:20:10.760 --> 00:20:12.040
<v Speaker 0>click buttons so

00:20:12.200 --> 00:20:13.640
<v Speaker 0>oh, I can pick the color.

00:20:14.280 --> 00:20:16.120
<v Speaker 0>I'm a sucker for these weird tweaks as

00:20:16.120 --> 00:20:17.000
<v Speaker 0>well. Let's go with that.

00:20:19.095 --> 00:20:21.975
<v Speaker 0>Execute once, retry and fail. Cool, that sounds

00:20:21.975 --> 00:20:22.615
<v Speaker 0>good.

00:20:23.575 --> 00:20:24.934
<v Speaker 0>Continue and fail.

00:20:25.655 --> 00:20:27.495
<v Speaker 0>I guess that will become more prominent or

00:20:27.495 --> 00:20:29.095
<v Speaker 0>important when we have more than one step

00:20:29.095 --> 00:20:29.895
<v Speaker 0>to our workflow.

00:20:31.320 --> 00:20:32.840
<v Speaker 0>So am I done? Can I just close

00:20:32.840 --> 00:20:33.559
<v Speaker 0>this again?

00:20:34.360 --> 00:20:35.880
<v Speaker 0>And this is that's it, right? That's my

00:20:35.880 --> 00:20:36.600
<v Speaker 0>workflow.

00:20:36.760 --> 00:20:37.879
<v Speaker 0>Okay. Yeah.

00:20:38.840 --> 00:20:40.360
<v Speaker 0>And I just click go.

00:20:43.675 --> 00:20:44.395
<v Speaker 0>Nice.

00:20:48.315 --> 00:20:49.275
<v Speaker 0>So you can

00:20:49.995 --> 00:20:50.875
<v Speaker 0>Okay.

00:20:51.675 --> 00:20:52.395
<v Speaker 0>Tada.

00:20:53.675 --> 00:20:56.715
<v Speaker 0>Alright. I'm easily easily pleased. Perfect. Cool.

00:20:56.715 --> 00:20:57.355
<v Speaker 0>I like it.

00:20:59.980 --> 00:21:01.100
<v Speaker 0>Okay. So

00:21:01.660 --> 00:21:02.780
<v Speaker 0>that was easy.

00:21:05.980 --> 00:21:08.540
<v Speaker 1>So what the HTTP request is quite useful

00:21:08.540 --> 00:21:09.580
<v Speaker 1>for is basically,

00:21:10.555 --> 00:21:12.315
<v Speaker 1>like, it's we used to call it the

00:21:12.315 --> 00:21:14.875
<v Speaker 1>Swiss Army Knife node for n a 10.

00:21:15.115 --> 00:21:17.275
<v Speaker 1>So, like, we have nodes for a lot

00:21:17.275 --> 00:21:18.155
<v Speaker 1>of services.

00:21:18.395 --> 00:21:19.995
<v Speaker 1>But let's say you have a service with

00:21:19.995 --> 00:21:21.115
<v Speaker 1>the rest API,

00:21:21.755 --> 00:21:23.195
<v Speaker 1>and we don't have a node for that.

00:21:23.195 --> 00:21:25.730
<v Speaker 1>You can always use the HTTP request node.

00:21:25.730 --> 00:21:27.649
<v Speaker 1>You can make authentication with it, send it

00:21:27.649 --> 00:21:30.049
<v Speaker 1>different parameters, even some binary files, and so

00:21:30.049 --> 00:21:32.529
<v Speaker 1>on. So if we don't have a node

00:21:32.529 --> 00:21:34.850
<v Speaker 1>for something, you can always use the HTTP

00:21:34.850 --> 00:21:37.010
<v Speaker 1>request node for making that happen.

00:21:37.725 --> 00:21:38.524
<v Speaker 0>Okay.

00:21:39.804 --> 00:21:41.085
<v Speaker 0>So should we

00:21:41.725 --> 00:21:42.684
<v Speaker 0>add

00:21:43.005 --> 00:21:44.605
<v Speaker 0>another node

00:21:44.605 --> 00:21:45.484
<v Speaker 0>or

00:21:45.565 --> 00:21:47.245
<v Speaker 0>do we save this workflow?

00:21:47.245 --> 00:21:48.765
<v Speaker 0>Like, right now it says workflow is not

00:21:48.765 --> 00:21:50.445
<v Speaker 0>saved. So I'm assuming if I close this

00:21:50.445 --> 00:21:52.044
<v Speaker 0>and go away, it it disappears

00:21:52.170 --> 00:21:52.570
<v Speaker 0>like

00:21:52.970 --> 00:21:54.410
<v Speaker 0>If I give you a warning and if

00:21:54.410 --> 00:21:55.370
<v Speaker 1>you still leave,

00:21:57.690 --> 00:21:58.970
<v Speaker 1>then it goes How confident are you just

00:21:58.970 --> 00:22:00.010
<v Speaker 0>gonna give me a warning if I had

00:22:00.010 --> 00:22:01.370
<v Speaker 0>closed tab, will it warn me or

00:22:02.090 --> 00:22:04.570
<v Speaker 1>I'd I'd I'm very confident here.

00:22:06.505 --> 00:22:07.624
<v Speaker 1>Hitch. Yeah.

00:22:08.265 --> 00:22:09.465
<v Speaker 0>Oh, yes. Okay.

00:22:09.945 --> 00:22:11.385
<v Speaker 0>Yeah.

00:22:11.385 --> 00:22:14.025
<v Speaker 0>Cancel. Okay. So can I save the how

00:22:14.025 --> 00:22:15.864
<v Speaker 0>do I save it? Let's see.

00:22:16.345 --> 00:22:18.184
<v Speaker 1>If you go on on the extreme left

00:22:18.184 --> 00:22:18.905
<v Speaker 1>workflows.

00:22:22.019 --> 00:22:24.739
<v Speaker 1>Save it. Okay. So basic

00:22:24.820 --> 00:22:26.419
<v Speaker 0>h t t p So this

00:22:27.220 --> 00:22:28.419
<v Speaker 1>feature with

00:22:28.659 --> 00:22:30.659
<v Speaker 1>if your workflow is not saved, it gives

00:22:30.659 --> 00:22:31.539
<v Speaker 1>a warning.

00:22:31.940 --> 00:22:34.099
<v Speaker 1>It was implemented in the latest version.

00:22:34.500 --> 00:22:37.535
<v Speaker 1>No. Really? Last week. The version last week.

00:22:37.535 --> 00:22:38.815
<v Speaker 1>Yeah. Point nine one.

00:22:39.295 --> 00:22:40.975
<v Speaker 0>And you were still confident that it was

00:22:40.975 --> 00:22:42.975
<v Speaker 0>gonna give me a warning. Nice. Okay. Yeah.

00:22:42.975 --> 00:22:44.895
<v Speaker 1>I was I was told I I I

00:22:44.895 --> 00:22:46.975
<v Speaker 1>tried refreshing page after it was released. I

00:22:46.975 --> 00:22:48.655
<v Speaker 1>closed on tabs. I've lost a couple of

00:22:48.655 --> 00:22:50.575
<v Speaker 1>workflows because it didn't give me a warning

00:22:50.575 --> 00:22:52.510
<v Speaker 1>before. So I was I tried it all

00:22:52.510 --> 00:22:54.429
<v Speaker 1>the different ways and yeah. Like

00:22:55.390 --> 00:22:58.510
<v Speaker 1>Alright. What what's this active button for?

00:22:59.230 --> 00:23:01.470
<v Speaker 1>So active button is useful when you are

00:23:01.470 --> 00:23:04.030
<v Speaker 1>using a trigger note. So in n8n, you

00:23:04.030 --> 00:23:06.510
<v Speaker 1>have essentially two different kinds of notes.

00:23:07.845 --> 00:23:10.325
<v Speaker 1>So it's like trigger notes and regular notes.

00:23:10.325 --> 00:23:12.085
<v Speaker 1>And I feel a bit bad about calling

00:23:12.085 --> 00:23:14.164
<v Speaker 1>them regular notes. They're quite extraordinary.

00:23:14.405 --> 00:23:15.525
<v Speaker 1>But yeah. Okay.

00:23:15.925 --> 00:23:18.405
<v Speaker 1>So the trigger notes essentially start a workflow

00:23:18.405 --> 00:23:21.580
<v Speaker 1>and supply initial data. So a workflow can

00:23:21.580 --> 00:23:25.340
<v Speaker 1>contain multiple trigger nodes, but with each execution,

00:23:25.659 --> 00:23:27.659
<v Speaker 1>only one of them will execute. So this

00:23:27.659 --> 00:23:29.980
<v Speaker 1>is because the other trigger nodes would not

00:23:29.980 --> 00:23:31.179
<v Speaker 1>have any input

00:23:31.419 --> 00:23:33.580
<v Speaker 1>as they are, like, the nodes which are

00:23:34.294 --> 00:23:37.654
<v Speaker 1>which are the starting of a workflow's execution.

00:23:38.375 --> 00:23:40.934
<v Speaker 1>So an example of that could be a

00:23:40.934 --> 00:23:42.134
<v Speaker 1>cron node. So

00:23:42.855 --> 00:23:45.414
<v Speaker 1>cron node, if you say, run every Monday

00:23:45.414 --> 00:23:46.775
<v Speaker 1>or, like, the example I gave in the

00:23:46.775 --> 00:23:48.855
<v Speaker 1>beginning, like, run every morning at 8AM.

00:23:49.210 --> 00:23:51.130
<v Speaker 1>So there's a couple of if you click

00:23:51.130 --> 00:23:52.970
<v Speaker 1>on add cron time, there's a couple of

00:23:52.970 --> 00:23:55.290
<v Speaker 1>options you can choose. Like, every day, you

00:23:55.290 --> 00:23:56.090
<v Speaker 1>can select

00:23:56.490 --> 00:23:57.450
<v Speaker 1>every minute.

00:23:58.090 --> 00:24:00.810
<v Speaker 1>And, like, you can also add a custom

00:24:01.445 --> 00:24:04.085
<v Speaker 1>cron expression, I suppose it's called. I always

00:24:04.085 --> 00:24:05.845
<v Speaker 1>use a website to build them if I

00:24:05.845 --> 00:24:07.205
<v Speaker 1>need to do that.

00:24:07.605 --> 00:24:09.845
<v Speaker 1>But yeah. Does this zero zero just mean

00:24:09.845 --> 00:24:11.124
<v Speaker 0>every error, every minute?

00:24:12.325 --> 00:24:14.885
<v Speaker 1>No. So it says every day at zero.

00:24:15.570 --> 00:24:17.969
<v Speaker 0>So Ah, okay. 12AM.

00:24:17.970 --> 00:24:21.809
<v Speaker 1>Twelve AM. Yes. Can I just star?

00:24:22.210 --> 00:24:24.049
<v Speaker 0>Like, the actual oh, no. That didn't work.

00:24:24.049 --> 00:24:26.769
<v Speaker 0>Okay. Yeah. Maybe I should just do

00:24:27.570 --> 00:24:29.570
<v Speaker 0>oh, there we go. Every minute. It was

00:24:29.570 --> 00:24:31.090
<v Speaker 0>easier than I thought it was gonna be.

00:24:31.090 --> 00:24:32.745
<v Speaker 0>Alright. Let's just So

00:24:33.865 --> 00:24:36.345
<v Speaker 1>yeah. So these are like the trigger notes.

00:24:36.505 --> 00:24:37.705
<v Speaker 1>Go ahead. Go ahead.

00:24:38.665 --> 00:24:39.385
<v Speaker 0>Yeah.

00:24:39.625 --> 00:24:40.985
<v Speaker 0>Is that enabled now?

00:24:44.025 --> 00:24:45.945
<v Speaker 1>No. So you need to like, if you

00:24:46.490 --> 00:24:47.850
<v Speaker 1>click on active,

00:24:48.090 --> 00:24:49.610
<v Speaker 1>you don't need to connect it. So it's

00:24:49.610 --> 00:24:51.450
<v Speaker 1>the it would be the first node in

00:24:51.450 --> 00:24:52.330
<v Speaker 1>a workflow.

00:24:53.450 --> 00:24:54.730
<v Speaker 1>So you can now connect it to the

00:24:54.730 --> 00:24:56.250
<v Speaker 1>HTTP request node

00:24:58.665 --> 00:25:01.705
<v Speaker 1>or to the small box on the left

00:25:01.705 --> 00:25:02.585
<v Speaker 1>of the node.

00:25:03.225 --> 00:25:04.905
<v Speaker 1>To the left. Yes. You

00:25:06.745 --> 00:25:08.585
<v Speaker 1>can actually disconnect it with the start node

00:25:08.585 --> 00:25:10.985
<v Speaker 1>or you can keep it. Doesn't wouldn't matter.

00:25:11.560 --> 00:25:13.560
<v Speaker 0>So I guess what I what I'm thinking

00:25:13.560 --> 00:25:16.200
<v Speaker 0>here then is that with I can add

00:25:16.200 --> 00:25:18.200
<v Speaker 0>multiple trigger nodes

00:25:18.280 --> 00:25:20.760
<v Speaker 0>and they will all be responsible for checking

00:25:20.760 --> 00:25:23.480
<v Speaker 0>off this HTTP request when they get triggered.

00:25:23.445 --> 00:25:25.845
<v Speaker 0>Right? So I can say Yes. Send this

00:25:25.845 --> 00:25:28.085
<v Speaker 0>HTTP request when all of these when any

00:25:28.085 --> 00:25:29.445
<v Speaker 0>of these things happen, and I could just

00:25:29.445 --> 00:25:31.205
<v Speaker 0>be any arbitrary number of trigger notes that

00:25:31.205 --> 00:25:32.004
<v Speaker 0>I want. Right?

00:25:32.725 --> 00:25:33.764
<v Speaker 1>Yep. Yep.

00:25:34.245 --> 00:25:35.924
<v Speaker 1>But, like, only one would execute at a

00:25:35.924 --> 00:25:37.684
<v Speaker 1>time, but, yeah, you can have multiple triggers

00:25:37.684 --> 00:25:40.230
<v Speaker 1>as well. So now that you activated the

00:25:40.230 --> 00:25:40.950
<v Speaker 1>workflow,

00:25:41.750 --> 00:25:44.470
<v Speaker 1>this would, trigger this query every minute, I

00:25:44.470 --> 00:25:47.110
<v Speaker 1>suppose. That's the setting you you added.

00:25:48.230 --> 00:25:48.950
<v Speaker 0>Yeah.

00:25:49.110 --> 00:25:50.790
<v Speaker 0>Well, I don't know why this isn't refreshing.

00:25:51.945 --> 00:25:53.865
<v Speaker 0>Try again. Well, I don't think it's just

00:25:53.865 --> 00:25:55.784
<v Speaker 0>it's just not saying anything yet. Okay.

00:25:56.825 --> 00:25:58.904
<v Speaker 0>So I guess how okay. There's there's my

00:25:58.904 --> 00:26:01.304
<v Speaker 0>next question then. Can I view the

00:26:02.345 --> 00:26:05.304
<v Speaker 0>events or

00:26:04.039 --> 00:26:05.240
<v Speaker 0>soon as I said that, I've seen that?

00:26:05.240 --> 00:26:07.080
<v Speaker 0>I'm assuming that's execution. It's just gonna show

00:26:07.080 --> 00:26:08.679
<v Speaker 0>me. Yes. Okay.

00:26:09.000 --> 00:26:10.520
<v Speaker 0>So this was my

00:26:10.760 --> 00:26:12.440
<v Speaker 0>was this my manual trigger?

00:26:12.840 --> 00:26:13.960
<v Speaker 0>No. Yes.

00:26:15.400 --> 00:26:17.799
<v Speaker 1>So if you take a look at this

00:26:18.255 --> 00:26:20.014
<v Speaker 1>so more this trigger.

00:26:22.895 --> 00:26:24.975
<v Speaker 1>So before this, like, I'd show you one

00:26:24.975 --> 00:26:26.975
<v Speaker 1>thing. Oh, yeah. Sure. Go for it. Sorry.

00:26:26.975 --> 00:26:29.294
<v Speaker 0>I'm getting scatterbrained here. No worries.

00:26:29.935 --> 00:26:31.775
<v Speaker 1>If you go on the left side, under

00:26:31.775 --> 00:26:33.935
<v Speaker 1>workflows, there's a setting there's settings.

00:26:37.020 --> 00:26:38.460
<v Speaker 1>So you can have

00:26:39.260 --> 00:26:41.020
<v Speaker 1>settings for each workflow.

00:26:41.420 --> 00:26:44.460
<v Speaker 1>So you can send, like, your time zone.

00:26:45.420 --> 00:26:47.740
<v Speaker 1>You can also set what sort of

00:26:48.140 --> 00:26:51.085
<v Speaker 1>data executions would be saved. So it's like,

00:26:51.404 --> 00:26:53.244
<v Speaker 1>error as execution

00:26:53.565 --> 00:26:54.364
<v Speaker 1>or

00:26:55.005 --> 00:26:55.884
<v Speaker 1>success.

00:26:56.044 --> 00:26:58.445
<v Speaker 1>So, like, you'd have to specify. So the

00:26:58.525 --> 00:27:01.485
<v Speaker 1>a lot of defaults is yes. Yep. So

00:27:03.929 --> 00:27:06.969
<v Speaker 1>it says basically here, save manual executions.

00:27:07.130 --> 00:27:09.370
<v Speaker 1>Default, it's set to no. So that was

00:27:09.370 --> 00:27:09.929
<v Speaker 1>the

00:27:10.570 --> 00:27:12.089
<v Speaker 1>cron node trigger that.

00:27:12.409 --> 00:27:14.809
<v Speaker 0>Oh, okay. Alright. So if I click save

00:27:14.809 --> 00:27:17.054
<v Speaker 0>on that and do a manual execution,

00:27:17.774 --> 00:27:19.695
<v Speaker 0>that means then I come here. Yeah. We

00:27:19.695 --> 00:27:21.854
<v Speaker 0>see the manual and I'll see that my

00:27:22.015 --> 00:27:24.335
<v Speaker 0>cron one then has run twice at twenty

00:27:24.335 --> 00:27:26.895
<v Speaker 0>nine zero seven and twenty eight zero eight.

00:27:26.895 --> 00:27:29.375
<v Speaker 0>So yeah, roughly a minute apart. So let's

00:27:29.375 --> 00:27:30.015
<v Speaker 0>see if I can.

00:27:33.500 --> 00:27:34.620
<v Speaker 0>Oh yeah. Okay.

00:27:34.940 --> 00:27:35.899
<v Speaker 0>It's working.

00:27:36.300 --> 00:27:38.460
<v Speaker 1>I was thinking you for some reason that

00:27:38.460 --> 00:27:40.060
<v Speaker 1>you said every second, but it was every

00:27:40.060 --> 00:27:42.140
<v Speaker 1>minute. So checks out. Yeah. Yep. And there's

00:27:42.140 --> 00:27:43.740
<v Speaker 0>another one off. Right. Okay. I could probably

00:27:43.740 --> 00:27:44.620
<v Speaker 0>turn that off now.

00:27:45.785 --> 00:27:46.504
<v Speaker 0>Yep.

00:27:49.385 --> 00:27:50.904
<v Speaker 1>Click this.

00:27:51.145 --> 00:27:53.304
<v Speaker 1>Or you can also deactivate the workflow on

00:27:53.304 --> 00:27:54.184
<v Speaker 1>top right.

00:27:54.985 --> 00:27:56.744
<v Speaker 1>You don't need to disconnect it.

00:27:56.905 --> 00:27:59.785
<v Speaker 1>Because this would still trigger the workflow every

00:27:59.785 --> 00:28:00.105
<v Speaker 1>minute,

00:28:00.710 --> 00:28:03.270
<v Speaker 1>but nothing would happen because nothing is connected

00:28:03.270 --> 00:28:04.470
<v Speaker 1>to the current node.

00:28:05.830 --> 00:28:07.590
<v Speaker 0>Oh, like, oh, I can turn off the

00:28:07.590 --> 00:28:09.990
<v Speaker 0>trigger with that little pause thing. Right?

00:28:11.430 --> 00:28:14.615
<v Speaker 1>So this deactivates the node. So to, like,

00:28:14.615 --> 00:28:17.575
<v Speaker 1>turn off the active state of the workflow

00:28:17.575 --> 00:28:19.575
<v Speaker 1>on the top right, you have the active

00:28:19.575 --> 00:28:22.055
<v Speaker 1>button. You can toggle that.

00:28:22.775 --> 00:28:24.215
<v Speaker 0>Alright. Okay. So I can turn off the

00:28:24.215 --> 00:28:26.375
<v Speaker 0>entire workflow, but I can also just pause

00:28:26.615 --> 00:28:28.455
<v Speaker 0>and turn off individual triggers as well if

00:28:28.455 --> 00:28:28.775
<v Speaker 0>I want.

00:28:29.710 --> 00:28:30.349
<v Speaker 0>Yep.

00:28:30.830 --> 00:28:31.629
<v Speaker 0>Alright,

00:28:31.710 --> 00:28:32.509
<v Speaker 0>save.

00:28:33.549 --> 00:28:35.230
<v Speaker 0>Okay, cool, I like it. I can already

00:28:35.230 --> 00:28:36.990
<v Speaker 0>start to see how this is forming the

00:28:36.990 --> 00:28:39.389
<v Speaker 0>building blocks of like the bigger automation or

00:28:39.389 --> 00:28:41.309
<v Speaker 0>workflow things that I would probably wanna do

00:28:41.309 --> 00:28:43.389
<v Speaker 0>with this tool. That's really cool, I'm happy.

00:28:44.534 --> 00:28:45.735
<v Speaker 0>What do we what should we take a

00:28:45.735 --> 00:28:46.534
<v Speaker 0>look at next?

00:28:48.375 --> 00:28:50.534
<v Speaker 1>Should we get data from a rest endpoint

00:28:50.534 --> 00:28:52.855
<v Speaker 1>and do something with it? I mean, it's

00:28:52.855 --> 00:28:55.014
<v Speaker 0>as difficult, but I'll give it a shot.

00:28:56.294 --> 00:28:56.855
<v Speaker 1>It's easy.

00:28:58.610 --> 00:29:02.050
<v Speaker 0>Alright. So So New workflow. Teach me.

00:29:02.850 --> 00:29:05.810
<v Speaker 1>So let's use this API I discovered a

00:29:05.810 --> 00:29:07.490
<v Speaker 1>few months back. It's called the cocktail d

00:29:07.490 --> 00:29:09.490
<v Speaker 1>b API. Let's let's learn to make some

00:29:09.490 --> 00:29:11.330
<v Speaker 1>cocktails while we are learning about n a

00:29:11.330 --> 00:29:11.970
<v Speaker 1>10 as well.

00:29:13.024 --> 00:29:15.984
<v Speaker 0>Alright. Cocktail d b API.

00:29:20.065 --> 00:29:22.144
<v Speaker 1>And if you search for random on the

00:29:22.144 --> 00:29:23.744
<v Speaker 1>page, command f.

00:29:25.345 --> 00:29:27.345
<v Speaker 0>Look up a random cocktail.

00:29:27.820 --> 00:29:29.340
<v Speaker 1>So let's copy that.

00:29:32.380 --> 00:29:34.620
<v Speaker 0>Alright. Okay. So we get some JSON back.

00:29:34.620 --> 00:29:35.820
<v Speaker 0>So I'm assuming

00:29:35.980 --> 00:29:37.980
<v Speaker 0>you're gonna want me to add

00:29:38.780 --> 00:29:40.140
<v Speaker 0>HTTP

00:29:40.540 --> 00:29:41.419
<v Speaker 0>request?

00:29:42.060 --> 00:29:42.540
<v Speaker 1>Exactly.

00:29:43.765 --> 00:29:46.005
<v Speaker 0>And we're gonna do a get request to

00:29:46.005 --> 00:29:47.044
<v Speaker 0>that URL

00:29:47.044 --> 00:29:47.845
<v Speaker 0>and

00:29:52.485 --> 00:29:54.164
<v Speaker 0>I hook this up

00:29:54.645 --> 00:29:56.005
<v Speaker 0>and then hit execute.

00:29:58.710 --> 00:29:59.830
<v Speaker 0>Okay. So

00:30:00.550 --> 00:30:02.630
<v Speaker 0>You can double click it? Double click it?

00:30:02.630 --> 00:30:04.070
<v Speaker 0>Alright. That was my next Okay.

00:30:06.070 --> 00:30:08.150
<v Speaker 0>So we can actually see the JSON.

00:30:09.590 --> 00:30:11.750
<v Speaker 0>Ah, there we go. That's much better. Nice.

00:30:11.835 --> 00:30:12.955
<v Speaker 0>Okay. So

00:30:16.235 --> 00:30:17.674
<v Speaker 0>I'm assuming

00:30:17.755 --> 00:30:18.875
<v Speaker 0>in fact, why don't what what do we

00:30:18.875 --> 00:30:20.395
<v Speaker 0>do next? I I don't wanna assume. I'll

00:30:20.395 --> 00:30:21.195
<v Speaker 0>get it wrong.

00:30:21.755 --> 00:30:22.794
<v Speaker 1>Okay.

00:30:23.434 --> 00:30:25.274
<v Speaker 1>So what we can do is

00:30:26.154 --> 00:30:27.515
<v Speaker 1>shall we create

00:30:28.540 --> 00:30:29.900
<v Speaker 1>we can do a lot of things with

00:30:29.900 --> 00:30:30.460
<v Speaker 1>this.

00:30:31.580 --> 00:30:33.900
<v Speaker 1>Should we play around with Telegram maybe?

00:30:33.980 --> 00:30:36.060
<v Speaker 1>Or or would you like to us to

00:30:36.060 --> 00:30:37.660
<v Speaker 1>make a graphic for this?

00:30:38.220 --> 00:30:40.059
<v Speaker 0>So What should we do?

00:30:40.540 --> 00:30:41.980
<v Speaker 0>I mean, well, right now, I want a

00:30:41.980 --> 00:30:42.380
<v Speaker 0>cocktail,

00:30:42.795 --> 00:30:45.115
<v Speaker 0>but I'm assuming any n can't do that.

00:30:45.835 --> 00:30:47.675
<v Speaker 0>Why I mean, what I think what I'm

00:30:47.755 --> 00:30:50.395
<v Speaker 0>okay. I can see use cases where I

00:30:50.395 --> 00:30:52.155
<v Speaker 0>wanna had an API, I wanna fetch some

00:30:52.155 --> 00:30:52.795
<v Speaker 0>data.

00:30:54.315 --> 00:30:55.940
<v Speaker 0>How do I pack out bits of this

00:30:55.940 --> 00:30:57.700
<v Speaker 0>data that I think are important? Is that

00:30:57.700 --> 00:31:00.180
<v Speaker 0>just a new node? How does any n

00:31:00.180 --> 00:31:02.260
<v Speaker 0>help me dissect that JSON?

00:31:03.220 --> 00:31:03.860
<v Speaker 1>Cool.

00:31:04.420 --> 00:31:06.820
<v Speaker 1>So what we can do is add a

00:31:06.820 --> 00:31:07.940
<v Speaker 1>set node after this.

00:31:10.395 --> 00:31:12.955
<v Speaker 0>Okay. So I can just go boop and

00:31:12.955 --> 00:31:15.195
<v Speaker 1>then You can also press on tab

00:31:15.675 --> 00:31:17.275
<v Speaker 1>that opens up the

00:31:18.155 --> 00:31:19.515
<v Speaker 0>Nice.

00:31:23.300 --> 00:31:25.220
<v Speaker 0>Okay. Can what's what's the what's the set

00:31:25.220 --> 00:31:25.860
<v Speaker 0>node?

00:31:26.420 --> 00:31:29.140
<v Speaker 1>So set node, can set different variables.

00:31:30.020 --> 00:31:32.500
<v Speaker 1>These could be new variables, like new JSON

00:31:32.500 --> 00:31:33.220
<v Speaker 1>entry points.

00:31:34.515 --> 00:31:36.435
<v Speaker 1>But also you can click on keep only

00:31:36.435 --> 00:31:38.595
<v Speaker 1>set. So only the values that you set

00:31:38.595 --> 00:31:41.235
<v Speaker 1>in this node would be passed forward in

00:31:41.235 --> 00:31:42.115
<v Speaker 1>the workflow.

00:31:42.515 --> 00:31:44.115
<v Speaker 1>So all the data that's being passed to

00:31:44.115 --> 00:31:46.320
<v Speaker 1>the workflow is in JSON. So

00:31:46.720 --> 00:31:49.840
<v Speaker 1>CocktailDB returned a lot of things, a lot

00:31:49.840 --> 00:31:50.320
<v Speaker 1>of

00:31:50.799 --> 00:31:53.200
<v Speaker 1>values. So all of that would be passed

00:31:53.200 --> 00:31:54.399
<v Speaker 1>along in the workflow,

00:31:54.480 --> 00:31:56.799
<v Speaker 1>but we can change that with a set

00:31:56.799 --> 00:32:00.160
<v Speaker 1>node. Can also use a function node, but

00:31:59.674 --> 00:32:00.394
<v Speaker 1>easier

00:32:00.475 --> 00:32:01.994
<v Speaker 1>the no code way. Okay.

00:32:04.235 --> 00:32:07.275
<v Speaker 0>So just add value. I say I want

00:32:07.275 --> 00:32:09.035
<v Speaker 0>a string and then the proper name. Is

00:32:09.035 --> 00:32:10.715
<v Speaker 0>that gonna help me fill in that property

00:32:10.715 --> 00:32:11.355
<v Speaker 0>name?

00:32:11.515 --> 00:32:13.520
<v Speaker 1>Like You can call it whatever you want.

00:32:13.520 --> 00:32:15.360
<v Speaker 1>Let's maybe like

00:32:17.280 --> 00:32:18.559
<v Speaker 1>cocktail name.

00:32:18.800 --> 00:32:21.760
<v Speaker 0>Yeah. Let's take the cocktail name. Yeah. That

00:32:21.760 --> 00:32:22.559
<v Speaker 0>makes sense.

00:32:24.480 --> 00:32:25.600
<v Speaker 0>Okay.

00:32:26.240 --> 00:32:28.560
<v Speaker 0>And how

00:32:27.865 --> 00:32:30.024
<v Speaker 0>how do I propagate that value from that

00:32:30.024 --> 00:32:32.184
<v Speaker 0>JSON we got in the previous node?

00:32:32.825 --> 00:32:35.065
<v Speaker 1>Right. So on the gears icon next to

00:32:35.065 --> 00:32:37.144
<v Speaker 1>the value field, if you click on it,

00:32:37.144 --> 00:32:39.225
<v Speaker 1>add expression. So it's gonna be a dynamic

00:32:39.225 --> 00:32:41.850
<v Speaker 1>value which is gonna change every time you

00:32:41.850 --> 00:32:44.490
<v Speaker 1>execute the workflow because it's a random API.

00:32:45.370 --> 00:32:47.370
<v Speaker 1>And I'll let you find that.

00:32:47.770 --> 00:32:49.770
<v Speaker 0>I'm just clicking away here. I'm I'm quite

00:32:49.770 --> 00:32:50.890
<v Speaker 0>happy. So

00:32:52.810 --> 00:32:54.090
<v Speaker 0>let's

00:32:54.090 --> 00:32:54.410
<v Speaker 0>see.

00:32:55.135 --> 00:32:56.975
<v Speaker 0>ID drink. Oh, no.

00:32:57.455 --> 00:32:59.615
<v Speaker 0>That's not a category. Okay. So we have

00:32:59.615 --> 00:33:02.015
<v Speaker 0>a category and we got this drink here.

00:33:02.015 --> 00:33:03.455
<v Speaker 0>So let's get the name. I think, yeah,

00:33:03.455 --> 00:33:04.815
<v Speaker 0>rum server. That's the name.

00:33:05.455 --> 00:33:06.575
<v Speaker 0>Click close

00:33:06.815 --> 00:33:07.294
<v Speaker 0>and

00:33:08.560 --> 00:33:10.400
<v Speaker 0>I'm gonna just run this because I like

00:33:10.400 --> 00:33:11.280
<v Speaker 0>clicking that.

00:33:11.840 --> 00:33:13.120
<v Speaker 0>Double click this.

00:33:13.440 --> 00:33:16.000
<v Speaker 1>So it still returns all the information. So

00:33:16.000 --> 00:33:18.480
<v Speaker 1>we'd have to click on keep only set

00:33:18.480 --> 00:33:19.679
<v Speaker 1>inside the node.

00:33:20.880 --> 00:33:23.225
<v Speaker 1>You can also execute the note from execute

00:33:23.225 --> 00:33:25.625
<v Speaker 1>note button on the top on the right.

00:33:25.625 --> 00:33:26.105
<v Speaker 1>Yeah.

00:33:27.625 --> 00:33:29.065
<v Speaker 1>So it just returns this. Alright.

00:33:30.105 --> 00:33:32.184
<v Speaker 0>Let's get the description.

00:33:34.420 --> 00:33:36.580
<v Speaker 0>I'm gonna change this actually. That seems a

00:33:36.580 --> 00:33:37.779
<v Speaker 0>little bit redundant.

00:33:39.780 --> 00:33:41.700
<v Speaker 0>Now we're gonna add the expression and I'm

00:33:41.700 --> 00:33:43.140
<v Speaker 0>gonna just jump through.

00:33:48.500 --> 00:33:50.635
<v Speaker 0>Category actually was what I want, wasn't it?

00:33:50.635 --> 00:33:51.755
<v Speaker 0>Not descriptions.

00:33:51.755 --> 00:33:53.115
<v Speaker 0>Let me fix that.

00:33:54.875 --> 00:33:57.115
<v Speaker 0>I'll call it I'm gonna call it type

00:33:57.115 --> 00:33:59.034
<v Speaker 0>of drink. Let's see what happens.

00:34:00.635 --> 00:34:04.500
<v Speaker 0>Alright. I win a party drink called as

00:34:04.500 --> 00:34:07.700
<v Speaker 0>the Madori Zinger. I'll take two. Thanks.

00:34:08.739 --> 00:34:10.820
<v Speaker 0>Alright. Nice. That's nice. I like it.

00:34:13.620 --> 00:34:14.260
<v Speaker 0>So

00:34:14.820 --> 00:34:17.620
<v Speaker 0>let's tackle, we have a viewer question which

00:34:17.620 --> 00:34:18.900
<v Speaker 0>I'll pop up on the screen.

00:34:20.135 --> 00:34:22.775
<v Speaker 0>So SM has asked, is it possible to

00:34:22.775 --> 00:34:24.295
<v Speaker 0>implement cloud functions?

00:34:24.855 --> 00:34:27.175
<v Speaker 0>Basically you call an endpoint, execute a workflow

00:34:27.175 --> 00:34:29.255
<v Speaker 0>and return the final result to the original

00:34:29.255 --> 00:34:30.455
<v Speaker 0>API call.

00:34:30.775 --> 00:34:31.655
<v Speaker 0>Let me

00:34:32.455 --> 00:34:34.614
<v Speaker 0>Yeah. Okay. So I think I understand the

00:34:34.614 --> 00:34:35.175
<v Speaker 0>question.

00:34:36.110 --> 00:34:37.790
<v Speaker 0>If you understand it, by all means go

00:34:37.790 --> 00:34:40.350
<v Speaker 0>because you I I do. Alright. Cool. So

00:34:42.030 --> 00:34:43.390
<v Speaker 1>yes, we can do that.

00:34:43.870 --> 00:34:44.750
<v Speaker 1>Should we do that?

00:34:48.855 --> 00:34:50.135
<v Speaker 0>Yeah. Let's do it.

00:34:50.855 --> 00:34:53.895
<v Speaker 0>Cool. Okay. So what we do is we

00:34:53.895 --> 00:34:55.655
<v Speaker 1>add a webhook node and we haven't talked

00:34:55.655 --> 00:34:56.695
<v Speaker 1>about it before,

00:34:57.735 --> 00:34:59.655
<v Speaker 1>but let's add it. So it's a Let

00:34:59.655 --> 00:35:01.255
<v Speaker 0>me save my working The cocktail.

00:35:02.400 --> 00:35:04.720
<v Speaker 0>Alright. So we're gonna add a

00:35:05.119 --> 00:35:06.320
<v Speaker 0>web hook.

00:35:06.400 --> 00:35:07.760
<v Speaker 0>Oh, is that actually It should be in

00:35:07.760 --> 00:35:08.560
<v Speaker 0>the trigger.

00:35:08.960 --> 00:35:09.920
<v Speaker 0>Yeah. Yeah.

00:35:11.119 --> 00:35:13.599
<v Speaker 1>So what we can do here is okay.

00:35:13.599 --> 00:35:15.575
<v Speaker 1>Let's take a look at this first. There's

00:35:15.575 --> 00:35:16.695
<v Speaker 1>a couple of options.

00:35:17.174 --> 00:35:19.494
<v Speaker 1>So if you click on the webhook URLs

00:35:19.815 --> 00:35:21.175
<v Speaker 1>on the top,

00:35:21.815 --> 00:35:23.255
<v Speaker 1>it's a pink color,

00:35:23.494 --> 00:35:24.295
<v Speaker 1>orange.

00:35:25.015 --> 00:35:26.615
<v Speaker 1>And we have two

00:35:26.775 --> 00:35:29.095
<v Speaker 1>different webhook URLs, so production and test.

00:35:29.619 --> 00:35:32.020
<v Speaker 1>So the difference between the two is

00:35:32.820 --> 00:35:34.500
<v Speaker 1>a test webhook URL

00:35:34.740 --> 00:35:35.460
<v Speaker 1>is

00:35:35.940 --> 00:35:38.580
<v Speaker 1>to register the webhook, you click on execute

00:35:38.580 --> 00:35:39.460
<v Speaker 1>workflow.

00:35:39.619 --> 00:35:42.339
<v Speaker 1>The webhook stays active for hundred and twenty

00:35:42.339 --> 00:35:43.780
<v Speaker 1>seconds, and then it stops.

00:35:44.545 --> 00:35:45.185
<v Speaker 1>So

00:35:45.585 --> 00:35:47.745
<v Speaker 1>the benefit of using a test

00:35:47.985 --> 00:35:49.985
<v Speaker 1>webhook URL is essentially

00:35:49.985 --> 00:35:51.745
<v Speaker 1>you get to see all the data that's

00:35:51.745 --> 00:35:53.905
<v Speaker 1>coming in and it helps you design your

00:35:53.905 --> 00:35:54.625
<v Speaker 1>workflow.

00:35:54.785 --> 00:35:56.305
<v Speaker 1>So when you're done designing,

00:35:56.385 --> 00:35:58.705
<v Speaker 1>then you use the production webhook and set

00:35:58.705 --> 00:35:59.345
<v Speaker 1>it to active.

00:36:00.599 --> 00:36:01.240
<v Speaker 1>So

00:36:02.200 --> 00:36:04.599
<v Speaker 0>Got it. Okay. So that okay. That's got

00:36:04.680 --> 00:36:06.359
<v Speaker 0>this comes back to that dash dash tunnel

00:36:06.359 --> 00:36:07.960
<v Speaker 0>we used. Right? So what that dash dash

00:36:07.960 --> 00:36:09.799
<v Speaker 0>tunnel was doing, I think I understand a

00:36:09.799 --> 00:36:11.480
<v Speaker 0>bit more now. It's opening a connection to

00:36:11.480 --> 00:36:12.440
<v Speaker 0>n8n cloud,

00:36:12.954 --> 00:36:15.275
<v Speaker 0>which is giving me the ability to do

00:36:15.275 --> 00:36:17.755
<v Speaker 0>this kind of thing. Got it. Okay.

00:36:18.795 --> 00:36:21.355
<v Speaker 1>So what and like we have different authentication

00:36:21.355 --> 00:36:23.835
<v Speaker 1>options if you wanna password protect your endpoint

00:36:24.954 --> 00:36:27.119
<v Speaker 1>and like a bot as well. So let's

00:36:27.119 --> 00:36:28.000
<v Speaker 1>do one thing.

00:36:28.480 --> 00:36:30.640
<v Speaker 1>On the response mode at the bottom,

00:36:31.920 --> 00:36:34.000
<v Speaker 1>let's set it to okay. Let's let's not

00:36:34.000 --> 00:36:35.440
<v Speaker 1>do anything. That's fine.

00:36:35.680 --> 00:36:37.119
<v Speaker 1>Let's copy the

00:36:37.680 --> 00:36:39.920
<v Speaker 1>test webhook URL. You just click on it.

00:36:39.920 --> 00:36:43.015
<v Speaker 1>Yes. Perfect. You can close this or click

00:36:43.015 --> 00:36:44.375
<v Speaker 1>on execute node.

00:36:45.175 --> 00:36:47.255
<v Speaker 0>Or can I just curl this?

00:36:48.295 --> 00:36:49.895
<v Speaker 1>You can. Yeah. Or you can also open

00:36:49.895 --> 00:36:51.975
<v Speaker 1>it in your browser, whichever way you prefer.

00:36:51.975 --> 00:36:54.135
<v Speaker 1>But you'll have to execute workflow first because

00:36:54.135 --> 00:36:56.455
<v Speaker 1>we're gonna be using

00:36:59.770 --> 00:37:01.450
<v Speaker 1>oh, you'd have to save the workflow first.

00:37:01.450 --> 00:37:03.930
<v Speaker 1>My bad. So whenever you're using a trigger

00:37:03.930 --> 00:37:04.730
<v Speaker 1>node,

00:37:04.810 --> 00:37:06.650
<v Speaker 1>it saves the ID. And for that, we

00:37:06.650 --> 00:37:08.250
<v Speaker 1>need to save the workflow first.

00:37:08.570 --> 00:37:10.715
<v Speaker 0>Alright. I'll call that fast.

00:37:10.955 --> 00:37:13.915
<v Speaker 0>I'll pop this open again. We hit execute.

00:37:15.115 --> 00:37:17.275
<v Speaker 1>And now you can make a code request.

00:37:19.195 --> 00:37:20.475
<v Speaker 0>Let me close that.

00:37:22.315 --> 00:37:23.035
<v Speaker 1>Or yeah.

00:37:24.220 --> 00:37:26.540
<v Speaker 1>So you got the message. Workflow got started,

00:37:26.540 --> 00:37:27.900
<v Speaker 1>and you get the data

00:37:28.860 --> 00:37:30.060
<v Speaker 1>from the endpoint.

00:37:31.980 --> 00:37:34.940
<v Speaker 1>So now what you can do is essentially,

00:37:35.340 --> 00:37:36.300
<v Speaker 1>for instance,

00:37:37.340 --> 00:37:38.460
<v Speaker 1>copy the

00:37:39.225 --> 00:37:42.025
<v Speaker 1>STDP request node which got the cocktail information,

00:37:42.025 --> 00:37:43.385
<v Speaker 1>connect that to webhook,

00:37:43.545 --> 00:37:44.745
<v Speaker 1>add a set node,

00:37:44.905 --> 00:37:47.305
<v Speaker 1>and in the response type, we add

00:37:47.625 --> 00:37:50.505
<v Speaker 1>last node. So every time you execute it,

00:37:50.505 --> 00:37:52.585
<v Speaker 1>it's gonna send the data that you sent

00:37:52.585 --> 00:37:54.650
<v Speaker 1>in set node, and that way you create

00:37:54.650 --> 00:37:56.490
<v Speaker 1>a sort of API endpoint with an a

00:37:56.490 --> 00:37:57.050
<v Speaker 1>d m.

00:37:59.770 --> 00:38:00.410
<v Speaker 0>Okay.

00:38:01.930 --> 00:38:02.730
<v Speaker 0>Right.

00:38:02.970 --> 00:38:03.610
<v Speaker 0>So

00:38:03.930 --> 00:38:05.930
<v Speaker 0>let me try and stitch something together here

00:38:05.930 --> 00:38:06.170
<v Speaker 0>then.

00:38:06.744 --> 00:38:08.744
<v Speaker 0>We received a request. I'm

00:38:08.744 --> 00:38:10.665
<v Speaker 0>gonna do something with that request. Right? So

00:38:10.665 --> 00:38:12.345
<v Speaker 0>let me see what what have we got?

00:38:14.505 --> 00:38:16.185
<v Speaker 1>Weather information maybe?

00:38:18.744 --> 00:38:20.585
<v Speaker 1>Need to get API key for that though.

00:38:22.170 --> 00:38:23.130
<v Speaker 0>That's

00:38:25.290 --> 00:38:27.369
<v Speaker 0>We spoke about it here. Right? That's that's

00:38:27.369 --> 00:38:30.329
<v Speaker 0>here. So can I Yep? Send a curl

00:38:30.329 --> 00:38:32.170
<v Speaker 0>request with a color code and have it

00:38:32.170 --> 00:38:33.609
<v Speaker 0>change the color of my lights behind me

00:38:33.609 --> 00:38:33.849
<v Speaker 0>then?

00:38:34.955 --> 00:38:35.675
<v Speaker 0>Yep.

00:38:36.795 --> 00:38:37.835
<v Speaker 0>Then respond

00:38:38.235 --> 00:38:40.715
<v Speaker 0>with we'll we'll add something that responds with

00:38:40.715 --> 00:38:42.955
<v Speaker 0>to satisfy that functions of the service thing

00:38:42.955 --> 00:38:43.595
<v Speaker 0>as well.

00:38:44.155 --> 00:38:44.475
<v Speaker 0>Perfect.

00:38:51.220 --> 00:38:52.340
<v Speaker 0>Secret

00:38:53.620 --> 00:38:55.780
<v Speaker 0>stuff, hold on. Let me move to my

00:38:55.780 --> 00:38:56.340
<v Speaker 0>secret layer.

00:39:04.935 --> 00:39:05.815
<v Speaker 0>Alright.

00:39:06.295 --> 00:39:08.135
<v Speaker 0>Please standby. I should have like some hold

00:39:08.135 --> 00:39:10.215
<v Speaker 0>music available shouldn't I for

00:39:10.455 --> 00:39:11.895
<v Speaker 0>for a moment like this.

00:39:13.815 --> 00:39:15.255
<v Speaker 0>What do I need?

00:39:18.390 --> 00:39:19.670
<v Speaker 1>So in case

00:39:21.030 --> 00:39:23.510
<v Speaker 1>you're having troubles finding where to get the

00:39:23.510 --> 00:39:24.310
<v Speaker 1>credentials,

00:39:24.550 --> 00:39:27.750
<v Speaker 1>there's also a link to our documentation which

00:39:27.750 --> 00:39:30.390
<v Speaker 1>tells what credentials you need to get and

00:39:30.390 --> 00:39:31.349
<v Speaker 1>where you'd find them.

00:39:36.154 --> 00:39:37.515
<v Speaker 0>So I think

00:39:38.635 --> 00:39:41.275
<v Speaker 0>I I think I got them right. Hold

00:39:41.275 --> 00:39:43.835
<v Speaker 0>on. Let's test it. So can I

00:39:45.900 --> 00:39:47.900
<v Speaker 0>what the what is the late ID?

00:39:48.220 --> 00:39:50.460
<v Speaker 0>Can I get different So this

00:39:50.780 --> 00:39:53.500
<v Speaker 1>probably isn't connected correctly because this should auto

00:39:53.500 --> 00:39:54.300
<v Speaker 1>populate?

00:39:55.260 --> 00:39:56.700
<v Speaker 0>Oh, right. Okay. So

00:39:58.505 --> 00:40:01.225
<v Speaker 1>you can press the pencil button next to

00:40:01.225 --> 00:40:01.785
<v Speaker 1>it.

00:40:06.745 --> 00:40:07.625
<v Speaker 0>So then need to

00:40:09.225 --> 00:40:10.905
<v Speaker 0>Oh, it's popping up something.

00:40:23.910 --> 00:40:25.110
<v Speaker 0>Yeah. I trust you.

00:40:27.015 --> 00:40:28.055
<v Speaker 0>Did

00:40:30.055 --> 00:40:31.335
<v Speaker 1>you set the

00:40:31.734 --> 00:40:33.095
<v Speaker 1>URL for

00:40:33.895 --> 00:40:35.575
<v Speaker 1>the redirect URI

00:40:36.214 --> 00:40:37.415
<v Speaker 1>in Philips Hue?

00:40:38.135 --> 00:40:38.775
<v Speaker 1>Because

00:40:39.335 --> 00:40:41.015
<v Speaker 1>you'd need to use the

00:40:41.890 --> 00:40:43.730
<v Speaker 0>Oh, it's an n a m r okay.

00:40:43.730 --> 00:40:45.650
<v Speaker 0>Sorry. Because you're running with the tunnel right

00:40:45.650 --> 00:40:46.210
<v Speaker 1>now.

00:40:47.010 --> 00:40:48.530
<v Speaker 0>Okay. So

00:40:48.770 --> 00:40:50.850
<v Speaker 0>let me try one more time.

00:40:56.995 --> 00:40:59.155
<v Speaker 1>So for generally, for authentication

00:41:00.435 --> 00:41:02.515
<v Speaker 1>or authentication and so on, you don't use

00:41:02.515 --> 00:41:03.715
<v Speaker 1>to need need

00:41:03.715 --> 00:41:04.755
<v Speaker 1>to use tunnel.

00:41:05.315 --> 00:41:06.835
<v Speaker 1>But since you're using tunnel,

00:41:08.100 --> 00:41:10.500
<v Speaker 0>crashed n a n. So I just re

00:41:10.900 --> 00:41:11.780
<v Speaker 0>there we go.

00:41:13.940 --> 00:41:14.980
<v Speaker 0>Okay.

00:41:14.980 --> 00:41:17.460
<v Speaker 0>So we're back to this bit.

00:41:19.780 --> 00:41:21.140
<v Speaker 0>That's

00:41:21.140 --> 00:41:22.180
<v Speaker 0>changed again, hasn't it?

00:41:24.674 --> 00:41:25.395
<v Speaker 1>Probably.

00:41:30.275 --> 00:41:32.915
<v Speaker 0>Alright. Hold on. One more update.

00:41:33.315 --> 00:41:33.795
<v Speaker 0>Save.

00:41:36.390 --> 00:41:38.630
<v Speaker 0>Okay. That's saved. So I'm gonna pop this

00:41:38.630 --> 00:41:39.750
<v Speaker 0>thing open again.

00:41:40.950 --> 00:41:42.630
<v Speaker 0>If this doesn't work, I might just drop

00:41:42.630 --> 00:41:44.310
<v Speaker 0>the tunnel thing for a second.

00:41:47.190 --> 00:41:48.790
<v Speaker 0>Why is that not working?

00:41:52.685 --> 00:41:53.485
<v Speaker 1>So

00:41:54.925 --> 00:41:55.805
<v Speaker 1>is is this

00:41:57.005 --> 00:41:57.965
<v Speaker 1>is the

00:41:58.765 --> 00:42:00.925
<v Speaker 1>or or three direct URI that you get

00:42:00.925 --> 00:42:02.605
<v Speaker 1>is same in Philips Hue

00:42:03.405 --> 00:42:05.005
<v Speaker 1>when you created the OAuth app?

00:42:05.670 --> 00:42:07.349
<v Speaker 0>You know, I'm just gonna do this on

00:42:07.349 --> 00:42:09.109
<v Speaker 0>the screen so that you can see because

00:42:09.109 --> 00:42:11.030
<v Speaker 0>I'm sure it's me that something wrong.

00:42:11.270 --> 00:42:13.030
<v Speaker 0>And then what I'll do is I'll just

00:42:13.030 --> 00:42:15.830
<v Speaker 0>delete that little secret tokens later.

00:42:15.910 --> 00:42:17.750
<v Speaker 0>If Venom does decide to change the color

00:42:17.750 --> 00:42:19.670
<v Speaker 0>of my bulbs then so be it.

00:42:21.815 --> 00:42:23.495
<v Speaker 0>Let's see. Okay. So

00:42:26.214 --> 00:42:27.255
<v Speaker 0>create new

00:42:28.214 --> 00:42:29.335
<v Speaker 0>year two

00:42:29.734 --> 00:42:31.095
<v Speaker 0>and

00:42:34.520 --> 00:42:36.040
<v Speaker 0>my client ID.

00:42:37.560 --> 00:42:38.360
<v Speaker 0>So

00:42:38.920 --> 00:42:40.440
<v Speaker 0>my client secret.

00:42:40.520 --> 00:42:43.720
<v Speaker 0>Rawkode

00:42:44.120 --> 00:42:44.760
<v Speaker 0>live.

00:42:45.645 --> 00:42:46.925
<v Speaker 0>I had copied

00:42:47.965 --> 00:42:48.685
<v Speaker 0>this.

00:42:48.845 --> 00:42:51.485
<v Speaker 0>Should this be changing every time I restart

00:42:51.485 --> 00:42:53.965
<v Speaker 0>or is that just static? Generally,

00:42:54.045 --> 00:42:54.525
<v Speaker 1>no.

00:42:55.485 --> 00:42:56.605
<v Speaker 1>But if like

00:42:56.765 --> 00:42:58.605
<v Speaker 1>you started an instance when the other one

00:42:58.605 --> 00:43:01.130
<v Speaker 1>wasn't properly closed, the previous one would still

00:43:01.130 --> 00:43:02.650
<v Speaker 1>be occupied,

00:43:02.650 --> 00:43:03.930
<v Speaker 1>so then it would give you a new

00:43:03.930 --> 00:43:06.890
<v Speaker 1>one. But if you close n8n and restart

00:43:06.890 --> 00:43:08.090
<v Speaker 1>it, it shouldn't change.

00:43:11.370 --> 00:43:13.385
<v Speaker 1>Not yet. So

00:43:13.545 --> 00:43:15.785
<v Speaker 1>oh, did you already paste the

00:43:16.665 --> 00:43:18.585
<v Speaker 1>or it's called back URL in your Philips

00:43:18.585 --> 00:43:19.545
<v Speaker 1>Hue app?

00:43:21.305 --> 00:43:22.985
<v Speaker 0>Yeah. So I updated

00:43:23.625 --> 00:43:25.705
<v Speaker 0>Philips Hue to this URL.

00:43:26.680 --> 00:43:29.160
<v Speaker 1>So next to OAuth where it says not

00:43:29.160 --> 00:43:31.880
<v Speaker 1>connected in the OAuth section. Mhmm.

00:43:32.200 --> 00:43:34.440
<v Speaker 1>Yes. Yeah. You need to click here.

00:43:39.880 --> 00:43:40.360
<v Speaker 1>Okay.

00:43:44.234 --> 00:43:46.635
<v Speaker 0>Alright. So we think this is a tunnel

00:43:46.635 --> 00:43:47.355
<v Speaker 0>bug

00:43:47.675 --> 00:43:50.234
<v Speaker 0>potentially or I've just broken it during the

00:43:50.234 --> 00:43:52.474
<v Speaker 0>initial setup. I'm not really sure. So what

00:43:52.474 --> 00:43:54.795
<v Speaker 0>I'm gonna do is cheat.

00:43:55.355 --> 00:43:56.315
<v Speaker 0>Not cheat.

00:43:57.515 --> 00:43:59.170
<v Speaker 0>I'm gonna spin it up a third.

00:44:01.970 --> 00:44:03.330
<v Speaker 0>Let's try that again.

00:44:05.570 --> 00:44:06.130
<v Speaker 0>Reload.

00:44:16.345 --> 00:44:18.744
<v Speaker 0>Okay. So now I've got a different OAuth

00:44:18.744 --> 00:44:19.625
<v Speaker 0>callback.

00:44:21.625 --> 00:44:22.505
<v Speaker 0>Save.

00:44:28.600 --> 00:44:29.400
<v Speaker 0>And

00:44:29.640 --> 00:44:30.280
<v Speaker 0>go.

00:44:34.840 --> 00:44:35.720
<v Speaker 0>Hey. Okay.

00:44:37.825 --> 00:44:39.105
<v Speaker 0>That works.

00:44:40.305 --> 00:44:41.985
<v Speaker 0>Now, ah, there we go. So I can

00:44:41.985 --> 00:44:44.225
<v Speaker 0>do my office. We'll do the office strip

00:44:44.225 --> 00:44:45.025
<v Speaker 0>lates.

00:44:45.985 --> 00:44:46.465
<v Speaker 0>And

00:44:52.970 --> 00:44:54.890
<v Speaker 0>I guess hue would be the color.

00:44:56.569 --> 00:44:59.850
<v Speaker 1>Hue would be the shade. I I imagine.

00:45:02.809 --> 00:45:04.089
<v Speaker 0>Okay. Let's take a look.

00:45:04.855 --> 00:45:05.575
<v Speaker 0>Yeah.

00:45:05.735 --> 00:45:07.175
<v Speaker 0>I'll just pick a number.

00:45:07.895 --> 00:45:08.215
<v Speaker 0>Okay.

00:45:17.850 --> 00:45:18.890
<v Speaker 0>Did it change?

00:45:19.850 --> 00:45:22.090
<v Speaker 1>No. I think, like, some shading change.

00:45:22.410 --> 00:45:23.210
<v Speaker 1>Let's

00:45:23.210 --> 00:45:25.930
<v Speaker 1>take a look at the ad field.

00:45:26.170 --> 00:45:27.290
<v Speaker 1>What do we have here?

00:45:30.575 --> 00:45:34.015
<v Speaker 0>So do we have alert effect? Let's try

00:45:34.015 --> 00:45:35.695
<v Speaker 0>alert effect maybe first.

00:45:37.375 --> 00:45:38.415
<v Speaker 0>Which one? Sorry?

00:45:38.974 --> 00:45:40.175
<v Speaker 1>Alert effect.

00:45:40.815 --> 00:45:41.934
<v Speaker 1>If you go on the top,

00:45:45.420 --> 00:45:47.420
<v Speaker 1>yeah, you can try this

00:45:48.300 --> 00:45:50.300
<v Speaker 1>and execute node.

00:45:53.500 --> 00:45:54.300
<v Speaker 0>Oh,

00:45:55.099 --> 00:45:55.900
<v Speaker 0>it's flashing.

00:45:58.765 --> 00:45:59.485
<v Speaker 0>Cool.

00:45:59.645 --> 00:46:01.005
<v Speaker 0>Let me change this.

00:46:01.325 --> 00:46:03.165
<v Speaker 0>I don't really know what this number is.

00:46:04.605 --> 00:46:07.085
<v Speaker 1>So I think let me take a look

00:46:07.085 --> 00:46:09.485
<v Speaker 1>at the I can pop open the Philips

00:46:09.485 --> 00:46:10.445
<v Speaker 0>Hue documentation.

00:46:10.445 --> 00:46:11.805
<v Speaker 0>The link was right there in front of

00:46:11.805 --> 00:46:12.285
<v Speaker 0>me.

00:46:13.005 --> 00:46:13.245
<v Speaker 0>Mhmm.

00:46:25.505 --> 00:46:26.785
<v Speaker 0>I try it again.

00:46:31.265 --> 00:46:33.745
<v Speaker 0>Alright. Okay. That works. I'm happy with that.

00:46:33.905 --> 00:46:37.025
<v Speaker 0>So Okay. So it's a value called

00:46:37.265 --> 00:46:37.825
<v Speaker 1>hue

00:46:39.039 --> 00:46:41.119
<v Speaker 1>that you have to add to change color.

00:46:41.519 --> 00:46:43.920
<v Speaker 0>Yeah. I added the hue, but the color

00:46:44.480 --> 00:46:46.640
<v Speaker 0>I mean, it seems to be numeric.

00:46:47.839 --> 00:46:51.039
<v Speaker 1>So it's a value if you click on

00:46:51.039 --> 00:46:52.799
<v Speaker 1>the tooltip next to the field,

00:46:53.905 --> 00:46:56.545
<v Speaker 1>it will mention like is wrapping value between

00:46:56.545 --> 00:46:59.745
<v Speaker 1>zero and sixty five thousand five thirty five.

00:46:59.745 --> 00:47:02.465
<v Speaker 0>Oh, so my technical numbers probably just weren't

00:47:02.465 --> 00:47:03.505
<v Speaker 0>doing anything.

00:47:04.305 --> 00:47:04.865
<v Speaker 1>Yeah.

00:47:05.105 --> 00:47:07.745
<v Speaker 1>Zero is red for instance, if you wanna

00:47:07.745 --> 00:47:08.225
<v Speaker 1>try that.

00:47:10.810 --> 00:47:11.770
<v Speaker 0>What blue?

00:47:12.890 --> 00:47:13.770
<v Speaker 0>Blue.

00:47:16.569 --> 00:47:19.210
<v Speaker 1>46920.

00:47:22.730 --> 00:47:24.010
<v Speaker 1>4 9 10.

00:47:24.665 --> 00:47:26.505
<v Speaker 1>4 6 9 2 0.

00:47:27.785 --> 00:47:28.905
<v Speaker 0>Alright. Okay.

00:47:34.425 --> 00:47:35.945
<v Speaker 0>It's not changing the color.

00:47:36.505 --> 00:47:38.025
<v Speaker 1>So I think we should turn off the

00:47:38.025 --> 00:47:38.905
<v Speaker 1>alert effect.

00:47:41.420 --> 00:47:42.539
<v Speaker 1>So that would go to

00:47:43.579 --> 00:47:44.220
<v Speaker 0>yeah.

00:47:51.980 --> 00:47:53.900
<v Speaker 0>Let's try a different light. Maybe it's just

00:47:53.900 --> 00:47:55.020
<v Speaker 0>that. Let's see.

00:47:57.755 --> 00:48:00.075
<v Speaker 0>Update. Let's try it. So I'm reading

00:48:00.394 --> 00:48:02.234
<v Speaker 1>25500

00:48:02.234 --> 00:48:03.115
<v Speaker 1>as green.

00:48:06.714 --> 00:48:07.755
<v Speaker 0>Okay.

00:48:07.755 --> 00:48:08.474
<v Speaker 0>Let's

00:48:08.910 --> 00:48:11.470
<v Speaker 0>let's move on. The the key thing is

00:48:11.470 --> 00:48:13.309
<v Speaker 0>cool. I like the alert. I'll play around

00:48:13.309 --> 00:48:14.910
<v Speaker 0>with that color thing for sure.

00:48:15.230 --> 00:48:16.829
<v Speaker 0>Now We use this for

00:48:18.430 --> 00:48:19.790
<v Speaker 1>yeah. We use it for when we got

00:48:19.790 --> 00:48:22.704
<v Speaker 1>10,000 get up stars to flash the lights

00:48:22.704 --> 00:48:23.745
<v Speaker 1>around the office.

00:48:24.945 --> 00:48:25.665
<v Speaker 0>Nice.

00:48:26.625 --> 00:48:28.305
<v Speaker 0>Now what does that mean for this web

00:48:28.305 --> 00:48:30.305
<v Speaker 0>hook then? Now that I'm not in tunnel

00:48:30.305 --> 00:48:32.065
<v Speaker 0>mode, should I go back to tunnel mode?

00:48:32.625 --> 00:48:34.945
<v Speaker 1>You don't need to. You could still make

00:48:34.945 --> 00:48:35.905
<v Speaker 1>calls locally

00:48:36.460 --> 00:48:38.940
<v Speaker 1>because you'd be calling to local host.

00:48:39.340 --> 00:48:41.340
<v Speaker 1>So if you open the webhook URL, you

00:48:41.340 --> 00:48:42.220
<v Speaker 1>just notice

00:48:42.780 --> 00:48:44.060
<v Speaker 1>the name changed.

00:48:44.860 --> 00:48:46.540
<v Speaker 0>Let's just add a new one

00:48:47.100 --> 00:48:48.300
<v Speaker 0>to trigger

00:48:49.100 --> 00:48:49.820
<v Speaker 0>webhook.

00:48:52.335 --> 00:48:53.855
<v Speaker 0>And what do I get now?

00:48:53.935 --> 00:48:56.495
<v Speaker 0>Oh yeah. Never on local host. Okay. So

00:48:56.975 --> 00:48:57.935
<v Speaker 0>test,

00:48:58.095 --> 00:48:58.815
<v Speaker 0>copy,

00:49:00.735 --> 00:49:01.695
<v Speaker 0>execute

00:49:01.695 --> 00:49:02.975
<v Speaker 0>and then

00:49:03.615 --> 00:49:05.535
<v Speaker 0>that should just work as last time. Yeah.

00:49:05.535 --> 00:49:06.575
<v Speaker 0>Okay. Cool. Yes.

00:49:08.040 --> 00:49:09.640
<v Speaker 1>But of course, this time it wouldn't be

00:49:09.640 --> 00:49:11.080
<v Speaker 1>reachable from the internet

00:49:12.360 --> 00:49:13.880
<v Speaker 1>because you're running it locally.

00:49:14.520 --> 00:49:17.240
<v Speaker 0>Yeah. Yeah. Okay. Yeah. I understand the trade

00:49:17.240 --> 00:49:18.760
<v Speaker 0>off I've just made there by removing the

00:49:18.760 --> 00:49:19.320
<v Speaker 0>tunnel thing.

00:49:20.255 --> 00:49:22.655
<v Speaker 0>Got it. But that's fine. Yeah. I'm okay

00:49:22.655 --> 00:49:24.255
<v Speaker 0>with that. So we now have this web

00:49:24.255 --> 00:49:26.335
<v Speaker 0>hook or the ability to start something here

00:49:26.335 --> 00:49:28.815
<v Speaker 0>and then we wanna do something. So

00:49:31.215 --> 00:49:33.535
<v Speaker 1>How about getting weather details?

00:49:34.320 --> 00:49:35.840
<v Speaker 0>Weather sounds good.

00:49:39.360 --> 00:49:41.280
<v Speaker 0>Oh, so I need credentials.

00:49:42.800 --> 00:49:44.880
<v Speaker 1>So do you have a API key for

00:49:44.880 --> 00:49:45.120
<v Speaker 1>this?

00:49:46.535 --> 00:49:48.695
<v Speaker 0>For open weather map? For open. Let

00:49:50.215 --> 00:49:52.135
<v Speaker 1>me quickly take a look. I can send

00:49:52.135 --> 00:49:53.015
<v Speaker 1>you one.

00:49:58.215 --> 00:49:59.655
<v Speaker 1>I'll send you in the chat.

00:50:01.100 --> 00:50:03.020
<v Speaker 0>I'll move it over here

00:50:03.820 --> 00:50:05.900
<v Speaker 0>and then bring it back as if nothing

00:50:05.900 --> 00:50:06.700
<v Speaker 0>happened.

00:50:07.100 --> 00:50:07.740
<v Speaker 0>So

00:50:08.460 --> 00:50:09.180
<v Speaker 0>open

00:50:09.740 --> 00:50:10.460
<v Speaker 0>weather

00:50:11.260 --> 00:50:13.580
<v Speaker 0>map. The terminal is acting like a curtain

00:50:13.580 --> 00:50:13.980
<v Speaker 1>here.

00:50:16.695 --> 00:50:17.495
<v Speaker 0>Alright.

00:50:19.015 --> 00:50:20.615
<v Speaker 0>There we go. So

00:50:21.335 --> 00:50:23.495
<v Speaker 0>I now have that credential say thank you

00:50:23.495 --> 00:50:25.815
<v Speaker 0>for that. That allows me to oh, let's

00:50:25.815 --> 00:50:27.095
<v Speaker 0>do a forecast. That looks cool.

00:50:31.670 --> 00:50:33.830
<v Speaker 0>Kelvin or met let's go by metric.

00:50:34.470 --> 00:50:36.950
<v Speaker 0>Okay. So setting name,

00:50:38.309 --> 00:50:40.070
<v Speaker 0>I live in Paisley,

00:50:40.550 --> 00:50:42.310
<v Speaker 0>just outside of Glasgow.

00:50:42.950 --> 00:50:43.349
<v Speaker 1>Yeah.

00:50:47.635 --> 00:50:50.355
<v Speaker 0>Okay. So let's see. Can I

00:50:53.474 --> 00:50:54.595
<v Speaker 0>let me see if I can work this

00:50:54.595 --> 00:50:55.875
<v Speaker 0>one out? So

00:50:56.355 --> 00:50:57.075
<v Speaker 0>let's

00:50:57.410 --> 00:50:58.850
<v Speaker 0>use this webhook

00:50:58.850 --> 00:51:00.850
<v Speaker 0>to receive a parameter.

00:51:02.770 --> 00:51:04.530
<v Speaker 0>Okay. I don't know how to do that.

00:51:04.850 --> 00:51:06.450
<v Speaker 0>But it won't matter, will it? Right? I

00:51:06.450 --> 00:51:07.570
<v Speaker 0>can do that here

00:51:07.970 --> 00:51:10.370
<v Speaker 0>and if I remove the paisley,

00:51:12.115 --> 00:51:14.435
<v Speaker 0>add an expression and the

00:51:14.515 --> 00:51:17.555
<v Speaker 0>nodes web hook output data.

00:51:18.115 --> 00:51:19.715
<v Speaker 0>So I'm do I need to send a

00:51:19.715 --> 00:51:21.555
<v Speaker 0>payload to that so it knows that that's

00:51:21.555 --> 00:51:22.675
<v Speaker 0>a potential field?

00:51:24.200 --> 00:51:26.440
<v Speaker 1>Yes. Alright. Okay. So let's just use a

00:51:26.440 --> 00:51:27.560
<v Speaker 0>query parameter

00:51:27.960 --> 00:51:29.960
<v Speaker 0>and say set it equals

00:51:30.200 --> 00:51:32.200
<v Speaker 0>I'll send main for now.

00:51:33.880 --> 00:51:35.559
<v Speaker 1>So you need to execute

00:51:35.559 --> 00:51:38.279
<v Speaker 1>the workflow so that the web hook registers

00:51:38.279 --> 00:51:38.599
<v Speaker 1>again.

00:51:39.675 --> 00:51:40.395
<v Speaker 0>Okay.

00:51:40.475 --> 00:51:41.115
<v Speaker 0>So

00:51:41.355 --> 00:51:41.915
<v Speaker 0>click

00:51:43.115 --> 00:51:43.995
<v Speaker 0>and then

00:51:44.555 --> 00:51:45.755
<v Speaker 0>send. Okay.

00:51:45.995 --> 00:51:48.475
<v Speaker 0>So now it knows there's this potential field

00:51:48.475 --> 00:51:50.075
<v Speaker 0>that it's gonna receive

00:51:50.315 --> 00:51:51.995
<v Speaker 0>and the query setting. Okay.

00:51:53.830 --> 00:51:56.310
<v Speaker 0>And now I'm hoping if I come back

00:51:56.310 --> 00:51:57.590
<v Speaker 0>to this expression

00:51:57.590 --> 00:51:58.150
<v Speaker 0>thing

00:51:59.109 --> 00:52:00.630
<v Speaker 1>You could just click on it

00:52:01.270 --> 00:52:03.030
<v Speaker 1>on the city field. Yeah.

00:52:03.430 --> 00:52:04.630
<v Speaker 0>Then we can see.

00:52:08.165 --> 00:52:10.244
<v Speaker 0>There we go. See, I knew it was

00:52:10.244 --> 00:52:11.285
<v Speaker 0>gonna work like that.

00:52:11.845 --> 00:52:12.645
<v Speaker 0>Alright.

00:52:13.285 --> 00:52:15.285
<v Speaker 0>So that sets it to whatever I send

00:52:15.285 --> 00:52:17.205
<v Speaker 0>and then I can execute.

00:52:18.565 --> 00:52:20.165
<v Speaker 0>And that's gonna get me the weather forecast

00:52:20.165 --> 00:52:21.685
<v Speaker 0>for that set as it gets passed in.

00:52:22.310 --> 00:52:25.109
<v Speaker 0>Okay. So now back to the question that

00:52:25.109 --> 00:52:27.270
<v Speaker 0>we received then is how do I respond

00:52:27.270 --> 00:52:30.870
<v Speaker 0>to this webhook with the weather forecast information?

00:52:31.270 --> 00:52:32.710
<v Speaker 1>So now if you go on the webhook

00:52:32.710 --> 00:52:34.310
<v Speaker 1>node, what we've

00:52:36.425 --> 00:52:38.505
<v Speaker 1>the webhook node, if you open it again

00:52:38.665 --> 00:52:39.705
<v Speaker 0>Yep. Yep.

00:52:42.585 --> 00:52:44.744
<v Speaker 1>For the response mode, now we wanted to

00:52:44.744 --> 00:52:47.224
<v Speaker 1>send the data from the last node that

00:52:47.224 --> 00:52:48.025
<v Speaker 1>executed.

00:52:48.505 --> 00:52:49.224
<v Speaker 1>So

00:52:50.079 --> 00:52:52.720
<v Speaker 1>that's fine. First entry JSON is okay. Oh,

00:52:52.720 --> 00:52:53.360
<v Speaker 1>yep.

00:52:54.160 --> 00:52:55.520
<v Speaker 1>And we execute it.

00:52:57.040 --> 00:52:58.160
<v Speaker 1>And let's

00:52:58.560 --> 00:53:00.480
<v Speaker 1>do in the other browser window.

00:53:06.335 --> 00:53:07.135
<v Speaker 0>And

00:53:08.815 --> 00:53:10.735
<v Speaker 0>we can, of course, use set note to

00:53:10.735 --> 00:53:12.815
<v Speaker 1>clean this information, so we are only sending

00:53:12.815 --> 00:53:14.255
<v Speaker 1>out what is actually needed.

00:53:14.840 --> 00:53:18.040
<v Speaker 1>But yep. So to answer some question, like,

00:53:18.520 --> 00:53:20.440
<v Speaker 1>you can use any 10 workflows as an

00:53:20.440 --> 00:53:21.880
<v Speaker 1>API endpoint as well.

00:53:22.840 --> 00:53:24.920
<v Speaker 0>Okay. So so far when I've been running

00:53:24.920 --> 00:53:26.520
<v Speaker 0>this, I've had to execute

00:53:26.520 --> 00:53:28.280
<v Speaker 0>for that to work. Like, so this won't

00:53:28.280 --> 00:53:29.320
<v Speaker 0>work now. Is that right?

00:53:30.755 --> 00:53:33.715
<v Speaker 1>Yes. It wouldn't because we haven't activated the

00:53:33.715 --> 00:53:34.515
<v Speaker 1>workflow.

00:53:35.395 --> 00:53:36.755
<v Speaker 1>Ah, so two things.

00:53:37.155 --> 00:53:38.675
<v Speaker 1>First, we'd activate it

00:53:38.915 --> 00:53:41.555
<v Speaker 1>and now you'll yep. Go ahead. And now

00:53:41.555 --> 00:53:43.315
<v Speaker 1>you'll need to make calls to the production

00:53:43.315 --> 00:53:44.195
<v Speaker 1>webhook URL.

00:53:44.619 --> 00:53:46.780
<v Speaker 1>So if you open the webhook node again,

00:53:48.300 --> 00:53:49.500
<v Speaker 1>webhook URLs,

00:53:49.500 --> 00:53:51.260
<v Speaker 1>let's use the production now.

00:53:52.540 --> 00:53:54.380
<v Speaker 1>So now you wouldn't have to press execute

00:53:54.380 --> 00:53:54.940
<v Speaker 1>anymore.

00:53:58.555 --> 00:53:59.835
<v Speaker 0>Okay. So

00:53:59.995 --> 00:54:02.075
<v Speaker 0>that error is expected because I never sent

00:54:02.075 --> 00:54:03.835
<v Speaker 0>one, but let's talk about how we fix

00:54:03.835 --> 00:54:05.435
<v Speaker 0>that too. Let's do Paris.

00:54:06.155 --> 00:54:06.875
<v Speaker 0>Okay.

00:54:07.915 --> 00:54:10.315
<v Speaker 0>Can I make it handle

00:54:09.750 --> 00:54:11.750
<v Speaker 0>the the error better and return something to

00:54:11.750 --> 00:54:13.270
<v Speaker 0>the user that says, hey, you you need

00:54:13.270 --> 00:54:15.910
<v Speaker 0>to provide a query parameter here? Sure.

00:54:17.030 --> 00:54:19.110
<v Speaker 1>So what we can do is place a

00:54:19.110 --> 00:54:20.790
<v Speaker 1>if node in front of it. So we

00:54:20.790 --> 00:54:23.430
<v Speaker 1>can say, you know, if there is no

00:54:23.510 --> 00:54:24.870
<v Speaker 1>query

00:54:24.950 --> 00:54:25.830
<v Speaker 1>then

00:54:26.765 --> 00:54:28.365
<v Speaker 1>prior given error.

00:54:29.805 --> 00:54:31.965
<v Speaker 0>Okay. So I guess what we're looking for

00:54:31.965 --> 00:54:34.285
<v Speaker 0>is if string

00:54:34.445 --> 00:54:36.365
<v Speaker 0>I'm just gonna keep using this cog thing

00:54:36.365 --> 00:54:37.565
<v Speaker 0>because it seems quite handy.

00:54:41.799 --> 00:54:43.000
<v Speaker 0>Okay. So

00:54:43.720 --> 00:54:46.200
<v Speaker 0>I'm assuming let's see if I got this

00:54:46.200 --> 00:54:48.839
<v Speaker 0>right. So this is in if city,

00:54:54.535 --> 00:54:55.975
<v Speaker 0>How would I do

00:54:56.615 --> 00:54:58.215
<v Speaker 0>not contain? No.

00:54:59.015 --> 00:55:01.095
<v Speaker 0>How can I check for the existence of

00:55:01.095 --> 00:55:01.575
<v Speaker 0>it?

00:55:03.655 --> 00:55:06.535
<v Speaker 1>So what you can do is use

00:55:07.809 --> 00:55:10.130
<v Speaker 1>Okay. With a blank. Would that work?

00:55:11.890 --> 00:55:13.010
<v Speaker 1>Let's try that.

00:55:13.250 --> 00:55:15.810
<v Speaker 1>I haven't tried it before. Let's try it.

00:55:17.170 --> 00:55:18.290
<v Speaker 1>You'd need to,

00:55:18.530 --> 00:55:19.890
<v Speaker 1>yeah, close this.

00:55:20.369 --> 00:55:24.214
<v Speaker 0>Oh, yep. Oh, so not equal, it says.

00:55:25.255 --> 00:55:25.895
<v Speaker 0>Yeah.

00:55:27.174 --> 00:55:28.855
<v Speaker 0>Okay. Oh, so now I can just add

00:55:28.855 --> 00:55:29.815
<v Speaker 0>a false.

00:55:29.974 --> 00:55:31.494
<v Speaker 0>Okay. So that So that could be a

00:55:31.494 --> 00:55:33.654
<v Speaker 1>set node. So I think what I need

00:55:33.654 --> 00:55:34.295
<v Speaker 0>to do is

00:55:34.960 --> 00:55:36.320
<v Speaker 0>remove this.

00:55:36.560 --> 00:55:37.040
<v Speaker 0>So

00:55:37.360 --> 00:55:39.280
<v Speaker 0>because I've got ever equals blank. So if

00:55:39.280 --> 00:55:41.040
<v Speaker 0>that is false, I've probably done that the

00:55:41.040 --> 00:55:42.880
<v Speaker 0>wrong way around now. And then here,

00:55:44.000 --> 00:55:45.520
<v Speaker 0>so how can I just return

00:55:46.320 --> 00:55:47.360
<v Speaker 0>a random string?

00:55:48.734 --> 00:55:51.695
<v Speaker 1>We use the set node again. Set node.

00:55:52.654 --> 00:55:53.295
<v Speaker 1>Yep.

00:55:54.575 --> 00:55:57.935
<v Speaker 1>And let's add a that's yep. Perfect.

00:55:58.654 --> 00:55:59.214
<v Speaker 1>String.

00:56:00.069 --> 00:56:01.670
<v Speaker 1>It's called the name.

00:56:02.069 --> 00:56:03.510
<v Speaker 0>It's the header. And

00:56:04.549 --> 00:56:08.150
<v Speaker 1>then we can say You're a city. There's

00:56:08.230 --> 00:56:09.590
<v Speaker 0>no city.

00:56:10.710 --> 00:56:12.150
<v Speaker 0>I'll be about Amigo.

00:56:12.150 --> 00:56:12.710
<v Speaker 0>There we go.

00:56:14.795 --> 00:56:15.595
<v Speaker 0>Close.

00:56:17.355 --> 00:56:18.075
<v Speaker 0>So

00:56:19.435 --> 00:56:21.115
<v Speaker 0>let's see if I've broken it first. Right?

00:56:21.115 --> 00:56:22.955
<v Speaker 0>So let's You'll have to see if the

00:56:22.955 --> 00:56:24.075
<v Speaker 1>workflow again.

00:56:24.075 --> 00:56:24.715
<v Speaker 0>Oh.

00:56:25.355 --> 00:56:27.435
<v Speaker 0>Thanks for keeping me honest. Let's see.

00:56:30.060 --> 00:56:30.860
<v Speaker 0>Save.

00:56:31.740 --> 00:56:33.020
<v Speaker 0>And it's active.

00:56:33.740 --> 00:56:34.380
<v Speaker 0>Okay.

00:56:35.100 --> 00:56:36.940
<v Speaker 0>Let's do London.

00:56:39.340 --> 00:56:41.020
<v Speaker 0>Sorry. Let's get that the wrong way around.

00:56:43.785 --> 00:56:46.105
<v Speaker 0>I'll need to I don't know. I'll check

00:56:46.105 --> 00:56:47.465
<v Speaker 0>my logic on that to make sure I

00:56:47.465 --> 00:56:49.385
<v Speaker 0>understand that correctly before we

00:56:50.825 --> 00:56:52.985
<v Speaker 0>and that crossing the streams will annoy me,

00:56:52.985 --> 00:56:53.705
<v Speaker 0>so let's do this.

00:56:55.730 --> 00:56:56.530
<v Speaker 0>Right.

00:56:56.849 --> 00:56:57.570
<v Speaker 0>Save

00:56:57.810 --> 00:57:00.530
<v Speaker 0>and then hopefully London works.

00:57:01.250 --> 00:57:01.970
<v Speaker 0>Yes.

00:57:04.050 --> 00:57:05.650
<v Speaker 0>And then let's remove it.

00:57:07.650 --> 00:57:08.770
<v Speaker 0>Okay.

00:57:10.505 --> 00:57:11.785
<v Speaker 0>It didn't like that.

00:57:12.425 --> 00:57:14.905
<v Speaker 1>Okay. So I think we should activate the

00:57:14.905 --> 00:57:16.185
<v Speaker 1>workflow again.

00:57:19.065 --> 00:57:21.145
<v Speaker 1>Let's deactivate and activate it again.

00:57:26.510 --> 00:57:28.350
<v Speaker 0>Okay. Let's try that out. Try again?

00:57:28.990 --> 00:57:29.630
<v Speaker 1>Yeah.

00:57:29.870 --> 00:57:30.590
<v Speaker 0>Error.

00:57:31.710 --> 00:57:32.510
<v Speaker 0>Okay.

00:57:33.550 --> 00:57:34.830
<v Speaker 1>So It seems like I think

00:57:35.550 --> 00:57:37.390
<v Speaker 0>it it's expect I'm assuming

00:57:37.914 --> 00:57:39.914
<v Speaker 0>right now that it expects its value to

00:57:39.914 --> 00:57:40.714
<v Speaker 0>this.

00:57:42.154 --> 00:57:43.994
<v Speaker 0>Maybe I just so I just get something

00:57:43.994 --> 00:57:45.595
<v Speaker 0>wrong. Let's delete this. Right?

00:57:49.194 --> 00:57:50.075
<v Speaker 0>Let's try.

00:57:53.670 --> 00:57:55.830
<v Speaker 0>Well, there's an option. Right? So we have

00:57:55.830 --> 00:57:56.470
<v Speaker 0>the

00:57:56.790 --> 00:57:58.950
<v Speaker 0>continue and fail, retry and fail. Maybe there's

00:57:58.950 --> 00:58:00.470
<v Speaker 0>something I could do there. But let's see

00:58:00.470 --> 00:58:01.590
<v Speaker 0>if I can get this working.

00:58:07.015 --> 00:58:08.535
<v Speaker 0>String. So

00:58:09.015 --> 00:58:11.975
<v Speaker 1>one thing we haven't chatted about in

00:58:12.855 --> 00:58:14.135
<v Speaker 1>the expressions,

00:58:14.375 --> 00:58:16.295
<v Speaker 1>like we have been like selecting

00:58:16.295 --> 00:58:17.175
<v Speaker 1>outputs.

00:58:17.175 --> 00:58:19.890
<v Speaker 1>But if you use something within double curly

00:58:19.890 --> 00:58:22.290
<v Speaker 1>brackets, you can use JavaScript in there.

00:58:22.850 --> 00:58:24.610
<v Speaker 1>So we could also say, you know, if

00:58:24.610 --> 00:58:27.170
<v Speaker 1>the value is null or something like that.

00:58:29.010 --> 00:58:31.250
<v Speaker 0>Alright. Walk me through that. So try just

00:58:31.250 --> 00:58:32.050
<v Speaker 0>to string again?

00:58:33.005 --> 00:58:33.725
<v Speaker 0>Yeah.

00:58:34.605 --> 00:58:35.565
<v Speaker 0>And then

00:58:37.565 --> 00:58:38.605
<v Speaker 0>add expression.

00:58:39.405 --> 00:58:41.325
<v Speaker 1>Because the thing is if we are adding

00:58:41.325 --> 00:58:42.765
<v Speaker 1>an expression here,

00:58:44.045 --> 00:58:45.725
<v Speaker 1>like there is nothing to compare there.

00:58:48.010 --> 00:58:49.290
<v Speaker 0>Right. Okay. Let's

00:58:50.170 --> 00:58:51.610
<v Speaker 0>you mentioned earlier,

00:58:52.330 --> 00:58:54.570
<v Speaker 0>I can take code. Can we do that?

00:58:55.450 --> 00:58:57.690
<v Speaker 1>Yeah. We can use a function node for

00:58:57.690 --> 00:58:58.410
<v Speaker 1>that. Function?

00:58:59.735 --> 00:59:00.375
<v Speaker 1>Yes.

00:59:00.855 --> 00:59:01.975
<v Speaker 1>It's a function.

00:59:03.815 --> 00:59:06.135
<v Speaker 1>So the difference between function and function items

00:59:06.135 --> 00:59:09.495
<v Speaker 1>is the function nodes takes all the data

00:59:09.495 --> 00:59:11.415
<v Speaker 1>that's coming inside and does something with it.

00:59:11.700 --> 00:59:12.579
<v Speaker 1>Function

00:59:12.579 --> 00:59:13.380
<v Speaker 1>item

00:59:13.700 --> 00:59:14.980
<v Speaker 1>takes all the

00:59:15.220 --> 00:59:17.780
<v Speaker 1>items that are being provided to it individually

00:59:17.859 --> 00:59:19.540
<v Speaker 1>and acts on that each time.

00:59:22.020 --> 00:59:22.980
<v Speaker 0>Oh,

00:59:22.980 --> 00:59:24.340
<v Speaker 0>okay. So

00:59:24.740 --> 00:59:26.900
<v Speaker 0>I I know that I'm in code mode.

00:59:27.815 --> 00:59:28.775
<v Speaker 0>I'm feeling

00:59:29.174 --> 00:59:32.055
<v Speaker 0>a little helpless. I've lost my ad expression

00:59:32.055 --> 00:59:34.855
<v Speaker 0>with all the nice clicky clicky stuff. So

00:59:36.055 --> 00:59:37.654
<v Speaker 0>I'm not really sure what I would add

00:59:37.654 --> 00:59:38.214
<v Speaker 0>here.

00:59:38.934 --> 00:59:39.734
<v Speaker 1>Okay. So

00:59:41.700 --> 00:59:42.980
<v Speaker 1>just as an example,

00:59:43.540 --> 00:59:45.380
<v Speaker 1>all the data that's being passed

00:59:45.460 --> 00:59:48.020
<v Speaker 1>throughout the workflow is in the variable called

00:59:48.020 --> 00:59:48.820
<v Speaker 1>items.

00:59:50.020 --> 00:59:51.620
<v Speaker 0>Can we confirm that?

00:59:52.980 --> 00:59:54.020
<v Speaker 1>Or is there is there a way to

00:59:54.020 --> 00:59:55.460
<v Speaker 0>debug what items is?

00:59:56.625 --> 00:59:58.145
<v Speaker 1>Sure. Let's do it.

00:59:58.545 --> 01:00:00.145
<v Speaker 1>Console log

01:00:00.305 --> 01:00:00.865
<v Speaker 1>items.

01:00:08.420 --> 01:00:10.580
<v Speaker 1>Okay. So console log, you'd have to go

01:00:10.580 --> 01:00:12.740
<v Speaker 1>into the terminal where you're running n a

01:00:12.740 --> 01:00:13.220
<v Speaker 1>10.

01:00:13.700 --> 01:00:16.180
<v Speaker 1>Also, probably doesn't have any data right now.

01:00:16.740 --> 01:00:19.140
<v Speaker 0>Yeah. That's what I was thinking. So

01:00:19.380 --> 01:00:19.780
<v Speaker 0>alright.

01:00:24.795 --> 01:00:27.115
<v Speaker 1>So I see the Oh, the big console

01:00:27.115 --> 01:00:28.555
<v Speaker 1>log. Is gonna be activated.

01:00:28.875 --> 01:00:30.155
<v Speaker 0>Right. Because

01:00:31.275 --> 01:00:33.355
<v Speaker 0>I could just return items and that will

01:00:33.355 --> 01:00:35.835
<v Speaker 0>show me everything when I hit it. So

01:00:36.155 --> 01:00:37.435
<v Speaker 1>That's true. Yeah.

01:00:40.510 --> 01:00:42.990
<v Speaker 1>Now what happened is I think you used

01:00:42.990 --> 01:00:44.830
<v Speaker 1>the production webhook URL

01:00:46.030 --> 01:00:48.270
<v Speaker 1>and you manually executed it

01:00:48.670 --> 01:00:50.270
<v Speaker 1>so it wouldn't show the data there.

01:00:51.924 --> 01:00:53.365
<v Speaker 0>Oh, was it because I had to save

01:00:53.365 --> 01:00:54.165
<v Speaker 1>it. No.

01:00:56.165 --> 01:00:58.885
<v Speaker 1>So whenever you execute, man so all the

01:00:58.885 --> 01:01:01.525
<v Speaker 1>data that's coming in through n eight n

01:01:01.525 --> 01:01:02.885
<v Speaker 1>while the production

01:01:03.125 --> 01:01:04.885
<v Speaker 1>while the workflow is active,

01:01:05.300 --> 01:01:07.700
<v Speaker 1>the data that passes through is invisible in

01:01:07.700 --> 01:01:08.900
<v Speaker 1>the editor UI.

01:01:10.099 --> 01:01:12.340
<v Speaker 1>The data coming in from webhook is only

01:01:12.340 --> 01:01:15.140
<v Speaker 1>visible, if you are using the test webhook.

01:01:16.180 --> 01:01:18.580
<v Speaker 1>So you would use test webhook to debug

01:01:18.580 --> 01:01:21.185
<v Speaker 1>your workflows and then set it to active

01:01:21.185 --> 01:01:22.945
<v Speaker 1>to sort of move it to production, so

01:01:22.945 --> 01:01:23.665
<v Speaker 1>to speak.

01:01:23.905 --> 01:01:26.705
<v Speaker 0>Okay. Well, we kinda got what I needed

01:01:26.705 --> 01:01:28.545
<v Speaker 0>to guess. Right? Because even by just running

01:01:28.545 --> 01:01:31.345
<v Speaker 0>that on that empty code one, which is

01:01:31.345 --> 01:01:32.545
<v Speaker 0>returning items,

01:01:32.705 --> 01:01:34.385
<v Speaker 0>that's just being dropped into the body of

01:01:34.385 --> 01:01:35.940
<v Speaker 0>this request here. So I can actually see

01:01:35.940 --> 01:01:38.500
<v Speaker 0>that probably what I'm looking for is

01:01:39.940 --> 01:01:42.500
<v Speaker 0>actually just inside the query object. So

01:01:43.220 --> 01:01:44.340
<v Speaker 0>if I do

01:01:46.020 --> 01:01:46.820
<v Speaker 0>if

01:01:47.940 --> 01:01:49.619
<v Speaker 0>query

01:01:50.535 --> 01:01:52.295
<v Speaker 0>dot city

01:01:52.855 --> 01:01:54.215
<v Speaker 0>is undefined,

01:01:58.375 --> 01:01:58.935
<v Speaker 0>then

01:01:59.974 --> 01:02:01.895
<v Speaker 0>return

01:02:03.180 --> 01:02:03.980
<v Speaker 0>false.

01:02:03.980 --> 01:02:06.860
<v Speaker 0>Otherwise, I can return query dot city.

01:02:08.220 --> 01:02:10.300
<v Speaker 1>So the thing is like how you are

01:02:10.300 --> 01:02:13.020
<v Speaker 1>handling data in n8n, it always have to

01:02:13.020 --> 01:02:13.980
<v Speaker 1>be an array.

01:02:14.220 --> 01:02:15.020
<v Speaker 1>So the function

01:02:15.465 --> 01:02:17.145
<v Speaker 1>always returns an array.

01:02:18.185 --> 01:02:18.825
<v Speaker 1>So

01:02:18.985 --> 01:02:21.065
<v Speaker 1>you would have something like

01:02:21.305 --> 01:02:24.185
<v Speaker 1>an array, like, two brackets, square brackets.

01:02:24.825 --> 01:02:25.465
<v Speaker 0>Mhmm.

01:02:26.905 --> 01:02:29.225
<v Speaker 1>No. No. At at return or it could

01:02:29.225 --> 01:02:29.625
<v Speaker 1>be here.

01:02:31.670 --> 01:02:33.510
<v Speaker 1>And then you'd have

01:02:33.990 --> 01:02:34.869
<v Speaker 1>sort of

01:02:35.430 --> 01:02:36.470
<v Speaker 1>braces

01:02:36.710 --> 01:02:39.510
<v Speaker 1>inside it because that's gonna be a object.

01:02:40.309 --> 01:02:41.430
<v Speaker 1>And JSON,

01:02:44.375 --> 01:02:46.055
<v Speaker 1>You'd have to write JSON.

01:02:47.095 --> 01:02:49.335
<v Speaker 1>So the thing is how the

01:02:49.335 --> 01:02:51.095
<v Speaker 1>data structure of n8n

01:02:51.255 --> 01:02:51.895
<v Speaker 1>is

01:02:52.375 --> 01:02:53.575
<v Speaker 1>is particular.

01:02:54.695 --> 01:02:56.535
<v Speaker 0>Alright. I think I understand.

01:02:56.535 --> 01:02:59.575
<v Speaker 0>So let's assume I do this

01:02:59.950 --> 01:03:01.310
<v Speaker 0>and then down here

01:03:01.550 --> 01:03:02.510
<v Speaker 0>I do

01:03:03.470 --> 01:03:05.390
<v Speaker 0>because we know it exists here. I do

01:03:05.390 --> 01:03:08.030
<v Speaker 0>query dot city. So based on my naive

01:03:08.030 --> 01:03:10.750
<v Speaker 0>understanding right now, this this

01:03:10.750 --> 01:03:12.830
<v Speaker 0>code note and I'm gonna just test it.

01:03:14.005 --> 01:03:15.765
<v Speaker 1>This one worked though. Yeah.

01:03:16.085 --> 01:03:17.925
<v Speaker 0>It won't work. No.

01:03:21.525 --> 01:03:24.405
<v Speaker 0>I didn't save it. So let me save

01:03:24.405 --> 01:03:24.805
<v Speaker 0>and

01:03:28.089 --> 01:03:29.930
<v Speaker 0>oh yeah, that's the test mode.

01:03:30.170 --> 01:03:31.770
<v Speaker 0>Let me run it here.

01:03:32.890 --> 01:03:35.369
<v Speaker 0>Well, workflow to there. Yeah, you're right. Okay.

01:03:35.369 --> 01:03:36.410
<v Speaker 0>I should have listened to you the first

01:03:36.410 --> 01:03:36.970
<v Speaker 0>time.

01:03:37.690 --> 01:03:38.250
<v Speaker 0>So

01:03:38.890 --> 01:03:40.570
<v Speaker 0>what did I get wrong there? Because my

01:03:40.570 --> 01:03:43.145
<v Speaker 0>understanding is if query dot city is undefined,

01:03:43.145 --> 01:03:44.985
<v Speaker 0>which means it's not been specified,

01:03:44.985 --> 01:03:46.825
<v Speaker 0>then I can return. You said I should

01:03:46.825 --> 01:03:48.745
<v Speaker 0>return an array and then I've got JSON

01:03:48.745 --> 01:03:51.065
<v Speaker 0>inside of that, but I must have misunderstood.

01:03:51.945 --> 01:03:55.145
<v Speaker 1>Right. So you have the array

01:03:55.145 --> 01:03:57.980
<v Speaker 1>brackets like the square brackets. Mhmm. Inside it

01:03:57.980 --> 01:03:59.660
<v Speaker 1>you have to type JSON

01:04:00.380 --> 01:04:03.020
<v Speaker 1>colon and then whatever is in front of

01:04:03.020 --> 01:04:03.980
<v Speaker 1>it is fine.

01:04:04.780 --> 01:04:05.580
<v Speaker 0>Oh.

01:04:05.980 --> 01:04:07.260
<v Speaker 0>Do I need to does it have to

01:04:07.260 --> 01:04:07.900
<v Speaker 0>be like

01:04:08.300 --> 01:04:10.540
<v Speaker 0>like that? No. Just JSON is fine.

01:04:11.255 --> 01:04:13.575
<v Speaker 0>Oh, yeah. I guess actually JavaScript doesn't care.

01:04:13.575 --> 01:04:14.455
<v Speaker 0>Right? So

01:04:15.655 --> 01:04:17.415
<v Speaker 0>Okay. Alright. I understand.

01:04:18.135 --> 01:04:19.095
<v Speaker 1>And also,

01:04:20.295 --> 01:04:20.775
<v Speaker 1>is it

01:04:22.695 --> 01:04:25.335
<v Speaker 1>so JSON also needs to be under

01:04:25.495 --> 01:04:25.895
<v Speaker 1>braces?

01:04:28.829 --> 01:04:29.630
<v Speaker 0>Of course.

01:04:30.829 --> 01:04:32.190
<v Speaker 0>Alright. So

01:04:32.750 --> 01:04:34.190
<v Speaker 0>let's get that fixed.

01:04:35.869 --> 01:04:36.990
<v Speaker 0>Like that, right?

01:04:37.630 --> 01:04:38.029
<v Speaker 0>Yeah.

01:04:40.194 --> 01:04:41.395
<v Speaker 0>I'm having fun.

01:04:41.555 --> 01:04:44.675
<v Speaker 0>Okay. So I'm gonna run this again.

01:04:48.194 --> 01:04:49.714
<v Speaker 0>What did I get wrong? Okay. Let's use

01:04:49.714 --> 01:04:51.155
<v Speaker 0>the test one, right? Because that gets us

01:04:51.155 --> 01:04:52.915
<v Speaker 0>the debug and stuff that we need.

01:04:53.714 --> 01:04:54.035
<v Speaker 1>Yeah.

01:04:56.150 --> 01:04:57.030
<v Speaker 0>Oops.

01:04:57.670 --> 01:04:58.950
<v Speaker 0>So test,

01:04:58.950 --> 01:05:00.310
<v Speaker 0>copy and

01:05:01.750 --> 01:05:03.910
<v Speaker 1>So if you on the bottom, you can

01:05:03.910 --> 01:05:06.070
<v Speaker 1>stop the current webhook.

01:05:08.630 --> 01:05:09.670
<v Speaker 1>If you go out.

01:05:11.565 --> 01:05:12.525
<v Speaker 0>Yeah.

01:05:13.005 --> 01:05:14.685
<v Speaker 1>And at the bottom. Yeah.

01:05:15.005 --> 01:05:17.244
<v Speaker 0>Okay. So if I had execute here, that's

01:05:17.244 --> 01:05:18.765
<v Speaker 0>waiting for me to have the test endpoint.

01:05:18.765 --> 01:05:20.285
<v Speaker 0>That's right? Yes.

01:05:20.365 --> 01:05:22.445
<v Speaker 0>Okay. That's Send that with nothing.

01:05:25.380 --> 01:05:27.060
<v Speaker 0>Query is not defined.

01:05:28.180 --> 01:05:30.580
<v Speaker 0>So it would be if query equal to

01:05:30.580 --> 01:05:31.540
<v Speaker 1>undefined.

01:05:32.580 --> 01:05:34.500
<v Speaker 0>But query was defined.

01:05:34.820 --> 01:05:35.540
<v Speaker 0>So

01:05:37.235 --> 01:05:38.915
<v Speaker 0>if I pull this back, let's comment all

01:05:38.915 --> 01:05:40.035
<v Speaker 0>that out.

01:05:41.795 --> 01:05:43.955
<v Speaker 0>I wanna understand what I got wrong there

01:05:43.955 --> 01:05:45.555
<v Speaker 0>because when we did return,

01:05:46.675 --> 01:05:48.435
<v Speaker 0>oh it's items dot query.

01:05:49.075 --> 01:05:49.475
<v Speaker 0>Okay.

01:05:49.940 --> 01:05:52.020
<v Speaker 0>I was gonna return items but that the

01:05:52.020 --> 01:05:53.780
<v Speaker 0>existence I've been able to do that means

01:05:53.780 --> 01:05:56.260
<v Speaker 0>that what we actually wanted was that.

01:05:57.780 --> 01:05:59.700
<v Speaker 1>Items dot json

01:06:00.260 --> 01:06:02.260
<v Speaker 1>item zero dot json

01:06:02.260 --> 01:06:04.020
<v Speaker 1>dot query dot city

01:06:06.795 --> 01:06:07.675
<v Speaker 1>dot

01:06:08.715 --> 01:06:09.355
<v Speaker 1>yeah.

01:06:11.115 --> 01:06:11.835
<v Speaker 0>Okay.

01:06:12.715 --> 01:06:14.555
<v Speaker 0>Let's try that. That's the worst that could

01:06:14.555 --> 01:06:16.475
<v Speaker 0>happen. Okay. So I execute

01:06:16.869 --> 01:06:18.150
<v Speaker 0>test URL.

01:06:23.670 --> 01:06:24.710
<v Speaker 0>Where did that come from?

01:06:29.285 --> 01:06:31.525
<v Speaker 0>So it returned to default which is good.

01:06:31.925 --> 01:06:34.005
<v Speaker 0>Did the test URL change?

01:06:34.565 --> 01:06:37.125
<v Speaker 1>Oh, yeah. It returns a default

01:06:37.845 --> 01:06:39.605
<v Speaker 1>because you have something outside.

01:06:43.460 --> 01:06:45.540
<v Speaker 1>Yeah. If you open that up.

01:06:46.259 --> 01:06:47.540
<v Speaker 0>Open what up? Sorry.

01:06:48.259 --> 01:06:49.619
<v Speaker 1>Sorry. The code.

01:06:49.859 --> 01:06:52.180
<v Speaker 1>Up. Yeah. In the function node? Yeah.

01:06:54.259 --> 01:06:57.275
<v Speaker 1>So here you say, like, if item zero

01:06:57.275 --> 01:06:59.435
<v Speaker 1>dot JSON dot query is undefined,

01:06:59.515 --> 01:07:00.475
<v Speaker 1>then it sends

01:07:01.035 --> 01:07:02.155
<v Speaker 1>city as

01:07:02.315 --> 01:07:03.515
<v Speaker 1>it's a Glasgow.

01:07:04.075 --> 01:07:04.715
<v Speaker 1>And

01:07:06.235 --> 01:07:09.035
<v Speaker 1>irrespective of whatever the result is, you're also

01:07:09.035 --> 01:07:10.155
<v Speaker 1>returning

01:07:10.890 --> 01:07:12.890
<v Speaker 1>JSON dot query dot city.

01:07:15.049 --> 01:07:17.849
<v Speaker 1>So like that is in inside

01:07:17.849 --> 01:07:19.690
<v Speaker 1>the if if block.

01:07:21.609 --> 01:07:23.385
<v Speaker 0>Yeah. But I never had the web. So

01:07:23.385 --> 01:07:24.985
<v Speaker 0>that's what I don't understand there. As I

01:07:24.985 --> 01:07:26.905
<v Speaker 0>had execute here and that's supposed to wait

01:07:26.905 --> 01:07:28.025
<v Speaker 0>for a request.

01:07:31.305 --> 01:07:33.545
<v Speaker 0>Oh, I see what you're Okay. No, I've

01:07:33.545 --> 01:07:34.185
<v Speaker 0>got it.

01:07:34.745 --> 01:07:36.265
<v Speaker 0>Yeah. So what I should have done is

01:07:36.265 --> 01:07:37.225
<v Speaker 0>to execute here.

01:07:38.260 --> 01:07:40.660
<v Speaker 0>I was just triggered in the wrong node.

01:07:41.460 --> 01:07:43.300
<v Speaker 0>There we go. Right.

01:07:44.420 --> 01:07:46.980
<v Speaker 1>Because what happens is you all your webhook

01:07:46.980 --> 01:07:49.300
<v Speaker 1>node already has data. So if you're executing

01:07:49.300 --> 01:07:51.220
<v Speaker 1>the next node, it's just using the data

01:07:51.220 --> 01:07:53.925
<v Speaker 1>it already had for you to model the

01:07:53.925 --> 01:07:54.725
<v Speaker 1>data. Yeah.

01:07:55.125 --> 01:07:56.805
<v Speaker 0>And now if I pass Berlin.

01:07:57.365 --> 01:07:58.805
<v Speaker 0>Oh, I broke it again.

01:08:00.565 --> 01:08:03.365
<v Speaker 0>Okay. So I got query Berlin.

01:08:03.365 --> 01:08:04.645
<v Speaker 0>Oh, yeah. I've not hooked it up to

01:08:04.645 --> 01:08:05.045
<v Speaker 0>anything.

01:08:05.950 --> 01:08:08.030
<v Speaker 0>Although But if you open it up,

01:08:08.670 --> 01:08:10.430
<v Speaker 1>query is not defined.

01:08:10.510 --> 01:08:13.310
<v Speaker 0>Yeah. Okay. So it's just me being really

01:08:13.310 --> 01:08:16.670
<v Speaker 0>crap that is continually breaking this. So let's

01:08:16.670 --> 01:08:18.750
<v Speaker 0>fix that and then hook this up. Right?

01:08:18.750 --> 01:08:20.750
<v Speaker 0>So I can now go here

01:08:21.195 --> 01:08:22.314
<v Speaker 0>and then this could

01:08:23.274 --> 01:08:25.435
<v Speaker 0>no. We just return that. Right? So

01:08:25.675 --> 01:08:27.274
<v Speaker 0>Yeah. I'm

01:08:27.274 --> 01:08:28.715
<v Speaker 0>gonna feel confident.

01:08:28.715 --> 01:08:30.555
<v Speaker 0>I'm gonna hit save and I'm gonna go

01:08:30.555 --> 01:08:31.835
<v Speaker 0>back to production

01:08:32.395 --> 01:08:33.515
<v Speaker 0>and just ship this.

01:08:35.050 --> 01:08:36.090
<v Speaker 0>Activated.

01:08:36.090 --> 01:08:37.849
<v Speaker 0>So let's do nothing.

01:08:39.370 --> 01:08:40.329
<v Speaker 0>I

01:08:40.729 --> 01:08:42.010
<v Speaker 0>I thought I had it.

01:08:43.930 --> 01:08:46.090
<v Speaker 0>What did I get wrong? This is I

01:08:46.090 --> 01:08:48.649
<v Speaker 1>think error from the old

01:08:49.125 --> 01:08:51.925
<v Speaker 1>old execution, but now we can't. So we

01:08:51.925 --> 01:08:53.365
<v Speaker 1>can check the error if you click on

01:08:53.365 --> 01:08:54.885
<v Speaker 1>executions on the left,

01:08:55.524 --> 01:08:56.564
<v Speaker 1>extreme left.

01:08:57.444 --> 01:08:59.444
<v Speaker 1>So it says error. Now you can open

01:08:59.444 --> 01:09:00.805
<v Speaker 1>on the on the right side of the

01:09:00.805 --> 01:09:01.844
<v Speaker 1>folder icon.

01:09:02.165 --> 01:09:02.484
<v Speaker 0>Yeah.

01:09:06.569 --> 01:09:08.569
<v Speaker 1>Oh, yes. We didn't save and activate.

01:09:10.330 --> 01:09:11.449
<v Speaker 1>Okay. So

01:09:11.930 --> 01:09:13.529
<v Speaker 1>it shows you what the error is. Ah,

01:09:13.529 --> 01:09:16.010
<v Speaker 1>because the set node was referenced to the

01:09:16.010 --> 01:09:16.649
<v Speaker 1>wrong expression.

01:09:17.475 --> 01:09:19.554
<v Speaker 0>Right. So I'm dropping with the map node.

01:09:19.635 --> 01:09:21.715
<v Speaker 0>Okay. So can I just go back to

01:09:21.715 --> 01:09:23.395
<v Speaker 0>our fast example?

01:09:23.395 --> 01:09:25.715
<v Speaker 0>Right? So we'll just forget that. Let's fix

01:09:25.715 --> 01:09:26.435
<v Speaker 0>this,

01:09:26.675 --> 01:09:28.835
<v Speaker 0>which is now actually looking for

01:09:29.490 --> 01:09:32.210
<v Speaker 0>yeah. It's already telling me it's broken. So

01:09:32.210 --> 01:09:33.649
<v Speaker 0>we want the function

01:09:36.610 --> 01:09:37.970
<v Speaker 0>where's my

01:09:40.130 --> 01:09:40.610
<v Speaker 0>city?

01:09:45.115 --> 01:09:46.314
<v Speaker 1>So

01:09:46.314 --> 01:09:48.475
<v Speaker 1>the function doesn't have any output right now.

01:09:48.475 --> 01:09:50.155
<v Speaker 1>So which is why we should first build

01:09:50.155 --> 01:09:52.795
<v Speaker 1>it in test and then move to production

01:09:52.795 --> 01:09:55.035
<v Speaker 1>because we need the function node to output

01:09:55.035 --> 01:09:56.635
<v Speaker 1>data to reference it.

01:09:57.035 --> 01:09:59.789
<v Speaker 0>Alright. So I thought the return here

01:10:00.030 --> 01:10:01.709
<v Speaker 0>was me returning data.

01:10:02.909 --> 01:10:04.830
<v Speaker 0>Oh, no. But it doesn't have any data

01:10:04.830 --> 01:10:05.709
<v Speaker 1>right now. Right?

01:10:06.110 --> 01:10:07.709
<v Speaker 1>Because it's not been executed.

01:10:08.510 --> 01:10:10.909
<v Speaker 1>So all the data that's visible in the

01:10:10.909 --> 01:10:11.710
<v Speaker 1>editor UI,

01:10:12.345 --> 01:10:13.945
<v Speaker 1>it's it's gonna happen when we are using

01:10:13.945 --> 01:10:15.385
<v Speaker 1>the test webhook URL.

01:10:15.545 --> 01:10:17.545
<v Speaker 0>Correct. Right. Okay. So

01:10:18.265 --> 01:10:19.945
<v Speaker 1>So we need to give it data first

01:10:19.945 --> 01:10:23.305
<v Speaker 1>and then model it. Okay. So test, copy,

01:10:23.465 --> 01:10:24.425
<v Speaker 0>execute,

01:10:24.825 --> 01:10:25.865
<v Speaker 0>jump over here,

01:10:26.425 --> 01:10:26.985
<v Speaker 0>city,

01:10:28.219 --> 01:10:29.260
<v Speaker 0>Berlin,

01:10:31.260 --> 01:10:33.340
<v Speaker 0>which now has that information.

01:10:33.340 --> 01:10:34.699
<v Speaker 0>So I'm assuming

01:10:35.100 --> 01:10:36.219
<v Speaker 0>if I

01:10:37.500 --> 01:10:38.780
<v Speaker 0>remove expression,

01:10:39.500 --> 01:10:40.380
<v Speaker 0>add expression,

01:10:42.735 --> 01:10:44.255
<v Speaker 0>No, it's function.

01:10:45.615 --> 01:10:46.735
<v Speaker 0>Yeah.

01:10:47.375 --> 01:10:48.015
<v Speaker 0>Okay.

01:10:49.135 --> 01:10:51.695
<v Speaker 0>See you just gotta learn the learn the

01:10:51.695 --> 01:10:54.575
<v Speaker 0>way of it. Okay. So I'm definitely confident

01:10:54.575 --> 01:10:56.015
<v Speaker 0>that I'm just gonna save it to go

01:10:56.015 --> 01:10:56.575
<v Speaker 0>to production.

01:10:57.720 --> 01:10:58.760
<v Speaker 1>Are you sure?

01:10:59.720 --> 01:11:01.800
<v Speaker 0>Yeah. Yeah. Yeah. Let's do it. Let's do

01:11:01.800 --> 01:11:03.719
<v Speaker 1>it. Let's do Paris.

01:11:04.760 --> 01:11:05.560
<v Speaker 0>Alright.

01:11:06.840 --> 01:11:09.000
<v Speaker 0>Yep. That is Paris. Let's do the set.

01:11:11.895 --> 01:11:12.855
<v Speaker 0>Glasgow,

01:11:12.855 --> 01:11:13.655
<v Speaker 0>perfect.

01:11:15.015 --> 01:11:16.375
<v Speaker 0>You did it. Yay.

01:11:17.175 --> 01:11:19.335
<v Speaker 0>Okay, I understand so much more how this

01:11:19.335 --> 01:11:21.815
<v Speaker 0>all connects together now and the web of

01:11:21.815 --> 01:11:24.455
<v Speaker 0>test and production why they're important. Like it's

01:11:24.455 --> 01:11:26.480
<v Speaker 0>all it's all starting to make sense to

01:11:26.480 --> 01:11:28.239
<v Speaker 0>me a bit more now. I like it.

01:11:28.560 --> 01:11:29.280
<v Speaker 0>Awesome.

01:11:30.960 --> 01:11:32.960
<v Speaker 0>And I actually see we have a comment

01:11:32.960 --> 01:11:33.599
<v Speaker 0>with

01:11:34.480 --> 01:11:36.160
<v Speaker 0>Harshil telling us how to do it with

01:11:36.160 --> 01:11:36.800
<v Speaker 0>the F block.

01:11:39.645 --> 01:11:40.284
<v Speaker 1>Would have been

01:11:41.725 --> 01:11:44.285
<v Speaker 0>lot but I feel like I actually I

01:11:44.285 --> 01:11:45.405
<v Speaker 0>just I understand

01:11:45.645 --> 01:11:47.405
<v Speaker 0>how this is working now by going through

01:11:47.405 --> 01:11:50.205
<v Speaker 0>that that process and connecting the dots so

01:11:50.550 --> 01:11:51.510
<v Speaker 0>awesome.

01:11:51.510 --> 01:11:52.950
<v Speaker 0>Thank you for the telling us how to

01:11:52.950 --> 01:11:54.310
<v Speaker 0>do that and at the same time I'm

01:11:54.310 --> 01:11:56.310
<v Speaker 0>glad I I kind of persevered and worked

01:11:56.310 --> 01:11:57.989
<v Speaker 0>my way through that. That was great.

01:11:59.110 --> 01:11:59.909
<v Speaker 0>Alright.

01:12:00.710 --> 01:12:01.429
<v Speaker 1>Alright.

01:12:02.550 --> 01:12:04.695
<v Speaker 1>What should we do next? Yeah. Let's do

01:12:04.695 --> 01:12:05.655
<v Speaker 0>one more thing.

01:12:06.455 --> 01:12:08.215
<v Speaker 0>If you got a suggestion or should I

01:12:08.215 --> 01:12:10.375
<v Speaker 0>just pop open a sidebar and start scrolling?

01:12:10.375 --> 01:12:11.574
<v Speaker 0>What what do you think?

01:12:13.255 --> 01:12:15.495
<v Speaker 1>Should we do a telegram bot?

01:12:17.095 --> 01:12:17.415
<v Speaker 0>Yeah.

01:12:18.780 --> 01:12:19.820
<v Speaker 0>How's that? Yeah.

01:12:20.780 --> 01:12:21.659
<v Speaker 1>New workflow?

01:12:23.020 --> 01:12:25.340
<v Speaker 1>Yeah. Let's do a new workflow. Do you

01:12:25.340 --> 01:12:26.379
<v Speaker 1>use Telegram?

01:12:27.820 --> 01:12:29.739
<v Speaker 0>I do. I think I even have it

01:12:29.739 --> 01:12:30.940
<v Speaker 0>running on this Mac.

01:12:31.605 --> 01:12:32.565
<v Speaker 0>Let me check.

01:12:32.965 --> 01:12:33.764
<v Speaker 0>Perfect.

01:12:34.245 --> 01:12:35.685
<v Speaker 0>Yeah. I do. Okay.

01:12:37.845 --> 01:12:39.285
<v Speaker 0>Yeah. Just make sure I can hide all

01:12:39.285 --> 01:12:41.525
<v Speaker 0>my contacts and stuff. Okay. Okay. So what

01:12:41.525 --> 01:12:41.925
<v Speaker 0>I do?

01:12:44.260 --> 01:12:47.540
<v Speaker 1>So yeah. Let's open the telegram window then.

01:12:47.780 --> 01:12:50.100
<v Speaker 1>We can create a new bot on telegram

01:12:50.100 --> 01:12:50.820
<v Speaker 1>first.

01:12:51.860 --> 01:12:53.540
<v Speaker 1>Okay. Is that fine?

01:12:54.660 --> 01:12:57.219
<v Speaker 0>Yeah. I've never done this before and

01:12:57.380 --> 01:12:59.095
<v Speaker 0>I don't wanna reveal my number but we

01:12:59.095 --> 01:13:00.054
<v Speaker 0>should be okay.

01:13:04.375 --> 01:13:05.175
<v Speaker 1>Okay.

01:13:05.255 --> 01:13:08.534
<v Speaker 1>So we need to start a chat with

01:13:08.615 --> 01:13:09.574
<v Speaker 1>bot father.

01:13:11.815 --> 01:13:13.095
<v Speaker 0>Okay. Let me.

01:13:14.679 --> 01:13:15.399
<v Speaker 0>So

01:13:15.880 --> 01:13:18.280
<v Speaker 0>Oh, it's updating. That's okay. It's just web.

01:13:18.280 --> 01:13:19.159
<v Speaker 0>That's fine.

01:13:19.400 --> 01:13:21.800
<v Speaker 0>Oh, no. It's not. Oh, we're good. Okay.

01:13:22.679 --> 01:13:24.199
<v Speaker 0>So let's start a chat.

01:13:25.000 --> 01:13:26.119
<v Speaker 0>New secret chat.

01:13:28.165 --> 01:13:29.284
<v Speaker 1>Normal chat.

01:13:30.005 --> 01:13:31.364
<v Speaker 1>Normal chat.

01:13:35.045 --> 01:13:36.324
<v Speaker 0>What's the name?

01:13:37.364 --> 01:13:38.165
<v Speaker 1>Botfather.

01:13:41.780 --> 01:13:42.500
<v Speaker 0>Okay.

01:13:42.980 --> 01:13:45.300
<v Speaker 0>Start. Cool. So we do start.

01:13:45.780 --> 01:13:47.940
<v Speaker 1>So I think it shows you the slash

01:13:47.940 --> 01:13:50.179
<v Speaker 1>commands. So there's one for new bot.

01:13:51.460 --> 01:13:52.820
<v Speaker 0>I was gonna see if I could make

01:13:52.820 --> 01:13:54.660
<v Speaker 0>this bigger, but I don't think we can.

01:13:54.660 --> 01:13:56.500
<v Speaker 0>We should be alright. Okay. So I do

01:13:56.500 --> 01:13:57.219
<v Speaker 0>slash bot.

01:13:59.034 --> 01:14:01.675
<v Speaker 1>Oh no. No. You take a look look.

01:14:01.994 --> 01:14:02.715
<v Speaker 0>Yeah.

01:14:04.715 --> 01:14:05.594
<v Speaker 0>Okay.

01:14:05.594 --> 01:14:07.755
<v Speaker 0>So Rawkode live.

01:14:10.170 --> 01:14:11.690
<v Speaker 0>Choose a username.

01:14:15.050 --> 01:14:16.730
<v Speaker 0>Oh, Rawkode

01:14:17.050 --> 01:14:17.690
<v Speaker 0>bot.

01:14:20.250 --> 01:14:22.890
<v Speaker 1>Okay. Okay. So you can click on the

01:14:22.890 --> 01:14:26.295
<v Speaker 1>token so that it copies it. Yep. Perfect.

01:14:26.775 --> 01:14:27.495
<v Speaker 1>And

01:14:27.735 --> 01:14:28.535
<v Speaker 1>let's

01:14:28.695 --> 01:14:29.895
<v Speaker 1>go to n a 10.

01:14:30.535 --> 01:14:32.935
<v Speaker 1>Alright. So we'll start a trigger node. Oh,

01:14:32.935 --> 01:14:34.855
<v Speaker 0>trigger trigger. Yep. I'm on it.

01:14:36.215 --> 01:14:36.615
<v Speaker 1>Perfect.

01:14:37.540 --> 01:14:39.940
<v Speaker 1>And we create the credentials for it.

01:14:40.500 --> 01:14:42.420
<v Speaker 0>Okay. So Rawkode

01:14:42.500 --> 01:14:43.940
<v Speaker 0>bot access

01:14:43.940 --> 01:14:44.820
<v Speaker 0>token

01:14:45.620 --> 01:14:46.579
<v Speaker 0>allow

01:14:46.739 --> 01:14:49.059
<v Speaker 0>do I need to drag this over? Sure.

01:14:49.860 --> 01:14:51.060
<v Speaker 0>I don't know anyway.

01:14:53.625 --> 01:14:56.025
<v Speaker 1>And star. Let's do star. Let's get everything

01:14:56.025 --> 01:14:57.385
<v Speaker 1>we sent to this bot.

01:14:57.625 --> 01:14:59.945
<v Speaker 1>Uh-huh. And similarly, like the concept we talked

01:14:59.945 --> 01:15:01.945
<v Speaker 1>about production. So here, we don't need to

01:15:01.945 --> 01:15:03.625
<v Speaker 1>provide any URL

01:15:03.785 --> 01:15:06.025
<v Speaker 1>because, like, if this node takes care of

01:15:06.025 --> 01:15:07.225
<v Speaker 1>it for us. However,

01:15:07.989 --> 01:15:09.989
<v Speaker 1>if we click on execute node,

01:15:10.550 --> 01:15:12.389
<v Speaker 1>it still stays active for hundred and twenty

01:15:12.389 --> 01:15:13.030
<v Speaker 1>seconds.

01:15:13.590 --> 01:15:15.030
<v Speaker 1>We'll need to save it first.

01:15:16.790 --> 01:15:18.389
<v Speaker 1>And if we

01:15:19.190 --> 01:15:20.869
<v Speaker 1>set the workflow as active, then it will

01:15:20.869 --> 01:15:22.389
<v Speaker 1>automatically be in production mode.

01:15:22.905 --> 01:15:24.585
<v Speaker 1>But we don't need to do it now

01:15:24.585 --> 01:15:26.264
<v Speaker 1>because we need to see the data

01:15:26.985 --> 01:15:28.824
<v Speaker 1>for modeling our workflow.

01:15:29.704 --> 01:15:31.465
<v Speaker 1>So let's execute this

01:15:32.105 --> 01:15:34.024
<v Speaker 1>and go back to the Telegram

01:15:34.505 --> 01:15:36.344
<v Speaker 1>window. Oh, failed.

01:15:40.690 --> 01:15:42.849
<v Speaker 1>Because we aren't running with tunnel.

01:15:43.890 --> 01:15:46.290
<v Speaker 1>We need the n a 10 instance to

01:15:46.290 --> 01:15:47.809
<v Speaker 1>be reachable from the web.

01:15:48.050 --> 01:15:49.489
<v Speaker 1>So n a 10 needs to run with

01:15:49.489 --> 01:15:50.130
<v Speaker 1>tunnel.

01:15:50.770 --> 01:15:51.170
<v Speaker 0>On it.

01:15:52.655 --> 01:15:53.455
<v Speaker 0>Perfect.

01:15:55.215 --> 01:15:56.895
<v Speaker 0>Okay. Refresh.

01:15:58.895 --> 01:16:00.015
<v Speaker 0>Let's go

01:16:00.495 --> 01:16:01.295
<v Speaker 0>execute.

01:16:02.575 --> 01:16:04.335
<v Speaker 0>That seems happier. And

01:16:04.575 --> 01:16:05.855
<v Speaker 0>So that just

01:16:06.175 --> 01:16:07.535
<v Speaker 0>So you must have a link.

01:16:09.050 --> 01:16:10.650
<v Speaker 1>So there must be a message.

01:16:11.050 --> 01:16:12.250
<v Speaker 1>In the message, there must be a link

01:16:12.250 --> 01:16:13.130
<v Speaker 1>to your bot

01:16:13.530 --> 01:16:15.130
<v Speaker 1>just beneath the

01:16:15.290 --> 01:16:16.730
<v Speaker 1>just above the token.

01:16:19.370 --> 01:16:20.250
<v Speaker 0>I'll put it back.

01:16:23.844 --> 01:16:24.644
<v Speaker 0>Oh, yeah.

01:16:27.445 --> 01:16:29.764
<v Speaker 1>Start. So it sends slash start,

01:16:30.405 --> 01:16:32.405
<v Speaker 1>and we got it. So we got the

01:16:32.405 --> 01:16:35.445
<v Speaker 1>first message, slash start, because that went first.

01:16:35.445 --> 01:16:36.165
<v Speaker 0>That was easy.

01:16:36.829 --> 01:16:38.109
<v Speaker 0>Okay. No.

01:16:39.070 --> 01:16:40.269
<v Speaker 1>Should we try again?

01:16:41.150 --> 01:16:42.030
<v Speaker 1>Execute.

01:16:42.110 --> 01:16:42.829
<v Speaker 1>Oh.

01:16:44.989 --> 01:16:45.709
<v Speaker 0>Yeah.

01:16:48.429 --> 01:16:49.070
<v Speaker 0>Alright, Brooke.

01:16:52.975 --> 01:16:54.335
<v Speaker 1>So what does it say?

01:16:55.215 --> 01:16:56.655
<v Speaker 0>It says webhook

01:16:56.735 --> 01:16:58.815
<v Speaker 0>cannot be activated because another one with the

01:16:58.815 --> 01:17:00.494
<v Speaker 0>same method post path

01:17:00.495 --> 01:17:01.775
<v Speaker 0>is already active.

01:17:04.570 --> 01:17:06.889
<v Speaker 0>I'll just refresh. Let's close this.

01:17:08.250 --> 01:17:11.369
<v Speaker 0>Let's just I can just enable this. So

01:17:12.810 --> 01:17:14.330
<v Speaker 1>But you won't see any data coming in

01:17:14.330 --> 01:17:14.650
<v Speaker 1>though.

01:17:15.895 --> 01:17:16.855
<v Speaker 0>Oh, yeah.

01:17:17.415 --> 01:17:18.135
<v Speaker 0>Okay.

01:17:19.975 --> 01:17:21.015
<v Speaker 0>Execute.

01:17:24.935 --> 01:17:26.935
<v Speaker 1>K. Let's let's create a new workflow.

01:17:27.735 --> 01:17:29.735
<v Speaker 1>So your credentials are already saved.

01:17:30.855 --> 01:17:31.255
<v Speaker 0>Alright.

01:17:32.750 --> 01:17:34.990
<v Speaker 0>New switch.

01:17:35.790 --> 01:17:37.150
<v Speaker 0>Telegram trigger.

01:17:42.910 --> 01:17:44.270
<v Speaker 0>Same credentials,

01:17:44.350 --> 01:17:45.630
<v Speaker 0>same star

01:17:45.950 --> 01:17:47.855
<v Speaker 0>x. We need to save it. We need

01:17:47.855 --> 01:17:49.215
<v Speaker 1>to save it. Yep.

01:17:49.535 --> 01:17:51.375
<v Speaker 0>It's okay. Bot two.

01:17:53.135 --> 01:17:54.095
<v Speaker 0>Pop open.

01:17:55.055 --> 01:17:55.935
<v Speaker 0>Alright.

01:17:57.215 --> 01:17:58.655
<v Speaker 1>Let's send it something.

01:17:58.895 --> 01:17:59.375
<v Speaker 1>Okay.

01:18:00.655 --> 01:18:02.015
<v Speaker 0>Go away.

01:18:06.790 --> 01:18:07.669
<v Speaker 0>There we go.

01:18:08.389 --> 01:18:09.269
<v Speaker 1>Awesome.

01:18:10.550 --> 01:18:11.909
<v Speaker 0>So can I respond?

01:18:14.790 --> 01:18:17.750
<v Speaker 1>Yep. So now you have gotten a message.

01:18:19.554 --> 01:18:21.474
<v Speaker 1>What do you say about

01:18:22.275 --> 01:18:23.074
<v Speaker 1>building

01:18:24.275 --> 01:18:26.195
<v Speaker 1>maybe we build a bot

01:18:26.435 --> 01:18:29.554
<v Speaker 1>that we say, like, send it any message

01:18:29.554 --> 01:18:31.474
<v Speaker 1>and it replies with the name of a

01:18:31.554 --> 01:18:32.755
<v Speaker 1>or recipe of a cocktail

01:18:33.270 --> 01:18:35.269
<v Speaker 1>tying in from our previous

01:18:35.590 --> 01:18:37.829
<v Speaker 1>workflow that we were doing. So we can

01:18:37.829 --> 01:18:39.749
<v Speaker 1>add http request node.

01:18:42.710 --> 01:18:43.110
<v Speaker 1>Yep.

01:18:45.125 --> 01:18:46.005
<v Speaker 0>Okay.

01:18:46.005 --> 01:18:46.565
<v Speaker 0>So

01:18:48.565 --> 01:18:48.965
<v Speaker 0>and

01:18:52.565 --> 01:18:54.244
<v Speaker 0>execute.

01:18:54.725 --> 01:18:57.045
<v Speaker 0>Get some sample data for the nice expression

01:18:57.045 --> 01:18:59.640
<v Speaker 0>thingy. Perfect. So this is And then we

01:18:59.640 --> 01:19:00.920
<v Speaker 1>do here and

01:19:02.120 --> 01:19:04.360
<v Speaker 1>A telegram note to send it.

01:19:05.880 --> 01:19:08.040
<v Speaker 1>A telegram note at the end. Oh, a

01:19:08.040 --> 01:19:10.199
<v Speaker 0>telegram note at the end. Got it. Because

01:19:10.199 --> 01:19:11.480
<v Speaker 1>we need to reply with it.

01:19:14.565 --> 01:19:16.165
<v Speaker 1>So we can select the same

01:19:16.725 --> 01:19:17.685
<v Speaker 1>credentials.

01:19:18.005 --> 01:19:19.925
<v Speaker 1>Chat ID. So we need to use expressions

01:19:19.925 --> 01:19:20.645
<v Speaker 1>here.

01:19:20.885 --> 01:19:22.885
<v Speaker 1>We get the chat ID from the telegram

01:19:22.885 --> 01:19:23.605
<v Speaker 1>trigger node.

01:19:28.670 --> 01:19:30.030
<v Speaker 0>Message ID. Right?

01:19:30.830 --> 01:19:31.469
<v Speaker 1>Yes.

01:19:33.070 --> 01:19:33.950
<v Speaker 1>Oh.

01:19:33.950 --> 01:19:34.350
<v Speaker 1>No?

01:19:35.550 --> 01:19:37.630
<v Speaker 1>I'm not sure if it's message ID or

01:19:37.630 --> 01:19:38.750
<v Speaker 1>if it's chat ID.

01:19:41.955 --> 01:19:43.875
<v Speaker 0>Alright. Or you can just click on it.

01:19:43.875 --> 01:19:46.515
<v Speaker 0>Yeah. Okay. So Let's see what else it

01:19:46.515 --> 01:19:47.074
<v Speaker 1>says.

01:19:49.235 --> 01:19:49.874
<v Speaker 1>Chat ID.

01:19:50.195 --> 01:19:51.635
<v Speaker 1>Oh, yeah. Let's do that.

01:19:52.275 --> 01:19:53.315
<v Speaker 0>Alright. So

01:19:54.489 --> 01:19:55.929
<v Speaker 0>You can delete it.

01:19:59.610 --> 01:20:00.729
<v Speaker 0>I don't know how.

01:20:01.850 --> 01:20:04.090
<v Speaker 1>Oh, if you go on the yeah. If

01:20:04.090 --> 01:20:06.090
<v Speaker 1>you click there and just use backspace,

01:20:08.185 --> 01:20:10.025
<v Speaker 1>Yeah. You can delete the expression.

01:20:10.905 --> 01:20:11.705
<v Speaker 0>Okay.

01:20:11.705 --> 01:20:12.184
<v Speaker 0>Cool.

01:20:13.304 --> 01:20:13.864
<v Speaker 0>Okay.

01:20:14.824 --> 01:20:16.905
<v Speaker 0>So we need another expression to filter out

01:20:16.905 --> 01:20:19.065
<v Speaker 0>the recipe from the HTTP.

01:20:21.000 --> 01:20:22.199
<v Speaker 0>Yes. So

01:20:22.360 --> 01:20:24.760
<v Speaker 0>can

01:20:27.480 --> 01:20:29.240
<v Speaker 0>I can I filter? Yeah.

01:20:32.685 --> 01:20:34.525
<v Speaker 0>Let's have a look at this data.

01:20:36.845 --> 01:20:38.205
<v Speaker 0>Do some formatter.

01:20:41.085 --> 01:20:43.325
<v Speaker 1>And if you open the HTTP request node,

01:20:43.325 --> 01:20:45.005
<v Speaker 1>it also shows it formatted

01:20:45.805 --> 01:20:48.540
<v Speaker 1>under the JSON if you close this. Oh,

01:20:48.540 --> 01:20:50.380
<v Speaker 0>yeah. Of course it did. That's right. Okay.

01:20:50.380 --> 01:20:51.820
<v Speaker 0>Look at that. It. Yeah. That's it. If

01:20:51.820 --> 01:20:54.060
<v Speaker 0>we use another tool. So JSON.

01:20:55.340 --> 01:20:56.620
<v Speaker 0>Oh, instructions.

01:20:56.620 --> 01:20:58.300
<v Speaker 0>Okay. So we want instructions.

01:20:58.300 --> 01:20:58.700
<v Speaker 1>Instructions.

01:21:00.555 --> 01:21:02.875
<v Speaker 0>So we click here filter

01:21:03.515 --> 01:21:05.035
<v Speaker 0>and I wish I had noticed that filter

01:21:05.035 --> 01:21:06.555
<v Speaker 0>earlier. That's quite handy.

01:21:10.715 --> 01:21:11.595
<v Speaker 0>And instructions.

01:21:16.910 --> 01:21:17.710
<v Speaker 0>Done.

01:21:18.270 --> 01:21:21.630
<v Speaker 0>Alright. Cool. Let's do a execute workflow then.

01:21:27.150 --> 01:21:28.830
<v Speaker 1>And with the telegram app.

01:21:29.235 --> 01:21:32.035
<v Speaker 0>Wrong window. My computer is failing.

01:21:34.275 --> 01:21:35.074
<v Speaker 0>You're

01:21:35.155 --> 01:21:38.515
<v Speaker 0>okay, MacBook. You'll be fine. Okay. So hi.

01:21:38.835 --> 01:21:40.515
<v Speaker 0>Send me a cocktail.

01:21:46.890 --> 01:21:49.050
<v Speaker 1>So what does it say? It said shaken

01:21:49.050 --> 01:21:50.810
<v Speaker 0>not stirred. It did respond

01:21:51.290 --> 01:21:54.330
<v Speaker 0>not with the instructions I thought. So the

01:21:54.330 --> 01:21:57.290
<v Speaker 0>instructions must be depending on the cocktail you

01:21:57.290 --> 01:21:59.225
<v Speaker 0>get. Let's do it again. I bet we

01:21:59.225 --> 01:22:01.385
<v Speaker 0>get something. Okay. Another please.

01:22:01.705 --> 01:22:03.945
<v Speaker 0>We probably wanna send back the ingredients and

01:22:03.945 --> 01:22:06.185
<v Speaker 0>the instructions for it to actually make sense.

01:22:06.985 --> 01:22:09.225
<v Speaker 1>But you need to, yeah. We need to,

01:22:09.705 --> 01:22:10.505
<v Speaker 1>yeah. Execute.

01:22:11.410 --> 01:22:12.449
<v Speaker 0>Okay.

01:22:12.930 --> 01:22:14.610
<v Speaker 0>Oh, there we go. Cool. Got it. So

01:22:14.610 --> 01:22:16.290
<v Speaker 0>pour ice cream vodka and bourbon in a

01:22:16.290 --> 01:22:19.090
<v Speaker 0>glass. Nice. That's pretty sweet. I like that.

01:22:20.290 --> 01:22:21.010
<v Speaker 0>Awesome.

01:22:22.130 --> 01:22:23.170
<v Speaker 0>Very cool.

01:22:24.130 --> 01:22:25.409
<v Speaker 0>That is no

01:22:25.730 --> 01:22:26.530
<v Speaker 0>effort whatsoever.

01:22:28.085 --> 01:22:30.965
<v Speaker 1>Yeah. Yeah. What I did a few days

01:22:30.965 --> 01:22:32.005
<v Speaker 1>ago was

01:22:32.245 --> 01:22:34.325
<v Speaker 1>like, one of our community members actually inspired

01:22:34.325 --> 01:22:36.565
<v Speaker 1>me to do that was she built a

01:22:36.565 --> 01:22:37.605
<v Speaker 1>Telegram bot,

01:22:38.165 --> 01:22:40.245
<v Speaker 1>and you'd send it a image of a

01:22:40.245 --> 01:22:40.565
<v Speaker 1>receipt.

01:22:41.680 --> 01:22:44.239
<v Speaker 1>Then it uses a service called Mindi.

01:22:44.800 --> 01:22:47.040
<v Speaker 1>It sends the image to that that passes

01:22:47.040 --> 01:22:48.560
<v Speaker 1>the data out of the receipt,

01:22:49.600 --> 01:22:51.600
<v Speaker 1>adds it to Google Sheets, and also sends

01:22:51.600 --> 01:22:54.495
<v Speaker 1>a confirmation, like, oh, receipt from Leader or

01:22:54.495 --> 01:22:57.614
<v Speaker 1>whatever supermarket have you of this much amount

01:22:57.614 --> 01:22:59.854
<v Speaker 1>has been passed and added. Awesome.

01:23:02.335 --> 01:23:03.135
<v Speaker 0>Okay.

01:23:05.534 --> 01:23:08.280
<v Speaker 0>I'm impressed. I think n8n is a really

01:23:08.280 --> 01:23:09.880
<v Speaker 0>cool tool and I can already

01:23:11.159 --> 01:23:13.079
<v Speaker 0>think of stuff I wanna do with this.

01:23:14.360 --> 01:23:15.159
<v Speaker 0>Let me

01:23:16.600 --> 01:23:18.360
<v Speaker 0>Is there anything else you wanna show before

01:23:18.360 --> 01:23:19.800
<v Speaker 0>we finish up? Like

01:23:22.175 --> 01:23:24.255
<v Speaker 1>Nothing comes to mind. Okay. Is there anything

01:23:24.255 --> 01:23:25.215
<v Speaker 1>you'd like to see?

01:23:25.614 --> 01:23:26.735
<v Speaker 0>There's

01:23:26.735 --> 01:23:29.375
<v Speaker 0>loads, but you know, we are heading about

01:23:29.375 --> 01:23:30.574
<v Speaker 0>an hour and a half now. I think

01:23:30.574 --> 01:23:31.855
<v Speaker 0>what we're gonna have to do is we're

01:23:31.855 --> 01:23:34.300
<v Speaker 0>gonna have to continue this again. Like there's

01:23:34.300 --> 01:23:36.219
<v Speaker 0>so many different things I wanna play with.

01:23:36.219 --> 01:23:38.300
<v Speaker 0>I think what would be really cool though

01:23:38.300 --> 01:23:39.179
<v Speaker 0>is if I

01:23:39.500 --> 01:23:40.699
<v Speaker 0>start to put a few of these workflows

01:23:40.699 --> 01:23:43.260
<v Speaker 0>together for myself and for my team

01:23:43.660 --> 01:23:45.020
<v Speaker 0>and then identify

01:23:45.020 --> 01:23:45.900
<v Speaker 0>a

01:23:46.219 --> 01:23:48.300
<v Speaker 0>plugin they know the trigger that we need

01:23:48.435 --> 01:23:51.235
<v Speaker 0>to actually do something real and then reach

01:23:51.235 --> 01:23:52.515
<v Speaker 0>out to you and I say, why don't

01:23:52.515 --> 01:23:54.115
<v Speaker 0>we do that together? Like you can walk

01:23:54.115 --> 01:23:56.195
<v Speaker 0>me through the process of actually contributing my

01:23:56.195 --> 01:23:58.595
<v Speaker 0>own node to n8n and hopefully by then

01:23:58.595 --> 01:24:00.835
<v Speaker 0>I'll have actual workflows doing real production stuff

01:24:00.835 --> 01:24:02.835
<v Speaker 0>that we can kinda, you know, off talk

01:24:02.835 --> 01:24:03.875
<v Speaker 0>about and take it from there.

01:24:04.620 --> 01:24:05.980
<v Speaker 0>That sounds good to you? Sounds like a

01:24:05.980 --> 01:24:08.620
<v Speaker 1>plan. Yeah, perfect. Awesome.

01:24:08.620 --> 01:24:09.260
<v Speaker 0>That

01:24:09.500 --> 01:24:11.340
<v Speaker 0>was really cool. Thank you, Danny. I really

01:24:11.340 --> 01:24:13.580
<v Speaker 0>enjoyed even you know, even when things went

01:24:13.580 --> 01:24:16.060
<v Speaker 0>a little bit weird and wonderful there like

01:24:16.060 --> 01:24:18.795
<v Speaker 0>just I feel like I completely understand the

01:24:18.795 --> 01:24:20.475
<v Speaker 0>data model a little bit more and all

01:24:20.475 --> 01:24:22.475
<v Speaker 0>that. I'm looking forward to it. Thank you

01:24:22.475 --> 01:24:23.835
<v Speaker 0>for joining me today. I hope you have

01:24:23.835 --> 01:24:25.275
<v Speaker 0>a really good day and I hope this

01:24:25.275 --> 01:24:26.715
<v Speaker 0>was useful to the people watching too.

01:24:28.520 --> 01:24:30.199
<v Speaker 0>Alright. Thank you for having me. I'll speak

01:24:30.199 --> 01:24:31.480
<v Speaker 0>to you soon. Thank you again. Bye.
