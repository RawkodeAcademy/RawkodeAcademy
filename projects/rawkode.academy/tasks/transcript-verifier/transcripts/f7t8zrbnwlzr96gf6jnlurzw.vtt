WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: bd8b2451-218b-423e-9626-19d8a26b5c4b
Created: 2025-04-29T22:45:59.517Z
Duration: 5295.027
Channels: 1

00:02:19.844 --> 00:02:20.645
<v Speaker 0>Hey,

00:02:20.724 --> 00:02:21.285
<v Speaker 0>everyone.

00:02:23.844 --> 00:02:26.165
<v Speaker 0>I'm just gonna wait here a minute.

00:02:29.340 --> 00:02:30.940
<v Speaker 0>Confirm that I can hear myself.

00:02:40.485 --> 00:02:43.045
<v Speaker 0>And I see that YouTube has put my

00:02:43.045 --> 00:02:44.725
<v Speaker 0>logo over my face.

00:02:54.645 --> 00:02:56.005
<v Speaker 0>How do I remove that?

00:02:57.820 --> 00:02:59.340
<v Speaker 0>I confirmed I can hear myself. I don't

00:02:59.340 --> 00:03:00.780
<v Speaker 0>need the headphones anymore.

00:03:02.380 --> 00:03:04.780
<v Speaker 0>So

00:03:06.860 --> 00:03:09.500
<v Speaker 0>I think we do this in channels settings.

00:03:12.675 --> 00:03:14.755
<v Speaker 0>I'm sure this is very exciting.

00:03:21.715 --> 00:03:22.995
<v Speaker 0>My channel,

00:03:23.715 --> 00:03:24.675
<v Speaker 0>customize.

00:03:26.520 --> 00:03:27.800
<v Speaker 0>Let's remove.

00:03:32.920 --> 00:03:34.040
<v Speaker 0>We'll get there.

00:03:34.840 --> 00:03:36.280
<v Speaker 0>In fact, you know what's gonna be a

00:03:36.280 --> 00:03:36.840
<v Speaker 0>lot easier?

00:03:38.875 --> 00:03:42.795
<v Speaker 0>We're going to just hide you and move

00:03:42.795 --> 00:03:44.075
<v Speaker 0>me over here.

00:03:46.955 --> 00:03:48.235
<v Speaker 0>Perfect. Okay.

00:03:50.394 --> 00:03:52.075
<v Speaker 0>So let's see, where

00:03:52.235 --> 00:03:52.955
<v Speaker 0>are we?

00:03:54.780 --> 00:03:56.940
<v Speaker 0>So I did a couple of things upfront.

00:03:57.340 --> 00:03:59.740
<v Speaker 0>So today we're gonna use this tool I've

00:03:59.740 --> 00:04:01.740
<v Speaker 0>been working on called get series to

00:04:02.700 --> 00:04:05.340
<v Speaker 0>analyze the commit history of a couple of

00:04:05.340 --> 00:04:07.900
<v Speaker 0>open source projects. Today, we are going to

00:04:07.900 --> 00:04:10.515
<v Speaker 0>take a look at SwarmKit,

00:04:11.475 --> 00:04:12.355
<v Speaker 0>Moby,

00:04:13.075 --> 00:04:14.435
<v Speaker 0>and Kubernetes.

00:04:17.714 --> 00:04:19.075
<v Speaker 0>Now because

00:04:19.075 --> 00:04:21.235
<v Speaker 0>some of these repositories are slightly large, I

00:04:21.235 --> 00:04:23.635
<v Speaker 0>thought I would just run git CDs upfront

00:04:24.930 --> 00:04:26.770
<v Speaker 0>so that it was not something that we

00:04:26.770 --> 00:04:28.290
<v Speaker 0>had to set and wait on. Although we

00:04:28.290 --> 00:04:30.210
<v Speaker 0>are still gonna do the import live which

00:04:30.210 --> 00:04:31.890
<v Speaker 0>I'm hoping won't be too bad.

00:04:32.690 --> 00:04:33.650
<v Speaker 0>Now just

00:04:33.890 --> 00:04:35.010
<v Speaker 0>so that everyone is

00:04:35.490 --> 00:04:38.235
<v Speaker 0>everyone knows how long this took. The swan

00:04:38.235 --> 00:04:39.435
<v Speaker 0>count was the smallest.

00:04:39.595 --> 00:04:42.074
<v Speaker 0>That took fifty seconds to run get series.

00:04:42.074 --> 00:04:43.835
<v Speaker 0>We can see the command here. So it's

00:04:43.835 --> 00:04:45.835
<v Speaker 0>just get series analyze and all I'm gonna

00:04:45.835 --> 00:04:46.555
<v Speaker 0>do is

00:04:47.514 --> 00:04:50.074
<v Speaker 0>it's just output or redirect all that output

00:04:50.074 --> 00:04:50.794
<v Speaker 0>into file.

00:04:51.470 --> 00:04:52.990
<v Speaker 0>I do that with SOU then you'll see

00:04:52.990 --> 00:04:55.470
<v Speaker 0>what actually gets emitted by get series.

00:04:56.110 --> 00:04:58.670
<v Speaker 0>And this is InfluxDB line protocol.

00:04:59.150 --> 00:05:00.910
<v Speaker 0>We can just see measurements at the start,

00:05:00.910 --> 00:05:03.390
<v Speaker 0>there's some tag information context that we're applying

00:05:03.390 --> 00:05:04.430
<v Speaker 0>to the time series

00:05:05.125 --> 00:05:06.725
<v Speaker 0>and then we have some field values on

00:05:06.725 --> 00:05:08.485
<v Speaker 0>the end. And we'll take into this as

00:05:08.485 --> 00:05:10.965
<v Speaker 0>we get into the dashboarding and graphing

00:05:11.125 --> 00:05:12.005
<v Speaker 0>segments.

00:05:12.805 --> 00:05:16.405
<v Speaker 0>Moby itself took nearly three minutes. So a

00:05:16.405 --> 00:05:18.325
<v Speaker 0>little bit larger than swarm cut but not

00:05:18.325 --> 00:05:21.490
<v Speaker 0>too bad actually. I believe Mobi has around

00:05:21.490 --> 00:05:22.290
<v Speaker 0>40,000

00:05:22.290 --> 00:05:24.290
<v Speaker 0>commits and we managed to process all of

00:05:24.290 --> 00:05:26.770
<v Speaker 0>that including every delta

00:05:26.850 --> 00:05:28.370
<v Speaker 0>in the GET repository

00:05:28.770 --> 00:05:30.210
<v Speaker 0>in under three minutes.

00:05:30.930 --> 00:05:32.770
<v Speaker 0>Now Kubernetes was obviously the one I had

00:05:32.770 --> 00:05:34.850
<v Speaker 0>a little bit of

00:05:34.105 --> 00:05:35.225
<v Speaker 0>concern over.

00:05:35.465 --> 00:05:38.345
<v Speaker 0>Now it doesn't have that many commits either.

00:05:38.505 --> 00:05:39.545
<v Speaker 0>There are

00:05:39.785 --> 00:05:40.905
<v Speaker 0>90,000

00:05:40.905 --> 00:05:42.585
<v Speaker 0>give or take I believe.

00:05:43.705 --> 00:05:45.785
<v Speaker 0>But it does take substantially longer.

00:05:46.320 --> 00:05:48.480
<v Speaker 0>So it took thirteen minutes and nine seconds

00:05:48.480 --> 00:05:50.720
<v Speaker 0>to generate the lame protocol

00:05:50.720 --> 00:05:52.560
<v Speaker 0>for the Kubernetes

00:05:53.760 --> 00:05:55.920
<v Speaker 0>repository. Right. And I think the reason for

00:05:55.920 --> 00:05:58.240
<v Speaker 0>that is probably just a lot of larger

00:05:58.240 --> 00:06:00.320
<v Speaker 0>commits. We'll see that in the graphs as

00:06:00.320 --> 00:06:03.755
<v Speaker 0>well. It's

00:06:03.755 --> 00:06:05.515
<v Speaker 0>hard to tell. We don't wanna get to

00:06:05.515 --> 00:06:06.235
<v Speaker 0>the graphs.

00:06:07.115 --> 00:06:09.355
<v Speaker 0>So what I wanna do next is import

00:06:09.355 --> 00:06:10.955
<v Speaker 0>all of this into InfluxDB.

00:06:11.275 --> 00:06:14.875
<v Speaker 0>So what I've done locally

00:06:14.160 --> 00:06:16.720
<v Speaker 0>is I have compiled InfluxDB

00:06:16.720 --> 00:06:18.720
<v Speaker 0>on the master branch because

00:06:19.280 --> 00:06:21.760
<v Speaker 0>just last week there were a lot of

00:06:21.760 --> 00:06:23.440
<v Speaker 0>performance improvements

00:06:23.600 --> 00:06:25.760
<v Speaker 0>as particularly around flux

00:06:26.160 --> 00:06:28.720
<v Speaker 0>that will hopefully make our queries across

00:06:29.255 --> 00:06:30.695
<v Speaker 0>larger timeframes

00:06:30.775 --> 00:06:32.615
<v Speaker 0>faster. So we're not watching it spend for

00:06:32.615 --> 00:06:33.335
<v Speaker 0>too long.

00:06:34.535 --> 00:06:37.014
<v Speaker 0>And of course, because I'm compelling against master,

00:06:37.014 --> 00:06:38.935
<v Speaker 0>do have a little bit of concerns that

00:06:38.935 --> 00:06:40.294
<v Speaker 0>I may break InfluxDB.

00:06:42.110 --> 00:06:43.790
<v Speaker 0>So I have a backup plan if that

00:06:43.790 --> 00:06:44.350
<v Speaker 0>happens.

00:06:44.750 --> 00:06:46.350
<v Speaker 0>I do have a make fail here with

00:06:46.350 --> 00:06:48.910
<v Speaker 0>a couple of just common steps. So if

00:06:48.910 --> 00:06:51.310
<v Speaker 0>we need to, we are going to run

00:06:51.310 --> 00:06:52.670
<v Speaker 0>the latest beta,

00:06:53.150 --> 00:06:56.475
<v Speaker 0>the beta release docker image or container image,

00:06:57.835 --> 00:06:59.275
<v Speaker 0>which hopefully is a little bit more stable

00:06:59.275 --> 00:07:01.115
<v Speaker 0>than comparing off the master branch.

00:07:01.595 --> 00:07:03.595
<v Speaker 0>We have a setup command here which just

00:07:03.595 --> 00:07:05.355
<v Speaker 0>allows me to kind of, you know, set

00:07:05.355 --> 00:07:06.715
<v Speaker 0>the token that I want to use up

00:07:06.715 --> 00:07:08.155
<v Speaker 0>front rather than having to go into the

00:07:08.155 --> 00:07:09.995
<v Speaker 0>UI and copy and paste that around,

00:07:10.235 --> 00:07:11.550
<v Speaker 0>which means that hopefully I won't have to

00:07:11.550 --> 00:07:13.389
<v Speaker 0>modify this telegraph config.

00:07:13.949 --> 00:07:16.270
<v Speaker 0>This telegraph config is just gonna scan for

00:07:16.270 --> 00:07:18.910
<v Speaker 0>all the line protocol fails inside this directory,

00:07:18.990 --> 00:07:20.669
<v Speaker 0>which there are none yet, but we're going

00:07:20.669 --> 00:07:23.514
<v Speaker 0>to add them in. It's just saying look,

00:07:23.514 --> 00:07:25.914
<v Speaker 0>this is lane lane protocol or Influx format

00:07:25.914 --> 00:07:28.074
<v Speaker 0>and we're gonna throw that into our InfluxDB

00:07:28.074 --> 00:07:30.555
<v Speaker 0>locally. So that's my next step. Let's get

00:07:30.555 --> 00:07:31.595
<v Speaker 0>this data loaded.

00:07:31.835 --> 00:07:33.595
<v Speaker 0>I will start with SwarmKit. Should be nice

00:07:33.595 --> 00:07:35.754
<v Speaker 0>and fast. We will then pull in Mobi

00:07:36.289 --> 00:07:38.530
<v Speaker 0>and then we will maybe just leave Kubernetes

00:07:38.530 --> 00:07:41.730
<v Speaker 0>running as we start to look at the

00:07:41.970 --> 00:07:44.370
<v Speaker 0>the Mobi and swarm kit graphs.

00:07:45.569 --> 00:07:46.530
<v Speaker 0>But we'll see.

00:07:46.849 --> 00:07:47.810
<v Speaker 0>Now the biggest

00:07:49.105 --> 00:07:51.665
<v Speaker 0>time sync when we import the line protocol

00:07:51.665 --> 00:07:54.545
<v Speaker 0>really just comes down to how many entries

00:07:54.545 --> 00:07:56.305
<v Speaker 0>we need to write to the server.

00:07:56.545 --> 00:07:58.065
<v Speaker 0>And right now I've not checked so we're

00:07:58.065 --> 00:07:59.185
<v Speaker 0>gonna do that first.

00:07:59.585 --> 00:08:00.945
<v Speaker 0>So I'm just working out of a temporary

00:08:00.945 --> 00:08:03.345
<v Speaker 0>directory just now. What I wanna do is

00:08:03.345 --> 00:08:04.305
<v Speaker 0>copy

00:08:05.770 --> 00:08:07.850
<v Speaker 0>my line protocol files.

00:08:07.850 --> 00:08:10.010
<v Speaker 0>So we're gonna grab docker.

00:08:12.090 --> 00:08:13.610
<v Speaker 0>Oh, that's git lab.

00:08:16.090 --> 00:08:16.970
<v Speaker 0>Docker

00:08:16.970 --> 00:08:18.090
<v Speaker 0>swarm kit

00:08:19.444 --> 00:08:20.725
<v Speaker 0>swarm LP.

00:08:21.125 --> 00:08:22.485
<v Speaker 0>We'll stick that here.

00:08:23.125 --> 00:08:25.125
<v Speaker 0>Next we're gonna grab Mobi,

00:08:27.365 --> 00:08:29.365
<v Speaker 0>Mobi, Mobi LP

00:08:30.405 --> 00:08:31.685
<v Speaker 0>and lastly

00:08:31.764 --> 00:08:33.605
<v Speaker 0>we will grab Kubernetes.

00:08:35.580 --> 00:08:37.580
<v Speaker 0>If anyone does have questions along the way

00:08:37.580 --> 00:08:39.660
<v Speaker 0>I do have the chat open so you

00:08:39.660 --> 00:08:41.020
<v Speaker 0>know drop them in.

00:08:41.660 --> 00:08:44.220
<v Speaker 0>I think there's around a forty second delay

00:08:44.220 --> 00:08:45.820
<v Speaker 0>so just be patient with me if I

00:08:45.820 --> 00:08:47.900
<v Speaker 0>don't see it right away. Woah.

00:08:52.345 --> 00:08:54.105
<v Speaker 0>My temporary disk.

00:08:55.385 --> 00:08:57.145
<v Speaker 0>There's a problem I didn't think I'd hit

00:08:57.145 --> 00:09:00.505
<v Speaker 0>right away. Okay. Let's untemp this.

00:09:02.105 --> 00:09:05.339
<v Speaker 0>So let's just jump in to get lab

00:09:05.339 --> 00:09:08.060
<v Speaker 0>and we'll make a get lost directory.

00:09:08.860 --> 00:09:12.220
<v Speaker 0>I'm going to move everything from this temp.

00:09:14.379 --> 00:09:15.660
<v Speaker 0>Oh, that's home.

00:09:16.940 --> 00:09:18.060
<v Speaker 0>So

00:09:18.445 --> 00:09:19.885
<v Speaker 0>I like to work out of a temporary

00:09:19.885 --> 00:09:21.805
<v Speaker 0>tree pretty much all the time.

00:09:23.165 --> 00:09:26.045
<v Speaker 0>I don't know why. It just because I

00:09:26.045 --> 00:09:28.365
<v Speaker 0>have a few Z shell plugins

00:09:29.325 --> 00:09:32.045
<v Speaker 0>and those plugins give me pair directory history.

00:09:32.045 --> 00:09:33.430
<v Speaker 0>So when I do things like this and

00:09:33.430 --> 00:09:35.670
<v Speaker 0>I don't really necessarily want that history jumping

00:09:35.670 --> 00:09:38.390
<v Speaker 0>around or just filling up a folder. I

00:09:38.390 --> 00:09:40.950
<v Speaker 0>always had to jump into temp. It's just

00:09:41.670 --> 00:09:42.470
<v Speaker 0>habit.

00:09:42.950 --> 00:09:45.510
<v Speaker 0>Okay. So let's close code,

00:09:45.510 --> 00:09:47.190
<v Speaker 0>spin that back up

00:09:48.625 --> 00:09:51.105
<v Speaker 0>and we were copying.

00:09:55.345 --> 00:09:57.024
<v Speaker 0>Let me just mute myself because I can

00:09:57.024 --> 00:09:59.665
<v Speaker 0>actually hear myself come through that. We were

00:09:59.665 --> 00:10:00.385
<v Speaker 0>copying

00:10:00.625 --> 00:10:03.584
<v Speaker 0>the Kubernetes

00:10:02.550 --> 00:10:03.910
<v Speaker 0>line protocol.

00:10:07.270 --> 00:10:08.550
<v Speaker 0>Nice. Okay.

00:10:09.990 --> 00:10:12.470
<v Speaker 0>So I still need my local

00:10:12.470 --> 00:10:13.350
<v Speaker 0>InfluxDB

00:10:13.350 --> 00:10:15.430
<v Speaker 0>directory, that's where I'm gonna run it from.

00:10:17.074 --> 00:10:19.394
<v Speaker 0>The copy is not fast.

00:10:20.194 --> 00:10:22.274
<v Speaker 0>Oh, I do realize that my face is

00:10:22.274 --> 00:10:22.915
<v Speaker 0>now

00:10:24.435 --> 00:10:26.754
<v Speaker 0>covered up all the commands. Let's show me

00:10:26.754 --> 00:10:28.595
<v Speaker 0>that over. I'll

00:10:28.595 --> 00:10:30.640
<v Speaker 0>just keep moving him around. That doesn't need

00:10:30.640 --> 00:10:31.680
<v Speaker 0>to look professional.

00:10:32.320 --> 00:10:32.960
<v Speaker 0>Okay.

00:10:39.280 --> 00:10:42.240
<v Speaker 0>Well, thirty seconds to copy that lane protocol.

00:10:42.880 --> 00:10:44.800
<v Speaker 0>Alright. So we have

00:10:45.315 --> 00:10:46.195
<v Speaker 0>13

00:10:46.195 --> 00:10:47.155
<v Speaker 0>gig.

00:10:47.475 --> 00:10:48.355
<v Speaker 0>Ouch.

00:10:50.595 --> 00:10:51.635
<v Speaker 0>Okay.

00:10:51.635 --> 00:10:52.995
<v Speaker 0>So swarm kit,

00:10:53.155 --> 00:10:54.115
<v Speaker 0>we have

00:10:54.355 --> 00:10:57.315
<v Speaker 0>what is that? 2,300,000

00:10:57.315 --> 00:10:59.430
<v Speaker 0>lines of lane protocol.

00:11:00.310 --> 00:11:02.949
<v Speaker 0>Moby, we are sitting at

00:11:04.389 --> 00:11:05.829
<v Speaker 0>8,000,000 lines.

00:11:07.110 --> 00:11:08.709
<v Speaker 0>And the scary one.

00:11:21.405 --> 00:11:21.805
<v Speaker 0>Damn.

00:11:23.990 --> 00:11:25.110
<v Speaker 0>43,000,000

00:11:25.110 --> 00:11:26.870
<v Speaker 0>lines of line protocol.

00:11:28.310 --> 00:11:29.990
<v Speaker 0>Risky.

00:11:29.990 --> 00:11:30.709
<v Speaker 0>Alright.

00:11:31.190 --> 00:11:34.149
<v Speaker 0>What we're gonna do is run InfluxDB.

00:11:38.605 --> 00:11:41.485
<v Speaker 0>No. Let's just browse to this.

00:11:52.269 --> 00:11:54.270
<v Speaker 0>I

00:11:55.950 --> 00:11:58.430
<v Speaker 0>will need to tell the assets directory.

00:12:00.510 --> 00:12:02.670
<v Speaker 0>Maybe I'll just run it through pod man.

00:12:02.829 --> 00:12:03.630
<v Speaker 0>Let's

00:12:04.269 --> 00:12:05.470
<v Speaker 0>see if I can remember how to do

00:12:05.470 --> 00:12:07.065
<v Speaker 0>this. UI

00:12:07.705 --> 00:12:08.505
<v Speaker 0>access.

00:12:13.625 --> 00:12:15.785
<v Speaker 0>Alright. We're jumping into the backup plan or

00:12:15.785 --> 00:12:17.945
<v Speaker 0>the InfluxDB with Podman. Okay.

00:12:24.450 --> 00:12:26.370
<v Speaker 0>There we go. Alright. So what we're gonna

00:12:26.370 --> 00:12:28.530
<v Speaker 0>see here is to get started screen.

00:12:28.850 --> 00:12:31.570
<v Speaker 0>Wants us to create a user authentication cannot

00:12:31.570 --> 00:12:33.570
<v Speaker 0>be disabled within FluxDB two.

00:12:34.205 --> 00:12:36.365
<v Speaker 0>No. I do not want to set that

00:12:36.365 --> 00:12:37.725
<v Speaker 0>up there because

00:12:38.125 --> 00:12:40.045
<v Speaker 0>I wanna specify my own token, I don't

00:12:40.045 --> 00:12:42.125
<v Speaker 0>need to change my telegraph config.

00:12:43.005 --> 00:12:45.085
<v Speaker 0>So what that means is if I jump

00:12:45.085 --> 00:12:47.245
<v Speaker 0>over here and just hit refresh on this,

00:12:48.560 --> 00:12:49.840
<v Speaker 0>Then I should be able to log in

00:12:49.840 --> 00:12:52.640
<v Speaker 0>with user and password one, two, three.

00:12:54.000 --> 00:12:55.920
<v Speaker 0>And this is the clean slate. We have

00:12:56.080 --> 00:12:57.840
<v Speaker 0>no data, no dashboards.

00:12:58.640 --> 00:13:00.240
<v Speaker 0>It's just some internal stuff here. We do

00:13:00.240 --> 00:13:01.840
<v Speaker 0>have a bucket that is created in the

00:13:01.840 --> 00:13:02.640
<v Speaker 0>setup command.

00:13:05.305 --> 00:13:07.385
<v Speaker 0>Let's get some data first. So

00:13:08.025 --> 00:13:09.705
<v Speaker 0>we are going to

00:13:11.305 --> 00:13:13.305
<v Speaker 0>pop open this telegraph config.

00:13:13.305 --> 00:13:14.985
<v Speaker 0>We are gonna grab

00:13:15.225 --> 00:13:16.105
<v Speaker 0>mobi

00:13:16.990 --> 00:13:18.510
<v Speaker 0>and swarm kit,

00:13:19.230 --> 00:13:21.310
<v Speaker 0>enter the lame protocol directory

00:13:21.870 --> 00:13:24.430
<v Speaker 0>and I'm going to run telegraph.

00:13:27.790 --> 00:13:28.509
<v Speaker 0>Config

00:13:29.535 --> 00:13:30.975
<v Speaker 0>telegraph.com.

00:13:35.935 --> 00:13:38.175
<v Speaker 0>We wanna run that with debug.

00:13:38.975 --> 00:13:40.254
<v Speaker 0>Okay. Just kill it.

00:13:45.199 --> 00:13:46.959
<v Speaker 0>So that we know when it's finished.

00:13:47.279 --> 00:13:49.199
<v Speaker 0>So it's gonna give me information on well,

00:13:49.199 --> 00:13:51.360
<v Speaker 0>first of all, which files are important. Good.

00:13:51.360 --> 00:13:53.199
<v Speaker 0>It's just mobi and swarm kit. We can

00:13:53.199 --> 00:13:54.959
<v Speaker 0>see the buffer filling up as they're starting

00:13:54.959 --> 00:13:56.925
<v Speaker 0>to process those files. I have a very

00:13:56.925 --> 00:13:59.245
<v Speaker 0>short flush interval on this. Hopefully just keep

00:13:59.245 --> 00:14:00.045
<v Speaker 0>it fast.

00:14:05.405 --> 00:14:07.085
<v Speaker 0>What we wanna kind of see now is

00:14:07.085 --> 00:14:09.965
<v Speaker 0>just hopefully the buffer will stop filling and

00:14:09.965 --> 00:14:11.085
<v Speaker 0>start actually emptying.

00:14:11.410 --> 00:14:12.850
<v Speaker 0>But we know we have a substantial set

00:14:12.850 --> 00:14:14.610
<v Speaker 0>of metrics here. So let's leave that running

00:14:14.610 --> 00:14:15.730
<v Speaker 0>for just now.

00:14:16.130 --> 00:14:17.650
<v Speaker 0>What we do want to do

00:14:18.770 --> 00:14:21.330
<v Speaker 0>is import some dashboards. Now I've tried to

00:14:21.330 --> 00:14:23.570
<v Speaker 0>make this as easy for other people to

00:14:23.570 --> 00:14:24.530
<v Speaker 0>use as well.

00:14:25.490 --> 00:14:26.770
<v Speaker 0>So on GET lab,

00:14:27.704 --> 00:14:30.024
<v Speaker 0>Rawkode slash get series example.

00:14:30.264 --> 00:14:32.345
<v Speaker 0>I have packaged up the dashboards that we're

00:14:32.345 --> 00:14:34.824
<v Speaker 0>gonna be using today. InfluxDB

00:14:34.824 --> 00:14:37.305
<v Speaker 0>two ships with a component called packager which

00:14:37.305 --> 00:14:39.545
<v Speaker 0>allows us to import these dashboards in a

00:14:39.545 --> 00:14:43.225
<v Speaker 0>very declarative and Kubernetes fashion. In fact, you'll

00:14:42.420 --> 00:14:45.060
<v Speaker 0>actually see that the spec for the manifest

00:14:45.060 --> 00:14:47.060
<v Speaker 0>is very much inspired by Kubernetes.

00:14:50.260 --> 00:14:52.420
<v Speaker 0>I have copied this file

00:14:52.899 --> 00:14:53.540
<v Speaker 0>here.

00:14:54.339 --> 00:14:56.019
<v Speaker 0>So now I want to import it. And

00:14:56.019 --> 00:14:58.420
<v Speaker 0>we did this with Influx

00:14:58.735 --> 00:14:59.695
<v Speaker 0>package

00:15:00.495 --> 00:15:01.295
<v Speaker 0>fail,

00:15:01.695 --> 00:15:03.295
<v Speaker 0>packager dot yaml.

00:15:03.775 --> 00:15:06.735
<v Speaker 0>I will just point it to the host.

00:15:07.535 --> 00:15:09.215
<v Speaker 0>I believe this is the default,

00:15:09.295 --> 00:15:10.655
<v Speaker 0>never hurts to be explicit.

00:15:12.390 --> 00:15:15.110
<v Speaker 0>And we're going to say yes, create those

00:15:15.110 --> 00:15:15.910
<v Speaker 0>resources

00:15:15.990 --> 00:15:17.430
<v Speaker 0>and hopefully

00:15:20.790 --> 00:15:23.030
<v Speaker 0>we have four dashboards available.

00:15:23.830 --> 00:15:25.110
<v Speaker 0>Now if I click on this, it should

00:15:25.110 --> 00:15:27.030
<v Speaker 0>just break

00:15:26.084 --> 00:15:27.685
<v Speaker 0>At least we're not gonna see any data

00:15:27.685 --> 00:15:28.725
<v Speaker 0>just yet.

00:15:30.964 --> 00:15:33.204
<v Speaker 0>Especially because we haven't set on one hour.

00:15:33.845 --> 00:15:36.564
<v Speaker 0>Now the first commit on Docker would have

00:15:36.564 --> 00:15:38.950
<v Speaker 0>been what? Sometime in 2013,

00:15:38.950 --> 00:15:41.190
<v Speaker 0>'20 '14. So let's just

00:15:43.750 --> 00:15:45.510
<v Speaker 0>we have some data.

00:15:46.950 --> 00:15:49.110
<v Speaker 0>So we'll zoom out first. Let me

00:15:50.470 --> 00:15:53.110
<v Speaker 0>we don't wanna dive into obviously

00:15:52.755 --> 00:15:54.515
<v Speaker 0>looking at us on a daily basis over

00:15:54.515 --> 00:15:55.555
<v Speaker 0>a span of

00:15:55.955 --> 00:15:57.475
<v Speaker 0>seven and a half years.

00:15:59.155 --> 00:16:00.915
<v Speaker 0>Maybe not gonna be entirely useful at the

00:16:00.915 --> 00:16:01.555
<v Speaker 0>start.

00:16:02.835 --> 00:16:04.915
<v Speaker 0>And this is still loading data. We've currently

00:16:04.915 --> 00:16:07.315
<v Speaker 0>processed 20,000 commits. So we still got a

00:16:07.315 --> 00:16:08.115
<v Speaker 0>little way to go.

00:16:09.820 --> 00:16:11.180
<v Speaker 0>So let me explain

00:16:11.740 --> 00:16:13.740
<v Speaker 0>the setup. So we set the time period

00:16:13.740 --> 00:16:15.260
<v Speaker 0>here. I went back as far as I

00:16:15.260 --> 00:16:17.180
<v Speaker 0>feel I need to, which is roughly correct.

00:16:17.180 --> 00:16:19.339
<v Speaker 0>The first commit was April 2013.

00:16:21.660 --> 00:16:23.180
<v Speaker 0>We have a couple of variables that are

00:16:23.180 --> 00:16:24.460
<v Speaker 0>configured for us

00:16:25.095 --> 00:16:27.575
<v Speaker 0>and say of the package or template.

00:16:28.215 --> 00:16:31.095
<v Speaker 0>So we have this repository one which actually

00:16:31.095 --> 00:16:33.975
<v Speaker 0>executes a flux query on our get CD

00:16:33.975 --> 00:16:34.695
<v Speaker 0>bucket

00:16:35.175 --> 00:16:37.175
<v Speaker 0>and just pulls out all of the unique

00:16:37.175 --> 00:16:39.810
<v Speaker 0>repository tag values so that we can dig

00:16:39.810 --> 00:16:42.209
<v Speaker 0>into individual repositories without having to hard code

00:16:42.209 --> 00:16:42.930
<v Speaker 0>anything.

00:16:43.649 --> 00:16:44.770
<v Speaker 0>We also

00:16:44.930 --> 00:16:45.810
<v Speaker 0>allow

00:16:46.370 --> 00:16:48.930
<v Speaker 0>we also have that window filter. So by

00:16:48.930 --> 00:16:51.329
<v Speaker 0>default InfluxDB tries to calculate the window that

00:16:51.329 --> 00:16:54.285
<v Speaker 0>makes the most sense based on the density

00:16:54.285 --> 00:16:55.245
<v Speaker 0>of the data

00:16:55.725 --> 00:16:57.645
<v Speaker 0>within the time range that you specified on

00:16:57.645 --> 00:16:58.525
<v Speaker 0>the dashboard.

00:16:59.165 --> 00:17:00.765
<v Speaker 0>Now while I trust InfluxDB,

00:17:01.084 --> 00:17:02.685
<v Speaker 0>wanna get very specific in a way that

00:17:02.685 --> 00:17:04.285
<v Speaker 0>I'm gonna query this data. So I'm actually

00:17:04.285 --> 00:17:06.310
<v Speaker 0>just gonna specify a variable called my window

00:17:06.310 --> 00:17:08.390
<v Speaker 0>period where I can break things down to

00:17:08.390 --> 00:17:11.030
<v Speaker 0>dailies, monthlies, quarterlies, weeklies and yearlies. And we'll

00:17:11.030 --> 00:17:12.550
<v Speaker 0>kind of play with them as we take

00:17:12.550 --> 00:17:13.669
<v Speaker 0>the dashboards.

00:17:14.710 --> 00:17:16.869
<v Speaker 0>So we come back to the overview dashboards.

00:17:16.950 --> 00:17:19.510
<v Speaker 0>We're now at 42,000 commits. I think we're

00:17:19.510 --> 00:17:20.869
<v Speaker 0>a good chunk of the way through there.

00:17:23.375 --> 00:17:26.175
<v Speaker 0>We'll take a look at just one of

00:17:26.175 --> 00:17:28.015
<v Speaker 0>these queries to see how we consume those

00:17:28.015 --> 00:17:28.815
<v Speaker 0>variables.

00:17:29.535 --> 00:17:32.095
<v Speaker 0>Now because variables of InfluxDB two can only

00:17:32.095 --> 00:17:33.935
<v Speaker 0>be strings. One of the things I do

00:17:33.935 --> 00:17:35.470
<v Speaker 0>need to do when I assume this is

00:17:35.470 --> 00:17:38.669
<v Speaker 0>actually cast that string to a duration literal.

00:17:38.750 --> 00:17:40.350
<v Speaker 0>So you can just see my aggregate window

00:17:40.350 --> 00:17:43.309
<v Speaker 0>cast into a duration and performing an arbitrary

00:17:43.309 --> 00:17:45.629
<v Speaker 0>count of the commits over time.

00:17:47.549 --> 00:17:48.510
<v Speaker 0>Let's

00:17:48.685 --> 00:17:50.525
<v Speaker 0>pop over and

00:17:50.525 --> 00:17:52.765
<v Speaker 0>see where we are. We are complete. So

00:17:52.765 --> 00:17:54.605
<v Speaker 0>buffer fullness zero.

00:17:54.685 --> 00:17:56.365
<v Speaker 0>We imported all of those.

00:17:56.845 --> 00:17:59.245
<v Speaker 0>I didn't actually see when it finished but

00:17:59.245 --> 00:18:00.445
<v Speaker 0>we scroll up.

00:18:02.730 --> 00:18:03.850
<v Speaker 0>47.

00:18:03.850 --> 00:18:06.410
<v Speaker 0>In fact, okay. So just finished. So it

00:18:06.410 --> 00:18:08.490
<v Speaker 0>did take around three hundred seconds.

00:18:09.130 --> 00:18:11.130
<v Speaker 0>Four minutes and six seconds. Perfect.

00:18:13.210 --> 00:18:13.930
<v Speaker 0>Now

00:18:14.170 --> 00:18:15.050
<v Speaker 0>I have a dilemma.

00:18:15.655 --> 00:18:17.975
<v Speaker 0>Now, do I wanna risk importing all of

00:18:17.975 --> 00:18:21.655
<v Speaker 0>that Kubernetes data while I'm exploring the Docker

00:18:21.655 --> 00:18:22.375
<v Speaker 0>stuff?

00:18:23.415 --> 00:18:24.855
<v Speaker 0>Or do we do a little bit of

00:18:24.855 --> 00:18:26.855
<v Speaker 0>exploration on the Docker stuff before I kill

00:18:26.855 --> 00:18:27.655
<v Speaker 0>InfluxDB?

00:18:36.500 --> 00:18:38.100
<v Speaker 0>Let's take a look at Docker first.

00:18:38.500 --> 00:18:39.700
<v Speaker 0>Well at least take a look at the

00:18:39.700 --> 00:18:41.940
<v Speaker 0>overview dashboard. We'll maybe take a look at

00:18:41.940 --> 00:18:44.515
<v Speaker 0>one of the break downs first and then

00:18:44.515 --> 00:18:47.075
<v Speaker 0>I'll maybe hopefully feel a bit braver about

00:18:47.075 --> 00:18:48.595
<v Speaker 0>doing the Kubernetes import.

00:18:48.995 --> 00:18:51.075
<v Speaker 0>So let's refresh this one more time. We

00:18:51.075 --> 00:18:53.715
<v Speaker 0>have all the commits. We're breaking down by

00:18:53.715 --> 00:18:54.595
<v Speaker 0>quarter

00:18:54.995 --> 00:18:56.595
<v Speaker 0>and what we can see here

00:18:57.780 --> 00:19:00.180
<v Speaker 0>is the first couple of graphs that we

00:19:00.180 --> 00:19:01.059
<v Speaker 0>provide

00:19:02.340 --> 00:19:03.700
<v Speaker 0>are just a kind of

00:19:04.660 --> 00:19:07.700
<v Speaker 0>a way to understand the commit history.

00:19:07.700 --> 00:19:09.460
<v Speaker 0>Now we can see that in the early

00:19:09.460 --> 00:19:12.180
<v Speaker 0>days, you know, there's a lot of growth

00:19:12.045 --> 00:19:14.365
<v Speaker 0>and Mobi Docker project.

00:19:15.485 --> 00:19:16.525
<v Speaker 0>But actually it's

00:19:17.645 --> 00:19:19.325
<v Speaker 0>the number of commits is on the decline

00:19:19.325 --> 00:19:22.445
<v Speaker 0>ever since 2017.

00:19:23.645 --> 00:19:25.165
<v Speaker 0>I'm not sure why that is just yet.

00:19:26.190 --> 00:19:28.190
<v Speaker 0>I'm trying to think of major events that

00:19:28.190 --> 00:19:30.190
<v Speaker 0>have happened over the last three years.

00:19:30.830 --> 00:19:33.549
<v Speaker 0>Obviously, Docker, you know, as a company has

00:19:33.549 --> 00:19:35.389
<v Speaker 0>has always failed to find

00:19:36.110 --> 00:19:37.790
<v Speaker 0>kind of the path to profitability.

00:19:38.725 --> 00:19:41.365
<v Speaker 0>Other container technologies have popped up, you know,

00:19:41.365 --> 00:19:43.284
<v Speaker 0>I'm using pod man locally.

00:19:45.365 --> 00:19:46.965
<v Speaker 0>It could just be that they broke out

00:19:46.965 --> 00:19:48.164
<v Speaker 0>a lot of their

00:19:49.764 --> 00:19:53.080
<v Speaker 0>primary repository and to other repositories. I know

00:19:53.080 --> 00:19:55.480
<v Speaker 0>they went heavy down the kit route where

00:19:55.480 --> 00:19:57.959
<v Speaker 0>they had, you know, Linux kit, they had

00:19:58.279 --> 00:20:00.200
<v Speaker 0>VM kit. I don't even know the names

00:20:00.200 --> 00:20:02.279
<v Speaker 0>of all the kits, network kits, one kit.

00:20:02.279 --> 00:20:04.120
<v Speaker 0>So it it could just be a lot

00:20:04.120 --> 00:20:05.639
<v Speaker 0>of that code and a lot of the

00:20:05.639 --> 00:20:07.914
<v Speaker 0>effort from the community and by the company

00:20:07.914 --> 00:20:10.074
<v Speaker 0>has been pushed out other avenues.

00:20:10.715 --> 00:20:12.475
<v Speaker 0>Or it could just be that the company

00:20:12.475 --> 00:20:14.554
<v Speaker 0>has maybe been shrinking in size but I

00:20:14.554 --> 00:20:16.235
<v Speaker 0>don't really know if that's the case. Hopefully

00:20:16.235 --> 00:20:18.154
<v Speaker 0>we can melt slightly stronger

00:20:18.570 --> 00:20:19.690
<v Speaker 0>and infinities

00:20:19.690 --> 00:20:22.009
<v Speaker 0>as we look at more data. So

00:20:24.570 --> 00:20:26.809
<v Speaker 0>Alright. So this is the breakdown

00:20:26.890 --> 00:20:27.690
<v Speaker 0>across

00:20:27.850 --> 00:20:29.370
<v Speaker 0>multiple repositories.

00:20:31.024 --> 00:20:33.904
<v Speaker 0>So obviously, there was only one repository

00:20:34.385 --> 00:20:35.104
<v Speaker 0>until

00:20:36.304 --> 00:20:37.504
<v Speaker 0>what's this?

00:20:39.105 --> 00:20:41.264
<v Speaker 0>First quarter twenty sixteen

00:20:42.225 --> 00:20:43.664
<v Speaker 0>when swarm kit

00:20:43.745 --> 00:20:44.465
<v Speaker 0>was a thing.

00:20:46.510 --> 00:20:49.390
<v Speaker 0>So quite a lot here, in fact that's

00:20:49.390 --> 00:20:51.230
<v Speaker 0>an awful lot of commits

00:20:52.030 --> 00:20:55.710
<v Speaker 0>in the first six months that could show

00:20:57.495 --> 00:21:00.055
<v Speaker 0>just that maybe some of the code was

00:21:00.055 --> 00:21:02.695
<v Speaker 0>extracted from the primary repository.

00:21:02.695 --> 00:21:04.774
<v Speaker 0>Although I don't think swarm is ever

00:21:04.935 --> 00:21:07.415
<v Speaker 0>baked into the docker CLI. I think it

00:21:07.415 --> 00:21:08.775
<v Speaker 0>always was slightly separate.

00:21:10.940 --> 00:21:12.700
<v Speaker 0>Let's try and maybe come back to work

00:21:12.700 --> 00:21:14.220
<v Speaker 0>out what that is later as well.

00:21:15.340 --> 00:21:16.860
<v Speaker 0>A little spike and

00:21:18.060 --> 00:21:21.580
<v Speaker 0>commits here. What's that? October 2019.

00:21:22.345 --> 00:21:24.745
<v Speaker 0>Again, at right now, I'm not really sure

00:21:24.745 --> 00:21:26.424
<v Speaker 0>what that spike could be.

00:21:27.784 --> 00:21:29.465
<v Speaker 0>But let's see that in FluxDB. So let's

00:21:29.465 --> 00:21:31.065
<v Speaker 0>change this window and see if it maybe

00:21:31.065 --> 00:21:32.264
<v Speaker 0>gives us a

00:21:34.505 --> 00:21:36.664
<v Speaker 0>maybe a little bit more information into what's

00:21:36.664 --> 00:21:38.100
<v Speaker 0>actually happening. So if we bring this in

00:21:38.100 --> 00:21:40.900
<v Speaker 0>by month, it should yeah. So it's it's

00:21:40.900 --> 00:21:43.860
<v Speaker 0>not as smooth anymore because we're not aggregating

00:21:44.100 --> 00:21:44.980
<v Speaker 0>as much.

00:21:45.860 --> 00:21:46.260
<v Speaker 0>So

00:21:51.905 --> 00:21:54.145
<v Speaker 0>I mean this spike still exists definitely around

00:21:54.145 --> 00:21:56.545
<v Speaker 0>October 2019. I'm not sure what that is.

00:21:56.545 --> 00:21:59.184
<v Speaker 0>There are definitely sharp decline here.

00:21:59.505 --> 00:22:01.105
<v Speaker 0>I'll maybe need to do a little Google

00:22:01.105 --> 00:22:03.345
<v Speaker 0>and just check what happened to Docker at

00:22:03.345 --> 00:22:04.545
<v Speaker 0>the end of twenty sixteen.

00:22:05.200 --> 00:22:07.040
<v Speaker 0>I'm not even sure when they raised money.

00:22:07.040 --> 00:22:07.679
<v Speaker 0>Normally,

00:22:08.800 --> 00:22:11.120
<v Speaker 0>when I analyze open source projects that have

00:22:11.120 --> 00:22:12.400
<v Speaker 0>raised money,

00:22:12.480 --> 00:22:14.960
<v Speaker 0>you can generally tell where that raise was.

00:22:15.680 --> 00:22:17.680
<v Speaker 0>So in fact, why don't we try and

00:22:17.680 --> 00:22:18.640
<v Speaker 0>guess that now?

00:22:19.934 --> 00:22:21.934
<v Speaker 0>So I'm assuming the first race has to

00:22:21.934 --> 00:22:24.575
<v Speaker 0>be just this crazy spike.

00:22:27.215 --> 00:22:29.614
<v Speaker 0>Yeah. So let's go with April 2013.

00:22:29.855 --> 00:22:30.815
<v Speaker 0>There is

00:22:31.134 --> 00:22:33.215
<v Speaker 0>growth here. I'm not sure if it's

00:22:34.900 --> 00:22:36.980
<v Speaker 0>I'm not sure if it's funding just because

00:22:36.980 --> 00:22:38.820
<v Speaker 0>I would maybe expect to see slightly steeper

00:22:38.820 --> 00:22:39.620
<v Speaker 0>curve

00:22:39.780 --> 00:22:41.940
<v Speaker 0>but it could be maybe when the project

00:22:41.940 --> 00:22:43.860
<v Speaker 0>was open sourced and I'm not sure what

00:22:43.860 --> 00:22:46.179
<v Speaker 0>date that was but we can always look

00:22:46.179 --> 00:22:46.820
<v Speaker 0>that up too.

00:22:47.575 --> 00:22:50.055
<v Speaker 0>I would say that's a definite funding probably

00:22:50.055 --> 00:22:51.655
<v Speaker 0>March 2015.

00:22:53.095 --> 00:22:55.095
<v Speaker 0>And you can just see here

00:22:55.575 --> 00:22:58.695
<v Speaker 0>as the company was really focused on swarm

00:22:58.695 --> 00:23:01.180
<v Speaker 0>that there's a massive dip and the effort

00:23:01.180 --> 00:23:03.180
<v Speaker 0>to the other contributions

00:23:03.180 --> 00:23:05.180
<v Speaker 0>to mobile Docker itself.

00:23:05.660 --> 00:23:07.580
<v Speaker 0>And but that does come back up. So

00:23:08.140 --> 00:23:10.300
<v Speaker 0>I'm gonna say maybe that was funding

00:23:10.860 --> 00:23:12.139
<v Speaker 0>April 2013

00:23:13.675 --> 00:23:14.475
<v Speaker 0>and

00:23:14.555 --> 00:23:16.555
<v Speaker 0>March.

00:23:16.555 --> 00:23:18.235
<v Speaker 0>So we'll go Crunchbase

00:23:19.115 --> 00:23:20.075
<v Speaker 0>Docker.

00:23:24.155 --> 00:23:25.435
<v Speaker 0>Show me the money.

00:23:29.870 --> 00:23:30.750
<v Speaker 0>Okay.

00:23:31.230 --> 00:23:32.270
<v Speaker 0>Proceed.

00:23:32.270 --> 00:23:32.750
<v Speaker 0>So

00:23:33.630 --> 00:23:34.590
<v Speaker 0>January

00:23:34.590 --> 00:23:35.549
<v Speaker 0>2014

00:23:36.190 --> 00:23:37.350
<v Speaker 0>and September

00:23:37.350 --> 00:23:38.190
<v Speaker 0>2014.

00:23:43.695 --> 00:23:45.855
<v Speaker 0>So this was a raise but the

00:23:46.335 --> 00:23:48.174
<v Speaker 0>peak of that curve is actually

00:23:49.215 --> 00:23:51.455
<v Speaker 0>a little bit later than I thought it

00:23:51.455 --> 00:23:53.135
<v Speaker 0>would be. A little bit earlier than I

00:23:53.135 --> 00:23:54.770
<v Speaker 0>thought it would be. I guess then we

00:23:54.770 --> 00:23:57.090
<v Speaker 0>also have a little follow-up peak here. So

00:23:57.169 --> 00:23:59.249
<v Speaker 0>definitely the the round was there.

00:23:59.570 --> 00:24:01.169
<v Speaker 0>In fact, I looking at the wrong dates?

00:24:01.169 --> 00:24:02.130
<v Speaker 0>Yeah. That's the wrong dates.

00:24:07.034 --> 00:24:09.034
<v Speaker 0>Oh, wait. I'm just I'm getting everything wrong.

00:24:09.034 --> 00:24:10.154
<v Speaker 0>Okay. So we

00:24:10.634 --> 00:24:12.235
<v Speaker 0>don't have data from here, so let's ignore

00:24:12.235 --> 00:24:13.034
<v Speaker 0>that.

00:24:13.595 --> 00:24:16.154
<v Speaker 0>January 14 and September 14.

00:24:20.180 --> 00:24:22.659
<v Speaker 0>Alright. So there is spike here

00:24:24.020 --> 00:24:25.860
<v Speaker 0>and then there was a raise here. Okay.

00:24:25.860 --> 00:24:27.540
<v Speaker 0>So that's more like what I would expect.

00:24:27.540 --> 00:24:28.899
<v Speaker 0>If the raise was here,

00:24:29.940 --> 00:24:32.815
<v Speaker 0>especially just with that being the Christmas or

00:24:32.815 --> 00:24:34.575
<v Speaker 0>holiday period, you know, there would be a

00:24:34.575 --> 00:24:37.615
<v Speaker 0>sharp decline and then as January is or

00:24:37.615 --> 00:24:39.535
<v Speaker 0>as we're pushing towards the first quarter of

00:24:39.535 --> 00:24:41.535
<v Speaker 0>that month, there's been a substantial

00:24:42.095 --> 00:24:43.695
<v Speaker 0>increase in contributions.

00:24:45.135 --> 00:24:47.299
<v Speaker 0>April and November 15.

00:24:48.500 --> 00:24:49.460
<v Speaker 0>Yeah. So,

00:24:50.660 --> 00:24:52.820
<v Speaker 0>but yeah. I mean, some of these space

00:24:52.820 --> 00:24:54.740
<v Speaker 0>do definitely line up. But that's not that

00:24:54.740 --> 00:24:57.220
<v Speaker 0>interesting. That was just a curiosity of anything.

00:24:58.675 --> 00:25:00.755
<v Speaker 0>Let's take a look at contributions.

00:25:01.235 --> 00:25:04.355
<v Speaker 0>So definitely a decline ever since 2017.

00:25:04.355 --> 00:25:06.195
<v Speaker 0>I'm not sure how to explain that.

00:25:07.235 --> 00:25:09.795
<v Speaker 0>Total contributors over the years, two and a

00:25:09.795 --> 00:25:10.355
<v Speaker 0>half thousand.

00:25:12.059 --> 00:25:14.940
<v Speaker 0>Let's break that down. Swarm kept very little

00:25:14.940 --> 00:25:17.019
<v Speaker 0>traction. I don't think that's a surprise.

00:25:17.980 --> 00:25:19.980
<v Speaker 0>Especially I'm assuming when we pull on the

00:25:19.980 --> 00:25:22.139
<v Speaker 0>Kubernetes data here, we're gonna see that

00:25:22.860 --> 00:25:25.179
<v Speaker 0>pretty much make this lane indistinguishable.

00:25:25.885 --> 00:25:27.804
<v Speaker 0>It's just gonna be flattened right down here

00:25:27.804 --> 00:25:29.565
<v Speaker 0>because I'm assuming the Kubernetes one is gonna

00:25:29.565 --> 00:25:30.445
<v Speaker 0>be much larger.

00:25:31.405 --> 00:25:33.085
<v Speaker 0>But there has been growth. A lot of

00:25:33.085 --> 00:25:35.725
<v Speaker 0>growth contributor wise to the Docker and Mobby

00:25:35.725 --> 00:25:36.524
<v Speaker 0>project.

00:25:37.405 --> 00:25:39.885
<v Speaker 0>But something definitely happened in 2017. I'm not

00:25:39.885 --> 00:25:40.605
<v Speaker 0>sure

00:25:41.040 --> 00:25:42.480
<v Speaker 0>what that might be.

00:25:43.040 --> 00:25:44.880
<v Speaker 0>Yeah. Maybe prod some people and see what

00:25:44.880 --> 00:25:45.840
<v Speaker 0>we can find out.

00:25:47.040 --> 00:25:49.360
<v Speaker 0>So we're taking a look at commits and

00:25:49.360 --> 00:25:51.520
<v Speaker 0>we're taking a look at contributors.

00:25:52.240 --> 00:25:54.160
<v Speaker 0>This is now the release information.

00:25:54.320 --> 00:25:57.035
<v Speaker 0>So what we can actually see here is

00:25:57.035 --> 00:25:58.075
<v Speaker 0>I don't think

00:25:58.715 --> 00:26:01.515
<v Speaker 0>Swartcat has really ever had a tag on

00:26:01.515 --> 00:26:02.635
<v Speaker 0>this repository.

00:26:03.195 --> 00:26:04.075
<v Speaker 0>One

00:26:04.075 --> 00:26:06.235
<v Speaker 0>tag in 2016.

00:26:07.035 --> 00:26:09.770
<v Speaker 0>But we do see there's a pretty sporadic

00:26:09.770 --> 00:26:13.289
<v Speaker 0>but cadence that does exist with Docker itself.

00:26:13.770 --> 00:26:14.650
<v Speaker 0>Definitely,

00:26:14.650 --> 00:26:15.370
<v Speaker 0>you know,

00:26:15.770 --> 00:26:18.010
<v Speaker 0>these kind of inclines early on just show

00:26:18.010 --> 00:26:20.170
<v Speaker 0>that the project was young. We've had tagging

00:26:20.170 --> 00:26:22.330
<v Speaker 0>releases quite often, pushed them out maybe to

00:26:22.330 --> 00:26:23.050
<v Speaker 0>get some feedback.

00:26:23.965 --> 00:26:25.964
<v Speaker 0>Definitely a quiet period here.

00:26:28.524 --> 00:26:29.964
<v Speaker 0>But just random

00:26:29.965 --> 00:26:31.644
<v Speaker 0>random peaks as we go.

00:26:32.764 --> 00:26:34.365
<v Speaker 0>And these graphs are the same. These are

00:26:34.365 --> 00:26:35.965
<v Speaker 0>just two different ways to kind of visualize

00:26:35.965 --> 00:26:37.644
<v Speaker 0>it. We'll just scatter here. We can see

00:26:37.644 --> 00:26:39.325
<v Speaker 0>that volatility early on again.

00:26:39.830 --> 00:26:42.470
<v Speaker 0>Just when these dots are further away, it

00:26:42.470 --> 00:26:44.790
<v Speaker 0>just means there's not a lot of consistency.

00:26:44.790 --> 00:26:46.390
<v Speaker 0>There is consistency here

00:26:46.630 --> 00:26:47.590
<v Speaker 0>but still,

00:26:47.750 --> 00:26:50.789
<v Speaker 0>you know, flooding of activity outside the norm.

00:26:51.110 --> 00:26:52.310
<v Speaker 0>And then when you view that as a

00:26:52.310 --> 00:26:54.070
<v Speaker 0>histogram, can see there's not a lot of

00:26:54.070 --> 00:26:55.905
<v Speaker 0>level across here and

00:26:56.465 --> 00:26:59.345
<v Speaker 0>extremely volatile here, a little bit here, not

00:26:59.345 --> 00:27:00.865
<v Speaker 0>sure what the deal was there.

00:27:01.905 --> 00:27:04.465
<v Speaker 0>Maybe like slightly more consistent towards the end.

00:27:05.505 --> 00:27:07.345
<v Speaker 0>Something else gets CD scripts has the ability

00:27:07.345 --> 00:27:09.345
<v Speaker 0>to do is just to understand the files

00:27:09.345 --> 00:27:10.305
<v Speaker 0>in the repository.

00:27:10.810 --> 00:27:11.850
<v Speaker 0>Now because

00:27:12.650 --> 00:27:15.049
<v Speaker 0>Docker is pretty much entirely running go,

00:27:15.770 --> 00:27:17.050
<v Speaker 0>all we're just gonna see is one big

00:27:17.050 --> 00:27:18.409
<v Speaker 0>purple line of go.

00:27:19.370 --> 00:27:21.450
<v Speaker 0>We also have the markdown line here.

00:27:22.905 --> 00:27:23.705
<v Speaker 0>So

00:27:23.705 --> 00:27:26.265
<v Speaker 0>what's that? No documentation that exist these in

00:27:26.265 --> 00:27:28.585
<v Speaker 0>this project. At least very little documentation existed

00:27:28.585 --> 00:27:30.265
<v Speaker 0>in this project until

00:27:30.585 --> 00:27:32.985
<v Speaker 0>the metals at end of twenty fourteen.

00:27:33.945 --> 00:27:34.825
<v Speaker 0>And

00:27:35.650 --> 00:27:37.250
<v Speaker 0>I mean, that's a little bit worrying, but

00:27:37.250 --> 00:27:39.970
<v Speaker 0>there's not been very much documentation or markdown

00:27:39.970 --> 00:27:41.730
<v Speaker 0>fails added to the repository.

00:27:42.370 --> 00:27:43.890
<v Speaker 0>That could just show that the docs were

00:27:43.890 --> 00:27:46.370
<v Speaker 0>extracted to their own repository at the early

00:27:46.370 --> 00:27:48.289
<v Speaker 0>twenty eighteen, late '20 '17.

00:27:48.690 --> 00:27:49.794
<v Speaker 0>I'm not sure.

00:27:51.475 --> 00:27:53.235
<v Speaker 0>I've got some PNGs being added

00:27:54.515 --> 00:27:57.635
<v Speaker 0>and some random crappy files that someone probably

00:27:57.635 --> 00:27:58.914
<v Speaker 0>didn't mean to commit.

00:28:01.155 --> 00:28:03.555
<v Speaker 0>Okay. What do we got down here? We're

00:28:03.555 --> 00:28:05.640
<v Speaker 0>just breaking down those file types again by

00:28:05.640 --> 00:28:06.600
<v Speaker 0>repository.

00:28:06.840 --> 00:28:09.080
<v Speaker 0>Most of the documentation is in the mobi

00:28:09.080 --> 00:28:09.960
<v Speaker 0>project.

00:28:12.440 --> 00:28:14.200
<v Speaker 0>Go for swarm.

00:28:15.480 --> 00:28:17.960
<v Speaker 0>I don't really see a line for markdown

00:28:17.960 --> 00:28:18.760
<v Speaker 0>on swarm.

00:28:20.184 --> 00:28:21.065
<v Speaker 0>Concerning.

00:28:22.024 --> 00:28:22.744
<v Speaker 0>Okay.

00:28:22.825 --> 00:28:24.825
<v Speaker 0>Something else that GET series gives us the

00:28:24.825 --> 00:28:26.344
<v Speaker 0>ability to do

00:28:27.304 --> 00:28:28.184
<v Speaker 0>is

00:28:29.225 --> 00:28:30.105
<v Speaker 0>try and get help.

00:28:31.750 --> 00:28:33.830
<v Speaker 0>Maybe not so much for an open source

00:28:33.830 --> 00:28:35.190
<v Speaker 0>project, I guess.

00:28:36.070 --> 00:28:38.150
<v Speaker 0>But if you're working I mean, if you're

00:28:38.150 --> 00:28:40.070
<v Speaker 0>doing if you're really gonna use these if

00:28:40.070 --> 00:28:41.670
<v Speaker 0>if you were going to use get series

00:28:41.670 --> 00:28:42.870
<v Speaker 0>and these dashboards

00:28:42.870 --> 00:28:45.509
<v Speaker 0>in your private company or organization,

00:28:46.070 --> 00:28:47.285
<v Speaker 0>it could be a good way just to

00:28:47.285 --> 00:28:49.684
<v Speaker 0>say how do I get help writing

00:28:50.885 --> 00:28:51.684
<v Speaker 0>markdown?

00:28:52.325 --> 00:28:54.165
<v Speaker 0>You know, put Rust here just because Rust

00:28:54.165 --> 00:28:55.765
<v Speaker 0>is obviously the new shiny that a lot

00:28:55.765 --> 00:28:56.804
<v Speaker 0>of people are adopting.

00:28:57.365 --> 00:28:59.045
<v Speaker 0>But if I wanna know who the main

00:28:59.590 --> 00:29:02.070
<v Speaker 0>contributors to the documentation and I'm making,

00:29:02.549 --> 00:29:04.789
<v Speaker 0>I'm guessing that the documentation is the markdown

00:29:04.789 --> 00:29:05.509
<v Speaker 0>files.

00:29:05.990 --> 00:29:07.669
<v Speaker 0>Marydocker.com.

00:29:08.070 --> 00:29:09.350
<v Speaker 0>I'm

00:29:09.350 --> 00:29:12.735
<v Speaker 0>assuming she. They have 1,200

00:29:12.735 --> 00:29:13.535
<v Speaker 0>commits

00:29:13.535 --> 00:29:14.815
<v Speaker 0>of markdown there.

00:29:16.015 --> 00:29:17.375
<v Speaker 0>I wanna understand

00:29:17.375 --> 00:29:19.535
<v Speaker 0>how to rate good, a go code in

00:29:19.535 --> 00:29:20.495
<v Speaker 0>this project.

00:29:21.295 --> 00:29:24.654
<v Speaker 0>We've got 7,000 commits from githubigand.nl

00:29:24.815 --> 00:29:26.575
<v Speaker 0>and you know, those

00:29:26.975 --> 00:29:28.780
<v Speaker 0>top five there are probably the people that

00:29:28.780 --> 00:29:30.540
<v Speaker 0>I'd want to go speak to to understand

00:29:30.540 --> 00:29:31.660
<v Speaker 0>the go code here.

00:29:32.380 --> 00:29:34.299
<v Speaker 0>And what I like doing with this

00:29:34.540 --> 00:29:36.140
<v Speaker 0>this table here is also just shows you

00:29:36.140 --> 00:29:37.740
<v Speaker 0>some of the random crap that's in the

00:29:37.740 --> 00:29:38.540
<v Speaker 0>repository.

00:29:38.540 --> 00:29:40.940
<v Speaker 0>So, you know, who committed adult one? Well,

00:29:40.815 --> 00:29:42.335
<v Speaker 0>quite a lot of people. I'm gonna assume

00:29:42.335 --> 00:29:43.695
<v Speaker 0>that's not an accident then.

00:29:45.294 --> 00:29:47.375
<v Speaker 0>.Bsd.Damien,

00:29:47.615 --> 00:29:48.575
<v Speaker 0>Fedora's,

00:29:48.575 --> 00:29:50.414
<v Speaker 0>you know, who's committing the images.

00:29:51.294 --> 00:29:53.695
<v Speaker 0>There's a nice macOS folder. That's always a

00:29:53.695 --> 00:29:55.455
<v Speaker 0>pleasure to see. Do we have a DS

00:29:55.455 --> 00:29:55.774
<v Speaker 0>store?

00:29:57.320 --> 00:29:58.520
<v Speaker 0>No DS store.

00:30:00.760 --> 00:30:02.679
<v Speaker 0>AI file. Nice.

00:30:04.280 --> 00:30:07.080
<v Speaker 0>Oh, there's something from Sublime or Textmate

00:30:07.240 --> 00:30:09.480
<v Speaker 0>depending on when this was.

00:30:11.775 --> 00:30:13.695
<v Speaker 0>Lots of random stuff.

00:30:16.095 --> 00:30:18.415
<v Speaker 0>Don't think there's anything else particularly interesting at

00:30:18.415 --> 00:30:20.335
<v Speaker 0>all. That peril. Nice.

00:30:21.615 --> 00:30:23.695
<v Speaker 0>And if you want help with peril, that's

00:30:23.695 --> 00:30:25.294
<v Speaker 0>the person we're gonna go chat to.

00:30:26.495 --> 00:30:27.375
<v Speaker 0>Okay.

00:30:27.375 --> 00:30:28.390
<v Speaker 0>So let's

00:30:28.470 --> 00:30:30.070
<v Speaker 0>take a look at our next dashboard of

00:30:30.070 --> 00:30:30.630
<v Speaker 0>this.

00:30:32.310 --> 00:30:34.630
<v Speaker 0>This is the single repository

00:30:37.030 --> 00:30:38.549
<v Speaker 0>kind of a deeper dive.

00:30:38.710 --> 00:30:40.630
<v Speaker 0>So hopefully we can find some patterns and

00:30:40.630 --> 00:30:41.830
<v Speaker 0>a single repository here.

00:30:42.394 --> 00:30:43.835
<v Speaker 0>Now I am running this over a large

00:30:43.835 --> 00:30:45.674
<v Speaker 0>window. I'm hoping it's not gonna

00:30:45.914 --> 00:30:47.034
<v Speaker 0>take too long.

00:30:50.235 --> 00:30:52.474
<v Speaker 0>Okay. So this is the repository

00:30:52.955 --> 00:30:54.955
<v Speaker 0>query that we showed at the start.

00:30:56.060 --> 00:30:57.420
<v Speaker 0>We're going to take a loop morebie. I'm

00:30:57.420 --> 00:30:59.020
<v Speaker 0>assuming that's going to be slightly more interesting

00:30:59.020 --> 00:31:00.940
<v Speaker 0>than swarm kit. I'm going to stick with

00:31:00.940 --> 00:31:02.380
<v Speaker 0>the periods of a month for the time

00:31:02.380 --> 00:31:02.940
<v Speaker 0>being.

00:31:03.260 --> 00:31:05.820
<v Speaker 0>Now what this first graph does is

00:31:07.505 --> 00:31:09.585
<v Speaker 0>it's still breaking down the commits only this

00:31:09.585 --> 00:31:12.065
<v Speaker 0>time we're looking at

00:31:12.225 --> 00:31:14.865
<v Speaker 0>the stats on each commit itself. So we

00:31:14.865 --> 00:31:15.825
<v Speaker 0>want to understand

00:31:16.385 --> 00:31:19.425
<v Speaker 0>how many insertions are aware, how many deletions

00:31:19.425 --> 00:31:21.585
<v Speaker 0>and how many files were modified as part

00:31:21.585 --> 00:31:22.145
<v Speaker 0>of that commit.

00:31:23.010 --> 00:31:25.010
<v Speaker 0>And the files modified should always be dwarfed

00:31:25.010 --> 00:31:26.770
<v Speaker 0>by the insertions and deletions here.

00:31:27.330 --> 00:31:29.730
<v Speaker 0>But because you know, generally we we write

00:31:29.730 --> 00:31:32.130
<v Speaker 0>a lot more code than we do spinning

00:31:32.130 --> 00:31:34.289
<v Speaker 0>up new files or touching files etcetera.

00:31:34.850 --> 00:31:36.690
<v Speaker 0>What the blue line above the purple line

00:31:36.690 --> 00:31:39.554
<v Speaker 0>means is that we're generally writing new code.

00:31:40.435 --> 00:31:42.595
<v Speaker 0>Purple line being bigger than the blue generally

00:31:42.595 --> 00:31:44.115
<v Speaker 0>means that we're deleting

00:31:44.275 --> 00:31:46.995
<v Speaker 0>code and what you would expect to see

00:31:47.075 --> 00:31:50.035
<v Speaker 0>is generally these lines will run very close

00:31:50.035 --> 00:31:50.755
<v Speaker 0>to each other.

00:31:51.559 --> 00:31:54.039
<v Speaker 0>The LP extension is just laying protocol.

00:31:54.280 --> 00:31:56.040
<v Speaker 0>I made it up for the sorry, the

00:31:56.040 --> 00:31:57.320
<v Speaker 0>question on YouTube. I made it up for

00:31:57.320 --> 00:31:58.360
<v Speaker 0>the purpose of this.

00:31:59.480 --> 00:32:01.400
<v Speaker 0>It's just a text file and laying protocol

00:32:01.400 --> 00:32:02.200
<v Speaker 0>format.

00:32:02.520 --> 00:32:03.320
<v Speaker 0>So

00:32:03.815 --> 00:32:04.534
<v Speaker 0>the

00:32:05.655 --> 00:32:07.655
<v Speaker 0>what what I would normally expect to see

00:32:07.655 --> 00:32:08.615
<v Speaker 0>on a

00:32:10.215 --> 00:32:11.735
<v Speaker 0>stable repository.

00:32:11.895 --> 00:32:14.774
<v Speaker 0>Those lines are tracking each other pretty frequently.

00:32:15.015 --> 00:32:17.015
<v Speaker 0>If there are any major deletions that come

00:32:17.015 --> 00:32:19.870
<v Speaker 0>generally after some major insertion just kind of

00:32:19.870 --> 00:32:22.190
<v Speaker 0>show refactoring or extracting

00:32:22.190 --> 00:32:24.350
<v Speaker 0>of code and and kinda cleaning that up.

00:32:24.429 --> 00:32:26.669
<v Speaker 0>When the lines are running very very close

00:32:26.669 --> 00:32:28.830
<v Speaker 0>together, it just means that only changes are

00:32:28.830 --> 00:32:29.549
<v Speaker 0>being made.

00:32:30.110 --> 00:32:32.270
<v Speaker 0>I generally consider that a little bit of

00:32:32.270 --> 00:32:33.230
<v Speaker 0>a warning sign

00:32:33.715 --> 00:32:35.955
<v Speaker 0>because if you're always just changing code, you're

00:32:35.955 --> 00:32:37.874
<v Speaker 0>not really driving any new features

00:32:38.274 --> 00:32:40.994
<v Speaker 0>and probably just fixing a lot of bugs.

00:32:41.394 --> 00:32:43.634
<v Speaker 0>And if we see too much blue over

00:32:43.634 --> 00:32:45.475
<v Speaker 0>the purple, it means that we're only writing

00:32:45.475 --> 00:32:47.860
<v Speaker 0>new code and that's something I would expect

00:32:47.860 --> 00:32:49.540
<v Speaker 0>to see early in a project but not

00:32:49.540 --> 00:32:50.980
<v Speaker 0>necessarily later.

00:32:52.340 --> 00:32:54.500
<v Speaker 0>But of course it depends on the way

00:32:54.500 --> 00:32:56.820
<v Speaker 0>that the team works, way that they handle

00:32:56.820 --> 00:32:57.860
<v Speaker 0>new features, etcetera.

00:32:59.665 --> 00:33:00.304
<v Speaker 0>Now

00:33:01.265 --> 00:33:03.985
<v Speaker 0>we know there was money raised here that

00:33:03.985 --> 00:33:05.985
<v Speaker 0>would show this explosion of of new code.

00:33:05.985 --> 00:33:07.665
<v Speaker 0>I guess new developers come on to the

00:33:07.665 --> 00:33:09.825
<v Speaker 0>team. They're all working on new features.

00:33:10.865 --> 00:33:12.785
<v Speaker 0>We see that again here. I can't remember

00:33:12.785 --> 00:33:14.305
<v Speaker 0>when the funding was but

00:33:16.240 --> 00:33:16.960
<v Speaker 0>you know,

00:33:17.440 --> 00:33:20.240
<v Speaker 0>they are definitely focusing on new features for

00:33:20.240 --> 00:33:23.600
<v Speaker 0>the first twelve months. Again, that's totally normal

00:33:24.080 --> 00:33:27.520
<v Speaker 0>and, you know, major feature expansion here. Then

00:33:27.520 --> 00:33:30.005
<v Speaker 0>we've got a period of kind of fixes

00:33:30.005 --> 00:33:32.404
<v Speaker 0>another little bit of a feature expansion here,

00:33:32.404 --> 00:33:34.885
<v Speaker 0>but then a heavy feature expansion here. A

00:33:34.885 --> 00:33:36.725
<v Speaker 0>little bit of cleanup and then we're back

00:33:36.725 --> 00:33:39.605
<v Speaker 0>to that kind of modifying code rather investing

00:33:39.605 --> 00:33:41.684
<v Speaker 0>in new code. This is probably a little

00:33:41.684 --> 00:33:42.965
<v Speaker 0>bit of refactoring here

00:33:43.320 --> 00:33:45.080
<v Speaker 0>And then this is what I mean here.

00:33:45.880 --> 00:33:46.999
<v Speaker 0>I keep saying here.

00:33:47.480 --> 00:33:49.640
<v Speaker 0>These bumps are generally, I like to see

00:33:49.640 --> 00:33:51.640
<v Speaker 0>these when I'm analyzing the get history of

00:33:51.640 --> 00:33:52.279
<v Speaker 0>a project.

00:33:52.679 --> 00:33:54.519
<v Speaker 0>You know, massive amount of new code to

00:33:54.519 --> 00:33:57.235
<v Speaker 0>me which show where we write in this

00:33:57.235 --> 00:33:59.155
<v Speaker 0>different component and then when we come back

00:33:59.155 --> 00:34:00.595
<v Speaker 0>and we had to move something else from

00:34:00.595 --> 00:34:02.595
<v Speaker 0>the project. So it could be right. We

00:34:02.595 --> 00:34:05.075
<v Speaker 0>just want to extract this out of this

00:34:05.075 --> 00:34:07.075
<v Speaker 0>directory where it's maybe coupled with a whole

00:34:07.075 --> 00:34:08.755
<v Speaker 0>bunch of other components and we wanna extract

00:34:08.755 --> 00:34:09.690
<v Speaker 0>it over here.

00:34:09.929 --> 00:34:11.530
<v Speaker 0>There are graphs further down the page where

00:34:11.530 --> 00:34:13.849
<v Speaker 0>hopefully we can actually identify what that the

00:34:13.849 --> 00:34:15.690
<v Speaker 0>factoring was. So we'll try and come back

00:34:15.690 --> 00:34:16.330
<v Speaker 0>to that.

00:34:16.969 --> 00:34:18.730
<v Speaker 0>We've got a lot of new development here

00:34:18.730 --> 00:34:21.210
<v Speaker 0>followed again by this deletion. This is good.

00:34:21.210 --> 00:34:23.984
<v Speaker 0>Again, I think it's just refactor, refactor, refactor.

00:34:23.984 --> 00:34:26.545
<v Speaker 0>And of course that's usually healthy after there

00:34:26.545 --> 00:34:28.705
<v Speaker 0>has been this kind of feature explosion here.

00:34:28.864 --> 00:34:31.105
<v Speaker 0>Not an explosion, it's still there's a bit

00:34:31.105 --> 00:34:33.025
<v Speaker 0>of prominence there with the amount of insertions

00:34:33.025 --> 00:34:33.984
<v Speaker 0>in the code over deletion.

00:34:35.969 --> 00:34:37.250
<v Speaker 0>These I've,

00:34:37.650 --> 00:34:40.130
<v Speaker 0>I haven't worked out what these double peaks

00:34:40.130 --> 00:34:42.530
<v Speaker 0>really are yet. I mean, it's an awful

00:34:42.530 --> 00:34:44.770
<v Speaker 0>lot of deletions, an awful lot of insertions.

00:34:44.770 --> 00:34:47.090
<v Speaker 0>It's just one big massive change to the

00:34:47.090 --> 00:34:47.650
<v Speaker 0>code base.

00:34:48.635 --> 00:34:50.474
<v Speaker 0>Again, let's try and make sure we come

00:34:50.474 --> 00:34:52.875
<v Speaker 0>back to what was this? The start of

00:34:52.875 --> 00:34:53.915
<v Speaker 0>2017

00:34:53.994 --> 00:34:55.355
<v Speaker 0>and this

00:34:55.994 --> 00:34:59.115
<v Speaker 0>twenty fifteen July ish. And we'll see if

00:34:59.115 --> 00:35:01.035
<v Speaker 0>we can actually, when we do the breakdown

00:35:01.035 --> 00:35:04.234
<v Speaker 0>of the directories of the code changed and

00:35:03.339 --> 00:35:05.100
<v Speaker 0>try and work out what happened here.

00:35:06.380 --> 00:35:08.460
<v Speaker 0>Okay. So moving on to later times, we

00:35:08.460 --> 00:35:09.579
<v Speaker 0>don't need to go over all this again.

00:35:09.579 --> 00:35:12.140
<v Speaker 0>We see feature driven development, feature driven development,

00:35:12.140 --> 00:35:14.940
<v Speaker 0>feature driven development, feature driven development with

00:35:14.940 --> 00:35:18.085
<v Speaker 0>little flurries of changes and bug fixes along

00:35:18.085 --> 00:35:18.725
<v Speaker 0>the way.

00:35:20.165 --> 00:35:22.005
<v Speaker 0>Thanks John for answering that.

00:35:22.565 --> 00:35:23.285
<v Speaker 0>Okay.

00:35:23.845 --> 00:35:25.765
<v Speaker 0>So total commands mean come up per window

00:35:25.765 --> 00:35:27.605
<v Speaker 0>and not very useful. Right? Because we've already

00:35:27.605 --> 00:35:28.885
<v Speaker 0>covered that in the overview. We don't need

00:35:28.885 --> 00:35:29.925
<v Speaker 0>to go over that again.

00:35:31.285 --> 00:35:33.099
<v Speaker 0>The next part of this dash dashboard tries

00:35:33.099 --> 00:35:33.980
<v Speaker 0>to give

00:35:34.540 --> 00:35:36.780
<v Speaker 0>you a sense of what a

00:35:37.420 --> 00:35:38.860
<v Speaker 0>standard commit

00:35:39.980 --> 00:35:41.580
<v Speaker 0>looks like in this repository.

00:35:41.820 --> 00:35:44.300
<v Speaker 0>So we break it down by quantiles. We

00:35:44.300 --> 00:35:46.700
<v Speaker 0>have the ninetieth quantile, the fiftieth quantile and

00:35:46.700 --> 00:35:47.580
<v Speaker 0>the first quantile.

00:35:48.545 --> 00:35:50.305
<v Speaker 0>So you should rarely

00:35:51.025 --> 00:35:53.025
<v Speaker 0>have a commit this size, rarely have a

00:35:53.025 --> 00:35:55.265
<v Speaker 0>commit this size. Most of your commits should

00:35:55.265 --> 00:35:56.865
<v Speaker 0>be in this ballpark.

00:35:57.424 --> 00:35:59.664
<v Speaker 0>Leading up to this one but hopefully not

00:35:59.664 --> 00:36:00.065
<v Speaker 0>too close.

00:36:01.340 --> 00:36:04.060
<v Speaker 0>So the average commit across the Mobi project,

00:36:04.460 --> 00:36:06.380
<v Speaker 0>again, we're looking at a very large time

00:36:06.380 --> 00:36:09.100
<v Speaker 0>period right now. So the stats are gonna

00:36:09.100 --> 00:36:10.140
<v Speaker 0>be somewhat skewed.

00:36:10.860 --> 00:36:12.460
<v Speaker 0>If we break this down to three months,

00:36:12.460 --> 00:36:12.860
<v Speaker 0>which I'll do

00:36:14.405 --> 00:36:15.605
<v Speaker 0>say five minutes,

00:36:15.845 --> 00:36:18.565
<v Speaker 0>we'll see our actual true representation of what

00:36:18.565 --> 00:36:20.325
<v Speaker 0>standard commit looks like now and we could

00:36:20.325 --> 00:36:22.165
<v Speaker 0>probably run that against the first twelve months

00:36:22.165 --> 00:36:23.765
<v Speaker 0>and I would actually expect those numbers to

00:36:23.765 --> 00:36:24.805
<v Speaker 0>be substantially different.

00:36:27.930 --> 00:36:29.210
<v Speaker 0>Lame protocol.

00:36:30.090 --> 00:36:31.850
<v Speaker 0>Yeah. Sorry about the accent. I'll work on

00:36:31.850 --> 00:36:32.330
<v Speaker 0>it.

00:36:33.050 --> 00:36:34.170
<v Speaker 0>Okay. So

00:36:35.690 --> 00:36:37.690
<v Speaker 0>standard commit across the lifetime of this project

00:36:37.690 --> 00:36:40.570
<v Speaker 0>is you modify one file, delete four lines

00:36:40.570 --> 00:36:41.530
<v Speaker 0>and insert 11.

00:36:42.965 --> 00:36:45.765
<v Speaker 0>Pushing up towards a 42 insertions, 70 deletions

00:36:45.765 --> 00:36:47.365
<v Speaker 0>and modifying eight files.

00:36:47.525 --> 00:36:49.365
<v Speaker 0>In fact, you know what, let's just break

00:36:49.365 --> 00:36:52.005
<v Speaker 0>this down now. What does it look like

00:36:52.005 --> 00:36:53.685
<v Speaker 0>in 2020? If I was coming to this

00:36:53.685 --> 00:36:54.325
<v Speaker 0>project now,

00:36:56.109 --> 00:36:58.270
<v Speaker 0>we can see that the standard commit,

00:36:58.430 --> 00:37:01.070
<v Speaker 0>you would modify two files, four deletions, six

00:37:01.070 --> 00:37:03.869
<v Speaker 0>insertions and while the 90% tail is is

00:37:03.869 --> 00:37:04.590
<v Speaker 0>huge.

00:37:05.710 --> 00:37:06.910
<v Speaker 0>So I mean,

00:37:07.845 --> 00:37:11.285
<v Speaker 0>probably being some chunky refit. Okay. Commencementary factoring

00:37:11.285 --> 00:37:12.325
<v Speaker 0>in the last

00:37:13.285 --> 00:37:14.565
<v Speaker 0>six months.

00:37:15.365 --> 00:37:17.125
<v Speaker 0>I'm not sure maybe that has something to

00:37:17.125 --> 00:37:19.525
<v Speaker 0>do with the sale to Midrandes.

00:37:19.525 --> 00:37:20.930
<v Speaker 0>Maybe they were starting to extract a lot

00:37:20.930 --> 00:37:22.210
<v Speaker 0>of quota at Moby.

00:37:22.370 --> 00:37:23.650
<v Speaker 0>I don't know. Maybe I would see that

00:37:23.650 --> 00:37:25.410
<v Speaker 0>more in SwanKit. I don't know.

00:37:26.930 --> 00:37:29.330
<v Speaker 0>Let's compare that to the

00:37:29.970 --> 00:37:31.090
<v Speaker 0>feature days.

00:37:31.170 --> 00:37:32.450
<v Speaker 0>2015.

00:37:32.530 --> 00:37:33.890
<v Speaker 0>So we just wanted to break that down

00:37:33.890 --> 00:37:34.690
<v Speaker 0>to that year.

00:37:37.225 --> 00:37:38.665
<v Speaker 0>Okay. The actual

00:37:39.385 --> 00:37:43.145
<v Speaker 0>consistency across the years probably quite telling and

00:37:43.145 --> 00:37:46.985
<v Speaker 0>quite a mature development team, you know, this

00:37:47.145 --> 00:37:49.225
<v Speaker 0>kind of commit mean if you will of

00:37:49.225 --> 00:37:51.960
<v Speaker 0>modifying one or two files, you know, making

00:37:51.960 --> 00:37:54.840
<v Speaker 0>anywhere from five to 20 changes.

00:37:55.640 --> 00:37:56.840
<v Speaker 0>To me just shows

00:37:57.560 --> 00:37:59.400
<v Speaker 0>that's a good indicator. I don't like to

00:37:59.400 --> 00:38:00.920
<v Speaker 0>see that number get too high. That's for

00:38:00.920 --> 00:38:01.400
<v Speaker 0>sure.

00:38:01.880 --> 00:38:02.280
<v Speaker 0>Okay.

00:38:04.515 --> 00:38:07.155
<v Speaker 0>Let's jump back over to our

00:38:07.954 --> 00:38:10.035
<v Speaker 0>massive view of the world. Just give that

00:38:10.035 --> 00:38:10.835
<v Speaker 0>a second

00:38:11.395 --> 00:38:13.235
<v Speaker 0>and we'll scroll down.

00:38:13.315 --> 00:38:15.395
<v Speaker 0>So there's this release cadence. We've seen that

00:38:15.395 --> 00:38:16.755
<v Speaker 0>new review. We're not gonna look at it

00:38:16.755 --> 00:38:18.770
<v Speaker 0>here. We have a table that's just gonna

00:38:18.770 --> 00:38:20.530
<v Speaker 0>show us all of those releases.

00:38:20.930 --> 00:38:22.850
<v Speaker 0>What we can see here is just the

00:38:22.850 --> 00:38:25.330
<v Speaker 0>pattern, the name for releasing, you know, was

00:38:25.330 --> 00:38:26.610
<v Speaker 0>that always the case?

00:38:27.490 --> 00:38:28.130
<v Speaker 0>No,

00:38:31.170 --> 00:38:33.490
<v Speaker 0>they used to do semantic versioning

00:38:35.385 --> 00:38:37.145
<v Speaker 0>and that changed

00:38:38.105 --> 00:38:39.465
<v Speaker 0>in 2017.

00:38:40.265 --> 00:38:42.745
<v Speaker 0>So the conversion is nineteen o three. In

00:38:42.745 --> 00:38:45.865
<v Speaker 0>fact, there's not been a release since November.

00:38:46.425 --> 00:38:47.625
<v Speaker 0>Make of that what you will.

00:38:49.220 --> 00:38:51.860
<v Speaker 0>Okay. So what about the offers

00:38:52.339 --> 00:38:53.540
<v Speaker 0>as they've

00:38:53.700 --> 00:38:55.220
<v Speaker 0>come and go over time?

00:38:55.940 --> 00:38:58.819
<v Speaker 0>So we can see some crazy crazy

00:38:58.819 --> 00:39:01.300
<v Speaker 0>peaks at the start. So there's Solomon,

00:39:01.300 --> 00:39:03.005
<v Speaker 0>I believe was one of the founders. He

00:39:03.005 --> 00:39:04.845
<v Speaker 0>was the CTO at the start

00:39:05.565 --> 00:39:07.805
<v Speaker 0>who committed a lot of codes

00:39:08.205 --> 00:39:09.405
<v Speaker 0>in the early days

00:39:09.805 --> 00:39:10.765
<v Speaker 0>and dropped

00:39:11.005 --> 00:39:13.725
<v Speaker 0>stopped training code in 2015. I'm assuming

00:39:14.780 --> 00:39:16.060
<v Speaker 0>as a CTO,

00:39:16.060 --> 00:39:18.619
<v Speaker 0>focusing more on growing the company, the vision,

00:39:18.619 --> 00:39:21.020
<v Speaker 0>leadership management and all of those things. So

00:39:21.020 --> 00:39:22.380
<v Speaker 0>obviously as

00:39:22.780 --> 00:39:25.100
<v Speaker 0>priorities, we're just changing around that time.

00:39:26.140 --> 00:39:27.180
<v Speaker 0>What we do see here,

00:39:28.685 --> 00:39:30.765
<v Speaker 0>a lot of activity for a very short

00:39:30.765 --> 00:39:31.965
<v Speaker 0>period of time.

00:39:32.445 --> 00:39:35.725
<v Speaker 0>So maybe an early employee dot clouds

00:39:36.285 --> 00:39:37.965
<v Speaker 0>moved on in 2014,

00:39:38.045 --> 00:39:39.165
<v Speaker 0>hasn't committed since.

00:39:40.740 --> 00:39:42.820
<v Speaker 0>We've got Victor here.

00:39:43.700 --> 00:39:44.580
<v Speaker 0>Interesting.

00:39:44.580 --> 00:39:45.460
<v Speaker 0>So, you know,

00:39:46.020 --> 00:39:49.540
<v Speaker 0>definitely a prominent developer from 2013 to 2015.

00:39:53.865 --> 00:39:56.025
<v Speaker 0>Guess maybe and so

00:39:56.025 --> 00:39:58.585
<v Speaker 0>many random hypotheses just coming out now, but

00:39:58.585 --> 00:40:02.265
<v Speaker 0>maybe took a leadership or management position

00:40:02.425 --> 00:40:03.705
<v Speaker 0>in 2015.

00:40:03.705 --> 00:40:05.545
<v Speaker 0>I mean, as an early developer on the

00:40:05.545 --> 00:40:07.785
<v Speaker 0>product, of course, as a company grows, it's

00:40:07.785 --> 00:40:09.890
<v Speaker 0>gonna be, you know, maybe pushed into a

00:40:09.890 --> 00:40:12.450
<v Speaker 0>position of leadership and management. Maybe it doesn't

00:40:12.450 --> 00:40:14.290
<v Speaker 0>like it lasted a couple of years, went

00:40:14.290 --> 00:40:15.650
<v Speaker 0>back to being a developer,

00:40:15.970 --> 00:40:17.490
<v Speaker 0>made me moved on from the company in

00:40:17.490 --> 00:40:18.290
<v Speaker 0>2018.

00:40:19.410 --> 00:40:20.610
<v Speaker 0>Complete speculation.

00:40:20.930 --> 00:40:23.015
<v Speaker 0>But we could see that, you know, very

00:40:23.015 --> 00:40:24.535
<v Speaker 0>prominent early on,

00:40:25.015 --> 00:40:26.775
<v Speaker 0>depth in the middle spike.

00:40:26.935 --> 00:40:28.535
<v Speaker 0>Not sure what that was, but again, it's

00:40:28.535 --> 00:40:29.895
<v Speaker 0>around that 2017

00:40:29.895 --> 00:40:31.575
<v Speaker 0>period where we did see some

00:40:32.135 --> 00:40:34.695
<v Speaker 0>weirdness on the commit total graph. So I'm

00:40:34.695 --> 00:40:35.655
<v Speaker 0>not sure what happened there.

00:40:36.900 --> 00:40:39.220
<v Speaker 0>We can also see we've got

00:40:39.460 --> 00:40:40.660
<v Speaker 0>more people.

00:40:43.940 --> 00:40:45.460
<v Speaker 0>Let's see. Is there anyone?

00:40:46.339 --> 00:40:49.299
<v Speaker 0>Michael Crosby is still definitely one of the

00:40:49.299 --> 00:40:51.675
<v Speaker 0>early employees still at the company today.

00:40:55.195 --> 00:40:55.835
<v Speaker 0>Nice

00:40:56.315 --> 00:40:58.075
<v Speaker 0>kind of depth for a few years and

00:40:58.075 --> 00:40:59.995
<v Speaker 0>then a little spike at the end. Not

00:40:59.995 --> 00:41:01.035
<v Speaker 0>sure what that means.

00:41:02.555 --> 00:41:03.515
<v Speaker 0>Who else we got?

00:41:04.960 --> 00:41:06.960
<v Speaker 0>We got Jesse Frizelle,

00:41:08.720 --> 00:41:09.920
<v Speaker 0>Alexander,

00:41:13.200 --> 00:41:14.640
<v Speaker 0>David Calaveras.

00:41:14.640 --> 00:41:16.000
<v Speaker 0>Not sure why I know that name.

00:41:17.545 --> 00:41:18.585
<v Speaker 0>Rings a bell.

00:41:19.145 --> 00:41:21.225
<v Speaker 0>Prominent committer for a year.

00:41:24.025 --> 00:41:25.785
<v Speaker 0>There's probably the person,

00:41:25.945 --> 00:41:28.585
<v Speaker 0>I mean, highly speculative based on their commit

00:41:28.585 --> 00:41:32.200
<v Speaker 0>history but maybe the project leads since 2016

00:41:32.200 --> 00:41:33.160
<v Speaker 0>just with

00:41:33.480 --> 00:41:35.320
<v Speaker 0>the amount of commit scenario. Maybe they could

00:41:35.320 --> 00:41:37.080
<v Speaker 0>maybe the lead wouldn't be committed as much

00:41:37.080 --> 00:41:39.800
<v Speaker 0>as that but definitely someone who's driving the

00:41:39.800 --> 00:41:41.080
<v Speaker 0>mobi project forward.

00:41:42.120 --> 00:41:44.375
<v Speaker 0>And then we've got other people. So and

00:41:44.375 --> 00:41:46.454
<v Speaker 0>there's a lot of density around the bottom

00:41:46.454 --> 00:41:48.775
<v Speaker 0>and that's a good sign for an open

00:41:48.775 --> 00:41:50.775
<v Speaker 0>source project. It just means we've got a

00:41:50.775 --> 00:41:52.454
<v Speaker 0>lot of people that are getting and then,

00:41:52.454 --> 00:41:54.055
<v Speaker 0>you know, commits in our spare time and

00:41:54.055 --> 00:41:56.055
<v Speaker 0>maybe it's not their full time job

00:41:56.454 --> 00:41:58.775
<v Speaker 0>or just, you know, trying to contribute to

00:41:58.775 --> 00:42:00.260
<v Speaker 0>the project as much as possible.

00:42:00.500 --> 00:42:02.820
<v Speaker 0>And these numbers on the Y axis are

00:42:02.820 --> 00:42:03.780
<v Speaker 0>quite large,

00:42:04.420 --> 00:42:06.180
<v Speaker 0>you know, so that's, you know, these people

00:42:06.180 --> 00:42:08.500
<v Speaker 0>are getting hundreds of commits. That's a lot

00:42:08.500 --> 00:42:10.500
<v Speaker 0>of commits on a monthly basis.

00:42:10.900 --> 00:42:12.260
<v Speaker 0>You know, even down to here over at

00:42:12.260 --> 00:42:14.420
<v Speaker 0>the start in '40, these are still substantial

00:42:14.420 --> 00:42:15.875
<v Speaker 0>committers to the project.

00:42:16.755 --> 00:42:18.675
<v Speaker 0>Just kind of dwarfed by some of the

00:42:18.675 --> 00:42:20.675
<v Speaker 0>more prominent people on the project.

00:42:21.315 --> 00:42:22.035
<v Speaker 0>Okay.

00:42:23.714 --> 00:42:26.275
<v Speaker 0>This big blue line is always my, my

00:42:26.275 --> 00:42:28.595
<v Speaker 0>favorite. So what do we see here? Well,

00:42:29.619 --> 00:42:31.300
<v Speaker 0>what I've tried to do with GET series

00:42:31.300 --> 00:42:32.260
<v Speaker 0>is actually

00:42:33.140 --> 00:42:33.940
<v Speaker 0>process

00:42:34.020 --> 00:42:35.620
<v Speaker 0>all of the commit messages.

00:42:36.260 --> 00:42:38.099
<v Speaker 0>And what I'm looking for is something that

00:42:38.099 --> 00:42:40.580
<v Speaker 0>represents a semantic or conventional commit.

00:42:41.300 --> 00:42:43.540
<v Speaker 0>So if you're not familiar with that.

00:42:44.904 --> 00:42:46.184
<v Speaker 0>It's

00:42:46.184 --> 00:42:47.305
<v Speaker 0>a specification

00:42:47.305 --> 00:42:48.825
<v Speaker 0>that says, you know, if you write your

00:42:48.825 --> 00:42:50.345
<v Speaker 0>commits in this format, you're gonna be able

00:42:50.345 --> 00:42:52.424
<v Speaker 0>to deliver some intent or meaning behind your

00:42:52.424 --> 00:42:54.585
<v Speaker 0>commit because we're all, I mean,

00:42:55.144 --> 00:42:56.744
<v Speaker 0>okay. I can always be for myself. As

00:42:56.744 --> 00:42:58.505
<v Speaker 0>a developer, it very easy for me just

00:42:58.505 --> 00:43:00.450
<v Speaker 0>to say effects, change stuff,

00:43:01.250 --> 00:43:04.130
<v Speaker 0>you know, new feature, whatever. And

00:43:04.610 --> 00:43:06.290
<v Speaker 0>that doesn't mean a lot

00:43:07.090 --> 00:43:09.010
<v Speaker 0>especially to a computer

00:43:09.330 --> 00:43:10.050
<v Speaker 0>but

00:43:10.290 --> 00:43:12.924
<v Speaker 0>even to other developers sometime we're lacking a

00:43:12.924 --> 00:43:15.244
<v Speaker 0>lot of context into why we're actually doing

00:43:15.244 --> 00:43:17.484
<v Speaker 0>something. So this is a specification where we

00:43:17.484 --> 00:43:19.484
<v Speaker 0>prefix all of our commits with fix, feat,

00:43:19.484 --> 00:43:21.165
<v Speaker 0>chore, refactor, test.

00:43:21.484 --> 00:43:23.484
<v Speaker 0>We then give a scope which part of

00:43:23.484 --> 00:43:25.085
<v Speaker 0>the component where which part of the project

00:43:25.085 --> 00:43:26.845
<v Speaker 0>or the components was I modifying

00:43:27.060 --> 00:43:28.980
<v Speaker 0>and then a description of that change. So

00:43:28.980 --> 00:43:31.540
<v Speaker 0>just by, you know, having this format to

00:43:31.540 --> 00:43:34.020
<v Speaker 0>adopt, it generally makes me at least,

00:43:34.500 --> 00:43:36.260
<v Speaker 0>you know, put in better messages.

00:43:37.220 --> 00:43:38.100
<v Speaker 0>But because

00:43:38.180 --> 00:43:39.860
<v Speaker 0>at least that the Docker project has never

00:43:39.860 --> 00:43:42.820
<v Speaker 0>adopted us as a standard which is what

00:43:41.745 --> 00:43:44.145
<v Speaker 0>we see with these big massive blue lines.

00:43:44.145 --> 00:43:46.545
<v Speaker 0>So what I'm gonna do is just

00:43:48.545 --> 00:43:49.425
<v Speaker 0>zoom

00:43:50.705 --> 00:43:51.985
<v Speaker 0>and like this.

00:43:53.745 --> 00:43:55.585
<v Speaker 0>And we can see

00:43:58.120 --> 00:44:00.680
<v Speaker 0>some people are doing it. So we've got

00:44:02.200 --> 00:44:03.720
<v Speaker 0>managed to pick up a type of windows

00:44:03.720 --> 00:44:04.840
<v Speaker 0>so there's a lot of

00:44:05.320 --> 00:44:07.560
<v Speaker 0>prefix on commit messages of windows cool on

00:44:07.560 --> 00:44:08.440
<v Speaker 0>by the looks of it.

00:44:09.734 --> 00:44:12.055
<v Speaker 0>The daemon has been tagged as the type.

00:44:12.214 --> 00:44:13.974
<v Speaker 0>We're not really getting the information I would

00:44:13.974 --> 00:44:15.815
<v Speaker 0>like to see here from this, which means

00:44:15.815 --> 00:44:17.255
<v Speaker 0>I'm not gonna get the same information that

00:44:17.255 --> 00:44:19.015
<v Speaker 0>I want in this next bay either,

00:44:19.494 --> 00:44:20.454
<v Speaker 0>which is where we try and work out

00:44:20.454 --> 00:44:22.055
<v Speaker 0>which component they're actually modifying.

00:44:22.690 --> 00:44:24.530
<v Speaker 0>But I do have a backup plan. So

00:44:24.530 --> 00:44:25.810
<v Speaker 0>don't worry about that.

00:44:27.010 --> 00:44:27.810
<v Speaker 0>Okay.

00:44:27.810 --> 00:44:30.290
<v Speaker 0>So when we ignore the nones

00:44:30.290 --> 00:44:31.970
<v Speaker 0>again, we're just not getting an idea here

00:44:31.970 --> 00:44:32.690
<v Speaker 0>because

00:44:34.210 --> 00:44:37.015
<v Speaker 0>that format was never adopted by project.

00:44:37.815 --> 00:44:39.255
<v Speaker 0>Now, because we're

00:44:39.494 --> 00:44:41.575
<v Speaker 0>making good progress with this dashboard,

00:44:42.375 --> 00:44:43.975
<v Speaker 0>I'm gonna risk it and put it on

00:44:43.975 --> 00:44:47.095
<v Speaker 0>Kubernetes now. So I should drop that and

00:44:47.095 --> 00:44:48.775
<v Speaker 0>we'll pull out more, but we don't need

00:44:48.775 --> 00:44:50.055
<v Speaker 0>it to reprocess that.

00:44:52.060 --> 00:44:54.060
<v Speaker 0>We'll fire up teller f again.

00:44:59.980 --> 00:45:00.859
<v Speaker 0>Okay.

00:45:00.859 --> 00:45:01.820
<v Speaker 0>That's running.

00:45:03.099 --> 00:45:03.820
<v Speaker 0>So,

00:45:05.339 --> 00:45:07.795
<v Speaker 0>we do have a plan getting past the

00:45:07.795 --> 00:45:10.275
<v Speaker 0>components and the conventional commits.

00:45:10.275 --> 00:45:12.915
<v Speaker 0>So where are my dashboards?

00:45:12.915 --> 00:45:15.075
<v Speaker 0>Okay. So we'll come back to the, these

00:45:15.075 --> 00:45:16.595
<v Speaker 0>table helpers in a minute.

00:45:17.395 --> 00:45:19.795
<v Speaker 0>What I'm more interested in right now

00:45:20.780 --> 00:45:22.860
<v Speaker 0>is a directory breakdown.

00:45:23.660 --> 00:45:24.220
<v Speaker 0>So

00:45:24.619 --> 00:45:28.380
<v Speaker 0>although the commit messages themselves cannot be processed,

00:45:28.780 --> 00:45:31.180
<v Speaker 0>I still can work out which directories the

00:45:31.180 --> 00:45:32.060
<v Speaker 0>commits are modifying.

00:45:33.765 --> 00:45:35.685
<v Speaker 0>Maybe it was a bit quick to start

00:45:35.685 --> 00:45:39.125
<v Speaker 0>running this Kubernetes thing because my dashboards are

00:45:41.605 --> 00:45:43.205
<v Speaker 0>going a little bit slow.

00:45:43.845 --> 00:45:45.685
<v Speaker 0>We'll give this a few seconds.

00:45:47.810 --> 00:45:48.610
<v Speaker 0>I may

00:45:49.170 --> 00:45:52.930
<v Speaker 0>either narrow the window or pause the telegraph

00:45:52.930 --> 00:45:54.530
<v Speaker 0>import. I'm not sure yet.

00:46:07.405 --> 00:46:08.445
<v Speaker 0>Decisions.

00:46:09.724 --> 00:46:10.205
<v Speaker 0>Oh.

00:46:18.759 --> 00:46:20.680
<v Speaker 0>Alright. Let's see. What are we doing? Buffer

00:46:20.680 --> 00:46:23.000
<v Speaker 0>filling us why it's here. So one ninety

00:46:23.000 --> 00:46:25.000
<v Speaker 0>three. So the buffer is still gonna out.

00:46:25.000 --> 00:46:26.920
<v Speaker 0>We're still processing that lane protocol.

00:46:27.935 --> 00:46:30.095
<v Speaker 0>We are writing a substantial amount of metrics

00:46:30.095 --> 00:46:31.855
<v Speaker 0>but the fact that the buffer is going

00:46:31.855 --> 00:46:33.055
<v Speaker 0>up means

00:46:33.135 --> 00:46:35.455
<v Speaker 0>I'm not really past the worst of it.

00:46:40.800 --> 00:46:42.080
<v Speaker 0>So decision,

00:46:42.080 --> 00:46:43.200
<v Speaker 0>make a decision.

00:46:46.480 --> 00:46:48.880
<v Speaker 0>Definitely broken that window now.

00:46:51.600 --> 00:46:55.280
<v Speaker 0>Alright. Let's narrow this down just for

00:46:56.775 --> 00:46:57.974
<v Speaker 0>a few minutes.

00:46:59.174 --> 00:47:00.375
<v Speaker 0>See if we can get an update to

00:47:00.375 --> 00:47:03.335
<v Speaker 0>start looking at those directory breakdowns before

00:47:03.335 --> 00:47:04.135
<v Speaker 0>I

00:47:05.335 --> 00:47:07.815
<v Speaker 0>make a decision to stop the Kubernetes import.

00:47:13.940 --> 00:47:15.620
<v Speaker 0>So I'm hoping that just by dropping this

00:47:15.620 --> 00:47:17.940
<v Speaker 0>time period down to the last kind of,

00:47:17.940 --> 00:47:19.380
<v Speaker 0>you know, eighteen months

00:47:19.620 --> 00:47:20.580
<v Speaker 0>and

00:47:21.940 --> 00:47:25.220
<v Speaker 0>the dashboards at the bottom will will load

00:47:24.315 --> 00:47:26.315
<v Speaker 0>and then we'll come back and do the

00:47:27.355 --> 00:47:29.275
<v Speaker 0>seven and a half year analysis.

00:47:29.994 --> 00:47:32.555
<v Speaker 0>Let's go. Where is directories?

00:47:32.555 --> 00:47:33.515
<v Speaker 0>There we go.

00:47:34.714 --> 00:47:36.714
<v Speaker 0>Let's try giving that a few seconds again.

00:47:47.820 --> 00:47:49.500
<v Speaker 0>Also doesn't help that I have quite a

00:47:49.500 --> 00:47:51.020
<v Speaker 0>lot of graphs on this board that are

00:47:51.020 --> 00:47:52.620
<v Speaker 0>all

00:47:51.965 --> 00:47:52.765
<v Speaker 0>fetching,

00:47:52.765 --> 00:47:55.405
<v Speaker 0>you know, a sizable amount of data.

00:47:57.805 --> 00:47:59.005
<v Speaker 0>It may have made sense to me if

00:47:59.005 --> 00:48:01.005
<v Speaker 0>we break this up for cloud larger

00:48:01.085 --> 00:48:02.045
<v Speaker 0>repositories.

00:48:03.245 --> 00:48:04.685
<v Speaker 0>And we can see that this number is

00:48:04.685 --> 00:48:05.885
<v Speaker 0>is still climbing.

00:48:07.240 --> 00:48:10.280
<v Speaker 0>It's a big commit. A big yesterday.

00:48:16.120 --> 00:48:17.720
<v Speaker 0>I got too confident.

00:48:32.995 --> 00:48:34.510
<v Speaker 0>Number's still up.

00:48:40.430 --> 00:48:42.990
<v Speaker 0>How big was it? It was

00:48:45.150 --> 00:48:46.750
<v Speaker 0>I said 40,000,000.

00:49:05.310 --> 00:49:07.790
<v Speaker 0>Mental note to self. Use a a code

00:49:07.790 --> 00:49:09.070
<v Speaker 0>VM next time

00:49:10.270 --> 00:49:11.470
<v Speaker 0>instead of my laptop.

00:49:17.005 --> 00:49:20.525
<v Speaker 0>So back to the 5,000,000,

00:49:20.525 --> 00:49:22.445
<v Speaker 0>six million in the queue.

00:49:24.045 --> 00:49:25.085
<v Speaker 0>40,000,000

00:49:25.085 --> 00:49:25.565
<v Speaker 0>total.

00:49:31.400 --> 00:49:33.480
<v Speaker 0>I can't attempt to just let yeah. Let's

00:49:33.480 --> 00:49:35.400
<v Speaker 0>let it run. And I have some graphs

00:49:35.400 --> 00:49:36.680
<v Speaker 0>there so at least I can talk about

00:49:36.680 --> 00:49:38.520
<v Speaker 0>something instead of mumbling to myself.

00:49:38.760 --> 00:49:39.480
<v Speaker 0>Okay.

00:49:39.880 --> 00:49:41.845
<v Speaker 0>So we're let's use the eighteen month. We'll

00:49:41.845 --> 00:49:43.365
<v Speaker 0>we'll come back to the seven year but

00:49:43.365 --> 00:49:44.005
<v Speaker 0>this

00:49:45.445 --> 00:49:48.325
<v Speaker 0>when a project doesn't or didn't implement conventional

00:49:48.325 --> 00:49:50.005
<v Speaker 0>commits very early, it can be difficult to

00:49:50.005 --> 00:49:52.405
<v Speaker 0>understand what was actually being worked on.

00:49:53.125 --> 00:49:55.205
<v Speaker 0>So another thing that GET series does is

00:49:55.205 --> 00:49:56.600
<v Speaker 0>it puts enough tagging

00:49:56.600 --> 00:49:58.680
<v Speaker 0>on the commits that it stores in Influx

00:49:58.680 --> 00:50:01.880
<v Speaker 0>that we can see just what directories the

00:50:01.880 --> 00:50:03.240
<v Speaker 0>changes were happening in.

00:50:03.800 --> 00:50:04.440
<v Speaker 0>So

00:50:04.920 --> 00:50:07.000
<v Speaker 0>we see here are some spikes.

00:50:07.000 --> 00:50:09.000
<v Speaker 0>So let's just test it.

00:50:09.240 --> 00:50:12.255
<v Speaker 0>Now we've got Kubernetes in here. Oh, wait.

00:50:12.255 --> 00:50:13.935
<v Speaker 0>That's probably why that was so slow.

00:50:15.454 --> 00:50:16.335
<v Speaker 0>Alright.

00:50:16.335 --> 00:50:17.935
<v Speaker 0>Let's jump back to Moby.

00:50:18.415 --> 00:50:19.375
<v Speaker 0>My pure computer.

00:50:25.080 --> 00:50:27.240
<v Speaker 0>Come on, take pad. You got this.

00:50:29.480 --> 00:50:29.880
<v Speaker 0>Maybe.

00:50:48.115 --> 00:50:49.235
<v Speaker 0>7,000,000

00:50:49.315 --> 00:50:49.795
<v Speaker 0>there.

00:50:50.369 --> 00:50:52.690
<v Speaker 0>We got some dodgy commits that can't be

00:50:52.690 --> 00:50:53.810
<v Speaker 0>parsed.

00:50:56.609 --> 00:50:59.650
<v Speaker 0>Yeah. I don't think I've got enough escaping

00:50:59.650 --> 00:51:02.049
<v Speaker 0>on some of the actual

00:51:03.345 --> 00:51:05.265
<v Speaker 0>when we process the the line of code

00:51:05.265 --> 00:51:07.345
<v Speaker 0>that changed within the the deltas.

00:51:07.345 --> 00:51:09.105
<v Speaker 0>There are some things I don't think I'm

00:51:09.105 --> 00:51:11.265
<v Speaker 0>checking for and escaping for. So, you know,

00:51:11.265 --> 00:51:12.385
<v Speaker 0>I need to go back and deal with

00:51:12.385 --> 00:51:12.865
<v Speaker 0>that.

00:51:14.460 --> 00:51:15.260
<v Speaker 0>Okay.

00:51:15.740 --> 00:51:18.380
<v Speaker 0>That's docker. This is docker. Right. So eighteen

00:51:18.380 --> 00:51:19.980
<v Speaker 0>months of the mobi project so we can

00:51:19.980 --> 00:51:22.060
<v Speaker 0>see a lot of work happened on the

00:51:22.060 --> 00:51:22.940
<v Speaker 0>integration

00:51:22.940 --> 00:51:25.580
<v Speaker 0>CLI here. No idea what that is.

00:51:28.780 --> 00:51:30.619
<v Speaker 0>Projects

00:51:29.585 --> 00:51:31.105
<v Speaker 0>commit surrender directory.

00:51:31.105 --> 00:51:32.704
<v Speaker 0>That's gonna make analysis about the pain in

00:51:32.704 --> 00:51:33.825
<v Speaker 0>the ass to be honest.

00:51:34.865 --> 00:51:37.424
<v Speaker 0>We can see, you know, go projects love

00:51:37.424 --> 00:51:38.865
<v Speaker 0>to keep as much code as possible in

00:51:38.865 --> 00:51:41.105
<v Speaker 0>the root directory. So generally I, you know,

00:51:41.105 --> 00:51:42.065
<v Speaker 0>seen a dot here.

00:51:42.840 --> 00:51:44.280
<v Speaker 0>You just get kinda used to it with

00:51:44.280 --> 00:51:45.160
<v Speaker 0>gold projects.

00:51:45.560 --> 00:51:47.480
<v Speaker 0>You can see he's been working the daemon.

00:51:49.000 --> 00:51:50.920
<v Speaker 0>We've got more vendor crap.

00:51:51.640 --> 00:51:53.160
<v Speaker 0>Let's just try and fill out some of

00:51:53.160 --> 00:51:55.240
<v Speaker 0>these top ones because I think they're skewing

00:51:55.240 --> 00:51:56.840
<v Speaker 0>our look at what's happening.

00:51:57.945 --> 00:51:59.305
<v Speaker 0>Woah. Okay.

00:52:00.745 --> 00:52:05.865
<v Speaker 0>What we got here is that's demonvendor.integrations

00:52:05.865 --> 00:52:06.825
<v Speaker 0>to you like.

00:52:08.265 --> 00:52:10.585
<v Speaker 0>I mean, the vendor stuff just makes it

00:52:10.585 --> 00:52:12.839
<v Speaker 0>really difficult to see where where effort is

00:52:12.839 --> 00:52:14.760
<v Speaker 0>and actually it's probably gonna skew most of

00:52:14.760 --> 00:52:15.640
<v Speaker 0>the stats.

00:52:17.079 --> 00:52:18.280
<v Speaker 0>That's disappointing.

00:52:19.000 --> 00:52:20.280
<v Speaker 0>So we can see some commits to the

00:52:20.280 --> 00:52:21.080
<v Speaker 0>API.

00:52:22.440 --> 00:52:23.480
<v Speaker 0>The HTTP,

00:52:23.480 --> 00:52:25.080
<v Speaker 0>you tell the API,

00:52:25.240 --> 00:52:28.655
<v Speaker 0>Docker file, the client. We can still see

00:52:28.655 --> 00:52:30.255
<v Speaker 0>where the effort is going

00:52:30.495 --> 00:52:32.975
<v Speaker 0>even though it's a little bit more difficult

00:52:33.295 --> 00:52:34.895
<v Speaker 0>in this project. And I can I can

00:52:34.895 --> 00:52:36.335
<v Speaker 0>keep trying to zoom in to pull out

00:52:36.335 --> 00:52:37.455
<v Speaker 0>more stuff, but

00:52:38.175 --> 00:52:39.935
<v Speaker 0>the daemon container

00:52:40.040 --> 00:52:40.920
<v Speaker 0>builder

00:52:41.160 --> 00:52:44.280
<v Speaker 0>pack? So we we can see where some

00:52:44.280 --> 00:52:45.960
<v Speaker 0>of the effort is, but I think

00:52:47.800 --> 00:52:49.560
<v Speaker 0>that vendor folder has kind of

00:52:50.359 --> 00:52:52.295
<v Speaker 0>causing a bit of a a haze over

00:52:52.295 --> 00:52:53.175
<v Speaker 0>what's happening.

00:52:55.975 --> 00:52:58.135
<v Speaker 0>Okay. What else do we have here?

00:52:58.775 --> 00:53:00.535
<v Speaker 0>We can just see the goal. I don't

00:53:00.535 --> 00:53:02.455
<v Speaker 0>know what the dot none is. I got

00:53:02.455 --> 00:53:04.055
<v Speaker 0>cop. So I mean, as a goal project,

00:53:04.055 --> 00:53:05.015
<v Speaker 0>this is what I would expect.

00:53:06.620 --> 00:53:08.380
<v Speaker 0>Alright. Something else we try to do with

00:53:08.380 --> 00:53:11.340
<v Speaker 0>get series is provide more helper of things.

00:53:11.340 --> 00:53:13.340
<v Speaker 0>Now we already kinda seen the

00:53:15.660 --> 00:53:17.900
<v Speaker 0>we already seen the fail extension one

00:53:19.925 --> 00:53:22.405
<v Speaker 0>on the overview dashboard.

00:53:23.365 --> 00:53:25.045
<v Speaker 0>Something else we tried to do is using

00:53:25.045 --> 00:53:27.045
<v Speaker 0>conventional commits. Let's try to pull out as

00:53:27.045 --> 00:53:29.605
<v Speaker 0>many of those components as possible. So if

00:53:29.605 --> 00:53:31.205
<v Speaker 0>you want to say,

00:53:31.925 --> 00:53:33.445
<v Speaker 0>get help with the daemon

00:53:34.085 --> 00:53:34.885
<v Speaker 0>and

00:53:35.380 --> 00:53:38.020
<v Speaker 0>let's say, okay, package control daemon. If I

00:53:38.020 --> 00:53:39.300
<v Speaker 0>wanna go speak to someone,

00:53:39.619 --> 00:53:41.220
<v Speaker 0>I wanna understand how to make changes to

00:53:41.220 --> 00:53:42.900
<v Speaker 0>this daemon. I now know who to go

00:53:42.900 --> 00:53:44.180
<v Speaker 0>and speak to, you know, these are the

00:53:44.180 --> 00:53:46.020
<v Speaker 0>people that have committed to this directory.

00:53:49.535 --> 00:53:51.295
<v Speaker 0>I wonder if that's

00:53:52.575 --> 00:53:53.055
<v Speaker 0>I

00:53:53.535 --> 00:53:55.455
<v Speaker 0>don't know this is reloaded properly.

00:53:58.415 --> 00:54:00.895
<v Speaker 0>Yeah. If I type stateful set or maybe

00:54:00.895 --> 00:54:02.015
<v Speaker 0>that's query is wrong.

00:54:04.670 --> 00:54:05.790
<v Speaker 0>Let's check.

00:54:09.789 --> 00:54:11.230
<v Speaker 0>It should be okay.

00:54:12.029 --> 00:54:14.190
<v Speaker 0>It's just I think everything's just

00:54:14.670 --> 00:54:16.430
<v Speaker 0>fallen to PCs with this import.

00:54:20.005 --> 00:54:22.965
<v Speaker 0>On the plus side, the buffer fullness

00:54:23.765 --> 00:54:24.885
<v Speaker 0>is dropping.

00:54:25.365 --> 00:54:27.285
<v Speaker 0>Should be back in business then soon.

00:54:30.965 --> 00:54:31.605
<v Speaker 0>So

00:54:31.925 --> 00:54:33.205
<v Speaker 0>let's try

00:54:34.450 --> 00:54:37.570
<v Speaker 0>something that definitely only gonna be in docker.

00:54:44.370 --> 00:54:52.530
<v Speaker 0>Let's think. Swarm.

00:54:50.405 --> 00:54:53.285
<v Speaker 0>Okay. So we could see a swarm Ritter.

00:54:54.085 --> 00:54:56.725
<v Speaker 0>Miranda's popping up because that's not a surprise.

00:54:57.125 --> 00:54:59.205
<v Speaker 0>Let me see some people here. So I

00:54:59.205 --> 00:54:59.845
<v Speaker 0>mean,

00:55:00.405 --> 00:55:03.045
<v Speaker 0>the TLDR here is these tables are really

00:55:03.045 --> 00:55:03.925
<v Speaker 0>really good way.

00:55:04.730 --> 00:55:07.049
<v Speaker 0>Not just, you know, you know, our IDEs

00:55:07.049 --> 00:55:09.049
<v Speaker 0>do support some level of introspection here where

00:55:09.049 --> 00:55:10.730
<v Speaker 0>we can see who modified that line last

00:55:10.730 --> 00:55:12.250
<v Speaker 0>or who was the last commit in this

00:55:12.250 --> 00:55:13.849
<v Speaker 0>file. We can do a GET log on

00:55:13.849 --> 00:55:16.490
<v Speaker 0>an individual file and get names but I

00:55:16.490 --> 00:55:18.089
<v Speaker 0>think this is just so much more valuable

00:55:18.089 --> 00:55:19.369
<v Speaker 0>in the fact that we can filter on

00:55:19.369 --> 00:55:20.089
<v Speaker 0>any directory

00:55:20.505 --> 00:55:22.105
<v Speaker 0>and we can see the commit counts as

00:55:22.105 --> 00:55:23.865
<v Speaker 0>well. We know who the prominent committers are

00:55:23.865 --> 00:55:25.785
<v Speaker 0>versus the people that probably can manifest a

00:55:25.785 --> 00:55:26.505
<v Speaker 0>typo.

00:55:26.744 --> 00:55:27.385
<v Speaker 0>So

00:55:28.105 --> 00:55:29.865
<v Speaker 0>this is a really good way to navigate

00:55:29.865 --> 00:55:32.184
<v Speaker 0>your code especially, you know, joining new companies

00:55:32.184 --> 00:55:34.184
<v Speaker 0>or looking at new open source projects and

00:55:34.440 --> 00:55:36.200
<v Speaker 0>trying to work out, right, how can I

00:55:36.200 --> 00:55:38.280
<v Speaker 0>get help for something I wanna do here?

00:55:39.560 --> 00:55:41.400
<v Speaker 0>We also have the concept of co owners

00:55:41.400 --> 00:55:43.319
<v Speaker 0>where we do the get series analysis. I've

00:55:43.319 --> 00:55:44.520
<v Speaker 0>seen that dot Derek.YAML

00:55:44.520 --> 00:55:46.440
<v Speaker 0>here. It's no surprise that Alex Elsie's name

00:55:46.440 --> 00:55:48.265
<v Speaker 0>is next to that. So could see is

00:55:48.265 --> 00:55:48.825
<v Speaker 0>the

00:55:49.145 --> 00:55:51.065
<v Speaker 0>founder and I think maintainer of the Derek

00:55:51.065 --> 00:55:51.945
<v Speaker 0>bot project.

00:55:52.745 --> 00:55:55.305
<v Speaker 0>We can also maybe just filter on

00:55:55.305 --> 00:55:56.025
<v Speaker 0>the

00:55:56.345 --> 00:55:59.785
<v Speaker 0>something specific within Docker. Let's

00:55:59.785 --> 00:56:01.545
<v Speaker 0>try this. Must be a secret fail of

00:56:01.545 --> 00:56:02.025
<v Speaker 0>some kind.

00:56:03.549 --> 00:56:04.510
<v Speaker 0>So see,

00:56:04.670 --> 00:56:06.030
<v Speaker 0>want to understand

00:56:09.230 --> 00:56:11.310
<v Speaker 0>vendor directory is gonna read

00:56:13.309 --> 00:56:14.030
<v Speaker 0>everything.

00:56:14.190 --> 00:56:15.549
<v Speaker 0>Just pick a random file.

00:56:16.185 --> 00:56:19.065
<v Speaker 0>Maybe I wanna improve the testing or integration

00:56:19.065 --> 00:56:21.465
<v Speaker 0>containers and the secret namespace stuff.

00:56:22.265 --> 00:56:24.745
<v Speaker 0>I'm assuming just say words that's in that

00:56:24.745 --> 00:56:26.985
<v Speaker 0>file name and that'll make sense. Right? And

00:56:26.985 --> 00:56:27.945
<v Speaker 0>what we can see is there's a few

00:56:27.945 --> 00:56:29.225
<v Speaker 0>people here I could go reach out to.

00:56:29.225 --> 00:56:30.745
<v Speaker 0>So the concept of a co owner would

00:56:30.745 --> 00:56:31.945
<v Speaker 0>just be who

00:56:32.130 --> 00:56:34.049
<v Speaker 0>again, who is the most prominent committer to

00:56:34.049 --> 00:56:35.010
<v Speaker 0>this file.

00:56:36.450 --> 00:56:38.210
<v Speaker 0>Something else that gets you this will try

00:56:38.210 --> 00:56:39.730
<v Speaker 0>and do for you is just give you

00:56:39.730 --> 00:56:42.849
<v Speaker 0>a table of every commit within the window.

00:56:42.930 --> 00:56:44.690
<v Speaker 0>So, you know, I am looking at eighteen

00:56:44.690 --> 00:56:46.210
<v Speaker 0>months right now but we can just scroll

00:56:46.210 --> 00:56:47.904
<v Speaker 0>through all these commits. If I click on

00:56:47.904 --> 00:56:49.984
<v Speaker 0>one, I see the author when it happened

00:56:50.305 --> 00:56:52.625
<v Speaker 0>and I can just copy that getcha. So

00:56:52.944 --> 00:56:55.105
<v Speaker 0>another if semantic commits were a thing, I'd

00:56:55.105 --> 00:56:56.464
<v Speaker 0>be able to break these commits down by

00:56:56.464 --> 00:56:58.385
<v Speaker 0>the component or features or effects and just

00:56:58.385 --> 00:57:00.224
<v Speaker 0>see the all the features that were released

00:57:00.224 --> 00:57:01.585
<v Speaker 0>in the last thirty days, all the fixes

00:57:01.585 --> 00:57:02.704
<v Speaker 0>that were released in the last thirty days,

00:57:02.760 --> 00:57:05.240
<v Speaker 0>all the defectoring and so forth. A nice

00:57:05.240 --> 00:57:06.600
<v Speaker 0>way to take a look at project

00:57:06.760 --> 00:57:09.160
<v Speaker 0>really painful over large windows. In fact if

00:57:09.160 --> 00:57:10.600
<v Speaker 0>I ran this across the seven and a

00:57:10.600 --> 00:57:11.320
<v Speaker 0>half years,

00:57:11.480 --> 00:57:13.160
<v Speaker 0>you know, it'd probably drag a little bit

00:57:13.160 --> 00:57:15.160
<v Speaker 0>but you know, I am running beta version

00:57:15.160 --> 00:57:17.000
<v Speaker 0>of the software so we have to

00:57:17.744 --> 00:57:19.345
<v Speaker 0>give it a little affordances.

00:57:20.065 --> 00:57:21.744
<v Speaker 0>Something else we try and graph is just

00:57:21.744 --> 00:57:23.825
<v Speaker 0>looking at files that are new within the

00:57:23.825 --> 00:57:25.664
<v Speaker 0>project. So that seems really good as a

00:57:25.664 --> 00:57:28.144
<v Speaker 0>way to understand any migration paths within the

00:57:28.144 --> 00:57:30.590
<v Speaker 0>project. Like if something I I see when

00:57:30.590 --> 00:57:32.910
<v Speaker 0>I analyzed the InfluxDB repositories was that I

00:57:32.910 --> 00:57:35.630
<v Speaker 0>could actually visualize through the graphing the transition

00:57:35.630 --> 00:57:37.470
<v Speaker 0>from JavaScript to TypeScript.

00:57:38.510 --> 00:57:40.670
<v Speaker 0>Analyzing the Mobi project, I'm not going to

00:57:40.670 --> 00:57:42.350
<v Speaker 0>see anything like that because it's just all

00:57:42.350 --> 00:57:42.990
<v Speaker 0>go mostly.

00:57:43.655 --> 00:57:45.335
<v Speaker 0>And then other ways to visualize that are

00:57:45.335 --> 00:57:47.415
<v Speaker 0>just a scar plot. What directories are changing?

00:57:47.415 --> 00:57:49.575
<v Speaker 0>What type of file extensions are changing?

00:57:50.295 --> 00:57:52.535
<v Speaker 0>We can also see deletions over time. So

00:57:52.535 --> 00:57:54.135
<v Speaker 0>you know, when you write enough go, you're

00:57:54.135 --> 00:57:56.295
<v Speaker 0>gonna be deleting enough go. You can see

00:57:56.295 --> 00:57:58.190
<v Speaker 0>PB files being deleted here. I'm sure what

00:57:58.190 --> 00:58:00.350
<v Speaker 0>those are. Some JSON files being deleted

00:58:00.590 --> 00:58:02.270
<v Speaker 0>and that dot none which has been a

00:58:02.270 --> 00:58:04.270
<v Speaker 0>regular pop up here. I'm not sure what

00:58:04.270 --> 00:58:04.990
<v Speaker 0>that is.

00:58:06.110 --> 00:58:08.030
<v Speaker 0>Something else that you use to kind of

00:58:09.070 --> 00:58:11.150
<v Speaker 0>understand how healthy a project is is always

00:58:11.150 --> 00:58:12.110
<v Speaker 0>by its documentation.

00:58:12.575 --> 00:58:13.214
<v Speaker 0>So

00:58:13.535 --> 00:58:15.535
<v Speaker 0>what I can't give you is a magic

00:58:15.535 --> 00:58:17.214
<v Speaker 0>number that you should have you know, one

00:58:17.214 --> 00:58:19.055
<v Speaker 0>line of documentation for every 10 lines of

00:58:19.055 --> 00:58:19.855
<v Speaker 0>real code.

00:58:20.815 --> 00:58:23.055
<v Speaker 0>But you can just you can always you'll

00:58:23.055 --> 00:58:25.214
<v Speaker 0>have a good understanding of your projects you're

00:58:25.214 --> 00:58:27.570
<v Speaker 0>contributing to or maintaining of whether you have

00:58:27.570 --> 00:58:29.490
<v Speaker 0>enough documentation. And if not, you wanna be

00:58:29.490 --> 00:58:31.250
<v Speaker 0>getting this purple line moving closer to the

00:58:31.250 --> 00:58:33.250
<v Speaker 0>blue. So the blue is just how many

00:58:33.250 --> 00:58:36.450
<v Speaker 0>lines of code were inserted within this window.

00:58:36.450 --> 00:58:38.130
<v Speaker 0>Like if we use this as an example,

00:58:38.130 --> 00:58:39.010
<v Speaker 0>there's five

00:58:39.250 --> 00:58:42.115
<v Speaker 0>five point three thousand lines of code that

00:58:42.115 --> 00:58:45.635
<v Speaker 0>were not comment markers versus the 1,200 lines

00:58:45.635 --> 00:58:47.635
<v Speaker 0>of code that does have a common marker.

00:58:47.795 --> 00:58:49.235
<v Speaker 0>Which is pretty good ratio.

00:58:49.395 --> 00:58:52.035
<v Speaker 0>You know, five to one. That's

00:58:52.275 --> 00:58:54.195
<v Speaker 0>I would definitely take that. Most some of

00:58:54.195 --> 00:58:55.875
<v Speaker 0>the open source projects I have analyzed, you

00:58:55.875 --> 00:58:56.995
<v Speaker 0>know, it's been closer to 20.

00:58:57.810 --> 00:58:59.250
<v Speaker 0>You know, one line of one line of

00:58:59.250 --> 00:59:01.010
<v Speaker 0>comment where every 20 lines are code and

00:59:01.010 --> 00:59:02.850
<v Speaker 0>that's always been slightly concerning.

00:59:03.010 --> 00:59:04.450
<v Speaker 0>And if we wanna just break down those

00:59:04.450 --> 00:59:06.130
<v Speaker 0>comments by the fail extensions, we can see

00:59:06.130 --> 00:59:08.290
<v Speaker 0>that the majority of all of the all

00:59:08.290 --> 00:59:09.730
<v Speaker 0>of the comments are in go code and

00:59:09.730 --> 00:59:11.795
<v Speaker 0>very little and anything else. There is a

00:59:11.795 --> 00:59:14.275
<v Speaker 0>bit of a bugging get series and that

00:59:14.275 --> 00:59:16.515
<v Speaker 0>markdown fails always show as comment because they

00:59:16.515 --> 00:59:18.675
<v Speaker 0>have headers on them. So yeah.

00:59:18.835 --> 00:59:19.395
<v Speaker 0>It

00:59:20.515 --> 00:59:21.795
<v Speaker 0>does the best it can.

00:59:22.515 --> 00:59:24.355
<v Speaker 0>Did I skip anything else when I was

00:59:24.355 --> 00:59:27.809
<v Speaker 0>running through this dashboard? No. That's disappointing. There's

00:59:27.809 --> 00:59:28.930
<v Speaker 0>no conventional

00:59:28.930 --> 00:59:30.450
<v Speaker 0>commits. We did get a look at the

00:59:30.450 --> 00:59:32.850
<v Speaker 0>directories over some window.

00:59:33.730 --> 00:59:35.010
<v Speaker 0>Still flushing.

00:59:35.890 --> 00:59:37.170
<v Speaker 0>But it would've been nice to see a

00:59:37.170 --> 00:59:37.809
<v Speaker 0>bit more there.

00:59:38.395 --> 00:59:40.715
<v Speaker 0>So projects that adopt conventional commits are gonna

00:59:40.715 --> 00:59:42.155
<v Speaker 0>get a lot more value by taking a

00:59:42.155 --> 00:59:43.035
<v Speaker 0>look at this.

00:59:44.235 --> 00:59:46.715
<v Speaker 0>Now the year on your analysis repository

00:59:48.075 --> 00:59:49.035
<v Speaker 0>dashboard

00:59:49.275 --> 00:59:49.995
<v Speaker 0>even

00:59:50.315 --> 00:59:53.195
<v Speaker 0>gives us a way to just kinda

00:59:52.869 --> 00:59:54.710
<v Speaker 0>look at the lifetime of the project

00:59:56.470 --> 00:59:57.990
<v Speaker 0>comparing year after year.

00:59:58.950 --> 01:00:01.350
<v Speaker 0>I don't think I've really got this dashboard

01:00:01.589 --> 01:00:02.790
<v Speaker 0>great yet.

01:00:03.349 --> 01:00:03.990
<v Speaker 0>Disclaimer.

01:00:06.365 --> 01:00:07.405
<v Speaker 0>But you can

01:00:07.805 --> 01:00:09.484
<v Speaker 0>try and pick up a few patterns. So

01:00:09.484 --> 01:00:10.925
<v Speaker 0>we don't wanna look at Kubernetes.

01:00:10.925 --> 01:00:12.045
<v Speaker 0>And what I'm gonna do is just do

01:00:12.045 --> 01:00:13.005
<v Speaker 0>quarters

01:00:13.005 --> 01:00:14.285
<v Speaker 0>and we'll do Mobi.

01:00:19.100 --> 01:00:20.380
<v Speaker 0>Give us a second.

01:00:21.980 --> 01:00:24.300
<v Speaker 0>So even though the time period here is

01:00:24.300 --> 01:00:26.620
<v Speaker 0>one year, the 01/01/2019

01:00:26.620 --> 01:00:28.860
<v Speaker 0>to 01/01/2020,

01:00:29.660 --> 01:00:32.625
<v Speaker 0>it's actually just pulling out all data.

01:00:33.425 --> 01:00:34.865
<v Speaker 0>I think it does like a twenty year

01:00:34.865 --> 01:00:35.665
<v Speaker 0>scan.

01:00:37.265 --> 01:00:39.745
<v Speaker 0>But then aligns the time windows so that

01:00:39.745 --> 01:00:42.305
<v Speaker 0>we actually see each year here starts

01:00:42.305 --> 01:00:44.065
<v Speaker 0>here and ends here and we can see

01:00:44.065 --> 01:00:45.980
<v Speaker 0>where the the peaks are. So we can

01:00:45.980 --> 01:00:48.540
<v Speaker 0>see that as far as releases go, 2015

01:00:48.540 --> 01:00:50.460
<v Speaker 0>was a huge year for Docker or the

01:00:50.460 --> 01:00:51.340
<v Speaker 0>mobile project.

01:00:52.380 --> 01:00:54.300
<v Speaker 0>And then we can kinda see there as

01:00:54.300 --> 01:00:56.140
<v Speaker 0>obviously some of it, a little bit of

01:00:56.140 --> 01:00:58.615
<v Speaker 0>a release cadence here between the two purple.

01:00:58.615 --> 01:01:01.335
<v Speaker 0>So what's that? 2017 and 2018, you know,

01:01:01.335 --> 01:01:04.135
<v Speaker 0>pretty strong cadence lines are together.

01:01:04.694 --> 01:01:06.295
<v Speaker 0>And then a little bit variable for other

01:01:06.295 --> 01:01:08.535
<v Speaker 0>years. With regards to commit counts, we can

01:01:08.535 --> 01:01:11.974
<v Speaker 0>see their best year probably was

01:01:11.190 --> 01:01:12.790
<v Speaker 0>that's 2015.

01:01:14.390 --> 01:01:15.830
<v Speaker 0>Yeah. 2015

01:01:16.230 --> 01:01:17.030
<v Speaker 0>or

01:01:17.510 --> 01:01:20.710
<v Speaker 0>2038

01:01:21.910 --> 01:01:23.030
<v Speaker 0>with 2019

01:01:23.030 --> 01:01:25.829
<v Speaker 0>being pretty much the lowest year in terms

01:01:25.829 --> 01:01:26.790
<v Speaker 0>of commits ever.

01:01:27.885 --> 01:01:30.285
<v Speaker 0>Slightly concerning. I don't think Docker is in

01:01:30.285 --> 01:01:32.285
<v Speaker 0>particularly great shape with those. Just looking at

01:01:32.285 --> 01:01:34.205
<v Speaker 0>those graphs and we've seen that earlier too.

01:01:36.045 --> 01:01:37.565
<v Speaker 0>These dashboards

01:01:37.965 --> 01:01:38.525
<v Speaker 0>can be

01:01:40.370 --> 01:01:42.050
<v Speaker 0>kind of useful if you know the people

01:01:42.050 --> 01:01:43.330
<v Speaker 0>and you wanna understand

01:01:46.290 --> 01:01:47.970
<v Speaker 0>who's contributing what to your project. But what

01:01:47.970 --> 01:01:49.890
<v Speaker 0>we can see here is that, you know,

01:01:49.890 --> 01:01:51.570
<v Speaker 0>the most substantial year

01:01:51.810 --> 01:01:54.255
<v Speaker 0>gauging it by the number of commits, which

01:01:54.255 --> 01:01:56.095
<v Speaker 0>is of course not no way to measure

01:01:56.095 --> 01:01:57.855
<v Speaker 0>productivity of a developer. But we can see

01:01:57.855 --> 01:01:59.695
<v Speaker 0>that, you know, 2013,

01:02:00.255 --> 01:02:01.375
<v Speaker 0>Julian has

01:02:02.974 --> 01:02:03.775
<v Speaker 0>a a

01:02:04.734 --> 01:02:07.454
<v Speaker 0>substantial amount of commits. It's the highest over

01:02:07.454 --> 01:02:10.050
<v Speaker 0>any other year per single contributor.

01:02:10.210 --> 01:02:12.130
<v Speaker 0>Michael Crosby in 2014

01:02:12.130 --> 01:02:13.410
<v Speaker 0>to 2015.

01:02:14.450 --> 01:02:17.569
<v Speaker 0>What I've got? I've got Solomon in 2013

01:02:17.569 --> 01:02:18.930
<v Speaker 0>and,

01:02:19.170 --> 01:02:22.210
<v Speaker 0>you know, taken over for 2019

01:02:22.210 --> 01:02:24.205
<v Speaker 0>and 2020. We've Sebastian.

01:02:24.765 --> 01:02:26.365
<v Speaker 0>You can just kind of highlight

01:02:27.964 --> 01:02:30.205
<v Speaker 0>who the driving force behind the project is.

01:02:30.445 --> 01:02:32.525
<v Speaker 0>And again, if we had the conventional commits,

01:02:32.525 --> 01:02:34.845
<v Speaker 0>this these two would be fantastic too. And

01:02:34.845 --> 01:02:36.605
<v Speaker 0>that we'd be able to understand,

01:02:37.005 --> 01:02:40.500
<v Speaker 0>you know, how does 2019 compared to 2017

01:02:40.500 --> 01:02:43.220
<v Speaker 0>and '20 '16 or 2018 with regards to

01:02:43.220 --> 01:02:45.220
<v Speaker 0>how much features we've delivered versus how many

01:02:45.220 --> 01:02:46.580
<v Speaker 0>bugs we fixed. So

01:02:46.980 --> 01:02:48.500
<v Speaker 0>because we don't have that data with the

01:02:48.500 --> 01:02:50.340
<v Speaker 0>Docker project, these graphs

01:02:50.660 --> 01:02:52.340
<v Speaker 0>don't drive a lot of particular use.

01:02:55.955 --> 01:02:57.875
<v Speaker 0>And this wall of shame, I really need

01:02:57.875 --> 01:03:00.595
<v Speaker 0>to rename that. It's such a dreadful name.

01:03:00.595 --> 01:03:02.435
<v Speaker 0>It's basically just a random one where I

01:03:02.435 --> 01:03:03.555
<v Speaker 0>had like an idea

01:03:03.795 --> 01:03:07.235
<v Speaker 0>of things I would try and

01:03:07.750 --> 01:03:09.670
<v Speaker 0>delete leaderboard style stuff.

01:03:10.470 --> 01:03:12.550
<v Speaker 0>The challenge for the leaderboard stuff is the

01:03:12.550 --> 01:03:14.630
<v Speaker 0>queries are super slow.

01:03:14.710 --> 01:03:15.270
<v Speaker 0>So

01:03:16.550 --> 01:03:17.510
<v Speaker 0>let's

01:03:17.510 --> 01:03:19.270
<v Speaker 0>check if telegraph is finished first.

01:03:19.990 --> 01:03:21.910
<v Speaker 0>So we got 1,000,000 to go.

01:03:25.265 --> 01:03:25.984
<v Speaker 0>Okay.

01:03:27.424 --> 01:03:28.865
<v Speaker 0>Let's take a look at the last year

01:03:28.865 --> 01:03:31.185
<v Speaker 0>first. Shouldn't be too painful.

01:03:32.625 --> 01:03:34.224
<v Speaker 0>And then maybe we'll try and widen that

01:03:34.224 --> 01:03:36.065
<v Speaker 0>as the Kubernetes stuff finishes.

01:03:39.420 --> 01:03:41.420
<v Speaker 0>Alright. So what this does as it tries

01:03:41.420 --> 01:03:42.700
<v Speaker 0>to calculate

01:03:42.700 --> 01:03:43.420
<v Speaker 0>the

01:03:48.700 --> 01:03:49.740
<v Speaker 0>Prower robot.

01:03:50.234 --> 01:03:53.994
<v Speaker 0>So that doesn't do a selector on repository,

01:03:55.035 --> 01:03:56.875
<v Speaker 0>but we should add that, shouldn't we?

01:03:58.954 --> 01:04:01.194
<v Speaker 0>So let's modify

01:04:02.210 --> 01:04:03.250
<v Speaker 0>That's crazy.

01:04:04.210 --> 01:04:05.650
<v Speaker 0>We're gonna say

01:04:05.730 --> 01:04:07.490
<v Speaker 0>where repository

01:04:11.170 --> 01:04:12.369
<v Speaker 0>I know computer.

01:04:13.009 --> 01:04:14.130
<v Speaker 0>I'm beating you pretty hard.

01:04:17.635 --> 01:04:19.395
<v Speaker 0>We'll just copy this. We'll add this to

01:04:19.395 --> 01:04:20.915
<v Speaker 0>all the dashboards here.

01:04:23.875 --> 01:04:24.835
<v Speaker 0>And go.

01:04:25.714 --> 01:04:27.555
<v Speaker 0>I didn't submit at first, but I'm hoping

01:04:27.555 --> 01:04:29.474
<v Speaker 0>the query should be okay. We're gonna check

01:04:29.474 --> 01:04:30.515
<v Speaker 0>this off Kubernetes.

01:04:31.740 --> 01:04:33.500
<v Speaker 0>And we're gonna modify

01:04:33.900 --> 01:04:35.260
<v Speaker 0>these ones here.

01:04:38.300 --> 01:04:40.540
<v Speaker 0>So just making sure that they're all using

01:04:40.540 --> 01:04:42.300
<v Speaker 0>the repository filter.

01:04:43.180 --> 01:04:45.414
<v Speaker 0>And the reason the repository filter wasn't on

01:04:45.414 --> 01:04:46.934
<v Speaker 0>this is I was running it against all

01:04:46.934 --> 01:04:47.815
<v Speaker 0>of InfluxDB's

01:04:47.815 --> 01:04:50.454
<v Speaker 0>repositories and that was actually kinda useful to

01:04:50.454 --> 01:04:52.694
<v Speaker 0>have a global view, but just because I'm

01:04:52.694 --> 01:04:54.615
<v Speaker 0>doing a couple of open source ones here,

01:04:54.694 --> 01:04:56.535
<v Speaker 0>really doesn't make a lot of sense.

01:04:58.950 --> 01:05:00.230
<v Speaker 0>Okay. So

01:05:01.349 --> 01:05:03.910
<v Speaker 0>so this first one just kinda works out

01:05:03.910 --> 01:05:05.910
<v Speaker 0>the highest number of commits per person per

01:05:05.910 --> 01:05:08.310
<v Speaker 0>month and then shows us the most the

01:05:09.109 --> 01:05:09.910
<v Speaker 0>the months

01:05:10.390 --> 01:05:11.990
<v Speaker 0>or just some by the month of commits.

01:05:11.990 --> 01:05:13.705
<v Speaker 0>So you can see, you know, we already

01:05:13.705 --> 01:05:16.425
<v Speaker 0>saw from previous graphs that Sebastian from the

01:05:16.425 --> 01:05:18.265
<v Speaker 0>last eighteen months has really been the driving

01:05:18.265 --> 01:05:20.105
<v Speaker 0>force behind the the mobile project.

01:05:20.505 --> 01:05:21.145
<v Speaker 0>Has

01:05:21.545 --> 01:05:22.905
<v Speaker 0>again, don't just commit to this in a

01:05:22.905 --> 01:05:26.000
<v Speaker 0>productivity, but in March 2019, you know, hammered

01:05:26.000 --> 01:05:27.280
<v Speaker 0>at 375

01:05:27.280 --> 01:05:29.760
<v Speaker 0>commits. That's that's more than 10 commits to

01:05:29.760 --> 01:05:31.120
<v Speaker 0>master a day.

01:05:31.680 --> 01:05:33.040
<v Speaker 0>I mean, that's substantial.

01:05:37.119 --> 01:05:38.240
<v Speaker 0>Come on computer.

01:05:38.720 --> 01:05:40.480
<v Speaker 0>Not long to go. I'll give you a

01:05:40.480 --> 01:05:40.800
<v Speaker 0>break.

01:05:56.860 --> 01:05:57.580
<v Speaker 0>I mean,

01:05:58.940 --> 01:06:02.140
<v Speaker 0>these queries are are particularly rough especially when

01:06:02.140 --> 01:06:03.660
<v Speaker 0>it's a holiday in the mean days coding

01:06:03.660 --> 01:06:06.060
<v Speaker 0>one because they are doing aggregates across

01:06:06.220 --> 01:06:06.620
<v Speaker 0>days.

01:06:08.195 --> 01:06:10.195
<v Speaker 0>The mean days coding analyses every

01:06:10.595 --> 01:06:13.075
<v Speaker 0>groups all the commits by day per author

01:06:13.315 --> 01:06:15.395
<v Speaker 0>and then tries to give you an arbitrary

01:06:15.395 --> 01:06:17.315
<v Speaker 0>number like you know, if you were to

01:06:17.315 --> 01:06:19.315
<v Speaker 0>work on this project how many days would

01:06:19.315 --> 01:06:21.395
<v Speaker 0>you how many days per

01:06:21.570 --> 01:06:23.010
<v Speaker 0>month would you contribute?

01:06:23.490 --> 01:06:25.330
<v Speaker 0>Would you spend contributing code to the master

01:06:25.330 --> 01:06:25.970
<v Speaker 0>branch?

01:06:26.370 --> 01:06:28.450
<v Speaker 0>So it's usually the higher that number generally

01:06:28.450 --> 01:06:31.090
<v Speaker 0>shows the maturity of the project because

01:06:31.650 --> 01:06:33.810
<v Speaker 0>pull requests are being handled

01:06:34.685 --> 01:06:35.885
<v Speaker 0>relatively quickly.

01:06:37.325 --> 01:06:40.045
<v Speaker 0>The CICD means that those those changes are

01:06:40.045 --> 01:06:41.565
<v Speaker 0>I've got a level of confidence. There's good

01:06:41.565 --> 01:06:42.285
<v Speaker 0>testing.

01:06:42.365 --> 01:06:44.445
<v Speaker 0>It just means that, you know, that cycle

01:06:44.445 --> 01:06:46.765
<v Speaker 0>time from creating a branch pushing the first

01:06:46.765 --> 01:06:48.765
<v Speaker 0>line of code to the branch is really

01:06:48.765 --> 01:06:49.405
<v Speaker 0>really important.

01:06:50.720 --> 01:06:52.160
<v Speaker 0>Maybe more so.

01:06:53.280 --> 01:06:55.520
<v Speaker 0>And if you know, private organizations with private

01:06:55.520 --> 01:06:58.079
<v Speaker 0>repositories than an open source, open source can

01:06:58.079 --> 01:06:59.920
<v Speaker 0>have a certain of affordance of moving a

01:06:59.920 --> 01:07:00.559
<v Speaker 0>little bit slower.

01:07:04.635 --> 01:07:06.475
<v Speaker 0>Okay. Let's see what's going on with telegraph

01:07:06.475 --> 01:07:08.315
<v Speaker 0>here. Because we still want to be able

01:07:08.315 --> 01:07:10.635
<v Speaker 0>to run at least get the quick look

01:07:10.635 --> 01:07:12.475
<v Speaker 0>at Kubernetes before we finish up.

01:07:19.420 --> 01:07:21.820
<v Speaker 0>I just realized I wonder if the

01:07:23.180 --> 01:07:25.100
<v Speaker 0>load my machine is under has maybe caused

01:07:25.100 --> 01:07:27.260
<v Speaker 0>any problems with the stream. Although I don't

01:07:27.260 --> 01:07:29.260
<v Speaker 0>think I've had any comments to suggest that,

01:07:29.260 --> 01:07:29.500
<v Speaker 0>but

01:07:39.385 --> 01:07:39.705
<v Speaker 0>computer.

01:09:03.665 --> 01:09:06.465
<v Speaker 0>I mean, I can't even get focus on

01:09:06.465 --> 01:09:07.185
<v Speaker 0>my terminal.

01:09:22.649 --> 01:09:24.330
<v Speaker 0>Okay. So at least you can hear me

01:09:24.330 --> 01:09:25.130
<v Speaker 0>but

01:09:26.410 --> 01:09:29.529
<v Speaker 0>what we have now is my

01:09:29.035 --> 01:09:31.595
<v Speaker 0>computer seems to have completely locked up. I

01:09:31.595 --> 01:09:34.635
<v Speaker 0>cannot focus on my terminal to kill telegraph.

01:09:35.595 --> 01:09:37.354
<v Speaker 0>Visual Studio Code

01:09:37.435 --> 01:09:39.675
<v Speaker 0>is trying to display an error message and

01:09:39.675 --> 01:09:40.635
<v Speaker 0>failing miserably.

01:09:42.219 --> 01:09:43.899
<v Speaker 0>Yeah.

01:09:45.739 --> 01:09:47.419
<v Speaker 0>It's just locked up.

01:09:47.899 --> 01:09:48.939
<v Speaker 0>Pretty bad.

01:09:50.380 --> 01:09:51.899
<v Speaker 0>So I don't know whether to

01:09:55.579 --> 01:09:55.820
<v Speaker 0>damn.

01:10:08.255 --> 01:10:10.255
<v Speaker 0>My browser is unresponsive.

01:10:10.335 --> 01:10:10.895
<v Speaker 0>Telegraph.

01:10:13.490 --> 01:10:15.250
<v Speaker 0>Oh, I've got focus, can I kill it?

01:11:08.150 --> 01:11:09.510
<v Speaker 0>I've lost my mouse.

01:11:36.755 --> 01:11:39.689
<v Speaker 0>Alright. I have typed kill all telegraph.

01:11:40.090 --> 01:11:41.929
<v Speaker 0>Let's see if I can oh, I spelled

01:11:41.929 --> 01:11:43.690
<v Speaker 0>telegraph wrong. Kill

01:11:43.690 --> 01:11:44.489
<v Speaker 0>all.

01:11:46.969 --> 01:11:48.170
<v Speaker 0>Let's see if I can just get it

01:11:48.170 --> 01:11:48.570
<v Speaker 0>killed.

01:12:04.380 --> 01:12:06.220
<v Speaker 0>It's getting a bit more responsive.

01:12:08.700 --> 01:12:09.420
<v Speaker 0>Is it dead?

01:12:18.824 --> 01:12:20.504
<v Speaker 0>Don't kill pad one.

01:12:26.025 --> 01:12:28.264
<v Speaker 0>Okay. That's it. Alright. Good. Wow.

01:12:31.380 --> 01:12:33.140
<v Speaker 0>Alright. So what happens?

01:12:36.660 --> 01:12:38.260
<v Speaker 0>I don't know how it stops. I have

01:12:38.260 --> 01:12:38.900
<v Speaker 0>to up.

01:12:39.460 --> 01:12:42.340
<v Speaker 0>It's load spaced to 35

01:12:42.340 --> 01:12:43.540
<v Speaker 0>on my

01:12:43.940 --> 01:12:45.540
<v Speaker 0>eight core machine. Nice.

01:12:47.994 --> 01:12:49.195
<v Speaker 0>Ram usage

01:12:49.275 --> 01:12:51.834
<v Speaker 0>on Influx is set at 50%,

01:12:52.715 --> 01:12:53.514
<v Speaker 0>but

01:12:53.994 --> 01:12:55.274
<v Speaker 0>I'm responsive.

01:12:57.434 --> 01:12:59.850
<v Speaker 0>Code deaf not crashed. We can open that

01:12:59.850 --> 01:13:00.489
<v Speaker 0>again.

01:13:04.010 --> 01:13:06.570
<v Speaker 0>And I'll just hopefully tape that back.

01:13:12.165 --> 01:13:14.885
<v Speaker 0>Okay.

01:13:22.485 --> 01:13:24.165
<v Speaker 0>Let's just make sure.

01:13:26.329 --> 01:13:28.169
<v Speaker 0>Alright. Well, Influx is still running.

01:13:28.489 --> 01:13:29.770
<v Speaker 0>It's over lining here.

01:13:39.635 --> 01:13:41.555
<v Speaker 0>That's real load this dashboard.

01:13:56.520 --> 01:13:57.880
<v Speaker 0>That's a bit better.

01:13:59.720 --> 01:14:01.960
<v Speaker 0>So this this table here tries to kind

01:14:01.960 --> 01:14:04.440
<v Speaker 0>of tell you how many days or how

01:14:04.440 --> 01:14:05.960
<v Speaker 0>many days of the month you'll be pushing

01:14:05.960 --> 01:14:07.965
<v Speaker 0>code to the master branch. For an open

01:14:07.965 --> 01:14:09.245
<v Speaker 0>source project, know,

01:14:10.845 --> 01:14:11.725
<v Speaker 0>being around

01:14:12.285 --> 01:14:13.165
<v Speaker 0>eight days,

01:14:13.645 --> 01:14:14.844
<v Speaker 0>it's it's pretty good.

01:14:15.565 --> 01:14:17.405
<v Speaker 0>I'm analyzing more be here. This could also

01:14:17.405 --> 01:14:18.605
<v Speaker 0>just be an indicator.

01:14:19.005 --> 01:14:19.485
<v Speaker 0>I mean,

01:14:20.150 --> 01:14:21.909
<v Speaker 0>this may be

01:14:23.349 --> 01:14:25.749
<v Speaker 0>much more of a

01:14:26.869 --> 01:14:27.590
<v Speaker 0>commitment

01:14:28.790 --> 01:14:31.669
<v Speaker 0>by the company rather than open source contributions.

01:14:32.230 --> 01:14:33.750
<v Speaker 0>Just because these numbers are higher than I

01:14:33.750 --> 01:14:35.465
<v Speaker 0>would expect for an open source project, which

01:14:35.465 --> 01:14:38.025
<v Speaker 0>means that probably a substantial amount of the

01:14:38.025 --> 01:14:40.345
<v Speaker 0>committers are employed by Docker rather than open

01:14:40.345 --> 01:14:42.745
<v Speaker 0>source. But that's obviously a little bit of

01:14:42.745 --> 01:14:44.344
<v Speaker 0>speculation at the moment.

01:14:45.625 --> 01:14:47.784
<v Speaker 0>Okay. So before we finish,

01:14:48.665 --> 01:14:50.265
<v Speaker 0>let's come back into the overview.

01:14:52.950 --> 01:14:54.550
<v Speaker 0>In fact, now let's just go straight into

01:14:54.550 --> 01:14:56.230
<v Speaker 0>the single repo. Let's see how much of

01:14:56.230 --> 01:14:57.510
<v Speaker 0>Kubernetes we got.

01:15:01.750 --> 01:15:03.990
<v Speaker 0>And I think I'll I'll what I'll do

01:15:03.990 --> 01:15:05.925
<v Speaker 0>is I'll do my

01:15:06.165 --> 01:15:09.925
<v Speaker 0>own session with Kubernetes with a chunky VM

01:15:10.405 --> 01:15:13.124
<v Speaker 0>just to ensure we have no issues.

01:15:14.485 --> 01:15:15.764
<v Speaker 0>But I still wanna see if we can

01:15:15.764 --> 01:15:16.804
<v Speaker 0>take a look at it just now.

01:15:22.070 --> 01:15:24.630
<v Speaker 0>Okay. So I can see that we processed

01:15:24.630 --> 01:15:26.309
<v Speaker 0>55,000

01:15:26.550 --> 01:15:27.429
<v Speaker 0>commits

01:15:34.405 --> 01:15:36.645
<v Speaker 0>of 92,000.

01:15:36.645 --> 01:15:37.285
<v Speaker 0>Now,

01:15:38.325 --> 01:15:39.525
<v Speaker 0>doesn't tell me

01:15:41.445 --> 01:15:43.285
<v Speaker 0>how much of the deltas we processed.

01:15:44.100 --> 01:15:45.780
<v Speaker 0>Maybe we'll get a little bit of an

01:15:45.780 --> 01:15:47.219
<v Speaker 0>indication of that as we go through this

01:15:47.219 --> 01:15:48.980
<v Speaker 0>dashboard. So let's just do that and see

01:15:48.980 --> 01:15:50.580
<v Speaker 0>what happens. So we can get a seed

01:15:50.580 --> 01:15:52.580
<v Speaker 0>inception of Kubernetes seems to be around the

01:15:52.580 --> 01:15:53.939
<v Speaker 0>2015 mark.

01:15:54.020 --> 01:15:56.260
<v Speaker 0>I think that's right. I don't think we're

01:15:56.260 --> 01:15:57.219
<v Speaker 0>missing too.

01:15:58.555 --> 01:15:59.835
<v Speaker 0>I don't think we're missing too much of

01:15:59.835 --> 01:16:00.955
<v Speaker 0>the commits from here.

01:16:03.035 --> 01:16:05.275
<v Speaker 0>May just be later commits. So

01:16:06.315 --> 01:16:09.435
<v Speaker 0>I think what I like about this graph

01:16:09.435 --> 01:16:11.275
<v Speaker 0>here from the Kubernetes perspective

01:16:11.810 --> 01:16:13.889
<v Speaker 0>Okay. So we've got deletions and a

01:16:16.050 --> 01:16:19.010
<v Speaker 0>kind of red color insertions and purple now

01:16:19.010 --> 01:16:20.929
<v Speaker 0>rather than the blue from earlier

01:16:21.090 --> 01:16:22.930
<v Speaker 0>is that we do see

01:16:25.465 --> 01:16:27.864
<v Speaker 0>A lot of features being driven, you know,

01:16:27.864 --> 01:16:28.985
<v Speaker 0>the insertions.

01:16:29.545 --> 01:16:32.345
<v Speaker 0>Higher for the entire what? First year and

01:16:32.345 --> 01:16:33.545
<v Speaker 0>a half fat.

01:16:33.785 --> 01:16:36.265
<v Speaker 0>Insertions are just consistently hired, aren't they? This

01:16:36.265 --> 01:16:38.080
<v Speaker 0>is always right in your code, new code,

01:16:38.080 --> 01:16:39.840
<v Speaker 0>a little bit of deletions here, but there

01:16:39.840 --> 01:16:41.120
<v Speaker 0>are still a strong,

01:16:41.280 --> 01:16:44.320
<v Speaker 0>strong sense of changes and deletions throughout.

01:16:45.280 --> 01:16:46.480
<v Speaker 0>Let's see what we can work out down

01:16:46.480 --> 01:16:46.960
<v Speaker 0>here.

01:16:48.000 --> 01:16:49.840
<v Speaker 0>With regards to what our average commit looks

01:16:49.840 --> 01:16:51.200
<v Speaker 0>like in this repository,

01:16:52.735 --> 01:16:55.135
<v Speaker 0>two files, 15 insertions,

01:16:55.295 --> 01:16:59.055
<v Speaker 0>slightly larger case up to 300. So again,

01:17:01.295 --> 01:17:03.855
<v Speaker 0>just to say in the commits are generally

01:17:03.855 --> 01:17:05.855
<v Speaker 0>focused, they're not too large, you know, there

01:17:05.855 --> 01:17:08.460
<v Speaker 0>are some projects you realize where, you know,

01:17:08.460 --> 01:17:08.940
<v Speaker 0>the

01:17:09.580 --> 01:17:12.220
<v Speaker 0>main commit can be, you know, 300 lines

01:17:12.220 --> 01:17:13.980
<v Speaker 0>or or thousand lines of code.

01:17:14.380 --> 01:17:15.100
<v Speaker 0>Just

01:17:15.580 --> 01:17:17.180
<v Speaker 0>shows that obviously

01:17:17.180 --> 01:17:18.940
<v Speaker 0>they've had a strong sense of how to

01:17:18.940 --> 01:17:21.035
<v Speaker 0>build this product out from the start. We

01:17:21.035 --> 01:17:23.355
<v Speaker 0>see a pretty good release cadence moving forward.

01:17:23.355 --> 01:17:25.275
<v Speaker 0>I mean, there are some spikes but you

01:17:25.275 --> 01:17:26.955
<v Speaker 0>know, those could be patch releases.

01:17:27.515 --> 01:17:29.595
<v Speaker 0>We see betas here and the various things

01:17:29.595 --> 01:17:30.235
<v Speaker 0>and stuff.

01:17:31.275 --> 01:17:32.715
<v Speaker 0>Let's just see if we can get some

01:17:32.715 --> 01:17:34.900
<v Speaker 0>more interesting stuff. I wonder how much of

01:17:34.900 --> 01:17:37.619
<v Speaker 0>the offer information we have available to us.

01:17:44.099 --> 01:17:46.980
<v Speaker 0>Not much hope for the semantic commits. This

01:17:46.980 --> 01:17:48.099
<v Speaker 0>big blue line again.

01:17:50.025 --> 01:17:52.425
<v Speaker 0>Okay. So we've got the Kubernetes merge robot

01:17:52.425 --> 01:17:54.345
<v Speaker 0>and we've got this to make here,

01:17:54.825 --> 01:17:58.825
<v Speaker 0>CI robot and proud robot. So normally

01:17:58.825 --> 01:18:00.665
<v Speaker 0>if I wanted to in fact, when

01:18:00.985 --> 01:18:03.465
<v Speaker 0>I do a deeper analysis of this repository,

01:18:03.465 --> 01:18:04.505
<v Speaker 0>we have this one session

01:18:05.430 --> 01:18:07.270
<v Speaker 0>with a nice big shiny machine.

01:18:07.670 --> 01:18:09.590
<v Speaker 0>You know, we'll filter this stuff out. What

01:18:09.590 --> 01:18:11.190
<v Speaker 0>we actually wanna be able to see is

01:18:11.190 --> 01:18:13.030
<v Speaker 0>just let's just drag this

01:18:13.750 --> 01:18:15.990
<v Speaker 0>as the people behind this project. So

01:18:16.390 --> 01:18:18.150
<v Speaker 0>let's see. Here we go.

01:18:19.885 --> 01:18:21.485
<v Speaker 0>We got Brandon Barnes,

01:18:21.565 --> 01:18:23.725
<v Speaker 0>also one of the founders of the project,

01:18:23.725 --> 01:18:25.565
<v Speaker 0>not committing so much anymore.

01:18:33.324 --> 01:18:34.525
<v Speaker 0>Got Brian Grant.

01:18:36.660 --> 01:18:37.619
<v Speaker 0>What about

01:18:37.700 --> 01:18:39.300
<v Speaker 0>it's just a little box.

01:18:40.260 --> 01:18:41.140
<v Speaker 0>We've

01:18:41.140 --> 01:18:43.219
<v Speaker 0>got add in with a spike here.

01:18:44.500 --> 01:18:45.540
<v Speaker 0>Doctor Stefan.

01:18:47.435 --> 01:18:49.755
<v Speaker 0>Yeah. I mean, I think anyone who's familiar

01:18:49.755 --> 01:18:52.315
<v Speaker 0>with the Kubernetes project knows Jordan's name. You

01:18:52.315 --> 01:18:54.795
<v Speaker 0>can see, you know, we've been committed to

01:18:54.795 --> 01:18:57.195
<v Speaker 0>this project substantially from start to finish.

01:18:58.555 --> 01:19:00.075
<v Speaker 0>And then we can obviously, you know, if

01:19:00.075 --> 01:19:01.699
<v Speaker 0>we wanted to zoom in again, we can

01:19:01.699 --> 01:19:03.300
<v Speaker 0>try and get into these little lines down

01:19:03.300 --> 01:19:06.100
<v Speaker 0>here, but, you know, you can definitely identify

01:19:06.100 --> 01:19:07.699
<v Speaker 0>some of the key people in the project

01:19:07.699 --> 01:19:08.979
<v Speaker 0>as well as the

01:19:09.699 --> 01:19:11.540
<v Speaker 0>patches, double click and reset us, you know,

01:19:11.540 --> 01:19:13.140
<v Speaker 0>we can see the project. It's always had

01:19:13.140 --> 01:19:15.060
<v Speaker 0>a really strong sense of automation.

01:19:15.455 --> 01:19:17.295
<v Speaker 0>We can actually see the death of the

01:19:17.295 --> 01:19:19.535
<v Speaker 0>Kubernetes merge bot when it got replaced by

01:19:19.535 --> 01:19:21.135
<v Speaker 0>the Kubernetes submit queue.

01:19:22.095 --> 01:19:24.415
<v Speaker 0>We've got a CI bot popping up here,

01:19:24.415 --> 01:19:26.015
<v Speaker 0>very short lived experiment

01:19:26.015 --> 01:19:27.295
<v Speaker 0>and then pro

01:19:27.695 --> 01:19:29.135
<v Speaker 0>active in a project for the last eighteen

01:19:29.135 --> 01:19:31.215
<v Speaker 0>months. So we can actually see the evolution

01:19:31.610 --> 01:19:33.850
<v Speaker 0>of the automation on this project.

01:19:34.010 --> 01:19:36.650
<v Speaker 0>I'm not familiar with the Kubernetes merger robot.

01:19:36.970 --> 01:19:38.890
<v Speaker 0>But we we can see that, you know,

01:19:38.890 --> 01:19:39.850
<v Speaker 0>it's definitely

01:19:40.650 --> 01:19:42.170
<v Speaker 0>not in use anymore.

01:19:43.050 --> 01:19:44.970
<v Speaker 0>The submit queue I'm actually not even familiar

01:19:44.970 --> 01:19:47.005
<v Speaker 0>with either. I think when I do my

01:19:47.005 --> 01:19:48.765
<v Speaker 0>deeper dive on a threefold we'll try and

01:19:48.765 --> 01:19:49.804
<v Speaker 0>get someone

01:19:49.805 --> 01:19:51.725
<v Speaker 0>one of the early after matters of Frequency,

01:19:51.725 --> 01:19:53.245
<v Speaker 0>maybe Jordan will join us and we can

01:19:53.245 --> 01:19:54.925
<v Speaker 0>just give us a bit of history and

01:19:54.925 --> 01:19:57.405
<v Speaker 0>background on what these automation projects were.

01:19:57.885 --> 01:20:00.605
<v Speaker 0>The CIO bot definitely a short lived experiment

01:20:00.765 --> 01:20:03.005
<v Speaker 0>and I'm proud

01:20:02.020 --> 01:20:03.620
<v Speaker 0>is what's been used today.

01:20:05.140 --> 01:20:06.900
<v Speaker 0>With regards to the semantic minutes, we've got

01:20:06.900 --> 01:20:08.260
<v Speaker 0>a whole load of nuns.

01:20:08.740 --> 01:20:10.580
<v Speaker 0>Not holding up much hope for zoom but

01:20:10.580 --> 01:20:11.620
<v Speaker 0>let's just

01:20:12.820 --> 01:20:13.219
<v Speaker 0>no.

01:20:14.500 --> 01:20:16.020
<v Speaker 0>It's all too close together.

01:20:16.805 --> 01:20:17.685
<v Speaker 0>Let's

01:20:17.685 --> 01:20:20.405
<v Speaker 0>try here to do what we got.

01:20:21.445 --> 01:20:23.445
<v Speaker 0>Kubernetes component useful.

01:20:24.005 --> 01:20:25.844
<v Speaker 0>GitHub component useful.

01:20:26.005 --> 01:20:26.565
<v Speaker 0>Nope.

01:20:27.365 --> 01:20:30.005
<v Speaker 0>Yeah. We're not gonna get any information

01:20:30.005 --> 01:20:32.245
<v Speaker 0>from the commit patterns,

01:20:32.870 --> 01:20:34.630
<v Speaker 0>But we do have the directory breakdown. So

01:20:34.630 --> 01:20:35.989
<v Speaker 0>let's see what we see there.

01:20:37.190 --> 01:20:38.870
<v Speaker 0>Okay. That's just

01:20:39.670 --> 01:20:40.550
<v Speaker 0>noise.

01:20:41.430 --> 01:20:42.630
<v Speaker 0>Kubernetes

01:20:42.710 --> 01:20:44.790
<v Speaker 0>project. As far as extensions go,

01:20:44.870 --> 01:20:46.870
<v Speaker 0>it's pretty much just gonna be exclusively go

01:20:46.870 --> 01:20:49.025
<v Speaker 0>again. There's not gonna be really exciting or

01:20:49.025 --> 01:20:50.225
<v Speaker 0>interesting here.

01:20:51.665 --> 01:20:53.824
<v Speaker 0>Let's just give this a moment.

01:20:57.825 --> 01:20:58.625
<v Speaker 0>Okay.

01:21:00.625 --> 01:21:01.265
<v Speaker 0>Any rust?

01:21:01.909 --> 01:21:04.550
<v Speaker 0>No. But we have restructured text. Wow.

01:21:05.909 --> 01:21:08.070
<v Speaker 0>Not a lot though. What else? What else

01:21:08.070 --> 01:21:09.590
<v Speaker 0>could we look for? Any peril in this

01:21:09.590 --> 01:21:11.829
<v Speaker 0>project? We do have peril.

01:21:14.310 --> 01:21:15.110
<v Speaker 0>Jordan.

01:21:15.190 --> 01:21:15.670
<v Speaker 0>Okay.

01:21:16.635 --> 01:21:19.354
<v Speaker 0>PHP. Oh, wow. We have a PHP commit.

01:21:20.155 --> 01:21:21.755
<v Speaker 0>Maybe a little bit of PHP in here.

01:21:21.755 --> 01:21:23.034
<v Speaker 0>I'm not sure what that is. We could

01:21:23.034 --> 01:21:24.554
<v Speaker 0>always dig into it and find out if

01:21:24.554 --> 01:21:26.314
<v Speaker 0>we were genuinely curious.

01:21:27.434 --> 01:21:29.755
<v Speaker 0>Do we have a DS store? We do

01:21:29.755 --> 01:21:30.954
<v Speaker 0>not dress.

01:21:31.940 --> 01:21:33.380
<v Speaker 0>I don't know why I enjoy finding a

01:21:33.380 --> 01:21:34.900
<v Speaker 0>DS store. It just

01:21:35.780 --> 01:21:36.979
<v Speaker 0>keeps me happy.

01:21:41.780 --> 01:21:42.900
<v Speaker 0>Computer locked up again.

01:21:47.224 --> 01:21:49.304
<v Speaker 0>We will make it through this dashboard.

01:21:50.824 --> 01:21:51.864
<v Speaker 0>We will

01:21:54.264 --> 01:21:55.465
<v Speaker 0>okay. We're back.

01:21:56.905 --> 01:21:58.344
<v Speaker 0>So components

01:21:58.425 --> 01:22:01.625
<v Speaker 0>because this component is a directory breakdown rather

01:22:01.625 --> 01:22:03.159
<v Speaker 0>than a semantic commit.

01:22:03.639 --> 01:22:05.719
<v Speaker 0>We should be able to understand

01:22:06.520 --> 01:22:08.599
<v Speaker 0>some of the aspects here.

01:22:09.239 --> 01:22:12.039
<v Speaker 0>In fact, I may just because my computer

01:22:12.039 --> 01:22:15.480
<v Speaker 0>is struggling again, drop the time period down.

01:22:18.315 --> 01:22:21.275
<v Speaker 0>When my computer lets me do that, obviously.

01:22:22.315 --> 01:22:23.835
<v Speaker 0>And what we'll do is we'll maybe just

01:22:23.835 --> 01:22:25.115
<v Speaker 0>try and take a twelve month look at

01:22:25.115 --> 01:22:27.515
<v Speaker 0>Kubernetes and see what's actively being worked on

01:22:27.515 --> 01:22:29.835
<v Speaker 0>just now or maybe even the last three

01:22:29.510 --> 01:22:31.110
<v Speaker 0>you know. We can just get a get

01:22:31.110 --> 01:22:32.870
<v Speaker 0>a feel for what's happened or what's changed

01:22:32.870 --> 01:22:35.190
<v Speaker 0>in the last few releases.

01:22:36.230 --> 01:22:38.790
<v Speaker 0>So let's do 2019

01:22:38.790 --> 01:22:40.470
<v Speaker 0>or 06/2001.

01:22:40.470 --> 01:22:42.470
<v Speaker 0>Let's just take a look at twelve months.

01:22:42.615 --> 01:22:45.255
<v Speaker 0>It should be three or four releases depending

01:22:45.255 --> 01:22:47.015
<v Speaker 0>on how we hit them.

01:22:53.095 --> 01:22:55.495
<v Speaker 0>And, you know what, I'm just gonna do

01:22:55.495 --> 01:22:56.775
<v Speaker 0>a hard refresh on this.

01:23:04.110 --> 01:23:06.270
<v Speaker 0>So in the last twelve months,

01:23:06.510 --> 01:23:09.630
<v Speaker 0>if it's 7,000 commits, 500 per month.

01:23:11.494 --> 01:23:13.335
<v Speaker 0>Definitely a lot of features

01:23:13.335 --> 01:23:15.494
<v Speaker 0>added at the end of last year.

01:23:18.054 --> 01:23:20.374
<v Speaker 0>And the releases since then

01:23:21.574 --> 01:23:23.014
<v Speaker 0>have mostly been

01:23:23.735 --> 01:23:25.974
<v Speaker 0>changes and bug fixes. I would speculate based

01:23:25.974 --> 01:23:28.270
<v Speaker 0>on graph. Now I actually know because I

01:23:28.270 --> 01:23:30.429
<v Speaker 0>was the comms lead on the

01:23:31.150 --> 01:23:31.789
<v Speaker 0>the

01:23:32.270 --> 01:23:33.949
<v Speaker 0>'1 '17 release

01:23:34.670 --> 01:23:38.110
<v Speaker 0>that this release here was actually just a

01:23:40.215 --> 01:23:43.015
<v Speaker 0>triage bug fixe, make things better release.

01:23:43.575 --> 01:23:46.455
<v Speaker 0>The chillest release I believe the title was.

01:23:47.255 --> 01:23:47.975
<v Speaker 0>Alright.

01:23:48.295 --> 01:23:49.735
<v Speaker 0>So let's come back down here.

01:23:54.100 --> 01:23:56.260
<v Speaker 0>Right. Hopefully, it should be a lot faster

01:23:56.260 --> 01:23:56.900
<v Speaker 0>now.

01:23:58.180 --> 01:24:00.020
<v Speaker 0>Surprised that it loaded to commit a lot

01:24:00.020 --> 01:24:02.340
<v Speaker 0>faster than these two, but

01:24:04.180 --> 01:24:06.260
<v Speaker 0>k. So component wise,

01:24:07.220 --> 01:24:09.235
<v Speaker 0>let's just maybe scroll and see what we

01:24:09.235 --> 01:24:11.555
<v Speaker 0>have. It shouldn't be we've got that vendor

01:24:11.555 --> 01:24:12.355
<v Speaker 0>directory.

01:24:12.915 --> 01:24:15.635
<v Speaker 0>Go projects are always the worst to analyze.

01:24:19.555 --> 01:24:20.675
<v Speaker 0>Let's try

01:24:21.795 --> 01:24:23.860
<v Speaker 0>to stateful set. So, you know, there's a

01:24:23.860 --> 01:24:25.139
<v Speaker 0>stateful set controller.

01:24:25.620 --> 01:24:27.380
<v Speaker 0>We can see, you know, the commits over

01:24:27.380 --> 01:24:28.420
<v Speaker 0>the last year has not been a lot

01:24:28.420 --> 01:24:29.619
<v Speaker 0>of activity there.

01:24:30.180 --> 01:24:31.540
<v Speaker 0>But we do know who to go speak

01:24:31.540 --> 01:24:33.620
<v Speaker 0>to if we wanted have coders. We don't

01:24:33.620 --> 01:24:34.900
<v Speaker 0>need to look at that again. That was

01:24:34.900 --> 01:24:37.540
<v Speaker 0>pretty much the same. I'm more interested

01:24:38.545 --> 01:24:40.385
<v Speaker 0>in the directory breakdown.

01:24:40.865 --> 01:24:42.465
<v Speaker 0>That's going to give me the overview. Those

01:24:42.465 --> 01:24:44.385
<v Speaker 0>tables are really good for when I have

01:24:44.385 --> 01:24:45.665
<v Speaker 0>specific questions.

01:24:45.905 --> 01:24:47.905
<v Speaker 0>If you don't know the question yet, then

01:24:47.905 --> 01:24:51.905
<v Speaker 0>the directory breakdown and these graphs are actually

01:24:50.910 --> 01:24:52.270
<v Speaker 0>a bit more interesting.

01:24:53.470 --> 01:24:55.710
<v Speaker 0>So we can just see, guys, I'll go

01:24:55.710 --> 01:24:56.510
<v Speaker 0>code.

01:24:56.750 --> 01:24:59.310
<v Speaker 0>We've got none, no extensions.

01:25:00.750 --> 01:25:02.430
<v Speaker 0>PB, protobus.

01:25:02.510 --> 01:25:04.430
<v Speaker 0>Yep. Not surprised to see that. We've got

01:25:04.430 --> 01:25:06.864
<v Speaker 0>some shell scripts going on with regards to

01:25:06.864 --> 01:25:09.744
<v Speaker 0>directories. We can see staging test data here.

01:25:09.824 --> 01:25:10.465
<v Speaker 0>Test

01:25:10.784 --> 01:25:12.705
<v Speaker 0>data. You know, we didn't see a lot

01:25:12.705 --> 01:25:13.264
<v Speaker 0>of

01:25:14.625 --> 01:25:16.945
<v Speaker 0>insertions. So, you know, the fact that what

01:25:16.945 --> 01:25:19.505
<v Speaker 0>we're seeing is is test stuff

01:25:19.905 --> 01:25:22.120
<v Speaker 0>to show I guess shows how much testing

01:25:22.120 --> 01:25:23.800
<v Speaker 0>goes on in this project and that could

01:25:23.800 --> 01:25:25.320
<v Speaker 0>just be if we zoom in, we can

01:25:25.320 --> 01:25:26.199
<v Speaker 0>hopefully get

01:25:28.040 --> 01:25:30.120
<v Speaker 0>slightly better look so we can see some

01:25:30.120 --> 01:25:33.000
<v Speaker 0>framework plugins on the scheduler. We can see

01:25:33.640 --> 01:25:35.720
<v Speaker 0>RPMs were there change log.

01:25:36.385 --> 01:25:38.065
<v Speaker 0>And then we've got some of the components.

01:25:38.065 --> 01:25:40.465
<v Speaker 0>We've got the open API spec. So we

01:25:40.465 --> 01:25:41.825
<v Speaker 0>can see what's been worked on, but it's

01:25:41.825 --> 01:25:43.905
<v Speaker 0>very difficult on a project of this size.

01:25:44.385 --> 01:25:46.145
<v Speaker 0>I think what I need to do when

01:25:46.145 --> 01:25:47.665
<v Speaker 0>we do it, we've been even deeper dive

01:25:47.665 --> 01:25:49.425
<v Speaker 0>into the Kubernetes project is just

01:25:50.420 --> 01:25:52.659
<v Speaker 0>provide a means of filtering out the vendor

01:25:52.659 --> 01:25:55.060
<v Speaker 0>directory for sure. I think that's definitely gonna

01:25:55.060 --> 01:25:56.820
<v Speaker 0>increase our visibility into this.

01:25:57.780 --> 01:25:59.860
<v Speaker 0>New code. I mean, not surprised to see

01:25:59.860 --> 01:26:01.139
<v Speaker 0>gold there. It's a gold project.

01:26:03.514 --> 01:26:05.034
<v Speaker 0>And we could see the comments if we

01:26:05.034 --> 01:26:06.074
<v Speaker 0>want to wait for that. We can see

01:26:06.074 --> 01:26:08.074
<v Speaker 0>which files have been deleted by directory and

01:26:08.074 --> 01:26:09.114
<v Speaker 0>so forth. So

01:26:09.675 --> 01:26:11.514
<v Speaker 0>I think I put my computer

01:26:12.155 --> 01:26:13.275
<v Speaker 0>through enough.

01:26:16.715 --> 01:26:19.300
<v Speaker 0>Yeah. Let's call it quits there.

01:26:20.420 --> 01:26:22.500
<v Speaker 0>Well, I can still actually I think I'm

01:26:22.500 --> 01:26:23.860
<v Speaker 0>still going. Yeah. Okay. Cool.
