WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: bb21b7de-ad66-47d4-baa9-eb1c940a1a26
Created: 2025-04-29T15:26:48.142Z
Duration: 5432.2915
Channels: 1

00:02:44.694 --> 00:02:45.415
<v Speaker 0>Hello,

00:02:45.735 --> 00:02:48.615
<v Speaker 0>and welcome back to the Rawkode Academy.

00:02:48.935 --> 00:02:49.815
<v Speaker 0>We

00:02:49.815 --> 00:02:52.055
<v Speaker 0>are live as always. My name is David

00:02:52.055 --> 00:02:52.535
<v Speaker 0>Flanagan,

00:02:53.030 --> 00:02:55.830
<v Speaker 0>And, today, we're taking a look at Kubevious.

00:02:55.830 --> 00:02:57.670
<v Speaker 0>Now before we get started, I just want

00:02:57.670 --> 00:03:00.630
<v Speaker 0>to encourage people to subscribe to the channel,

00:03:01.030 --> 00:03:02.070
<v Speaker 0>like this video,

00:03:02.390 --> 00:03:05.430
<v Speaker 0>and, remember, if I ever have audio problems,

00:03:05.430 --> 00:03:07.345
<v Speaker 0>thank you, Russell, for the comment, to let

00:03:07.345 --> 00:03:09.665
<v Speaker 0>me know early in the session rather than

00:03:09.665 --> 00:03:11.505
<v Speaker 0>just persevere with it. So if I sound

00:03:11.505 --> 00:03:13.665
<v Speaker 0>like a frog trapped underwater,

00:03:13.665 --> 00:03:15.825
<v Speaker 0>please leave a comment. But, hopefully, I sound

00:03:15.825 --> 00:03:16.705
<v Speaker 0>alright today.

00:03:17.665 --> 00:03:19.985
<v Speaker 0>Okay. Today, we're taking a look at Kubevious,

00:03:20.700 --> 00:03:22.620
<v Speaker 0>and I'm going to be guided today by

00:03:22.620 --> 00:03:25.260
<v Speaker 0>Ruben, a founder of the Kubevious project. Hey,

00:03:25.260 --> 00:03:26.300
<v Speaker 0>man. How's it going?

00:03:27.019 --> 00:03:29.659
<v Speaker 1>Very good. Hi, David. Pleasure to be here.

00:03:29.659 --> 00:03:31.819
<v Speaker 1>Thanks for having me. No. It's my pleasure.

00:03:31.819 --> 00:03:33.420
<v Speaker 0>I'm looking forward to playing with a new

00:03:33.420 --> 00:03:35.180
<v Speaker 0>project today. It's always my my highlight of

00:03:35.180 --> 00:03:36.645
<v Speaker 0>my week when I get sit down and

00:03:36.645 --> 00:03:38.485
<v Speaker 0>do something interesting and fun on top of

00:03:38.485 --> 00:03:41.045
<v Speaker 0>Kubernetes and hopefully solve a few problems that

00:03:41.045 --> 00:03:43.605
<v Speaker 0>I've got in the process. So

00:03:43.925 --> 00:03:46.005
<v Speaker 0>before I ask you about Kubevious, do you

00:03:46.005 --> 00:03:47.285
<v Speaker 0>wanna just take a moment to tell us

00:03:47.285 --> 00:03:48.565
<v Speaker 0>a little bit about who you are?

00:03:49.730 --> 00:03:51.890
<v Speaker 1>Yeah. Of course. My name is Ruben.

00:03:52.130 --> 00:03:54.930
<v Speaker 1>I'm the founder and CEO of Project Kubevious.

00:03:55.090 --> 00:03:58.130
<v Speaker 1>So in Kubevious, we're trying to promise engineers

00:03:58.130 --> 00:04:00.690
<v Speaker 1>to help their lives with Kubernetes

00:04:00.690 --> 00:04:04.370
<v Speaker 1>to improve overall Kubernetes and cloud native experiences

00:04:04.825 --> 00:04:08.025
<v Speaker 1>by making sure that we detect and enforce

00:04:08.105 --> 00:04:08.825
<v Speaker 1>and

00:04:09.064 --> 00:04:11.064
<v Speaker 1>detect through misconfigurations,

00:04:11.064 --> 00:04:12.505
<v Speaker 1>errors, conflicts,

00:04:12.745 --> 00:04:15.704
<v Speaker 1>or typos of that sort and violations to

00:04:15.704 --> 00:04:16.345
<v Speaker 1>best practices.

00:04:16.919 --> 00:04:19.160
<v Speaker 1>And we do that by correlating things that

00:04:19.160 --> 00:04:21.320
<v Speaker 1>are happening in the cluster and making sure

00:04:21.320 --> 00:04:23.800
<v Speaker 1>that any changes that you do are in

00:04:23.800 --> 00:04:25.480
<v Speaker 1>compliance with those practices.

00:04:26.039 --> 00:04:28.440
<v Speaker 1>I've been crawling for twenty five years. I'm

00:04:29.224 --> 00:04:31.224
<v Speaker 1>I've been in cloud native space for the

00:04:31.224 --> 00:04:32.345
<v Speaker 1>last six

00:04:32.345 --> 00:04:35.785
<v Speaker 1>years, and I'm really excited about the

00:04:36.025 --> 00:04:37.945
<v Speaker 1>that the cloud native and Kubernetes.

00:04:39.705 --> 00:04:41.224
<v Speaker 0>Awesome. Thank you for sharing.

00:04:41.789 --> 00:04:45.229
<v Speaker 0>Now I'm curious about maybe you can share

00:04:45.310 --> 00:04:48.990
<v Speaker 0>why you started Kubevious. Like, most people,

00:04:49.629 --> 00:04:51.229
<v Speaker 0>you know, they're just trying to solve their

00:04:51.229 --> 00:04:53.389
<v Speaker 0>own problems, scratch their own edge. Is that

00:04:53.389 --> 00:04:54.669
<v Speaker 0>true for you and Kubevious?

00:04:56.105 --> 00:04:59.385
<v Speaker 1>Yeah. Kubevious started as an internal project just

00:04:59.385 --> 00:05:01.785
<v Speaker 1>to help understanding what's going on in the

00:05:01.785 --> 00:05:02.585
<v Speaker 1>clusters.

00:05:02.825 --> 00:05:05.945
<v Speaker 1>As a simple UI, as a relatively application

00:05:05.945 --> 00:05:07.305
<v Speaker 1>centric dashboard,

00:05:07.305 --> 00:05:09.850
<v Speaker 1>which helps me understand, right, what kind of

00:05:09.850 --> 00:05:12.570
<v Speaker 1>applications I have in my clusters without

00:05:12.730 --> 00:05:14.890
<v Speaker 1>and what is the composition of those apps

00:05:14.890 --> 00:05:17.770
<v Speaker 1>without going into different types of resources

00:05:18.570 --> 00:05:21.050
<v Speaker 1>and trying to connect the the dots. So

00:05:21.050 --> 00:05:21.610
<v Speaker 1>for example,

00:05:22.215 --> 00:05:24.615
<v Speaker 1>in order to see how app is deployed,

00:05:24.615 --> 00:05:26.535
<v Speaker 1>you have to look at deployments, then you

00:05:26.535 --> 00:05:29.335
<v Speaker 1>would have to check services that would control

00:05:29.335 --> 00:05:32.295
<v Speaker 1>how apps are exposed to the outside addresses,

00:05:32.695 --> 00:05:36.775
<v Speaker 1>like volume mounts, config map, secrets. So it's

00:05:37.259 --> 00:05:40.139
<v Speaker 1>quite involved. And first of all, Kubevious started

00:05:40.139 --> 00:05:41.340
<v Speaker 1>as a dashboard,

00:05:41.340 --> 00:05:43.500
<v Speaker 1>which kind of, first of all, woah, shows

00:05:43.500 --> 00:05:44.460
<v Speaker 1>you the apps.

00:05:44.699 --> 00:05:46.699
<v Speaker 1>And underneath the app, it shows all the

00:05:46.699 --> 00:05:49.099
<v Speaker 1>links and all the references and dependencies of

00:05:49.099 --> 00:05:52.655
<v Speaker 1>your apps. Then slowly, the project evolved into

00:05:52.815 --> 00:05:56.175
<v Speaker 1>assurance platform. We started edit validations

00:05:56.975 --> 00:05:57.455
<v Speaker 1>because

00:05:57.855 --> 00:06:00.175
<v Speaker 1>and and we opened up the doors so

00:06:00.175 --> 00:06:03.055
<v Speaker 1>users can write their own validation rules.

00:06:03.375 --> 00:06:03.935
<v Speaker 1>And

00:06:04.430 --> 00:06:06.830
<v Speaker 1>we're we're we're getting very close to build

00:06:06.830 --> 00:06:10.030
<v Speaker 1>a fully pledged assurance platform for Kubernetes and

00:06:10.030 --> 00:06:11.550
<v Speaker 1>cloud native projects.

00:06:12.030 --> 00:06:13.390
<v Speaker 0>Okay. Cool.

00:06:13.710 --> 00:06:16.030
<v Speaker 0>Now I guess I what I'm curious about

00:06:16.030 --> 00:06:16.510
<v Speaker 0>is, like,

00:06:17.395 --> 00:06:20.035
<v Speaker 0>is it something that everyone should install in

00:06:20.035 --> 00:06:22.354
<v Speaker 0>their cluster, or is this targeted at people

00:06:22.354 --> 00:06:25.555
<v Speaker 0>and, like, an enterprise background, maybe, like, banking,

00:06:25.555 --> 00:06:27.074
<v Speaker 0>etcetera, where they have to have a really

00:06:27.074 --> 00:06:29.635
<v Speaker 0>good understanding or control in what's in their

00:06:29.635 --> 00:06:31.330
<v Speaker 0>cluster? Or is one of those things that

00:06:31.330 --> 00:06:32.610
<v Speaker 0>even if it's a hobby cluster, you just

00:06:32.610 --> 00:06:35.010
<v Speaker 0>deploy it because you're still getting that visibility

00:06:35.010 --> 00:06:35.810
<v Speaker 0>into it?

00:06:37.410 --> 00:06:40.210
<v Speaker 1>I think different users different types of users

00:06:40.210 --> 00:06:43.090
<v Speaker 1>may benefit and use different areas of Kubevious.

00:06:43.595 --> 00:06:46.635
<v Speaker 1>Like, for hobby projects, it can really quickly

00:06:46.635 --> 00:06:49.115
<v Speaker 1>help you get started with Kubernetes.

00:06:49.115 --> 00:06:51.115
<v Speaker 1>Let's say, you install a Helm chart with

00:06:51.115 --> 00:06:52.235
<v Speaker 1>few applications.

00:06:52.555 --> 00:06:54.955
<v Speaker 1>It can quickly let you know and make

00:06:54.955 --> 00:06:57.115
<v Speaker 1>things more obvious with Kubernetes.

00:06:57.275 --> 00:06:59.620
<v Speaker 1>Whereas for more complicated

00:06:59.620 --> 00:07:03.139
<v Speaker 1>deployments, complex deployments, like in larger enterprises,

00:07:03.220 --> 00:07:06.100
<v Speaker 1>they might more focus on RBAT capabilities,

00:07:06.340 --> 00:07:08.340
<v Speaker 1>like networking policies,

00:07:08.659 --> 00:07:11.620
<v Speaker 1>and writing their own more complicated

00:07:11.805 --> 00:07:14.205
<v Speaker 1>rules to be able to enforce those complex

00:07:14.205 --> 00:07:15.005
<v Speaker 1>scenarios.

00:07:15.965 --> 00:07:17.965
<v Speaker 0>Yeah. I like that you mentioned Helm charts

00:07:17.965 --> 00:07:20.445
<v Speaker 0>because I am very guilty of that where

00:07:20.445 --> 00:07:22.125
<v Speaker 0>I just go to the artifact hub and

00:07:22.125 --> 00:07:23.245
<v Speaker 0>go, oh, that looks like it might do

00:07:23.245 --> 00:07:24.525
<v Speaker 0>what I want, and then I do a

00:07:24.525 --> 00:07:25.965
<v Speaker 0>Helm upgrade install.

00:07:25.965 --> 00:07:28.230
<v Speaker 0>And, really, I have no idea what that

00:07:28.230 --> 00:07:30.150
<v Speaker 0>is like in into my cluster. I just

00:07:30.150 --> 00:07:32.150
<v Speaker 0>kinda have this level of trust, which I

00:07:32.150 --> 00:07:34.710
<v Speaker 0>probably shouldn't have with random Helm charts off

00:07:34.710 --> 00:07:36.870
<v Speaker 0>the Internet. So you're telling me that Kubevious

00:07:36.870 --> 00:07:38.790
<v Speaker 0>is gonna break that down a little bit

00:07:38.790 --> 00:07:39.910
<v Speaker 0>for me and show me what's happening?

00:07:41.605 --> 00:07:42.165
<v Speaker 1>Well,

00:07:42.965 --> 00:07:44.965
<v Speaker 1>it's not a it's not gonna give you

00:07:44.965 --> 00:07:46.165
<v Speaker 1>a complete safety of

00:07:46.645 --> 00:07:49.205
<v Speaker 1>it doesn't introspect the the workloads. It doesn't

00:07:49.205 --> 00:07:51.525
<v Speaker 1>check what it does. But at least when

00:07:51.525 --> 00:07:54.885
<v Speaker 1>the workload doesn't work well, there's some issues

00:07:54.885 --> 00:07:55.525
<v Speaker 1>with deployment.

00:07:55.860 --> 00:07:58.259
<v Speaker 1>You can see those things propagated all the

00:07:58.259 --> 00:08:00.180
<v Speaker 1>way up to the application level,

00:08:00.419 --> 00:08:02.900
<v Speaker 1>and then it it would guide you towards

00:08:02.900 --> 00:08:04.979
<v Speaker 1>the area that needs more attention.

00:08:05.539 --> 00:08:08.580
<v Speaker 1>Instead of showing things and analyzing

00:08:08.580 --> 00:08:11.805
<v Speaker 1>things in a, like, table form, it creates

00:08:11.805 --> 00:08:14.925
<v Speaker 1>a graph of the application. And dependencies are

00:08:14.925 --> 00:08:15.405
<v Speaker 1>kind of

00:08:16.605 --> 00:08:19.165
<v Speaker 1>you would find dependencies deep down. So it

00:08:19.165 --> 00:08:21.565
<v Speaker 1>does namespace application

00:08:21.885 --> 00:08:22.845
<v Speaker 1>and then container.

00:08:23.360 --> 00:08:25.440
<v Speaker 1>And then underneath the container, you would see

00:08:25.440 --> 00:08:27.600
<v Speaker 1>the volume mount, like the path where the

00:08:27.600 --> 00:08:29.760
<v Speaker 1>config map is mounted. And then underneath, you

00:08:29.760 --> 00:08:32.000
<v Speaker 1>would see the config map. And if for

00:08:32.000 --> 00:08:34.160
<v Speaker 1>some reason the config map is missing,

00:08:34.400 --> 00:08:36.320
<v Speaker 1>it would let you know in well, in

00:08:36.320 --> 00:08:37.120
<v Speaker 1>in advance.

00:08:37.524 --> 00:08:39.284
<v Speaker 1>Or if you're mounting

00:08:39.524 --> 00:08:42.645
<v Speaker 1>secrets to environment variables, if one of the

00:08:42.645 --> 00:08:44.805
<v Speaker 1>keys is missing, it would let you know.

00:08:44.885 --> 00:08:47.045
<v Speaker 1>And if you have any other issues of

00:08:47.045 --> 00:08:48.404
<v Speaker 1>that sort, let's say,

00:08:49.365 --> 00:08:50.645
<v Speaker 1>mismatch with labels,

00:08:51.770 --> 00:08:52.970
<v Speaker 1>naming issues.

00:08:52.970 --> 00:08:54.890
<v Speaker 1>So you can quickly detect those names and

00:08:54.890 --> 00:08:55.450
<v Speaker 1>then

00:08:55.850 --> 00:08:58.890
<v Speaker 1>at much earlier stages of your of your

00:08:58.890 --> 00:08:59.690
<v Speaker 1>deployment.

00:09:00.090 --> 00:09:02.490
<v Speaker 1>So Kubevious, as I mentioned, started as a

00:09:02.490 --> 00:09:03.290
<v Speaker 1>dashboard,

00:09:03.610 --> 00:09:07.154
<v Speaker 1>but the very recent development was ability to

00:09:07.154 --> 00:09:10.115
<v Speaker 1>enforce those checks and validations.

00:09:10.355 --> 00:09:12.514
<v Speaker 1>So you can plug it in into your

00:09:12.514 --> 00:09:13.795
<v Speaker 1>CD pipeline.

00:09:14.435 --> 00:09:16.435
<v Speaker 1>And let's say you have a package of

00:09:16.435 --> 00:09:18.115
<v Speaker 1>your manifest,

00:09:18.115 --> 00:09:20.490
<v Speaker 1>whether in the form of Helm or they're,

00:09:20.490 --> 00:09:22.490
<v Speaker 1>like, a directory within your

00:09:23.050 --> 00:09:24.010
<v Speaker 1>repository,

00:09:24.730 --> 00:09:27.210
<v Speaker 1>you basically just have to pipe all those

00:09:27.210 --> 00:09:30.010
<v Speaker 1>files into a special script. And if it

00:09:30.010 --> 00:09:31.050
<v Speaker 1>detects that,

00:09:31.930 --> 00:09:33.850
<v Speaker 1>the current cluster will be in a worse

00:09:33.850 --> 00:09:35.375
<v Speaker 1>shape with your change

00:09:38.895 --> 00:09:40.655
<v Speaker 0>Oh, I think we've

00:09:41.055 --> 00:09:42.175
<v Speaker 0>lost Ruben.

00:09:43.135 --> 00:09:44.575
<v Speaker 0>Oh, you're back. Hello?

00:09:45.215 --> 00:09:48.175
<v Speaker 1>Yeah. So I was saying so you would

00:09:48.175 --> 00:09:50.655
<v Speaker 1>have to pipe your

00:09:49.640 --> 00:09:52.120
<v Speaker 1>directory of your manifest or files

00:09:52.360 --> 00:09:55.160
<v Speaker 1>into a special script. And if with that

00:09:55.160 --> 00:09:57.320
<v Speaker 1>script, the state of the cluster would be

00:09:57.320 --> 00:09:59.400
<v Speaker 1>in a worse shape, then it would

00:09:59.640 --> 00:10:01.400
<v Speaker 1>let you know in advance, and it would

00:10:01.400 --> 00:10:01.720
<v Speaker 1>prevent

00:10:02.205 --> 00:10:05.565
<v Speaker 1>those changes from progressing further into the cluster.

00:10:06.045 --> 00:10:08.365
<v Speaker 0>Okay. So just to make sure I understood

00:10:08.365 --> 00:10:10.365
<v Speaker 0>that correctly in my in my head, the

00:10:10.365 --> 00:10:12.445
<v Speaker 0>Kubevious project, we've got two different components. So

00:10:12.445 --> 00:10:13.805
<v Speaker 0>maybe more, but two that I think I'm

00:10:13.805 --> 00:10:15.880
<v Speaker 0>aware of right now. One being we have

00:10:15.880 --> 00:10:18.839
<v Speaker 0>this user interface dashboard for what is inside

00:10:18.839 --> 00:10:20.360
<v Speaker 0>of our Kubernetes cluster,

00:10:20.760 --> 00:10:22.519
<v Speaker 0>but you're saying there's some sort of c

00:10:22.519 --> 00:10:25.240
<v Speaker 0>l I component that will allow us to

00:10:25.399 --> 00:10:26.920
<v Speaker 0>scan the manifest

00:10:27.320 --> 00:10:28.920
<v Speaker 0>and that kind of environment to give us

00:10:28.920 --> 00:10:31.560
<v Speaker 0>warnings before we push it into the cluster.

00:10:31.535 --> 00:10:34.655
<v Speaker 0>Is that correct? Yeah. Yeah. They're no they're

00:10:34.655 --> 00:10:36.975
<v Speaker 1>not two separate things. They're different

00:10:36.975 --> 00:10:38.815
<v Speaker 1>components of the same project.

00:10:38.975 --> 00:10:39.855
<v Speaker 1>Yeah. So

00:10:40.735 --> 00:10:43.615
<v Speaker 1>they're not kind of, well, divisible. It's just

00:10:43.615 --> 00:10:47.375
<v Speaker 1>a different ways of accessing to the enforcement

00:10:46.890 --> 00:10:47.690
<v Speaker 1>engine.

00:10:48.410 --> 00:10:50.490
<v Speaker 1>One is through the UI, which is continuously

00:10:50.490 --> 00:10:51.370
<v Speaker 1>running.

00:10:51.370 --> 00:10:54.570
<v Speaker 1>It's continuously monitoring any changes that is happening,

00:10:54.810 --> 00:10:56.570
<v Speaker 1>that are happening in the clusters.

00:10:56.970 --> 00:10:59.210
<v Speaker 1>And the other one is the enforcement tool

00:10:59.210 --> 00:11:01.785
<v Speaker 1>that kind of runs the same logic. It's

00:11:01.785 --> 00:11:03.945
<v Speaker 1>just it involves the changes that you're about

00:11:03.945 --> 00:11:05.865
<v Speaker 1>to apply to the cluster.

00:11:06.265 --> 00:11:06.985
<v Speaker 0>Okay.

00:11:07.464 --> 00:11:09.545
<v Speaker 0>So you said that the first version was

00:11:09.545 --> 00:11:11.545
<v Speaker 0>a dashboard and a UI. Like,

00:11:12.180 --> 00:11:14.900
<v Speaker 0>was that very intentional to build a UI?

00:11:14.980 --> 00:11:16.740
<v Speaker 0>Like, to make something that was UI driven

00:11:16.740 --> 00:11:18.420
<v Speaker 0>first? Because what I don't know. Maybe it's

00:11:18.420 --> 00:11:20.900
<v Speaker 0>just my my experience. But in the Kubernetes

00:11:20.900 --> 00:11:22.900
<v Speaker 0>landscape, we seem to be averse to UIs.

00:11:22.900 --> 00:11:24.420
<v Speaker 0>Although, I do see that changing now. We're

00:11:24.420 --> 00:11:26.725
<v Speaker 0>seeing a lot more dashboard like things coming

00:11:26.725 --> 00:11:28.645
<v Speaker 0>out. But that must have been quite a

00:11:28.645 --> 00:11:30.885
<v Speaker 0>brave decision or bold decision to be UI

00:11:30.885 --> 00:11:32.725
<v Speaker 0>first at the start. Yeah. It was very

00:11:32.725 --> 00:11:36.245
<v Speaker 1>well intentional. Probably transfer my background from gaming.

00:11:36.245 --> 00:11:38.964
<v Speaker 1>I used to do some game development before.

00:11:39.570 --> 00:11:41.890
<v Speaker 1>And in the very early version, you wouldn't

00:11:41.890 --> 00:11:43.890
<v Speaker 1>see it right now, but if I dig

00:11:43.890 --> 00:11:46.210
<v Speaker 1>a little bit, I'll find the older version.

00:11:46.370 --> 00:11:49.410
<v Speaker 1>So there is, like, a flat tuned to

00:11:49.410 --> 00:11:50.290
<v Speaker 1>have the,

00:11:50.530 --> 00:11:51.890
<v Speaker 1>like, layout

00:11:51.890 --> 00:11:53.650
<v Speaker 1>where you would see apps, and you can

00:11:53.745 --> 00:11:56.065
<v Speaker 1>kind of expand and dig into,

00:11:56.945 --> 00:11:59.585
<v Speaker 1>specific areas like apps and deployments,

00:12:00.385 --> 00:12:01.105
<v Speaker 1>pods,

00:12:01.345 --> 00:12:03.905
<v Speaker 1>or how things are mounted, HPAs.

00:12:04.305 --> 00:12:05.985
<v Speaker 1>And then you will see a tiny mini

00:12:05.985 --> 00:12:07.825
<v Speaker 1>map, like in strategy

00:12:07.985 --> 00:12:11.360
<v Speaker 1>games, in Age of Empires or Star Draft,

00:12:11.360 --> 00:12:13.600
<v Speaker 1>but then it lets you kind of navigate.

00:12:14.160 --> 00:12:16.080
<v Speaker 1>Yeah. It was pretty cool, but

00:12:16.400 --> 00:12:18.480
<v Speaker 1>at some point, like, being

00:12:19.440 --> 00:12:20.480
<v Speaker 1>more productive

00:12:20.640 --> 00:12:22.800
<v Speaker 1>became more important. And then we we got

00:12:22.800 --> 00:12:25.165
<v Speaker 1>rid of the mini map, and we we

00:12:25.165 --> 00:12:27.725
<v Speaker 1>edit a little bit different ways of navigating

00:12:27.725 --> 00:12:29.965
<v Speaker 1>this hierarchy constructor.

00:12:29.965 --> 00:12:30.685
<v Speaker 1>So

00:12:31.165 --> 00:12:33.085
<v Speaker 1>the thing with UI is

00:12:34.045 --> 00:12:34.925
<v Speaker 1>you can

00:12:35.165 --> 00:12:36.285
<v Speaker 1>put much more

00:12:37.100 --> 00:12:40.380
<v Speaker 1>accessible information using UI versus

00:12:40.380 --> 00:12:41.100
<v Speaker 1>just

00:12:41.500 --> 00:12:44.220
<v Speaker 1>being limited into a text. Even though, let's

00:12:44.220 --> 00:12:45.420
<v Speaker 1>say, projects like,

00:12:47.180 --> 00:12:50.220
<v Speaker 1>k nine s, it's really awesome. I think

00:12:50.540 --> 00:12:51.020
<v Speaker 1>they did.

00:12:51.665 --> 00:12:53.985
<v Speaker 1>They they got the most out of the

00:12:53.985 --> 00:12:55.264
<v Speaker 1>terminal stream. It's

00:12:55.985 --> 00:12:58.625
<v Speaker 1>you you kinda probably can do better. But

00:12:58.944 --> 00:13:01.745
<v Speaker 1>with the UI, you can provide a lot

00:13:01.745 --> 00:13:02.945
<v Speaker 1>of hints

00:13:03.824 --> 00:13:05.745
<v Speaker 1>on the same screen area

00:13:05.880 --> 00:13:08.520
<v Speaker 1>that wouldn't be too intrusive, but it would

00:13:08.520 --> 00:13:11.240
<v Speaker 1>be much easier to kind of

00:13:11.800 --> 00:13:14.200
<v Speaker 1>digest by the users with some hints that

00:13:14.200 --> 00:13:17.240
<v Speaker 1>allow user to kind of dig deeper into

00:13:17.240 --> 00:13:19.000
<v Speaker 1>further steps that needs more attention.

00:13:19.825 --> 00:13:20.625
<v Speaker 0>Nice.

00:13:21.584 --> 00:13:24.065
<v Speaker 0>Oh, my cabling's falling under my desk. But

00:13:24.144 --> 00:13:25.345
<v Speaker 0>Yeah. As long as we're still on the

00:13:25.345 --> 00:13:26.545
<v Speaker 0>air, I think we're okay.

00:13:27.024 --> 00:13:28.385
<v Speaker 0>Alright. You broke my heart a little bit

00:13:28.385 --> 00:13:29.745
<v Speaker 0>there when you said you removed the mini

00:13:29.745 --> 00:13:31.425
<v Speaker 0>map because Age of Empires was my favorite

00:13:31.425 --> 00:13:33.970
<v Speaker 0>game growing up. Absolutely. I I lost days,

00:13:33.970 --> 00:13:35.970
<v Speaker 0>weeks, and maybe even months playing that game.

00:13:35.970 --> 00:13:37.730
<v Speaker 0>It was so good. Yeah.

00:13:39.090 --> 00:13:39.810
<v Speaker 1>Well,

00:13:40.130 --> 00:13:42.290
<v Speaker 1>it's a it's an open source project. There

00:13:42.290 --> 00:13:45.010
<v Speaker 1>is older version. You're always working things for

00:13:45.010 --> 00:13:46.715
<v Speaker 1>the the new one. It's like, I think

00:13:46.715 --> 00:13:49.195
<v Speaker 1>you could go for 0.6

00:13:49.835 --> 00:13:52.235
<v Speaker 1>or below it would be the older version.

00:13:52.715 --> 00:13:55.275
<v Speaker 0>Well, I don't know if you've ever seen

00:13:55.275 --> 00:13:57.275
<v Speaker 0>this, but I think it was maybe two

00:13:57.275 --> 00:14:00.235
<v Speaker 0>years ago someone actually recompiled

00:14:00.315 --> 00:14:03.160
<v Speaker 0>Doom where all the enemies in it were

00:14:03.160 --> 00:14:05.800
<v Speaker 0>the pods within a Kubernetes cluster. So you

00:14:05.800 --> 00:14:07.080
<v Speaker 0>actually got Oh, yes.

00:14:07.480 --> 00:14:09.640
<v Speaker 0>Play Doom and shoot pods and, like, this

00:14:09.640 --> 00:14:12.680
<v Speaker 0>chaos monkey style game, which I just thought

00:14:12.680 --> 00:14:15.115
<v Speaker 0>was brilliant. Like, maybe we maybe we need

00:14:15.115 --> 00:14:17.675
<v Speaker 0>to do more with gaming technology and Kubernetes.

00:14:17.675 --> 00:14:19.515
<v Speaker 0>So maybe you're onto something here. Yeah.

00:14:20.795 --> 00:14:22.635
<v Speaker 1>I used to if you're familiar with the

00:14:22.635 --> 00:14:26.075
<v Speaker 1>game Quake, Quake Arena, Quake three Yep. I

00:14:26.075 --> 00:14:27.980
<v Speaker 1>used to write another

00:14:28.140 --> 00:14:30.780
<v Speaker 1>three d engine using OpenGL that uses the

00:14:30.780 --> 00:14:32.780
<v Speaker 1>same data. It just renders things in a

00:14:32.780 --> 00:14:34.460
<v Speaker 1>different ways with much

00:14:34.860 --> 00:14:36.380
<v Speaker 1>better shaders. So,

00:14:37.580 --> 00:14:39.740
<v Speaker 1>of course, it wasn't a full damage experience.

00:14:39.740 --> 00:14:41.340
<v Speaker 1>It was just a viewer of the of

00:14:41.340 --> 00:14:42.380
<v Speaker 1>the map, but

00:14:43.035 --> 00:14:46.075
<v Speaker 1>it it it it is quite fun to

00:14:46.075 --> 00:14:48.155
<v Speaker 1>take something that is old and

00:14:48.475 --> 00:14:50.715
<v Speaker 1>give it a little bit different thing.

00:14:51.275 --> 00:14:53.275
<v Speaker 0>Yeah. Definitely. I

00:14:53.515 --> 00:14:55.115
<v Speaker 0>I I would love to get some

00:14:55.589 --> 00:14:57.430
<v Speaker 0>some proper Kubernetes clusters and make a game

00:14:57.430 --> 00:14:59.190
<v Speaker 0>of it. Maybe even Age of Empires, like,

00:14:59.190 --> 00:15:00.630
<v Speaker 0>maybe I could build up my own pods

00:15:00.630 --> 00:15:02.790
<v Speaker 0>and then go attack some other cluster pods.

00:15:02.949 --> 00:15:04.790
<v Speaker 0>But that's not why we're here today, so

00:15:04.790 --> 00:15:06.310
<v Speaker 0>I'm not gonna go down that rabbit hole.

00:15:06.310 --> 00:15:06.550
<v Speaker 1>Yeah.

00:15:08.584 --> 00:15:11.464
<v Speaker 0>No. I've got the Kubevious website here. So

00:15:11.464 --> 00:15:13.225
<v Speaker 0>I'm gonna pull up my screen share,

00:15:14.745 --> 00:15:16.345
<v Speaker 0>and I'll move to miss them. I'm loving

00:15:16.345 --> 00:15:18.745
<v Speaker 0>that little animated sun that keeps floating around.

00:15:18.745 --> 00:15:21.464
<v Speaker 0>That's awesome. Yeah. So we're saying here that

00:15:21.464 --> 00:15:24.160
<v Speaker 0>Kubevious is going to avoid mistakes and cost

00:15:24.160 --> 00:15:25.840
<v Speaker 0>the outages. So this this

00:15:26.240 --> 00:15:27.760
<v Speaker 0>component you talked about is going to scan

00:15:27.760 --> 00:15:30.480
<v Speaker 0>manifest. We get application insights and the ability

00:15:30.480 --> 00:15:33.440
<v Speaker 0>to reduce problem resolution domain. So those are

00:15:33.440 --> 00:15:34.800
<v Speaker 0>three things that I would love to improve

00:15:34.800 --> 00:15:37.280
<v Speaker 0>on my Kubernetes clusters, and I I'm happy

00:15:37.280 --> 00:15:38.560
<v Speaker 0>that you get to guide us through this

00:15:38.560 --> 00:15:38.880
<v Speaker 0>today.

00:15:40.165 --> 00:15:41.045
<v Speaker 0>So

00:15:41.445 --> 00:15:42.485
<v Speaker 0>also have

00:15:44.084 --> 00:15:46.725
<v Speaker 0>a Kubernetes cluster with some fake workloads on

00:15:46.725 --> 00:15:48.644
<v Speaker 0>it and just so that we can use

00:15:48.644 --> 00:15:50.245
<v Speaker 0>Kubevious in a way that's gonna get us

00:15:50.245 --> 00:15:52.390
<v Speaker 0>a bit more data. So our step one

00:15:52.390 --> 00:15:54.630
<v Speaker 0>here is gonna be get Kubevious deployed onto

00:15:54.630 --> 00:15:55.510
<v Speaker 0>my cluster.

00:15:56.310 --> 00:15:57.750
<v Speaker 0>Are you ready, Ruben?

00:15:58.630 --> 00:16:00.310
<v Speaker 1>Yeah. Go for it. Alright.

00:16:01.830 --> 00:16:03.590
<v Speaker 0>So I'm gonna go through the is the

00:16:03.590 --> 00:16:05.030
<v Speaker 0>documentation the best place for us to get

00:16:05.030 --> 00:16:05.670
<v Speaker 0>started today?

00:16:08.195 --> 00:16:09.795
<v Speaker 1>Either Dots or the

00:16:10.195 --> 00:16:11.475
<v Speaker 1>GitHub project.

00:16:12.835 --> 00:16:14.915
<v Speaker 1>Yeah. I can probably do GitHub project.

00:16:15.235 --> 00:16:17.155
<v Speaker 0>Alright. Let's pop over here.

00:16:18.755 --> 00:16:20.435
<v Speaker 0>And let's

00:16:20.160 --> 00:16:21.920
<v Speaker 0>it goes to the organization

00:16:22.639 --> 00:16:24.160
<v Speaker 0>oh, you're using one of those org with

00:16:24.160 --> 00:16:26.480
<v Speaker 0>me. Those are kill. Mhmm. I don't see

00:16:26.480 --> 00:16:27.440
<v Speaker 0>a lot of those.

00:16:28.240 --> 00:16:30.079
<v Speaker 0>So your CLI is called guard?

00:16:31.519 --> 00:16:34.000
<v Speaker 1>So the guard is the enforcement part. So

00:16:34.000 --> 00:16:35.680
<v Speaker 1>we would use it

00:16:36.105 --> 00:16:37.065
<v Speaker 1>afterwards.

00:16:37.065 --> 00:16:39.305
<v Speaker 1>After we install Kubevious, then we could use

00:16:39.305 --> 00:16:40.265
<v Speaker 1>the guard just to

00:16:41.385 --> 00:16:44.024
<v Speaker 1>just before we would make the further changes

00:16:44.024 --> 00:16:45.305
<v Speaker 1>before you would

00:16:46.024 --> 00:16:48.265
<v Speaker 1>do another TubeControlApply,

00:16:48.265 --> 00:16:50.024
<v Speaker 1>which would use the guard. But we don't

00:16:50.024 --> 00:16:52.420
<v Speaker 1>have to start with it. And you really

00:16:52.420 --> 00:16:53.940
<v Speaker 1>have to have Kubevious

00:16:54.020 --> 00:16:56.420
<v Speaker 1>running in your cluster to be able to

00:16:56.420 --> 00:16:57.460
<v Speaker 1>use the guard.

00:16:58.020 --> 00:16:59.940
<v Speaker 1>Because the way it works, it communicates with

00:16:59.940 --> 00:17:02.420
<v Speaker 1>Kubevious, and then it kind of asks it,

00:17:02.420 --> 00:17:04.755
<v Speaker 1>hey. I wanna make those changes. Can you

00:17:04.755 --> 00:17:07.714
<v Speaker 1>just sanitize and just check what's gonna happen

00:17:07.714 --> 00:17:09.555
<v Speaker 1>in my cluster if I were to apply

00:17:09.555 --> 00:17:10.275
<v Speaker 1>this change?

00:17:11.234 --> 00:17:11.875
<v Speaker 0>Okay.

00:17:12.115 --> 00:17:14.755
<v Speaker 0>Well, I found the installation instructions. So we're

00:17:14.755 --> 00:17:16.835
<v Speaker 0>gonna create a namespace called Kubevious.

00:17:17.075 --> 00:17:18.595
<v Speaker 0>We're going to add a Helm repository,

00:17:19.210 --> 00:17:21.210
<v Speaker 0>and then we're going to install.

00:17:22.250 --> 00:17:24.570
<v Speaker 0>I am not familiar with the atomic flag

00:17:24.570 --> 00:17:26.250
<v Speaker 0>on Helm. Is that

00:17:26.810 --> 00:17:30.890
<v Speaker 0>important? It's basically says either install everything or

00:17:30.890 --> 00:17:33.770
<v Speaker 1>if something doesn't work, just uninstall.

00:17:34.174 --> 00:17:36.255
<v Speaker 0>Oh, nice. You don't have to. Usually, it

00:17:36.255 --> 00:17:36.975
<v Speaker 1>works.

00:17:39.455 --> 00:17:42.414
<v Speaker 1>But I don't have Helm according to my

00:17:42.495 --> 00:17:44.894
<v Speaker 0>highlighting here. So this is my

00:17:45.294 --> 00:17:45.775
<v Speaker 0>new

00:17:47.700 --> 00:17:50.260
<v Speaker 0>Mac Studio. So I'm gonna install and stuff

00:17:50.260 --> 00:17:52.179
<v Speaker 0>as required because my dot files were not

00:17:52.179 --> 00:17:54.100
<v Speaker 0>as complete as I thought they were. Mhmm.

00:17:54.660 --> 00:17:55.700
<v Speaker 0>Let's see.

00:17:56.740 --> 00:17:58.340
<v Speaker 0>Should hopefully just take a moment.

00:18:00.544 --> 00:18:02.145
<v Speaker 0>I hope you get the right helm. Have

00:18:02.145 --> 00:18:04.145
<v Speaker 0>you ever installed helm with apt get? Normally,

00:18:04.145 --> 00:18:05.585
<v Speaker 0>you get this random binary.

00:18:06.705 --> 00:18:09.025
<v Speaker 1>Yeah. I think it's 3.9 as long as

00:18:09.025 --> 00:18:10.384
<v Speaker 1>it's something

00:18:11.505 --> 00:18:13.025
<v Speaker 1>higher than 3.2,

00:18:13.025 --> 00:18:14.065
<v Speaker 1>but then it should work.

00:18:16.970 --> 00:18:18.649
<v Speaker 0>Well, we'll give this just a moment.

00:18:19.370 --> 00:18:21.049
<v Speaker 0>And then this is going to

00:18:21.210 --> 00:18:23.130
<v Speaker 0>create a port forward, and we should be

00:18:23.130 --> 00:18:25.850
<v Speaker 0>able to browse to local host 88. Yeah.

00:18:25.850 --> 00:18:27.690
<v Speaker 0>I'll just pop that open, and we'll give

00:18:27.690 --> 00:18:28.250
<v Speaker 0>him a minute.

00:18:34.345 --> 00:18:37.145
<v Speaker 1>Usually, it takes a minute or so because

00:18:37.145 --> 00:18:40.105
<v Speaker 1>it has to install Redis,

00:18:40.105 --> 00:18:40.904
<v Speaker 1>MySQL.

00:18:41.544 --> 00:18:43.705
<v Speaker 1>MySQL takes a little bit more there more

00:18:43.705 --> 00:18:46.140
<v Speaker 1>time to come up. And then there are

00:18:46.140 --> 00:18:47.580
<v Speaker 1>couple of microservices,

00:18:47.580 --> 00:18:50.620
<v Speaker 1>but those should also Well, we can we

00:18:50.620 --> 00:18:52.300
<v Speaker 0>can follow along. Right? So we could do

00:18:52.300 --> 00:18:53.100
<v Speaker 0>a Kubeflow,

00:18:53.580 --> 00:18:54.860
<v Speaker 0>Kubevious,

00:18:55.100 --> 00:18:57.340
<v Speaker 0>get pods, have a watcher.

00:18:59.020 --> 00:19:00.380
<v Speaker 0>Oh, wrong context.

00:19:00.965 --> 00:19:02.485
<v Speaker 0>There

00:19:05.125 --> 00:19:07.525
<v Speaker 0>we go. So we're just waiting on MySQL

00:19:07.525 --> 00:19:09.045
<v Speaker 0>to pass in its probes. Yeah. And we

00:19:09.045 --> 00:19:10.005
<v Speaker 0>should be good. Yeah.

00:19:14.120 --> 00:19:16.280
<v Speaker 0>Interesting time in Sam in the comments. What

00:19:16.280 --> 00:19:17.640
<v Speaker 0>does atomic do?

00:19:20.920 --> 00:19:21.640
<v Speaker 0>So

00:19:22.440 --> 00:19:24.520
<v Speaker 0>Ruben just said, atomic means that if any

00:19:24.520 --> 00:19:27.240
<v Speaker 0>component of the helm installed fails, all of

00:19:27.240 --> 00:19:28.680
<v Speaker 0>it will be removed.

00:19:29.505 --> 00:19:30.945
<v Speaker 0>Which is a nice flag. So I thought

00:19:31.025 --> 00:19:32.225
<v Speaker 0>I don't know how I'd missed it. But

00:19:33.825 --> 00:19:35.825
<v Speaker 1>Yeah. So for example, if that my SQL

00:19:35.825 --> 00:19:38.065
<v Speaker 1>wouldn't come up at some point, there is

00:19:38.065 --> 00:19:38.945
<v Speaker 1>some time in,

00:19:39.345 --> 00:19:41.905
<v Speaker 1>think, five minutes or so, so it would

00:19:41.905 --> 00:19:43.425
<v Speaker 1>start rolling back the changes.

00:19:44.790 --> 00:19:45.510
<v Speaker 1>Sweet.

00:19:46.310 --> 00:19:49.190
<v Speaker 1>Not that it always can roll back successfully.

00:19:49.190 --> 00:19:51.510
<v Speaker 1>That's a completely different story, but but look

00:19:51.510 --> 00:19:54.230
<v Speaker 1>at it. But at least it tries. Yeah.

00:19:54.230 --> 00:19:56.710
<v Speaker 1>It tries. Yeah. Alright. Let me zoom in

00:19:56.710 --> 00:19:58.549
<v Speaker 0>on this a little bit without

00:19:59.030 --> 00:19:59.910
<v Speaker 0>breaking the view.

00:20:01.165 --> 00:20:02.925
<v Speaker 0>I think we'll lose the bottom, but maybe

00:20:02.925 --> 00:20:04.125
<v Speaker 0>that'll be okay for now.

00:20:04.845 --> 00:20:06.205
<v Speaker 0>So do you wanna It does

00:20:06.765 --> 00:20:09.565
<v Speaker 1>yeah. Just one more quick thing. It doesn't

00:20:09.565 --> 00:20:12.205
<v Speaker 1>like zooming yet. We're using another library.

00:20:13.200 --> 00:20:15.840
<v Speaker 1>So after you zoom, you if you just

00:20:15.840 --> 00:20:18.240
<v Speaker 1>refresh the page, then it would come back

00:20:18.240 --> 00:20:21.279
<v Speaker 1>into a normal shape. Yeah. Oh, nice.

00:20:22.399 --> 00:20:25.039
<v Speaker 1>It's a bug. It's we're using the library.

00:20:25.039 --> 00:20:27.279
<v Speaker 1>Probably, we'll have to get rid of it

00:20:27.279 --> 00:20:27.839
<v Speaker 1>and

00:20:28.080 --> 00:20:29.755
<v Speaker 1>do it our own way.

00:20:30.795 --> 00:20:32.315
<v Speaker 0>Yeah. All all I have to do is

00:20:32.315 --> 00:20:34.715
<v Speaker 0>refresh. I'm happy with that. So Yeah. You

00:20:34.715 --> 00:20:35.995
<v Speaker 0>wanted to tell us what we're looking at

00:20:35.995 --> 00:20:36.635
<v Speaker 0>just now?

00:20:37.515 --> 00:20:40.395
<v Speaker 1>So that's the mainstream of Kubevious.

00:20:40.395 --> 00:20:43.990
<v Speaker 1>It's the place where soon we'll see

00:20:44.470 --> 00:20:47.350
<v Speaker 1>the contents of the of the cluster.

00:20:47.590 --> 00:20:49.429
<v Speaker 1>So there is a summary screen.

00:20:49.590 --> 00:20:52.470
<v Speaker 1>So it's supposed to load data from the

00:20:52.470 --> 00:20:55.190
<v Speaker 1>cluster right now. And then there are other

00:20:55.190 --> 00:20:56.710
<v Speaker 1>more specialized views,

00:20:57.085 --> 00:20:59.485
<v Speaker 1>like logic, images, gateway.

00:21:00.045 --> 00:21:00.684
<v Speaker 1>So

00:21:01.245 --> 00:21:03.245
<v Speaker 1>if we go back to summary, I think

00:21:03.245 --> 00:21:04.125
<v Speaker 1>it should.

00:21:04.685 --> 00:21:06.285
<v Speaker 1>It usually takes

00:21:06.685 --> 00:21:08.205
<v Speaker 1>much shorter. But

00:21:08.765 --> 00:21:11.645
<v Speaker 0>Okay. So what it's doing right now, it's

00:21:12.290 --> 00:21:15.890
<v Speaker 1>there is a process called Kubevious parser, and

00:21:15.890 --> 00:21:19.250
<v Speaker 1>it's supposed to load everything from the API

00:21:19.250 --> 00:21:20.129
<v Speaker 1>server.

00:21:20.850 --> 00:21:23.169
<v Speaker 1>And then it's gonna ship those manifest

00:21:25.570 --> 00:21:26.850
<v Speaker 1>to to Kubevious

00:21:26.945 --> 00:21:30.065
<v Speaker 1>engine, and then it would kind of correlate

00:21:30.065 --> 00:21:31.904
<v Speaker 1>all those things and show

00:21:32.465 --> 00:21:33.425
<v Speaker 1>violations

00:21:33.425 --> 00:21:34.544
<v Speaker 1>and errors

00:21:34.625 --> 00:21:37.505
<v Speaker 1>and just it should render the UI right

00:21:37.505 --> 00:21:38.304
<v Speaker 1>after that.

00:21:40.940 --> 00:21:41.980
<v Speaker 1>Right. Software

00:21:42.860 --> 00:21:44.220
<v Speaker 1>usually breaks.

00:21:45.100 --> 00:21:47.260
<v Speaker 1>Let's try to do that. That's how things

00:21:47.260 --> 00:21:48.059
<v Speaker 1>are. Right?

00:21:49.980 --> 00:21:52.700
<v Speaker 1>Do you if you just can you open

00:21:52.700 --> 00:21:56.744
<v Speaker 1>up the loads for maybe Kubevious parser? Yeah.

00:21:56.745 --> 00:21:58.105
<v Speaker 0>Can. Yeah.

00:22:03.145 --> 00:22:04.265
<v Speaker 1>So it's

00:22:05.385 --> 00:22:08.825
<v Speaker 1>it has some logic. It it tries to

00:22:07.890 --> 00:22:10.850
<v Speaker 1>query everything, then it, there is some

00:22:12.050 --> 00:22:13.570
<v Speaker 1>weights and checks.

00:22:14.770 --> 00:22:16.130
<v Speaker 1>There are certain

00:22:16.610 --> 00:22:18.130
<v Speaker 1>resources that it

00:22:18.690 --> 00:22:22.335
<v Speaker 1>tries to kind of load. Sometimes it doesn't

00:22:22.335 --> 00:22:25.615
<v Speaker 1>subside, and it waits a minute or so.

00:22:26.175 --> 00:22:28.895
<v Speaker 1>Usually, it should be shorter, but, yeah, I

00:22:28.895 --> 00:22:31.695
<v Speaker 1>think I don't see. At some point, it

00:22:32.015 --> 00:22:33.775
<v Speaker 1>at some point, it gives up and then

00:22:33.775 --> 00:22:36.415
<v Speaker 1>moves for forwards without those

00:22:37.030 --> 00:22:37.909
<v Speaker 1>CRTs.

00:22:39.590 --> 00:22:41.269
<v Speaker 0>I'm not seeing any

00:22:42.070 --> 00:22:43.350
<v Speaker 0>error message.

00:22:43.990 --> 00:22:45.990
<v Speaker 0>Am I just messing it? Sometimes

00:22:49.670 --> 00:22:51.510
<v Speaker 1>there are issues with metric.

00:22:51.985 --> 00:22:52.624
<v Speaker 1>Yeah.

00:23:01.825 --> 00:23:03.505
<v Speaker 0>Could it be my cluster? Can we check?

00:23:05.400 --> 00:23:08.200
<v Speaker 1>I don't think so. Can we check the

00:23:08.200 --> 00:23:09.160
<v Speaker 1>the other

00:23:09.320 --> 00:23:11.720
<v Speaker 1>process, the Kubevious pod?

00:23:15.400 --> 00:23:16.200
<v Speaker 0>Back end?

00:23:16.760 --> 00:23:17.800
<v Speaker 0>Yeah. The back end.

00:23:21.355 --> 00:23:23.034
<v Speaker 1>Just scroll up.

00:23:25.835 --> 00:23:26.715
<v Speaker 1>Okay.

00:23:26.715 --> 00:23:28.395
<v Speaker 0>Oh, we do have something. Okay.

00:23:29.435 --> 00:23:32.075
<v Speaker 0>Oh, one of the database migrations not run?

00:23:33.995 --> 00:23:36.920
<v Speaker 1>It should do it on its own. It

00:23:36.920 --> 00:23:40.120
<v Speaker 0>says that Kubevious notification snooze doesn't exist.

00:23:40.840 --> 00:23:42.440
<v Speaker 1>Oh, that's not a

00:23:43.240 --> 00:23:45.560
<v Speaker 1>that's not a good sign. So

00:23:46.920 --> 00:23:49.685
<v Speaker 1>so if we go you know what? Let's

00:23:49.685 --> 00:23:52.325
<v Speaker 1>do some dirty trick. If you can just

00:23:52.325 --> 00:23:53.684
<v Speaker 1>kill this pod,

00:23:55.685 --> 00:23:57.685
<v Speaker 1>if you can just kill this pod, it's

00:23:57.685 --> 00:24:00.005
<v Speaker 1>supposed to retrieve the the missing labels.

00:24:02.269 --> 00:24:04.269
<v Speaker 0>So you said the back end pod started

00:24:04.269 --> 00:24:06.750
<v Speaker 0>before MySQL was happy and it never Yeah.

00:24:06.750 --> 00:24:08.349
<v Speaker 1>It's supposed to yeah.

00:24:09.870 --> 00:24:10.909
<v Speaker 1>It's supposed to

00:24:12.110 --> 00:24:14.029
<v Speaker 1>it's not supposed to do that, but

00:24:19.794 --> 00:24:22.114
<v Speaker 1>okay. Alright. Let's give that a moment.

00:24:22.434 --> 00:24:24.434
<v Speaker 0>So we've got a hello from Siva in

00:24:24.434 --> 00:24:25.234
<v Speaker 0>the chat.

00:24:25.395 --> 00:24:26.195
<v Speaker 0>Hello, Siva.

00:24:27.010 --> 00:24:29.010
<v Speaker 0>And Sam's saying, good idea. You're looking for

00:24:29.010 --> 00:24:29.970
<v Speaker 0>the error message.

00:24:30.210 --> 00:24:31.809
<v Speaker 0>Yeah. We love a bit of live debugging

00:24:31.809 --> 00:24:34.210
<v Speaker 0>on this channel. That's for sure. Yeah.

00:24:35.170 --> 00:24:37.330
<v Speaker 0>So let's see what happens when we pop

00:24:37.330 --> 00:24:37.809
<v Speaker 0>over here.

00:24:38.865 --> 00:24:41.185
<v Speaker 1>So the way it works, so the parser

00:24:41.185 --> 00:24:42.305
<v Speaker 1>will retry

00:24:42.305 --> 00:24:43.184
<v Speaker 1>within

00:24:43.825 --> 00:24:44.785
<v Speaker 1>within

00:24:44.785 --> 00:24:46.865
<v Speaker 1>just a couple of minutes. It's actually

00:24:47.265 --> 00:24:48.785
<v Speaker 0>If I delete the parser, will that speed

00:24:48.785 --> 00:24:49.424
<v Speaker 0>it up?

00:24:49.985 --> 00:24:52.545
<v Speaker 1>No. There is no name. No. Alright. I

00:24:52.545 --> 00:24:52.945
<v Speaker 0>trust you.

00:24:55.360 --> 00:24:58.320
<v Speaker 1>We can just since we're doing more

00:24:58.560 --> 00:25:00.480
<v Speaker 1>more involved debugging,

00:25:00.640 --> 00:25:02.560
<v Speaker 1>maybe we can open up the logs for

00:25:02.560 --> 00:25:05.120
<v Speaker 1>the for the patent and see whenever there

00:25:05.120 --> 00:25:06.560
<v Speaker 1>is something coming in from the.

00:25:11.895 --> 00:25:14.375
<v Speaker 1>The other guy usually waits for a minute

00:25:14.375 --> 00:25:15.735
<v Speaker 1>before retrying.

00:25:16.535 --> 00:25:18.695
<v Speaker 0>Yeah. At least the back end. This looks

00:25:18.695 --> 00:25:20.775
<v Speaker 0>a much better shape now. Like, this is

00:25:20.935 --> 00:25:23.655
<v Speaker 1>Yeah. We don't see that error anymore. Right?

00:25:24.460 --> 00:25:26.860
<v Speaker 0>No. I don't see any errors. It seems

00:25:26.860 --> 00:25:28.540
<v Speaker 0>to set up a whole bunch of stuff.

00:25:28.540 --> 00:25:30.460
<v Speaker 0>So It could go all the way up.

00:25:30.380 --> 00:25:31.820
<v Speaker 0>Just waiting for the parser.

00:25:32.380 --> 00:25:33.100
<v Speaker 1>Mhmm.

00:25:34.380 --> 00:25:37.340
<v Speaker 1>So maybe we can do a better job

00:25:37.340 --> 00:25:40.795
<v Speaker 1>in kind of waiting for MySQL to come

00:25:40.795 --> 00:25:43.274
<v Speaker 1>back up before creating tables.

00:25:43.674 --> 00:25:46.715
<v Speaker 0>Have you seen the project schema hero from

00:25:46.715 --> 00:25:49.355
<v Speaker 0>a CNCF? I saw a CNCF project. Yeah.

00:25:49.355 --> 00:25:50.875
<v Speaker 0>It's really cool. Like, you can What does

00:25:50.875 --> 00:25:53.849
<v Speaker 1>it do? It does database migrations on Kubernetes.

00:25:55.850 --> 00:25:58.009
<v Speaker 0>So you you define your schemas

00:25:58.889 --> 00:25:59.690
<v Speaker 0>as

00:25:59.690 --> 00:26:00.730
<v Speaker 0>custom resources,

00:26:00.730 --> 00:26:03.289
<v Speaker 0>and it speaks to my scale and manages

00:26:03.289 --> 00:26:05.529
<v Speaker 0>all for you and handles the migrations and

00:26:05.529 --> 00:26:07.544
<v Speaker 0>stuff like that. It's pretty cool. Yeah. That's

00:26:07.544 --> 00:26:09.864
<v Speaker 1>awesome. I'll definitely take a look. There

00:26:10.264 --> 00:26:13.385
<v Speaker 1>was some activity on GitHub, so there was

00:26:13.385 --> 00:26:14.904
<v Speaker 1>a suggestion to use

00:26:16.745 --> 00:26:18.985
<v Speaker 1>MySQL and Redis dependencies

00:26:18.985 --> 00:26:19.705
<v Speaker 1>on

00:26:20.730 --> 00:26:23.610
<v Speaker 1>within Kubevious projects so that we don't have

00:26:23.610 --> 00:26:26.250
<v Speaker 1>our own ways of printing up

00:26:26.570 --> 00:26:27.450
<v Speaker 1>MySQL.

00:26:27.530 --> 00:26:29.930
<v Speaker 1>So it would kind of make our lives

00:26:29.930 --> 00:26:32.330
<v Speaker 1>easier, and kind of we would leverage

00:26:32.410 --> 00:26:35.375
<v Speaker 1>the existing helm charts for that. I mean,

00:26:35.375 --> 00:26:37.455
<v Speaker 0>migrations are the bane of every software project.

00:26:37.455 --> 00:26:38.495
<v Speaker 0>I don't think I've ever worked in a

00:26:38.495 --> 00:26:41.135
<v Speaker 0>software project where it the migrations haven't been

00:26:41.135 --> 00:26:42.495
<v Speaker 0>the most painful part. So

00:26:43.294 --> 00:26:44.654
<v Speaker 1>Yeah. Yeah.

00:26:46.575 --> 00:26:46.975
<v Speaker 1>Well,

00:26:47.830 --> 00:26:48.710
<v Speaker 1>let's

00:26:48.710 --> 00:26:52.310
<v Speaker 1>go back to parser maybe. Yeah. Okay. I

00:26:52.310 --> 00:26:53.750
<v Speaker 0>can take a look at parser.

00:26:59.910 --> 00:27:00.630
<v Speaker 0>Let's see.

00:27:04.635 --> 00:27:06.955
<v Speaker 1>If you go up, it there should be

00:27:06.955 --> 00:27:09.755
<v Speaker 1>some mention of postponing something for

00:27:14.809 --> 00:27:17.130
<v Speaker 0>I think it's complaining because there's no node

00:27:17.130 --> 00:27:19.450
<v Speaker 0>metrics, but I need to install metric server.

00:27:21.850 --> 00:27:24.890
<v Speaker 1>So it's supposed to just to skip it,

00:27:24.890 --> 00:27:26.650
<v Speaker 1>so it should be able to.

00:27:32.695 --> 00:27:34.934
<v Speaker 0>I can install metric server if you want.

00:27:37.015 --> 00:27:39.335
<v Speaker 1>Maybe it would take much longer time.

00:27:44.530 --> 00:27:47.249
<v Speaker 1>You know what? Let's

00:27:47.409 --> 00:27:49.730
<v Speaker 1>let's just kill this guy as well and

00:27:52.770 --> 00:27:54.610
<v Speaker 0>Let's just shut down my cluster.

00:27:56.285 --> 00:27:58.525
<v Speaker 0>Okay. And you're on maybe we'll do that

00:27:58.525 --> 00:28:01.004
<v Speaker 0>next. We'll try this. Yeah. Mhmm.

00:28:04.845 --> 00:28:08.284
<v Speaker 1>There's no demo that crashes first. Right? The

00:28:08.525 --> 00:28:09.245
<v Speaker 1>first one.

00:28:12.420 --> 00:28:15.059
<v Speaker 1>Yeah. Well, Kubernetes is hard.

00:28:15.460 --> 00:28:17.380
<v Speaker 0>I'm going to install

00:28:17.380 --> 00:28:20.019
<v Speaker 0>metric server just in case that helps.

00:28:22.340 --> 00:28:25.095
<v Speaker 1>It's very common for a metric server not

00:28:25.095 --> 00:28:28.294
<v Speaker 1>to be obvious, especially on home home environments.

00:28:28.855 --> 00:28:31.734
<v Speaker 1>So we specifically did something so that it

00:28:31.975 --> 00:28:34.534
<v Speaker 1>it's not gonna be an issue. But yeah.

00:28:37.110 --> 00:28:37.990
<v Speaker 0>Let's

00:28:37.990 --> 00:28:38.629
<v Speaker 0>see.

00:28:40.549 --> 00:28:42.390
<v Speaker 1>I it's okay.

00:28:49.205 --> 00:28:51.205
<v Speaker 0>I I don't I don't know if this

00:28:51.205 --> 00:28:53.605
<v Speaker 0>is is this better? Is this the same?

00:28:54.165 --> 00:28:55.764
<v Speaker 1>No. I mean, it looks

00:28:55.845 --> 00:28:56.725
<v Speaker 1>okay.

00:28:56.885 --> 00:28:58.565
<v Speaker 1>It's how it's supposed to be.

00:29:01.925 --> 00:29:03.685
<v Speaker 1>You said you have another cluster?

00:29:04.240 --> 00:29:06.559
<v Speaker 1>Can we try it out on that one?

00:29:06.559 --> 00:29:06.720
<v Speaker 1>And

00:29:08.159 --> 00:29:08.799
<v Speaker 0>Mhmm.

00:29:13.440 --> 00:29:14.720
<v Speaker 0>GBCTX.

00:29:14.720 --> 00:29:16.720
<v Speaker 0>I'll just use Docker desktop. Let's see.

00:29:19.165 --> 00:29:21.325
<v Speaker 0>Have a look. Meanwhile, I'll try to compare

00:29:21.325 --> 00:29:23.645
<v Speaker 1>the logs with my own lab.

00:29:29.645 --> 00:29:31.645
<v Speaker 0>Alright. So it's installing again.

00:29:32.059 --> 00:29:33.740
<v Speaker 0>So we'll give that just a moment and

00:29:33.740 --> 00:29:35.580
<v Speaker 0>then track the UI again. Yeah.

00:29:36.540 --> 00:29:38.460
<v Speaker 0>And I'll switch my contact then here so

00:29:38.460 --> 00:29:39.739
<v Speaker 0>we can follow along.

00:29:44.700 --> 00:29:46.299
<v Speaker 0>And it's getting there. Not long.

00:29:48.515 --> 00:29:50.675
<v Speaker 0>We have a lot of support in the

00:29:50.675 --> 00:29:52.195
<v Speaker 0>the chat. Sam says,

00:29:52.435 --> 00:29:54.115
<v Speaker 0>love this live debugging.

00:29:54.835 --> 00:29:56.915
<v Speaker 0>And, Kenneth, I think, guys can do it.

00:29:56.915 --> 00:29:57.715
<v Speaker 0>Keep trying.

00:29:57.875 --> 00:29:59.795
<v Speaker 0>Don't you worry. We're we're here till it

00:29:59.795 --> 00:30:01.155
<v Speaker 0>works. Right, Ruben?

00:30:01.990 --> 00:30:02.549
<v Speaker 1>Yeah.

00:30:03.990 --> 00:30:06.070
<v Speaker 1>There's no limit. Right? It's I hope you

00:30:06.070 --> 00:30:07.749
<v Speaker 0>can look at our plans. So

00:30:08.070 --> 00:30:09.029
<v Speaker 1>Yeah. Alright.

00:30:09.669 --> 00:30:11.350
<v Speaker 0>Let's just wait for my SQL and see

00:30:11.350 --> 00:30:12.950
<v Speaker 0>where we are. I'm

00:30:13.110 --> 00:30:14.870
<v Speaker 1>just gonna cancel a couple of

00:30:15.535 --> 00:30:17.295
<v Speaker 1>meetings at the dinner area. And

00:30:20.815 --> 00:30:23.534
<v Speaker 0>Alright. Just waiting on the probes.

00:30:23.615 --> 00:30:24.255
<v Speaker 0>So

00:30:24.415 --> 00:30:27.294
<v Speaker 0>that should keep helm happy. There we go.

00:30:28.735 --> 00:30:29.935
<v Speaker 0>Refresh the UI.

00:30:30.809 --> 00:30:32.009
<v Speaker 0>So now we have to wait a couple

00:30:32.009 --> 00:30:33.369
<v Speaker 0>of minutes for the data.

00:30:39.610 --> 00:30:41.769
<v Speaker 0>Kinda got the same screen. Is that good

00:30:41.769 --> 00:30:42.250
<v Speaker 0>or bad?

00:30:43.385 --> 00:30:44.024
<v Speaker 1>Is it

00:30:45.865 --> 00:30:48.585
<v Speaker 1>so you canceled the other one. Right? The

00:30:48.585 --> 00:30:50.585
<v Speaker 1>port forwarding for the other one, and now

00:30:50.585 --> 00:30:52.825
<v Speaker 1>it's from the Yep. This is our New

00:30:52.825 --> 00:30:53.865
<v Speaker 1>one. New cluster.

00:30:59.630 --> 00:31:02.190
<v Speaker 1>Let's check the logs for that one from

00:31:02.190 --> 00:31:03.550
<v Speaker 1>the back end. Yep.

00:31:15.065 --> 00:31:16.665
<v Speaker 0>Oh, yeah. So this is the

00:31:16.825 --> 00:31:18.184
<v Speaker 0>migration again.

00:31:19.545 --> 00:31:20.425
<v Speaker 1>Is it?

00:31:22.265 --> 00:31:24.505
<v Speaker 0>I'll delete the back end. Quite. Yeah.

00:31:24.825 --> 00:31:26.870
<v Speaker 1>Let me see. Okay. Let me see which

00:31:26.870 --> 00:31:27.749
<v Speaker 1>version

00:31:27.830 --> 00:31:29.590
<v Speaker 1>do we have on the demo.

00:31:32.710 --> 00:31:33.909
<v Speaker 1>That's

00:31:33.990 --> 00:31:34.549
<v Speaker 1>very weird.

00:31:38.965 --> 00:31:40.164
<v Speaker 0>Let's try this.

00:31:42.245 --> 00:31:43.924
<v Speaker 0>Oh, I just deleted it again because I'm

00:31:43.924 --> 00:31:45.924
<v Speaker 0>an idiot. Sorry. I

00:31:47.284 --> 00:31:48.644
<v Speaker 0>meant to get the log.

00:31:50.485 --> 00:31:51.125
<v Speaker 0>There you go.

00:31:53.340 --> 00:31:55.340
<v Speaker 0>Alright. No error messages.

00:31:55.420 --> 00:31:56.940
<v Speaker 0>Looks happy. Mhmm.

00:31:57.900 --> 00:32:00.059
<v Speaker 0>Oh, look. We have a UI. Okay.

00:32:01.180 --> 00:32:02.140
<v Speaker 1>Finally,

00:32:02.140 --> 00:32:04.380
<v Speaker 1>it only took two clusters. Right?

00:32:04.780 --> 00:32:08.565
<v Speaker 0>Well, my first cluster is a managed Kubernetes

00:32:08.565 --> 00:32:10.645
<v Speaker 0>cluster. Maybe I don't know if there's RBAC

00:32:10.645 --> 00:32:12.725
<v Speaker 0>things that need to be tweaked in that.

00:32:12.725 --> 00:32:13.445
<v Speaker 0>So

00:32:14.325 --> 00:32:16.245
<v Speaker 0>we'll just disregard that one unless you use

00:32:16.245 --> 00:32:17.924
<v Speaker 0>this one. Mhmm. David,

00:32:18.325 --> 00:32:20.325
<v Speaker 1>if you can just shoot me the logs

00:32:20.325 --> 00:32:22.405
<v Speaker 1>for that one that didn't work, I wanna

00:32:22.405 --> 00:32:24.049
<v Speaker 1>kind of get hold of it.

00:32:24.450 --> 00:32:25.970
<v Speaker 0>If Yeah. I'll give you access to that

00:32:25.970 --> 00:32:27.730
<v Speaker 0>cluster after the session. Don't worry. You can

00:32:27.730 --> 00:32:29.250
<v Speaker 0>you can put it. Works. Yeah.

00:32:30.050 --> 00:32:31.730
<v Speaker 0>Alright. Tell me what we're looking at now

00:32:31.730 --> 00:32:32.529
<v Speaker 0>then, please.

00:32:33.170 --> 00:32:35.410
<v Speaker 1>So this is

00:32:35.284 --> 00:32:38.085
<v Speaker 1>probably the first thing that you would wanna

00:32:38.085 --> 00:32:40.884
<v Speaker 1>do is to look at the browser section.

00:32:40.965 --> 00:32:43.764
<v Speaker 1>It's really from the left side navigation screen.

00:32:43.845 --> 00:32:46.005
<v Speaker 1>So the summary, it gives you the top

00:32:46.005 --> 00:32:48.485
<v Speaker 1>level summary of the cluster and, like, some

00:32:48.485 --> 00:32:50.565
<v Speaker 1>metrics, how many apps, namespaces,

00:32:51.230 --> 00:32:53.710
<v Speaker 1>what are the resources within the clusters.

00:32:54.510 --> 00:32:55.070
<v Speaker 1>And

00:32:55.310 --> 00:32:57.550
<v Speaker 1>below that, it will show you the top

00:32:57.550 --> 00:33:00.110
<v Speaker 1>three namespaces that you misidentified

00:33:00.350 --> 00:33:01.150
<v Speaker 1>issues

00:33:01.710 --> 00:33:02.510
<v Speaker 1>and

00:33:02.590 --> 00:33:04.590
<v Speaker 1>top three issues

00:33:05.534 --> 00:33:07.374
<v Speaker 1>within your clusters. So,

00:33:08.495 --> 00:33:11.054
<v Speaker 1>for example, since you don't have any other

00:33:11.774 --> 00:33:14.414
<v Speaker 1>workload, so probably the that's why the Kube

00:33:14.414 --> 00:33:16.575
<v Speaker 1>system jumps up to the top.

00:33:16.894 --> 00:33:18.335
<v Speaker 1>But

00:33:17.760 --> 00:33:19.679
<v Speaker 1>there are lots of service account

00:33:20.160 --> 00:33:22.799
<v Speaker 1>service accounts that nobody is referencing.

00:33:23.200 --> 00:33:26.400
<v Speaker 1>So it's it's considered a warning until you

00:33:26.400 --> 00:33:28.960
<v Speaker 1>have a full control whether you wanna disable

00:33:28.960 --> 00:33:31.200
<v Speaker 1>that warning, made it a error.

00:33:31.280 --> 00:33:33.120
<v Speaker 1>So you have control for those things.

00:33:33.925 --> 00:33:34.565
<v Speaker 1>And

00:33:35.765 --> 00:33:38.325
<v Speaker 1>yeah. So that's that's kind of informational.

00:33:38.485 --> 00:33:40.885
<v Speaker 1>The next thing you would wanna do, maybe

00:33:40.885 --> 00:33:42.725
<v Speaker 1>look at the logic

00:33:43.045 --> 00:33:44.325
<v Speaker 1>logic tab.

00:33:44.805 --> 00:33:47.365
<v Speaker 1>This is where you would see your

00:33:47.365 --> 00:33:48.245
<v Speaker 1>namespaces,

00:33:48.245 --> 00:33:48.885
<v Speaker 1>your apps.

00:33:49.480 --> 00:33:52.440
<v Speaker 1>Yeah. Maybe okay. Now you can see things.

00:33:52.919 --> 00:33:55.720
<v Speaker 1>Alright. So you will see the Kube system

00:33:55.720 --> 00:33:57.159
<v Speaker 1>and Kubevious.

00:33:58.120 --> 00:34:00.919
<v Speaker 1>If there is not too much interesting stuff

00:34:00.919 --> 00:34:03.320
<v Speaker 1>in Kube system, we can kind of

00:34:03.880 --> 00:34:04.679
<v Speaker 1>introspect

00:34:04.815 --> 00:34:05.774
<v Speaker 1>Kubevious.

00:34:06.335 --> 00:34:08.415
<v Speaker 1>So you you just click on it,

00:34:09.375 --> 00:34:10.735
<v Speaker 1>and it would show

00:34:11.054 --> 00:34:12.014
<v Speaker 1>apps

00:34:12.094 --> 00:34:14.094
<v Speaker 1>within Kubevious namespace.

00:34:15.054 --> 00:34:15.614
<v Speaker 1>And

00:34:16.094 --> 00:34:18.014
<v Speaker 1>below, you would see your alerts,

00:34:18.540 --> 00:34:20.860
<v Speaker 1>what kind of alerts it identified, and what

00:34:20.860 --> 00:34:23.180
<v Speaker 1>are the affected object. And

00:34:26.380 --> 00:34:29.100
<v Speaker 1>every single node within Kubevious has its own

00:34:29.100 --> 00:34:30.300
<v Speaker 1>sets of properties.

00:34:31.885 --> 00:34:34.045
<v Speaker 1>More often than not, you would see the

00:34:34.045 --> 00:34:35.965
<v Speaker 1>YAML traffic on the right side,

00:34:36.525 --> 00:34:38.285
<v Speaker 1>unless those are some synthetic

00:34:38.285 --> 00:34:39.965
<v Speaker 1>nodes within the UI

00:34:40.205 --> 00:34:42.525
<v Speaker 1>or some other sets of properties. Nice. It's,

00:34:42.525 --> 00:34:44.845
<v Speaker 0>like, bringing, like, this familiarity

00:34:44.845 --> 00:34:48.685
<v Speaker 0>I have with, like, my coding IDE to

00:34:47.300 --> 00:34:50.739
<v Speaker 0>my Kubernetes cluster. It feels very familiar right

00:34:50.739 --> 00:34:52.500
<v Speaker 0>away. Like like like, I'm using Versus Code

00:34:52.500 --> 00:34:53.620
<v Speaker 0>in some capacity.

00:34:53.699 --> 00:34:55.780
<v Speaker 0>Only the details we get in are much

00:34:55.780 --> 00:34:57.220
<v Speaker 0>more specific. Yeah.

00:34:57.460 --> 00:34:57.940
<v Speaker 1>Yeah.

00:34:58.740 --> 00:35:00.820
<v Speaker 1>And you can dig deeper. So, for example,

00:35:00.820 --> 00:35:04.420
<v Speaker 1>you you can try to open up the

00:35:03.245 --> 00:35:04.605
<v Speaker 1>the Kubevious

00:35:04.765 --> 00:35:05.565
<v Speaker 1>backend,

00:35:05.725 --> 00:35:07.565
<v Speaker 1>the very first node.

00:35:07.885 --> 00:35:08.605
<v Speaker 1>And

00:35:09.085 --> 00:35:11.245
<v Speaker 1>it would see show you the composition of

00:35:11.245 --> 00:35:13.485
<v Speaker 1>the app, how many times it restarted,

00:35:13.485 --> 00:35:14.845
<v Speaker 1>how many calls there,

00:35:15.085 --> 00:35:16.445
<v Speaker 1>how many of them are ready.

00:35:17.120 --> 00:35:19.520
<v Speaker 1>So that's a little bit of health related

00:35:19.520 --> 00:35:20.480
<v Speaker 1>information.

00:35:20.800 --> 00:35:22.000
<v Speaker 1>Mhmm. And

00:35:22.240 --> 00:35:24.080
<v Speaker 1>if there are some other

00:35:25.280 --> 00:35:27.680
<v Speaker 1>issues there so for example, there is some

00:35:27.680 --> 00:35:29.280
<v Speaker 1>warning on the deployment. Right?

00:35:30.185 --> 00:35:32.905
<v Speaker 1>And probably says that there are no resource

00:35:32.905 --> 00:35:34.265
<v Speaker 1>limits over there.

00:35:35.545 --> 00:35:37.545
<v Speaker 1>But yeah. So, for example, you would see

00:35:37.545 --> 00:35:38.825
<v Speaker 1>a spy icon

00:35:38.985 --> 00:35:41.305
<v Speaker 1>on top of the service account. Yeah. I

00:35:41.305 --> 00:35:42.985
<v Speaker 0>like that little bit of text there.

00:35:43.705 --> 00:35:46.920
<v Speaker 1>Yeah. So that's also clickable. Just just go

00:35:46.920 --> 00:35:49.640
<v Speaker 1>for it. Just click on it. And the

00:35:49.640 --> 00:35:52.040
<v Speaker 1>reason it's it has a spy is that

00:35:52.680 --> 00:35:55.640
<v Speaker 1>it has a full cluster access to certain

00:35:55.640 --> 00:35:56.280
<v Speaker 1>CRDs,

00:35:57.335 --> 00:35:59.895
<v Speaker 1>and that spy icon indicates that

00:36:00.535 --> 00:36:01.095
<v Speaker 1>something

00:36:01.335 --> 00:36:03.575
<v Speaker 1>it doesn't mean something is wrong. It's just

00:36:03.575 --> 00:36:05.734
<v Speaker 1>this workload workload

00:36:05.734 --> 00:36:08.535
<v Speaker 1>has an access to things beyond the namespace

00:36:08.535 --> 00:36:09.415
<v Speaker 1>where it is.

00:36:09.974 --> 00:36:11.174
<v Speaker 1>So just to be aware.

00:36:11.760 --> 00:36:14.080
<v Speaker 1>And the icon propagates all the way up

00:36:14.080 --> 00:36:16.320
<v Speaker 1>to the to the namespace.

00:36:16.560 --> 00:36:18.480
<v Speaker 1>So on top of the namespace, can see

00:36:18.480 --> 00:36:21.520
<v Speaker 1>there are some workloads that are doing things

00:36:21.520 --> 00:36:24.000
<v Speaker 1>cluster related that go beyond their namespace.

00:36:24.945 --> 00:36:27.985
<v Speaker 0>Yeah. I love this little resource role metrics

00:36:27.985 --> 00:36:29.905
<v Speaker 0>down here showing it kind of what I

00:36:29.905 --> 00:36:31.905
<v Speaker 0>can do. This would be great software for

00:36:31.905 --> 00:36:33.825
<v Speaker 0>clustered, actually. I bet you this would save

00:36:33.825 --> 00:36:36.305
<v Speaker 0>the meantime to recovery Yeah. A lot.

00:36:37.340 --> 00:36:39.580
<v Speaker 1>Yeah. So you do this on the roll.

00:36:39.580 --> 00:36:42.380
<v Speaker 1>Right? So you don't really have to dig

00:36:42.380 --> 00:36:44.540
<v Speaker 1>so much down to the roll. You can

00:36:44.540 --> 00:36:47.500
<v Speaker 1>see that on top of the service account.

00:36:47.500 --> 00:36:49.980
<v Speaker 0>Oh, yeah. So if you have 15, say,

00:36:49.980 --> 00:36:52.865
<v Speaker 1>15 bindings and 15 rolls, so it would

00:36:52.865 --> 00:36:54.865
<v Speaker 1>kind of combine all all them into a

00:36:54.865 --> 00:36:55.585
<v Speaker 1>single

00:36:55.905 --> 00:36:58.625
<v Speaker 1>table so you can quickly understand

00:36:58.944 --> 00:37:00.625
<v Speaker 1>what is allowed in the end of the

00:37:00.625 --> 00:37:01.905
<v Speaker 1>day to my workload.

00:37:02.704 --> 00:37:04.785
<v Speaker 0>Very cool. I like that. You can yeah.

00:37:05.280 --> 00:37:08.400
<v Speaker 1>Yeah. So different types of nodes have different

00:37:08.400 --> 00:37:09.680
<v Speaker 1>sets of properties.

00:37:09.920 --> 00:37:12.400
<v Speaker 1>So for example, service account has this table.

00:37:12.400 --> 00:37:13.520
<v Speaker 1>If you have network

00:37:14.160 --> 00:37:16.720
<v Speaker 1>policies, it would show which apps are allowed

00:37:16.720 --> 00:37:18.160
<v Speaker 1>to talk together.

00:37:19.224 --> 00:37:19.865
<v Speaker 1>And,

00:37:20.825 --> 00:37:23.625
<v Speaker 1>yeah, on the top level, you have, like,

00:37:23.704 --> 00:37:25.625
<v Speaker 1>resource uses usages,

00:37:26.185 --> 00:37:29.065
<v Speaker 1>how much of the overall cluster resources does

00:37:29.065 --> 00:37:31.225
<v Speaker 1>the entire application consume.

00:37:31.625 --> 00:37:32.984
<v Speaker 1>So

00:37:32.490 --> 00:37:33.850
<v Speaker 1>if you have addresses,

00:37:34.010 --> 00:37:35.610
<v Speaker 1>they would show differently.

00:37:36.970 --> 00:37:38.890
<v Speaker 0>Yeah. I like this kind of breakdown of

00:37:38.890 --> 00:37:41.050
<v Speaker 0>the images as well used within the application.

00:37:41.050 --> 00:37:42.330
<v Speaker 0>Yeah. But I can see here this is

00:37:42.330 --> 00:37:44.250
<v Speaker 0>from Docker Hub, and it could be as

00:37:44.250 --> 00:37:45.450
<v Speaker 0>back end Yeah. Tag.

00:37:46.265 --> 00:37:48.025
<v Speaker 0>It's a really Yeah. Really smart way of

00:37:48.025 --> 00:37:50.585
<v Speaker 0>presenting what is quite a lot of overwhelming

00:37:50.585 --> 00:37:52.585
<v Speaker 0>information to people when they adopt and learn

00:37:52.585 --> 00:37:55.225
<v Speaker 0>Kubernetes. Mhmm. Kinda making it consumable Mhmm.

00:37:55.705 --> 00:37:57.145
<v Speaker 0>In a way where you don't need to

00:37:57.145 --> 00:37:58.585
<v Speaker 0>just, like, throw your hands in there and

00:37:58.585 --> 00:38:00.550
<v Speaker 0>say, oh, I don't know. Like, I like

00:38:00.550 --> 00:38:01.270
<v Speaker 1>the Yeah.

00:38:01.990 --> 00:38:03.589
<v Speaker 0>I'm just gonna keep clicking on this for

00:38:03.589 --> 00:38:05.109
<v Speaker 0>random until you tell me to to just

00:38:05.270 --> 00:38:07.510
<v Speaker 1>Of course. Of course. Yeah. I think that

00:38:07.510 --> 00:38:09.190
<v Speaker 1>no matter how much the clip, it wouldn't

00:38:09.190 --> 00:38:10.309
<v Speaker 1>crash anymore. So

00:38:12.105 --> 00:38:14.505
<v Speaker 1>we're good. As when it starts working, it

00:38:14.505 --> 00:38:15.785
<v Speaker 1>doesn't stop working.

00:38:16.345 --> 00:38:18.265
<v Speaker 1>So we looked at the

00:38:19.465 --> 00:38:22.505
<v Speaker 1>we looked at the kind of logic view.

00:38:22.505 --> 00:38:25.465
<v Speaker 1>Right? But there are other different ways of

00:38:25.590 --> 00:38:28.710
<v Speaker 1>looking at the same cluster cluster and applications.

00:38:28.710 --> 00:38:30.790
<v Speaker 1>The other one, maybe we can look at

00:38:30.790 --> 00:38:32.150
<v Speaker 1>the images tab.

00:38:32.390 --> 00:38:32.950
<v Speaker 0>Mhmm.

00:38:33.270 --> 00:38:35.590
<v Speaker 1>This allows you to look at your cluster

00:38:35.590 --> 00:38:38.310
<v Speaker 1>from the images and replicators point of view.

00:38:38.710 --> 00:38:41.405
<v Speaker 1>So it would show that are you in

00:38:43.165 --> 00:38:45.485
<v Speaker 1>I have hard time seeing, but, so there

00:38:45.485 --> 00:38:47.005
<v Speaker 1>is a Docker Hub, and

00:38:49.405 --> 00:38:51.645
<v Speaker 1>there's another repo that you have. Yeah. There's

00:38:51.645 --> 00:38:53.165
<v Speaker 0>Kubernetes.GCR.io,

00:38:53.165 --> 00:38:54.925
<v Speaker 0>which I assume is the control plane component.

00:38:54.925 --> 00:38:57.540
<v Speaker 0>Yeah. We have Docker Hub. Yeah. So you

00:38:57.540 --> 00:38:59.300
<v Speaker 1>can click on the Docker Hub, and you

00:38:59.300 --> 00:39:02.820
<v Speaker 1>can see there there are seven images from

00:39:02.820 --> 00:39:05.140
<v Speaker 1>Docker Hub used within my cluster. And then

00:39:05.140 --> 00:39:07.300
<v Speaker 1>you're trying to can kind of drill down

00:39:07.300 --> 00:39:08.020
<v Speaker 1>into

00:39:08.260 --> 00:39:09.220
<v Speaker 1>the image.

00:39:09.300 --> 00:39:10.980
<v Speaker 1>You can see which tabs are used,

00:39:11.755 --> 00:39:14.875
<v Speaker 1>by which namespace, and by which which particular

00:39:14.875 --> 00:39:15.595
<v Speaker 1>app.

00:39:16.635 --> 00:39:17.835
<v Speaker 0>Yeah. Nice.

00:39:23.515 --> 00:39:24.315
<v Speaker 0>Cool.

00:39:24.315 --> 00:39:26.155
<v Speaker 1>Yeah. And then you can see the details

00:39:26.155 --> 00:39:29.520
<v Speaker 1>of the app. If you wanna drill deeper

00:39:29.520 --> 00:39:32.640
<v Speaker 1>into the app, you can navigate using those

00:39:32.640 --> 00:39:34.560
<v Speaker 1>target links, the very first

00:39:34.960 --> 00:39:37.360
<v Speaker 1>group of properties. You can click on it.

00:39:37.360 --> 00:39:38.560
<v Speaker 1>This is clickable,

00:39:38.560 --> 00:39:40.320
<v Speaker 1>and then it would navigate you to the

00:39:40.320 --> 00:39:40.880
<v Speaker 1>other view.

00:39:42.414 --> 00:39:44.575
<v Speaker 0>Yeah. So you can see the composition.

00:39:44.654 --> 00:39:46.494
<v Speaker 1>So it allows you to to kind of

00:39:46.494 --> 00:39:47.215
<v Speaker 1>travel

00:39:47.694 --> 00:39:50.015
<v Speaker 1>from one view to another, and

00:39:50.414 --> 00:39:53.694
<v Speaker 1>each view has its own sets of properties,

00:39:53.694 --> 00:39:55.855
<v Speaker 1>and it's composed in different ways.

00:39:57.290 --> 00:39:58.970
<v Speaker 1>If you were to use

00:39:59.130 --> 00:40:00.490
<v Speaker 1>or

00:40:00.890 --> 00:40:02.410
<v Speaker 1>traffic proxy,

00:40:02.730 --> 00:40:03.850
<v Speaker 1>you would see

00:40:04.090 --> 00:40:07.930
<v Speaker 1>gateway populated with domains and URLs and services

00:40:07.930 --> 00:40:08.970
<v Speaker 1>and over

00:40:08.970 --> 00:40:09.210
<v Speaker 1>there.

00:40:12.535 --> 00:40:15.415
<v Speaker 1>Probably the next interesting one would be RBAC

00:40:15.415 --> 00:40:18.055
<v Speaker 1>or if you have Helm charts, that would

00:40:18.375 --> 00:40:20.535
<v Speaker 1>those would populate in the packages.

00:40:20.775 --> 00:40:22.295
<v Speaker 0>Okay. Well, I mean, this is my local

00:40:22.295 --> 00:40:24.055
<v Speaker 0>Docker for Mac. So the gateway tab, probably

00:40:24.055 --> 00:40:25.895
<v Speaker 0>not that useful to us. What's the the

00:40:25.895 --> 00:40:26.775
<v Speaker 0>package tab here?

00:40:28.490 --> 00:40:29.050
<v Speaker 1>So

00:40:29.530 --> 00:40:31.530
<v Speaker 1>as of right now, it would show your

00:40:31.530 --> 00:40:34.010
<v Speaker 1>helm helm helm releases.

00:40:34.010 --> 00:40:35.690
<v Speaker 0>Ah, okay. So this is why I'm seeing

00:40:35.690 --> 00:40:38.490
<v Speaker 0>Kubevious because Yeah. So it

00:40:38.490 --> 00:40:39.849
<v Speaker 1>will show version one,

00:40:40.405 --> 00:40:42.565
<v Speaker 1>and it will show what what is their

00:40:42.565 --> 00:40:45.845
<v Speaker 1>contents and which apps are installed using this

00:40:45.845 --> 00:40:46.885
<v Speaker 1>Helm Relay.

00:40:47.605 --> 00:40:49.125
<v Speaker 1>And, again, it would

00:40:50.325 --> 00:40:53.205
<v Speaker 1>map it to apps within the logic view.

00:40:53.970 --> 00:40:56.530
<v Speaker 0>Can I show you the helm values fail?

00:40:58.770 --> 00:41:00.609
<v Speaker 1>No. No. I I don't even know if

00:41:00.609 --> 00:41:02.369
<v Speaker 0>that's available in the cluster. I have I'm

00:41:02.369 --> 00:41:03.410
<v Speaker 0>not sure. I'm not

00:41:04.530 --> 00:41:05.330
<v Speaker 1>Probably.

00:41:05.955 --> 00:41:07.555
<v Speaker 1>I don't know. Maybe I think they store

00:41:07.555 --> 00:41:09.155
<v Speaker 0>it a good way, actually.

00:41:09.955 --> 00:41:11.795
<v Speaker 0>I don't know if you have It's it's

00:41:11.795 --> 00:41:14.035
<v Speaker 1>loaded from a secret. Yeah. That that's a

00:41:14.035 --> 00:41:16.115
<v Speaker 1>good idea. Yeah. Yeah. Because it would be

00:41:16.115 --> 00:41:16.915
<v Speaker 0>cool to see,

00:41:17.235 --> 00:41:19.075
<v Speaker 0>alright. I've got this chart deployed. How did

00:41:19.075 --> 00:41:20.595
<v Speaker 0>I configure it? Also, of course, I have

00:41:20.595 --> 00:41:22.170
<v Speaker 0>this stuff in GET as well, but but

00:41:22.170 --> 00:41:23.849
<v Speaker 0>just for there's a lot of cool stuff

00:41:23.849 --> 00:41:24.330
<v Speaker 0>here.

00:41:24.809 --> 00:41:26.490
<v Speaker 0>Yeah. Alright. So the We have an idea

00:41:26.490 --> 00:41:27.850
<v Speaker 1>to yeah.

00:41:28.089 --> 00:41:28.650
<v Speaker 1>Go ahead.

00:41:29.050 --> 00:41:30.170
<v Speaker 0>No. I was just gonna click on the

00:41:30.170 --> 00:41:31.849
<v Speaker 0>Kubernetes tab, feel free. You go first, and

00:41:31.849 --> 00:41:34.170
<v Speaker 0>then we'll we'll move on. So so regarding

00:41:34.170 --> 00:41:36.345
<v Speaker 1>that package tab, so we had an idea

00:41:36.345 --> 00:41:39.465
<v Speaker 1>to integrate our Rawkode CD applications within that

00:41:39.465 --> 00:41:40.585
<v Speaker 1>package tab.

00:41:41.065 --> 00:41:43.625
<v Speaker 1>So those are kind of different ways that

00:41:43.625 --> 00:41:46.345
<v Speaker 1>you would deploy apps, and we

00:41:46.425 --> 00:41:48.025
<v Speaker 1>have to do a little bit of digging

00:41:48.025 --> 00:41:50.505
<v Speaker 1>how much is possible to do so that

00:41:51.400 --> 00:41:53.480
<v Speaker 1>we can kind of understand what kind of

00:41:53.480 --> 00:41:55.480
<v Speaker 1>apps are deployed with our Rusty, what's the

00:41:55.480 --> 00:41:58.280
<v Speaker 1>contents, and what things are coming from hell,

00:41:58.280 --> 00:41:59.800
<v Speaker 1>what is coming from Rawkode.

00:42:00.520 --> 00:42:01.240
<v Speaker 0>Nice.

00:42:02.040 --> 00:42:03.400
<v Speaker 0>Alright. Three more tabs.

00:42:04.175 --> 00:42:04.975
<v Speaker 0>Kubernetes

00:42:04.975 --> 00:42:06.575
<v Speaker 0>tab. Is this just

00:42:07.535 --> 00:42:10.095
<v Speaker 1>It's just a a resource browser. So you

00:42:10.095 --> 00:42:12.815
<v Speaker 1>have CRDs, anything you can kind of dig

00:42:12.815 --> 00:42:14.175
<v Speaker 1>down by namespace,

00:42:14.175 --> 00:42:14.655
<v Speaker 1>API.

00:42:16.530 --> 00:42:19.490
<v Speaker 1>Oh, yeah. If API extensions kind of resource.

00:42:19.490 --> 00:42:21.090
<v Speaker 1>Yeah. Custom resources.

00:42:23.250 --> 00:42:24.690
<v Speaker 0>Cool. And I can see all the CIDs

00:42:24.690 --> 00:42:27.810
<v Speaker 0>registered. Oh, nice. Yeah. Okay. I like that

00:42:27.810 --> 00:42:29.010
<v Speaker 0>bit. Yeah. That's cool.

00:42:31.265 --> 00:42:32.225
<v Speaker 0>RBAC.

00:42:32.385 --> 00:42:33.745
<v Speaker 0>I hate RBAC.

00:42:36.545 --> 00:42:38.145
<v Speaker 0>Alright. Well, we have a whole tab for

00:42:38.145 --> 00:42:39.745
<v Speaker 0>this. I won't click on it here.

00:42:40.705 --> 00:42:43.825
<v Speaker 0>This is my notes and storage. Very nice.

00:42:44.670 --> 00:42:47.069
<v Speaker 0>Not very interesting on Docker for desktop, but,

00:42:47.069 --> 00:42:48.990
<v Speaker 0>you know Mhmm. On on my other cluster

00:42:48.990 --> 00:42:51.550
<v Speaker 0>would be pretty cool. So in the public

00:42:51.550 --> 00:42:54.030
<v Speaker 1>cloud, if you have multiple node groups, so

00:42:54.030 --> 00:42:56.190
<v Speaker 1>it would separate the nodes based on the

00:42:56.190 --> 00:42:58.955
<v Speaker 1>node pools, node groups, depending on which. Oh,

00:42:58.955 --> 00:43:01.675
<v Speaker 0>yeah. Because all the provider you are. All

00:43:01.675 --> 00:43:04.075
<v Speaker 0>the notes have topology aware annotations.

00:43:04.075 --> 00:43:05.675
<v Speaker 0>I guess you're breaking them down for people

00:43:05.675 --> 00:43:07.355
<v Speaker 0>so that a lot more visual.

00:43:08.075 --> 00:43:10.315
<v Speaker 1>It's just based on the annotations.

00:43:10.715 --> 00:43:12.715
<v Speaker 1>We we try to match with the

00:43:13.035 --> 00:43:13.515
<v Speaker 1>known ones.

00:43:14.890 --> 00:43:16.250
<v Speaker 1>So if you're

00:43:16.250 --> 00:43:18.570
<v Speaker 1>from the major public clouds, then

00:43:19.130 --> 00:43:20.810
<v Speaker 1>it it would work for those.

00:43:21.930 --> 00:43:24.730
<v Speaker 1>And the RBAC. So this is basically the

00:43:24.730 --> 00:43:27.690
<v Speaker 1>same thing we did for service accounts. It's

00:43:27.690 --> 00:43:28.890
<v Speaker 1>just it would show

00:43:30.525 --> 00:43:33.005
<v Speaker 1>permissions allowed to users and groups.

00:43:34.125 --> 00:43:36.285
<v Speaker 0>Yep. But my customers only have one role,

00:43:36.285 --> 00:43:38.525
<v Speaker 0>cluster admin. I just give everybody cluster admin.

00:43:38.525 --> 00:43:40.445
<v Speaker 0>So I just keep stars everywhere. I like

00:43:40.445 --> 00:43:42.845
<v Speaker 0>stars. Yeah. But I think there should be

00:43:42.845 --> 00:43:44.765
<v Speaker 1>other ones. Right? They're about 11.

00:43:45.240 --> 00:43:47.080
<v Speaker 0>Yeah. There are more. Go by.

00:43:47.880 --> 00:43:49.880
<v Speaker 1>Yeah. So if you go to maybe second

00:43:49.880 --> 00:43:50.520
<v Speaker 1>one or

00:43:52.280 --> 00:43:53.880
<v Speaker 1>it has much more

00:43:54.920 --> 00:43:57.560
<v Speaker 1>bindings, and you can see that the matrix

00:43:57.560 --> 00:43:58.280
<v Speaker 1>gets

00:43:58.440 --> 00:43:59.640
<v Speaker 1>much more complicated.

00:44:00.965 --> 00:44:03.445
<v Speaker 1>But you don't really have to dig into

00:44:03.445 --> 00:44:04.485
<v Speaker 1>each individual

00:44:04.485 --> 00:44:05.285
<v Speaker 1>binding.

00:44:05.365 --> 00:44:07.125
<v Speaker 1>You can see what is allowed to that

00:44:07.125 --> 00:44:07.845
<v Speaker 1>user.

00:44:08.645 --> 00:44:11.925
<v Speaker 0>Awesome. This is something not really available in

00:44:11.925 --> 00:44:13.765
<v Speaker 1>in standard Kubernetes.

00:44:13.765 --> 00:44:14.565
<v Speaker 1>You have to

00:44:15.320 --> 00:44:16.040
<v Speaker 1>go

00:44:16.200 --> 00:44:18.760
<v Speaker 1>roles and bindings one by month to kind

00:44:18.760 --> 00:44:20.440
<v Speaker 1>of figure out what is allowed to that

00:44:20.440 --> 00:44:23.320
<v Speaker 1>user. Here, it's like showing those

00:44:23.640 --> 00:44:26.200
<v Speaker 1>those bindings in a reversed approach.

00:44:27.545 --> 00:44:29.545
<v Speaker 1>Yeah. Based on the how how would you

00:44:29.545 --> 00:44:31.785
<v Speaker 1>would approach the the bindings in the in

00:44:31.785 --> 00:44:32.505
<v Speaker 1>the role?

00:44:33.225 --> 00:44:35.065
<v Speaker 0>Yeah. You've got this kind of

00:44:35.865 --> 00:44:38.185
<v Speaker 0>pattern, which I'm really appreciating as we browse

00:44:38.185 --> 00:44:41.200
<v Speaker 0>around, where you have these little icon annotations

00:44:41.200 --> 00:44:43.120
<v Speaker 0>that immediately kinda draw my eye, and I'm

00:44:43.120 --> 00:44:45.280
<v Speaker 0>like, oh, there's there's something about this one

00:44:45.280 --> 00:44:46.400
<v Speaker 0>I need to be aware of. So the

00:44:46.400 --> 00:44:49.200
<v Speaker 0>fact that these service accounts are are shared,

00:44:49.520 --> 00:44:51.520
<v Speaker 0>so you've got cascade independence as you kinda

00:44:51.520 --> 00:44:52.640
<v Speaker 0>write the call out here.

00:44:53.120 --> 00:44:54.000
<v Speaker 0>And this you know,

00:44:54.795 --> 00:44:57.035
<v Speaker 0>I'm sure we've seen this on the logic

00:44:57.035 --> 00:44:59.115
<v Speaker 0>with the the pods as well. Yeah. And

00:44:59.115 --> 00:45:01.194
<v Speaker 0>you've got, like, warning and stuff. So I

00:45:01.194 --> 00:45:02.795
<v Speaker 0>like the use of that little tiny bit

00:45:02.795 --> 00:45:05.995
<v Speaker 0>of iconography across place, which is quite consistent.

00:45:06.234 --> 00:45:08.315
<v Speaker 0>It just pulls my eye towards it, and

00:45:08.315 --> 00:45:09.359
<v Speaker 0>I'm like, oh, I should take a look

00:45:09.359 --> 00:45:10.640
<v Speaker 0>at this and learn a bit more about

00:45:10.640 --> 00:45:12.720
<v Speaker 0>my cluster. So nice touch.

00:45:12.960 --> 00:45:13.520
<v Speaker 0>Yeah.

00:45:14.079 --> 00:45:17.200
<v Speaker 1>Thanks. So that hand icon, it comes from

00:45:17.200 --> 00:45:18.000
<v Speaker 1>Windows

00:45:18.960 --> 00:45:19.920
<v Speaker 1>era with the

00:45:20.640 --> 00:45:23.200
<v Speaker 1>from the shared folders. So the idea is

00:45:23.200 --> 00:45:25.675
<v Speaker 1>that, let's say, you wanna jump in and

00:45:25.675 --> 00:45:27.435
<v Speaker 1>make changes to this binding

00:45:27.755 --> 00:45:30.155
<v Speaker 1>because you need to make changes to your

00:45:30.555 --> 00:45:33.994
<v Speaker 1>group. Right? So what it means that if

00:45:33.994 --> 00:45:36.155
<v Speaker 1>you were to make changes to this binding,

00:45:36.155 --> 00:45:39.540
<v Speaker 1>it would affect other users or other bindings

00:45:39.540 --> 00:45:40.340
<v Speaker 1>as well.

00:45:40.980 --> 00:45:43.860
<v Speaker 0>Yep. Got it. So that resource is used

00:45:43.860 --> 00:45:46.500
<v Speaker 1>in other places. And to know which other

00:45:46.500 --> 00:45:48.740
<v Speaker 1>places it's used for, you can just click

00:45:48.740 --> 00:45:50.420
<v Speaker 1>on it. It will show what are the

00:45:50.420 --> 00:45:51.620
<v Speaker 1>other places it's used.

00:45:54.835 --> 00:45:57.155
<v Speaker 1>So it says shared with

00:45:58.355 --> 00:46:01.315
<v Speaker 1>this other play. Yeah. Kubebly config.

00:46:01.395 --> 00:46:03.875
<v Speaker 0>And Yeah. And it and it's also clickable.

00:46:03.875 --> 00:46:05.555
<v Speaker 1>You can see what is it.

00:46:06.869 --> 00:46:08.710
<v Speaker 1>And over there, it would say it's shared

00:46:08.710 --> 00:46:09.510
<v Speaker 1>with this

00:46:10.630 --> 00:46:11.910
<v Speaker 1>with this group.

00:46:12.630 --> 00:46:13.349
<v Speaker 1>It

00:46:13.430 --> 00:46:15.750
<v Speaker 1>just shows what would be the blast radius,

00:46:15.750 --> 00:46:17.670
<v Speaker 1>what would happen if you were to make

00:46:17.670 --> 00:46:21.910
<v Speaker 1>changes to this config map or secret or

00:46:23.234 --> 00:46:25.474
<v Speaker 0>Yeah. Or the binding or the role, let's

00:46:25.474 --> 00:46:25.955
<v Speaker 1>say.

00:46:27.315 --> 00:46:30.915
<v Speaker 0>Okay. And just to clarify, like, Kubevious is

00:46:32.755 --> 00:46:34.994
<v Speaker 0>read only view of my cluster. Right? Like,

00:46:34.994 --> 00:46:36.515
<v Speaker 0>it doesn't give me the ability to modify

00:46:36.515 --> 00:46:38.700
<v Speaker 0>anything. It's there as a way to inspect

00:46:38.700 --> 00:46:41.340
<v Speaker 0>and understand what is actually going on within

00:46:41.340 --> 00:46:42.140
<v Speaker 0>my cluster.

00:46:42.780 --> 00:46:43.420
<v Speaker 1>Yeah.

00:46:43.820 --> 00:46:44.220
<v Speaker 1>It's

00:46:45.260 --> 00:46:48.060
<v Speaker 1>it has been highly requested to to allow

00:46:48.060 --> 00:46:50.700
<v Speaker 1>you guys to edit things. It's probably one

00:46:50.700 --> 00:46:53.035
<v Speaker 1>of the things that we try to push

00:46:53.035 --> 00:46:53.915
<v Speaker 1>back with.

00:46:54.155 --> 00:46:56.555
<v Speaker 1>Once we start making changes to the cluster,

00:46:56.555 --> 00:47:00.635
<v Speaker 1>we're we're getting into a very scary territory.

00:47:00.955 --> 00:47:01.515
<v Speaker 1>But

00:47:01.915 --> 00:47:04.315
<v Speaker 1>we made some users happy if you go

00:47:04.315 --> 00:47:06.795
<v Speaker 1>back to Logic, if you or open one

00:47:06.795 --> 00:47:07.835
<v Speaker 1>of the manifests.

00:47:09.320 --> 00:47:12.040
<v Speaker 1>Let's say if you can drill down into

00:47:12.440 --> 00:47:14.600
<v Speaker 1>anything, service account.

00:47:14.680 --> 00:47:16.120
<v Speaker 1>So yeah. So

00:47:16.360 --> 00:47:19.400
<v Speaker 1>if you can make this config bigger,

00:47:19.560 --> 00:47:22.600
<v Speaker 1>there is a maximize button on the top.

00:47:22.600 --> 00:47:22.920
<v Speaker 1>Yeah.

00:47:23.645 --> 00:47:26.525
<v Speaker 1>Now you can click on the pen. It

00:47:26.525 --> 00:47:28.365
<v Speaker 1>would get into the edit mode.

00:47:28.845 --> 00:47:31.565
<v Speaker 1>So it cleans up unnecessary things like manage

00:47:31.565 --> 00:47:33.805
<v Speaker 1>fields. So you can edit in place and

00:47:33.805 --> 00:47:36.045
<v Speaker 1>either copy and paste or download this file.

00:47:36.730 --> 00:47:37.770
<v Speaker 1>And so

00:47:38.090 --> 00:47:38.810
<v Speaker 1>with

00:47:39.690 --> 00:47:41.450
<v Speaker 1>and it's read only. Yeah. And you can

00:47:41.450 --> 00:47:43.930
<v Speaker 1>also choose what would be your tab size,

00:47:43.930 --> 00:47:44.890
<v Speaker 1>two or four.

00:47:46.170 --> 00:47:48.490
<v Speaker 0>I like two. But, yeah, you would you

00:47:48.490 --> 00:47:50.810
<v Speaker 1>would download the file or copy and paste,

00:47:50.810 --> 00:47:53.905
<v Speaker 1>and then if you wanna apply changes,

00:47:53.905 --> 00:47:54.545
<v Speaker 1>just

00:47:54.865 --> 00:47:57.585
<v Speaker 1>go for it, but Kubevious cannot

00:47:57.585 --> 00:47:59.825
<v Speaker 1>do it for you. Trust. I think I

00:47:59.825 --> 00:48:01.825
<v Speaker 0>I like the way it doesn't allow me

00:48:01.825 --> 00:48:03.585
<v Speaker 0>to do any direct edit in the against

00:48:03.585 --> 00:48:05.425
<v Speaker 0>the cluster. So I'm gonna I'm gonna say

00:48:05.425 --> 00:48:05.825
<v Speaker 0>that's good.

00:48:07.119 --> 00:48:09.840
<v Speaker 0>What's this timeline view? Oh, this is changes,

00:48:09.840 --> 00:48:12.000
<v Speaker 0>errors, and warnings over time. Okay.

00:48:12.400 --> 00:48:15.200
<v Speaker 1>So this is the time machine. It shows

00:48:15.200 --> 00:48:17.920
<v Speaker 1>you the hard bit of the cluster. Maybe

00:48:17.920 --> 00:48:20.080
<v Speaker 1>we have to wait an hour or so

00:48:20.080 --> 00:48:22.595
<v Speaker 1>just to get more data populated.

00:48:22.835 --> 00:48:24.515
<v Speaker 1>But you can see three series.

00:48:24.675 --> 00:48:27.235
<v Speaker 1>One is the white line which shows the

00:48:27.635 --> 00:48:30.355
<v Speaker 1>amount of changes happening in the cluster.

00:48:30.755 --> 00:48:31.875
<v Speaker 1>The red and

00:48:32.194 --> 00:48:35.075
<v Speaker 1>amber are number of errors and warnings within

00:48:35.075 --> 00:48:37.580
<v Speaker 1>the cluster. And, usually, what you would say

00:48:37.580 --> 00:48:38.220
<v Speaker 1>is that

00:48:38.540 --> 00:48:41.020
<v Speaker 1>you may make a change that would cause

00:48:41.020 --> 00:48:43.100
<v Speaker 1>a spike in changes,

00:48:43.580 --> 00:48:46.460
<v Speaker 1>and it would lead to increase in errors

00:48:46.460 --> 00:48:47.500
<v Speaker 1>or warnings.

00:48:47.740 --> 00:48:48.780
<v Speaker 1>And that particular

00:48:49.085 --> 00:48:51.644
<v Speaker 1>time, you can just click on the chart.

00:48:51.644 --> 00:48:53.724
<v Speaker 1>It would activate the time machine,

00:48:53.964 --> 00:48:56.045
<v Speaker 1>and anything you see on the UI

00:48:56.525 --> 00:48:59.085
<v Speaker 1>would be frozen to that particular point in

00:48:59.085 --> 00:48:59.645
<v Speaker 1>time.

00:48:59.964 --> 00:49:01.404
<v Speaker 1>And you can do your debugging.

00:49:02.470 --> 00:49:04.870
<v Speaker 1>You can see why things worked before, why

00:49:04.870 --> 00:49:06.470
<v Speaker 1>things didn't work before,

00:49:06.790 --> 00:49:08.390
<v Speaker 1>and kind of slide it a little bit

00:49:08.390 --> 00:49:10.230
<v Speaker 1>left and right and see how

00:49:11.430 --> 00:49:12.230
<v Speaker 1>it was.

00:49:13.110 --> 00:49:14.950
<v Speaker 1>We can later on, if you want, we

00:49:14.950 --> 00:49:17.645
<v Speaker 1>can open up the the demo portal, which

00:49:17.645 --> 00:49:18.845
<v Speaker 1>already has some

00:49:19.725 --> 00:49:21.325
<v Speaker 1>data pile populated,

00:49:22.925 --> 00:49:24.045
<v Speaker 1>or we can

00:49:24.365 --> 00:49:26.285
<v Speaker 1>wait a little bit. And towards the end

00:49:26.285 --> 00:49:28.125
<v Speaker 1>of the session, we can try to see

00:49:28.125 --> 00:49:28.845
<v Speaker 1>how things change.

00:49:30.780 --> 00:49:32.140
<v Speaker 0>Okay. Well,

00:49:32.860 --> 00:49:35.100
<v Speaker 0>let's zoom this back out a little bit.

00:49:35.100 --> 00:49:37.020
<v Speaker 0>I'll zoom in as required. But

00:49:37.580 --> 00:49:39.500
<v Speaker 0>that's the that's the browser tab. This is

00:49:39.500 --> 00:49:41.980
<v Speaker 0>our single pane of glass and to everything

00:49:41.980 --> 00:49:44.540
<v Speaker 0>inside of our cluster from applications,

00:49:44.540 --> 00:49:44.940
<v Speaker 0>containers,

00:49:45.875 --> 00:49:47.075
<v Speaker 0>helm charts,

00:49:47.395 --> 00:49:48.835
<v Speaker 0>Rawkode, Rawkode,

00:49:49.395 --> 00:49:51.155
<v Speaker 0>and even CRDs.

00:49:51.315 --> 00:49:53.555
<v Speaker 0>So, yeah, that's a that's a nice feature.

00:49:53.555 --> 00:49:54.515
<v Speaker 0>I'm liking that.

00:49:55.395 --> 00:49:56.835
<v Speaker 0>Are we gonna move on to the guard

00:49:56.835 --> 00:50:00.350
<v Speaker 0>tab next? Yeah. Let's let's go. Do you

00:50:00.350 --> 00:50:02.350
<v Speaker 1>have some changes in mind that you would

00:50:02.350 --> 00:50:03.790
<v Speaker 1>want to apply

00:50:03.790 --> 00:50:04.910
<v Speaker 1>to the cluster?

00:50:06.910 --> 00:50:09.150
<v Speaker 0>I mean, we can definitely think of something.

00:50:09.150 --> 00:50:09.390
<v Speaker 0>Yeah?

00:50:10.555 --> 00:50:13.035
<v Speaker 1>Let's create a deployment and and

00:50:13.355 --> 00:50:16.155
<v Speaker 1>try to apply to the plaster. Let's say

00:50:16.155 --> 00:50:20.075
<v Speaker 1>some some trivial app, maybe engine names or

00:50:20.075 --> 00:50:20.635
<v Speaker 1>something

00:50:20.955 --> 00:50:21.835
<v Speaker 1>like that.

00:50:22.635 --> 00:50:24.315
<v Speaker 0>Well, let's see. And

00:50:25.560 --> 00:50:26.920
<v Speaker 0>we did deploy

00:50:30.200 --> 00:50:32.200
<v Speaker 0>I thought I deployed metrics server.

00:50:33.320 --> 00:50:34.760
<v Speaker 0>I must have deployed it to the wrong

00:50:34.760 --> 00:50:36.040
<v Speaker 0>cluster. Oh, well.

00:50:36.360 --> 00:50:38.280
<v Speaker 0>Alright. So we want to deploy need the

00:50:38.280 --> 00:50:41.000
<v Speaker 0>metrics. Yeah. Engine x. Right? So

00:50:41.545 --> 00:50:43.545
<v Speaker 0>let me just say Kubevious

00:50:43.545 --> 00:50:44.665
<v Speaker 0>directory.

00:50:45.465 --> 00:50:46.825
<v Speaker 0>Pop open code.

00:50:50.585 --> 00:50:51.465
<v Speaker 0>Wherever it is.

00:50:58.660 --> 00:50:59.700
<v Speaker 0>Mac.

00:51:02.019 --> 00:51:03.460
<v Speaker 0>Oh, no. I'm gonna quit it and open

00:51:03.460 --> 00:51:04.900
<v Speaker 0>it again. I don't know what's going on.

00:51:04.900 --> 00:51:06.900
<v Speaker 0>My computer just said See, it's not it's

00:51:06.900 --> 00:51:10.819
<v Speaker 1>not only Kubevious that

00:51:09.475 --> 00:51:11.715
<v Speaker 1>does it for the first time. It's a

00:51:12.355 --> 00:51:13.635
<v Speaker 1>it's a pattern.

00:51:14.675 --> 00:51:17.315
<v Speaker 0>Oh, that is funny. Alright. Yeah. So I

00:51:17.315 --> 00:51:20.275
<v Speaker 0>have a small tiny monitor in front of

00:51:20.275 --> 00:51:22.435
<v Speaker 0>me that runs a preview of the stream,

00:51:22.435 --> 00:51:24.610
<v Speaker 0>and my Versus code is heading behind So

00:51:24.930 --> 00:51:26.450
<v Speaker 0>I'm gonna have to turn

00:51:26.690 --> 00:51:28.050
<v Speaker 0>it off for a moment

00:51:28.290 --> 00:51:31.250
<v Speaker 0>and then move it and then take it

00:51:31.250 --> 00:51:31.810
<v Speaker 0>back.

00:51:32.130 --> 00:51:34.050
<v Speaker 0>Why are you there, Kube? Come on.

00:51:34.930 --> 00:51:35.890
<v Speaker 0>There

00:51:36.610 --> 00:51:37.010
<v Speaker 0>we go.

00:51:39.434 --> 00:51:40.795
<v Speaker 0>Alright. Computers.

00:51:40.875 --> 00:51:43.595
<v Speaker 0>So, yes, I trust this. I'm gonna create

00:51:43.595 --> 00:51:45.755
<v Speaker 0>an nginx dot yaml,

00:51:46.154 --> 00:51:48.315
<v Speaker 0>and we'll spec out a deployment that runs

00:51:48.315 --> 00:51:49.194
<v Speaker 0>nginx.

00:51:54.010 --> 00:51:56.010
<v Speaker 0>Is that enough for us to play the

00:51:56.010 --> 00:51:58.010
<v Speaker 0>card? You

00:51:58.010 --> 00:51:59.930
<v Speaker 1>know what? Let's let's make it more interesting.

00:51:59.930 --> 00:52:01.369
<v Speaker 1>Let's let's

00:52:01.369 --> 00:52:04.090
<v Speaker 1>let's have a another config map within the

00:52:04.090 --> 00:52:04.890
<v Speaker 1>same namespace,

00:52:05.825 --> 00:52:09.105
<v Speaker 1>and let's mount it as environment variables.

00:52:11.424 --> 00:52:13.105
<v Speaker 0>Okay. NGINX

00:52:13.105 --> 00:52:14.305
<v Speaker 0>password

00:52:15.904 --> 00:52:16.704
<v Speaker 0>secret.

00:52:17.585 --> 00:52:18.224
<v Speaker 1>K. Yeah.

00:52:19.160 --> 00:52:21.800
<v Speaker 0>And you want to do an ENV

00:52:21.960 --> 00:52:23.080
<v Speaker 0>from Mhmm.

00:52:23.800 --> 00:52:25.000
<v Speaker 0>Config map

00:52:25.160 --> 00:52:26.040
<v Speaker 0>NGINX.

00:52:28.520 --> 00:52:31.240
<v Speaker 1>Okay. And to make things even more fun,

00:52:31.240 --> 00:52:34.145
<v Speaker 1>let's make a typo either let's

00:52:34.465 --> 00:52:37.665
<v Speaker 1>engine double edge or, either in the reference

00:52:37.665 --> 00:52:38.865
<v Speaker 1>or yeah.

00:52:39.665 --> 00:52:40.385
<v Speaker 0>Okay.

00:52:40.545 --> 00:52:41.745
<v Speaker 1>That's fair. Yeah.

00:52:42.385 --> 00:52:43.585
<v Speaker 0>So you want me to apply this?

00:52:44.840 --> 00:52:47.480
<v Speaker 1>Since let's assume we're in a in some

00:52:47.480 --> 00:52:51.000
<v Speaker 1>CD pipeline before doing KubeControl apply,

00:52:51.400 --> 00:52:52.440
<v Speaker 1>we wanna

00:52:53.320 --> 00:52:55.720
<v Speaker 1>kind of sanitize and kind of check or

00:52:55.720 --> 00:52:59.000
<v Speaker 1>link those changes whether decide whether they're good

00:52:59.000 --> 00:52:59.720
<v Speaker 1>or not.

00:52:59.960 --> 00:53:02.415
<v Speaker 1>So let's go to the guard. It should

00:53:02.415 --> 00:53:02.975
<v Speaker 1>have

00:53:03.695 --> 00:53:06.175
<v Speaker 1>just one or two lines of instructions.

00:53:06.495 --> 00:53:08.255
<v Speaker 1>So this is what it wants. It wants

00:53:08.255 --> 00:53:08.975
<v Speaker 1>you to

00:53:10.015 --> 00:53:12.655
<v Speaker 1>basically pipe the contents of the manifest into

00:53:12.655 --> 00:53:13.615
<v Speaker 1>a special strip,

00:53:15.820 --> 00:53:17.660
<v Speaker 1>And that script would

00:53:18.460 --> 00:53:21.260
<v Speaker 1>take those manifest. It would upload them to

00:53:21.260 --> 00:53:23.820
<v Speaker 1>the cluster, and then Kubevious would be listening

00:53:23.820 --> 00:53:26.619
<v Speaker 1>to any change requests. And then it would

00:53:26.619 --> 00:53:28.380
<v Speaker 1>reply whether it passes or not.

00:53:32.685 --> 00:53:34.445
<v Speaker 0>Oh. That is right. Yeah.

00:53:37.805 --> 00:53:39.645
<v Speaker 1>Some point, we're going to have a self

00:53:39.724 --> 00:53:42.740
<v Speaker 1>fully self contained CLI. It's just this was

00:53:42.740 --> 00:53:43.540
<v Speaker 1>the faster

00:53:44.420 --> 00:53:47.540
<v Speaker 1>fastest way to get this out and running.

00:53:52.339 --> 00:53:55.059
<v Speaker 0>Alright. Let's see. So this is reading the

00:53:55.059 --> 00:53:56.579
<v Speaker 0>input, pausing it,

00:53:57.165 --> 00:53:59.085
<v Speaker 0>building some sort of package.

00:53:59.885 --> 00:54:01.325
<v Speaker 0>We have some It has to

00:54:03.165 --> 00:54:03.805
<v Speaker 0>yeah.

00:54:05.725 --> 00:54:07.325
<v Speaker 1>It's creating the

00:54:07.485 --> 00:54:08.685
<v Speaker 1>resource,

00:54:08.685 --> 00:54:09.485
<v Speaker 1>which is

00:54:11.405 --> 00:54:12.205
<v Speaker 0>oh, okay.

00:54:13.100 --> 00:54:14.220
<v Speaker 1>Does it work?

00:54:14.620 --> 00:54:16.540
<v Speaker 1>Let's go to the UI.

00:54:16.860 --> 00:54:18.300
<v Speaker 0>Maybe I didn't see if the file was

00:54:18.300 --> 00:54:19.340
<v Speaker 0>broken, but

00:54:19.900 --> 00:54:22.140
<v Speaker 0>oh, maybe I did. I'm not sure. Okay.

00:54:22.140 --> 00:54:23.180
<v Speaker 0>When we come back here

00:54:24.220 --> 00:54:26.300
<v Speaker 1>Yeah. If you click on it.

00:54:27.595 --> 00:54:29.755
<v Speaker 1>Okay. So it has two changes. You can

00:54:29.755 --> 00:54:31.835
<v Speaker 1>click on every single change.

00:54:32.475 --> 00:54:33.595
<v Speaker 1>Deployment.

00:54:35.755 --> 00:54:36.555
<v Speaker 1>EMV

00:54:36.555 --> 00:54:39.755
<v Speaker 1>from config map prep. Engine nine. And now

00:54:39.755 --> 00:54:40.395
<v Speaker 1>the other one.

00:54:41.670 --> 00:54:42.310
<v Speaker 1>Yeah.

00:54:44.230 --> 00:54:45.270
<v Speaker 1>Okay.

00:54:45.829 --> 00:54:46.550
<v Speaker 1>So

00:54:47.270 --> 00:54:49.270
<v Speaker 1>can you go to the validators?

00:54:50.310 --> 00:54:51.030
<v Speaker 0>Mhmm.

00:54:52.390 --> 00:54:54.950
<v Speaker 1>So this is the list of

00:54:56.245 --> 00:54:58.885
<v Speaker 1>all the checks that Kubevious can do by

00:54:58.885 --> 00:54:59.525
<v Speaker 1>default.

00:55:00.405 --> 00:55:02.805
<v Speaker 1>So one of those should be

00:55:04.005 --> 00:55:08.245
<v Speaker 1>okay. Unresolved conflict map reference container environment variables.

00:55:08.660 --> 00:55:10.580
<v Speaker 1>Yeah. So if you click on it

00:55:12.740 --> 00:55:15.540
<v Speaker 1>okay. So it was supposed

00:55:15.540 --> 00:55:16.100
<v Speaker 1>to

00:55:17.220 --> 00:55:18.980
<v Speaker 1>is it by default optional?

00:55:20.020 --> 00:55:20.900
<v Speaker 0>It's in the header.

00:55:22.635 --> 00:55:25.195
<v Speaker 1>It's supposed to be error.

00:55:25.835 --> 00:55:28.075
<v Speaker 1>It was supposed to fail, to be honest.

00:55:28.155 --> 00:55:29.115
<v Speaker 1>Yeah.

00:55:30.715 --> 00:55:31.755
<v Speaker 1>Let's do

00:55:33.115 --> 00:55:35.755
<v Speaker 1>can you try to add the optional false?

00:55:38.530 --> 00:55:39.330
<v Speaker 0>Yep.

00:55:44.450 --> 00:55:45.970
<v Speaker 0>And then just run this again?

00:55:46.530 --> 00:55:46.930
<v Speaker 1>Yeah.

00:55:55.075 --> 00:55:56.915
<v Speaker 1>Oh. Oh. Alright.

00:55:57.475 --> 00:56:00.595
<v Speaker 1>Alright. Let's then if it says it's good,

00:56:00.595 --> 00:56:03.555
<v Speaker 1>let's let's apply those changes with TubeControl

00:56:03.555 --> 00:56:04.035
<v Speaker 1>apply.

00:56:04.460 --> 00:56:06.299
<v Speaker 1>But let me tell you one thing. This

00:56:07.019 --> 00:56:08.700
<v Speaker 1>the guard is relatively

00:56:08.779 --> 00:56:10.060
<v Speaker 1>new development

00:56:10.460 --> 00:56:12.300
<v Speaker 1>even though it should work,

00:56:12.380 --> 00:56:14.380
<v Speaker 1>but there are sometimes

00:56:15.900 --> 00:56:17.099
<v Speaker 1>issues with that.

00:56:22.315 --> 00:56:24.555
<v Speaker 0>Alright. So we have our create container config

00:56:24.555 --> 00:56:26.634
<v Speaker 0>error from the conflict map being unable to

00:56:26.634 --> 00:56:27.355
<v Speaker 0>resolve.

00:56:28.954 --> 00:56:29.994
<v Speaker 1>Oh, okay.

00:56:31.770 --> 00:56:35.130
<v Speaker 1>Can we can you reference the config map

00:56:35.130 --> 00:56:37.290
<v Speaker 1>from not using from

00:56:38.490 --> 00:56:39.290
<v Speaker 1>from,

00:56:39.290 --> 00:56:41.210
<v Speaker 1>but using just the mapping

00:56:41.210 --> 00:56:42.730
<v Speaker 1>referencing the data?

00:56:43.770 --> 00:56:46.010
<v Speaker 0>Yep. So we want name.

00:56:46.650 --> 00:56:47.130
<v Speaker 0>Correct.

00:56:47.715 --> 00:56:50.595
<v Speaker 0>And then oh, and then config

00:56:51.235 --> 00:56:52.435
<v Speaker 0>ref.

00:56:53.715 --> 00:56:55.075
<v Speaker 1>And the name. Name

00:56:55.235 --> 00:56:56.515
<v Speaker 0>engine x

00:56:56.675 --> 00:56:57.475
<v Speaker 0>pick.

00:57:00.435 --> 00:57:02.230
<v Speaker 0>I think that's valid. I can't remember the

00:57:02.230 --> 00:57:03.670
<v Speaker 0>last time I used that syntax.

00:57:05.190 --> 00:57:05.829
<v Speaker 0>Let's see.

00:57:14.145 --> 00:57:15.825
<v Speaker 0>Okay. We have to

00:57:16.625 --> 00:57:18.545
<v Speaker 0>Well, there's there's a lot a little bit.

00:57:18.545 --> 00:57:20.145
<v Speaker 0>There's a lot of validators here. Let's try

00:57:20.145 --> 00:57:22.065
<v Speaker 0>another one. How about Mhmm.

00:57:30.550 --> 00:57:31.430
<v Speaker 1>Let's

00:57:32.870 --> 00:57:35.030
<v Speaker 1>let's add a service. If you can add

00:57:35.030 --> 00:57:38.070
<v Speaker 1>a service and reference the the NGINX.

00:57:39.910 --> 00:57:40.870
<v Speaker 0>Alright. Let's do it.

00:57:41.845 --> 00:57:43.365
<v Speaker 0>So blah blah blah.

00:57:43.685 --> 00:57:44.405
<v Speaker 0>Service.

00:57:44.645 --> 00:57:45.685
<v Speaker 0>Engine x.

00:57:47.045 --> 00:57:49.045
<v Speaker 0>And you want me to break the selector?

00:57:49.445 --> 00:57:52.005
<v Speaker 1>Yeah. I wanna use another selector. Yeah.

00:57:53.365 --> 00:57:54.165
<v Speaker 0>Alright.

00:57:54.405 --> 00:57:56.405
<v Speaker 0>And we'll run our validator.

00:58:02.390 --> 00:58:05.110
<v Speaker 1>Okay. Something is off. Something

00:58:05.430 --> 00:58:07.030
<v Speaker 1>is really off.

00:58:07.350 --> 00:58:09.590
<v Speaker 1>It's probably something for the demo?

00:58:10.310 --> 00:58:12.390
<v Speaker 1>No. I think

00:58:12.785 --> 00:58:15.025
<v Speaker 1>let's get back to the guard and see

00:58:15.025 --> 00:58:17.585
<v Speaker 1>if at at least it could kind of

00:58:18.065 --> 00:58:21.025
<v Speaker 1>record the the attempt for changes.

00:58:22.865 --> 00:58:24.465
<v Speaker 0>Yep. I can see the service here.

00:58:26.529 --> 00:58:28.770
<v Speaker 1>It's metadata name,

00:58:29.809 --> 00:58:31.250
<v Speaker 1>fake engine apps,

00:58:31.890 --> 00:58:33.890
<v Speaker 1>and the other one is not

00:58:34.529 --> 00:58:35.970
<v Speaker 1>fake engine apps. Right?

00:58:39.475 --> 00:58:41.555
<v Speaker 0>Yep. There's no fake engine.

00:58:43.555 --> 00:58:45.635
<v Speaker 1>Let's apply that change as well. I wanna

00:58:45.635 --> 00:58:48.115
<v Speaker 1>see if we would see the errors in

00:58:48.115 --> 00:58:49.155
<v Speaker 1>Kubevious.

00:58:51.075 --> 00:58:52.835
<v Speaker 0>Oh, wait. I got something wrong.

00:58:55.700 --> 00:58:57.300
<v Speaker 0>Okay. Explain

00:58:58.339 --> 00:58:59.460
<v Speaker 0>deployment

00:59:00.099 --> 00:59:01.140
<v Speaker 0>spec

00:59:01.460 --> 00:59:02.420
<v Speaker 0>template

00:59:02.420 --> 00:59:03.220
<v Speaker 0>spec

00:59:03.220 --> 00:59:04.500
<v Speaker 0>containers

00:59:04.500 --> 00:59:05.220
<v Speaker 0>dot env.

00:59:07.955 --> 00:59:09.395
<v Speaker 0>Oh, value from

00:59:10.675 --> 00:59:11.715
<v Speaker 0>Yeah. And then config.

00:59:12.195 --> 00:59:14.035
<v Speaker 0>So that was that probably was my fault

00:59:14.035 --> 00:59:15.075
<v Speaker 0>then. So

00:59:16.195 --> 00:59:16.835
<v Speaker 0>value

00:59:17.235 --> 00:59:17.635
<v Speaker 0>from.

00:59:22.480 --> 00:59:24.160
<v Speaker 0>Try that again then. Okay.

00:59:30.559 --> 00:59:32.880
<v Speaker 1>If you go back to the okay. If

00:59:32.880 --> 00:59:34.960
<v Speaker 1>you go back to the EMV from.

00:59:37.115 --> 00:59:38.395
<v Speaker 1>You can do that.

00:59:39.515 --> 00:59:40.155
<v Speaker 1>If

00:59:40.635 --> 00:59:41.995
<v Speaker 1>you open up the file.

00:59:43.994 --> 00:59:44.715
<v Speaker 0>Mhmm.

00:59:46.395 --> 00:59:48.875
<v Speaker 1>Okay. So there is an array. EMV from.

00:59:51.520 --> 00:59:52.480
<v Speaker 1>Okay. This

00:59:52.880 --> 00:59:55.680
<v Speaker 1>looks good to me. My explainer says I'm

00:59:55.680 --> 00:59:57.760
<v Speaker 0>wrong. Oh, it wants a key. It wants

00:59:57.760 --> 00:59:58.560
<v Speaker 1>a key.

00:59:58.960 --> 00:59:59.760
<v Speaker 1>Inside that.

01:00:00.240 --> 01:00:01.200
<v Speaker 1>Yeah.

01:00:01.920 --> 01:00:03.040
<v Speaker 1>It wants a key.

01:00:03.680 --> 01:00:06.465
<v Speaker 1>The name and the key can be it

01:00:06.465 --> 01:00:08.385
<v Speaker 1>can be password. Right?

01:00:10.625 --> 01:00:13.105
<v Speaker 1>Name is engine x fate. The

01:00:14.705 --> 01:00:15.425
<v Speaker 0>Okay.

01:00:17.505 --> 01:00:19.105
<v Speaker 1>Yeah. Okay. Yeah.

01:00:21.790 --> 01:00:23.310
<v Speaker 1>Now let's try.

01:00:29.710 --> 01:00:31.070
<v Speaker 1>This is so odd.

01:00:32.605 --> 01:00:33.325
<v Speaker 1>Alright.

01:00:34.845 --> 01:00:35.725
<v Speaker 1>Looks like

01:00:35.965 --> 01:00:38.285
<v Speaker 1>regardless what we do, it kind of takes

01:00:38.285 --> 01:00:40.765
<v Speaker 1>the changes. It's it's it's says it's all

01:00:40.765 --> 01:00:41.405
<v Speaker 1>good.

01:00:42.605 --> 01:00:44.285
<v Speaker 1>I wanna see what's going on in the

01:00:44.285 --> 01:00:45.725
<v Speaker 1>browser. It

01:00:46.500 --> 01:00:48.900
<v Speaker 1>it takes five minutes to refresh. There is

01:00:48.900 --> 01:00:51.220
<v Speaker 1>a pause of five minutes after every

01:00:51.220 --> 01:00:53.540
<v Speaker 1>after every single change is detected.

01:00:53.940 --> 01:00:56.420
<v Speaker 1>So if we go back to browser, we

01:00:56.420 --> 01:00:59.220
<v Speaker 1>should be able to see that in in

01:00:59.700 --> 01:01:00.420
<v Speaker 1>the default.

01:01:01.025 --> 01:01:04.385
<v Speaker 0>Yeah. Okay. Click the button. Now. Yeah. Yeah.

01:01:06.145 --> 01:01:06.945
<v Speaker 1>Okay.

01:01:07.505 --> 01:01:09.905
<v Speaker 1>So it could see all those errors. Like,

01:01:09.905 --> 01:01:11.345
<v Speaker 1>if you maybe open

01:01:11.825 --> 01:01:13.825
<v Speaker 1>make the window a little bit bigger from

01:01:13.825 --> 01:01:15.425
<v Speaker 1>the, like, bottom

01:01:15.425 --> 01:01:16.065
<v Speaker 1>tool window,

01:01:16.680 --> 01:01:18.920
<v Speaker 1>So you can see all those errors under

01:01:18.920 --> 01:01:19.960
<v Speaker 1>the alerts.

01:01:20.200 --> 01:01:21.560
<v Speaker 1>Yeah. That was it.

01:01:22.520 --> 01:01:24.680
<v Speaker 0>Oh, yeah. Could not find contact with that.

01:01:24.680 --> 01:01:25.400
<v Speaker 1>Yeah. Okay.

01:01:28.359 --> 01:01:29.800
<v Speaker 1>So the drawer doesn't work.

01:01:30.785 --> 01:01:31.505
<v Speaker 1>Alright.

01:01:32.865 --> 01:01:33.665
<v Speaker 1>Yeah. I'll

01:01:34.465 --> 01:01:36.385
<v Speaker 1>we'll we'll have to take take a look

01:01:36.385 --> 01:01:37.505
<v Speaker 1>and see what

01:01:37.665 --> 01:01:38.945
<v Speaker 1>what's going on. But

01:01:39.825 --> 01:01:42.470
<v Speaker 0>Well, this is open source as you. So,

01:01:42.470 --> 01:01:44.710
<v Speaker 0>you know, do request welcome and open issues.

01:01:44.710 --> 01:01:46.869
<v Speaker 0>Whatever you think about, you'll open an issue.

01:01:47.190 --> 01:01:47.830
<v Speaker 1>Yeah.

01:01:47.990 --> 01:01:50.069
<v Speaker 1>Can we do one more thing? Yeah. Of

01:01:50.150 --> 01:01:51.190
<v Speaker 1>a process.

01:01:52.150 --> 01:01:54.710
<v Speaker 1>If can you restart the guard pod?

01:01:55.995 --> 01:01:58.795
<v Speaker 0>Yeah. Was the service guard definitely on?

01:01:59.755 --> 01:02:01.835
<v Speaker 0>Yeah. It's on there. Okay. Alright. Let's restart

01:02:01.835 --> 01:02:02.955
<v Speaker 1>it. Yeah. Yeah. Yeah.

01:02:03.755 --> 01:02:05.355
<v Speaker 0>We have logs from that pod?

01:02:06.715 --> 01:02:07.515
<v Speaker 1>Yeah.

01:02:07.675 --> 01:02:08.155
<v Speaker 1>We should.

01:02:10.480 --> 01:02:12.319
<v Speaker 1>There is a guard if you can open

01:02:12.319 --> 01:02:13.839
<v Speaker 1>up the logs for it.

01:02:14.400 --> 01:02:16.560
<v Speaker 0>Can you get logs, Rick, of this

01:02:16.799 --> 01:02:17.599
<v Speaker 0>UI?

01:02:20.319 --> 01:02:23.440
<v Speaker 1>UI doesn't have logs, but

01:02:22.925 --> 01:02:24.365
<v Speaker 1>most of the things are in the back

01:02:24.365 --> 01:02:25.325
<v Speaker 1>end and the

01:02:26.045 --> 01:02:27.645
<v Speaker 1>I'll draw this here.

01:02:27.965 --> 01:02:29.165
<v Speaker 1>Can you just chill it?

01:02:37.990 --> 01:02:39.750
<v Speaker 1>It should come up pretty quickly.

01:02:42.150 --> 01:02:44.150
<v Speaker 0>What happens if I run a guard just

01:02:44.150 --> 01:02:44.790
<v Speaker 0>now?

01:02:45.910 --> 01:02:47.109
<v Speaker 1>It it

01:02:47.109 --> 01:02:49.349
<v Speaker 1>it it will just take longer to run

01:02:49.349 --> 01:02:49.829
<v Speaker 1>until.

01:02:51.115 --> 01:02:51.835
<v Speaker 1>Yeah. That's

01:02:52.235 --> 01:02:53.755
<v Speaker 1>I'm really surprised because,

01:02:54.075 --> 01:02:56.235
<v Speaker 1>I would think that it couldn't kind of

01:02:56.315 --> 01:02:58.795
<v Speaker 1>there would be an issue with hydrogen delivering

01:02:58.795 --> 01:03:00.635
<v Speaker 1>those, manifests.

01:03:01.595 --> 01:03:04.750
<v Speaker 1>But yeah. So the promise is that it's

01:03:04.750 --> 01:03:06.750
<v Speaker 1>supposed to run the same changes

01:03:07.710 --> 01:03:10.109
<v Speaker 1>based on what changes kind of issues that

01:03:10.109 --> 01:03:12.190
<v Speaker 1>you would see in the browser,

01:03:13.150 --> 01:03:15.549
<v Speaker 1>but it it's supposed it was supposed to

01:03:15.549 --> 01:03:16.750
<v Speaker 1>prevent those changes.

01:03:22.375 --> 01:03:23.175
<v Speaker 1>Let's

01:03:24.135 --> 01:03:26.295
<v Speaker 1>can we do one more thing? Yeah. Go

01:03:26.295 --> 01:03:28.935
<v Speaker 0>for it. Can you I'm just guessing.

01:03:30.560 --> 01:03:34.000
<v Speaker 1>Just add a namespace reference in your manifests.

01:03:34.560 --> 01:03:36.080
<v Speaker 1>Just add a namespace default.

01:03:43.325 --> 01:03:45.085
<v Speaker 0>And you want me to run it again?

01:03:45.645 --> 01:03:46.285
<v Speaker 1>Yeah.

01:03:53.964 --> 01:03:54.765
<v Speaker 0>Yeah.

01:03:54.845 --> 01:03:56.365
<v Speaker 1>Okay. Yeah. Okay.

01:03:56.605 --> 01:03:58.204
<v Speaker 1>I'll have to take one

01:03:59.220 --> 01:04:01.220
<v Speaker 1>One more issue request.

01:04:06.820 --> 01:04:10.100
<v Speaker 1>Alright. Alright. So in this validators,

01:04:10.420 --> 01:04:12.100
<v Speaker 1>this is how it was supposed to work.

01:04:12.100 --> 01:04:14.355
<v Speaker 1>So if it hits an issue

01:04:14.515 --> 01:04:17.235
<v Speaker 1>from this validator's list, if it's

01:04:18.115 --> 01:04:19.235
<v Speaker 1>in a error,

01:04:19.635 --> 01:04:22.435
<v Speaker 1>if it's marked as a to be treated

01:04:22.435 --> 01:04:24.915
<v Speaker 1>as an error, then it was supposed to,

01:04:25.315 --> 01:04:27.795
<v Speaker 1>prevent those changes from getting to the cluster.

01:04:28.690 --> 01:04:30.610
<v Speaker 1>If it's disabled or it's at the word

01:04:30.610 --> 01:04:32.850
<v Speaker 1>level, it would be informational.

01:04:34.850 --> 01:04:35.490
<v Speaker 0>Okay.

01:04:35.650 --> 01:04:36.930
<v Speaker 0>That makes sense. Yeah.

01:04:38.690 --> 01:04:41.010
<v Speaker 1>Same would be kind of with the rules.

01:04:41.435 --> 01:04:44.875
<v Speaker 1>So rules allow you to write your own

01:04:44.875 --> 01:04:45.675
<v Speaker 1>checks

01:04:48.075 --> 01:04:49.995
<v Speaker 1>before writing new rules.

01:04:50.315 --> 01:04:50.955
<v Speaker 1>Maybe

01:04:51.755 --> 01:04:53.915
<v Speaker 1>that's a little bit more advanced, but maybe

01:04:53.915 --> 01:04:55.755
<v Speaker 1>let's try to look at existing ones.

01:04:56.589 --> 01:04:58.589
<v Speaker 1>And if you really wanna write your own

01:04:58.589 --> 01:05:00.910
<v Speaker 1>rule, we can use the browser that would

01:05:00.910 --> 01:05:03.309
<v Speaker 1>help us writing the rule a little bit

01:05:03.309 --> 01:05:05.470
<v Speaker 1>so we don't have to do it from

01:05:05.470 --> 01:05:06.270
<v Speaker 1>the stretch.

01:05:06.990 --> 01:05:09.869
<v Speaker 1>It consists of two tabs, two tiny little

01:05:09.869 --> 01:05:10.670
<v Speaker 1>bit of scripts.

01:05:11.205 --> 01:05:13.765
<v Speaker 1>The target is supposed to navigate

01:05:15.525 --> 01:05:18.245
<v Speaker 1>similar to the browser. Basically, you would navigate

01:05:18.245 --> 01:05:20.405
<v Speaker 1>and land on a particular node in the

01:05:20.405 --> 01:05:21.125
<v Speaker 1>UI.

01:05:21.685 --> 01:05:24.005
<v Speaker 1>And in the rule strip, you would determine

01:05:24.380 --> 01:05:26.620
<v Speaker 1>what to do with it. So we can

01:05:26.620 --> 01:05:29.500
<v Speaker 1>run all sorts of conditions, checks. It's written

01:05:29.500 --> 01:05:30.540
<v Speaker 1>in JavaScript.

01:05:30.700 --> 01:05:32.300
<v Speaker 1>And then in the end, you would either

01:05:32.300 --> 01:05:34.060
<v Speaker 1>raise a warning error,

01:05:34.220 --> 01:05:36.780
<v Speaker 1>or you can associate custom icon.

01:05:37.020 --> 01:05:38.620
<v Speaker 1>So for example, in this case,

01:05:39.204 --> 01:05:41.525
<v Speaker 1>we're going over pods

01:05:41.525 --> 01:05:44.565
<v Speaker 1>and then drilling down into containers.

01:05:45.125 --> 01:05:47.684
<v Speaker 1>And if the resource limits are not set,

01:05:47.684 --> 01:05:48.565
<v Speaker 1>we would say

01:05:48.805 --> 01:05:51.780
<v Speaker 1>there are no resources limits set. And then

01:05:51.780 --> 01:05:54.580
<v Speaker 1>you can see there are seven such nodes

01:05:54.580 --> 01:05:56.500
<v Speaker 1>that are hitting this rule.

01:05:57.220 --> 01:05:59.460
<v Speaker 1>On the on the top, you can see

01:05:59.460 --> 01:06:01.220
<v Speaker 1>the affected object seven.

01:06:02.260 --> 01:06:04.655
<v Speaker 1>And you can see those are the pods

01:06:04.655 --> 01:06:05.295
<v Speaker 1>that are

01:06:05.695 --> 01:06:08.495
<v Speaker 1>that do not have any resource limits there.

01:06:08.655 --> 01:06:10.255
<v Speaker 0>Alright. I'm gonna try and build my own

01:06:10.255 --> 01:06:11.775
<v Speaker 0>there. I'm feeling brave.

01:06:12.655 --> 01:06:15.375
<v Speaker 0>I'm

01:06:15.375 --> 01:06:18.720
<v Speaker 0>gonna cancel this, and I'm gonna say pod

01:06:18.720 --> 01:06:20.160
<v Speaker 0>has no

01:06:20.480 --> 01:06:21.040
<v Speaker 0>team.

01:06:22.480 --> 01:06:24.560
<v Speaker 0>I'm gonna steal your selector.

01:06:24.720 --> 01:06:26.320
<v Speaker 0>So I'm just gonna go select

01:06:26.320 --> 01:06:27.280
<v Speaker 0>namespace.

01:06:27.280 --> 01:06:28.640
<v Speaker 0>Don't worry about Kube system.

01:06:29.645 --> 01:06:31.885
<v Speaker 0>We're looking at descendants, which are pods, and

01:06:31.885 --> 01:06:33.565
<v Speaker 0>then we have this thing called a script.

01:06:33.565 --> 01:06:34.925
<v Speaker 0>Now in a script,

01:06:35.405 --> 01:06:36.605
<v Speaker 0>I actually don't need to look at the

01:06:36.605 --> 01:06:39.085
<v Speaker 0>containers here. So I'm assuming I could say

01:06:39.085 --> 01:06:39.885
<v Speaker 0>if

01:06:41.724 --> 01:06:43.005
<v Speaker 0>and

01:06:44.350 --> 01:06:45.150
<v Speaker 0>item

01:06:45.710 --> 01:06:46.750
<v Speaker 0>config

01:06:47.150 --> 01:06:48.590
<v Speaker 0>metadata

01:06:49.470 --> 01:06:50.270
<v Speaker 0>dot

01:06:50.590 --> 01:06:51.950
<v Speaker 0>labels.

01:06:53.150 --> 01:06:54.830
<v Speaker 0>This is gonna be something.

01:06:56.030 --> 01:06:57.630
<v Speaker 0>And I wanna do a warning,

01:06:59.465 --> 01:07:00.825
<v Speaker 0>No team

01:07:01.225 --> 01:07:01.865
<v Speaker 0>owner.

01:07:03.465 --> 01:07:05.785
<v Speaker 0>No. This is a map. Is this just

01:07:05.785 --> 01:07:08.665
<v Speaker 0>plain JavaScript? Like, actual real stuff? Plain JavaScript.

01:07:08.665 --> 01:07:10.585
<v Speaker 1>This is real JavaScript. Alright. So what I

01:07:10.585 --> 01:07:12.985
<v Speaker 0>wanna do should be a dictionary. Yeah. Yeah.

01:07:12.985 --> 01:07:14.345
<v Speaker 0>So I could say team.

01:07:16.960 --> 01:07:19.119
<v Speaker 0>Yeah. That would probably be enough. Right? Because

01:07:19.119 --> 01:07:22.240
<v Speaker 0>that would return undefeigned. The team doesn't exist.

01:07:22.880 --> 01:07:25.599
<v Speaker 0>Yeah. So I'm gonna create create it.

01:07:26.000 --> 01:07:26.640
<v Speaker 1>So

01:07:27.279 --> 01:07:27.920
<v Speaker 1>we'll

01:07:28.345 --> 01:07:30.105
<v Speaker 1>we'll need to wait a

01:07:30.425 --> 01:07:32.345
<v Speaker 1>couple of minutes until there is a next,

01:07:33.225 --> 01:07:34.345
<v Speaker 1>next run.

01:07:34.825 --> 01:07:35.465
<v Speaker 1>But

01:07:36.185 --> 01:07:38.665
<v Speaker 1>Yeah. I think that should work. So I

01:07:38.665 --> 01:07:40.585
<v Speaker 0>like that. An easier way to do that.

01:07:40.830 --> 01:07:42.590
<v Speaker 1>There is a much easier way to do

01:07:42.590 --> 01:07:44.190
<v Speaker 1>that. So while

01:07:44.990 --> 01:07:47.310
<v Speaker 1>it's thinking, let's go back to the browser.

01:07:47.310 --> 01:07:48.030
<v Speaker 1>Let's

01:07:48.270 --> 01:07:51.310
<v Speaker 1>find something real that you would really want

01:07:51.310 --> 01:07:52.110
<v Speaker 1>to check.

01:07:53.135 --> 01:07:55.214
<v Speaker 1>Because right now, it would raise this,

01:07:55.615 --> 01:07:59.694
<v Speaker 1>warning on every single pod. Right? Mhmm. Let's

01:07:59.694 --> 01:08:02.975
<v Speaker 1>land on either on NGINX or

01:08:04.255 --> 01:08:07.214
<v Speaker 1>somewhere. Maybe we can do run some checks

01:08:07.214 --> 01:08:10.690
<v Speaker 1>on top of Argo CD because it's pretty

01:08:11.330 --> 01:08:12.690
<v Speaker 1>complex deployment

01:08:12.690 --> 01:08:15.010
<v Speaker 0>That was compared with this engine. Cluster.

01:08:15.970 --> 01:08:19.250
<v Speaker 1>Oh, or we can go to Kubevious.

01:08:19.649 --> 01:08:20.050
<v Speaker 0>Mhmm.

01:08:22.875 --> 01:08:25.194
<v Speaker 0>Alright. So Kubevious namespace.

01:08:25.995 --> 01:08:27.035
<v Speaker 1>Kubevious.

01:08:27.035 --> 01:08:29.515
<v Speaker 1>There is a back end or

01:08:29.835 --> 01:08:32.395
<v Speaker 1>the parser, which has service accounts.

01:08:32.715 --> 01:08:34.955
<v Speaker 1>We can check for app

01:08:35.580 --> 01:08:38.300
<v Speaker 1>permissions or card or MySQL.

01:08:38.460 --> 01:08:39.100
<v Speaker 1>Okay.

01:08:40.700 --> 01:08:41.500
<v Speaker 1>Basically,

01:08:42.220 --> 01:08:44.540
<v Speaker 1>if you decide on which node you want

01:08:44.540 --> 01:08:46.540
<v Speaker 1>to run oh, okay. Let's go to container.

01:08:48.524 --> 01:08:49.244
<v Speaker 1>So

01:08:49.404 --> 01:08:51.245
<v Speaker 1>there is the image. You can run checks

01:08:51.245 --> 01:08:53.564
<v Speaker 1>on the image or config maps that are

01:08:53.564 --> 01:08:55.724
<v Speaker 1>mounted as environment variables.

01:08:55.885 --> 01:08:58.045
<v Speaker 1>So if you go down to the

01:08:58.925 --> 01:08:59.804
<v Speaker 1>rule assistant.

01:09:00.990 --> 01:09:02.989
<v Speaker 1>Go down. Draw down. Scroll down.

01:09:04.029 --> 01:09:06.590
<v Speaker 1>Yeah. Just you can do create new rule

01:09:06.590 --> 01:09:07.790
<v Speaker 1>with assistant,

01:09:07.790 --> 01:09:09.550
<v Speaker 1>so it would prepopulate

01:09:09.550 --> 01:09:10.189
<v Speaker 1>the

01:09:10.990 --> 01:09:14.305
<v Speaker 1>the target script. So you can do there

01:09:14.305 --> 01:09:16.465
<v Speaker 1>are different syntaxes.

01:09:16.465 --> 01:09:16.865
<v Speaker 1>So,

01:09:18.545 --> 01:09:20.625
<v Speaker 1>you could use basically

01:09:20.625 --> 01:09:22.145
<v Speaker 1>the top example

01:09:22.225 --> 01:09:24.625
<v Speaker 1>just to target every single container,

01:09:24.865 --> 01:09:26.145
<v Speaker 1>or you can use the

01:09:26.529 --> 01:09:28.929
<v Speaker 1>lower one that would target only that one

01:09:28.929 --> 01:09:31.170
<v Speaker 1>that you you saw in the UI.

01:09:31.729 --> 01:09:34.290
<v Speaker 1>So meaning, the less you specify, the more

01:09:34.290 --> 01:09:37.090
<v Speaker 1>broad would be the check. Mhmm. So in

01:09:37.090 --> 01:09:39.809
<v Speaker 1>this case, it would basically target every single

01:09:39.889 --> 01:09:41.569
<v Speaker 1>namespace application container.

01:09:42.015 --> 01:09:44.255
<v Speaker 1>Yep. Otherwise, if you would

01:09:44.655 --> 01:09:46.655
<v Speaker 1>use the bottom one, it would be kind

01:09:46.655 --> 01:09:47.854
<v Speaker 1>of more specific.

01:09:48.495 --> 01:09:50.015
<v Speaker 1>And then if you go to the rule

01:09:50.015 --> 01:09:52.735
<v Speaker 1>strip, it would show you the examples of

01:09:52.735 --> 01:09:55.135
<v Speaker 1>what would be the values of

01:09:55.695 --> 01:09:56.655
<v Speaker 1>different

01:09:57.110 --> 01:09:57.989
<v Speaker 1>properties.

01:09:58.070 --> 01:10:00.150
<v Speaker 1>So this way, you can anticipate kind of

01:10:00.390 --> 01:10:02.790
<v Speaker 1>it's all it gives you some hints what

01:10:02.790 --> 01:10:05.909
<v Speaker 1>are the current values of that particular node

01:10:05.910 --> 01:10:06.949
<v Speaker 1>so you can

01:10:07.750 --> 01:10:09.750
<v Speaker 1>expect what would be the values and what

01:10:09.750 --> 01:10:11.750
<v Speaker 1>rules to how to write the rules.

01:10:13.645 --> 01:10:14.285
<v Speaker 0>Okay.

01:10:16.765 --> 01:10:18.765
<v Speaker 0>I could drop this in like this. This

01:10:18.765 --> 01:10:20.765
<v Speaker 0>gives me item config. And then from there

01:10:20.845 --> 01:10:23.165
<v Speaker 1>So that would be the result of item

01:10:23.165 --> 01:10:24.285
<v Speaker 1>dot config.

01:10:24.605 --> 01:10:26.765
<v Speaker 1>And then you can do dot ports or

01:10:26.765 --> 01:10:27.165
<v Speaker 1>image.

01:10:29.800 --> 01:10:30.840
<v Speaker 0>So, like, this

01:10:32.120 --> 01:10:33.800
<v Speaker 0>unsafe image.

01:10:35.800 --> 01:10:37.880
<v Speaker 0>And I know that this image is

01:10:38.520 --> 01:10:40.200
<v Speaker 0>Kubevious parts or

01:10:40.545 --> 01:10:41.905
<v Speaker 0>I'll just copy this.

01:10:44.545 --> 01:10:46.225
<v Speaker 0>So we have a target here. It says,

01:10:46.225 --> 01:10:47.664
<v Speaker 0>look in all containers.

01:10:48.625 --> 01:10:51.025
<v Speaker 0>And as the image is Kubevious parser one

01:10:51.025 --> 01:10:53.025
<v Speaker 0>zero eight, I log a warning. But you

01:10:53.025 --> 01:10:54.465
<v Speaker 0>said there was other ones here. Can I

01:10:54.465 --> 01:10:56.560
<v Speaker 0>do an error? Yeah. Yeah.

01:10:56.800 --> 01:10:58.320
<v Speaker 1>Yeah. Okay. So

01:10:58.720 --> 01:11:00.400
<v Speaker 1>Just name it. Allow

01:11:00.560 --> 01:11:01.840
<v Speaker 0>parser image.

01:11:02.000 --> 01:11:04.000
<v Speaker 0>Maybe we wanna restrict our cluster from running

01:11:04.000 --> 01:11:06.080
<v Speaker 0>this specific version because it has a vulnerability

01:11:06.080 --> 01:11:08.400
<v Speaker 0>or whatever, and then I I click create.

01:11:08.400 --> 01:11:10.065
<v Speaker 0>What I also noticed while we were doing

01:11:10.065 --> 01:11:12.945
<v Speaker 0>that is our our pod node team worked.

01:11:12.945 --> 01:11:13.504
<v Speaker 1>Yeah.

01:11:13.985 --> 01:11:15.905
<v Speaker 0>Mhmm. We can actually see every object.

01:11:17.264 --> 01:11:18.784
<v Speaker 0>No. I I mean, I trust you, but

01:11:18.784 --> 01:11:20.464
<v Speaker 0>I'm gonna modify that in GenX.

01:11:21.824 --> 01:11:23.985
<v Speaker 0>And I'm gonna add labels

01:11:25.179 --> 01:11:25.899
<v Speaker 0>team

01:11:26.300 --> 01:11:27.260
<v Speaker 0>Rawkode,

01:11:30.380 --> 01:11:32.139
<v Speaker 0>and I'll reapply that. So we should see

01:11:32.139 --> 01:11:33.980
<v Speaker 0>within the next few minutes that my Rawk

01:11:34.059 --> 01:11:37.019
<v Speaker 0>my NGINX partners satisfies

01:11:37.260 --> 01:11:38.380
<v Speaker 0>this rule

01:11:38.855 --> 01:11:41.255
<v Speaker 0>where it has a two. Okay. So now

01:11:41.255 --> 01:11:43.015
<v Speaker 1>if we go to the browser,

01:11:43.415 --> 01:11:45.495
<v Speaker 1>that could be the top issue

01:11:46.295 --> 01:11:48.935
<v Speaker 1>in the summary since it's it was hitting

01:11:48.935 --> 01:11:49.895
<v Speaker 1>couple of

01:11:50.935 --> 01:11:51.255
<v Speaker 1>pods.

01:11:51.920 --> 01:11:54.239
<v Speaker 1>Okay. So there is if you scroll more,

01:11:54.239 --> 01:11:56.400
<v Speaker 1>service account not used, there are probably much

01:11:56.400 --> 01:11:58.079
<v Speaker 1>more service accounts than

01:11:58.400 --> 01:11:59.439
<v Speaker 1>Yeah. Pods.

01:11:59.760 --> 01:12:01.599
<v Speaker 1>Yeah. So that's the rule. So

01:12:02.560 --> 01:12:04.800
<v Speaker 1>and those are the instances that are

01:12:05.235 --> 01:12:08.514
<v Speaker 1>violating this rule. And those are also clickable.

01:12:08.514 --> 01:12:11.155
<v Speaker 1>Once you click, it would navigate into the

01:12:11.155 --> 01:12:13.155
<v Speaker 1>corresponding view where you can

01:12:13.475 --> 01:12:14.995
<v Speaker 1>do much deeper

01:12:14.995 --> 01:12:15.554
<v Speaker 1>debugging.

01:12:16.850 --> 01:12:17.650
<v Speaker 0>Nice.

01:12:19.330 --> 01:12:21.090
<v Speaker 0>So question Just click on it and Question

01:12:21.090 --> 01:12:22.690
<v Speaker 0>or feature request. I'm not sure what I'm

01:12:22.690 --> 01:12:25.330
<v Speaker 0>about to give you here. Mhmm. I I

01:12:25.330 --> 01:12:27.890
<v Speaker 0>really like these these rules,

01:12:29.355 --> 01:12:30.955
<v Speaker 0>but I'm not sure I'd wanna type them

01:12:30.955 --> 01:12:33.595
<v Speaker 0>in to the GUI. Can we apply them

01:12:33.595 --> 01:12:35.755
<v Speaker 0>via GetOps fashion? Is that something that's on

01:12:35.755 --> 01:12:36.635
<v Speaker 0>your road map?

01:12:37.995 --> 01:12:40.715
<v Speaker 0>Like, a custom a custom resource definition for

01:12:40.715 --> 01:12:43.595
<v Speaker 0>a Kubevious rule that KubeControl applied to my

01:12:43.595 --> 01:12:45.219
<v Speaker 0>cluster. That would be really sweet.

01:12:45.940 --> 01:12:47.699
<v Speaker 1>I think we can do it. It's

01:12:48.179 --> 01:12:50.659
<v Speaker 1>pretty easy. Yeah. Yeah. Mhmm.

01:12:51.060 --> 01:12:52.659
<v Speaker 0>Alright. Sorry. You were gonna say something, and

01:12:52.659 --> 01:12:55.219
<v Speaker 0>I interrupted you. Yeah. If you I just

01:12:55.219 --> 01:12:57.255
<v Speaker 1>want to say, if you click on any

01:12:57.255 --> 01:12:58.695
<v Speaker 1>of those links,

01:12:58.695 --> 01:13:01.014
<v Speaker 1>let's say the larger namespace, so

01:13:01.574 --> 01:13:03.815
<v Speaker 1>it would navigate, and you would be able

01:13:03.815 --> 01:13:06.215
<v Speaker 1>to see that yeah. Indeed,

01:13:06.775 --> 01:13:09.574
<v Speaker 1>we don't have those we don't have those

01:13:10.215 --> 01:13:11.655
<v Speaker 1>labels set on those parts.

01:13:13.489 --> 01:13:15.810
<v Speaker 0>Yeah. Scroll down. Yeah. You you will see

01:13:15.810 --> 01:13:18.050
<v Speaker 1>the manifest there. Oh, it even is it's

01:13:18.050 --> 01:13:21.010
<v Speaker 1>the labels as a separate property

01:13:21.010 --> 01:13:21.730
<v Speaker 1>set.

01:13:22.290 --> 01:13:24.449
<v Speaker 0>Oh, yeah. There you go. So

01:13:26.050 --> 01:13:26.850
<v Speaker 1>for that,

01:13:28.395 --> 01:13:30.394
<v Speaker 1>do you mind to open an

01:13:30.395 --> 01:13:32.074
<v Speaker 1>issue request on GitHub

01:13:32.715 --> 01:13:35.514
<v Speaker 1>No. So that you would be notified whenever

01:13:35.514 --> 01:13:36.314
<v Speaker 1>it's there?

01:13:38.554 --> 01:13:39.274
<v Speaker 0>Sure.

01:13:40.074 --> 01:13:41.114
<v Speaker 0>GitHub

01:13:41.710 --> 01:13:43.230
<v Speaker 0>Kubevious.

01:13:43.230 --> 01:13:44.829
<v Speaker 1>It can be just one line.

01:13:48.030 --> 01:13:50.270
<v Speaker 0>This is what open source is all about.

01:13:50.270 --> 01:13:51.229
<v Speaker 0>Right? Yeah.

01:13:52.590 --> 01:13:53.310
<v Speaker 0>Feature request.

01:13:54.165 --> 01:13:55.284
<v Speaker 0>Right. K.

01:13:56.805 --> 01:13:58.725
<v Speaker 0>Make Kubevious

01:13:59.125 --> 01:13:59.925
<v Speaker 0>rules

01:14:00.005 --> 01:14:01.365
<v Speaker 0>a v r d.

01:14:09.820 --> 01:14:11.099
<v Speaker 0>I'll

01:14:13.420 --> 01:14:15.179
<v Speaker 0>come back and edit this issue. I promise.

01:14:15.179 --> 01:14:17.900
<v Speaker 0>But I have opened. Mhmm. Yeah. Thanks. That's

01:14:19.755 --> 01:14:20.474
<v Speaker 0>Alright.

01:14:21.515 --> 01:14:23.354
<v Speaker 0>So what are our markers?

01:14:24.315 --> 01:14:25.114
<v Speaker 1>Okay.

01:14:25.435 --> 01:14:27.594
<v Speaker 1>So things are not always

01:14:28.395 --> 01:14:31.195
<v Speaker 1>good or bad, like one or zero.

01:14:31.670 --> 01:14:34.150
<v Speaker 1>Sometimes you may want to find things that

01:14:34.150 --> 01:14:36.389
<v Speaker 1>are of a special interest to you.

01:14:37.110 --> 01:14:39.110
<v Speaker 1>So markers allow you to

01:14:40.070 --> 01:14:43.349
<v Speaker 1>check for rules without raising errors,

01:14:43.349 --> 01:14:45.909
<v Speaker 1>but instead associating special items

01:14:46.345 --> 01:14:48.905
<v Speaker 1>with your workload. So for example, in this

01:14:48.905 --> 01:14:49.385
<v Speaker 1>case,

01:14:49.945 --> 01:14:52.905
<v Speaker 1>by default, it comes with several monitors.

01:14:52.905 --> 01:14:55.304
<v Speaker 1>It's for workloads that use

01:14:55.545 --> 01:14:56.505
<v Speaker 1>too many

01:14:56.825 --> 01:14:59.545
<v Speaker 1>too much CPU or memory or

01:14:59.640 --> 01:15:03.320
<v Speaker 1>or or average size of CPU or memory.

01:15:03.480 --> 01:15:04.040
<v Speaker 1>So

01:15:04.600 --> 01:15:06.840
<v Speaker 1>this is just an example, and you can

01:15:06.840 --> 01:15:09.880
<v Speaker 1>choose color on the icon from the predefined

01:15:09.880 --> 01:15:11.800
<v Speaker 1>set. Yeah. I'm pretty happy that I have

01:15:11.800 --> 01:15:13.560
<v Speaker 0>my notes here now. Yeah.

01:15:15.695 --> 01:15:17.855
<v Speaker 1>So yeah. Yeah. And just like in rules,

01:15:17.855 --> 01:15:19.855
<v Speaker 1>it would have affected object.

01:15:19.855 --> 01:15:21.055
<v Speaker 1>Right? And

01:15:21.375 --> 01:15:24.255
<v Speaker 1>so now it's it's the it's the snowboarder

01:15:24.255 --> 01:15:25.135
<v Speaker 1>already.

01:15:25.455 --> 01:15:28.095
<v Speaker 1>So you click on it. And the way

01:15:28.095 --> 01:15:31.150
<v Speaker 1>you would associate markers is instead of doing

01:15:32.110 --> 01:15:34.909
<v Speaker 1>calling the function error or warning,

01:15:35.230 --> 01:15:37.229
<v Speaker 1>you would do marker

01:15:37.230 --> 01:15:39.229
<v Speaker 1>and the name of the marker. That's it.

01:15:39.230 --> 01:15:40.909
<v Speaker 1>So if you go back to the rules,

01:15:40.909 --> 01:15:42.829
<v Speaker 1>you would have one of the rules would

01:15:42.829 --> 01:15:43.869
<v Speaker 1>do that probably.

01:15:45.804 --> 01:15:46.605
<v Speaker 1>Container

01:15:46.605 --> 01:15:49.564
<v Speaker 1>memory usage, probably that would be the one.

01:15:50.445 --> 01:15:52.284
<v Speaker 0>But can I do it here instead of

01:15:52.284 --> 01:15:54.764
<v Speaker 0>having an error unsafe image, which has actually

01:15:54.764 --> 01:15:55.804
<v Speaker 0>no match one,

01:15:56.940 --> 01:15:58.940
<v Speaker 0>which is great? That's exactly what we wanted.

01:15:58.940 --> 01:15:59.980
<v Speaker 0>But I have to say, you know, this

01:15:59.980 --> 01:16:01.340
<v Speaker 0>is not an error. So you're saying I

01:16:01.340 --> 01:16:02.780
<v Speaker 0>can do marker?

01:16:04.140 --> 01:16:07.099
<v Speaker 1>Yeah. You would just say mark

01:16:07.820 --> 01:16:10.614
<v Speaker 1>without marker. Yeah. And the name of the

01:16:10.695 --> 01:16:11.975
<v Speaker 1>of the titan.

01:16:12.215 --> 01:16:12.855
<v Speaker 0>Oh,

01:16:13.815 --> 01:16:15.095
<v Speaker 0>should have paid more attention. Just

01:16:16.935 --> 01:16:19.255
<v Speaker 0>Meet your memory user. Okay. Just create a

01:16:19.255 --> 01:16:20.615
<v Speaker 1>new one. You can just create a new

01:16:20.615 --> 01:16:22.775
<v Speaker 1>one. Uh-huh. Alright. Okay. Mark. Yeah.

01:16:25.360 --> 01:16:26.719
<v Speaker 0>Livestream.

01:16:31.680 --> 01:16:34.079
<v Speaker 1>Yeah. Now we go there.

01:16:34.640 --> 01:16:36.079
<v Speaker 0>I don't think it's saved.

01:16:36.560 --> 01:16:38.400
<v Speaker 0>Rule oh, no. It does save. Okay. It's

01:16:38.400 --> 01:16:40.485
<v Speaker 0>just because I gave it a silly name.

01:16:41.365 --> 01:16:43.125
<v Speaker 0>Okay. Oh, yeah.

01:16:44.645 --> 01:16:46.965
<v Speaker 1>Yeah. You you you can hide that UI

01:16:46.965 --> 01:16:48.245
<v Speaker 1>with the with the

01:16:48.725 --> 01:16:51.445
<v Speaker 1>with an interesting naming. Yeah. You just create

01:16:51.445 --> 01:16:54.165
<v Speaker 1>new one, add new marker from the top

01:16:54.165 --> 01:16:56.139
<v Speaker 1>right corner. I guess we'll need to wait

01:16:56.139 --> 01:16:58.059
<v Speaker 0>a few minutes for the rule to rerun.

01:16:58.699 --> 01:17:00.460
<v Speaker 1>Oh, you don't have to wait to create

01:17:00.460 --> 01:17:02.619
<v Speaker 1>the icon. And once

01:17:02.619 --> 01:17:06.380
<v Speaker 1>it's it's run, you can change icons.

01:17:10.255 --> 01:17:12.815
<v Speaker 1>Just type a name. Choose the icon.

01:17:14.655 --> 01:17:16.094
<v Speaker 1>My livestream.

01:17:17.455 --> 01:17:19.295
<v Speaker 0>Alright. Hold on. I have to find the

01:17:19.295 --> 01:17:20.415
<v Speaker 0>perfect icon.

01:17:20.975 --> 01:17:21.615
<v Speaker 1>Pizza?

01:17:21.930 --> 01:17:24.730
<v Speaker 1>Or Yeah. Pizza. That's a good choice. Yeah.

01:17:25.130 --> 01:17:27.130
<v Speaker 0>Let's go with an orange pizza.

01:17:31.290 --> 01:17:32.090
<v Speaker 0>Cool.

01:17:33.210 --> 01:17:34.650
<v Speaker 0>We don't have an effect on the object

01:17:34.650 --> 01:17:37.265
<v Speaker 0>yet, but we'll wait. Yeah. Once the rule

01:17:37.265 --> 01:17:40.145
<v Speaker 1>runs, then you should Is that what this

01:17:40.145 --> 01:17:41.824
<v Speaker 0>icon means? Is that it needs to run

01:17:41.824 --> 01:17:44.625
<v Speaker 0>again? It means you yeah. It means you

01:17:44.625 --> 01:17:46.545
<v Speaker 1>made some changes that were not yet picked

01:17:46.545 --> 01:17:46.864
<v Speaker 1>up.

01:17:48.400 --> 01:17:50.160
<v Speaker 1>And during the next run, you would

01:17:51.040 --> 01:17:52.400
<v Speaker 1>it should be picked up.

01:17:52.720 --> 01:17:55.119
<v Speaker 1>While it's running, there's another capability.

01:17:55.120 --> 01:17:57.199
<v Speaker 1>It's a Google live search.

01:17:57.440 --> 01:17:59.680
<v Speaker 1>Maybe we can instead of waiting, we can

01:17:59.680 --> 01:18:00.800
<v Speaker 1>just try that.

01:18:01.474 --> 01:18:04.275
<v Speaker 1>Anything interests you in your cluster? Anything you

01:18:04.275 --> 01:18:05.155
<v Speaker 1>wanna find?

01:18:08.835 --> 01:18:10.275
<v Speaker 0>Oh, I I'm not sure what I can

01:18:10.275 --> 01:18:11.554
<v Speaker 0>search, but let's say I wanted to find

01:18:11.554 --> 01:18:14.114
<v Speaker 0>all resources that are tagged with team Rawkode.

01:18:14.114 --> 01:18:15.474
<v Speaker 0>Was that something we can do?

01:18:18.000 --> 01:18:20.320
<v Speaker 1>Maybe. Let let let's let's try.

01:18:20.640 --> 01:18:23.200
<v Speaker 0>Mhmm. I'm just gonna guess. Oh, I get

01:18:23.200 --> 01:18:24.160
<v Speaker 0>all complete.

01:18:26.560 --> 01:18:27.920
<v Speaker 0>Oh, you're too good to me.

01:18:32.885 --> 01:18:35.285
<v Speaker 0>See, that that's joy face. I like it

01:18:35.285 --> 01:18:37.845
<v Speaker 0>when that answer. Yeah. Yeah. Okay. Nice. So

01:18:37.845 --> 01:18:39.365
<v Speaker 0>we can actually see here we have an

01:18:39.365 --> 01:18:41.285
<v Speaker 0>application, which has a deployment.

01:18:41.605 --> 01:18:45.045
<v Speaker 0>We got NGINX, and we got our

01:18:44.140 --> 01:18:46.059
<v Speaker 0>resources on the namespace here.

01:18:46.460 --> 01:18:49.580
<v Speaker 0>Okay. When when you give me autocomplete,

01:18:49.580 --> 01:18:52.940
<v Speaker 0>I'm a very happy person. Yeah. Let's try.

01:18:55.660 --> 01:18:58.095
<v Speaker 0>Let's see my livestream piece. Okay. We're still

01:18:58.095 --> 01:19:00.095
<v Speaker 0>waiting on you. So that means medium memory.

01:19:00.095 --> 01:19:00.735
<v Speaker 0>I'm

01:19:03.295 --> 01:19:04.895
<v Speaker 0>not sure what annotations we have in the

01:19:04.895 --> 01:19:05.614
<v Speaker 0>cluster.

01:19:06.415 --> 01:19:07.055
<v Speaker 0>Let's see.

01:19:13.160 --> 01:19:15.000
<v Speaker 0>Okay. Max replica.

01:19:15.160 --> 01:19:17.000
<v Speaker 0>Don't know what the value would be. That

01:19:17.000 --> 01:19:18.200
<v Speaker 0>was the silly one to pick.

01:19:25.335 --> 01:19:28.054
<v Speaker 0>Vision by? No. That's not gonna work. I

01:19:28.054 --> 01:19:29.815
<v Speaker 0>don't know the annotations in my cluster, so

01:19:29.815 --> 01:19:31.655
<v Speaker 0>I should stop guessing. Yeah. Yeah.

01:19:31.895 --> 01:19:34.054
<v Speaker 1>Or or you just could just use a

01:19:34.054 --> 01:19:35.975
<v Speaker 1>free

01:19:35.160 --> 01:19:38.040
<v Speaker 1>free text search kind of thing. Yeah.

01:19:38.680 --> 01:19:39.400
<v Speaker 0>Alright.

01:19:40.680 --> 01:19:43.320
<v Speaker 1>It uses the hierarchy to to find for

01:19:43.320 --> 01:19:46.600
<v Speaker 1>things. But since things are kind of loosely

01:19:46.600 --> 01:19:47.400
<v Speaker 1>connected,

01:19:48.280 --> 01:19:49.400
<v Speaker 1>you can search for

01:19:50.015 --> 01:19:51.215
<v Speaker 1>port numbers

01:19:51.215 --> 01:19:51.855
<v Speaker 1>or

01:19:52.175 --> 01:19:53.135
<v Speaker 1>names of

01:19:54.095 --> 01:19:57.375
<v Speaker 1>your apps or config map or your

01:19:58.495 --> 01:19:59.054
<v Speaker 1>or,

01:19:59.455 --> 01:20:01.775
<v Speaker 1>I mean, volume mount points.

01:20:02.095 --> 01:20:04.540
<v Speaker 1>So it's and you can add as many

01:20:04.540 --> 01:20:06.620
<v Speaker 1>criteria as you wish to to file to

01:20:06.620 --> 01:20:08.700
<v Speaker 1>land on the things that you're interested in.

01:20:09.020 --> 01:20:09.980
<v Speaker 1>And it uses,

01:20:10.460 --> 01:20:12.220
<v Speaker 1>fuzzy logic. So if you

01:20:12.620 --> 01:20:13.420
<v Speaker 1>if you're

01:20:13.900 --> 01:20:15.500
<v Speaker 1>even if you make a typo or you're

01:20:15.500 --> 01:20:16.620
<v Speaker 1>looking for something

01:20:17.100 --> 01:20:17.980
<v Speaker 1>similar to

01:20:18.615 --> 01:20:20.855
<v Speaker 1>the term, then you should be able to

01:20:20.855 --> 01:20:22.534
<v Speaker 1>find it. Yeah. It's a bit quick.

01:20:25.815 --> 01:20:26.614
<v Speaker 0>Nice.

01:20:27.735 --> 01:20:29.655
<v Speaker 0>Yeah. That's a really cool feature. I like

01:20:29.655 --> 01:20:31.335
<v Speaker 0>the UI and the search there.

01:20:31.575 --> 01:20:33.415
<v Speaker 0>They all complete the breakdown of labels and

01:20:33.415 --> 01:20:33.975
<v Speaker 0>annotations.

01:20:34.230 --> 01:20:35.750
<v Speaker 0>I'd love to be able to filter by

01:20:35.750 --> 01:20:37.429
<v Speaker 0>the the image as well.

01:20:37.989 --> 01:20:39.989
<v Speaker 0>There's another feature request for you.

01:20:40.550 --> 01:20:42.150
<v Speaker 0>Alright. Thanks. Not not

01:20:42.310 --> 01:20:43.910
<v Speaker 0>maybe oh, yeah. You can do that. Right?

01:20:43.910 --> 01:20:45.750
<v Speaker 0>You can do that from the browser because

01:20:46.325 --> 01:20:49.205
<v Speaker 0>yeah. Okay. In the search as well, you

01:20:49.205 --> 01:20:51.285
<v Speaker 1>can just type image Kubevious.

01:20:51.285 --> 01:20:53.605
<v Speaker 1>That that should work. Just try.

01:20:56.485 --> 01:21:00.085
<v Speaker 0>Oh, yeah. No. Just without equals, think you

01:21:00.085 --> 01:21:02.085
<v Speaker 1>can even do image space Kubevious,

01:21:02.940 --> 01:21:05.500
<v Speaker 1>or you can kind of filter to be

01:21:05.500 --> 01:21:07.580
<v Speaker 1>more strict. You can filter by

01:21:08.140 --> 01:21:09.420
<v Speaker 1>by client.

01:21:11.100 --> 01:21:12.620
<v Speaker 0>By what? Sorry? Website.

01:21:12.940 --> 01:21:15.820
<v Speaker 1>There is a the first filter by client,

01:21:16.345 --> 01:21:17.945
<v Speaker 1>you can search by

01:21:18.505 --> 01:21:21.225
<v Speaker 1>one single type of object. It

01:21:22.745 --> 01:21:25.625
<v Speaker 1>will bring you kind of a flat list

01:21:25.625 --> 01:21:26.745
<v Speaker 1>of all images used.

01:21:28.260 --> 01:21:31.860
<v Speaker 0>Nice. And images used within the namespace or

01:21:31.860 --> 01:21:33.619
<v Speaker 1>within an application. So

01:21:34.579 --> 01:21:36.340
<v Speaker 0>Yes. So we can actually see Redis here

01:21:36.340 --> 01:21:39.379
<v Speaker 0>because that's used by Kubevious. Redis. Yeah.

01:21:41.460 --> 01:21:42.260
<v Speaker 0>Alright. Nice.

01:21:43.235 --> 01:21:45.315
<v Speaker 0>And I have my livestream marker. Look at

01:21:45.315 --> 01:21:46.915
<v Speaker 1>the livestream. Yeah.

01:21:48.835 --> 01:21:50.915
<v Speaker 0>This is a lot of really cool components.

01:21:51.235 --> 01:21:53.074
<v Speaker 0>I think we should try and summarize

01:21:53.235 --> 01:21:55.715
<v Speaker 0>what Kubevious does. I'll try my best to

01:21:55.715 --> 01:21:57.875
<v Speaker 0>describe everything that we're kinda sticking to look

01:21:57.330 --> 01:21:58.850
<v Speaker 0>at today. And then if you wanna kinda

01:21:58.930 --> 01:22:00.690
<v Speaker 0>if you're happy to share what's coming next

01:22:00.690 --> 01:22:02.929
<v Speaker 0>for the project, that would be fantastic.

01:22:04.210 --> 01:22:04.770
<v Speaker 0>So

01:22:05.410 --> 01:22:08.370
<v Speaker 0>my quick one minute summary then of Kubevious

01:22:08.370 --> 01:22:10.530
<v Speaker 0>is a tool that I could deploy to

01:22:10.530 --> 01:22:11.090
<v Speaker 0>my cluster.

01:22:11.704 --> 01:22:14.505
<v Speaker 0>We started off by exploring the browser. The

01:22:14.505 --> 01:22:17.385
<v Speaker 0>browser gave us a hierarchical view of all

01:22:17.385 --> 01:22:19.304
<v Speaker 0>of the resources within our cluster.

01:22:19.704 --> 01:22:22.105
<v Speaker 0>We started off with a high level summary,

01:22:22.105 --> 01:22:24.040
<v Speaker 0>and let's just say, let's see some of

01:22:24.040 --> 01:22:26.360
<v Speaker 0>the namespaces and stuff that you've got. And

01:22:26.360 --> 01:22:28.600
<v Speaker 0>then you provide some sort of a, I

01:22:28.600 --> 01:22:30.920
<v Speaker 0>don't know, monitoring observability thing where you can

01:22:30.920 --> 01:22:33.560
<v Speaker 0>actually see a breakdown of the top namespaces

01:22:33.560 --> 01:22:35.560
<v Speaker 0>and the issues as well, or the issues

01:22:35.560 --> 01:22:36.440
<v Speaker 0>within our namespace.

01:22:38.025 --> 01:22:39.945
<v Speaker 0>The logic allows us to break down our

01:22:39.945 --> 01:22:40.664
<v Speaker 0>cluster

01:22:40.745 --> 01:22:43.304
<v Speaker 0>by the types or kinds of resources that

01:22:43.304 --> 01:22:45.465
<v Speaker 0>we have, starting off by namespace and then

01:22:45.465 --> 01:22:46.985
<v Speaker 0>break it down into

01:22:47.465 --> 01:22:48.985
<v Speaker 0>I'm sure I could click that previously.

01:22:51.320 --> 01:22:53.399
<v Speaker 1>Yeah. Those are If there's no resources.

01:22:53.960 --> 01:22:55.159
<v Speaker 0>Yeah. So if you click on our next

01:22:55.159 --> 01:22:56.760
<v Speaker 0>issue, that gets a breakdown. You get to

01:22:56.760 --> 01:22:58.280
<v Speaker 0>take a look at the applications, and then

01:22:58.280 --> 01:23:00.199
<v Speaker 0>not just the applications, but the containers and

01:23:00.199 --> 01:23:02.199
<v Speaker 0>the volume to the service accounts, etcetera. So

01:23:02.199 --> 01:23:04.599
<v Speaker 0>really good ways to drill down and understand

01:23:04.599 --> 01:23:05.800
<v Speaker 0>what's running on your cluster.

01:23:06.415 --> 01:23:08.175
<v Speaker 0>The same happens for images,

01:23:08.495 --> 01:23:10.574
<v Speaker 0>for gateway and ingress, which unfortunately we can't

01:23:10.574 --> 01:23:12.255
<v Speaker 0>take a look at on my local one.

01:23:12.495 --> 01:23:14.415
<v Speaker 0>We also get a look at Helm repositories,

01:23:14.415 --> 01:23:16.735
<v Speaker 0>which is something which is actually quite difficult

01:23:16.735 --> 01:23:19.135
<v Speaker 0>to do normally. I don't have great visibility

01:23:19.135 --> 01:23:20.975
<v Speaker 0>into what Helm stuff is in my cluster,

01:23:20.975 --> 01:23:21.695
<v Speaker 0>so that's pretty nice.

01:23:22.450 --> 01:23:24.050
<v Speaker 0>And then the RBAC one, I think, is

01:23:24.050 --> 01:23:25.490
<v Speaker 0>the cherry on the top of this browser

01:23:25.490 --> 01:23:28.610
<v Speaker 0>mode. Like, understanding RBAC in any Kubernetes cluster

01:23:28.610 --> 01:23:29.489
<v Speaker 0>is always

01:23:29.890 --> 01:23:31.730
<v Speaker 0>it's it's always a huge challenge. And what

01:23:31.730 --> 01:23:33.810
<v Speaker 0>I really loved about this feature was the

01:23:33.810 --> 01:23:36.050
<v Speaker 0>shared symbol, the one that showed yeah. Here

01:23:36.050 --> 01:23:36.370
<v Speaker 0>we go.

01:23:37.155 --> 01:23:38.835
<v Speaker 0>This that this role

01:23:39.875 --> 01:23:42.275
<v Speaker 0>that role here, the Kubevious contact one, is

01:23:42.275 --> 01:23:43.235
<v Speaker 0>actually shared

01:23:43.475 --> 01:23:45.795
<v Speaker 0>across multiple service accounts, which is very, very

01:23:45.795 --> 01:23:46.355
<v Speaker 0>cool.

01:23:46.995 --> 01:23:48.675
<v Speaker 0>We now take a look at guard, which

01:23:48.675 --> 01:23:51.075
<v Speaker 0>is a tool that allows you to pass

01:23:51.075 --> 01:23:54.350
<v Speaker 0>a manifest to the Kubevious instance inside your

01:23:54.350 --> 01:23:56.430
<v Speaker 0>cluster and report on violators,

01:23:56.670 --> 01:23:58.750
<v Speaker 0>and the violators are all defined here. You

01:23:58.750 --> 01:24:00.750
<v Speaker 0>can disable them or set them up to

01:24:00.750 --> 01:24:02.190
<v Speaker 0>be warning or error.

01:24:02.670 --> 01:24:04.430
<v Speaker 0>The one thing we didn't cover is

01:24:04.915 --> 01:24:07.795
<v Speaker 0>can you add your own validators,

01:24:07.795 --> 01:24:10.114
<v Speaker 0>or is that something that's coming later?

01:24:11.235 --> 01:24:13.555
<v Speaker 1>Yes. If you wanna participate,

01:24:13.555 --> 01:24:15.075
<v Speaker 1>contribute to the project,

01:24:15.155 --> 01:24:15.955
<v Speaker 1>you can.

01:24:17.235 --> 01:24:17.715
<v Speaker 1>So

01:24:18.900 --> 01:24:20.260
<v Speaker 1>for a runtime

01:24:20.580 --> 01:24:23.140
<v Speaker 1>addition of web checks, it would the rules

01:24:23.140 --> 01:24:26.500
<v Speaker 1>would be used for my deeper integration of

01:24:26.500 --> 01:24:28.260
<v Speaker 1>checks, more sophisticated

01:24:28.260 --> 01:24:29.060
<v Speaker 1>ones.

01:24:29.540 --> 01:24:31.060
<v Speaker 1>They would have to go through the open

01:24:31.060 --> 01:24:31.940
<v Speaker 1>source realm.

01:24:32.340 --> 01:24:32.660
<v Speaker 0>Okay.

01:24:33.785 --> 01:24:36.425
<v Speaker 0>So these validators influence the browser and that

01:24:36.425 --> 01:24:38.425
<v Speaker 0>we can see all of the different

01:24:38.745 --> 01:24:41.385
<v Speaker 0>errors across all the different resources. On top

01:24:41.385 --> 01:24:43.145
<v Speaker 0>of the validators and errors, we have the

01:24:43.145 --> 01:24:45.305
<v Speaker 0>ability to write custom rules that can be

01:24:45.305 --> 01:24:48.265
<v Speaker 0>deployed to the cluster and scan in resources

01:24:48.265 --> 01:24:51.120
<v Speaker 0>for different violations. Here, we scanned for

01:24:51.360 --> 01:24:53.920
<v Speaker 0>a specific image that is being used in

01:24:53.920 --> 01:24:54.720
<v Speaker 0>the cluster,

01:24:55.120 --> 01:24:56.560
<v Speaker 0>and we have the option to set either

01:24:56.560 --> 01:24:58.560
<v Speaker 0>a warning on it, an error, or just

01:24:58.560 --> 01:25:00.880
<v Speaker 0>a marker. And markers are nice because you

01:25:00.880 --> 01:25:03.360
<v Speaker 0>get to pick cool logos and colors, which

01:25:03.545 --> 01:25:06.184
<v Speaker 0>just makes it all a lot more pleasing.

01:25:07.705 --> 01:25:09.705
<v Speaker 0>So that's that's Kubevious. And if an MS

01:25:09.705 --> 01:25:11.145
<v Speaker 0>that you wanna highlight before I ask you

01:25:11.145 --> 01:25:12.184
<v Speaker 0>what's coming next?

01:25:13.304 --> 01:25:15.945
<v Speaker 1>I think, yeah, that's a really awesome summary.

01:25:16.744 --> 01:25:18.985
<v Speaker 1>I would I would probably add that

01:25:19.650 --> 01:25:22.610
<v Speaker 1>next, we're gonna definitely fix the guard so

01:25:22.610 --> 01:25:23.890
<v Speaker 1>that it would

01:25:25.330 --> 01:25:27.090
<v Speaker 1>it would not allow those

01:25:28.130 --> 01:25:30.370
<v Speaker 1>violating changes from getting to the cluster.

01:25:31.505 --> 01:25:35.025
<v Speaker 1>Except for that, we wanna do more integration

01:25:35.025 --> 01:25:36.784
<v Speaker 1>with cloud native

01:25:37.264 --> 01:25:39.744
<v Speaker 1>ecosystem. So what I mean by that,

01:25:40.065 --> 01:25:41.505
<v Speaker 1>we didn't try

01:25:41.744 --> 01:25:45.425
<v Speaker 1>the the gateway. We didn't try addresses, but

01:25:44.770 --> 01:25:47.010
<v Speaker 1>there was a recent addition and integration with

01:25:47.010 --> 01:25:48.209
<v Speaker 1>traffic proxy.

01:25:48.290 --> 01:25:51.010
<v Speaker 1>So if you're a traffic user, Kubevious would

01:25:51.010 --> 01:25:53.809
<v Speaker 1>validate that, like, the namings of

01:25:54.369 --> 01:25:58.210
<v Speaker 1>middle layers, the TLS options, and things of

01:25:58.210 --> 01:25:59.810
<v Speaker 1>that sort that come with traffic.

01:26:00.364 --> 01:26:01.885
<v Speaker 1>And if there are any issues, it would

01:26:01.885 --> 01:26:04.045
<v Speaker 1>kind of not only render those

01:26:05.085 --> 01:26:08.045
<v Speaker 1>configuration in the gateway view, but also would

01:26:08.045 --> 01:26:11.324
<v Speaker 1>validate those. So we wanna include more support

01:26:11.324 --> 01:26:15.530
<v Speaker 1>for such highly highly rated, highly used popular

01:26:15.530 --> 01:26:17.050
<v Speaker 1>open source projects, like

01:26:17.690 --> 01:26:20.410
<v Speaker 1>probably it would be in the service mesh

01:26:20.410 --> 01:26:22.330
<v Speaker 1>and network policy enforcement.

01:26:22.810 --> 01:26:26.810
<v Speaker 1>So that's another area of of high interest

01:26:26.810 --> 01:26:27.770
<v Speaker 1>for Kubevious.

01:26:28.065 --> 01:26:30.625
<v Speaker 1>We wanna open up rules in

01:26:30.625 --> 01:26:33.585
<v Speaker 1>a form of rules library where people can

01:26:33.585 --> 01:26:37.505
<v Speaker 1>contribute to a public library and download rules

01:26:37.505 --> 01:26:39.665
<v Speaker 1>from the public library as well with some

01:26:39.665 --> 01:26:42.550
<v Speaker 1>sort of search engine instead of writing their

01:26:42.550 --> 01:26:44.310
<v Speaker 1>own rules manually.

01:26:44.630 --> 01:26:47.430
<v Speaker 1>And that's another area for the focus. I

01:26:47.430 --> 01:26:50.310
<v Speaker 1>would only add that, of course, we spent

01:26:50.310 --> 01:26:52.950
<v Speaker 1>very little bit of time on the types

01:26:52.950 --> 01:26:56.150
<v Speaker 1>of rules that we developed right here and

01:26:56.310 --> 01:26:56.790
<v Speaker 1>was

01:26:57.165 --> 01:26:59.965
<v Speaker 1>one of the most trivial ones that checked

01:26:59.965 --> 01:27:02.844
<v Speaker 1>checked one single or or just a couple

01:27:02.844 --> 01:27:03.324
<v Speaker 1>of

01:27:03.724 --> 01:27:05.564
<v Speaker 1>variables within the manifest.

01:27:05.724 --> 01:27:08.124
<v Speaker 1>I think the greatest power comes in when

01:27:08.284 --> 01:27:11.485
<v Speaker 1>you would start writing rules that would consider

01:27:12.460 --> 01:27:15.820
<v Speaker 1>charts that go across manifest. Let's say, I

01:27:15.820 --> 01:27:16.780
<v Speaker 1>wanna find

01:27:17.420 --> 01:27:18.300
<v Speaker 1>applications

01:27:18.300 --> 01:27:20.540
<v Speaker 1>that have the certain label

01:27:20.620 --> 01:27:23.580
<v Speaker 1>and that have certain permissions to my cluster

01:27:23.580 --> 01:27:26.700
<v Speaker 1>that have a read access to my secrets

01:27:26.445 --> 01:27:28.685
<v Speaker 1>or something from that sort. I think the

01:27:28.685 --> 01:27:30.685
<v Speaker 1>greatest power comes from

01:27:30.685 --> 01:27:31.244
<v Speaker 1>there.

01:27:32.445 --> 01:27:33.324
<v Speaker 0>Awesome.

01:27:33.324 --> 01:27:36.125
<v Speaker 0>Very, very cool. I'm

01:27:36.125 --> 01:27:37.564
<v Speaker 0>curious about Guard.

01:27:38.284 --> 01:27:40.525
<v Speaker 0>Is that something that you see

01:27:40.220 --> 01:27:41.580
<v Speaker 0>would become an

01:27:41.980 --> 01:27:44.380
<v Speaker 0>a validate in admission controller in the future

01:27:44.380 --> 01:27:46.940
<v Speaker 0>rather than a curl locally, or do you

01:27:46.940 --> 01:27:49.820
<v Speaker 0>think it's it's more advantageous to have it

01:27:49.820 --> 01:27:52.780
<v Speaker 0>blocking or given a warning at CICD? Or

01:27:52.780 --> 01:27:54.300
<v Speaker 0>maybe it's a combination of both. Like, how

01:27:54.300 --> 01:27:55.260
<v Speaker 0>do you see that playing out?

01:27:56.755 --> 01:27:59.235
<v Speaker 1>Because of limitations, it would have to be

01:27:59.235 --> 01:28:01.395
<v Speaker 1>a combination of both. Because

01:28:02.115 --> 01:28:03.715
<v Speaker 1>in the admission controller,

01:28:03.715 --> 01:28:06.195
<v Speaker 1>we can only validate one single manifest at

01:28:06.195 --> 01:28:08.355
<v Speaker 1>a time, and we don't have visibility to

01:28:08.355 --> 01:28:09.075
<v Speaker 1>other manifest.

01:28:09.880 --> 01:28:12.840
<v Speaker 0>Right. There is a limitation. So there are

01:28:12.840 --> 01:28:16.440
<v Speaker 1>some ideas to kind of detect whether the

01:28:16.440 --> 01:28:18.520
<v Speaker 1>rule spans across manifests,

01:28:18.520 --> 01:28:21.400
<v Speaker 1>then it would be have to be validated

01:28:21.400 --> 01:28:24.040
<v Speaker 1>from the Dart as a separate

01:28:23.605 --> 01:28:26.485
<v Speaker 1>CLI integration or something of that sort.

01:28:26.885 --> 01:28:29.044
<v Speaker 1>But the rules that are relatively

01:28:29.685 --> 01:28:32.485
<v Speaker 1>trivial, they're kind of self contained.

01:28:32.724 --> 01:28:34.724
<v Speaker 1>We would be able to do the validation

01:28:34.885 --> 01:28:38.370
<v Speaker 1>in the admission controller as well. So this

01:28:38.370 --> 01:28:41.010
<v Speaker 1>way, there would be three levels of validation

01:28:41.170 --> 01:28:43.090
<v Speaker 1>starting from the CLI

01:28:43.090 --> 01:28:44.450
<v Speaker 1>admission controller,

01:28:44.530 --> 01:28:45.810
<v Speaker 1>and there would be

01:28:46.130 --> 01:28:48.530
<v Speaker 1>continuous validation that is happening

01:28:49.010 --> 01:28:50.770
<v Speaker 1>right now that we've seen in the in

01:28:50.770 --> 01:28:53.515
<v Speaker 1>the UI as a final check, which would

01:28:53.515 --> 01:28:56.795
<v Speaker 1>be could be used as for auditing purposes

01:28:56.795 --> 01:28:58.074
<v Speaker 1>or forensics

01:28:58.315 --> 01:29:00.155
<v Speaker 1>or anything of that sort.

01:29:01.115 --> 01:29:01.675
<v Speaker 0>Awesome.

01:29:02.155 --> 01:29:04.715
<v Speaker 0>Well, this is a really cool project. I

01:29:04.190 --> 01:29:05.949
<v Speaker 0>wanna thank you for spending time with me

01:29:05.949 --> 01:29:07.790
<v Speaker 0>today and kinda sharing a little bit of

01:29:07.790 --> 01:29:09.790
<v Speaker 0>history and motivations

01:29:09.790 --> 01:29:11.310
<v Speaker 0>and having a kind of look at each

01:29:11.310 --> 01:29:12.909
<v Speaker 0>of the features that are available here.

01:29:13.230 --> 01:29:15.630
<v Speaker 0>I've gotta say, like, right off the bat,

01:29:15.630 --> 01:29:17.965
<v Speaker 0>the UI is is brilliant. I don't know

01:29:17.965 --> 01:29:19.725
<v Speaker 0>who you have on your front end team,

01:29:19.725 --> 01:29:21.885
<v Speaker 0>but cherish them and keep them forever because

01:29:21.885 --> 01:29:24.125
<v Speaker 0>it looks great. And and Yeah. That that

01:29:24.525 --> 01:29:26.525
<v Speaker 1>they're brilliant. Yeah. They're brilliant.

01:29:27.245 --> 01:29:29.885
<v Speaker 1>Thanks a lot, David. It was really fun

01:29:29.885 --> 01:29:31.645
<v Speaker 1>to

01:29:31.099 --> 01:29:32.219
<v Speaker 1>I spent

01:29:32.380 --> 01:29:34.619
<v Speaker 1>really fun two hours. It

01:29:34.860 --> 01:29:37.099
<v Speaker 1>was really cool to see you jumping

01:29:37.500 --> 01:29:40.300
<v Speaker 1>in and writing rules and debugging the issues.

01:29:40.460 --> 01:29:41.659
<v Speaker 1>Yeah. And

01:29:42.219 --> 01:29:43.900
<v Speaker 1>thanks a lot for your time. It was

01:29:43.900 --> 01:29:46.845
<v Speaker 1>really cool. Alright. Well, thank you again. Have

01:29:46.845 --> 01:29:48.605
<v Speaker 0>a wonderful weekend, and, hopefully, I'll speak to

01:29:48.605 --> 01:29:50.925
<v Speaker 0>you again soon. And to everyone watching Likewise.

01:29:50.925 --> 01:29:53.005
<v Speaker 0>Thanks a lot. Likewise. Take care. Ciao.
