WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 58d9239f-c83f-4803-b26a-5ce9db028ca3
Created: 2025-04-29T21:36:43.475Z
Duration: 2314.9932
Channels: 1

00:00:24.015 --> 00:00:27.855
<v Speaker 0>Hey, everyone. Welcome to our

00:00:26.670 --> 00:00:27.630
<v Speaker 0>newest

00:00:27.630 --> 00:00:29.070
<v Speaker 0>episode of

00:00:29.230 --> 00:00:31.710
<v Speaker 0>Metal Mondays where we're gonna get down and

00:00:31.710 --> 00:00:33.630
<v Speaker 0>dirty with the Equinix metal.

00:00:33.790 --> 00:00:36.030
<v Speaker 0>Today, we're gonna show you how to automate

00:00:36.430 --> 00:00:38.910
<v Speaker 0>your server deployments using

00:00:39.085 --> 00:00:40.765
<v Speaker 0>Terraform, Pulumi,

00:00:40.765 --> 00:00:42.285
<v Speaker 0>and Ansible.

00:00:42.524 --> 00:00:44.524
<v Speaker 0>We've got a couple of my good colleagues

00:00:44.524 --> 00:00:47.565
<v Speaker 0>here, David McKay and Jeremy Tanner, if y'all

00:00:47.565 --> 00:00:48.844
<v Speaker 0>wanna go on and join me.

00:00:49.725 --> 00:00:52.045
<v Speaker 0>Alright. And I think, McKay, you're gonna kick

00:00:52.045 --> 00:00:54.364
<v Speaker 0>us off with Terraform first. Right?

00:00:56.960 --> 00:00:58.800
<v Speaker 1>No. But I will kick us off with

00:00:58.800 --> 00:01:00.960
<v Speaker 1>Pulumi. Oh, cool. You're gonna kick us off

00:01:00.960 --> 00:01:02.960
<v Speaker 0>with Pulumi, then Jeremy's gonna come in with

00:01:02.960 --> 00:01:04.319
<v Speaker 0>Terraform. Alright.

00:01:05.600 --> 00:01:07.680
<v Speaker 1>Okay. Let me share my screen.

00:01:10.195 --> 00:01:12.115
<v Speaker 1>So we should now

00:01:12.435 --> 00:01:13.715
<v Speaker 1>see my terminal.

00:01:13.715 --> 00:01:16.995
<v Speaker 1>So I'm gonna start from absolutely nothing

00:01:17.635 --> 00:01:19.635
<v Speaker 1>and walk through the process of creating a

00:01:19.635 --> 00:01:21.075
<v Speaker 1>new Pulumi project.

00:01:21.075 --> 00:01:22.755
<v Speaker 1>There's a couple of choices of languages.

00:01:23.590 --> 00:01:25.909
<v Speaker 1>I'll see how brave I'm feeling and then

00:01:25.909 --> 00:01:29.110
<v Speaker 1>we'll try and add some bare metal servers

00:01:29.110 --> 00:01:31.110
<v Speaker 1>to the configurations, spin them up and see

00:01:31.110 --> 00:01:32.469
<v Speaker 1>what happens. So

00:01:33.110 --> 00:01:35.590
<v Speaker 1>we're gonna start with just running Pulumi new,

00:01:36.525 --> 00:01:39.005
<v Speaker 1>which is like an interactive,

00:01:39.485 --> 00:01:41.325
<v Speaker 1>you know, CLI that tries to give you

00:01:41.325 --> 00:01:42.845
<v Speaker 1>a hint about what you wanna do.

00:01:43.245 --> 00:01:44.685
<v Speaker 1>So I'm just gonna jump down to show

00:01:44.685 --> 00:01:47.565
<v Speaker 1>additional templates and you'll see down the bottom

00:01:48.045 --> 00:01:50.830
<v Speaker 1>when my cursor catches up. We have a

00:01:50.830 --> 00:01:52.430
<v Speaker 1>couple of packet ones that are available. Now

00:01:52.430 --> 00:01:54.750
<v Speaker 1>the provider hasn't been renamed to Equinix metal

00:01:54.750 --> 00:01:56.110
<v Speaker 1>but it is something that we're working with

00:01:56.110 --> 00:01:57.710
<v Speaker 1>the Pulumi team to rectify.

00:01:58.030 --> 00:01:59.229
<v Speaker 1>So you can see we could just go

00:01:59.229 --> 00:02:02.030
<v Speaker 1>JavaScript, Python or TypeScript. I quite like Type

00:02:01.725 --> 00:02:04.284
<v Speaker 1>Script. I like the really strong typing capabilities.

00:02:04.284 --> 00:02:05.645
<v Speaker 1>I think it makes the code a lot

00:02:05.645 --> 00:02:08.044
<v Speaker 1>cleaner. So I am gonna go with that

00:02:08.044 --> 00:02:09.245
<v Speaker 1>one today.

00:02:10.685 --> 00:02:12.525
<v Speaker 1>Now let's get that a slightly better name

00:02:12.525 --> 00:02:14.765
<v Speaker 1>than the temp directory that I'm in. So

00:02:14.765 --> 00:02:16.364
<v Speaker 1>we'll call this metal

00:02:16.960 --> 00:02:17.840
<v Speaker 1>Monday

00:02:18.640 --> 00:02:21.760
<v Speaker 1>and the default description is fine.

00:02:22.320 --> 00:02:24.080
<v Speaker 1>We don't need dev, let's go straight to

00:02:24.080 --> 00:02:24.880
<v Speaker 1>production.

00:02:27.840 --> 00:02:28.320
<v Speaker 1>No.

00:02:30.385 --> 00:02:32.705
<v Speaker 1>One thing is gonna fail because I'm an

00:02:32.705 --> 00:02:35.425
<v Speaker 1>idiot. So let's drop that out and what

00:02:35.425 --> 00:02:38.305
<v Speaker 1>I need to do is Pulumi login local.

00:02:39.505 --> 00:02:41.825
<v Speaker 1>So Pulumi, if you're familiar with Terraform and

00:02:41.825 --> 00:02:43.505
<v Speaker 1>other systems like this, they store their state

00:02:43.505 --> 00:02:44.705
<v Speaker 1>file in a remote location.

00:02:45.450 --> 00:02:47.850
<v Speaker 1>Pulumi was configured to store my state and

00:02:47.850 --> 00:02:49.770
<v Speaker 1>to a location which is currently blocked off

00:02:49.770 --> 00:02:51.770
<v Speaker 1>by a firewall, if not firewall, a VPN

00:02:51.770 --> 00:02:53.130
<v Speaker 1>and I'm not on the VPN.

00:02:53.210 --> 00:02:54.890
<v Speaker 1>So it was timing out.

00:02:54.970 --> 00:02:56.650
<v Speaker 1>So I'm just gonna start again.

00:02:58.010 --> 00:02:59.850
<v Speaker 1>And run through Pulumi new once more.

00:03:00.675 --> 00:03:02.755
<v Speaker 1>Why is the director not empty? There we

00:03:02.755 --> 00:03:03.235
<v Speaker 1>go.

00:03:04.195 --> 00:03:06.515
<v Speaker 1>So now I'm just using local state because

00:03:06.515 --> 00:03:08.195
<v Speaker 1>I don't actually wanna put it anywhere because

00:03:08.195 --> 00:03:10.035
<v Speaker 1>I'm not gonna persist this project.

00:03:10.915 --> 00:03:12.595
<v Speaker 1>We'll call this better Monday again.

00:03:15.280 --> 00:03:16.160
<v Speaker 1>Production

00:03:19.840 --> 00:03:20.880
<v Speaker 1>production

00:03:21.520 --> 00:03:22.400
<v Speaker 1>metal.

00:03:23.040 --> 00:03:24.960
<v Speaker 1>I've obviously done a demo similar to this

00:03:24.960 --> 00:03:27.360
<v Speaker 1>before. Now Pulumi is really cool

00:03:27.785 --> 00:03:30.825
<v Speaker 1>and that we can store our secrets

00:03:30.905 --> 00:03:32.265
<v Speaker 1>inside the

00:03:32.665 --> 00:03:34.825
<v Speaker 1>current project and they are encrypted with a

00:03:34.825 --> 00:03:36.025
<v Speaker 1>key and a salt.

00:03:36.985 --> 00:03:39.305
<v Speaker 1>Which means that you can have everything that

00:03:39.305 --> 00:03:40.345
<v Speaker 1>you need. You know, you don't need to

00:03:40.345 --> 00:03:42.265
<v Speaker 1>go to your CI server and configure environment

00:03:42.265 --> 00:03:44.160
<v Speaker 1>variables to pass in secret information. You can

00:03:44.160 --> 00:03:46.000
<v Speaker 1>store them in GET because they're secure. Now

00:03:46.000 --> 00:03:48.480
<v Speaker 1>I wouldn't recommend using the password protected approach

00:03:48.480 --> 00:03:49.760
<v Speaker 1>that I've just used here.

00:03:50.080 --> 00:03:52.080
<v Speaker 1>You can hook it up to KMS systems

00:03:52.080 --> 00:03:52.960
<v Speaker 1>in the cloud,

00:03:53.280 --> 00:03:55.760
<v Speaker 1>which is really nice including vault, which is

00:03:55.760 --> 00:03:56.880
<v Speaker 1>probably the preferred option.

00:03:58.535 --> 00:04:01.015
<v Speaker 1>So what does our Pulumi create? Let me

00:04:01.015 --> 00:04:02.455
<v Speaker 1>pull over code,

00:04:02.455 --> 00:04:03.975
<v Speaker 1>which went to the wrong window.

00:04:08.695 --> 00:04:09.655
<v Speaker 2>That size please.

00:04:11.310 --> 00:04:15.150
<v Speaker 1>Cool. So let's have a look. By default,

00:04:15.790 --> 00:04:17.149
<v Speaker 1>we get index

00:04:17.149 --> 00:04:18.110
<v Speaker 1>dot ts

00:04:18.510 --> 00:04:19.390
<v Speaker 1>which

00:04:19.709 --> 00:04:22.590
<v Speaker 1>is just a typescript file and it

00:04:22.990 --> 00:04:24.910
<v Speaker 1>essentially assumes that you wanna create a project

00:04:24.910 --> 00:04:25.470
<v Speaker 1>by default.

00:04:25.955 --> 00:04:28.435
<v Speaker 1>I'm gonna reuse a project so that we

00:04:28.435 --> 00:04:30.995
<v Speaker 1>can show how to inject arbitrary configuration enter

00:04:30.995 --> 00:04:33.155
<v Speaker 1>Pulumi and then just spin up a device.

00:04:33.155 --> 00:04:34.515
<v Speaker 1>So what I'm actually gonna do is just

00:04:34.515 --> 00:04:36.355
<v Speaker 1>remove this at first.

00:04:37.315 --> 00:04:39.155
<v Speaker 1>So now we wanna pass in some configuration.

00:04:39.390 --> 00:04:41.070
<v Speaker 1>Now to do that, we can do a

00:04:41.070 --> 00:04:44.270
<v Speaker 1>Pulumi config set and I can say project

00:04:44.430 --> 00:04:45.310
<v Speaker 1>ID

00:04:46.270 --> 00:04:47.950
<v Speaker 1>and it's gonna ask me for the value.

00:04:47.950 --> 00:04:50.830
<v Speaker 1>Now over my other window here, I do

00:04:50.830 --> 00:04:53.310
<v Speaker 1>have my project ID. Now this is not

00:04:53.310 --> 00:04:53.710
<v Speaker 1>secret.

00:04:54.445 --> 00:04:56.445
<v Speaker 1>So I'm gonna paste it straight in as

00:04:56.445 --> 00:04:59.005
<v Speaker 1>such. Now all it does is enter Pulumi

00:04:59.005 --> 00:05:00.445
<v Speaker 1>environment YAML,

00:05:00.605 --> 00:05:03.165
<v Speaker 1>store it here available so that can be

00:05:03.165 --> 00:05:05.085
<v Speaker 1>consumed within our TypeScript code.

00:05:05.805 --> 00:05:07.565
<v Speaker 1>Now I do want to add a secret.

00:05:07.565 --> 00:05:09.645
<v Speaker 1>I wanna be able to add our Pulumi

00:05:09.645 --> 00:05:12.680
<v Speaker 1>auth, our packet auth token.

00:05:14.440 --> 00:05:15.240
<v Speaker 1>So

00:05:15.319 --> 00:05:17.479
<v Speaker 1>now because this is secret, we add the

00:05:17.479 --> 00:05:19.080
<v Speaker 1>dash dash secret flag

00:05:19.639 --> 00:05:23.560
<v Speaker 1>and I should have one of them over

00:05:24.885 --> 00:05:25.765
<v Speaker 1>here.

00:05:28.405 --> 00:05:29.205
<v Speaker 1>Copy.

00:05:32.245 --> 00:05:34.485
<v Speaker 1>And now because this is a secret, has

00:05:34.485 --> 00:05:35.765
<v Speaker 1>to know how to encrypt it.

00:05:36.730 --> 00:05:38.890
<v Speaker 1>We just pass in our password.

00:05:39.450 --> 00:05:40.890
<v Speaker 1>And if we take a look at that,

00:05:40.890 --> 00:05:41.930
<v Speaker 1>you'll see that

00:05:42.330 --> 00:05:46.090
<v Speaker 1>without knowing what the decode encryption secret is,

00:05:46.570 --> 00:05:47.850
<v Speaker 1>that is just not available.

00:05:48.995 --> 00:05:50.275
<v Speaker 1>We do have a comment, so I'm gonna

00:05:50.275 --> 00:05:52.195
<v Speaker 1>drop that on the screen. Siam says, hi

00:05:52.195 --> 00:05:52.835
<v Speaker 1>Tom.

00:05:53.155 --> 00:05:56.115
<v Speaker 1>Thanks Siam. I feel fantastic. Hey Siam. Cheers

00:05:56.115 --> 00:05:57.155
<v Speaker 1>mate. Okay.

00:05:59.875 --> 00:06:00.035
<v Speaker 1>So

00:06:01.160 --> 00:06:03.320
<v Speaker 1>we've added one bit of configuration. We're passing

00:06:03.320 --> 00:06:04.760
<v Speaker 1>the project ID. We wanna be able to

00:06:04.760 --> 00:06:06.120
<v Speaker 1>consume that and spin up a new bare

00:06:06.120 --> 00:06:07.080
<v Speaker 1>metal server.

00:06:07.240 --> 00:06:09.000
<v Speaker 1>We have our off token which is encoded

00:06:09.000 --> 00:06:09.960
<v Speaker 1>or encrypted

00:06:10.200 --> 00:06:12.760
<v Speaker 1>with our secret that is specific to this

00:06:12.760 --> 00:06:15.720
<v Speaker 1>environment. I can add new environments, new stacks

00:06:15.585 --> 00:06:18.305
<v Speaker 1>as Pulumi calls them, dev staging, etcetera. They

00:06:18.305 --> 00:06:21.345
<v Speaker 1>all get a different secret encryption store.

00:06:21.824 --> 00:06:23.985
<v Speaker 1>Alright. Let's go back to in fact, here's

00:06:23.985 --> 00:06:25.425
<v Speaker 1>one of my pet peeves that is completely

00:06:25.425 --> 00:06:27.824
<v Speaker 1>not important to this episode but I'm gonna

00:06:27.824 --> 00:06:28.305
<v Speaker 1>do it anyway.

00:06:28.920 --> 00:06:30.920
<v Speaker 1>Is that I don't like code to just

00:06:30.920 --> 00:06:32.920
<v Speaker 1>live in in this arbitrary crappy top level

00:06:32.920 --> 00:06:34.840
<v Speaker 1>directory. I like it neatly tucked away inside

00:06:34.840 --> 00:06:36.040
<v Speaker 1>of a source directory

00:06:36.360 --> 00:06:39.000
<v Speaker 1>and we need to tell Pulumi

00:06:39.000 --> 00:06:41.000
<v Speaker 1>that our main has moved.

00:06:42.600 --> 00:06:44.040
<v Speaker 1>So we can just do that like that.

00:06:45.474 --> 00:06:48.115
<v Speaker 1>Okay. What else do we need? Let's come

00:06:48.115 --> 00:06:51.395
<v Speaker 1>back in here. So Pulumi API for Equinix

00:06:51.395 --> 00:06:52.115
<v Speaker 1>metal.

00:06:52.354 --> 00:06:52.755
<v Speaker 1>We

00:06:53.555 --> 00:06:56.275
<v Speaker 1>wanted to find some sort of server, so

00:06:56.275 --> 00:06:58.194
<v Speaker 1>I'm just gonna call this an NGINX server.

00:06:58.840 --> 00:07:00.760
<v Speaker 1>We have access to the Pulumi and because

00:07:00.760 --> 00:07:02.120
<v Speaker 1>this is real code,

00:07:02.440 --> 00:07:05.080
<v Speaker 1>know, whether you use TypeScript, JavaScript, Python,

00:07:05.400 --> 00:07:08.040
<v Speaker 1>Net or the goal SDK,

00:07:08.280 --> 00:07:10.840
<v Speaker 1>auto complete and language server protocol is available

00:07:10.840 --> 00:07:12.200
<v Speaker 1>for all of these language. And this is

00:07:12.200 --> 00:07:15.175
<v Speaker 1>one of my favorite things about writing infrastructures

00:07:15.175 --> 00:07:18.055
<v Speaker 1>code this way is that I can get

00:07:18.055 --> 00:07:19.255
<v Speaker 1>auto complete

00:07:21.255 --> 00:07:23.575
<v Speaker 1>not on Pulumi though, that would be clever.

00:07:23.655 --> 00:07:24.855
<v Speaker 1>So device,

00:07:25.655 --> 00:07:26.855
<v Speaker 1>now I need to give it a name,

00:07:26.855 --> 00:07:29.320
<v Speaker 1>so I'm just gonna replicate engine x server.

00:07:29.320 --> 00:07:31.240
<v Speaker 1>And then everything else that we need is

00:07:31.240 --> 00:07:33.000
<v Speaker 1>passed into a

00:07:33.160 --> 00:07:35.880
<v Speaker 1>key value pair, a map, dictionary, depending on

00:07:35.880 --> 00:07:37.000
<v Speaker 1>what language you're using.

00:07:37.480 --> 00:07:40.120
<v Speaker 1>Now the reason I choose TypeScript is because

00:07:40.120 --> 00:07:42.360
<v Speaker 1>it has actually got all of the type

00:07:42.360 --> 00:07:42.840
<v Speaker 1>information

00:07:43.245 --> 00:07:44.764
<v Speaker 1>as part of this. So when I do

00:07:44.764 --> 00:07:45.885
<v Speaker 1>auto complete,

00:07:46.604 --> 00:07:48.685
<v Speaker 1>he says as it fails miserably.

00:07:48.845 --> 00:07:51.405
<v Speaker 1>We should be able to get

00:07:52.685 --> 00:07:55.485
<v Speaker 1>nothing. Now that's because I missed a step,

00:07:55.805 --> 00:07:56.285
<v Speaker 1>I think.

00:07:58.040 --> 00:07:59.880
<v Speaker 1>Let's see what it's complaining about.

00:08:03.880 --> 00:08:04.840
<v Speaker 1>Host name.

00:08:06.600 --> 00:08:08.440
<v Speaker 1>Oh well, let's just keep going. So let's

00:08:08.440 --> 00:08:10.280
<v Speaker 1>give this a host name nginx

00:08:10.280 --> 00:08:10.680
<v Speaker 1>server.

00:08:11.615 --> 00:08:13.695
<v Speaker 1>And we have the red bad stuff, so

00:08:13.695 --> 00:08:16.335
<v Speaker 1>is it gonna tell me it's not callable.

00:08:16.495 --> 00:08:18.655
<v Speaker 1>Ah, that's why my auto complete is not

00:08:18.655 --> 00:08:20.495
<v Speaker 1>working. I have to instantiate

00:08:20.815 --> 00:08:22.095
<v Speaker 1>the class.

00:08:22.655 --> 00:08:24.975
<v Speaker 1>Okay. So now I should have auto complete

00:08:24.870 --> 00:08:27.350
<v Speaker 1>and I do, so we can say facilities,

00:08:27.350 --> 00:08:29.510
<v Speaker 1>where do we wanna spend this up? Let's

00:08:29.510 --> 00:08:30.710
<v Speaker 1>do AM

00:08:31.030 --> 00:08:31.750
<v Speaker 1>six,

00:08:32.070 --> 00:08:33.190
<v Speaker 1>if I could type.

00:08:33.429 --> 00:08:35.350
<v Speaker 1>We're gonna need to specify the plan, so

00:08:35.350 --> 00:08:36.390
<v Speaker 1>I'm gonna do a,

00:08:38.115 --> 00:08:40.834
<v Speaker 1>but it's guessing some of them, these this

00:08:40.834 --> 00:08:42.674
<v Speaker 1>auto complete list is not up to date

00:08:42.674 --> 00:08:44.675
<v Speaker 1>with all of the plans that are available.

00:08:44.675 --> 00:08:46.355
<v Speaker 1>So I'm just going to ignore

00:08:46.995 --> 00:08:48.755
<v Speaker 1>and pick one that I know is available

00:08:48.755 --> 00:08:49.634
<v Speaker 1>in this facility.

00:08:51.620 --> 00:08:54.100
<v Speaker 1>And is there any other required things? I

00:08:54.100 --> 00:08:57.300
<v Speaker 1>believe we need billing cycle of hourly.

00:08:58.900 --> 00:09:00.900
<v Speaker 1>We'll need operating system

00:09:01.140 --> 00:09:03.060
<v Speaker 1>and I'm gonna go with

00:09:04.695 --> 00:09:05.575
<v Speaker 1>Ubuntu.

00:09:05.575 --> 00:09:07.255
<v Speaker 1>Now I know 20 o four is available,

00:09:07.255 --> 00:09:08.695
<v Speaker 1>so I'm just gonna take it.

00:09:13.495 --> 00:09:13.975
<v Speaker 1>This

00:09:16.420 --> 00:09:17.940
<v Speaker 1>I think it's trying to tell me that

00:09:17.940 --> 00:09:20.100
<v Speaker 1>it's not aware of these options and I'm

00:09:20.100 --> 00:09:22.500
<v Speaker 1>gonna ignore it and see what happens.

00:09:22.820 --> 00:09:25.540
<v Speaker 1>The facility is complaining because

00:09:27.620 --> 00:09:29.459
<v Speaker 1>it wants a list of facilities.

00:09:31.355 --> 00:09:33.275
<v Speaker 1>And now it's telling me that that facility

00:09:33.275 --> 00:09:35.595
<v Speaker 1>doesn't exist, but again I think I know

00:09:35.595 --> 00:09:36.795
<v Speaker 1>better, hopefully.

00:09:36.955 --> 00:09:38.715
<v Speaker 1>Now I'm not actually sure if Pulumi is

00:09:38.715 --> 00:09:39.675
<v Speaker 1>gonna tell

00:09:39.835 --> 00:09:41.595
<v Speaker 1>me that it can't do that because

00:09:41.835 --> 00:09:43.435
<v Speaker 1>these aren't up to date, but we're gonna

00:09:43.435 --> 00:09:43.915
<v Speaker 1>find out.

00:09:45.709 --> 00:09:47.389
<v Speaker 1>Okay, what else do we need? Let's add

00:09:47.389 --> 00:09:48.910
<v Speaker 1>some arbitrary user data,

00:09:49.230 --> 00:09:51.389
<v Speaker 1>so we can just say echo hello.

00:09:52.269 --> 00:09:52.910
<v Speaker 1>And

00:09:54.910 --> 00:09:57.709
<v Speaker 1>it will need a shebang, otherwise the provisioning

00:09:57.709 --> 00:09:58.509
<v Speaker 1>will fail.

00:10:00.905 --> 00:10:02.345
<v Speaker 1>And we

00:10:02.345 --> 00:10:03.065
<v Speaker 1>can

00:10:03.545 --> 00:10:05.785
<v Speaker 1>very similar to something in terraform if you're

00:10:05.785 --> 00:10:07.785
<v Speaker 1>familiar with it has outputs. We can say

00:10:07.785 --> 00:10:09.545
<v Speaker 1>that we wish to export something and I

00:10:09.545 --> 00:10:12.425
<v Speaker 1>want to export the NGINX IP address.

00:10:12.905 --> 00:10:14.505
<v Speaker 1>And I can get that there on NGINX

00:10:14.505 --> 00:10:14.905
<v Speaker 1>server,

00:10:15.450 --> 00:10:18.330
<v Speaker 1>dot access public IP v four and that's

00:10:18.330 --> 00:10:20.010
<v Speaker 1>now a variable that is available to me

00:10:20.010 --> 00:10:22.650
<v Speaker 1>when I run Pulumi stack outputs.

00:10:23.450 --> 00:10:25.050
<v Speaker 1>That all makes sense to you both?

00:10:26.250 --> 00:10:26.810
<v Speaker 1>Yeah. Okay.

00:10:29.055 --> 00:10:29.775
<v Speaker 1>So

00:10:31.135 --> 00:10:32.015
<v Speaker 1>export.

00:10:32.575 --> 00:10:35.295
<v Speaker 1>I'm failing at TypeScript today, cons. That's better.

00:10:35.295 --> 00:10:35.695
<v Speaker 1>Okay.

00:10:36.175 --> 00:10:37.695
<v Speaker 1>So let's see if that runs.

00:10:39.615 --> 00:10:41.775
<v Speaker 1>We can run a Pulumi

00:10:42.095 --> 00:10:42.575
<v Speaker 1>preview.

00:10:44.980 --> 00:10:47.300
<v Speaker 1>We give it our decryption code

00:10:48.500 --> 00:10:50.100
<v Speaker 1>and we'll see how much it's gonna yell

00:10:50.100 --> 00:10:51.620
<v Speaker 1>at me. Okay. So

00:10:53.620 --> 00:10:55.220
<v Speaker 0>We got a little bit of feedback.

00:10:57.140 --> 00:10:59.940
<v Speaker 1>Yeah. So it's just telling me that my

00:10:59.075 --> 00:11:01.635
<v Speaker 1>string list is not assignable to an input

00:11:01.635 --> 00:11:02.915
<v Speaker 1>facility list.

00:11:03.635 --> 00:11:06.835
<v Speaker 1>Okay. So it's actually validating those types. So

00:11:06.835 --> 00:11:08.275
<v Speaker 1>I'll need to reach out to the Pulumi

00:11:08.275 --> 00:11:10.675
<v Speaker 1>people and see how we can improve that.

00:11:11.555 --> 00:11:13.635
<v Speaker 1>So for now, let's use ones that it's

00:11:13.635 --> 00:11:14.195
<v Speaker 1>happy with.

00:11:14.810 --> 00:11:16.410
<v Speaker 1>Let's

00:11:16.410 --> 00:11:18.490
<v Speaker 1>go with the c two medium

00:11:18.890 --> 00:11:21.210
<v Speaker 1>and we'll just drop this down to 18.

00:11:22.330 --> 00:11:23.930
<v Speaker 1>Woah, that's angered the beast.

00:11:27.995 --> 00:11:29.995
<v Speaker 1>Project ID, okay. So now we have to

00:11:29.995 --> 00:11:30.795
<v Speaker 1>consume

00:11:31.435 --> 00:11:32.875
<v Speaker 1>our project.

00:11:35.514 --> 00:11:37.194
<v Speaker 1>So just setting that makes it happy but

00:11:37.194 --> 00:11:38.634
<v Speaker 1>right now we have not actually got the

00:11:38.634 --> 00:11:40.315
<v Speaker 1>ability to inject this. So how does that

00:11:40.315 --> 00:11:42.590
<v Speaker 1>work in Pulumi? That is a great question

00:11:42.590 --> 00:11:44.190
<v Speaker 1>if I can remember. So we can do

00:11:44.190 --> 00:11:45.710
<v Speaker 1>a Pulumi equals

00:11:46.190 --> 00:11:47.310
<v Speaker 1>Pulumi

00:11:47.710 --> 00:11:48.910
<v Speaker 1>config.

00:11:51.470 --> 00:11:52.910
<v Speaker 1>So is it new?

00:11:53.790 --> 00:11:54.110
<v Speaker 1>Yes.

00:11:55.245 --> 00:11:58.045
<v Speaker 1>And then from here we can say require

00:11:58.045 --> 00:11:59.245
<v Speaker 1>and

00:11:59.245 --> 00:12:01.165
<v Speaker 1>we are gonna require it, so when you're

00:12:01.165 --> 00:12:02.845
<v Speaker 1>working with config in Pulumi, you have the

00:12:02.845 --> 00:12:04.925
<v Speaker 1>option of saying get which

00:12:05.485 --> 00:12:07.005
<v Speaker 1>will allow you to set some sort of

00:12:07.005 --> 00:12:08.925
<v Speaker 1>default value if it doesn't exist by setting

00:12:08.925 --> 00:12:10.890
<v Speaker 1>require I'm saying the stack will not be

00:12:10.890 --> 00:12:12.410
<v Speaker 1>able to spin up if this does not

00:12:12.410 --> 00:12:15.450
<v Speaker 1>exist and I can request project ID

00:12:15.530 --> 00:12:17.210
<v Speaker 1>and I'm not actually sure what happens if

00:12:17.210 --> 00:12:19.370
<v Speaker 1>that fails, so let's save this.

00:12:20.410 --> 00:12:21.850
<v Speaker 1>I didn't mean to close it

00:12:22.330 --> 00:12:24.250
<v Speaker 1>and run that again

00:12:26.005 --> 00:12:27.525
<v Speaker 1>because I've never done that before.

00:12:29.125 --> 00:12:32.085
<v Speaker 1>Yeah. Missing requires configuration. Awesome. So when I've

00:12:32.085 --> 00:12:33.685
<v Speaker 1>thought what happened, definitely.

00:12:33.845 --> 00:12:35.765
<v Speaker 1>So we fix that, we run preliminary preview

00:12:35.765 --> 00:12:38.165
<v Speaker 1>again and we give it our decryption password

00:12:38.910 --> 00:12:41.790
<v Speaker 1>and hopefully now it should tell us that

00:12:41.790 --> 00:12:44.029
<v Speaker 1>yeah. Right? We want to create a new

00:12:44.029 --> 00:12:46.190
<v Speaker 1>stack and we're gonna deploy some sort of

00:12:46.190 --> 00:12:47.470
<v Speaker 1>NGINX server.

00:12:48.589 --> 00:12:50.750
<v Speaker 1>So that is what

00:12:50.750 --> 00:12:53.230
<v Speaker 1>I'm expecting. That is is what I'm comfortable

00:12:53.230 --> 00:12:53.470
<v Speaker 1>with.

00:12:55.405 --> 00:12:57.245
<v Speaker 1>So we can move on

00:12:57.645 --> 00:13:00.685
<v Speaker 1>and instead of preview, we jump straight into

00:13:01.165 --> 00:13:03.885
<v Speaker 1>and Pulumi is a terraformer up. Pulumi

00:13:03.885 --> 00:13:06.605
<v Speaker 1>up. The language just changes slightly between the

00:13:06.605 --> 00:13:07.885
<v Speaker 1>two tools. They're very similar.

00:13:09.089 --> 00:13:11.170
<v Speaker 1>So now we just get one more confirmation.

00:13:11.170 --> 00:13:12.930
<v Speaker 1>Are you sure this is what you wanna

00:13:12.930 --> 00:13:13.570
<v Speaker 1>do?

00:13:13.810 --> 00:13:15.089
<v Speaker 1>Let's say yes.

00:13:17.250 --> 00:13:19.410
<v Speaker 1>And this is the the boarding bit. This

00:13:19.410 --> 00:13:20.290
<v Speaker 1>will take

00:13:20.610 --> 00:13:22.935
<v Speaker 1>a minute or two. So if there are

00:13:22.935 --> 00:13:25.495
<v Speaker 1>any questions, I'll take them from the team.

00:13:26.214 --> 00:13:27.975
<v Speaker 0>So does this update you on the process

00:13:27.975 --> 00:13:29.495
<v Speaker 0>like it would if you were

00:13:30.454 --> 00:13:32.375
<v Speaker 0>in the API or doing it from the

00:13:32.375 --> 00:13:32.935
<v Speaker 0>UI?

00:13:35.110 --> 00:13:36.390
<v Speaker 1>Yes. There is

00:13:37.110 --> 00:13:39.270
<v Speaker 1>is feedback being delivered to Pulumi.

00:13:39.670 --> 00:13:41.510
<v Speaker 1>It's not as we're not gonna get that

00:13:41.510 --> 00:13:43.670
<v Speaker 1>nice timeline view that we get from the

00:13:43.670 --> 00:13:44.950
<v Speaker 1>Equinix metal console.

00:13:46.455 --> 00:13:48.295
<v Speaker 1>But I don't see any reason why that

00:13:48.295 --> 00:13:50.295
<v Speaker 1>couldn't be relayed back. So Pulumi is actually

00:13:50.295 --> 00:13:52.055
<v Speaker 1>working on events that are happening within the

00:13:52.055 --> 00:13:54.455
<v Speaker 1>API. It could be requesting feedback on that

00:13:54.455 --> 00:13:56.455
<v Speaker 1>and it could display here. You see where

00:13:56.455 --> 00:13:58.455
<v Speaker 1>there's info here, it's already doing that to

00:13:58.455 --> 00:14:01.070
<v Speaker 1>a certain degree. I've got it obviously kind

00:14:01.070 --> 00:14:03.070
<v Speaker 1>of going off the screen, but we could

00:14:03.310 --> 00:14:05.310
<v Speaker 1>run that without a pager and probably see

00:14:05.310 --> 00:14:07.310
<v Speaker 1>it. So I think there's definitely potential to

00:14:07.310 --> 00:14:08.190
<v Speaker 1>improve it.

00:14:09.630 --> 00:14:11.230
<v Speaker 1>Yeah. But we just kinda need to wait

00:14:11.230 --> 00:14:13.230
<v Speaker 1>until it says it's happy for the time

00:14:13.230 --> 00:14:13.470
<v Speaker 1>being.

00:14:15.575 --> 00:14:17.015
<v Speaker 0>So now is the time you go make

00:14:17.015 --> 00:14:17.895
<v Speaker 0>the coffee,

00:14:18.695 --> 00:14:20.855
<v Speaker 0>look outside, that sort of thing? Well, it's

00:14:20.855 --> 00:14:22.375
<v Speaker 1>just one device. I'm hoping I don't need

00:14:22.375 --> 00:14:24.695
<v Speaker 1>to go get some coffee. But why don't

00:14:24.695 --> 00:14:27.095
<v Speaker 1>I open a

00:14:28.199 --> 00:14:30.600
<v Speaker 1>new tab and pull up the console and

00:14:30.600 --> 00:14:31.720
<v Speaker 1>see what happens?

00:14:34.279 --> 00:14:37.079
<v Speaker 1>So the the UI element that you're talking

00:14:37.079 --> 00:14:37.640
<v Speaker 1>about

00:14:38.600 --> 00:14:41.555
<v Speaker 1>is this little differ on it loads. I

00:14:41.555 --> 00:14:42.274
<v Speaker 1>want obviously

00:14:42.834 --> 00:14:44.115
<v Speaker 1>challenged today.

00:14:44.355 --> 00:14:47.394
<v Speaker 0>Which we covered in-depth last week. Right? Yeah.

00:14:47.394 --> 00:14:48.675
<v Speaker 1>We talked about it last week. So you

00:14:48.675 --> 00:14:49.954
<v Speaker 1>can see you got a nice timeline of

00:14:49.954 --> 00:14:51.394
<v Speaker 1>the events. Right now we're just waiting for

00:14:51.394 --> 00:14:52.675
<v Speaker 1>this device to reboot

00:14:52.995 --> 00:14:54.274
<v Speaker 1>Nice. Which actually started

00:14:54.560 --> 00:14:56.800
<v Speaker 1>you know, a moment ago. Once that comes

00:14:56.800 --> 00:14:58.800
<v Speaker 1>back online, it will dial home and say

00:14:58.800 --> 00:15:00.399
<v Speaker 1>hey, I'm back online and then we can

00:15:00.399 --> 00:15:02.480
<v Speaker 1>consider this device provisioned unavailable.

00:15:02.720 --> 00:15:04.080
<v Speaker 1>So we're not far away

00:15:04.320 --> 00:15:06.160
<v Speaker 1>from the Pulumi point of view, it doesn't

00:15:06.160 --> 00:15:08.480
<v Speaker 1>know that we're we're ready yet and that

00:15:08.480 --> 00:15:11.245
<v Speaker 1>would just be once this trickles through.

00:15:12.365 --> 00:15:13.884
<v Speaker 1>But you can see already just from this

00:15:13.884 --> 00:15:15.485
<v Speaker 1>UI like the host name is what we

00:15:15.485 --> 00:15:17.084
<v Speaker 1>asked it to be, we've got an IP

00:15:17.084 --> 00:15:19.324
<v Speaker 1>address which we'll confirm in a minute. We

00:15:19.324 --> 00:15:22.204
<v Speaker 1>are in the region that we specified, the

00:15:22.204 --> 00:15:24.845
<v Speaker 1>plan like you know, it's it's all very

00:15:25.380 --> 00:15:27.780
<v Speaker 1>almost trivial to a certain degree. Especially

00:15:28.180 --> 00:15:30.260
<v Speaker 1>having something like code or complete to help

00:15:30.260 --> 00:15:32.020
<v Speaker 1>you do it, which is pretty

00:15:32.260 --> 00:15:32.900
<v Speaker 1>useful.

00:15:34.500 --> 00:15:35.620
<v Speaker 0>And you can do a lot more with

00:15:35.620 --> 00:15:37.140
<v Speaker 0>Pulumi. Right? You can set up to do

00:15:37.140 --> 00:15:39.140
<v Speaker 0>multiple servers. You can do.

00:15:40.154 --> 00:15:43.035
<v Speaker 0>Right? That's an awesome point. Now because this

00:15:43.035 --> 00:15:45.435
<v Speaker 1>is just a programming language, right? There's actually

00:15:45.435 --> 00:15:47.995
<v Speaker 1>no reason why I can't do a really

00:15:48.315 --> 00:15:51.915
<v Speaker 1>awful imperative list of imperative for.

00:15:53.910 --> 00:15:55.589
<v Speaker 1>That's not what I want to. Alright, I'll

00:15:55.589 --> 00:15:57.430
<v Speaker 1>just type it manually. You know, there's no

00:15:57.430 --> 00:15:59.750
<v Speaker 1>reason we can't do, hey I equals zero,

00:15:59.750 --> 00:16:01.750
<v Speaker 1>I is less than or equal to six

00:16:01.750 --> 00:16:03.270
<v Speaker 1>and I plus plus

00:16:04.070 --> 00:16:05.990
<v Speaker 1>assuming I know how to defend

00:16:06.845 --> 00:16:08.365
<v Speaker 1>this stuff anymore.

00:16:13.245 --> 00:16:14.685
<v Speaker 1>I don't think I've ever done this still

00:16:14.685 --> 00:16:17.165
<v Speaker 1>for loop in a in a TypeScript before,

00:16:17.165 --> 00:16:18.125
<v Speaker 1>so maybe there's no.

00:16:22.820 --> 00:16:24.740
<v Speaker 1>It's a const, well that was silly of

00:16:24.740 --> 00:16:25.220
<v Speaker 1>me.

00:16:25.540 --> 00:16:26.820
<v Speaker 1>Okay. That's better.

00:16:27.060 --> 00:16:30.020
<v Speaker 1>So you know, I could actually encapsulate this

00:16:30.020 --> 00:16:31.620
<v Speaker 1>in a function. Right? So let's just say

00:16:31.620 --> 00:16:33.460
<v Speaker 1>that we know what an NGINX server looks

00:16:33.460 --> 00:16:37.060
<v Speaker 1>like and I can say const create

00:16:37.765 --> 00:16:39.205
<v Speaker 1>nginx server

00:16:39.525 --> 00:16:40.885
<v Speaker 1>equals a function

00:16:42.805 --> 00:16:44.405
<v Speaker 1>like

00:16:44.405 --> 00:16:45.045
<v Speaker 1>so.

00:16:47.205 --> 00:16:47.845
<v Speaker 1>Now

00:16:48.085 --> 00:16:49.205
<v Speaker 1>this will work.

00:16:52.930 --> 00:16:55.810
<v Speaker 1>Let's say create engine x server.

00:16:57.970 --> 00:17:00.290
<v Speaker 1>Only our exports not gonna work now, but

00:17:00.290 --> 00:17:02.370
<v Speaker 1>what we can do is just say,

00:17:04.210 --> 00:17:04.849
<v Speaker 1>yeah,

00:17:05.329 --> 00:17:06.049
<v Speaker 1>cost is fine.

00:17:06.845 --> 00:17:09.165
<v Speaker 1>Server equals and then we could export it

00:17:09.165 --> 00:17:12.365
<v Speaker 1>here. So export const nginx IP, although now

00:17:12.365 --> 00:17:14.125
<v Speaker 1>we're struck in a weird situation where we

00:17:14.125 --> 00:17:15.165
<v Speaker 1>cut multiples.

00:17:15.244 --> 00:17:15.804
<v Speaker 1>So

00:17:17.405 --> 00:17:18.845
<v Speaker 1>let's just do

00:17:20.180 --> 00:17:21.379
<v Speaker 1>as a list,

00:17:21.460 --> 00:17:23.460
<v Speaker 1>so NGINX IPs

00:17:23.859 --> 00:17:24.980
<v Speaker 1>looks like this.

00:17:25.859 --> 00:17:28.339
<v Speaker 1>And then we're just gonna add to this

00:17:29.700 --> 00:17:30.419
<v Speaker 1>push

00:17:31.300 --> 00:17:32.020
<v Speaker 1>server.

00:17:33.845 --> 00:17:36.485
<v Speaker 1>This is awful code. Please never talk to

00:17:36.485 --> 00:17:37.044
<v Speaker 1>this.

00:17:38.805 --> 00:17:40.325
<v Speaker 0>I did say it was I did say

00:17:40.325 --> 00:17:42.085
<v Speaker 0>it was we're getting dirty. So this is

00:17:42.165 --> 00:17:43.605
<v Speaker 0>you're living up to the promise that we

00:17:43.605 --> 00:17:45.765
<v Speaker 0>made at the beginning. I am. Okay. So

00:17:45.930 --> 00:17:47.610
<v Speaker 1>what I mean, let me, I'll show you

00:17:47.610 --> 00:17:49.690
<v Speaker 1>the stack output from the previous run before

00:17:49.690 --> 00:17:52.010
<v Speaker 1>I run this again. But you know, what

00:17:52.010 --> 00:17:53.770
<v Speaker 1>you can see here is that we've encapsulated

00:17:53.770 --> 00:17:55.690
<v Speaker 1>that logic into a function which we could

00:17:55.690 --> 00:17:57.530
<v Speaker 1>publish to MPM. We could just store in

00:17:57.530 --> 00:17:59.610
<v Speaker 1>another file. We could import to entities. Right?

00:17:59.610 --> 00:18:02.225
<v Speaker 1>We can we can really decouple and group

00:18:02.225 --> 00:18:03.905
<v Speaker 1>the specific parts of the code that we

00:18:03.905 --> 00:18:05.424
<v Speaker 1>need. Now the challenge here is that this

00:18:05.424 --> 00:18:07.345
<v Speaker 1>host name is not unique, so we could

00:18:07.345 --> 00:18:09.744
<v Speaker 1>accept a parameter. So we can say, hey,

00:18:10.065 --> 00:18:10.945
<v Speaker 1>take a

00:18:11.345 --> 00:18:13.905
<v Speaker 1>an I which is an how do you

00:18:13.905 --> 00:18:14.145
<v Speaker 1>do it?

00:18:16.120 --> 00:18:16.840
<v Speaker 1>Do do number.

00:18:18.840 --> 00:18:19.479
<v Speaker 0>And

00:18:21.480 --> 00:18:24.279
<v Speaker 1>here we can actually interpret this so we

00:18:24.279 --> 00:18:26.119
<v Speaker 1>could say this is

00:18:26.679 --> 00:18:28.600
<v Speaker 1>NGINX server

00:18:30.965 --> 00:18:31.684
<v Speaker 1>I

00:18:32.645 --> 00:18:34.485
<v Speaker 1>well then this is now telling me, hey,

00:18:34.485 --> 00:18:36.245
<v Speaker 1>you've got a problem here. Let's expect some

00:18:36.245 --> 00:18:38.325
<v Speaker 1>parameter and we can just pass an I.

00:18:38.325 --> 00:18:38.965
<v Speaker 1>So

00:18:39.125 --> 00:18:41.125
<v Speaker 1>now this is templated in a way that

00:18:41.125 --> 00:18:42.405
<v Speaker 1>it's actually gonna work.

00:18:44.529 --> 00:18:47.009
<v Speaker 1>Okay. So this have NGINX server one, two,

00:18:47.009 --> 00:18:49.409
<v Speaker 0>three, four from that then, right? Yeah. This

00:18:49.409 --> 00:18:51.730
<v Speaker 1>is gonna have NGINX 012345

00:18:51.730 --> 00:18:53.409
<v Speaker 1>just based on the way the loop is

00:18:53.409 --> 00:18:54.289
<v Speaker 1>configured.

00:18:54.289 --> 00:18:56.610
<v Speaker 1>Poorly configured. I will take credit or discredit

00:18:56.610 --> 00:18:57.784
<v Speaker 1>for that. But

00:18:58.505 --> 00:19:01.065
<v Speaker 1>our command did finish here, right? So Mhmm.

00:19:01.145 --> 00:19:03.145
<v Speaker 1>If we scroll up, you can actually see

00:19:03.145 --> 00:19:04.665
<v Speaker 1>we have our output, we have our IP

00:19:04.665 --> 00:19:06.665
<v Speaker 1>address, we've seen all these API calls being

00:19:06.665 --> 00:19:09.465
<v Speaker 1>made. I can run Pulumi stack output.

00:19:10.184 --> 00:19:12.265
<v Speaker 1>I can just request the engine x IP

00:19:13.430 --> 00:19:15.910
<v Speaker 1>And now that's a very scriptable output that

00:19:15.910 --> 00:19:17.670
<v Speaker 1>I can use in other automation that I

00:19:17.670 --> 00:19:18.230
<v Speaker 1>need.

00:19:18.630 --> 00:19:19.350
<v Speaker 1>However,

00:19:19.510 --> 00:19:20.950
<v Speaker 1>we did just make a whole bunch of

00:19:20.950 --> 00:19:23.110
<v Speaker 1>modifications. Now if I was smart, I would

00:19:23.110 --> 00:19:25.430
<v Speaker 1>have shown that the way the graph is

00:19:25.430 --> 00:19:26.309
<v Speaker 1>produced

00:19:26.470 --> 00:19:26.950
<v Speaker 1>here,

00:19:27.554 --> 00:19:29.234
<v Speaker 1>in fact let's just do that.

00:19:30.674 --> 00:19:31.794
<v Speaker 1>Yeah,

00:19:32.995 --> 00:19:34.274
<v Speaker 1>let's do this. Okay, so if I had

00:19:34.274 --> 00:19:35.634
<v Speaker 1>move to this first, right?

00:19:38.195 --> 00:19:39.955
<v Speaker 1>Just move this out of the loop. I'm

00:19:39.955 --> 00:19:41.315
<v Speaker 1>gonna bring the loop back, but I wanna

00:19:41.315 --> 00:19:42.434
<v Speaker 1>show something first.

00:19:42.990 --> 00:19:44.990
<v Speaker 1>So while a lot of code has changed

00:19:44.990 --> 00:19:45.549
<v Speaker 1>here,

00:19:45.790 --> 00:19:48.269
<v Speaker 1>the output, the graph that is generated

00:19:48.350 --> 00:19:49.230
<v Speaker 1>hasn't.

00:19:50.510 --> 00:19:52.910
<v Speaker 1>So I'm saying I'm not talking about my

00:19:52.910 --> 00:19:54.909
<v Speaker 1>arse here. When I run Pulumi preview,

00:19:55.470 --> 00:19:57.070
<v Speaker 1>it should tell us that nothing needs done.

00:20:01.225 --> 00:20:02.664
<v Speaker 1>To that. Right?

00:20:02.904 --> 00:20:04.744
<v Speaker 1>We've changed a whole lot of code,

00:20:04.985 --> 00:20:06.904
<v Speaker 1>but we were refactoring, we were cleaning up

00:20:06.904 --> 00:20:08.984
<v Speaker 1>that code. We haven't actually changed

00:20:09.065 --> 00:20:10.745
<v Speaker 1>any of the output. We haven't requested new

00:20:10.745 --> 00:20:12.990
<v Speaker 1>machines. We haven't changed their name. So in

00:20:12.990 --> 00:20:14.750
<v Speaker 1>fact, let's put this back

00:20:15.310 --> 00:20:17.150
<v Speaker 1>and what I've actually realized as well while

00:20:17.150 --> 00:20:18.830
<v Speaker 1>I'm kind of running through this horrible horrible

00:20:18.830 --> 00:20:19.470
<v Speaker 1>code

00:20:19.630 --> 00:20:21.150
<v Speaker 1>is that we're actually gonna end up with

00:20:21.150 --> 00:20:23.230
<v Speaker 1>a conflict with this version too.

00:20:23.310 --> 00:20:24.910
<v Speaker 1>Right? Even if I add in the host

00:20:24.910 --> 00:20:26.510
<v Speaker 1>name is gonna be different and I'm gonna

00:20:26.510 --> 00:20:28.875
<v Speaker 1>use this I variable and what we never

00:20:28.875 --> 00:20:31.915
<v Speaker 1>actually templated was the resource name itself.

00:20:32.635 --> 00:20:34.475
<v Speaker 1>So if I try and run a preview

00:20:34.475 --> 00:20:36.955
<v Speaker 1>now, it should hopefully fail

00:20:38.395 --> 00:20:40.395
<v Speaker 1>trying to create six devices with the same

00:20:40.395 --> 00:20:43.035
<v Speaker 1>ID or URN as Pulumi calls it, unique

00:20:43.035 --> 00:20:43.755
<v Speaker 1>resource

00:20:45.930 --> 00:20:46.650
<v Speaker 1>thing.

00:20:47.530 --> 00:20:49.530
<v Speaker 1>So we've got duplicate resource.

00:20:50.010 --> 00:20:51.290
<v Speaker 1>So what we can do is just template

00:20:51.290 --> 00:20:54.170
<v Speaker 1>this too. Alright? So NGINX server and we

00:20:54.170 --> 00:20:55.610
<v Speaker 1>just do the exact same

00:20:57.145 --> 00:20:58.665
<v Speaker 1>and we'll call this I.

00:20:59.385 --> 00:21:00.105
<v Speaker 1>Now,

00:21:00.745 --> 00:21:02.345
<v Speaker 1>things have definitely changed.

00:21:02.825 --> 00:21:03.465
<v Speaker 1>So

00:21:03.785 --> 00:21:05.945
<v Speaker 1>we run preview, Pulumi preview,

00:21:06.425 --> 00:21:07.945
<v Speaker 1>we enter our code

00:21:10.200 --> 00:21:11.960
<v Speaker 1>and you can see it's gonna remove this

00:21:11.960 --> 00:21:14.680
<v Speaker 1>old one because all the information changed.

00:21:14.840 --> 00:21:17.560
<v Speaker 1>But now we're gonna create NGINX server 031.

00:21:17.560 --> 00:21:18.920
<v Speaker 1>I don't know why that's not an order.

00:21:18.920 --> 00:21:21.175
<v Speaker 1>There's a lot of asynchronous code happening in

00:21:21.175 --> 00:21:22.855
<v Speaker 1>the Pulumi provider here, so I guess that's

00:21:22.855 --> 00:21:23.815
<v Speaker 1>to be expected.

00:21:24.295 --> 00:21:25.655
<v Speaker 1>But that's just gonna work. So now we

00:21:25.655 --> 00:21:27.015
<v Speaker 1>can run Pulumi up,

00:21:27.335 --> 00:21:29.415
<v Speaker 1>we let it go and it does its

00:21:29.415 --> 00:21:29.975
<v Speaker 1>thing.

00:21:31.975 --> 00:21:33.495
<v Speaker 1>So it's gonna shut down the old one.

00:21:33.495 --> 00:21:34.855
<v Speaker 1>In fact, if we pull up a terminal

00:21:34.855 --> 00:21:35.175
<v Speaker 1>here,

00:21:35.910 --> 00:21:38.230
<v Speaker 1>it's already it's already reloading before I hit

00:21:38.230 --> 00:21:38.950
<v Speaker 1>refresh.

00:21:39.750 --> 00:21:41.110
<v Speaker 1>But you can see,

00:21:41.430 --> 00:21:42.390
<v Speaker 1>there we go.

00:21:43.590 --> 00:21:44.790
<v Speaker 1>And because

00:21:45.110 --> 00:21:46.630
<v Speaker 1>of the it's it's trying to do this

00:21:46.630 --> 00:21:48.470
<v Speaker 1>in a safe fashion, it's spinning up our

00:21:48.470 --> 00:21:50.710
<v Speaker 1>new servers before killing our old servers.

00:21:52.105 --> 00:21:52.664
<v Speaker 1>So

00:21:52.905 --> 00:21:56.504
<v Speaker 1>that's why we're getting NGINX 0123456.

00:21:56.505 --> 00:21:57.945
<v Speaker 1>And this one will go away when the

00:21:57.945 --> 00:21:59.144
<v Speaker 1>rest are happy.

00:22:00.265 --> 00:22:01.304
<v Speaker 1>Does that all make sense?

00:22:05.300 --> 00:22:06.580
<v Speaker 0>Yes. It was a bit

00:22:07.300 --> 00:22:08.980
<v Speaker 0>it's a very interesting way that we got

00:22:08.980 --> 00:22:09.539
<v Speaker 0>there.

00:22:10.420 --> 00:22:12.500
<v Speaker 1>Yeah. Like I said, I mean, this is

00:22:12.500 --> 00:22:14.420
<v Speaker 1>not code that you'd want to show your

00:22:14.420 --> 00:22:15.299
<v Speaker 1>mother-in-law,

00:22:15.460 --> 00:22:16.100
<v Speaker 1>but

00:22:16.625 --> 00:22:19.185
<v Speaker 1>it's functional. We cleaned it up. We created

00:22:19.185 --> 00:22:21.505
<v Speaker 1>a we created a function we can reuse.

00:22:21.505 --> 00:22:22.945
<v Speaker 1>We encapsulated logic.

00:22:23.185 --> 00:22:24.545
<v Speaker 1>We are doing a lot of nice things

00:22:24.545 --> 00:22:27.025
<v Speaker 1>here until this imperative style forward with the

00:22:27.025 --> 00:22:29.680
<v Speaker 1>crazy bad stuff but that was just purely

00:22:29.680 --> 00:22:31.600
<v Speaker 1>to prove a point. So it's a really

00:22:31.600 --> 00:22:34.160
<v Speaker 1>awesome tool working with Equinix metals fantastic. We

00:22:34.160 --> 00:22:35.680
<v Speaker 1>are working with the Pulumi team to get

00:22:35.680 --> 00:22:37.039
<v Speaker 1>that provider renamed

00:22:37.040 --> 00:22:39.360
<v Speaker 1>and we will definitely be pushing to get

00:22:39.360 --> 00:22:41.600
<v Speaker 1>that auto complete the facilities and all that

00:22:41.914 --> 00:22:44.235
<v Speaker 1>upgraded with our our more modern hardware. So

00:22:44.235 --> 00:22:46.634
<v Speaker 1>we are looking into that. But that's it.

00:22:47.434 --> 00:22:49.274
<v Speaker 1>So who who am I handing over to?

00:22:49.274 --> 00:22:50.955
<v Speaker 1>Who is next? I mean, you just want

00:22:50.955 --> 00:22:53.195
<v Speaker 1>to wait and see the goodies spin up,

00:22:53.195 --> 00:22:55.434
<v Speaker 1>but I don't think that is particularly necessary.

00:22:55.434 --> 00:22:55.674
<v Speaker 1>Right?

00:23:00.400 --> 00:23:02.880
<v Speaker 1>Okay. So I guess we're also gonna be

00:23:02.880 --> 00:23:04.320
<v Speaker 1>taking a look at a very similar tool

00:23:04.320 --> 00:23:05.360
<v Speaker 1>to Bulumi.

00:23:05.440 --> 00:23:07.200
<v Speaker 1>Terraform. Is that right?

00:23:07.840 --> 00:23:08.799
<v Speaker 1>Yeah. So

00:23:09.920 --> 00:23:12.160
<v Speaker 2>I think it will work much in the

00:23:12.845 --> 00:23:14.445
<v Speaker 2>much in the same way.

00:23:15.165 --> 00:23:18.365
<v Speaker 2>Let's do a screen share here. Share screen.

00:23:21.165 --> 00:23:22.684
<v Speaker 2>Gotta show my tips.

00:23:22.845 --> 00:23:24.924
<v Speaker 2>Look at application window.

00:23:25.885 --> 00:23:26.845
<v Speaker 2>Share that one.

00:23:27.650 --> 00:23:30.289
<v Speaker 2>Alright. Let me just pop that in.

00:23:31.169 --> 00:23:31.729
<v Speaker 1>Okay.

00:23:33.490 --> 00:23:35.409
<v Speaker 2>So much in the same way, you're going

00:23:35.409 --> 00:23:37.250
<v Speaker 2>to be working with configuration

00:23:37.250 --> 00:23:38.049
<v Speaker 2>files.

00:23:38.929 --> 00:23:41.169
<v Speaker 2>And the one in

00:23:41.535 --> 00:23:44.174
<v Speaker 2>the metal Monday directory here is called

00:23:44.335 --> 00:23:46.174
<v Speaker 2>main dot terraform.

00:23:49.215 --> 00:23:50.655
<v Speaker 2>Let's see what's in there.

00:23:51.215 --> 00:23:53.375
<v Speaker 2>And so we're going to start with

00:23:55.159 --> 00:23:57.640
<v Speaker 2>naming the provider. We're going to use Packet

00:23:57.640 --> 00:24:00.600
<v Speaker 2>because at Equinix Metal, we are the artist

00:24:00.600 --> 00:24:02.039
<v Speaker 2>formerly known as Packet.

00:24:02.360 --> 00:24:04.840
<v Speaker 2>We're working on changing those names over for

00:24:07.640 --> 00:24:11.475
<v Speaker 2>but, for for now, still still Packet. Remember

00:24:11.475 --> 00:24:12.195
<v Speaker 2>the old.

00:24:12.595 --> 00:24:14.835
<v Speaker 2>There's plenty of ways that you can bring

00:24:14.835 --> 00:24:17.635
<v Speaker 2>in your API key or your auth token.

00:24:17.635 --> 00:24:20.755
<v Speaker 2>It's as it's named here. In this case,

00:24:20.755 --> 00:24:23.315
<v Speaker 2>it's already baked into my environment,

00:24:23.395 --> 00:24:25.210
<v Speaker 2>but you can put it in a tear

00:24:25.370 --> 00:24:27.769
<v Speaker 2>a separate Terraform configuration file,

00:24:28.169 --> 00:24:30.409
<v Speaker 2>and there's a handful of ways to to

00:24:30.809 --> 00:24:31.850
<v Speaker 2>bring that in.

00:24:32.410 --> 00:24:35.690
<v Speaker 2>This, this project ID is important because in,

00:24:35.929 --> 00:24:38.249
<v Speaker 2>Equinix Metal, resources

00:24:38.250 --> 00:24:39.530
<v Speaker 2>need to belong to projects.

00:24:40.315 --> 00:24:42.475
<v Speaker 2>And then we're going to do much as

00:24:42.475 --> 00:24:44.635
<v Speaker 2>we saw in the Pulumi version,

00:24:45.835 --> 00:24:47.995
<v Speaker 2>set up some configuration for what we're trying

00:24:47.995 --> 00:24:49.915
<v Speaker 2>to make. And so in this case, I'm

00:24:49.915 --> 00:24:53.195
<v Speaker 2>going to look to bring up five devices.

00:24:54.075 --> 00:24:54.635
<v Speaker 2>And

00:24:55.340 --> 00:24:57.100
<v Speaker 2>so I have a I have accounts set

00:24:57.100 --> 00:24:57.980
<v Speaker 2>to five here.

00:24:58.460 --> 00:25:00.940
<v Speaker 2>The host name of the machines, I want

00:25:00.940 --> 00:25:03.260
<v Speaker 2>to be Terraform Metal Monday,

00:25:03.500 --> 00:25:06.300
<v Speaker 2>and then just a bit of formatting.

00:25:06.300 --> 00:25:08.460
<v Speaker 2>This count index is going to

00:25:08.860 --> 00:25:10.620
<v Speaker 2>count upwards and

00:25:11.245 --> 00:25:13.005
<v Speaker 2>name the host names for each of my

00:25:13.005 --> 00:25:14.044
<v Speaker 2>five machines.

00:25:15.085 --> 00:25:16.845
<v Speaker 2>Percent percent 02G

00:25:16.845 --> 00:25:19.725
<v Speaker 2>here means I'd like a leading zero on

00:25:19.725 --> 00:25:21.485
<v Speaker 2>there. So there'll be 01,

00:25:21.485 --> 00:25:22.924
<v Speaker 2>0 2, and 03,

00:25:23.085 --> 00:25:23.725
<v Speaker 2>and so on.

00:25:24.980 --> 00:25:26.420
<v Speaker 2>Describe the plan

00:25:26.420 --> 00:25:28.660
<v Speaker 2>as the smallest you can find. I think

00:25:28.660 --> 00:25:31.060
<v Speaker 2>we're gonna be about 50¢ an hour at

00:25:31.060 --> 00:25:32.100
<v Speaker 2>this at

00:25:32.100 --> 00:25:32.820
<v Speaker 2>this point.

00:25:33.700 --> 00:25:35.540
<v Speaker 2>Put them in Dallas Fort Worth

00:25:36.260 --> 00:25:37.140
<v Speaker 2>location,

00:25:37.460 --> 00:25:38.180
<v Speaker 2>though

00:25:38.554 --> 00:25:40.635
<v Speaker 2>that's an easy enough one to replace with

00:25:40.635 --> 00:25:43.515
<v Speaker 2>any, and then it will drop those anywhere

00:25:43.515 --> 00:25:45.754
<v Speaker 2>where it finds the machines first.

00:25:46.075 --> 00:25:47.674
<v Speaker 2>We'll put Ubuntu on them,

00:25:49.434 --> 00:25:51.355
<v Speaker 2>and the project ID will be the project

00:25:51.355 --> 00:25:52.635
<v Speaker 2>ID that we've already defined.

00:25:53.490 --> 00:25:55.330
<v Speaker 2>Throw some tags on there so they can

00:25:55.330 --> 00:25:56.210
<v Speaker 2>be described.

00:25:56.690 --> 00:25:58.290
<v Speaker 2>Red shirt because those are the ones that

00:25:58.290 --> 00:26:00.610
<v Speaker 2>can easily die. We're not worried about them.

00:26:00.610 --> 00:26:03.090
<v Speaker 2>They'll land on the planet first and disappear

00:26:03.650 --> 00:26:06.370
<v Speaker 2>to show the situation is serious. Test

00:26:06.370 --> 00:26:07.890
<v Speaker 2>metal Monday in Terraform.

00:26:08.434 --> 00:26:09.875
<v Speaker 2>And so the first thing I'm going to

00:26:09.875 --> 00:26:12.115
<v Speaker 2>wanna do is initialize Terraform.

00:26:13.955 --> 00:26:15.554
<v Speaker 2>That's Terraform

00:26:16.595 --> 00:26:17.475
<v Speaker 2>in it,

00:26:18.195 --> 00:26:18.914
<v Speaker 2>and

00:26:18.995 --> 00:26:20.274
<v Speaker 2>we have a problem.

00:26:20.995 --> 00:26:23.475
<v Speaker 2>Latest version of Hashtag Cricket failed to install

00:26:23.475 --> 00:26:25.450
<v Speaker 2>the provider. And so it looks like it

00:26:25.450 --> 00:26:28.570
<v Speaker 2>wants me to upgrade to version point 13

00:26:28.570 --> 00:26:30.009
<v Speaker 2>from point 12.

00:26:31.450 --> 00:26:32.570
<v Speaker 2>We'll do that.

00:26:35.370 --> 00:26:36.650
<v Speaker 2>Say yes to continue.

00:26:38.635 --> 00:26:40.715
<v Speaker 2>And now it has added the

00:26:44.555 --> 00:26:47.115
<v Speaker 2>additional information onto the top of

00:26:48.235 --> 00:26:50.155
<v Speaker 2>the file. And so what it was looking

00:26:50.155 --> 00:26:51.275
<v Speaker 2>for was this.

00:26:52.600 --> 00:26:55.399
<v Speaker 2>I wanted it to be called have required

00:26:55.399 --> 00:26:58.120
<v Speaker 2>versioning here and packet host slash packet. And

00:26:58.120 --> 00:27:00.360
<v Speaker 2>so that versions file will now run on

00:27:00.360 --> 00:27:03.320
<v Speaker 2>top of the configuration file that we already

00:27:03.320 --> 00:27:04.200
<v Speaker 2>had existing.

00:27:04.600 --> 00:27:06.679
<v Speaker 2>If I say Terraform init again,

00:27:08.275 --> 00:27:10.355
<v Speaker 2>it will go ahead and do it. It'll

00:27:10.355 --> 00:27:12.915
<v Speaker 2>install the provider, which is how Terraform

00:27:12.915 --> 00:27:14.275
<v Speaker 2>then talks to the

00:27:14.515 --> 00:27:16.195
<v Speaker 2>Equinix metal API,

00:27:16.675 --> 00:27:18.275
<v Speaker 2>and it looks like we're good there.

00:27:19.800 --> 00:27:23.000
<v Speaker 2>To take in, we're going to run Terraform

00:27:23.000 --> 00:27:26.280
<v Speaker 2>plan. That's going to describe the describe what

00:27:26.280 --> 00:27:27.960
<v Speaker 2>it's going to then ask the API to

00:27:27.960 --> 00:27:28.440
<v Speaker 2>do.

00:27:30.440 --> 00:27:31.240
<v Speaker 2>Terraform

00:27:31.240 --> 00:27:32.040
<v Speaker 2>plan.

00:27:34.075 --> 00:27:36.795
<v Speaker 2>And from there, it says five things to

00:27:36.795 --> 00:27:37.835
<v Speaker 2>add. And so

00:27:38.235 --> 00:27:40.315
<v Speaker 2>we'll scroll back up here and look. So

00:27:41.755 --> 00:27:43.434
<v Speaker 2>device Monday will be created.

00:27:43.595 --> 00:27:45.275
<v Speaker 2>We don't know the IP yet because it's

00:27:45.275 --> 00:27:46.155
<v Speaker 2>not been assigned one.

00:27:46.740 --> 00:27:48.659
<v Speaker 2>It'll be in Dallas Fort Worth.

00:27:48.980 --> 00:27:52.100
<v Speaker 2>It'll be called Terraform Metal Monday double zero.

00:27:52.740 --> 00:27:55.540
<v Speaker 2>All the same information. There'll be 2001,

00:27:55.540 --> 00:27:57.700
<v Speaker 2>zero '2, zero '3, and 2004 because the

00:27:57.700 --> 00:27:58.980
<v Speaker 2>list is zero indexed.

00:28:00.385 --> 00:28:02.225
<v Speaker 2>I think we can go ahead and

00:28:03.905 --> 00:28:05.505
<v Speaker 2>give that a try

00:28:06.065 --> 00:28:07.424
<v Speaker 2>and say apply.

00:28:07.745 --> 00:28:09.424
<v Speaker 2>It'll look for confirmation.

00:28:10.625 --> 00:28:12.065
<v Speaker 2>And then for those

00:28:12.705 --> 00:28:13.825
<v Speaker 2>for those machines,

00:28:15.330 --> 00:28:16.289
<v Speaker 2>it will

00:28:16.610 --> 00:28:19.409
<v Speaker 2>go ahead, talk to the API,

00:28:19.490 --> 00:28:21.169
<v Speaker 2>and attempt to

00:28:21.570 --> 00:28:23.970
<v Speaker 2>make them. And I think at this point,

00:28:23.970 --> 00:28:26.289
<v Speaker 2>I'm going to jump over to

00:28:29.105 --> 00:28:30.545
<v Speaker 2>screen application

00:28:30.545 --> 00:28:31.505
<v Speaker 2>window.

00:28:35.185 --> 00:28:37.505
<v Speaker 2>Does that have to so, yeah, jump over

00:28:37.505 --> 00:28:38.385
<v Speaker 2>into the

00:28:38.705 --> 00:28:40.625
<v Speaker 2>jump over to the dashboard where you can

00:28:40.625 --> 00:28:42.065
<v Speaker 2>see each of those

00:28:43.430 --> 00:28:44.870
<v Speaker 2>each of those machines

00:28:46.310 --> 00:28:48.790
<v Speaker 2>coming up, and it looks like their configuration's

00:28:48.790 --> 00:28:51.669
<v Speaker 2>being written. And then they'll step down through

00:28:52.630 --> 00:28:54.950
<v Speaker 2>match install system and the rest of the

00:28:54.950 --> 00:28:55.590
<v Speaker 2>other

00:28:56.470 --> 00:28:58.150
<v Speaker 2>the rest of the other 11

00:28:58.925 --> 00:29:00.605
<v Speaker 2>the other 11 steps.

00:29:07.245 --> 00:29:09.405
<v Speaker 2>And so in lieu of sitting here and

00:29:09.405 --> 00:29:10.525
<v Speaker 2>waiting for this for

00:29:11.610 --> 00:29:13.610
<v Speaker 2>waiting for this wait. We're gonna wait. We're

00:29:13.610 --> 00:29:14.330
<v Speaker 2>gonna wait and let

00:29:16.810 --> 00:29:18.970
<v Speaker 2>I was going to going to pass to

00:29:18.970 --> 00:29:21.610
<v Speaker 2>pass to Tom and then and then come

00:29:21.610 --> 00:29:23.850
<v Speaker 2>back once they're once they're up and show

00:29:24.285 --> 00:29:26.845
<v Speaker 2>some of the ways that Terraform can then

00:29:27.885 --> 00:29:29.645
<v Speaker 2>Terraform can then explore.

00:29:30.605 --> 00:29:32.205
<v Speaker 2>Or we can or we can have a

00:29:32.205 --> 00:29:33.245
<v Speaker 2>staring contest.

00:29:36.365 --> 00:29:38.685
<v Speaker 0>For time's sake here, we're not gonna run

00:29:38.685 --> 00:29:38.845
<v Speaker 0>the,

00:29:39.550 --> 00:29:42.030
<v Speaker 0>Ansible, but we are going to show you

00:29:42.030 --> 00:29:42.669
<v Speaker 0>the

00:29:42.910 --> 00:29:45.710
<v Speaker 0>there's the Ansible playbooks are just simple

00:29:47.230 --> 00:29:48.429
<v Speaker 0>YAML files.

00:29:48.910 --> 00:29:51.070
<v Speaker 0>So I'm gonna pull up and share my

00:29:51.070 --> 00:29:52.510
<v Speaker 0>screen and show you the two

00:29:54.544 --> 00:29:56.065
<v Speaker 0>show you two quick

00:29:58.145 --> 00:30:00.705
<v Speaker 0>Ansible screens. Oh, let's switch away from that

00:30:00.705 --> 00:30:01.904
<v Speaker 0>so I do not

00:30:02.544 --> 00:30:04.465
<v Speaker 0>there we go. So you see you've got

00:30:04.465 --> 00:30:05.024
<v Speaker 0>the

00:30:05.904 --> 00:30:08.784
<v Speaker 0>Playbook create here. Shared your screen yet, Tom.

00:30:09.190 --> 00:30:11.510
<v Speaker 0>It's a it's coming up? There we go.

00:30:11.510 --> 00:30:12.310
<v Speaker 0>We've

00:30:12.310 --> 00:30:14.310
<v Speaker 0>got the Playbook. Can y'all see? Here, I'll

00:30:14.310 --> 00:30:15.510
<v Speaker 0>make it a little bigger here.

00:30:16.630 --> 00:30:18.630
<v Speaker 0>You can see we're very simply we're creating

00:30:18.630 --> 00:30:20.150
<v Speaker 0>a an Ubuntu device

00:30:21.794 --> 00:30:24.914
<v Speaker 0>as a local host. We're running, we're pulling

00:30:24.914 --> 00:30:26.594
<v Speaker 0>my SSH key here

00:30:26.914 --> 00:30:29.154
<v Speaker 0>and labeling a tutorial key just giving it

00:30:29.154 --> 00:30:31.954
<v Speaker 0>a a simple label for this tutorial.

00:30:32.595 --> 00:30:34.549
<v Speaker 0>The project ID I had created was a

00:30:34.549 --> 00:30:35.669
<v Speaker 0>DevRel demo.

00:30:35.990 --> 00:30:38.230
<v Speaker 0>You give your Ansible server the name right

00:30:38.230 --> 00:30:39.669
<v Speaker 0>here. Choose your

00:30:40.549 --> 00:30:41.990
<v Speaker 0>Ubuntu server.

00:30:41.990 --> 00:30:42.710
<v Speaker 0>Now

00:30:43.270 --> 00:30:45.669
<v Speaker 0>you can use either the you can use

00:30:45.669 --> 00:30:49.190
<v Speaker 0>the packet CLI to pull out the

00:30:50.684 --> 00:30:52.124
<v Speaker 0>to pull out the

00:30:52.924 --> 00:30:55.725
<v Speaker 0>plan name. I'm doing a C3MediumDotX

00:30:55.725 --> 00:30:57.565
<v Speaker 0>80 6 here and get the facility at

00:30:57.565 --> 00:30:58.924
<v Speaker 0>the D A 3, which is closest to

00:30:58.924 --> 00:31:00.205
<v Speaker 0>me. That's down in Dallas.

00:31:00.524 --> 00:31:01.004
<v Speaker 0>The

00:31:01.325 --> 00:31:03.325
<v Speaker 0>YAML to remove is just about as simple.

00:31:03.325 --> 00:31:05.085
<v Speaker 0>We just put in the project ID. We

00:31:05.350 --> 00:31:07.029
<v Speaker 0>the the the

00:31:09.669 --> 00:31:11.829
<v Speaker 0>name here that we did, which was

00:31:12.149 --> 00:31:14.230
<v Speaker 0>Ansible server. Just put the same thing here.

00:31:14.230 --> 00:31:15.349
<v Speaker 0>State absent,

00:31:15.590 --> 00:31:18.470
<v Speaker 0>run those Ansible playbooks, and you have your

00:31:18.470 --> 00:31:20.629
<v Speaker 0>server up or down, whichever you're trying to

00:31:20.629 --> 00:31:23.085
<v Speaker 0>do at the Yeah. Perfect. Late breaking news,

00:31:23.085 --> 00:31:24.685
<v Speaker 2>those those machines are up, all five of

00:31:24.685 --> 00:31:26.125
<v Speaker 2>them. Nice.

00:31:26.685 --> 00:31:28.445
<v Speaker 1>I think what's important

00:31:28.525 --> 00:31:30.525
<v Speaker 1>here is that the APIs are I mean,

00:31:30.525 --> 00:31:32.365
<v Speaker 1>it's a single API. Right? Equinix Meta has

00:31:32.365 --> 00:31:34.925
<v Speaker 1>one API that all of these tools are

00:31:34.410 --> 00:31:36.730
<v Speaker 1>consuming. So everything we do in Ansible, everything

00:31:36.730 --> 00:31:38.170
<v Speaker 1>we do in Terraform and everything we do

00:31:38.170 --> 00:31:40.410
<v Speaker 1>in Pulumi, it's all pretty much the same.

00:31:40.410 --> 00:31:42.169
<v Speaker 1>It's just giving you the option

00:31:42.410 --> 00:31:44.170
<v Speaker 1>Mhmm. To use the tooling that your company,

00:31:44.170 --> 00:31:44.890
<v Speaker 1>organization,

00:31:44.970 --> 00:31:47.515
<v Speaker 1>your team is already comfortable with. We're just

00:31:47.515 --> 00:31:48.955
<v Speaker 1>trying to show you how to leverage that

00:31:48.955 --> 00:31:49.755
<v Speaker 1>regardless.

00:31:49.755 --> 00:31:51.435
<v Speaker 1>So there are many more ways you could

00:31:51.435 --> 00:31:52.315
<v Speaker 1>do this too.

00:31:52.875 --> 00:31:54.715
<v Speaker 0>And you can find the documentation if you

00:31:54.715 --> 00:31:56.795
<v Speaker 0>look at like the Ansible packet provider or

00:31:56.795 --> 00:31:57.755
<v Speaker 0>look up the

00:31:58.555 --> 00:32:01.755
<v Speaker 0>the Packet Go and Pulumi provider or Terraform.

00:32:01.755 --> 00:32:03.990
<v Speaker 0>There's we've got all of the documentation help

00:32:03.990 --> 00:32:05.109
<v Speaker 0>you get started here.

00:32:06.070 --> 00:32:07.429
<v Speaker 1>Yeah. For sure. Definitely.

00:32:08.070 --> 00:32:11.029
<v Speaker 1>How is your Terraform looking, Jeremy?

00:32:12.149 --> 00:32:12.950
<v Speaker 2>All set.

00:32:13.190 --> 00:32:14.229
<v Speaker 2>So Ta

00:32:14.630 --> 00:32:17.589
<v Speaker 2>da. Yes. Woah. So on the

00:32:17.945 --> 00:32:20.585
<v Speaker 1>yep. And you so detailed feedback here on

00:32:20.585 --> 00:32:21.945
<v Speaker 0>timing and everything. Right?

00:32:22.345 --> 00:32:24.505
<v Speaker 2>Yeah. So what happens is every 10 every

00:32:24.505 --> 00:32:26.505
<v Speaker 2>ten seconds, it will, it will report back

00:32:26.505 --> 00:32:28.505
<v Speaker 2>in. And so it'll say ten seconds has

00:32:28.505 --> 00:32:31.145
<v Speaker 2>elapsed. Machine's not ready yet. Twenty seconds. Machine's

00:32:31.145 --> 00:32:33.670
<v Speaker 2>not ready yet. Thirty seconds. And so on.

00:32:33.830 --> 00:32:34.950
<v Speaker 2>It looks like

00:32:35.510 --> 00:32:37.510
<v Speaker 2>host number two came up

00:32:37.990 --> 00:32:40.230
<v Speaker 2>after two minutes and twenty eight seconds, and

00:32:40.230 --> 00:32:41.350
<v Speaker 2>then the last

00:32:42.150 --> 00:32:44.470
<v Speaker 2>and then the last four of them were

00:32:44.470 --> 00:32:44.950
<v Speaker 2>only

00:32:46.375 --> 00:32:48.295
<v Speaker 2>another twenty seconds another

00:32:48.295 --> 00:32:49.654
<v Speaker 2>twenty seconds behind.

00:32:50.695 --> 00:32:52.135
<v Speaker 2>And so once that

00:32:52.934 --> 00:32:55.494
<v Speaker 2>once your Terraform plan has been applied,

00:32:56.295 --> 00:32:57.495
<v Speaker 2>you can say

00:32:58.710 --> 00:33:01.030
<v Speaker 2>Terraform show, and that will give you all

00:33:01.030 --> 00:33:01.749
<v Speaker 2>of the

00:33:02.470 --> 00:33:04.870
<v Speaker 2>all of the information about those,

00:33:05.750 --> 00:33:07.750
<v Speaker 2>about those machines. So now they do have,

00:33:08.390 --> 00:33:10.309
<v Speaker 2>public and private IPs.

00:33:10.565 --> 00:33:12.085
<v Speaker 2>That is deployed to,

00:33:12.485 --> 00:33:15.205
<v Speaker 2>Dell Fort Worth, the Data Center Number 2

00:33:15.205 --> 00:33:17.124
<v Speaker 2>as we thought they were going to.

00:33:18.405 --> 00:33:20.485
<v Speaker 2>They have the series of host names we

00:33:20.485 --> 00:33:21.365
<v Speaker 2>were expecting

00:33:22.325 --> 00:33:23.044
<v Speaker 2>and,

00:33:23.605 --> 00:33:24.965
<v Speaker 2>all of the rest of the information.

00:33:26.700 --> 00:33:27.580
<v Speaker 2>Earlier,

00:33:27.659 --> 00:33:29.020
<v Speaker 2>I glossed

00:33:29.020 --> 00:33:30.859
<v Speaker 2>over, but if you'd like to

00:33:32.140 --> 00:33:36.700
<v Speaker 2>describe a SSH key, singular one that's associated

00:33:36.700 --> 00:33:38.940
<v Speaker 2>with the project, you can, put that in

00:33:38.940 --> 00:33:39.659
<v Speaker 2>through configuration.

00:33:40.085 --> 00:33:41.605
<v Speaker 2>If you don't put that in if you

00:33:41.605 --> 00:33:43.845
<v Speaker 2>don't give the machine an SSH key, you're

00:33:43.845 --> 00:33:45.764
<v Speaker 2>still going to need to access it somehow.

00:33:45.925 --> 00:33:48.005
<v Speaker 2>And so each individual on your team is

00:33:48.005 --> 00:33:49.924
<v Speaker 2>going to have their own key

00:33:50.005 --> 00:33:50.965
<v Speaker 2>that's then going

00:33:51.605 --> 00:33:53.044
<v Speaker 2>if you don't if

00:33:53.205 --> 00:33:55.169
<v Speaker 2>you don't upload a key, all of the

00:33:55.169 --> 00:33:56.850
<v Speaker 2>keys from your team will then be put

00:33:56.850 --> 00:33:59.010
<v Speaker 2>onto that put onto that machine so anyone

00:33:59.010 --> 00:34:00.529
<v Speaker 2>from the team can access it.

00:34:01.010 --> 00:34:02.849
<v Speaker 0>So when you're doing this with

00:34:03.090 --> 00:34:04.450
<v Speaker 0>for example, when you're putting in the different

00:34:04.450 --> 00:34:06.529
<v Speaker 0>keys, can you tell who deployed which servers

00:34:06.529 --> 00:34:06.929
<v Speaker 0>then?

00:34:09.094 --> 00:34:09.895
<v Speaker 2>Correct.

00:34:10.375 --> 00:34:12.534
<v Speaker 2>That will be back in the

00:34:13.895 --> 00:34:16.214
<v Speaker 2>inside the API you're able to you're able

00:34:16.214 --> 00:34:17.335
<v Speaker 2>to pull that out of.

00:34:19.734 --> 00:34:22.135
<v Speaker 2>And so you can when you say Terraform

00:34:22.135 --> 00:34:23.415
<v Speaker 2>show, you can look at it that way.

00:34:24.800 --> 00:34:26.000
<v Speaker 2>If you say

00:34:27.360 --> 00:34:28.719
<v Speaker 2>show JSON,

00:34:28.719 --> 00:34:30.160
<v Speaker 2>it will give you a

00:34:30.800 --> 00:34:33.040
<v Speaker 2>big machine readable big

00:34:33.920 --> 00:34:36.560
<v Speaker 2>machine readable chunk that you can then parse

00:34:36.560 --> 00:34:37.120
<v Speaker 2>with

00:34:37.760 --> 00:34:39.440
<v Speaker 2>j q or your favorite

00:34:40.074 --> 00:34:43.035
<v Speaker 2>JSON parser. I often write a write a

00:34:43.035 --> 00:34:44.955
<v Speaker 2>filter that when I if I bring up

00:34:44.955 --> 00:34:46.795
<v Speaker 2>a series of machines, it will then just

00:34:46.795 --> 00:34:49.515
<v Speaker 2>give me the the list of public IPs

00:34:49.515 --> 00:34:51.355
<v Speaker 2>for those. So instead of looking down through

00:34:51.355 --> 00:34:52.315
<v Speaker 2>the list, there'll be

00:34:53.120 --> 00:34:55.440
<v Speaker 2>maybe five IPs there and see if I

00:34:55.440 --> 00:34:56.800
<v Speaker 2>can see

00:34:58.480 --> 00:35:00.000
<v Speaker 2>if I can pull that out.

00:35:00.720 --> 00:35:02.320
<v Speaker 2>Format version values.

00:35:05.605 --> 00:35:06.325
<v Speaker 1>Nice.

00:35:10.325 --> 00:35:11.365
<v Speaker 1>So I guess we'll

00:35:12.405 --> 00:35:14.805
<v Speaker 2>Yeah. It'll pretty print that, and then,

00:35:15.205 --> 00:35:16.885
<v Speaker 2>yeah, we can we can do a more

00:35:16.885 --> 00:35:17.765
<v Speaker 2>thorough

00:35:18.320 --> 00:35:19.200
<v Speaker 2>thorough

00:35:19.840 --> 00:35:23.040
<v Speaker 2>walk through of JSON filtering later, but I

00:35:23.040 --> 00:35:24.800
<v Speaker 2>get the get the idea.

00:35:26.320 --> 00:35:28.240
<v Speaker 1>Yeah. So, I mean, the goal with these

00:35:28.240 --> 00:35:31.120
<v Speaker 1>sessions is to kinda walk people through from

00:35:31.200 --> 00:35:32.960
<v Speaker 1>zero to

00:35:32.565 --> 00:35:35.045
<v Speaker 1>everything. Right? On bare metal. Like last week

00:35:35.045 --> 00:35:36.165
<v Speaker 1>we covered using

00:35:37.285 --> 00:35:38.725
<v Speaker 1>Equinix MEL API,

00:35:38.805 --> 00:35:41.205
<v Speaker 1>using the go tooling and using the CLI,

00:35:41.685 --> 00:35:43.445
<v Speaker 1>know, recovering Ansible,

00:35:43.445 --> 00:35:44.885
<v Speaker 1>Pulumi and Terraform now.

00:35:45.530 --> 00:35:47.050
<v Speaker 1>And then next week, we're gonna take a

00:35:47.050 --> 00:35:48.890
<v Speaker 1>look at how we can actually install and

00:35:48.890 --> 00:35:51.369
<v Speaker 1>provision our software or our docker containers or

00:35:51.369 --> 00:35:52.570
<v Speaker 1>whatever is that we need to get on

00:35:52.570 --> 00:35:54.970
<v Speaker 1>that machine using a bunch of other tools

00:35:54.970 --> 00:35:56.329
<v Speaker 1>as well. And we're just gonna keep this

00:35:56.329 --> 00:35:57.290
<v Speaker 1>content coming.

00:35:57.450 --> 00:35:58.010
<v Speaker 1>Right, team?

00:35:59.125 --> 00:36:00.245
<v Speaker 2>We are? Absolutely.

00:36:01.045 --> 00:36:03.685
<v Speaker 2>I I suppose the yeah. As we're getting

00:36:03.685 --> 00:36:05.525
<v Speaker 2>closer to the end and closing out here,

00:36:05.845 --> 00:36:09.045
<v Speaker 2>the reminder is to also, like, the last

00:36:09.045 --> 00:36:10.565
<v Speaker 2>part, Terraform destroy.

00:36:11.550 --> 00:36:13.710
<v Speaker 2>Put it right. Remember to remember to put

00:36:13.710 --> 00:36:15.550
<v Speaker 2>away your toys. And so

00:36:16.990 --> 00:36:18.510
<v Speaker 2>and so you don't have a so you

00:36:18.510 --> 00:36:20.030
<v Speaker 2>don't have billing surprises or things you're not

00:36:20.030 --> 00:36:20.750
<v Speaker 2>expecting.

00:36:22.270 --> 00:36:24.395
<v Speaker 2>Everything that you can bring up with with

00:36:24.395 --> 00:36:25.435
<v Speaker 2>a configuration

00:36:25.435 --> 00:36:26.155
<v Speaker 2>is

00:36:26.395 --> 00:36:27.915
<v Speaker 2>brought down the same way when you say

00:36:27.915 --> 00:36:30.234
<v Speaker 2>destroy. So these are the machines that are

00:36:30.234 --> 00:36:31.195
<v Speaker 2>gonna be removed.

00:36:32.234 --> 00:36:33.595
<v Speaker 2>Yes to yes

00:36:33.835 --> 00:36:35.035
<v Speaker 2>to go ahead with it,

00:36:35.595 --> 00:36:38.395
<v Speaker 2>and they come down much much faster than

00:36:38.395 --> 00:36:39.115
<v Speaker 2>they go up

00:36:39.680 --> 00:36:42.560
<v Speaker 2>Destruction complete after two seconds. And so what

00:36:42.560 --> 00:36:44.160
<v Speaker 2>was once there is no longer.

00:36:45.360 --> 00:36:46.160
<v Speaker 1>Excellent.

00:36:46.480 --> 00:36:48.880
<v Speaker 1>I just remembered to run Pulumi destroy too.

00:36:49.120 --> 00:36:49.600
<v Speaker 0>We can

00:36:50.560 --> 00:36:52.080
<v Speaker 0>if you wanna give this a try for

00:36:52.080 --> 00:36:52.800
<v Speaker 0>yourself

00:36:53.040 --> 00:36:53.280
<v Speaker 0>and

00:36:54.015 --> 00:36:55.214
<v Speaker 0>see how easy it is to do all

00:36:55.214 --> 00:36:57.454
<v Speaker 0>of this on Equinix metal, just go to

00:36:57.454 --> 00:36:58.494
<v Speaker 0>equinixmetal.com.

00:36:58.494 --> 00:37:00.575
<v Speaker 0>And when you're signing up, use the

00:37:01.454 --> 00:37:03.295
<v Speaker 0>promo code all uppercase

00:37:03.295 --> 00:37:05.535
<v Speaker 0>metal monday, one word, and you'll get a

00:37:05.535 --> 00:37:07.135
<v Speaker 0>hundred dollars in credit to spin up and

00:37:07.135 --> 00:37:08.734
<v Speaker 0>and try out everything that we're showing you.

00:37:11.240 --> 00:37:12.040
<v Speaker 1>Meadow

00:37:13.000 --> 00:37:14.040
<v Speaker 1>Monday. Hold

00:37:14.440 --> 00:37:16.040
<v Speaker 1>on. There

00:37:17.560 --> 00:37:18.200
<v Speaker 0>it is.

00:37:19.480 --> 00:37:20.600
<v Speaker 1>Alright. I can work.

00:37:23.915 --> 00:37:25.435
<v Speaker 1>Go away. There you go.

00:37:26.714 --> 00:37:28.555
<v Speaker 1>Alright. So we'll leave this open for a

00:37:28.555 --> 00:37:30.075
<v Speaker 1>couple of minutes. If you do have any

00:37:30.075 --> 00:37:31.915
<v Speaker 1>questions, if there's any content that you want

00:37:31.915 --> 00:37:34.235
<v Speaker 1>to see coming out of of this

00:37:34.714 --> 00:37:37.130
<v Speaker 1>out of these streams, know, hard questions. The

00:37:37.130 --> 00:37:38.650
<v Speaker 1>harder the better. Anything you want us to

00:37:38.650 --> 00:37:39.930
<v Speaker 1>solve and show you how to do, we're

00:37:39.930 --> 00:37:41.770
<v Speaker 1>happy to do that. So we'll give it

00:37:41.770 --> 00:37:43.930
<v Speaker 1>a few minutes. Drop your questions after none.

00:37:43.930 --> 00:37:45.210
<v Speaker 1>We will say our

00:37:45.370 --> 00:37:46.330
<v Speaker 1>goodbyes

00:37:46.330 --> 00:37:48.425
<v Speaker 1>and we will be back next week.

00:37:51.065 --> 00:37:52.825
<v Speaker 1>We need some music or something for this

00:37:52.825 --> 00:37:53.785
<v Speaker 1>bit. The drums.

00:38:00.505 --> 00:38:02.560
<v Speaker 0>Journey. What? It's trying to hit the drum

00:38:02.560 --> 00:38:05.360
<v Speaker 0>for us. The drums, I've just got the

00:38:05.839 --> 00:38:08.079
<v Speaker 2>how yeah. Halloween, one of the one of

00:38:08.079 --> 00:38:09.520
<v Speaker 2>the treats that we got is the

00:38:10.400 --> 00:38:12.240
<v Speaker 2>we got these these little go with

00:38:14.000 --> 00:38:15.200
<v Speaker 2>We'll go with that to take us out.

00:38:16.185 --> 00:38:17.705
<v Speaker 0>And just so you know, that sounds as

00:38:17.705 --> 00:38:19.145
<v Speaker 0>awesome as you think it as you would

00:38:19.145 --> 00:38:20.825
<v Speaker 0>think it would on this side.

00:38:23.088 --> 00:38:25.008
<v Speaker 0>Thanks, Macay, for hosting us today.

00:38:25.968 --> 00:38:29.088
<v Speaker 1>Alright. Well, no more questions. So we will

00:38:29.088 --> 00:38:31.088
<v Speaker 1>be back next week. Thanks again, everyone. Have

00:38:31.088 --> 00:38:33.488
<v Speaker 1>a great day. Until next time. Happy Monday.
