WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 39322805-1126-482d-b799-efa37a6415c6
Created: 2025-04-29T17:17:05.994Z
Duration: 5734.0815
Channels: 1

00:00:54.770 --> 00:00:57.730
<v Speaker 0>Hello, and welcome to Rawkode Live on the

00:00:57.730 --> 00:00:59.010
<v Speaker 0>Rawkode Academy.

00:00:59.090 --> 00:01:01.170
<v Speaker 0>Today is clustered.

00:01:01.650 --> 00:01:03.490
<v Speaker 0>We have a couple of clustered and a

00:01:03.490 --> 00:01:05.970
<v Speaker 0>couple of broken clusters and a couple of

00:01:05.970 --> 00:01:07.570
<v Speaker 0>great guests joining us today as we do

00:01:07.570 --> 00:01:10.095
<v Speaker 0>some live debugging to get these clusters back

00:01:10.095 --> 00:01:11.854
<v Speaker 0>online and working.

00:01:12.335 --> 00:01:14.975
<v Speaker 0>We have a clustered application written in Rust,

00:01:14.975 --> 00:01:16.575
<v Speaker 0>has a small database that we'll do our

00:01:16.575 --> 00:01:17.854
<v Speaker 0>best to fix.

00:01:18.655 --> 00:01:20.255
<v Speaker 0>Now a little bit housekeeping before we get

00:01:20.255 --> 00:01:22.539
<v Speaker 0>started. Please subscribe to the channel,

00:01:22.860 --> 00:01:25.259
<v Speaker 0>like, comment, and share the videos as well.

00:01:25.259 --> 00:01:27.020
<v Speaker 0>This helps other people find them. It keeps

00:01:27.020 --> 00:01:29.180
<v Speaker 0>the YouTube albums happy

00:01:29.740 --> 00:01:31.100
<v Speaker 0>and just means that more people get to

00:01:31.100 --> 00:01:33.740
<v Speaker 0>enjoy and learn together. We also have some

00:01:33.740 --> 00:01:36.219
<v Speaker 0>membership packages available on the academy that allow

00:01:36.219 --> 00:01:38.164
<v Speaker 0>you to support the channel, so please feel

00:01:38.164 --> 00:01:39.604
<v Speaker 0>free to check them out. And if you

00:01:39.604 --> 00:01:41.604
<v Speaker 0>have any questions, then you can jump into

00:01:41.604 --> 00:01:43.924
<v Speaker 0>the Discord and ask them. I'm more than

00:01:43.924 --> 00:01:45.604
<v Speaker 0>happy to tell you what we are doing.

00:01:46.005 --> 00:01:48.645
<v Speaker 0>The Discord is available at Rawkode.chat.

00:01:48.645 --> 00:01:50.884
<v Speaker 0>There's nearly 600 of us in there now

00:01:50.400 --> 00:01:53.360
<v Speaker 0>talking all things cloud native, Kubernetes, EBBF, and

00:01:53.360 --> 00:01:56.080
<v Speaker 0>everything in between. So come and say hello,

00:01:56.080 --> 00:01:57.760
<v Speaker 0>and I look forward to meeting you.

00:01:58.480 --> 00:02:01.360
<v Speaker 0>All right, last thing, our sponsor.

00:02:01.920 --> 00:02:03.840
<v Speaker 0>Teleport have been sponsoring us now for the

00:02:03.840 --> 00:02:05.635
<v Speaker 0>last two months, and I got to thank

00:02:05.635 --> 00:02:06.674
<v Speaker 0>them a whole lot.

00:02:07.075 --> 00:02:08.755
<v Speaker 0>It's the easiest decision I ever made when

00:02:08.755 --> 00:02:10.755
<v Speaker 0>it came to clustered because we use Teleport

00:02:10.755 --> 00:02:13.315
<v Speaker 0>every single week. We've been using Teleport since

00:02:13.315 --> 00:02:16.115
<v Speaker 0>the first episode, allows us to secure access

00:02:16.115 --> 00:02:18.670
<v Speaker 0>to the clusters as well as share and

00:02:18.670 --> 00:02:20.910
<v Speaker 0>pair in a same session,

00:02:20.910 --> 00:02:22.190
<v Speaker 0>which you're going to see us doing a

00:02:22.190 --> 00:02:23.230
<v Speaker 0>whole lot today.

00:02:23.390 --> 00:02:25.390
<v Speaker 0>It also allows you to expose those applications

00:02:25.390 --> 00:02:27.790
<v Speaker 0>securely through the proxy, which you'll also see

00:02:27.790 --> 00:02:30.110
<v Speaker 0>in action. So if you want to support

00:02:30.670 --> 00:02:34.235
<v Speaker 0>Clustard and Rockwood Live, check out Rawkode.live/teleport.

00:02:34.235 --> 00:02:35.995
<v Speaker 0>It's a UTM link, but I would really

00:02:35.995 --> 00:02:38.235
<v Speaker 0>appreciate it. And, of course, go install Teleport

00:02:38.235 --> 00:02:39.995
<v Speaker 0>on all your clusters. You'll thank me.

00:02:40.635 --> 00:02:42.635
<v Speaker 0>Alright. Let's jump over and say hello to

00:02:42.635 --> 00:02:43.755
<v Speaker 0>today's guests.

00:02:44.235 --> 00:02:46.875
<v Speaker 0>I'm joined by Rawkode Matt. Hey, guys. How

00:02:46.875 --> 00:02:47.195
<v Speaker 0>are you?

00:02:48.330 --> 00:02:49.370
<v Speaker 1>Good. Thanks.

00:02:50.489 --> 00:02:51.930
<v Speaker 0>Subly nervous yet?

00:02:53.290 --> 00:02:55.530
<v Speaker 0>No. Of course not. These are pros. These

00:02:55.530 --> 00:02:56.330
<v Speaker 0>are pros.

00:02:56.650 --> 00:02:58.730
<v Speaker 0>Alright. No. No. It's on both sides, I

00:02:58.730 --> 00:02:58.890
<v Speaker 1>think.

00:03:00.135 --> 00:03:00.935
<v Speaker 0>Alright.

00:03:00.935 --> 00:03:02.775
<v Speaker 0>Could you both do us a favor and

00:03:02.775 --> 00:03:04.935
<v Speaker 0>introduce yourselves? We'll start with Barco there and

00:03:04.935 --> 00:03:06.215
<v Speaker 0>then move over to Matt.

00:03:07.575 --> 00:03:09.175
<v Speaker 2>Hi. My name is Barco.

00:03:09.175 --> 00:03:12.615
<v Speaker 2>I'm a big fan of the clustered series

00:03:12.615 --> 00:03:15.380
<v Speaker 2>here. I think it's a great resource for

00:03:15.380 --> 00:03:18.580
<v Speaker 2>people learning Kubernetes or preparing for CKA.

00:03:19.540 --> 00:03:23.060
<v Speaker 2>So I'm really humbled to to participate.

00:03:23.220 --> 00:03:24.980
<v Speaker 2>I know I've learned a lot through this

00:03:24.980 --> 00:03:27.540
<v Speaker 2>series. I hope others find value here as

00:03:27.540 --> 00:03:27.620
<v Speaker 2>well.

00:03:29.175 --> 00:03:30.695
<v Speaker 0>Thank you very much. Matt?

00:03:32.215 --> 00:03:33.815
<v Speaker 1>Yeah. Hey. I'm Matt Turner.

00:03:34.135 --> 00:03:36.055
<v Speaker 1>Some kind of thing. Done a fair amount

00:03:36.055 --> 00:03:37.895
<v Speaker 1>of Kubernetes, I guess. I got my CKA,

00:03:37.895 --> 00:03:39.655
<v Speaker 1>which was quite a quite a stressful thing.

00:03:39.655 --> 00:03:41.255
<v Speaker 1>I I think this is gonna be worse.

00:03:42.535 --> 00:03:42.855
<v Speaker 1>I

00:03:43.590 --> 00:03:45.430
<v Speaker 1>haven't watched any of these because I didn't

00:03:45.430 --> 00:03:46.150
<v Speaker 1>want to

00:03:46.550 --> 00:03:48.950
<v Speaker 1>cheat. I mean, I didn't wanna end up

00:03:48.950 --> 00:03:51.670
<v Speaker 1>fucking somebody else's. It's a different time difficult

00:03:51.670 --> 00:03:52.950
<v Speaker 1>time time for me. I didn't wanna end

00:03:52.950 --> 00:03:55.750
<v Speaker 1>up just, you know, copying anybody else's breakages

00:03:55.750 --> 00:03:56.950
<v Speaker 1>by accident. It's hard to get them out

00:03:56.950 --> 00:03:59.144
<v Speaker 1>of your head. So, yeah, I'm I'm completely

00:03:59.144 --> 00:04:01.145
<v Speaker 1>new to this, but we'll we'll see.

00:04:01.704 --> 00:04:03.944
<v Speaker 0>Alright. Don't don't worry about it. It's all

00:04:03.944 --> 00:04:06.105
<v Speaker 0>in good fun. So I see Russell has

00:04:06.105 --> 00:04:08.025
<v Speaker 0>a beer. Enjoy, mate.

00:04:08.504 --> 00:04:10.504
<v Speaker 0>Pop has joined us. Rawkode, he's putting a

00:04:10.504 --> 00:04:11.944
<v Speaker 0>lot on your shoulders. He wants you to

00:04:11.944 --> 00:04:14.265
<v Speaker 0>make me cry. I'm just I'm just promised

00:04:14.130 --> 00:04:18.050
<v Speaker 2>he promised Tim Horton's copies, so I'm

00:04:18.050 --> 00:04:19.650
<v Speaker 2>gonna try not to disappoint.

00:04:20.529 --> 00:04:24.290
<v Speaker 0>Alright. Perfect. Well, I have Matt's cluster in

00:04:24.290 --> 00:04:25.970
<v Speaker 0>front of me. So we are gonna jump

00:04:25.970 --> 00:04:27.330
<v Speaker 0>over to our screen share.

00:04:28.845 --> 00:04:31.005
<v Speaker 0>I am going to open a session

00:04:31.724 --> 00:04:34.604
<v Speaker 0>onto the control plane node, and, Barco, I'm

00:04:34.604 --> 00:04:36.044
<v Speaker 0>gonna ask you to join and give us

00:04:36.044 --> 00:04:37.884
<v Speaker 0>an echo hello to let us know that

00:04:37.884 --> 00:04:40.205
<v Speaker 0>you're here. We're in the same terminal, and

00:04:40.205 --> 00:04:41.724
<v Speaker 0>then we will do our best to get

00:04:41.724 --> 00:04:43.884
<v Speaker 0>this application running as quickly as possible.

00:04:45.250 --> 00:04:47.330
<v Speaker 0>Let me start our timer.

00:04:47.490 --> 00:04:49.490
<v Speaker 0>Feel free to set up the KubeConfig,

00:04:50.290 --> 00:04:51.090
<v Speaker 0>and

00:04:51.890 --> 00:04:53.330
<v Speaker 0>we will check if we have a control

00:04:53.330 --> 00:04:55.250
<v Speaker 0>plan, which is usually a pretty good first

00:04:55.250 --> 00:04:55.490
<v Speaker 0>step.

00:04:56.525 --> 00:04:58.525
<v Speaker 1>So my I don't know how much I'm

00:04:58.604 --> 00:04:59.724
<v Speaker 1>I should troll you, although I should just

00:04:59.724 --> 00:05:01.324
<v Speaker 1>shut up. My worry here, to be honest,

00:05:01.324 --> 00:05:03.725
<v Speaker 1>I I haven't broken it hard enough for

00:05:03.965 --> 00:05:05.645
<v Speaker 1>for two pros like you. I wasn't sure

00:05:05.805 --> 00:05:07.324
<v Speaker 1>Sure. How close it would go.

00:05:07.645 --> 00:05:09.085
<v Speaker 1>This might this might be very quick, but

00:05:09.085 --> 00:05:12.284
<v Speaker 1>then we get to move on to Barco's

00:05:10.440 --> 00:05:12.520
<v Speaker 1>super hard, super broken cluster, and it's all

00:05:12.520 --> 00:05:14.360
<v Speaker 0>good. The the quicker is the I mean,

00:05:14.360 --> 00:05:15.800
<v Speaker 0>the sooner I get my dinner. Usually, I

00:05:15.800 --> 00:05:17.560
<v Speaker 0>meet dinner at 8PM on a Thursday. So,

00:05:17.560 --> 00:05:18.680
<v Speaker 0>you know, if I can get up there,

00:05:18.680 --> 00:05:19.800
<v Speaker 0>I'm not gonna complain.

00:05:20.440 --> 00:05:22.440
<v Speaker 0>Alright. Because I I put a list of

00:05:22.440 --> 00:05:23.560
<v Speaker 1>what I'll go through at the end of,

00:05:23.560 --> 00:05:24.920
<v Speaker 1>like, four or five ways I tried to

00:05:24.920 --> 00:05:26.120
<v Speaker 1>break it that didn't work

00:05:26.775 --> 00:05:28.215
<v Speaker 1>because I sort of, you know, came up

00:05:28.215 --> 00:05:30.134
<v Speaker 1>with them from first principles, but Kubernetes is

00:05:30.134 --> 00:05:31.815
<v Speaker 1>too resilient these days, and they actually didn't

00:05:31.815 --> 00:05:33.255
<v Speaker 1>have the effect I expected. So that was

00:05:33.255 --> 00:05:34.135
<v Speaker 1>quite interesting.

00:05:35.574 --> 00:05:37.255
<v Speaker 0>Alright. Well, it looks like we do not

00:05:37.255 --> 00:05:38.535
<v Speaker 0>have a control plan.

00:05:44.479 --> 00:05:46.160
<v Speaker 2>That's the correct IP,

00:05:46.319 --> 00:05:47.120
<v Speaker 2>I guess.

00:05:47.840 --> 00:05:50.000
<v Speaker 0>It definitely looks correct. I mean, I can't

00:05:50.000 --> 00:05:51.520
<v Speaker 0>say for sure, but I would I would

00:05:51.520 --> 00:05:53.520
<v Speaker 0>argue that, yes, that is probably the correct

00:05:53.520 --> 00:05:53.919
<v Speaker 0>IP.

00:05:55.575 --> 00:05:57.895
<v Speaker 2>And the port seems okay. Would you like

00:05:57.895 --> 00:05:59.335
<v Speaker 0>me to confirm somehow?

00:06:01.335 --> 00:06:02.215
<v Speaker 2>Okay.

00:06:06.775 --> 00:06:09.495
<v Speaker 2>Well, we don't have a server running.

00:06:10.720 --> 00:06:11.360
<v Speaker 0>Yeah. Or

00:06:11.920 --> 00:06:13.120
<v Speaker 2>okay. So

00:06:15.840 --> 00:06:18.000
<v Speaker 2>well, I just Nice reminder in the chat

00:06:18.000 --> 00:06:20.160
<v Speaker 0>from Kevin that there are only three rules.

00:06:20.640 --> 00:06:22.000
<v Speaker 0>Don't play teleport,

00:06:22.080 --> 00:06:24.400
<v Speaker 0>don't play with editing, no eBPF.

00:06:24.640 --> 00:06:26.160
<v Speaker 0>Although, the latter two are unofficial.

00:06:27.015 --> 00:06:29.815
<v Speaker 1>I was gonna say. Through rage induced

00:06:29.815 --> 00:06:31.895
<v Speaker 0>by me on previous episodes.

00:06:32.855 --> 00:06:34.295
<v Speaker 2>Okay. So

00:06:36.135 --> 00:06:39.015
<v Speaker 2>I guess cube controller seems to have been

00:06:39.015 --> 00:06:39.975
<v Speaker 2>played around with,

00:06:40.690 --> 00:06:41.090
<v Speaker 2>But

00:06:55.695 --> 00:06:57.775
<v Speaker 0>So we have the API server running, and

00:06:57.775 --> 00:07:00.335
<v Speaker 0>you've jumped straight into the static manifest. Right?

00:07:00.895 --> 00:07:04.175
<v Speaker 2>Yeah. I'm just going to see if anything

00:07:04.175 --> 00:07:05.535
<v Speaker 2>seems off here.

00:07:18.030 --> 00:07:20.030
<v Speaker 2>Same thing, Jamfi, too here.

00:07:20.765 --> 00:07:21.805
<v Speaker 2>No.

00:07:22.845 --> 00:07:25.565
<v Speaker 0>That looks like a perfectly normal

00:07:25.885 --> 00:07:28.605
<v Speaker 0>static manifest for the API server.

00:07:29.325 --> 00:07:30.765
<v Speaker 0>I'm pretty happy with that.

00:07:32.525 --> 00:07:33.085
<v Speaker 1>Okay.

00:07:35.820 --> 00:07:37.740
<v Speaker 2>I guess we can check

00:07:39.100 --> 00:07:40.300
<v Speaker 2>system d.

00:07:43.180 --> 00:07:45.500
<v Speaker 0>Yeah. Let's confirm if we have a Qiplit.

00:07:45.979 --> 00:07:48.060
<v Speaker 0>Russell's also saying there's a rule.

00:07:48.780 --> 00:07:49.820
<v Speaker 0>Yeah. That is a real rule.

00:07:50.625 --> 00:07:51.505
<v Speaker 0>We

00:07:51.824 --> 00:07:54.145
<v Speaker 0>have not invited to guy back after episode

00:07:54.145 --> 00:07:54.785
<v Speaker 0>two,

00:07:55.985 --> 00:07:57.264
<v Speaker 0>nor will they come back.

00:07:58.944 --> 00:08:00.384
<v Speaker 0>I see an API server there.

00:08:04.160 --> 00:08:04.880
<v Speaker 2>Maybe

00:08:12.480 --> 00:08:13.680
<v Speaker 0>it's just flapping?

00:08:14.560 --> 00:08:14.880
<v Speaker 2>Yeah.

00:08:15.565 --> 00:08:17.965
<v Speaker 2>Okay. That's Might wanna check out the the

00:08:17.965 --> 00:08:19.165
<v Speaker 0>logs perhaps.

00:08:24.925 --> 00:08:25.725
<v Speaker 2>Interesting.

00:08:26.125 --> 00:08:28.365
<v Speaker 2>Okay. So it seems to be restarting.

00:08:30.580 --> 00:08:31.300
<v Speaker 2>Okay.

00:08:38.100 --> 00:08:38.900
<v Speaker 2>Pause.

00:08:41.220 --> 00:08:43.059
<v Speaker 0>Haven't known Matt for a wee while now.

00:08:43.059 --> 00:08:45.620
<v Speaker 0>I would not be surprised if there's just

00:08:44.715 --> 00:08:46.715
<v Speaker 0>a doing a kill minus nine every three

00:08:46.715 --> 00:08:47.515
<v Speaker 0>seconds.

00:08:50.075 --> 00:08:51.835
<v Speaker 1>Yeah. That will you you know, no no

00:08:51.835 --> 00:08:53.675
<v Speaker 1>UTF eight, non blue cap. No

00:08:54.315 --> 00:08:56.475
<v Speaker 1>no product, and, yeah, I mean, the heavy

00:08:56.475 --> 00:08:59.195
<v Speaker 1>metal approach is is just something containers Big

00:08:59.195 --> 00:09:00.075
<v Speaker 0>cap. Would be your best bet.

00:09:03.570 --> 00:09:06.290
<v Speaker 0>I know you. It's more back here.

00:09:07.010 --> 00:09:08.530
<v Speaker 1>Simple but effective. Wait.

00:09:10.770 --> 00:09:12.130
<v Speaker 0>We don't have Varlog?

00:09:12.290 --> 00:09:13.650
<v Speaker 0>I have Varlog single.

00:09:13.730 --> 00:09:15.455
<v Speaker 0>Yes. Typing it wrong. Okay.

00:09:37.790 --> 00:09:38.430
<v Speaker 0>HCT.

00:09:48.865 --> 00:09:49.905
<v Speaker 2>Okay.

00:09:51.905 --> 00:09:53.585
<v Speaker 0>There's always a panic when I don't see

00:09:53.585 --> 00:09:54.705
<v Speaker 0>Etity running.

00:09:55.745 --> 00:09:56.145
<v Speaker 2>Yeah.

00:10:03.480 --> 00:10:05.560
<v Speaker 1>It it definitely shouldn't have lost its data.

00:10:05.560 --> 00:10:07.720
<v Speaker 1>Like, I haven't done anything like that to

00:10:07.720 --> 00:10:08.680
<v Speaker 2>you. You should when you get it back,

00:10:08.680 --> 00:10:09.880
<v Speaker 1>you should be able to upgrade in place.

00:10:14.345 --> 00:10:15.385
<v Speaker 0>Yeah.

00:10:16.345 --> 00:10:17.545
<v Speaker 0>I'm gonna have to find a way to

00:10:17.545 --> 00:10:19.945
<v Speaker 0>disable that, but there's always the remembered Vim

00:10:19.945 --> 00:10:21.785
<v Speaker 0>cursor every time we open a file and

00:10:21.785 --> 00:10:23.065
<v Speaker 0>it starts halfway through.

00:10:23.625 --> 00:10:25.865
<v Speaker 1>I I killed my bash history, but I

00:10:26.024 --> 00:10:28.620
<v Speaker 1>I've forgotten about that. Damn. Every week, we

00:10:28.620 --> 00:10:30.540
<v Speaker 0>see it. You're like, oh. Hacks.

00:10:31.820 --> 00:10:33.500
<v Speaker 1>Yeah. I didn't think of that. I'm obviously

00:10:33.580 --> 00:10:35.420
<v Speaker 1>I'm not a hacker, am I? I I

00:10:35.420 --> 00:10:36.860
<v Speaker 1>cleaned up my bash history.

00:10:38.380 --> 00:10:38.940
<v Speaker 0>All good.

00:10:41.904 --> 00:10:42.945
<v Speaker 0>What do we have?

00:10:46.464 --> 00:10:49.504
<v Speaker 2>I mean, this doesn't look right. Yeah. That

00:10:49.504 --> 00:10:51.504
<v Speaker 0>one m is is actually, he is never

00:10:51.504 --> 00:10:53.105
<v Speaker 0>gonna be able to start with that. That's

00:10:53.105 --> 00:10:54.930
<v Speaker 0>for sure. I can see a smirk on

00:10:54.930 --> 00:10:55.970
<v Speaker 0>your face, Matt.

00:10:59.410 --> 00:11:02.050
<v Speaker 1>It wasn't it wasn't actually crashing when I

00:11:02.050 --> 00:11:03.570
<v Speaker 1>left it. I wanted to just squeeze it.

00:11:03.570 --> 00:11:05.089
<v Speaker 1>I should have squeezed squeezed it to just

00:11:05.089 --> 00:11:06.209
<v Speaker 1>the point where it was

00:11:06.690 --> 00:11:07.490
<v Speaker 1>timing I

00:11:08.209 --> 00:11:08.370
<v Speaker 0>mean,

00:11:09.325 --> 00:11:10.685
<v Speaker 0>I would just remove

00:11:10.925 --> 00:11:14.125
<v Speaker 0>the the limits, to be honest, but we

00:11:14.125 --> 00:11:15.085
<v Speaker 0>don't need them.

00:11:19.165 --> 00:11:21.725
<v Speaker 0>We never follow that advice in production if

00:11:21.725 --> 00:11:24.160
<v Speaker 0>you're watching. But, you know, for for the

00:11:24.160 --> 00:11:25.680
<v Speaker 0>sake of clustered, am happy for us to

00:11:25.680 --> 00:11:26.800
<v Speaker 0>delete a little bit.

00:11:29.520 --> 00:11:30.000
<v Speaker 0>Alright.

00:11:40.635 --> 00:11:43.355
<v Speaker 0>We may just wanna give it thirty seconds,

00:11:43.355 --> 00:11:44.555
<v Speaker 0>make sure it's still

00:11:44.955 --> 00:11:47.435
<v Speaker 0>running, make sure API server is

00:11:48.395 --> 00:11:48.795
<v Speaker 0>up.

00:12:00.220 --> 00:12:02.380
<v Speaker 0>It's always fun to see which flags people

00:12:02.380 --> 00:12:03.660
<v Speaker 0>use with PS.

00:12:04.140 --> 00:12:06.380
<v Speaker 0>Mhmm. Everybody's got their own little unique take

00:12:06.380 --> 00:12:06.860
<v Speaker 0>into it.

00:12:08.185 --> 00:12:10.904
<v Speaker 0>Oh, come on, Russell. Six minutes thirty seconds

00:12:10.904 --> 00:12:12.825
<v Speaker 0>in and there's already a Rawkode smash of

00:12:12.825 --> 00:12:14.745
<v Speaker 0>just deleting stuff from manifest.

00:12:22.105 --> 00:12:23.460
<v Speaker 0>Yeah. They like to delete stuff.

00:12:26.019 --> 00:12:27.940
<v Speaker 0>But SSD dropped again. Right?

00:12:29.380 --> 00:12:32.420
<v Speaker 2>Well, API server is not starting up.

00:12:33.975 --> 00:12:36.935
<v Speaker 2>But that's oh, did did you Was that

00:12:36.935 --> 00:12:38.055
<v Speaker 0>CC still running?

00:12:38.935 --> 00:12:40.295
<v Speaker 2>Well,

00:12:40.775 --> 00:12:42.375
<v Speaker 2>I assumed it was.

00:12:46.980 --> 00:12:49.700
<v Speaker 0>Oh, it's okay. Seems to be running.

00:12:59.495 --> 00:13:02.455
<v Speaker 2>Okay. So let's check the logs again.

00:13:02.775 --> 00:13:04.775
<v Speaker 2>Yeah? Yeah. Yeah. Let's do it.

00:13:05.975 --> 00:13:06.775
<v Speaker 2>Let's

00:13:06.775 --> 00:13:07.015
<v Speaker 2>see.

00:13:18.440 --> 00:13:20.200
<v Speaker 2>There is multiple ones.

00:13:29.735 --> 00:13:32.295
<v Speaker 0>That's from five minutes ago, but I think

00:13:32.295 --> 00:13:33.895
<v Speaker 0>that's the other log.

00:13:40.000 --> 00:13:40.880
<v Speaker 2>K.

00:13:47.680 --> 00:13:48.800
<v Speaker 2>And Cubelet's

00:13:48.800 --> 00:13:49.600
<v Speaker 2>running.

00:13:51.280 --> 00:13:52.480
<v Speaker 2>HCD is running.

00:13:54.105 --> 00:13:56.345
<v Speaker 0>Oh, there we go. Server. There we go.

00:13:56.345 --> 00:13:57.065
<v Speaker 2>That

00:13:57.385 --> 00:13:57.625
<v Speaker 2>was

00:14:01.305 --> 00:14:03.065
<v Speaker 2>there we go. Okay.

00:14:03.865 --> 00:14:06.584
<v Speaker 2>So we have one worker that's now working.

00:14:07.144 --> 00:14:07.865
<v Speaker 2>That's good.

00:14:09.990 --> 00:14:11.829
<v Speaker 2>But we have control plane that seems to

00:14:11.829 --> 00:14:14.389
<v Speaker 2>be working and one worker that is okay.

00:14:14.389 --> 00:14:15.670
<v Speaker 2>Let's check few things.

00:14:41.990 --> 00:14:44.390
<v Speaker 0>Already checking for malicious

00:14:44.390 --> 00:14:45.190
<v Speaker 0>policies.

00:14:46.470 --> 00:14:48.950
<v Speaker 2>I mean I mean, I would maybe start

00:14:48.950 --> 00:14:51.270
<v Speaker 0>with the get pods. I'm just throwing that

00:14:51.270 --> 00:14:51.750
<v Speaker 0>out there.

00:14:52.824 --> 00:14:54.904
<v Speaker 0>Maybe it's running. Maybe maybe Matt forgot to

00:14:54.904 --> 00:14:55.625
<v Speaker 0>break it.

00:14:57.945 --> 00:14:59.545
<v Speaker 2>I I guess I'm just

00:15:00.024 --> 00:15:01.464
<v Speaker 0>You're just assuming the worst. Right?

00:15:05.160 --> 00:15:07.399
<v Speaker 2>Well, just kinda check what's next.

00:15:08.200 --> 00:15:09.639
<v Speaker 1>It's kinda difficult to know what to do

00:15:09.639 --> 00:15:10.920
<v Speaker 1>because I could've just r m this r

00:15:10.920 --> 00:15:12.519
<v Speaker 1>f the disk. Right? But it didn't seem

00:15:12.519 --> 00:15:13.800
<v Speaker 1>to be in the spirit of the rules.

00:15:13.800 --> 00:15:16.279
<v Speaker 1>So It's against the rules.

00:15:16.839 --> 00:15:19.785
<v Speaker 2>What's against the rules? Sorry. Deleting the disk

00:15:19.785 --> 00:15:21.705
<v Speaker 0>because that would kill Teleport.

00:15:22.105 --> 00:15:24.505
<v Speaker 2>Oh, yeah. Actually, you know, I could have

00:15:24.505 --> 00:15:26.185
<v Speaker 1>done something fairly dramatic,

00:15:26.185 --> 00:15:26.825
<v Speaker 1>I guess.

00:15:29.305 --> 00:15:31.385
<v Speaker 2>Man, I'm not doing very well here.

00:15:34.920 --> 00:15:36.200
<v Speaker 1>He's trying to delete all the pods. I

00:15:36.200 --> 00:15:37.560
<v Speaker 1>don't need to send I know. That was

00:15:37.560 --> 00:15:40.280
<v Speaker 0>just a complete mistake. I'm, like, thinking I'm

00:15:40.280 --> 00:15:42.760
<v Speaker 2>I'm thinking I have to smash everything.

00:15:42.920 --> 00:15:43.400
<v Speaker 2>Okay.

00:15:45.000 --> 00:15:45.560
<v Speaker 0>So

00:15:46.280 --> 00:15:48.680
<v Speaker 0>So we could ignore ambassador

00:15:48.195 --> 00:15:49.075
<v Speaker 0>mostly.

00:15:49.075 --> 00:15:49.635
<v Speaker 2>Okay.

00:15:49.955 --> 00:15:52.195
<v Speaker 0>We can see that our clustered pod has

00:15:52.195 --> 00:15:53.075
<v Speaker 0>completed,

00:15:53.075 --> 00:15:55.075
<v Speaker 0>which is not a good sign. And our

00:15:55.075 --> 00:15:57.475
<v Speaker 0>postgres are stuck in container creating.

00:16:00.035 --> 00:16:01.875
<v Speaker 0>And we got some silly and flaps too.

00:16:04.800 --> 00:16:07.760
<v Speaker 0>So Oh, there's our controller managers aren't running

00:16:07.760 --> 00:16:08.560
<v Speaker 0>either.

00:16:12.000 --> 00:16:12.720
<v Speaker 2>Okay.

00:16:14.480 --> 00:16:15.760
<v Speaker 2>Okay. Let's

00:16:16.160 --> 00:16:19.005
<v Speaker 2>controller manager. Yeah. I think the controller manager

00:16:19.005 --> 00:16:20.685
<v Speaker 0>is quite important. We we need that running

00:16:20.685 --> 00:16:22.524
<v Speaker 0>for everything else to reconcile.

00:16:24.925 --> 00:16:26.445
<v Speaker 1>Are you spot it? I hope I'd hope

00:16:26.445 --> 00:16:27.805
<v Speaker 1>you'd get to the point of

00:16:28.605 --> 00:16:31.084
<v Speaker 1>running the update, changing the deployment, and then

00:16:31.084 --> 00:16:32.445
<v Speaker 1>being like, where are my pods? Where are

00:16:32.445 --> 00:16:33.325
<v Speaker 1>my where are my pods?

00:16:34.190 --> 00:16:37.550
<v Speaker 2>Yes. Okay. Bear with I'm I'm 54 clusters

00:16:37.550 --> 00:16:38.990
<v Speaker 0>in at this point. You think I'm gonna

00:16:38.990 --> 00:16:39.790
<v Speaker 0>miss that?

00:16:40.990 --> 00:16:42.430
<v Speaker 1>No. I'm sure I'm not the most creative

00:16:42.430 --> 00:16:42.830
<v Speaker 1>person.

00:16:54.565 --> 00:16:58.245
<v Speaker 0>So that looks okay. And when we ran

00:16:58.245 --> 00:17:00.805
<v Speaker 0>the get pods, it was actually in a

00:17:00.510 --> 00:17:03.390
<v Speaker 0>status of pending, and pending really only means

00:17:04.589 --> 00:17:05.549
<v Speaker 0>one thing,

00:17:06.589 --> 00:17:08.829
<v Speaker 0>especially for a static pod which doesn't have

00:17:08.829 --> 00:17:11.230
<v Speaker 0>access to a lot of the Kubernetes primitives.

00:17:12.750 --> 00:17:14.270
<v Speaker 0>Did we have a scheduler running?

00:17:30.010 --> 00:17:32.490
<v Speaker 2>Yeah. Yeah. We may want to describe that

00:17:32.490 --> 00:17:34.570
<v Speaker 0>controller manager then and see.

00:17:38.090 --> 00:17:39.210
<v Speaker 0>Oh, wait. It's running now.

00:17:45.315 --> 00:17:45.875
<v Speaker 1>What's

00:17:47.554 --> 00:17:50.115
<v Speaker 1>Eleven seconds. That wasn't me. What are you

00:17:50.115 --> 00:17:51.715
<v Speaker 1>doing? There's, like, a lot of things are

00:17:51.715 --> 00:17:52.674
<v Speaker 2>restarting.

00:17:55.020 --> 00:17:56.460
<v Speaker 2>So I wonder

00:17:57.260 --> 00:18:00.779
<v Speaker 2>if there is something that's causing them

00:18:01.740 --> 00:18:03.260
<v Speaker 2>all to restart.

00:18:14.605 --> 00:18:15.804
<v Speaker 1>Yeah.

00:18:17.485 --> 00:18:19.085
<v Speaker 0>Old forgotten limit range.

00:18:24.090 --> 00:18:27.049
<v Speaker 0>Only known by open open shift operators.

00:18:27.370 --> 00:18:28.090
<v Speaker 2>Mhmm.

00:18:28.250 --> 00:18:30.090
<v Speaker 2>Yes.

00:18:33.610 --> 00:18:35.289
<v Speaker 0>Can you run get pods all again? I'm

00:18:35.289 --> 00:18:36.570
<v Speaker 0>I'm just curious if

00:18:36.970 --> 00:18:38.570
<v Speaker 0>we have more things restarting.

00:18:41.965 --> 00:18:44.445
<v Speaker 0>Okay. That controller manager does appear

00:18:45.965 --> 00:18:47.245
<v Speaker 0>to be alright.

00:18:48.045 --> 00:18:49.725
<v Speaker 2>Was it just maybe

00:18:50.525 --> 00:18:51.725
<v Speaker 2>at CD?

00:18:51.725 --> 00:18:52.845
<v Speaker 2>Like, I

00:18:53.165 --> 00:18:53.565
<v Speaker 2>don't know.

00:18:54.820 --> 00:18:56.739
<v Speaker 2>The fact that it was done.

00:18:57.299 --> 00:18:59.940
<v Speaker 0>So, yeah, it could be HCD related. So

00:18:59.940 --> 00:19:01.700
<v Speaker 0>let's assume it's okay just now, which means

00:19:01.700 --> 00:19:04.340
<v Speaker 0>we probably wanna focus on our clustered and

00:19:04.340 --> 00:19:05.619
<v Speaker 0>post code applications.

00:19:05.779 --> 00:19:06.339
<v Speaker 0>So,

00:19:06.659 --> 00:19:08.179
<v Speaker 0>I mean, our clustered and

00:19:09.434 --> 00:19:11.995
<v Speaker 0>complete, and we have one pending. What's

00:19:11.995 --> 00:19:13.914
<v Speaker 2>this web six x?

00:19:14.235 --> 00:19:15.595
<v Speaker 0>I think that's a decoy.

00:19:20.830 --> 00:19:21.550
<v Speaker 1>What

00:19:31.550 --> 00:19:33.150
<v Speaker 2>do you mean by deco? Like

00:19:34.030 --> 00:19:36.110
<v Speaker 0>I I think Matt has just deployed them

00:19:36.110 --> 00:19:37.470
<v Speaker 0>to

00:19:36.965 --> 00:19:38.085
<v Speaker 0>confuse us.

00:19:40.245 --> 00:19:43.365
<v Speaker 0>Russell asks, how can the clustered pod be

00:19:43.365 --> 00:19:44.164
<v Speaker 0>complete?

00:19:47.925 --> 00:19:49.765
<v Speaker 0>So it generally means that the process actually

00:19:49.765 --> 00:19:50.325
<v Speaker 0>is zero.

00:19:52.820 --> 00:19:54.580
<v Speaker 0>So it's either not our image. It's been

00:19:54.580 --> 00:19:55.540
<v Speaker 0>swapped out.

00:19:57.860 --> 00:19:58.580
<v Speaker 0>Yeah.

00:19:59.300 --> 00:20:00.340
<v Speaker 0>Hard to tell right now.

00:20:06.485 --> 00:20:09.124
<v Speaker 0>Was that the web one you described there?

00:20:09.365 --> 00:20:11.765
<v Speaker 0>Yeah. Yeah. Okay. So that's just an engine

00:20:11.765 --> 00:20:12.484
<v Speaker 0>export,

00:20:12.804 --> 00:20:13.205
<v Speaker 0>I think.

00:20:19.000 --> 00:20:21.080
<v Speaker 0>I would suggest passing it. Just doing the

00:20:21.080 --> 00:20:22.440
<v Speaker 0>big delete button on it.

00:20:22.919 --> 00:20:24.919
<v Speaker 0>Nothing good ever came from random workloads in

00:20:24.919 --> 00:20:25.799
<v Speaker 0>my cluster.

00:20:27.799 --> 00:20:30.760
<v Speaker 2>I mean, it's

00:20:35.375 --> 00:20:36.175
<v Speaker 2>okay.

00:20:36.175 --> 00:20:38.735
<v Speaker 2>I'm gonna delete it, but I'm wondering what

00:20:38.735 --> 00:20:39.775
<v Speaker 2>responded.

00:20:41.775 --> 00:20:43.855
<v Speaker 0>Well, the pod name was interesting. Right? It

00:20:43.855 --> 00:20:45.535
<v Speaker 0>wasn't a pod tuple.

00:20:45.615 --> 00:20:46.975
<v Speaker 0>It's more of a

00:20:47.820 --> 00:20:49.340
<v Speaker 0>daemon set tuple.

00:20:49.500 --> 00:20:51.740
<v Speaker 0>I think he's just deployed a daemon set

00:20:52.700 --> 00:20:55.660
<v Speaker 0>called web. Yeah. There we go. Okay. Let's

00:20:55.660 --> 00:20:56.860
<v Speaker 2>delete that. Yeah.

00:21:03.865 --> 00:21:06.344
<v Speaker 2>Okay. Matt, you look sad about that.

00:21:06.825 --> 00:21:08.184
<v Speaker 1>That was my Tumblr.

00:21:12.904 --> 00:21:15.385
<v Speaker 2>Okay. I mean, we don't see any more

00:21:15.385 --> 00:21:16.345
<v Speaker 2>restarts,

00:21:16.345 --> 00:21:19.520
<v Speaker 2>I don't think. So that's yeah. You're right.

00:21:20.080 --> 00:21:20.640
<v Speaker 0>So

00:21:21.440 --> 00:21:23.120
<v Speaker 2>let's look at

00:21:26.400 --> 00:21:27.760
<v Speaker 2>let's look maybe

00:21:28.560 --> 00:21:31.200
<v Speaker 0>the image has been changed. I think we're

00:21:32.095 --> 00:21:33.854
<v Speaker 0>I think we're thinking that too.

00:21:40.015 --> 00:21:40.734
<v Speaker 1>Okay.

00:21:45.695 --> 00:21:46.895
<v Speaker 1>So

00:21:50.710 --> 00:21:52.389
<v Speaker 2>I guess I did

00:21:53.350 --> 00:21:54.469
<v Speaker 2>s t s.

00:21:56.070 --> 00:21:56.950
<v Speaker 2>What was it?

00:22:09.815 --> 00:22:10.455
<v Speaker 2>Okay.

00:22:13.759 --> 00:22:15.840
<v Speaker 0>Oracle's flying through this. I could just go

00:22:15.840 --> 00:22:17.200
<v Speaker 0>have my dinner and come back, you'll have

00:22:17.200 --> 00:22:17.919
<v Speaker 0>it fixed.

00:22:18.240 --> 00:22:18.879
<v Speaker 0>I

00:22:19.120 --> 00:22:22.000
<v Speaker 2>don't know. I'm I'm scared of that that

00:22:22.000 --> 00:22:23.919
<v Speaker 2>you see it's coming before.

00:22:25.120 --> 00:22:27.679
<v Speaker 0>Alright. Well, we're just about halfway through our

00:22:27.679 --> 00:22:29.575
<v Speaker 0>allotted time. So you've got just over twenty

00:22:29.575 --> 00:22:32.215
<v Speaker 0>minutes. You're doing well. You're doing very well.

00:22:32.455 --> 00:22:33.254
<v Speaker 0>So

00:22:36.215 --> 00:22:37.174
<v Speaker 2>I don't

00:22:37.575 --> 00:22:39.655
<v Speaker 2>am I missing something? I am not seeing

00:22:39.655 --> 00:22:41.174
<v Speaker 2>here request for limits.

00:22:42.090 --> 00:22:44.009
<v Speaker 2>Did they just pass through them?

00:22:49.610 --> 00:22:52.090
<v Speaker 0>You are correct. There's nothing in that manifest

00:22:52.090 --> 00:22:53.529
<v Speaker 0>that's setting the limits.

00:22:53.770 --> 00:22:55.529
<v Speaker 0>So what else could be modifying

00:22:56.010 --> 00:22:56.490
<v Speaker 0>them?

00:22:59.755 --> 00:23:03.034
<v Speaker 2>Another common thing, sensor to admission

00:23:03.595 --> 00:23:07.274
<v Speaker 2>webhooks or something. Yeah. Check the mutation webhook

00:23:07.274 --> 00:23:07.755
<v Speaker 0>configuration.

00:23:10.790 --> 00:23:11.510
<v Speaker 2>Me?

00:23:15.190 --> 00:23:18.150
<v Speaker 0>They're a breaker favorite on clustered.

00:23:18.550 --> 00:23:19.430
<v Speaker 1>Okay. They are.

00:23:24.835 --> 00:23:25.475
<v Speaker 0>Got the.

00:23:26.595 --> 00:23:27.554
<v Speaker 2>Oh, yeah.

00:23:28.595 --> 00:23:30.835
<v Speaker 1>EBPF for the control plane one.

00:23:31.794 --> 00:23:33.635
<v Speaker 0>We've had one EBPF breaks in the bar

00:23:33.635 --> 00:23:36.640
<v Speaker 0>that was brutal, absolutely brutal. Yeah. Know.

00:23:38.560 --> 00:23:41.200
<v Speaker 0>Okay. So there's not a mutating webhook.

00:23:43.840 --> 00:23:44.559
<v Speaker 0>So

00:23:49.035 --> 00:23:50.395
<v Speaker 1>I'm not a terrible person.

00:24:02.890 --> 00:24:05.050
<v Speaker 0>So what are you looking for now, Marco?

00:24:07.450 --> 00:24:08.970
<v Speaker 2>Can't you specify

00:24:08.970 --> 00:24:12.010
<v Speaker 2>web static webhooks like here? Oh, yes. You

00:24:12.010 --> 00:24:14.650
<v Speaker 0>can. So but there's only the enabled admission

00:24:14.650 --> 00:24:15.530
<v Speaker 0>plugins.

00:24:15.610 --> 00:24:17.315
<v Speaker 0>So it's only node restriction,

00:24:17.395 --> 00:24:19.235
<v Speaker 0>which is which is okay. Yeah. I don't

00:24:19.235 --> 00:24:22.595
<v Speaker 2>see anything. So I'm just thinking now what

00:24:22.595 --> 00:24:24.675
<v Speaker 2>are let's take a look at that here

00:24:24.675 --> 00:24:25.395
<v Speaker 2>again.

00:24:27.075 --> 00:24:27.955
<v Speaker 2>What was the error?

00:24:30.929 --> 00:24:33.409
<v Speaker 0>And you checked for quotas and limit ranges,

00:24:33.409 --> 00:24:35.729
<v Speaker 0>didn't you? And there was none. Yeah. Okay.

00:24:36.610 --> 00:24:37.330
<v Speaker 2>So

00:24:40.690 --> 00:24:43.009
<v Speaker 0>So can we see the request and

00:24:43.090 --> 00:24:44.130
<v Speaker 0>let me scroll up.

00:24:51.625 --> 00:24:52.585
<v Speaker 0>I actually

00:24:54.905 --> 00:24:57.385
<v Speaker 0>the node was low on resource of thermal

00:24:57.385 --> 00:24:58.025
<v Speaker 0>storage.

00:25:05.040 --> 00:25:06.640
<v Speaker 0>This may be something on one of the

00:25:06.640 --> 00:25:09.520
<v Speaker 0>worker notes instead. Yeah. Okay. So let's get

00:25:09.600 --> 00:25:11.680
<v Speaker 2>let's see something here. Me to open a

00:25:11.680 --> 00:25:13.280
<v Speaker 0>new session, or do you think you can

00:25:13.280 --> 00:25:14.640
<v Speaker 0>do it from the control plan?

00:25:15.040 --> 00:25:16.455
<v Speaker 2>One sec.

00:25:18.855 --> 00:25:19.575
<v Speaker 0>So

00:25:31.120 --> 00:25:34.559
<v Speaker 2>Okay. So it's scheduled on worker one.

00:25:35.600 --> 00:25:37.119
<v Speaker 2>Worker one is ready.

00:25:38.960 --> 00:25:41.279
<v Speaker 2>What if we just, like, delete it

00:25:41.805 --> 00:25:43.805
<v Speaker 2>and see if it gets rescheduled to work

00:25:43.805 --> 00:25:45.565
<v Speaker 2>or two? Is that gonna work?

00:25:45.965 --> 00:25:47.245
<v Speaker 0>Yeah. Go for it.

00:25:47.565 --> 00:25:48.685
<v Speaker 0>I mean, you could always

00:25:48.925 --> 00:25:50.925
<v Speaker 0>edit oh, well, we can come to that

00:25:50.925 --> 00:25:52.285
<v Speaker 0>later if we need to. Let's do it

00:25:52.285 --> 00:25:53.565
<v Speaker 0>this way first. Yeah.

00:25:56.620 --> 00:25:58.460
<v Speaker 0>Kevin says one of the workers was not

00:25:58.460 --> 00:26:00.860
<v Speaker 0>ready ready. Maybe it got scheduled there. It

00:26:00.860 --> 00:26:03.500
<v Speaker 0>appears Matt's worker has fixed itself. I'm not

00:26:03.500 --> 00:26:04.139
<v Speaker 0>sure how.

00:26:05.180 --> 00:26:08.140
<v Speaker 1>No. I'm not sure how. They're surprisingly resilient

00:26:08.140 --> 00:26:08.620
<v Speaker 1>things.

00:26:10.765 --> 00:26:11.485
<v Speaker 2>Oh,

00:26:11.645 --> 00:26:12.445
<v Speaker 2>is it gonna

00:26:15.005 --> 00:26:16.524
<v Speaker 2>what state was it in?

00:26:16.925 --> 00:26:17.485
<v Speaker 2>Oh, okay.

00:26:18.205 --> 00:26:18.845
<v Speaker 2>Okay.

00:26:19.805 --> 00:26:21.565
<v Speaker 0>Navin's pointing out the

00:26:21.965 --> 00:26:24.205
<v Speaker 0>and are under resource issue, which we're looking

00:26:24.205 --> 00:26:24.685
<v Speaker 0>into now.

00:26:26.340 --> 00:26:28.419
<v Speaker 1>I was really tempted to break one.

00:26:31.220 --> 00:26:33.220
<v Speaker 1>I was really tempted to break the finalizers

00:26:33.220 --> 00:26:34.980
<v Speaker 1>just to just to really annoy you when

00:26:34.980 --> 00:26:36.340
<v Speaker 1>you're trying to delete things, but I didn't

00:26:36.340 --> 00:26:38.340
<v Speaker 1>get around to it. Sorry. I've got a

00:26:38.340 --> 00:26:40.580
<v Speaker 0>nice alias for that now called nuke from

00:26:40.580 --> 00:26:40.980
<v Speaker 0>orbit.

00:26:41.385 --> 00:26:44.345
<v Speaker 0>So that patches out all the finalizers.

00:26:44.985 --> 00:26:47.465
<v Speaker 0>Let's edit the deployment, Barco, and just add

00:26:47.465 --> 00:26:49.304
<v Speaker 0>node name to the spec.

00:26:49.945 --> 00:26:52.105
<v Speaker 2>And Well well, it's running now.

00:26:52.265 --> 00:26:53.145
<v Speaker 0>Oh, is it?

00:26:54.105 --> 00:26:54.425
<v Speaker 2>Yeah.

00:26:55.770 --> 00:26:57.289
<v Speaker 2>I'm not sure why,

00:26:59.130 --> 00:27:01.130
<v Speaker 2>but it seems to be okay.

00:27:01.290 --> 00:27:01.929
<v Speaker 2>So

00:27:05.850 --> 00:27:08.170
<v Speaker 0>Alright. Let's just go to cluster. The other

00:27:08.170 --> 00:27:09.530
<v Speaker 2>ones and see what happens.

00:27:10.425 --> 00:27:12.105
<v Speaker 0>Yeah. Go for it. Why not?

00:27:14.505 --> 00:27:16.505
<v Speaker 0>See, delete and fix these everything.

00:27:16.745 --> 00:27:18.345
<v Speaker 0>I know my chat are laughing at this,

00:27:18.345 --> 00:27:19.305
<v Speaker 0>but it does work.

00:27:24.270 --> 00:27:25.790
<v Speaker 2>I mean, we're gonna have to find out

00:27:25.790 --> 00:27:28.270
<v Speaker 2>what the breaks were because I feel like

00:27:28.270 --> 00:27:28.990
<v Speaker 2>we're

00:27:29.310 --> 00:27:30.750
<v Speaker 2>not really fixing

00:27:31.070 --> 00:27:33.230
<v Speaker 2>some of these issues. Like, I don't understand

00:27:33.230 --> 00:27:34.430
<v Speaker 2>what fixed the

00:27:38.435 --> 00:27:40.355
<v Speaker 0>Yeah. We'll we'll see what happens.

00:27:48.515 --> 00:27:49.155
<v Speaker 0>Running.

00:27:52.750 --> 00:27:53.469
<v Speaker 2>Okay.

00:28:03.230 --> 00:28:05.789
<v Speaker 2>Right. So when I upgrade it

00:28:07.925 --> 00:28:09.525
<v Speaker 2>to version two.

00:28:11.285 --> 00:28:12.005
<v Speaker 0>Yep.

00:28:16.085 --> 00:28:16.725
<v Speaker 1>Okay.

00:28:32.150 --> 00:28:34.230
<v Speaker 0>I think I'm gonna have to describe that.

00:28:38.405 --> 00:28:39.525
<v Speaker 2>Well, let's

00:28:39.525 --> 00:28:39.845
<v Speaker 2>just

00:28:54.060 --> 00:28:56.780
<v Speaker 2>I'm guessing the one that's running is

00:28:57.020 --> 00:28:57.820
<v Speaker 2>the old one.

00:29:06.335 --> 00:29:07.215
<v Speaker 0>Unscheduled

00:29:07.215 --> 00:29:08.174
<v Speaker 0>with no events.

00:29:19.990 --> 00:29:21.989
<v Speaker 2>I'm a little confused.

00:29:22.950 --> 00:29:25.029
<v Speaker 0>How's the bag? I'm just I'm I'm trying

00:29:25.029 --> 00:29:27.429
<v Speaker 2>to understand what's happened here. Okay. So

00:29:27.750 --> 00:29:29.590
<v Speaker 2>we have one running.

00:29:34.235 --> 00:29:36.315
<v Speaker 0>Is our scheduler flapping again?

00:29:37.515 --> 00:29:38.315
<v Speaker 2>Yeah.

00:29:38.315 --> 00:29:40.475
<v Speaker 2>We'll we'll take a look. Just

00:29:43.515 --> 00:29:45.995
<v Speaker 2>so this is

00:29:48.529 --> 00:29:49.649
<v Speaker 2>region one.

00:29:58.529 --> 00:30:01.330
<v Speaker 0>We do have a schedule there. Something's happening

00:30:01.330 --> 00:30:02.850
<v Speaker 2>with the resources,

00:30:04.635 --> 00:30:06.315
<v Speaker 2>I think, and they're

00:30:09.755 --> 00:30:11.835
<v Speaker 2>I wonder if I just do this.

00:30:24.190 --> 00:30:25.950
<v Speaker 1>It's Dean, the only one that works. That's

00:30:25.950 --> 00:30:26.589
<v Speaker 1>brave.

00:30:29.549 --> 00:30:32.269
<v Speaker 0>It came back as well. It did. It

00:30:32.269 --> 00:30:32.429
<v Speaker 2>did.

00:30:48.540 --> 00:30:50.860
<v Speaker 2>I assume this should be v two,

00:30:51.260 --> 00:30:52.139
<v Speaker 2>I hope.

00:30:52.540 --> 00:30:53.419
<v Speaker 2>Oh, no.

00:30:55.500 --> 00:30:57.340
<v Speaker 0>No. Because it's the replica set for the

00:30:57.340 --> 00:31:00.860
<v Speaker 0>old one is still active. So we have

00:31:00.075 --> 00:31:02.635
<v Speaker 0>an unhealthy new replica set with v two,

00:31:02.635 --> 00:31:04.475
<v Speaker 0>which can't be scheduled. So the old replica

00:31:04.475 --> 00:31:06.075
<v Speaker 0>set is continuing to schedule

00:31:06.315 --> 00:31:07.114
<v Speaker 0>pods.

00:31:07.835 --> 00:31:10.635
<v Speaker 0>Now our new replica set and the pods

00:31:10.635 --> 00:31:12.634
<v Speaker 0>created from is currently

00:31:12.715 --> 00:31:15.820
<v Speaker 0>pending. Now, that usually means that the scheduler

00:31:15.820 --> 00:31:17.340
<v Speaker 0>hasn't assigned a node

00:31:17.500 --> 00:31:20.139
<v Speaker 0>or a volume can't be mounted

00:31:20.300 --> 00:31:22.620
<v Speaker 0>or there are resource constraints.

00:31:23.340 --> 00:31:25.180
<v Speaker 0>Normally, we would see something in the events

00:31:25.180 --> 00:31:26.220
<v Speaker 0>for that, and we are not.

00:31:28.155 --> 00:31:29.835
<v Speaker 0>My

00:31:30.315 --> 00:31:32.075
<v Speaker 0>intuition is telling me

00:31:35.275 --> 00:31:35.755
<v Speaker 0>interesting.

00:31:40.810 --> 00:31:42.810
<v Speaker 0>Maybe look at the scheduler manifest. I don't

00:31:42.810 --> 00:31:43.770
<v Speaker 0>know if we did that yet.

00:31:54.215 --> 00:31:56.215
<v Speaker 0>It started at the top, so I'm gonna

00:31:56.215 --> 00:31:57.975
<v Speaker 0>trust that he's not modified it.

00:31:59.095 --> 00:32:01.255
<v Speaker 1>Maybe that first one was a red heron.

00:32:02.695 --> 00:32:04.534
<v Speaker 2>Maybe I am an elite hacker.

00:32:05.255 --> 00:32:07.390
<v Speaker 0>No. Our mission is, I mean, we don't

00:32:07.390 --> 00:32:09.310
<v Speaker 0>really need to fax anything that Matt's done.

00:32:09.310 --> 00:32:11.310
<v Speaker 0>Like, we can bypass the scheduler, which I'm

00:32:11.310 --> 00:32:12.910
<v Speaker 0>tempted for us to do just to see

00:32:12.910 --> 00:32:14.590
<v Speaker 0>if it works, and then we can always

00:32:14.590 --> 00:32:16.030
<v Speaker 0>try and work out what the issue is.

00:32:16.030 --> 00:32:17.630
<v Speaker 0>So as as you recall, Marco.

00:32:20.750 --> 00:32:22.864
<v Speaker 2>I'm just trying to think.

00:32:24.144 --> 00:32:27.664
<v Speaker 2>It seems like something's happening with the resources.

00:32:27.664 --> 00:32:29.904
<v Speaker 2>I'm trying to think what

00:32:30.544 --> 00:32:34.065
<v Speaker 2>what are the ways you can manipulate resources,

00:32:34.750 --> 00:32:38.590
<v Speaker 2>either available to Kubernetes from a node or

00:32:41.950 --> 00:32:42.749
<v Speaker 2>but,

00:32:42.830 --> 00:32:43.950
<v Speaker 2>like, we checked

00:32:44.590 --> 00:32:46.029
<v Speaker 2>we checked limit.

00:32:46.030 --> 00:32:47.630
<v Speaker 0>Did you describe worker one?

00:32:48.274 --> 00:32:51.075
<v Speaker 0>Like, describe the node for the API server?

00:32:52.115 --> 00:32:53.315
<v Speaker 0>I don't know if we did that.

00:33:06.210 --> 00:33:07.090
<v Speaker 2>Let's

00:33:08.049 --> 00:33:10.929
<v Speaker 2>let's check this and let's look at some

00:33:10.929 --> 00:33:13.010
<v Speaker 2>of the logs. And then if we don't

00:33:13.010 --> 00:33:16.435
<v Speaker 2>find something quickly there, we'll we'll try to,

00:33:16.435 --> 00:33:17.715
<v Speaker 2>I guess, your way

00:33:17.955 --> 00:33:21.155
<v Speaker 2>of just pass bypassing the scheduler.

00:33:22.275 --> 00:33:24.995
<v Speaker 0>Yeah. Look at that. We may have

00:33:28.540 --> 00:33:30.060
<v Speaker 0>a disk being filled somewhere.

00:33:40.085 --> 00:33:42.245
<v Speaker 0>And if I remember correctly at the start,

00:33:42.245 --> 00:33:44.085
<v Speaker 0>worker one was unready

00:33:44.245 --> 00:33:45.365
<v Speaker 0>was not ready.

00:33:48.725 --> 00:33:49.365
<v Speaker 2>So

00:33:49.525 --> 00:33:52.485
<v Speaker 2>sorry. And and, like, class, what did you

00:33:53.280 --> 00:33:54.880
<v Speaker 2>where are you looking at here?

00:33:55.280 --> 00:33:56.480
<v Speaker 0>So

00:33:56.560 --> 00:33:59.120
<v Speaker 0>we've got a warning about the disk space,

00:33:59.120 --> 00:34:01.360
<v Speaker 0>although it is a couple of hours old.

00:34:03.360 --> 00:34:05.280
<v Speaker 2>Oh, okay. But it does seem to be

00:34:05.280 --> 00:34:07.040
<v Speaker 0>okay as of nineteen minutes ago when we

00:34:07.280 --> 00:34:09.014
<v Speaker 0>like, because that was a not ready node,

00:34:09.014 --> 00:34:10.775
<v Speaker 0>and now it is ready, which is particularly

00:34:10.775 --> 00:34:11.574
<v Speaker 0>strange.

00:34:13.255 --> 00:34:14.855
<v Speaker 0>But that was the worker, not the control

00:34:14.855 --> 00:34:15.415
<v Speaker 0>plane.

00:34:16.054 --> 00:34:17.815
<v Speaker 0>Maybe we should jump on to worker one

00:34:17.815 --> 00:34:18.375
<v Speaker 0>and

00:34:19.494 --> 00:34:22.135
<v Speaker 2>Oh, right. Walk around? Yeah.

00:34:22.614 --> 00:34:24.310
<v Speaker 2>Let's let's do that.

00:34:24.710 --> 00:34:26.630
<v Speaker 0>Okay. I've opened the session. Feel free just

00:34:26.630 --> 00:34:27.750
<v Speaker 0>to jump in.

00:34:29.030 --> 00:34:30.630
<v Speaker 0>We've got ten minutes.

00:34:31.829 --> 00:34:33.589
<v Speaker 0>But I see we have we we snoop

00:34:33.589 --> 00:34:35.270
<v Speaker 0>around for five more, and then we bypass

00:34:35.270 --> 00:34:36.389
<v Speaker 0>the scheduler

00:34:40.725 --> 00:34:42.165
<v Speaker 0>Just because it'll kill me if I see

00:34:42.165 --> 00:34:43.045
<v Speaker 0>Matt wins.

00:34:45.525 --> 00:34:46.805
<v Speaker 1>Should've

00:34:46.885 --> 00:34:48.405
<v Speaker 1>brought a wee dram to just

00:34:49.205 --> 00:34:50.324
<v Speaker 1>it's almost 6¢.

00:34:57.950 --> 00:34:59.789
<v Speaker 0>So if you're on a a DF, does

00:34:59.789 --> 00:35:00.670
<v Speaker 0>the desk look okay?

00:35:06.885 --> 00:35:08.085
<v Speaker 0>It does indeed.

00:35:09.365 --> 00:35:10.805
<v Speaker 0>Do wanna add a dash I just to

00:35:10.805 --> 00:35:11.845
<v Speaker 0>check the I nodes?

00:35:13.605 --> 00:35:15.205
<v Speaker 0>Yes. Signed. Okay.

00:35:16.885 --> 00:35:18.805
<v Speaker 0>I'm assuming you had something running on that

00:35:18.805 --> 00:35:21.045
<v Speaker 0>node at some point, Matt, that was

00:35:22.100 --> 00:35:24.180
<v Speaker 0>doing something nefarious with the disk. Right?

00:35:25.140 --> 00:35:26.980
<v Speaker 1>Yeah. Yeah. I'll, yeah, I'll give it away.

00:35:26.980 --> 00:35:29.620
<v Speaker 1>I was that's why I think access to

00:35:29.620 --> 00:35:31.940
<v Speaker 1>node two is is lost. So I I

00:35:31.940 --> 00:35:34.375
<v Speaker 1>I tried to break both nodes. I logged

00:35:34.375 --> 00:35:36.135
<v Speaker 1>out of two and couldn't get back in.

00:35:36.135 --> 00:35:37.495
<v Speaker 1>I realized I'd broken it a bit too

00:35:37.495 --> 00:35:39.415
<v Speaker 1>hard. I still had a shell on node

00:35:39.415 --> 00:35:40.935
<v Speaker 1>one, so I undid

00:35:41.095 --> 00:35:44.375
<v Speaker 1>the thing that was in the. Okay.

00:35:44.615 --> 00:35:46.215
<v Speaker 1>Yeah. So that actually is a red herring,

00:35:46.215 --> 00:35:48.135
<v Speaker 1>I actually can't explain why the thing's still

00:35:48.135 --> 00:35:50.020
<v Speaker 1>having issues. Well, I mean, I did another

00:35:50.020 --> 00:35:51.539
<v Speaker 1>couple I did another couple of things on

00:35:51.539 --> 00:35:52.900
<v Speaker 1>the notes, but it's not I mean, it's

00:35:52.900 --> 00:35:53.940
<v Speaker 1>it's not that.

00:35:55.539 --> 00:35:56.580
<v Speaker 0>Okay.

00:36:00.339 --> 00:36:03.195
<v Speaker 2>So I'm confused. Are you saying that you're

00:36:03.195 --> 00:36:06.315
<v Speaker 2>expecting this replica set issues that we're having

00:36:06.315 --> 00:36:08.315
<v Speaker 2>that that's a different problem?

00:36:09.835 --> 00:36:12.315
<v Speaker 1>I can't remember exactly why.

00:36:12.635 --> 00:36:13.675
<v Speaker 0>What would we add up Yeah.

00:36:15.195 --> 00:36:16.635
<v Speaker 1>I think you are expecting

00:36:17.360 --> 00:36:18.960
<v Speaker 1>yeah. I think you are expecting what you're

00:36:18.960 --> 00:36:19.760
<v Speaker 1>seeing. Yeah.

00:36:20.320 --> 00:36:22.480
<v Speaker 0>Alright. Will we bypass the scheduler and then

00:36:22.480 --> 00:36:23.360
<v Speaker 0>work it out?

00:36:24.320 --> 00:36:26.400
<v Speaker 0>Or you you really wanna work it out?

00:36:26.400 --> 00:36:28.000
<v Speaker 0>I can tell. Okay.

00:36:28.880 --> 00:36:31.360
<v Speaker 2>No. I think you can you take it

00:36:31.360 --> 00:36:33.805
<v Speaker 2>over? I'm I'm kind of, like, stuck. So

00:36:33.805 --> 00:36:36.525
<v Speaker 2>I'll, like Well, let's edit the cluster deployment.

00:36:36.525 --> 00:36:37.645
<v Speaker 0>Right? And

00:36:38.205 --> 00:36:40.045
<v Speaker 0>we'll jump down to the pods back.

00:36:40.925 --> 00:36:43.325
<v Speaker 1>Straight out of the CKA, manual scheduling.

00:36:44.045 --> 00:36:45.725
<v Speaker 0>We're just gonna do a mod name.

00:36:46.329 --> 00:36:48.809
<v Speaker 0>One two one six five. Because it's a

00:36:48.970 --> 00:36:51.210
<v Speaker 2>So you wanna schedule it to a specific,

00:36:51.210 --> 00:36:53.530
<v Speaker 2>like, different node? Yeah. I'm just gonna hard

00:36:53.530 --> 00:36:54.970
<v Speaker 0>code it so we don't need the scheduler.

00:36:54.970 --> 00:36:56.890
<v Speaker 0>Like, I'm assuming that's why it's pending. One,

00:36:56.890 --> 00:36:57.930
<v Speaker 0>though. Sorry?

00:36:58.625 --> 00:37:00.385
<v Speaker 2>But wasn't it already in a work room

00:37:00.385 --> 00:37:02.224
<v Speaker 2>one? No. It's not scheduled to a node

00:37:02.224 --> 00:37:02.785
<v Speaker 0>yet.

00:37:04.305 --> 00:37:05.665
<v Speaker 0>The the new one isn't

00:37:07.265 --> 00:37:08.385
<v Speaker 2>Okay. I think

00:37:09.505 --> 00:37:11.425
<v Speaker 0>No. See, now it's container created. Is completely

00:37:11.425 --> 00:37:11.744
<v Speaker 2>wrong.

00:37:12.270 --> 00:37:14.910
<v Speaker 0>There was something the scheduler wasn't assigning a

00:37:14.910 --> 00:37:16.430
<v Speaker 0>node to it, and I don't know why.

00:37:16.750 --> 00:37:18.430
<v Speaker 0>But, like, we can just bypass it and

00:37:18.430 --> 00:37:20.110
<v Speaker 0>see if we get it working. And then,

00:37:20.510 --> 00:37:21.870
<v Speaker 0>like, yeah, now we I I

00:37:22.590 --> 00:37:25.070
<v Speaker 2>yes. Now I I for some reason, I

00:37:25.070 --> 00:37:26.510
<v Speaker 2>was thinking it wasn't

00:37:27.365 --> 00:37:29.605
<v Speaker 2>like, there was something wrong with that node,

00:37:29.605 --> 00:37:31.765
<v Speaker 2>but I I yeah. I I missed

00:37:32.325 --> 00:37:34.645
<v Speaker 2>missed it wasn't even being assigned. Yeah. Of

00:37:34.645 --> 00:37:35.765
<v Speaker 0>course. I mean, I have no idea why

00:37:35.765 --> 00:37:37.525
<v Speaker 0>the scheduler wasn't doing that.

00:37:38.645 --> 00:37:40.085
<v Speaker 0>But it was for the old rep, like

00:37:40.085 --> 00:37:41.365
<v Speaker 0>I said. It's really, like

00:37:42.140 --> 00:37:44.460
<v Speaker 0>yeah. I'm I'm not entirely sure what happened.

00:37:44.460 --> 00:37:46.620
<v Speaker 0>Shall we test our clustered application?

00:37:47.260 --> 00:37:47.980
<v Speaker 2>Yep.

00:37:51.980 --> 00:37:53.420
<v Speaker 1>Can you hear me say?

00:37:53.660 --> 00:37:54.140
<v Speaker 1>Aye.

00:37:55.164 --> 00:37:57.645
<v Speaker 0>Alright. So we cannot speak to Postgres.

00:37:57.645 --> 00:37:59.244
<v Speaker 0>So we're not done yet, and we have

00:37:59.244 --> 00:38:00.365
<v Speaker 0>seven minutes to go.

00:38:02.605 --> 00:38:02.845
<v Speaker 0>Okay.

00:38:07.599 --> 00:38:09.839
<v Speaker 1>I wonder which one of my hacks did

00:38:09.839 --> 00:38:10.480
<v Speaker 1>that

00:38:10.800 --> 00:38:12.400
<v Speaker 1>because this was all done in, I'm not

00:38:12.400 --> 00:38:14.880
<v Speaker 1>gonna lie, quite a compressed time frame. I

00:38:14.880 --> 00:38:16.160
<v Speaker 1>I I threw a couple of things at

00:38:16.160 --> 00:38:17.440
<v Speaker 1>the wall. Like, I'm glad one of them

00:38:17.440 --> 00:38:17.760
<v Speaker 1>worked.

00:38:22.205 --> 00:38:24.765
<v Speaker 2>Sorry. The the connection string is hard coded

00:38:24.765 --> 00:38:26.365
<v Speaker 2>here. Yeah. It just tries to speak to

00:38:26.365 --> 00:38:27.645
<v Speaker 0>the service Postgres.

00:38:27.645 --> 00:38:29.005
<v Speaker 0>So you wanna make sure that we have

00:38:29.005 --> 00:38:31.405
<v Speaker 0>that service that has endpoints, etcetera, just, you

00:38:31.405 --> 00:38:32.445
<v Speaker 0>know, basic

00:38:32.845 --> 00:38:33.485
<v Speaker 0>and and

00:38:35.070 --> 00:38:36.910
<v Speaker 0>see. So

00:38:37.230 --> 00:38:40.030
<v Speaker 2>we have postgres We do have an endpoint.

00:38:40.030 --> 00:38:40.510
<v Speaker 0>Yeah.

00:38:41.150 --> 00:38:42.190
<v Speaker 2>And then

00:38:47.325 --> 00:38:48.765
<v Speaker 2>So that's

00:38:52.685 --> 00:38:53.805
<v Speaker 2>that looks

00:38:53.965 --> 00:38:54.685
<v Speaker 2>okay.

00:38:55.244 --> 00:38:55.885
<v Speaker 2>Right?

00:38:57.645 --> 00:38:58.045
<v Speaker 0>Yep.

00:39:01.590 --> 00:39:04.150
<v Speaker 1>You've just been paged. It's 3AM. We're losing

00:39:04.150 --> 00:39:05.510
<v Speaker 1>a million dollars a minute.

00:39:05.830 --> 00:39:06.630
<v Speaker 0>Go. Go.

00:39:08.950 --> 00:39:10.869
<v Speaker 2>So okay. So

00:39:13.345 --> 00:39:15.905
<v Speaker 0>so the error message is it can't resolve

00:39:15.905 --> 00:39:17.105
<v Speaker 0>the host name.

00:39:19.905 --> 00:39:20.625
<v Speaker 0>Okay.

00:39:20.945 --> 00:39:21.505
<v Speaker 0>It

00:39:21.825 --> 00:39:22.865
<v Speaker 0>may be DNS.

00:39:24.549 --> 00:39:25.829
<v Speaker 0>In fact, this chat, it's

00:39:26.470 --> 00:39:29.270
<v Speaker 0>everybody's saying DNS. Russell, it's always DNS.

00:39:30.309 --> 00:39:32.230
<v Speaker 0>Naveen, it's almost DNS.

00:39:32.869 --> 00:39:34.869
<v Speaker 0>Kevin, even if it isn't DNS, it's always

00:39:34.869 --> 00:39:35.270
<v Speaker 0>DNS.

00:39:37.875 --> 00:39:39.715
<v Speaker 0>Why is it always DNS, though?

00:39:41.075 --> 00:39:42.595
<v Speaker 1>Because it sucks, and you should all use

00:39:42.595 --> 00:39:43.475
<v Speaker 1>Istio.

00:39:44.355 --> 00:39:45.155
<v Speaker 0>I've tried

00:39:46.995 --> 00:39:48.675
<v Speaker 1>it. I can't I can't get it installed.

00:39:49.155 --> 00:39:50.275
<v Speaker 2>Yeah. I had to I had to get

00:39:50.275 --> 00:39:51.395
<v Speaker 1>it in there. Yeah. You can be driving

00:39:51.395 --> 00:39:51.875
<v Speaker 1>up RAM.

00:39:54.180 --> 00:39:55.940
<v Speaker 0>Is running?

00:39:55.940 --> 00:39:56.420
<v Speaker 0>Now

00:39:58.180 --> 00:39:59.460
<v Speaker 1>if you've given me a cluster of this

00:39:59.460 --> 00:40:01.460
<v Speaker 2>tier, and we could have broken some things.

00:40:15.964 --> 00:40:16.525
<v Speaker 1>I'm,

00:40:18.765 --> 00:40:20.045
<v Speaker 1>fatty fatty pride at this one.

00:40:22.619 --> 00:40:23.580
<v Speaker 2>That's

00:40:24.859 --> 00:40:26.140
<v Speaker 2>correct. Right?

00:40:26.380 --> 00:40:27.339
<v Speaker 0>Yes.

00:40:27.339 --> 00:40:29.980
<v Speaker 0>So we see ready. We see Kubernetes cluster

00:40:29.980 --> 00:40:31.099
<v Speaker 0>.local.

00:40:32.220 --> 00:40:34.380
<v Speaker 0>I believe that looks alright.

00:40:38.435 --> 00:40:40.915
<v Speaker 0>Yeah. Good call. So we do have two

00:40:40.915 --> 00:40:42.675
<v Speaker 0>Kubernetes pods running.

00:40:49.875 --> 00:40:50.755
<v Speaker 2>Suggestions?

00:40:50.755 --> 00:40:52.675
<v Speaker 2>I don't know. Could be something on the

00:40:52.675 --> 00:40:53.235
<v Speaker 2>node.

00:40:53.559 --> 00:40:55.319
<v Speaker 0>So my suggestion

00:40:55.319 --> 00:40:57.720
<v Speaker 0>would be, let's get inside

00:41:02.119 --> 00:41:04.920
<v Speaker 0>cluster, get some debugging tools and see what

00:41:04.920 --> 00:41:05.880
<v Speaker 0>the hell we can work out.

00:41:09.724 --> 00:41:10.685
<v Speaker 0>Bash.

00:41:10.845 --> 00:41:11.484
<v Speaker 0>Yeah.

00:41:12.444 --> 00:41:14.525
<v Speaker 0>And then I have to every week, I

00:41:14.525 --> 00:41:15.644
<v Speaker 0>need to try and remember the name of

00:41:15.644 --> 00:41:18.605
<v Speaker 0>the package. I think it's DNS, you tells

00:41:18.605 --> 00:41:19.325
<v Speaker 0>no space.

00:41:20.600 --> 00:41:23.160
<v Speaker 1>Oh, for dig. Yeah. I always forget. Yeah.

00:41:23.160 --> 00:41:24.280
<v Speaker 0>I wanna I

00:41:24.760 --> 00:41:25.320
<v Speaker 0>dig.

00:41:26.040 --> 00:41:27.880
<v Speaker 1>Yeah. It's different than every distro. I always

00:41:27.880 --> 00:41:30.920
<v Speaker 1>forget. There's commandnotfound.com,

00:41:31.640 --> 00:41:33.000
<v Speaker 1>which is really useful. You just put in

00:41:33.000 --> 00:41:34.200
<v Speaker 1>the name of the CLI tool you want.

00:41:34.200 --> 00:41:35.480
<v Speaker 1>And for every distro, it gives you the

00:41:35.480 --> 00:41:37.685
<v Speaker 1>package name and, like, BSD and Darwin as

00:41:37.685 --> 00:41:39.205
<v Speaker 1>well. It's super useful.

00:41:40.165 --> 00:41:43.045
<v Speaker 0>Okay. So what deck is telling us here

00:41:45.045 --> 00:41:46.405
<v Speaker 0>oh, we're not using

00:41:47.125 --> 00:41:48.085
<v Speaker 0>cluster DNS.

00:41:49.750 --> 00:41:52.310
<v Speaker 0>This is the Equinix mail. DNS was over.

00:41:54.790 --> 00:41:56.470
<v Speaker 0>What's the IP address?

00:41:59.110 --> 00:42:00.150
<v Speaker 0>We

00:42:00.150 --> 00:42:01.430
<v Speaker 0>have it up here. Right?

00:42:02.150 --> 00:42:03.110
<v Speaker 0>I'm gonna

00:42:07.685 --> 00:42:08.725
<v Speaker 0>as we see,

00:42:13.125 --> 00:42:14.565
<v Speaker 0>1096010.

00:42:14.565 --> 00:42:15.685
<v Speaker 0>Yeah. Can remember.

00:42:16.725 --> 00:42:18.645
<v Speaker 0>But we can try and force the

00:42:23.200 --> 00:42:25.120
<v Speaker 0>Okay. So it did answer us

00:42:30.960 --> 00:42:34.000
<v Speaker 0>and that does work, but I don't think

00:42:35.165 --> 00:42:36.205
<v Speaker 0>a resolve.com

00:42:36.205 --> 00:42:37.245
<v Speaker 0>is using it.

00:42:40.285 --> 00:42:41.645
<v Speaker 0>So he's I'm super

00:42:41.965 --> 00:42:43.325
<v Speaker 1>impressed you found that.

00:42:44.845 --> 00:42:47.165
<v Speaker 1>Buried in the fourth line of fourth line

00:42:47.165 --> 00:42:47.724
<v Speaker 1>from the bomb.

00:42:48.800 --> 00:42:50.720
<v Speaker 1>So Very, very good.

00:42:54.560 --> 00:42:55.520
<v Speaker 0>Oh, it's

00:42:55.760 --> 00:42:57.840
<v Speaker 0>the kubelet configuration.

00:42:57.840 --> 00:42:58.080
<v Speaker 0>Right?

00:43:03.145 --> 00:43:04.905
<v Speaker 0>You want me to keep driving this barcode?

00:43:04.905 --> 00:43:05.225
<v Speaker 0>Do you wanna

00:43:06.425 --> 00:43:07.225
<v Speaker 2>No.

00:43:07.225 --> 00:43:08.745
<v Speaker 2>I'm I'm a little

00:43:09.065 --> 00:43:11.545
<v Speaker 2>not following actually what happened here.

00:43:12.025 --> 00:43:13.785
<v Speaker 0>Yes. So I'm gonna go on to the

00:43:13.785 --> 00:43:15.785
<v Speaker 0>control the worker node. Right? And we're gonna

00:43:15.785 --> 00:43:17.785
<v Speaker 0>do a cat of kubelet, and there's a

00:43:17.785 --> 00:43:19.930
<v Speaker 0>bunch of configuration files we can use. And

00:43:19.930 --> 00:43:20.970
<v Speaker 0>one of the things you can do with

00:43:20.970 --> 00:43:23.370
<v Speaker 0>the kubelet is change the DNS configuration.

00:43:24.490 --> 00:43:26.010
<v Speaker 0>If I can remember how

00:43:27.290 --> 00:43:28.170
<v Speaker 0>here.

00:43:29.290 --> 00:43:30.730
<v Speaker 0>I don't know if that's right or not.

00:43:32.485 --> 00:43:35.445
<v Speaker 0>And cluster DNS is here. What what I

00:43:35.445 --> 00:43:36.805
<v Speaker 0>thought he changed here

00:43:38.244 --> 00:43:40.405
<v Speaker 0>hadn't changed, but I feel like I'm close.

00:43:41.765 --> 00:43:43.205
<v Speaker 1>Ever since then So I guess

00:43:45.240 --> 00:43:47.480
<v Speaker 2>mean, we can check VarLib

00:43:48.280 --> 00:43:49.880
<v Speaker 2>kubect config.

00:43:50.520 --> 00:43:52.360
<v Speaker 2>Maybe there? I mean, he can't have just

00:43:52.360 --> 00:43:53.800
<v Speaker 0>done that really shitly.

00:43:54.200 --> 00:43:55.080
<v Speaker 0>Excuse my language.

00:43:57.335 --> 00:43:58.535
<v Speaker 0>Yeah. There we go.

00:43:59.255 --> 00:44:01.575
<v Speaker 0>There's DNS policy of default. I don't know

00:44:01.575 --> 00:44:03.095
<v Speaker 0>if that's correct, but I feel like it

00:44:03.095 --> 00:44:04.375
<v Speaker 0>should be cluster first.

00:44:07.414 --> 00:44:09.335
<v Speaker 2>And this is

00:44:11.750 --> 00:44:13.030
<v Speaker 0>Have I made that up?

00:44:15.910 --> 00:44:16.710
<v Speaker 1>Thirty seconds.

00:44:23.825 --> 00:44:26.945
<v Speaker 1>We might still restart it, don't we? Super

00:44:27.744 --> 00:44:30.625
<v Speaker 1>impressed. This integration won't get taken effect.

00:44:31.105 --> 00:44:33.585
<v Speaker 1>Super, super impressed. Yeah. The the pod had

00:44:33.585 --> 00:44:35.744
<v Speaker 0>rescheduled. The old one was still terminated, but

00:44:35.744 --> 00:44:37.105
<v Speaker 0>it was enough for the service to run.

00:44:37.770 --> 00:44:40.650
<v Speaker 0>So you you changed the cluster policy from

00:44:40.650 --> 00:44:42.250
<v Speaker 0>cluster first to default. Right?

00:44:42.810 --> 00:44:45.050
<v Speaker 1>Yeah. Because the default because this bit me

00:44:45.050 --> 00:44:46.170
<v Speaker 1>once, and I lost, like, a day to

00:44:46.170 --> 00:44:48.410
<v Speaker 1>it. The default is non default. I I

00:44:48.410 --> 00:44:50.010
<v Speaker 1>thought that would pass the eyeball test. I

00:44:50.010 --> 00:44:51.855
<v Speaker 1>thought you'd read that. I think the default

00:44:51.855 --> 00:44:52.895
<v Speaker 1>was what it was meant to be set

00:44:52.895 --> 00:44:54.335
<v Speaker 1>to. Did you think default would be the

00:44:54.335 --> 00:44:56.575
<v Speaker 1>default? But it's not. It's cluster first.

00:44:56.975 --> 00:44:59.375
<v Speaker 1>Yeah. Super impressive. The reason one of the

00:44:59.375 --> 00:45:02.415
<v Speaker 1>reasons they weren't scheduling is because the scheduler

00:45:02.415 --> 00:45:04.895
<v Speaker 1>is called default dash scheduler, and I changed

00:45:05.055 --> 00:45:07.420
<v Speaker 1>I overrode the scheduler to default.

00:45:08.860 --> 00:45:09.820
<v Speaker 1>So it would have been trying to be

00:45:09.820 --> 00:45:11.420
<v Speaker 1>using a nonexistent scheduler.

00:45:11.980 --> 00:45:14.140
<v Speaker 1>That's not the only reason either. But

00:45:14.380 --> 00:45:16.380
<v Speaker 0>There we go. Did you do anything with

00:45:16.380 --> 00:45:18.460
<v Speaker 2>the resources, or that was, like, completely off

00:45:18.460 --> 00:45:18.940
<v Speaker 2>there then?

00:45:19.725 --> 00:45:21.005
<v Speaker 1>Yeah. That was maybe a bit of a

00:45:21.005 --> 00:45:22.765
<v Speaker 1>red herring. So I tried to

00:45:23.325 --> 00:45:26.205
<v Speaker 1>fill the well, I did fill the disc

00:45:26.205 --> 00:45:27.885
<v Speaker 1>on both workers to

00:45:28.685 --> 00:45:30.285
<v Speaker 1>to get that disc pressure.

00:45:31.085 --> 00:45:33.405
<v Speaker 1>This cluster doesn't have auto tank turned on,

00:45:33.405 --> 00:45:34.820
<v Speaker 1>so I thought it would fill the disk.

00:45:34.820 --> 00:45:36.180
<v Speaker 1>It would get the disk pressure condition, which

00:45:36.180 --> 00:45:37.700
<v Speaker 1>it did, and then take the nodes and

00:45:37.700 --> 00:45:40.340
<v Speaker 1>evict everything. That didn't work because must

00:45:40.340 --> 00:45:41.540
<v Speaker 1>not do that by default.

00:45:42.020 --> 00:45:43.700
<v Speaker 1>But I did it by

00:45:44.100 --> 00:45:45.940
<v Speaker 1>dumping a load of stuff into a file.

00:45:45.940 --> 00:45:47.540
<v Speaker 1>And if you on the working nodes, if

00:45:47.540 --> 00:45:49.895
<v Speaker 1>you run t TMux attach, you'll find that

00:45:49.895 --> 00:45:51.494
<v Speaker 1>hidden in the background, there's just like a

00:45:51.494 --> 00:45:53.974
<v Speaker 1>a Python interpreter holding the file open. So

00:45:53.974 --> 00:45:55.734
<v Speaker 1>I made a massive file, opened it, and

00:45:55.734 --> 00:45:57.255
<v Speaker 1>then deleted the file. So if you use

00:45:57.255 --> 00:45:59.095
<v Speaker 1>d u, you will not find the file

00:45:59.255 --> 00:46:00.535
<v Speaker 1>that's filling the disk.

00:46:00.935 --> 00:46:02.535
<v Speaker 1>The problem was because I filled it right

00:46:02.535 --> 00:46:03.175
<v Speaker 1>up to the brim,

00:46:04.010 --> 00:46:05.849
<v Speaker 1>you couldn't fork a new shell, so I

00:46:05.849 --> 00:46:07.530
<v Speaker 1>broke SSH access. And like I said, I

00:46:07.530 --> 00:46:08.730
<v Speaker 1>managed to undo it on I thought that

00:46:08.730 --> 00:46:10.010
<v Speaker 1>was unfair, so I managed to undo it

00:46:10.010 --> 00:46:11.050
<v Speaker 1>on one of them but not the other

00:46:11.050 --> 00:46:12.650
<v Speaker 1>because I'd already logged out.

00:46:15.290 --> 00:46:17.530
<v Speaker 2>Okay. Well, it's great.

00:46:18.535 --> 00:46:20.935
<v Speaker 1>Yeah. If you there's also an anti affinity

00:46:20.935 --> 00:46:23.255
<v Speaker 1>between the clustered pods, which I think is

00:46:23.255 --> 00:46:24.855
<v Speaker 1>another reason it wasn't scheduling

00:46:24.935 --> 00:46:26.695
<v Speaker 1>based on a like, a global one. So

00:46:26.695 --> 00:46:28.295
<v Speaker 1>based on it, you can use any label

00:46:28.295 --> 00:46:29.975
<v Speaker 1>as the the topology key, and you meant

00:46:29.975 --> 00:46:32.375
<v Speaker 1>to use regional zone. I just used OS.

00:46:32.670 --> 00:46:34.350
<v Speaker 1>So because they're all Linux,

00:46:34.990 --> 00:46:36.190
<v Speaker 1>right, it tries to bring the new one

00:46:36.190 --> 00:46:37.470
<v Speaker 1>up before it turns the old one off,

00:46:37.470 --> 00:46:38.589
<v Speaker 1>but it can't do it because there's there's

00:46:38.589 --> 00:46:40.829
<v Speaker 1>no applicable nodes to post it on because

00:46:40.829 --> 00:46:42.750
<v Speaker 1>they've all they're all running the same OS.

00:46:43.150 --> 00:46:46.615
<v Speaker 0>Alright. Well well played, Matt. But we tried

00:46:46.615 --> 00:46:48.375
<v Speaker 0>to get it fixed. Solid team effort from

00:46:48.375 --> 00:46:48.695
<v Speaker 0>Rawkode and So

00:46:49.894 --> 00:46:51.255
<v Speaker 0>we're gonna swap

00:46:51.255 --> 00:46:52.295
<v Speaker 0>places now.

00:46:53.095 --> 00:46:55.414
<v Speaker 0>So I have let me jump back over

00:46:55.414 --> 00:46:57.015
<v Speaker 0>to our screen share.

00:46:57.974 --> 00:47:00.855
<v Speaker 0>I have Rawkode cluster here. Matt, please join

00:47:02.270 --> 00:47:04.030
<v Speaker 0>the session I'm about to open. There we

00:47:04.030 --> 00:47:06.109
<v Speaker 0>go. Just an echo hello. Let me know

00:47:06.109 --> 00:47:08.190
<v Speaker 0>that you're there. Barco, feel free to sit

00:47:08.190 --> 00:47:10.910
<v Speaker 0>back and relax and enjoy. Awesome. Thanks.

00:47:11.790 --> 00:47:12.510
<v Speaker 1>It's fun.

00:47:16.425 --> 00:47:19.145
<v Speaker 1>My invite code's expired. David, just want to

00:47:19.145 --> 00:47:20.105
<v Speaker 1>get another one.

00:47:24.185 --> 00:47:27.385
<v Speaker 0>You're supposed to register before the episode, Matt.

00:47:27.385 --> 00:47:29.305
<v Speaker 0>Come on. Wait. This is fine for four

00:47:29.305 --> 00:47:30.745
<v Speaker 1>hours. I only got the link two hours

00:47:30.745 --> 00:47:31.065
<v Speaker 1>ago.

00:47:31.890 --> 00:47:34.290
<v Speaker 0>Oh, yeah. It should be good then. Yeah.

00:47:34.769 --> 00:47:36.690
<v Speaker 0>The the the email I oh, never mind.

00:47:36.690 --> 00:47:38.369
<v Speaker 0>Doesn't matter. Oh, did I have to register

00:47:38.369 --> 00:47:40.049
<v Speaker 1>for bucket list as well? Okay. I thought

00:47:40.049 --> 00:47:41.650
<v Speaker 1>I'd registered once, and I could just connect,

00:47:41.650 --> 00:47:43.089
<v Speaker 1>so I didn't yeah. I didn't know anything.

00:47:43.730 --> 00:47:45.329
<v Speaker 0>Well, I guess this is a nice opportunity

00:47:45.329 --> 00:47:46.930
<v Speaker 0>to show everyone how easy it is to

00:47:46.930 --> 00:47:48.965
<v Speaker 0>add new users to Teleport. Alright?

00:47:52.005 --> 00:47:55.445
<v Speaker 0>Users add rules admin logins route empty.

00:47:55.525 --> 00:47:57.525
<v Speaker 0>Let's hope you get to this before anyone

00:47:57.525 --> 00:47:59.685
<v Speaker 0>in the audience does. Otherwise, they're pairing with

00:47:59.685 --> 00:48:00.885
<v Speaker 0>me and you get to go home.

00:48:03.270 --> 00:48:04.710
<v Speaker 0>I I stuck the link in our private

00:48:04.710 --> 00:48:06.550
<v Speaker 0>chat just to pop that open.

00:48:07.350 --> 00:48:09.110
<v Speaker 0>I'll just clear that. There we go.

00:48:09.590 --> 00:48:10.950
<v Speaker 1>The chat on

00:48:11.190 --> 00:48:12.630
<v Speaker 0>An e cam. Yeah.

00:48:13.030 --> 00:48:14.230
<v Speaker 1>Oh, that's the one. Yeah.

00:48:18.355 --> 00:48:19.875
<v Speaker 0>I should have started the timer when you

00:48:19.875 --> 00:48:21.555
<v Speaker 0>told me the link was broken, shouldn't I?

00:48:22.275 --> 00:48:23.155
<v Speaker 2>Yeah.

00:48:23.155 --> 00:48:24.435
<v Speaker 2>You can see it.

00:48:25.395 --> 00:48:27.475
<v Speaker 1>I think it's good. Let's see what we've

00:48:27.475 --> 00:48:29.875
<v Speaker 0>got in the chat. Russell with mission impossible

00:48:29.875 --> 00:48:32.195
<v Speaker 0>level timing. Nice work. Yeah. We did come

00:48:32.195 --> 00:48:35.140
<v Speaker 0>far too close. I've been saying the same.

00:48:35.700 --> 00:48:38.740
<v Speaker 1>Super impressed. Kevin, have a celebratory beer. I

00:48:38.740 --> 00:48:40.660
<v Speaker 0>I wish I don't actually have any.

00:48:40.900 --> 00:48:42.740
<v Speaker 0>I will not make that mistake again.

00:48:43.220 --> 00:48:44.420
<v Speaker 1>No. I should have brought one. I would

00:48:44.420 --> 00:48:45.300
<v Speaker 1>have taken

00:48:45.620 --> 00:48:46.180
<v Speaker 1>the edge off.

00:48:47.255 --> 00:48:48.855
<v Speaker 0>Clustered Rawkode.

00:48:48.855 --> 00:48:51.495
<v Speaker 0>Not quite consider myself lucky.

00:48:52.695 --> 00:48:53.415
<v Speaker 0>Alright.

00:48:56.135 --> 00:48:57.655
<v Speaker 0>Managed to register yet?

00:48:59.575 --> 00:48:59.975
<v Speaker 1>Yeah.

00:49:00.460 --> 00:49:01.580
<v Speaker 1>I thought

00:49:01.580 --> 00:49:02.620
<v Speaker 1>I was in.

00:49:03.580 --> 00:49:05.580
<v Speaker 0>Did you join my active session,

00:49:05.740 --> 00:49:07.180
<v Speaker 0>or did you open your own?

00:49:08.460 --> 00:49:09.580
<v Speaker 1>Correct.

00:49:10.060 --> 00:49:11.740
<v Speaker 1>I'm not very gonna be very good at

00:49:11.740 --> 00:49:13.805
<v Speaker 1>this, am I? You'll be fine. Let's just

00:49:13.805 --> 00:49:16.365
<v Speaker 0>get in the same session. Check out activity,

00:49:16.365 --> 00:49:17.645
<v Speaker 0>then active sessions.

00:49:17.645 --> 00:49:19.484
<v Speaker 1>There we are. Cool. I thought I could

00:49:19.484 --> 00:49:21.404
<v Speaker 0>show the audience that. So you join sessions

00:49:21.404 --> 00:49:23.484
<v Speaker 0>on Teleport by clicking activity,

00:49:23.484 --> 00:49:24.285
<v Speaker 0>active.

00:49:24.924 --> 00:49:26.365
<v Speaker 0>And now I can see that Matt opened

00:49:26.365 --> 00:49:29.370
<v Speaker 0>one. Okay. Yes. Feel free to join me.

00:49:30.730 --> 00:49:31.770
<v Speaker 0>Hi, Drew. Awesome.

00:49:32.170 --> 00:49:33.210
<v Speaker 0>Alright. Thank you.

00:49:33.530 --> 00:49:35.130
<v Speaker 0>So you're gonna have to export a cube

00:49:35.130 --> 00:49:37.210
<v Speaker 0>config, check for the control plane, and I

00:49:37.210 --> 00:49:38.570
<v Speaker 0>am gonna start our timer.

00:49:44.545 --> 00:49:45.265
<v Speaker 1>Okay.

00:49:45.825 --> 00:49:48.705
<v Speaker 0>Use whatever command you wish. I do appreciate

00:49:48.705 --> 00:49:50.145
<v Speaker 0>the key alias, though.

00:49:56.065 --> 00:49:57.105
<v Speaker 1>Uh-huh. Okay.

00:50:05.090 --> 00:50:06.130
<v Speaker 1>Interesting.

00:50:06.210 --> 00:50:07.330
<v Speaker 1>We're route.

00:50:07.970 --> 00:50:09.650
<v Speaker 1>It's allegedly

00:50:10.295 --> 00:50:12.615
<v Speaker 1>readable by its owner,

00:50:12.775 --> 00:50:15.415
<v Speaker 1>and there's no dot saying there's an SE

00:50:15.415 --> 00:50:18.055
<v Speaker 1>Linux context or an extended attributes on it.

00:50:18.535 --> 00:50:19.895
<v Speaker 1>Well, that's interesting, isn't it?

00:50:22.470 --> 00:50:24.710
<v Speaker 0>I mean, I would try LS after just

00:50:24.710 --> 00:50:25.590
<v Speaker 0>in case. But

00:50:26.869 --> 00:50:28.550
<v Speaker 1>I thought you would get a little thing

00:50:28.550 --> 00:50:28.790
<v Speaker 1>on

00:50:29.750 --> 00:50:31.750
<v Speaker 1>yeah. But okay. It's a fair point.

00:50:36.695 --> 00:50:39.095
<v Speaker 1>I haven't Well, yeah, I I'm gonna look

00:50:39.095 --> 00:50:40.615
<v Speaker 0>it up. I don't remember what the the

00:50:40.615 --> 00:50:42.535
<v Speaker 0>e is. Yeah. Do you mind? I haven't

00:50:42.535 --> 00:50:44.375
<v Speaker 1>heard of them. I haven't used the subsystem

00:50:44.375 --> 00:50:45.255
<v Speaker 1>for a while.

00:50:45.735 --> 00:50:46.135
<v Speaker 1>Oh.

00:50:47.750 --> 00:50:48.790
<v Speaker 1>But we

00:50:48.950 --> 00:50:51.510
<v Speaker 1>we can count it in QC. Okay. Interesting.

00:50:58.950 --> 00:51:00.710
<v Speaker 1>Can we install packages onto this thing?

00:51:04.225 --> 00:51:05.185
<v Speaker 0>Oh,

00:51:12.865 --> 00:51:14.305
<v Speaker 0>tell me what the letters mean.

00:51:18.890 --> 00:51:20.490
<v Speaker 0>You can always rely on the arch lit

00:51:20.650 --> 00:51:22.890
<v Speaker 0>arch Linux wiki. That's what exactly what we

00:51:22.890 --> 00:51:27.289
<v Speaker 0>need. Best thing. E is extend format. So

00:51:27.289 --> 00:51:28.890
<v Speaker 0>I think that's actually safe. So I I

00:51:28.890 --> 00:51:30.330
<v Speaker 0>don't think we need to worry about that.

00:51:30.410 --> 00:51:31.609
<v Speaker 0>Are you running an s trace?

00:51:32.445 --> 00:51:34.365
<v Speaker 1>Yeah. Why don't we see this? What

00:51:34.685 --> 00:51:35.485
<v Speaker 1>he's doing?

00:51:35.965 --> 00:51:38.685
<v Speaker 1>He's obviously doing some low level Linux nonsense.

00:51:38.845 --> 00:51:40.365
<v Speaker 0>Resource temporarily

00:51:40.365 --> 00:51:41.485
<v Speaker 0>unavailable.

00:51:42.125 --> 00:51:43.005
<v Speaker 1>Yeah.

00:51:43.005 --> 00:51:43.565
<v Speaker 1>What is

00:51:48.520 --> 00:51:50.359
<v Speaker 0>You wanna check the mount points?

00:51:52.920 --> 00:51:54.920
<v Speaker 1>Oh, maybe. Yeah.

00:51:56.359 --> 00:51:59.400
<v Speaker 0>Could have given us, like, a weird mount.

00:51:59.799 --> 00:52:03.240
<v Speaker 1>Read only file system over the top. That's

00:52:04.005 --> 00:52:06.244
<v Speaker 1>odd. Can we see the call to read

00:52:06.244 --> 00:52:07.685
<v Speaker 1>the environment?

00:52:10.645 --> 00:52:11.445
<v Speaker 1>No.

00:52:11.845 --> 00:52:12.725
<v Speaker 1>I

00:52:12.885 --> 00:52:14.885
<v Speaker 1>can't see the access to the environment variable

00:52:14.885 --> 00:52:16.325
<v Speaker 1>or

00:52:17.840 --> 00:52:20.720
<v Speaker 1>any any stat or any open call

00:52:23.360 --> 00:52:24.880
<v Speaker 1>on the file.

00:52:25.840 --> 00:52:26.720
<v Speaker 1>It doesn't

00:52:27.920 --> 00:52:29.835
<v Speaker 0>So let let's let's do the basics first

00:52:29.835 --> 00:52:31.515
<v Speaker 0>before we go into the deep dive stuff.

00:52:31.515 --> 00:52:34.075
<v Speaker 0>Like, is our kubectl really kubectl?

00:52:34.315 --> 00:52:36.155
<v Speaker 1>Yeah. I think it's I no. I think

00:52:36.155 --> 00:52:37.115
<v Speaker 1>it's forking.

00:52:38.955 --> 00:52:39.835
<v Speaker 1>Think it's forking.

00:52:47.460 --> 00:52:48.580
<v Speaker 0>Elf binary.

00:52:49.540 --> 00:52:51.300
<v Speaker 1>It's a go it's a go, but elf

00:52:51.300 --> 00:52:52.100
<v Speaker 1>binary.

00:52:52.260 --> 00:52:53.860
<v Speaker 0>It does look alright. Okay.

00:52:55.780 --> 00:52:58.340
<v Speaker 1>It was put there at a plausible time.

00:52:58.340 --> 00:53:00.260
<v Speaker 1>It's a plausible size.

00:53:00.500 --> 00:53:00.900
<v Speaker 0>Yep.

00:53:03.734 --> 00:53:05.815
<v Speaker 1>What have we how could you broken it

00:53:05.815 --> 00:53:07.255
<v Speaker 1>using this? Like, put a read only file

00:53:07.255 --> 00:53:08.935
<v Speaker 1>system over the top?

00:53:09.575 --> 00:53:11.495
<v Speaker 0>That was one of my thoughts too.

00:53:12.055 --> 00:53:12.535
<v Speaker 1>Yeah.

00:53:14.920 --> 00:53:16.840
<v Speaker 0>Yeah. It's meant remount

00:53:16.840 --> 00:53:17.640
<v Speaker 0>r o.

00:53:18.680 --> 00:53:20.280
<v Speaker 1>But that's errors. Right? So that's if there's

00:53:20.280 --> 00:53:22.680
<v Speaker 1>a file system error, it shouldn't Alright. It

00:53:22.680 --> 00:53:24.280
<v Speaker 1>shouldn't freeze it. It should remount it read

00:53:24.280 --> 00:53:25.800
<v Speaker 1>only, so I think that's okay. I can

00:53:25.800 --> 00:53:27.400
<v Speaker 0>see Barco laughing at us already.

00:53:28.385 --> 00:53:30.465
<v Speaker 2>I'm just laughing at the comments.

00:53:30.785 --> 00:53:31.505
<v Speaker 2>This

00:53:32.705 --> 00:53:34.465
<v Speaker 1>is that is a full

00:53:34.945 --> 00:53:36.385
<v Speaker 1>Google interview stuff.

00:53:37.585 --> 00:53:39.745
<v Speaker 0>Alright. I've got confidence in this.

00:53:39.905 --> 00:53:40.224
<v Speaker 0>So

00:53:43.230 --> 00:53:45.310
<v Speaker 1>It's not a SIM link. It's only got

00:53:45.310 --> 00:53:47.150
<v Speaker 1>one hard link.

00:53:47.470 --> 00:53:49.230
<v Speaker 0>Let's try and change the permissions on it

00:53:49.230 --> 00:53:50.830
<v Speaker 0>to seven four four and see if it

00:53:50.830 --> 00:53:53.150
<v Speaker 0>complains those. Right? But the thing the thing

00:53:53.150 --> 00:53:53.790
<v Speaker 1>is

00:53:55.710 --> 00:53:56.670
<v Speaker 1>we can cat it.

00:53:57.315 --> 00:53:59.795
<v Speaker 1>So something's stopping. KubeCTL

00:53:59.795 --> 00:54:01.714
<v Speaker 1>has, like, an SE Linux. Okay. I mean,

00:54:01.714 --> 00:54:02.835
<v Speaker 1>if there's I'm

00:54:02.835 --> 00:54:04.755
<v Speaker 1>gonna be angry. Like, it's like it's like

00:54:04.755 --> 00:54:07.234
<v Speaker 1>KubeCTL has got an SE Linux text or

00:54:07.234 --> 00:54:07.474
<v Speaker 1>something.

00:54:11.000 --> 00:54:12.920
<v Speaker 1>I don't know too much about on the

00:54:12.920 --> 00:54:15.800
<v Speaker 2>right track. It's nothing with the files.

00:54:16.840 --> 00:54:18.840
<v Speaker 2>It's something with the kubectl

00:54:18.840 --> 00:54:19.640
<v Speaker 2>command.

00:54:19.880 --> 00:54:20.680
<v Speaker 1>Correct.

00:54:21.480 --> 00:54:22.920
<v Speaker 0>Are you using eBPF?

00:54:25.494 --> 00:54:26.695
<v Speaker 2>I am not

00:54:27.175 --> 00:54:28.135
<v Speaker 2>I don't think

00:54:28.455 --> 00:54:30.775
<v Speaker 0>Oh, okay. I I cannot do anything with

00:54:30.775 --> 00:54:32.055
<v Speaker 2>eBPF now.

00:54:34.215 --> 00:54:36.455
<v Speaker 0>You're looking for LD preloads. Yeah.

00:54:39.335 --> 00:54:40.450
<v Speaker 1>Yeah. I'm seeing you there.

00:54:42.290 --> 00:54:43.890
<v Speaker 0>Okay. So if there's something to do with

00:54:43.890 --> 00:54:47.090
<v Speaker 0>a cube control command, we already validated this.

00:54:47.090 --> 00:54:49.250
<v Speaker 0>Right? Let's check, like so let's check if

00:54:49.250 --> 00:54:49.970
<v Speaker 0>it's an alias.

00:54:51.695 --> 00:54:53.375
<v Speaker 0>Run can type alias.

00:54:57.055 --> 00:54:59.215
<v Speaker 0>Adjust our alias. Okay. So

00:55:01.375 --> 00:55:02.335
<v Speaker 0>could be a function.

00:55:05.810 --> 00:55:06.690
<v Speaker 1>I don't

00:55:06.850 --> 00:55:08.930
<v Speaker 1>know because that would show up when we

00:55:08.930 --> 00:55:10.370
<v Speaker 1>did this. Right? And I did that to

00:55:10.370 --> 00:55:11.490
<v Speaker 1>find the file.

00:55:13.170 --> 00:55:16.050
<v Speaker 1>The file's okay. I'm gonna check anyway.

00:55:16.370 --> 00:55:18.050
<v Speaker 0>I mean, there's many places it could be,

00:55:18.050 --> 00:55:19.330
<v Speaker 0>but still Yeah.

00:55:20.265 --> 00:55:22.505
<v Speaker 0>I mean, that we could always just do.

00:55:24.505 --> 00:55:25.065
<v Speaker 1>That's true.

00:55:35.790 --> 00:55:37.470
<v Speaker 1>Okay. So it's something getting in the way

00:55:37.470 --> 00:55:38.110
<v Speaker 1>of

00:55:39.150 --> 00:55:40.190
<v Speaker 1>kubectl,

00:55:40.190 --> 00:55:41.390
<v Speaker 1>which looks

00:55:41.390 --> 00:55:42.110
<v Speaker 1>okay.

00:55:42.910 --> 00:55:43.869
<v Speaker 1>Mildly preloaded.

00:55:45.995 --> 00:55:47.915
<v Speaker 1>I'm thinking it's gonna be, like, a, yeah,

00:55:47.915 --> 00:55:50.395
<v Speaker 1>Systrace, like, of the security mechanisms. It's it's

00:55:50.395 --> 00:55:53.115
<v Speaker 1>gonna be gVisor or something, you something that

00:55:53.115 --> 00:55:54.315
<v Speaker 1>blocks syscalls.

00:55:54.475 --> 00:55:55.915
<v Speaker 1>Although I never saw when I s traced

00:55:55.915 --> 00:55:57.195
<v Speaker 1>it, I never saw

00:55:57.755 --> 00:55:58.555
<v Speaker 1>the access

00:55:59.210 --> 00:56:00.490
<v Speaker 1>to admin.com.

00:56:00.490 --> 00:56:02.009
<v Speaker 1>So I wonder what I mean, does does

00:56:02.009 --> 00:56:03.690
<v Speaker 1>it fork naturally?

00:56:04.569 --> 00:56:06.970
<v Speaker 1>I can make this thing follow forks f.

00:56:17.655 --> 00:56:19.335
<v Speaker 1>There we go. Okay. Forked.

00:56:19.975 --> 00:56:21.335
<v Speaker 1>I assume

00:56:21.335 --> 00:56:22.295
<v Speaker 1>that's natural.

00:56:23.750 --> 00:56:27.350
<v Speaker 1>Yeah. Access permission denied. Well, they got assume.

00:56:29.349 --> 00:56:30.630
<v Speaker 0>Barco's done some of the

00:56:31.270 --> 00:56:33.349
<v Speaker 0>maybe Barco's just opening the file at that

00:56:33.349 --> 00:56:34.869
<v Speaker 0>path. So why don't we copy it to

00:56:34.869 --> 00:56:36.630
<v Speaker 0>somewhere else and see if it works?

00:56:37.190 --> 00:56:38.150
<v Speaker 1>That's a good point.

00:56:39.085 --> 00:56:39.805
<v Speaker 1>Yeah.

00:56:43.005 --> 00:56:44.605
<v Speaker 1>There's a new one there, but I can't

00:56:44.605 --> 00:56:46.765
<v Speaker 1>see there's there's several pits, but I can't

00:56:46.765 --> 00:56:47.485
<v Speaker 1>see the

00:56:48.365 --> 00:56:49.245
<v Speaker 1>fork.

00:56:50.445 --> 00:56:52.285
<v Speaker 1>Oh, because it of it's called clone these

00:56:52.285 --> 00:56:52.445
<v Speaker 1>days.

00:56:54.220 --> 00:56:55.820
<v Speaker 1>I just wonder what on earth is

00:56:57.420 --> 00:56:59.100
<v Speaker 1>so where's it exec ing?

00:56:59.420 --> 00:57:01.980
<v Speaker 0>Because something we've seen on a previous episode

00:57:01.980 --> 00:57:03.020
<v Speaker 0>from Noel

00:57:03.100 --> 00:57:04.620
<v Speaker 0>was the

00:57:05.115 --> 00:57:06.235
<v Speaker 0>BPF

00:57:06.475 --> 00:57:08.955
<v Speaker 0>bypass that would restrict access to open a

00:57:08.955 --> 00:57:10.315
<v Speaker 0>certain files on the disk.

00:57:11.195 --> 00:57:13.115
<v Speaker 0>So I would suggest we just try and

00:57:13.115 --> 00:57:15.115
<v Speaker 0>copy it somewhere else. And if that doesn't

00:57:15.115 --> 00:57:16.315
<v Speaker 0>work, we need to start

00:57:17.330 --> 00:57:20.050
<v Speaker 0>exploring the processes on this machine for something

00:57:20.050 --> 00:57:21.010
<v Speaker 0>malicious.

00:57:22.210 --> 00:57:24.290
<v Speaker 1>Yeah. I'll tell you what we'll do. We'll

00:57:24.290 --> 00:57:25.490
<v Speaker 1>do that so it gets a new INED

00:57:25.490 --> 00:57:26.130
<v Speaker 1>number as well.

00:57:32.585 --> 00:57:33.385
<v Speaker 0>Poo.com.

00:57:33.385 --> 00:57:34.745
<v Speaker 0>That was the best name you came up

00:57:34.745 --> 00:57:35.305
<v Speaker 0>with.

00:57:35.625 --> 00:57:36.265
<v Speaker 1>I I

00:57:36.745 --> 00:57:38.505
<v Speaker 1>hold on. What do wanna call it?

00:57:39.305 --> 00:57:41.465
<v Speaker 2>Right. But remember, it it snapped with that

00:57:41.465 --> 00:57:45.120
<v Speaker 2>file. Now I'm curious if we copied kubectl

00:57:45.120 --> 00:57:46.320
<v Speaker 2>to a different

00:57:46.640 --> 00:57:47.440
<v Speaker 2>location.

00:57:47.440 --> 00:57:48.480
<v Speaker 2>That would work.

00:57:49.920 --> 00:57:51.840
<v Speaker 1>Okay. So we can't read anything.

00:57:53.520 --> 00:57:54.400
<v Speaker 1>That's interesting.

00:57:56.015 --> 00:57:58.015
<v Speaker 1>Yeah. Right. So, yeah, Kube CTL. I wonder

00:57:58.015 --> 00:57:59.775
<v Speaker 1>whether there's an SE Linux policy that's matching

00:57:59.775 --> 00:58:01.535
<v Speaker 1>the the loaded file.

00:58:01.935 --> 00:58:03.455
<v Speaker 0>Well, Kevin said in the chat that you

00:58:03.455 --> 00:58:05.535
<v Speaker 0>can't get SE Linux on Ubuntu. But someone

00:58:05.535 --> 00:58:07.935
<v Speaker 0>told me last week, you can now get

00:58:07.935 --> 00:58:09.775
<v Speaker 0>SE Linux on Ubuntu, and that put the

00:58:09.775 --> 00:58:10.495
<v Speaker 0>fear into me.

00:58:13.289 --> 00:58:14.010
<v Speaker 0>Hello.

00:58:16.170 --> 00:58:17.049
<v Speaker 2>Yeah.

00:58:17.049 --> 00:58:18.410
<v Speaker 2>Oh, that works.

00:58:18.970 --> 00:58:19.609
<v Speaker 2>Interesting.

00:58:20.089 --> 00:58:20.650
<v Speaker 2>That

00:58:21.450 --> 00:58:23.530
<v Speaker 2>was a good suggestion on my part.

00:58:24.010 --> 00:58:26.935
<v Speaker 2>App Armor. There is an AppArmor profile for

00:58:26.935 --> 00:58:27.815
<v Speaker 2>KubeCTL

00:58:27.815 --> 00:58:28.295
<v Speaker 2>that

00:58:28.775 --> 00:58:31.815
<v Speaker 2>doesn't allow you there's nothing in it, really.

00:58:31.895 --> 00:58:34.535
<v Speaker 2>It wasn't generated. It's just preventing you from

00:58:34.535 --> 00:58:35.735
<v Speaker 2>running the command.

00:58:37.335 --> 00:58:37.895
<v Speaker 0>Sneaky.

00:58:38.950 --> 00:58:39.750
<v Speaker 1>Nice.

00:58:39.750 --> 00:58:42.710
<v Speaker 0>Okay. That's AppArmor made the ban list. Alright.

00:58:42.710 --> 00:58:43.590
<v Speaker 0>Let's continue.

00:58:44.150 --> 00:58:44.870
<v Speaker 2>Yeah.

00:58:45.430 --> 00:58:47.590
<v Speaker 0>AppArmor and SD Linux are those things that

00:58:47.590 --> 00:58:49.670
<v Speaker 0>I really should learn better, and I've never

00:58:49.670 --> 00:58:51.350
<v Speaker 0>invested any time whatsoever.

00:58:52.575 --> 00:58:54.494
<v Speaker 1>No. Normally I mean, when I say SELinux

00:58:54.494 --> 00:58:56.175
<v Speaker 1>and people said it literally doesn't exist anymore,

00:58:56.175 --> 00:58:57.375
<v Speaker 1>that shows how much I know. But, you

00:58:57.375 --> 00:58:59.615
<v Speaker 1>know, one of those Linux security modules.

00:59:01.055 --> 00:59:02.495
<v Speaker 1>Oh, look. Okay

00:59:02.895 --> 00:59:03.535
<v Speaker 1>then.

00:59:03.935 --> 00:59:04.975
<v Speaker 1>Back to where we were.

00:59:07.110 --> 00:59:08.870
<v Speaker 1>It seems to be kind of running, but

00:59:08.870 --> 00:59:10.870
<v Speaker 1>they both my cluster was older than that,

00:59:10.870 --> 00:59:13.110
<v Speaker 1>so he's been in here since you did

00:59:13.110 --> 00:59:13.830
<v Speaker 1>something.

00:59:14.550 --> 00:59:15.830
<v Speaker 1>This all looks

00:59:16.710 --> 00:59:17.430
<v Speaker 1>good.

00:59:18.470 --> 00:59:19.750
<v Speaker 1>Oh, I don't have any of my illnesses.

00:59:21.855 --> 00:59:24.575
<v Speaker 1>This all looks suspiciously quiet except

00:59:25.615 --> 00:59:27.455
<v Speaker 1>the network's up and down all over the

00:59:27.455 --> 00:59:27.935
<v Speaker 1>place.

00:59:28.815 --> 00:59:30.575
<v Speaker 1>And, wow, so it's all of the control

00:59:30.575 --> 00:59:31.295
<v Speaker 1>plane.

00:59:32.655 --> 00:59:34.575
<v Speaker 1>Okay. So we don't have an APIs.

00:59:35.020 --> 00:59:36.940
<v Speaker 1>The API server's flapping because, obviously, it's been

00:59:36.940 --> 00:59:38.540
<v Speaker 1>up at some point because we can

00:59:39.580 --> 00:59:42.140
<v Speaker 1>we can do this. Yeah. What's the restart?

00:59:42.460 --> 00:59:43.820
<v Speaker 1>Should we just try it and see what

00:59:43.820 --> 00:59:44.380
<v Speaker 1>happens?

00:59:44.780 --> 00:59:45.260
<v Speaker 0>Yeah.

00:59:49.305 --> 00:59:51.225
<v Speaker 0>So what's the fix for the AppArmor thing

00:59:51.225 --> 00:59:53.225
<v Speaker 0>then, Borko? How would we fix it? You

00:59:53.225 --> 00:59:54.585
<v Speaker 2>can you

00:59:54.585 --> 00:59:56.825
<v Speaker 2>can just basically, there's a command,

00:59:57.385 --> 00:59:58.825
<v Speaker 2>a a log

00:59:58.825 --> 00:59:59.305
<v Speaker 2>prop.

01:00:00.039 --> 01:00:00.839
<v Speaker 2>Sorry.

01:00:00.839 --> 01:00:03.079
<v Speaker 2>Gen prop or something like that or log

01:00:03.079 --> 01:00:03.800
<v Speaker 2>prop

01:00:04.520 --> 01:00:05.720
<v Speaker 2>that will generate

01:00:06.200 --> 01:00:06.920
<v Speaker 2>the

01:00:07.400 --> 01:00:08.520
<v Speaker 2>the profile

01:00:08.680 --> 01:00:10.920
<v Speaker 2>AppArmor profile for kubectl

01:00:10.920 --> 01:00:12.920
<v Speaker 2>based on, like, the last time it was

01:00:12.920 --> 01:00:15.855
<v Speaker 2>executed, like, all the syscalls it needs, and

01:00:15.855 --> 01:00:17.375
<v Speaker 2>then it will allow you to do it.

01:00:17.375 --> 01:00:20.015
<v Speaker 2>Or you can just disable the profile itself,

01:00:20.015 --> 01:00:21.375
<v Speaker 2>and then it should work.

01:00:21.935 --> 01:00:22.655
<v Speaker 1>Nice.

01:00:23.855 --> 01:00:25.455
<v Speaker 1>Boot into sync mode.

01:00:25.855 --> 01:00:27.615
<v Speaker 0>We haven't seen our before.

01:00:27.615 --> 01:00:30.240
<v Speaker 0>Let's say, clustered first. Yeah. I've tried to

01:00:30.240 --> 01:00:32.560
<v Speaker 2>kind of because I've seen a few episodes.

01:00:32.560 --> 01:00:33.680
<v Speaker 2>I've tried to

01:00:34.160 --> 01:00:36.240
<v Speaker 2>put in things that I haven't seen before

01:00:36.240 --> 01:00:37.040
<v Speaker 2>just

01:00:37.200 --> 01:00:39.200
<v Speaker 2>to help people, I guess,

01:00:39.600 --> 01:00:42.400
<v Speaker 2>audience, like, get exposure to some things. I

01:00:42.400 --> 01:00:42.720
<v Speaker 2>don't know.

01:00:44.085 --> 01:00:45.685
<v Speaker 2>Because I I found this,

01:00:45.925 --> 01:00:48.725
<v Speaker 2>like, really useful to learn from, like, really

01:00:49.365 --> 01:00:51.765
<v Speaker 2>enlightening to see how people think and different

01:00:51.765 --> 01:00:53.685
<v Speaker 2>things they can think of breaking.

01:00:53.685 --> 01:00:54.165
<v Speaker 2>So

01:00:54.724 --> 01:00:56.885
<v Speaker 2>I try to put things that they haven't

01:00:56.885 --> 01:00:57.445
<v Speaker 2>seen before.

01:00:59.150 --> 01:01:02.190
<v Speaker 0>Alright. Awesome. Matt, we've got Angry Man, and

01:01:02.190 --> 01:01:04.430
<v Speaker 0>our authentication for Postgres failed.

01:01:04.830 --> 01:01:06.750
<v Speaker 1>Yeah. But you'll notice it's it's v one

01:01:06.750 --> 01:01:07.710
<v Speaker 1>Angry Man.

01:01:08.190 --> 01:01:09.870
<v Speaker 0>There really has no. There only has one

01:01:09.870 --> 01:01:11.870
<v Speaker 0>Angry Man. This is the v two image,

01:01:11.870 --> 01:01:13.310
<v Speaker 0>but we're getting an error connected to the

01:01:13.310 --> 01:01:14.995
<v Speaker 0>database. Oh, is it? I'm sure it's a

01:01:14.995 --> 01:01:15.635
<v Speaker 1>v one.

01:01:16.995 --> 01:01:18.675
<v Speaker 1>The the title of our web page is

01:01:18.675 --> 01:01:20.435
<v Speaker 1>v one. Oh, yes. Good. I I I

01:01:20.435 --> 01:01:21.475
<v Speaker 0>think that's cached.

01:01:21.955 --> 01:01:23.875
<v Speaker 1>Oh, okay. Great. There is a caching problem,

01:01:23.875 --> 01:01:25.555
<v Speaker 0>and sometimes I have to reload it 54

01:01:25.555 --> 01:01:27.819
<v Speaker 0>times before I get the new video. I

01:01:27.819 --> 01:01:29.339
<v Speaker 0>don't I I don't tend to open v

01:01:29.339 --> 01:01:30.220
<v Speaker 0>one anymore.

01:01:30.619 --> 01:01:31.740
<v Speaker 1>No. Fair enough.

01:01:32.940 --> 01:01:33.980
<v Speaker 1>Okay.

01:01:34.300 --> 01:01:35.980
<v Speaker 1>So we've upgraded with the and it can't

01:01:35.980 --> 01:01:37.340
<v Speaker 1>auth to Postgres.

01:01:37.420 --> 01:01:39.980
<v Speaker 1>That's interesting, isn't it? And then and the

01:01:39.980 --> 01:01:41.260
<v Speaker 1>whole control plane's flapping.

01:01:42.345 --> 01:01:44.265
<v Speaker 1>That's all very odd. Okay. How do you

01:01:44.265 --> 01:01:45.865
<v Speaker 1>wrote this app. How does the auth work?

01:01:45.865 --> 01:01:47.625
<v Speaker 1>Does it get its password from a config

01:01:47.625 --> 01:01:48.185
<v Speaker 1>man?

01:01:48.825 --> 01:01:49.785
<v Speaker 0>No. It's

01:01:50.105 --> 01:01:51.385
<v Speaker 0>it's hard coded.

01:01:52.825 --> 01:01:53.385
<v Speaker 0>Okay.

01:01:53.785 --> 01:01:55.785
<v Speaker 0>Postgres and Postgres one, two, three, if I

01:01:55.785 --> 01:01:57.800
<v Speaker 0>remember correctly. But you can you should be

01:01:57.800 --> 01:01:58.920
<v Speaker 0>able to take a look at the stateful

01:01:58.920 --> 01:02:01.000
<v Speaker 0>set, and it's just environment variables passed into

01:02:01.000 --> 01:02:02.280
<v Speaker 0>the Postgres image.

01:02:02.760 --> 01:02:05.240
<v Speaker 1>Well, now our now our API server.

01:02:06.040 --> 01:02:07.560
<v Speaker 0>There we go. We need to fix that

01:02:07.560 --> 01:02:08.280
<v Speaker 0>flapping.

01:02:08.760 --> 01:02:09.240
<v Speaker 2>Yeah.

01:02:12.895 --> 01:02:13.775
<v Speaker 1>Degraded.

01:02:15.855 --> 01:02:18.414
<v Speaker 0>It's a static manifest, so you won't find

01:02:18.414 --> 01:02:19.215
<v Speaker 0>out those?

01:02:19.855 --> 01:02:21.055
<v Speaker 1>We will still see it as a as

01:02:21.055 --> 01:02:22.575
<v Speaker 1>a child of containerd.service.

01:02:22.575 --> 01:02:23.135
<v Speaker 1>Right?

01:02:23.855 --> 01:02:25.935
<v Speaker 1>Except it's not there at the moment. But

01:02:26.880 --> 01:02:27.520
<v Speaker 1>okay.

01:02:28.640 --> 01:02:31.119
<v Speaker 1>Yeah. Let's do a quick quick visual inspection

01:02:31.119 --> 01:02:31.599
<v Speaker 1>of the

01:02:41.315 --> 01:02:42.994
<v Speaker 0>Why do people never look at where the

01:02:42.994 --> 01:02:44.835
<v Speaker 0>cursor is when they open the file?

01:02:45.954 --> 01:02:48.275
<v Speaker 1>Oh, no. I forgot. I was just just

01:02:48.275 --> 01:02:48.915
<v Speaker 1>spot where it was.

01:02:53.799 --> 01:02:55.960
<v Speaker 0>I see some sneaky stuff.

01:02:56.599 --> 01:02:57.640
<v Speaker 1>Okay.

01:02:59.720 --> 01:03:01.160
<v Speaker 1>And there's all kinds of things you could

01:03:01.160 --> 01:03:02.520
<v Speaker 1>subtly break in here.

01:03:02.839 --> 01:03:04.920
<v Speaker 0>Yeah. It looks like Oracle has added an

01:03:04.920 --> 01:03:07.480
<v Speaker 0>encryption provider to our API server.

01:03:13.545 --> 01:03:13.945
<v Speaker 1>So

01:03:14.825 --> 01:03:16.345
<v Speaker 0>You might wanna take a look in temp

01:03:16.345 --> 01:03:17.545
<v Speaker 0>e c e c.

01:03:18.025 --> 01:03:20.345
<v Speaker 1>Yeah. Embarrassing question. What does that even do?

01:03:20.345 --> 01:03:22.425
<v Speaker 1>That's the encryption at rest in etcd, right,

01:03:22.425 --> 01:03:23.945
<v Speaker 1>for, like, the raw encryption.

01:03:23.945 --> 01:03:24.985
<v Speaker 0>I believe so. Yes.

01:03:25.760 --> 01:03:26.480
<v Speaker 1>Yeah.

01:03:31.200 --> 01:03:33.040
<v Speaker 0>Now what we have to be careful with

01:03:33.040 --> 01:03:34.080
<v Speaker 0>here is

01:03:34.320 --> 01:03:35.760
<v Speaker 0>if we remove this,

01:03:36.400 --> 01:03:37.599
<v Speaker 0>we can't

01:03:37.615 --> 01:03:39.855
<v Speaker 0>can't read out an SCD anymore or he

01:03:39.855 --> 01:03:41.615
<v Speaker 0>could have added it and not actually enabled

01:03:41.615 --> 01:03:43.455
<v Speaker 0>the encryption on SCD, in which case this

01:03:43.455 --> 01:03:44.815
<v Speaker 0>is the reason it's flapping.

01:03:45.295 --> 01:03:45.935
<v Speaker 0>So what

01:03:47.215 --> 01:03:48.975
<v Speaker 0>we're gonna have to do is check the

01:03:48.975 --> 01:03:51.500
<v Speaker 0>API server logs, I think, and see if

01:03:51.500 --> 01:03:53.500
<v Speaker 0>we can get some information before we go

01:03:53.500 --> 01:03:56.140
<v Speaker 0>all Hulk smash on this. What if we

01:03:56.140 --> 01:03:58.619
<v Speaker 1>Hulk smash it and we just lose all

01:03:58.619 --> 01:03:59.740
<v Speaker 1>of that CD? We can just put it

01:03:59.740 --> 01:04:01.420
<v Speaker 1>back. Right? Because we don't need API server

01:04:01.420 --> 01:04:03.855
<v Speaker 1>access to do it. Yeah. Just don't delete

01:04:03.855 --> 01:04:05.215
<v Speaker 0>the ec.yaml.

01:04:05.455 --> 01:04:06.335
<v Speaker 1>Oh, no. No.

01:04:09.775 --> 01:04:11.935
<v Speaker 0>Mustard. You know, 123456.

01:04:11.935 --> 01:04:13.615
<v Speaker 1>Nice. I wonder if there's gonna be something

01:04:13.615 --> 01:04:14.575
<v Speaker 1>spicy in there.

01:04:15.810 --> 01:04:17.810
<v Speaker 2>I I tried to put it the the

01:04:17.810 --> 01:04:20.450
<v Speaker 2>the thing is you have to limit to

01:04:20.450 --> 01:04:23.010
<v Speaker 2>exactly, like, 16 or a certain number of

01:04:23.010 --> 01:04:24.930
<v Speaker 2>characters so you don't have much

01:04:25.970 --> 01:04:26.770
<v Speaker 2>much

01:04:26.850 --> 01:04:27.970
<v Speaker 2>room for creativity.

01:04:31.685 --> 01:04:32.965
<v Speaker 1>Oh, is it okay. I was gonna get

01:04:32.965 --> 01:04:35.765
<v Speaker 1>the logs through through QCTL through Containerboard. You'll

01:04:35.765 --> 01:04:37.765
<v Speaker 0>need to go to Firelog. Yeah. I'll I'll

01:04:37.765 --> 01:04:39.045
<v Speaker 2>tell you the restarting

01:04:39.045 --> 01:04:41.525
<v Speaker 2>is not passed by the encryption.

01:04:42.085 --> 01:04:44.700
<v Speaker 0>Okay. That's good to know. Okay.

01:04:44.700 --> 01:04:45.900
<v Speaker 0>Containers.

01:04:46.700 --> 01:04:48.860
<v Speaker 1>Yes. Where it is. Then, yeah, cube dash

01:04:48.860 --> 01:04:49.660
<v Speaker 0>API.

01:04:51.100 --> 01:04:52.140
<v Speaker 0>So where do we go?

01:04:58.895 --> 01:04:59.855
<v Speaker 1>No match.

01:05:01.375 --> 01:05:02.575
<v Speaker 1>Failed to list

01:05:02.895 --> 01:05:04.895
<v Speaker 1>config maps. Enable transfer.

01:05:05.295 --> 01:05:07.215
<v Speaker 1>This looks like some Nets CD.

01:05:08.255 --> 01:05:09.935
<v Speaker 1>Registry config maps default.

01:05:11.090 --> 01:05:14.050
<v Speaker 1>Keywords in. Machine. No machine prefix found.

01:05:15.250 --> 01:05:17.730
<v Speaker 1>This does look like it's it's looking for

01:05:17.730 --> 01:05:20.290
<v Speaker 1>a hard coded config map in NCD, and

01:05:20.290 --> 01:05:21.170
<v Speaker 1>the NCD

01:05:21.490 --> 01:05:22.690
<v Speaker 1>tree has been

01:05:23.410 --> 01:05:24.210
<v Speaker 1>mutilated.

01:05:27.095 --> 01:05:27.815
<v Speaker 0>Mm-mm.

01:05:28.375 --> 01:05:30.535
<v Speaker 0>Go back up. Is there any precursors?

01:05:33.815 --> 01:05:35.575
<v Speaker 1>That's just a reboot, isn't it?

01:05:36.775 --> 01:05:38.535
<v Speaker 1>Shutting down. Stop.

01:05:38.935 --> 01:05:41.255
<v Speaker 1>Shutting down. Shutting Shutting down. Shutting down.

01:05:42.430 --> 01:05:44.270
<v Speaker 0>Okay. We wanna check.

01:05:44.590 --> 01:05:46.030
<v Speaker 0>I mean, the STD is running because that's

01:05:46.030 --> 01:05:47.550
<v Speaker 0>why we'd see an error that it couldn't

01:05:47.550 --> 01:05:48.350
<v Speaker 0>actually.

01:05:48.830 --> 01:05:51.870
<v Speaker 1>STD is actually not flapping, is it?

01:05:52.910 --> 01:05:54.875
<v Speaker 0>Oh, I don't know. The only thing is

01:05:54.875 --> 01:05:55.595
<v Speaker 0>PS.

01:05:56.155 --> 01:05:58.474
<v Speaker 1>API server's going by. Yeah. Good. Yeah. One

01:05:58.474 --> 01:06:00.075
<v Speaker 1>time it's restarted, I guess.

01:06:01.755 --> 01:06:03.035
<v Speaker 0>We should be able to see the time

01:06:03.035 --> 01:06:04.395
<v Speaker 0>of the process started.

01:06:05.994 --> 01:06:07.515
<v Speaker 0>Seventy two minutes ago. Right?

01:06:08.610 --> 01:06:10.850
<v Speaker 1>Okay. Yeah. Right. So ACD is okay.

01:06:11.170 --> 01:06:12.450
<v Speaker 1>Does look like it's been

01:06:14.130 --> 01:06:15.810
<v Speaker 1>okay. So it looks like an important config

01:06:15.810 --> 01:06:18.290
<v Speaker 1>map is gone. We can't use the API

01:06:18.290 --> 01:06:19.970
<v Speaker 1>server to inspect it.

01:06:20.290 --> 01:06:21.970
<v Speaker 1>We could use ACD CTL.

01:06:22.355 --> 01:06:24.194
<v Speaker 0>Well, we do get an API server for

01:06:24.194 --> 01:06:25.875
<v Speaker 0>a while, so we could always wait for

01:06:25.875 --> 01:06:27.315
<v Speaker 0>it to restart, and then we're on a

01:06:27.315 --> 01:06:29.234
<v Speaker 0>clock. But maybe there's a nicer way to

01:06:29.234 --> 01:06:29.875
<v Speaker 0>do it.

01:06:30.515 --> 01:06:31.715
<v Speaker 1>Oh, it's back.

01:06:33.635 --> 01:06:34.035
<v Speaker 0>Yeah.

01:06:34.530 --> 01:06:35.250
<v Speaker 0>Get

01:06:35.410 --> 01:06:36.690
<v Speaker 0>config maps all.

01:06:41.810 --> 01:06:42.770
<v Speaker 1>Right.

01:06:46.930 --> 01:06:48.450
<v Speaker 1>Where did it does stuff for config maps

01:06:48.450 --> 01:06:49.250
<v Speaker 1>and not

01:06:50.585 --> 01:06:52.265
<v Speaker 1>pods? Why is it trying to get it

01:06:52.265 --> 01:06:53.305
<v Speaker 1>to CA

01:06:54.984 --> 01:06:56.665
<v Speaker 1>for one and not the other?

01:06:58.744 --> 01:06:59.944
<v Speaker 1>I don't understand that.

01:07:05.160 --> 01:07:08.920
<v Speaker 2>Little confused that k get c content apps

01:07:08.920 --> 01:07:11.560
<v Speaker 2>all did not work. I would have expected

01:07:11.560 --> 01:07:12.280
<v Speaker 2>that to work.

01:07:13.944 --> 01:07:16.505
<v Speaker 1>Okay. Yeah. I love it when have to

01:07:22.585 --> 01:07:23.145
<v Speaker 1>ask them. We

01:07:29.320 --> 01:07:30.200
<v Speaker 2>Wait.

01:07:30.200 --> 01:07:32.360
<v Speaker 2>What was the error when you ran that?

01:07:33.640 --> 01:07:34.600
<v Speaker 1>Something about

01:07:35.640 --> 01:07:36.760
<v Speaker 1>I'll show you.

01:07:37.080 --> 01:07:39.640
<v Speaker 1>Something about I love how you're joining to

01:07:39.640 --> 01:07:42.185
<v Speaker 1>fix this as well. Okay. None of those.

01:07:42.185 --> 01:07:43.625
<v Speaker 0>Try to get Centimeters again.

01:07:45.145 --> 01:07:48.265
<v Speaker 0>Unable to transform key. Right? Okay. So, yeah,

01:07:48.265 --> 01:07:50.585
<v Speaker 2>that does make sense, I think, actually.

01:07:51.305 --> 01:07:52.185
<v Speaker 2>Why? Yeah.

01:07:53.480 --> 01:07:56.280
<v Speaker 1>Because there's a few especially config maps. Right?

01:07:56.280 --> 01:07:57.480
<v Speaker 1>Out of the box, there's a few of

01:07:57.480 --> 01:07:58.280
<v Speaker 1>them that

01:07:59.480 --> 01:08:01.960
<v Speaker 1>are, like, completely intrinsic. And I think, you

01:08:01.960 --> 01:08:03.480
<v Speaker 1>know, because you could there's always a service

01:08:03.480 --> 01:08:05.400
<v Speaker 1>called Kubernetes, and there's always a config map,

01:08:05.400 --> 01:08:06.839
<v Speaker 1>I think, with the cluster c a in,

01:08:07.305 --> 01:08:08.825
<v Speaker 1>there's always just something else. And it looks

01:08:08.825 --> 01:08:10.745
<v Speaker 1>like he's maybe managed to delete it.

01:08:11.065 --> 01:08:12.585
<v Speaker 1>And, like, the error handling,

01:08:12.665 --> 01:08:14.744
<v Speaker 1>it's just always expected to be there. So

01:08:14.744 --> 01:08:16.265
<v Speaker 1>the error handling is just it just doesn't

01:08:16.265 --> 01:08:17.785
<v Speaker 1>really wrap it nicely, and it's saying, well,

01:08:17.785 --> 01:08:18.984
<v Speaker 1>I'm trying to get this because this is

01:08:18.984 --> 01:08:20.505
<v Speaker 1>this is the raw key in NCD. Right?

01:08:20.505 --> 01:08:22.265
<v Speaker 1>It keeps everything under slash registry in NCD

01:08:22.265 --> 01:08:24.319
<v Speaker 1>for some reason. So this is the raw

01:08:24.319 --> 01:08:26.639
<v Speaker 1>etcd path, and it's just saying it can't

01:08:26.800 --> 01:08:29.200
<v Speaker 1>can't find this or can't find some, you

01:08:29.200 --> 01:08:31.200
<v Speaker 1>know, some prefix of it. Yeah. So I

01:08:31.200 --> 01:08:34.240
<v Speaker 0>always use this to configure etcdctl.

01:08:35.594 --> 01:08:37.114
<v Speaker 0>Let's copy this.

01:08:37.835 --> 01:08:38.795
<v Speaker 1>Yes.

01:08:38.795 --> 01:08:40.554
<v Speaker 1>Cool. I can never remember how to do

01:08:40.554 --> 01:08:41.034
<v Speaker 1>that.

01:08:42.314 --> 01:08:43.114
<v Speaker 0>Okay.

01:08:43.434 --> 01:08:45.114
<v Speaker 0>What was it? Registry.

01:08:45.994 --> 01:08:46.394
<v Speaker 1>Yeah.

01:08:51.170 --> 01:08:52.290
<v Speaker 0>I don't know if I should be seeing

01:08:52.290 --> 01:08:54.370
<v Speaker 0>something or not. I'm not an entity. I

01:08:54.370 --> 01:08:56.050
<v Speaker 2>think we have to go

01:08:57.650 --> 01:08:58.610
<v Speaker 2>registry

01:08:58.610 --> 01:09:00.370
<v Speaker 2>slash the namespace

01:09:00.370 --> 01:09:03.825
<v Speaker 2>slash config maps or config maps slash namespace

01:09:03.825 --> 01:09:05.585
<v Speaker 2>one or the other? I forgot.

01:09:06.545 --> 01:09:08.865
<v Speaker 1>It's it's config maps slash namespace by the

01:09:08.865 --> 01:09:10.944
<v Speaker 1>looks of that error. There is a flag,

01:09:10.944 --> 01:09:13.265
<v Speaker 2>something like list resources or something like that

01:09:13.265 --> 01:09:14.705
<v Speaker 2>to show you the tree,

01:09:15.770 --> 01:09:18.090
<v Speaker 2>if I remember correctly. Yeah. There there was

01:09:18.090 --> 01:09:20.330
<v Speaker 1>some kind of, like, list commands in there.

01:09:22.330 --> 01:09:24.330
<v Speaker 1>This is my least least favorite part of

01:09:24.330 --> 01:09:26.650
<v Speaker 1>the CKA. Yeah. This is a bit intractable,

01:09:26.650 --> 01:09:27.210
<v Speaker 1>this NCD.

01:09:27.975 --> 01:09:29.734
<v Speaker 0>I don't remember NCD.

01:09:30.774 --> 01:09:32.295
<v Speaker 1>No. You might have to go

01:09:32.854 --> 01:09:34.535
<v Speaker 1>do want me to Google some stuff?

01:09:35.814 --> 01:09:38.774
<v Speaker 0>Well, we ran get registered services, and that

01:09:38.774 --> 01:09:41.175
<v Speaker 0>worked. Right? We actually got this value back.

01:09:46.670 --> 01:09:49.069
<v Speaker 1>I have an SCD cheat sheet. Right. So

01:09:49.149 --> 01:09:51.629
<v Speaker 0>because this one doesn't work. Right? So

01:09:51.949 --> 01:09:53.710
<v Speaker 0>why can't we do

01:09:58.865 --> 01:10:00.065
<v Speaker 0>config maps?

01:10:05.025 --> 01:10:07.585
<v Speaker 1>Where did specs come from? It was just

01:10:07.585 --> 01:10:08.545
<v Speaker 0>part of that thing.

01:10:09.429 --> 01:10:10.869
<v Speaker 0>I don't know how to show the tree,

01:10:10.869 --> 01:10:12.789
<v Speaker 0>so let's try that. Add to the CTL,

01:10:12.789 --> 01:10:13.749
<v Speaker 0>print tree.

01:10:15.590 --> 01:10:16.149
<v Speaker 1>So

01:10:17.270 --> 01:10:18.789
<v Speaker 1>I I should I start copying and pasting

01:10:18.789 --> 01:10:20.309
<v Speaker 1>from this cheat sheet? Oh, yeah. Go for

01:10:20.309 --> 01:10:21.269
<v Speaker 0>it. Fuck it.

01:10:22.150 --> 01:10:23.429
<v Speaker 1>Yeah. I don't I don't know what it

01:10:23.429 --> 01:10:23.590
<v Speaker 1>is.

01:10:24.755 --> 01:10:27.635
<v Speaker 0>Yeah. There we go. Alright. So Oh, yeah.

01:10:27.635 --> 01:10:30.114
<v Speaker 1>There we go. What's under config map?

01:10:30.835 --> 01:10:32.755
<v Speaker 0>Flash registry slash config map.

01:10:40.480 --> 01:10:43.920
<v Speaker 0>So we do have default kubrits here. Yeah.

01:10:44.239 --> 01:10:46.080
<v Speaker 0>But what's the error message again? I'm gonna

01:10:46.080 --> 01:10:47.199
<v Speaker 0>copy this. But

01:10:48.400 --> 01:10:49.920
<v Speaker 1>It's basically saying that doesn't exist.

01:10:53.455 --> 01:10:54.655
<v Speaker 0>Is that the same?

01:10:58.335 --> 01:11:00.094
<v Speaker 1>Did you copy a registry?

01:11:00.175 --> 01:11:00.655
<v Speaker 1>Nice.

01:11:03.135 --> 01:11:04.415
<v Speaker 1>He wouldn't do that to us, would he?

01:11:04.415 --> 01:11:05.855
<v Speaker 1>Is it u is it a UTF eight

01:11:05.855 --> 01:11:06.175
<v Speaker 1>hack?

01:11:06.940 --> 01:11:08.059
<v Speaker 0>They're not allowed?

01:11:08.780 --> 01:11:09.419
<v Speaker 0>No.

01:11:09.659 --> 01:11:11.979
<v Speaker 0>That actually looks alright. Okay. So

01:11:13.179 --> 01:11:14.459
<v Speaker 0>that's interesting.

01:11:15.340 --> 01:11:16.860
<v Speaker 1>I'm able to transform

01:11:16.860 --> 01:11:17.420
<v Speaker 1>key.

01:11:18.955 --> 01:11:20.395
<v Speaker 1>I assume we're reading this right. I mean,

01:11:20.395 --> 01:11:21.594
<v Speaker 1>to me, that just says it doesn't exist

01:11:21.594 --> 01:11:23.355
<v Speaker 1>in the database, but maybe that's

01:11:23.675 --> 01:11:25.355
<v Speaker 1>maybe there's more nuance to that error. Can

01:11:25.355 --> 01:11:26.795
<v Speaker 2>use the x c d

01:11:27.035 --> 01:11:29.114
<v Speaker 2>x c t l to check what it

01:11:29.114 --> 01:11:31.435
<v Speaker 2>what it the value is in there. Right?

01:11:35.329 --> 01:11:36.929
<v Speaker 1>Okay. Yeah. I was assuming that meant the

01:11:36.929 --> 01:11:38.289
<v Speaker 1>key didn't exist.

01:11:38.530 --> 01:11:39.810
<v Speaker 1>But, yeah, let's we could try to get

01:11:39.810 --> 01:11:40.849
<v Speaker 1>its value again.

01:11:41.170 --> 01:11:42.689
<v Speaker 1>You tried that, though, didn't you, David?

01:11:43.090 --> 01:11:45.489
<v Speaker 0>Yeah. But we weren't doing it right. So

01:11:45.650 --> 01:11:47.170
<v Speaker 0>I mean, I wasn't doing it right.

01:11:56.835 --> 01:11:57.955
<v Speaker 1>Looks like you said to me.

01:12:02.790 --> 01:12:04.310
<v Speaker 1>I mean, it might be garbage, but I

01:12:04.310 --> 01:12:05.190
<v Speaker 1>I like,

01:12:05.510 --> 01:12:07.270
<v Speaker 1>I'm not reading the I'm not reading the

01:12:07.270 --> 01:12:07.989
<v Speaker 1>error message.

01:12:08.310 --> 01:12:09.990
<v Speaker 1>The error message to me says, yeah, no

01:12:09.990 --> 01:12:11.430
<v Speaker 1>prefix found. It means that that path in

01:12:11.430 --> 01:12:12.390
<v Speaker 1>SCD doesn't exist.

01:12:15.595 --> 01:12:16.235
<v Speaker 0>But

01:12:17.515 --> 01:12:18.475
<v Speaker 0>Yeah. It is.

01:12:20.395 --> 01:12:22.315
<v Speaker 0>Gonna be something subtle, isn't it? So the

01:12:22.315 --> 01:12:23.355
<v Speaker 0>path exists.

01:12:23.995 --> 01:12:26.155
<v Speaker 0>Yeah. That other message is really shit. I'm

01:12:26.155 --> 01:12:26.795
<v Speaker 0>gonna Google it.

01:12:27.490 --> 01:12:29.410
<v Speaker 1>Yeah. Do it. Because I I SCD is

01:12:29.410 --> 01:12:30.850
<v Speaker 1>honestly my least favorite part in this. Can

01:12:30.850 --> 01:12:33.489
<v Speaker 2>you you try something else? Can you get

01:12:33.490 --> 01:12:36.050
<v Speaker 2>config maps from a different namespace?

01:12:38.050 --> 01:12:38.450
<v Speaker 2>Like

01:12:38.930 --> 01:12:40.930
<v Speaker 2>Interesting. Specific namespace?

01:12:42.425 --> 01:12:44.585
<v Speaker 1>Just cube c No. No. No. I mean

01:12:44.585 --> 01:12:46.025
<v Speaker 2>cube c t l.

01:12:50.985 --> 01:12:52.425
<v Speaker 1>Dash dash keys only.

01:12:55.785 --> 01:12:56.665
<v Speaker 0>Oh, okay.

01:12:57.420 --> 01:12:58.219
<v Speaker 0>Yeah.

01:12:58.780 --> 01:13:01.260
<v Speaker 0>Oh, we can. It's just the default namespace.

01:13:01.660 --> 01:13:03.659
<v Speaker 1>Okay. It's just black.

01:13:07.020 --> 01:13:08.860
<v Speaker 0>Alright. Well, it was I had fun, but

01:13:08.860 --> 01:13:10.140
<v Speaker 0>I'll see you later. I'll go home.

01:13:14.075 --> 01:13:15.594
<v Speaker 1>Wow. Okay.

01:13:16.155 --> 01:13:18.475
<v Speaker 1>What sits between the API server and entity?

01:13:18.475 --> 01:13:19.755
<v Speaker 1>Like, nothing that I'm

01:13:20.795 --> 01:13:21.515
<v Speaker 1>aware of.

01:13:25.679 --> 01:13:27.519
<v Speaker 1>And this isn't our like, if RBAC wasn't

01:13:27.519 --> 01:13:29.440
<v Speaker 1>allowing us, then it would be a much

01:13:29.440 --> 01:13:29.999
<v Speaker 1>more,

01:13:30.559 --> 01:13:33.519
<v Speaker 1>you know, friendly Kubernetes level error. Right?

01:13:34.320 --> 01:13:35.920
<v Speaker 1>The fact this is saying internal error, the

01:13:35.920 --> 01:13:37.360
<v Speaker 1>fact this is making it into the API

01:13:37.360 --> 01:13:38.639
<v Speaker 1>server's logs

01:13:39.844 --> 01:13:42.164
<v Speaker 1>means this isn't, you know, this this

01:13:42.565 --> 01:13:44.885
<v Speaker 1>is an exception. This this isn't, like, an

01:13:44.885 --> 01:13:46.164
<v Speaker 1>RBAC or anything.

01:13:46.565 --> 01:13:48.405
<v Speaker 0>I'm gonna take a look at this.

01:13:55.449 --> 01:13:56.409
<v Speaker 1>Which

01:13:56.969 --> 01:13:58.969
<v Speaker 1>namespace is that meant to be in?

01:13:59.210 --> 01:14:00.969
<v Speaker 0>Well, that is the cube system one. Right?

01:14:00.969 --> 01:14:01.929
<v Speaker 0>But that

01:14:02.570 --> 01:14:03.929
<v Speaker 0>what I'm worried Is it meant to be

01:14:03.929 --> 01:14:04.409
<v Speaker 1>in both?

01:14:05.355 --> 01:14:07.195
<v Speaker 0>I think it's in every namespace.

01:14:07.675 --> 01:14:09.034
<v Speaker 1>Oh, is it? Okay.

01:14:09.275 --> 01:14:10.635
<v Speaker 1>Oh, right. So that you can always get

01:14:10.635 --> 01:14:12.395
<v Speaker 1>it no matter what your RBAC is. Okay.

01:14:20.130 --> 01:14:21.409
<v Speaker 0>Are those the same?

01:14:24.690 --> 01:14:25.329
<v Speaker 1>Yes.

01:14:26.930 --> 01:14:28.370
<v Speaker 1>Maybe you should be I mean, I I

01:14:28.370 --> 01:14:30.130
<v Speaker 0>did a very simple test of the first

01:14:30.130 --> 01:14:31.969
<v Speaker 0>five and last five characters, but I'm gonna

01:14:31.969 --> 01:14:32.210
<v Speaker 0>assume,

01:14:32.784 --> 01:14:34.784
<v Speaker 0>that they are Oh, it's it's hash yeah.

01:14:34.784 --> 01:14:37.184
<v Speaker 1>It's hash algorithms go. That's like NSA proof.

01:14:37.905 --> 01:14:38.624
<v Speaker 1>So

01:14:39.905 --> 01:14:41.425
<v Speaker 1>Yeah. And it's I mean, they yeah. It's

01:14:41.505 --> 01:14:43.344
<v Speaker 1>there's a few because they're on the serialized

01:14:43.344 --> 01:14:45.025
<v Speaker 1>protos. Right? So there's you can see the

01:14:45.025 --> 01:14:47.184
<v Speaker 1>text. I think was winning a gift card

01:14:47.184 --> 01:14:47.744
<v Speaker 0>at this rate.

01:14:48.619 --> 01:14:50.699
<v Speaker 1>Yeah. This is this is awful. Whatever it

01:14:50.699 --> 01:14:51.260
<v Speaker 1>is.

01:14:56.940 --> 01:14:58.780
<v Speaker 1>Cannot transform me. Did you find anything on

01:14:58.780 --> 01:15:00.619
<v Speaker 1>the error message? Because what what's the transform

01:15:00.619 --> 01:15:01.179
<v Speaker 1>part about?

01:15:13.525 --> 01:15:15.844
<v Speaker 0>It is encryption related. You told us it

01:15:15.844 --> 01:15:16.565
<v Speaker 0>wasn't, Marco.

01:15:17.590 --> 01:15:19.110
<v Speaker 2>Yeah. Yeah. Restarts

01:15:19.110 --> 01:15:21.030
<v Speaker 2>aren't encryption related. No?

01:15:22.070 --> 01:15:24.070
<v Speaker 0>Alright. Okay. The restarts are due to this.

01:15:24.310 --> 01:15:26.390
<v Speaker 2>Issues with encryption. Yeah.

01:15:26.710 --> 01:15:28.550
<v Speaker 1>The the thing spams this into its logs

01:15:28.550 --> 01:15:30.310
<v Speaker 1>and then quit. Like, the restarts are due

01:15:30.310 --> 01:15:31.910
<v Speaker 1>to this. Surely. Surely.

01:15:33.765 --> 01:15:36.165
<v Speaker 1>Okay. I'm assuming you've enabled encryption,

01:15:36.245 --> 01:15:38.885
<v Speaker 0>but not you've you've not on this key

01:15:38.885 --> 01:15:40.725
<v Speaker 0>or you've put the old version of this

01:15:40.725 --> 01:15:41.685
<v Speaker 0>key back into.

01:15:42.165 --> 01:15:43.445
<v Speaker 0>I'm gonna assume

01:15:44.165 --> 01:15:46.640
<v Speaker 1>He's encrypted one namespace. Right? He's encrypted one

01:15:46.640 --> 01:15:47.920
<v Speaker 1>or the other because it works for one,

01:15:47.920 --> 01:15:49.040
<v Speaker 1>and it doesn't work. It's gonna let my

01:15:49.040 --> 01:15:50.480
<v Speaker 0>turn on. Oh, wait. It's done the scrolly

01:15:50.480 --> 01:15:51.520
<v Speaker 0>bug, hasn't it?

01:15:51.920 --> 01:15:53.680
<v Speaker 1>How on earth are we gonna undo that

01:15:53.680 --> 01:15:56.160
<v Speaker 1>in fifteen minutes? So I'm assuming he's maybe

01:15:56.160 --> 01:15:57.920
<v Speaker 0>been nice to us and left us

01:15:58.640 --> 01:16:00.800
<v Speaker 1>Yeah. I guess a script or

01:16:04.855 --> 01:16:06.855
<v Speaker 1>I wonder what he's done to Cilium with

01:16:06.855 --> 01:16:08.855
<v Speaker 1>Cilium's

01:16:08.855 --> 01:16:10.455
<v Speaker 1>deployment being in temp.

01:16:13.175 --> 01:16:17.015
<v Speaker 0>I wonder if we can just do

01:16:16.050 --> 01:16:17.330
<v Speaker 0>a get from

01:16:17.330 --> 01:16:19.810
<v Speaker 0>the cube system namespace. Right?

01:16:21.330 --> 01:16:24.770
<v Speaker 0>And store it into the default space. Yeah.

01:16:27.650 --> 01:16:29.875
<v Speaker 0>That's encrypt it. The other one is plain

01:16:29.875 --> 01:16:30.594
<v Speaker 0>text.

01:16:31.155 --> 01:16:32.675
<v Speaker 0>So we're gonna have to

01:16:33.074 --> 01:16:34.114
<v Speaker 0>in fact, let's take a look at the

01:16:34.114 --> 01:16:36.195
<v Speaker 0>default one one more time. Right? So

01:16:37.074 --> 01:16:38.995
<v Speaker 0>I don't think there's enough namespace

01:16:38.995 --> 01:16:40.940
<v Speaker 0>in it. Right? It's just a certificate. It's

01:16:40.940 --> 01:16:43.100
<v Speaker 0>just a metadata. So we can just write

01:16:43.100 --> 01:16:45.739
<v Speaker 0>the cube system one to the default key.

01:16:46.380 --> 01:16:48.460
<v Speaker 1>So Yeah. Right. Yeah. Okay. So encryption's on,

01:16:48.460 --> 01:16:50.860
<v Speaker 1>so it's trying to decipher everything, and the

01:16:50.860 --> 01:16:52.940
<v Speaker 1>one in default is not enciphered. So it's

01:16:52.940 --> 01:16:54.700
<v Speaker 1>it's deciphering the garbage or it's not checks

01:16:54.700 --> 01:16:57.074
<v Speaker 1>something or something. Okay. So this is the

01:16:57.074 --> 01:16:57.235
<v Speaker 1>o

01:16:57.875 --> 01:17:00.354
<v Speaker 0>This is our encrypted

01:17:00.835 --> 01:17:01.635
<v Speaker 0>secret.

01:17:01.715 --> 01:17:03.714
<v Speaker 1>But has he only encrypted

01:17:04.434 --> 01:17:05.314
<v Speaker 1>the one

01:17:05.715 --> 01:17:07.474
<v Speaker 1>everything else works. I know you're right. Encryption's

01:17:07.474 --> 01:17:08.835
<v Speaker 1>on, and we can read the pods, and

01:17:08.835 --> 01:17:10.434
<v Speaker 1>we can read the deployments and stuff. Right?

01:17:10.434 --> 01:17:12.300
<v Speaker 1>So we did yeah. Okay. I think everything

01:17:12.300 --> 01:17:13.900
<v Speaker 1>but one thing is encrypted.

01:17:14.300 --> 01:17:15.820
<v Speaker 0>So let's put

01:17:17.099 --> 01:17:18.380
<v Speaker 1>And that's a smart way to do it.

01:17:18.380 --> 01:17:19.500
<v Speaker 1>Right? Because we get the error on the

01:17:19.500 --> 01:17:21.340
<v Speaker 1>one that's unencrypted, and we inspect it with

01:17:21.340 --> 01:17:23.340
<v Speaker 1>etcd CTL, and it looks okay.

01:17:23.580 --> 01:17:26.219
<v Speaker 1>That's that's a very smart way to

01:17:26.945 --> 01:17:28.705
<v Speaker 1>send us down the wrong path. So how

01:17:28.705 --> 01:17:29.105
<v Speaker 0>do we

01:17:30.625 --> 01:17:33.025
<v Speaker 0>we can't interesting workaround. I mean, the the

01:17:33.025 --> 01:17:35.745
<v Speaker 2>solution is actually much easier than this. But,

01:17:36.625 --> 01:17:38.225
<v Speaker 2>like, oh, but

01:17:39.425 --> 01:17:41.105
<v Speaker 2>now I'm curious if this will work.

01:17:42.370 --> 01:17:44.290
<v Speaker 1>Let me get my cheat sheet up.

01:17:46.770 --> 01:17:48.530
<v Speaker 0>Well, let's try to read the default one

01:17:48.530 --> 01:17:49.170
<v Speaker 0>again.

01:17:50.530 --> 01:17:51.970
<v Speaker 1>Yeah. There should just be a put. You

01:17:51.970 --> 01:17:53.970
<v Speaker 1>should be able put. I've put it. Yeah.

01:17:53.970 --> 01:17:54.290
<v Speaker 2>Okay.

01:17:55.445 --> 01:17:57.605
<v Speaker 2>Alright. This is great. Awesome.

01:18:00.085 --> 01:18:01.445
<v Speaker 0>Scroll bug.

01:18:03.925 --> 01:18:05.445
<v Speaker 0>Oh, we've currently got it.

01:18:06.245 --> 01:18:07.605
<v Speaker 0>Okay. So we still need to fix the

01:18:07.605 --> 01:18:09.125
<v Speaker 0>flapping, but I think we might be able

01:18:09.125 --> 01:18:10.485
<v Speaker 0>to get all the config maps so that

01:18:10.485 --> 01:18:12.750
<v Speaker 0>API server comes back. So let's let's deal

01:18:12.750 --> 01:18:14.510
<v Speaker 0>with this flapping because that's getting made too

01:18:14.510 --> 01:18:16.670
<v Speaker 0>fucking annoying. Yeah. Okay. So this so that

01:18:16.670 --> 01:18:18.909
<v Speaker 1>encryption error was was filling up the logs.

01:18:18.909 --> 01:18:20.590
<v Speaker 1>So, yeah, let's try to find the flapping.

01:18:22.670 --> 01:18:24.349
<v Speaker 1>Grep dash v is your friend, I think.

01:18:25.545 --> 01:18:26.265
<v Speaker 0>Okay.

01:18:28.745 --> 01:18:29.865
<v Speaker 0>We'll just need to wait for that to

01:18:29.865 --> 01:18:31.785
<v Speaker 0>come back. Maybe that is why it's flapping.

01:18:33.225 --> 01:18:35.305
<v Speaker 0>Because there'll be watchers on that config map,

01:18:35.305 --> 01:18:37.145
<v Speaker 0>and it's just shutting down the API server.

01:18:37.145 --> 01:18:38.665
<v Speaker 1>There will, but he said it wasn't, which

01:18:38.665 --> 01:18:39.945
<v Speaker 1>means he's done something else

01:18:40.840 --> 01:18:43.480
<v Speaker 1>to the API server. Alright. Okay. I I

01:18:43.480 --> 01:18:46.199
<v Speaker 0>missed that. Okay. So grab dash v

01:18:46.680 --> 01:18:48.360
<v Speaker 0>less than watch.

01:18:51.000 --> 01:18:52.920
<v Speaker 0>We might be getting a new log.

01:18:54.040 --> 01:18:54.680
<v Speaker 1>Maybe.

01:19:00.235 --> 01:19:01.195
<v Speaker 0>Not yet.

01:19:06.554 --> 01:19:08.235
<v Speaker 1>It takes it takes a while. Does it

01:19:08.235 --> 01:19:10.475
<v Speaker 2>make useful comment

01:19:10.150 --> 01:19:10.949
<v Speaker 2>also?

01:19:10.950 --> 01:19:13.350
<v Speaker 2>You can take a look at in the

01:19:13.350 --> 01:19:13.989
<v Speaker 2>chat.

01:19:14.630 --> 01:19:15.909
<v Speaker 0>The one from Bala?

01:19:16.630 --> 01:19:17.270
<v Speaker 2>Yeah.

01:19:17.430 --> 01:19:20.150
<v Speaker 0>So Bala says, please check the identity tag

01:19:20.150 --> 01:19:21.510
<v Speaker 0>and the encryption config.

01:19:25.815 --> 01:19:26.695
<v Speaker 1>Okay.

01:19:29.175 --> 01:19:30.054
<v Speaker 0>And this?

01:19:32.375 --> 01:19:33.574
<v Speaker 1>Identities.

01:19:34.055 --> 01:19:34.695
<v Speaker 0>Or

01:19:39.040 --> 01:19:39.519
<v Speaker 1>Maybe

01:19:40.400 --> 01:19:44.159
<v Speaker 2>Google, like, identity and that CD encryption

01:19:46.080 --> 01:19:47.440
<v Speaker 2>config or something.

01:19:47.440 --> 01:19:49.360
<v Speaker 0>So you're telling me we've not fixed it.

01:19:49.360 --> 01:19:50.480
<v Speaker 0>Is that what you're saying?

01:19:51.304 --> 01:19:53.225
<v Speaker 2>Well, you did fix it for that one

01:19:53.225 --> 01:19:55.144
<v Speaker 2>one config map.

01:19:56.745 --> 01:19:58.745
<v Speaker 1>Alright. So I thought you were just being

01:19:58.745 --> 01:20:00.344
<v Speaker 0>curling the way to to to one thing.

01:20:00.344 --> 01:20:02.344
<v Speaker 1>Right? This this will be

01:20:03.090 --> 01:20:05.090
<v Speaker 1>you're right. This will be the key ID.

01:20:05.090 --> 01:20:06.450
<v Speaker 1>I'm actually making it pick up the key

01:20:06.450 --> 01:20:07.250
<v Speaker 1>or something.

01:20:12.290 --> 01:20:14.449
<v Speaker 0>Where's our API server? Hold on.

01:20:15.090 --> 01:20:16.715
<v Speaker 1>Yeah. Does it do crashly back off on

01:20:16.715 --> 01:20:18.315
<v Speaker 1>static ports? Because this is taking a long

01:20:18.315 --> 01:20:18.874
<v Speaker 1>time.

01:20:19.195 --> 01:20:19.914
<v Speaker 0>No.

01:20:21.195 --> 01:20:22.715
<v Speaker 0>The kiblet can just be a bit temperamental

01:20:22.715 --> 01:20:23.994
<v Speaker 0>at times. It can take up to, like,

01:20:23.994 --> 01:20:24.794
<v Speaker 0>four minutes.

01:20:25.355 --> 01:20:26.795
<v Speaker 0>You could always restart the kiblet.

01:20:29.380 --> 01:20:30.020
<v Speaker 1>Yeah.

01:20:35.220 --> 01:20:36.099
<v Speaker 0>There

01:20:38.980 --> 01:20:40.980
<v Speaker 0>we go. So k c m.

01:20:43.175 --> 01:20:44.934
<v Speaker 0>No. Alright. We're gonna have to fix this

01:20:44.934 --> 01:20:45.894
<v Speaker 0>properly then.

01:20:46.135 --> 01:20:47.734
<v Speaker 0>Or or hack doesn't work.

01:20:48.934 --> 01:20:50.215
<v Speaker 1>Okay. So, yeah, let's Google

01:20:50.775 --> 01:20:52.454
<v Speaker 2>guys that can fix it.

01:20:53.255 --> 01:20:53.894
<v Speaker 2>Interesting.

01:20:55.094 --> 01:20:55.655
<v Speaker 0>I mean,

01:21:01.199 --> 01:21:02.400
<v Speaker 0>it's encrypted.

01:21:03.600 --> 01:21:04.959
<v Speaker 1>It's very encrypted.

01:21:05.679 --> 01:21:07.120
<v Speaker 0>Okay. So we need to do that. If

01:21:07.120 --> 01:21:10.239
<v Speaker 2>you can you recreate that secret by, like,

01:21:10.239 --> 01:21:12.000
<v Speaker 2>using through KubeCTL?

01:21:18.855 --> 01:21:21.175
<v Speaker 0>Yes. So you what your suggestion is we

01:21:21.175 --> 01:21:23.815
<v Speaker 0>could do Yeah. Let's try and do that

01:21:23.815 --> 01:21:25.255
<v Speaker 2>first. System.

01:21:25.495 --> 01:21:25.895
<v Speaker 0>Yep.

01:21:39.780 --> 01:21:40.420
<v Speaker 0>System.

01:21:41.824 --> 01:21:44.864
<v Speaker 0>Root c a c r t o yaml

01:21:45.105 --> 01:21:46.224
<v Speaker 0>yaml.

01:21:47.745 --> 01:21:50.385
<v Speaker 0>And we can change this. Yeah. So I

01:21:50.385 --> 01:21:52.545
<v Speaker 0>never changed the matte as which probably break

01:21:52.545 --> 01:21:52.784
<v Speaker 0>it.

01:21:53.929 --> 01:21:55.289
<v Speaker 0>And apply.

01:22:01.770 --> 01:22:02.409
<v Speaker 1>What?

01:22:08.615 --> 01:22:10.455
<v Speaker 0>Alright. We need to learn how this encryption

01:22:10.695 --> 01:22:13.015
<v Speaker 1>Oh, apply. Yeah. Do a do just do

01:22:13.015 --> 01:22:14.695
<v Speaker 1>a delete. Just do a delete and a

01:22:14.695 --> 01:22:16.375
<v Speaker 1>create because if apply is trying to read

01:22:16.375 --> 01:22:17.735
<v Speaker 1>it to do a three way merge, and

01:22:17.735 --> 01:22:18.775
<v Speaker 1>it can't read it.

01:22:19.895 --> 01:22:20.535
<v Speaker 1>So

01:22:20.695 --> 01:22:23.250
<v Speaker 1>smash it. Hulk smash it. It didn't work

01:22:23.250 --> 01:22:25.730
<v Speaker 0>unless, I guess, we do an STD delete.

01:22:25.810 --> 01:22:27.490
<v Speaker 2>Well, you were trying to delete the file

01:22:27.490 --> 01:22:29.490
<v Speaker 2>you were trying to apply. Right? So that

01:22:29.490 --> 01:22:30.610
<v Speaker 2>will not work.

01:22:31.090 --> 01:22:32.610
<v Speaker 2>Right. Hey.

01:22:33.410 --> 01:22:34.370
<v Speaker 2>Okay. Great.

01:22:35.805 --> 01:22:37.645
<v Speaker 1>There we go. Oh, now the post. Okay.

01:22:37.645 --> 01:22:39.485
<v Speaker 0>So we need to encrypt everything or

01:22:40.125 --> 01:22:42.045
<v Speaker 0>do this identity hack to make it not

01:22:42.045 --> 01:22:44.205
<v Speaker 0>really Yeah. Let's let's do that identity thing

01:22:44.205 --> 01:22:45.244
<v Speaker 1>that we've talked about.

01:22:45.885 --> 01:22:47.005
<v Speaker 0>Alright. So we can

01:22:48.240 --> 01:22:51.120
<v Speaker 0>set encryption field type to identity.

01:22:51.680 --> 01:22:53.600
<v Speaker 1>Oh, that and, like, that kind of identity.

01:22:53.600 --> 01:22:55.280
<v Speaker 1>Okay. Do you know what that means? Do

01:22:55.280 --> 01:22:56.240
<v Speaker 0>you wanna go for it?

01:22:56.720 --> 01:22:58.400
<v Speaker 1>Oh, just as in it means, like like,

01:22:58.400 --> 01:23:00.320
<v Speaker 1>the identity function. Right? As in it means

01:23:00.320 --> 01:23:02.560
<v Speaker 1>just pass through and don't like, encryption type

01:23:02.560 --> 01:23:04.000
<v Speaker 1>identity just means don't do anything,

01:23:04.935 --> 01:23:05.814
<v Speaker 1>I guess.

01:23:06.695 --> 01:23:08.135
<v Speaker 1>But that doesn't make sense because a lot

01:23:08.135 --> 01:23:10.294
<v Speaker 1>of what's in XED is enciphered.

01:23:11.255 --> 01:23:12.054
<v Speaker 2>Right.

01:23:12.135 --> 01:23:14.135
<v Speaker 2>Except some of it wasn't.

01:23:14.775 --> 01:23:17.014
<v Speaker 1>Except some of it. But if we default

01:23:17.014 --> 01:23:19.979
<v Speaker 2>name space config maps weren't encrypted.

01:23:20.780 --> 01:23:23.099
<v Speaker 2>Right? Okay. You're saying we can get default

01:23:23.099 --> 01:23:24.860
<v Speaker 1>working again if we do this. We might

01:23:24.860 --> 01:23:26.059
<v Speaker 1>break some other stuff.

01:23:26.460 --> 01:23:28.539
<v Speaker 2>Right. So, like, if you Google,

01:23:28.860 --> 01:23:31.500
<v Speaker 2>like, HCD encryption config

01:23:31.595 --> 01:23:33.675
<v Speaker 2>or something. Oh, we could do it per

01:23:33.675 --> 01:23:35.114
<v Speaker 1>namespace. Okay.

01:23:40.875 --> 01:23:42.475
<v Speaker 1>I love if you Google for etcd. The

01:23:42.475 --> 01:23:43.995
<v Speaker 1>first hit is Kubernetes even if you don't

01:23:43.995 --> 01:23:47.440
<v Speaker 1>specify it. Okay. So there is an identity

01:23:47.440 --> 01:23:48.880
<v Speaker 2>right there.

01:23:49.520 --> 01:23:51.039
<v Speaker 2>Do I have that there?

01:23:52.159 --> 01:23:52.719
<v Speaker 0>No.

01:23:53.760 --> 01:23:56.880
<v Speaker 2>Right. So, basically, I encrypted all namespaces

01:23:57.040 --> 01:23:57.840
<v Speaker 2>except

01:23:58.239 --> 01:23:58.800
<v Speaker 2>default.

01:24:00.045 --> 01:24:01.965
<v Speaker 2>So it wasn't but because there was no

01:24:01.965 --> 01:24:04.765
<v Speaker 2>identity there, it wasn't able to read those

01:24:04.765 --> 01:24:06.605
<v Speaker 2>because they were not encrypted.

01:24:08.445 --> 01:24:11.085
<v Speaker 1>Oh, right. We needed an a configuration

01:24:11.405 --> 01:24:13.885
<v Speaker 1>and and resistant. The reason I did that

01:24:13.885 --> 01:24:16.285
<v Speaker 2>is because if you would decide to just

01:24:15.780 --> 01:24:17.139
<v Speaker 2>turn off encryption,

01:24:17.860 --> 01:24:20.260
<v Speaker 2>that would break the rest of the cluster.

01:24:20.500 --> 01:24:22.179
<v Speaker 2>Because then it would be able to read

01:24:22.179 --> 01:24:23.940
<v Speaker 2>that that namespace,

01:24:23.940 --> 01:24:26.500
<v Speaker 2>but then all of the control plane contain

01:24:26.500 --> 01:24:28.500
<v Speaker 2>maps will now work because they are now

01:24:28.500 --> 01:24:29.139
<v Speaker 2>encrypted

01:24:29.595 --> 01:24:31.995
<v Speaker 2>and would break the entire cluster. Okay. Found

01:24:31.995 --> 01:24:34.395
<v Speaker 1>that half encrypted half wasn't. That's that's clever.

01:24:34.395 --> 01:24:35.915
<v Speaker 0>So there's a much easier way than me

01:24:35.915 --> 01:24:38.235
<v Speaker 0>trying to retrofit the encryption then. Like, so

01:24:38.395 --> 01:24:39.034
<v Speaker 2>Yeah.

01:24:39.275 --> 01:24:41.434
<v Speaker 2>Which is clever because you basically just

01:24:41.755 --> 01:24:43.515
<v Speaker 2>so one one thing is if you recreate

01:24:43.515 --> 01:24:46.300
<v Speaker 2>the secret or the config map or whatever

01:24:46.300 --> 01:24:47.179
<v Speaker 2>resource,

01:24:47.340 --> 01:24:48.540
<v Speaker 2>then then

01:24:48.540 --> 01:24:51.020
<v Speaker 2>it will encrypt it using the EC config

01:24:51.020 --> 01:24:52.540
<v Speaker 2>and replace it. So that's why when you

01:24:52.540 --> 01:24:56.140
<v Speaker 2>use for cube root from the other namespace,

01:24:56.140 --> 01:24:56.620
<v Speaker 2>it worked.

01:24:58.535 --> 01:25:00.055
<v Speaker 2>Or you can just add that one line

01:25:00.055 --> 01:25:02.375
<v Speaker 2>identity in the config, and then now it's

01:25:02.375 --> 01:25:04.614
<v Speaker 2>able to read unencrypted stuff

01:25:04.695 --> 01:25:05.735
<v Speaker 2>by default.

01:25:06.055 --> 01:25:08.215
<v Speaker 0>Got it. Nice. I had I had no

01:25:08.215 --> 01:25:09.949
<v Speaker 0>idea that was a thing. So that's It

01:25:09.949 --> 01:25:12.110
<v Speaker 1>refuses to do no encryption. That's great, isn't

01:25:12.110 --> 01:25:13.310
<v Speaker 1>it? It refuses to do Well, I think

01:25:13.310 --> 01:25:15.150
<v Speaker 0>it's optional. Right? So stuff can be encrypted

01:25:15.150 --> 01:25:16.349
<v Speaker 0>or unencrypted.

01:25:17.310 --> 01:25:19.790
<v Speaker 1>I mean, maybe maybe they're not back. Yeah.

01:25:19.790 --> 01:25:20.989
<v Speaker 2>So if you have identity

01:25:21.805 --> 01:25:24.845
<v Speaker 2>in there, then it's both. Okay. So we

01:25:24.845 --> 01:25:26.205
<v Speaker 0>have four minutes, and we still need to

01:25:26.205 --> 01:25:28.605
<v Speaker 0>fix this Postgres. So Yeah.

01:25:30.845 --> 01:25:31.645
<v Speaker 1>So

01:25:31.805 --> 01:25:33.405
<v Speaker 1>I'm gonna cheat a little bit. He was

01:25:33.405 --> 01:25:35.405
<v Speaker 1>definitely messing with Cydium because there's some Cydium

01:25:35.405 --> 01:25:36.445
<v Speaker 1>config in in temp.

01:25:37.410 --> 01:25:39.810
<v Speaker 1>So Oh, that's me. That's part of the

01:25:39.810 --> 01:25:42.289
<v Speaker 0>customer bootstrap process, I believe. Okay.

01:25:42.610 --> 01:25:45.170
<v Speaker 2>Yeah. I I did not mess with Cyllium.

01:25:45.650 --> 01:25:47.730
<v Speaker 1>Because all of that Cyllium stuff flapped. Like,

01:25:47.730 --> 01:25:49.730
<v Speaker 1>the fact that the password is

01:25:50.130 --> 01:25:50.370
<v Speaker 1>wrong.

01:25:51.725 --> 01:25:53.645
<v Speaker 0>Okay. So the password is

01:25:54.365 --> 01:25:55.804
<v Speaker 0>correct here.

01:25:59.005 --> 01:26:02.205
<v Speaker 0>I think Postgres one two three is correct.

01:26:02.525 --> 01:26:04.365
<v Speaker 0>I believe the user is Postgres,

01:26:04.980 --> 01:26:06.900
<v Speaker 0>and the database is clustered.

01:26:08.260 --> 01:26:09.860
<v Speaker 0>In fact, our health check shows the user

01:26:09.860 --> 01:26:10.820
<v Speaker 0>Postgres.

01:26:12.740 --> 01:26:13.220
<v Speaker 1>So

01:26:13.700 --> 01:26:16.100
<v Speaker 1>And it's hard coded into the into the

01:26:16.100 --> 01:26:17.385
<v Speaker 1>Rust app, is it? It's not read for

01:26:17.385 --> 01:26:18.905
<v Speaker 1>the environment or anything you could fit into.

01:26:18.905 --> 01:26:20.985
<v Speaker 0>I should know, but I I I will

01:26:20.985 --> 01:26:22.105
<v Speaker 0>admit that

01:26:22.665 --> 01:26:24.905
<v Speaker 0>I wrote this a while back, and I've

01:26:24.905 --> 01:26:26.985
<v Speaker 0>abandoned that ever since. So

01:26:27.465 --> 01:26:28.265
<v Speaker 0>let's check.

01:26:30.760 --> 01:26:33.640
<v Speaker 1>Because my immediate thought again was was eBPF.

01:26:33.640 --> 01:26:35.000
<v Speaker 1>Right? I mean, what could make the password

01:26:35.000 --> 01:26:37.160
<v Speaker 1>be wrong, like an eBPF filter that's changing

01:26:37.160 --> 01:26:38.200
<v Speaker 1>it on the network?

01:26:38.680 --> 01:26:41.400
<v Speaker 2>No. The hardest thing was SCB encryption.

01:26:41.400 --> 01:26:44.120
<v Speaker 2>Everything else should be relatively

01:26:44.120 --> 01:26:45.485
<v Speaker 2>easier to fix.

01:26:47.485 --> 01:26:48.925
<v Speaker 1>I'm sure it's telling us some facts about

01:26:48.925 --> 01:26:50.284
<v Speaker 1>that. Yeah. And figure out.

01:26:53.405 --> 01:26:55.085
<v Speaker 0>I mean, it's weird because this is hard

01:26:55.085 --> 01:26:55.885
<v Speaker 0>coded.

01:26:56.844 --> 01:26:58.125
<v Speaker 0>Assuming it's our image,

01:26:58.980 --> 01:27:00.739
<v Speaker 0>which appears to be

01:27:03.700 --> 01:27:06.500
<v Speaker 0>password authentication failed for user postgres,

01:27:08.580 --> 01:27:11.620
<v Speaker 0>which means probably modify the stateful set. What's

01:27:11.620 --> 01:27:13.700
<v Speaker 0>the generation on this? Generation nine. Yeah.

01:27:16.635 --> 01:27:18.875
<v Speaker 0>I would I would have applied this once.

01:27:19.355 --> 01:27:20.075
<v Speaker 0>So Yeah.

01:27:32.890 --> 01:27:34.170
<v Speaker 0>I hate computers.

01:27:35.450 --> 01:27:36.170
<v Speaker 0>Yeah.

01:27:36.650 --> 01:27:38.410
<v Speaker 1>Well, I hate people too, so it's tricky,

01:27:38.410 --> 01:27:39.050
<v Speaker 2>isn't it?

01:27:39.930 --> 01:27:42.570
<v Speaker 0>I mean, that looks okay. PostgresQL one to

01:27:42.570 --> 01:27:42.810
<v Speaker 0>three.

01:27:44.445 --> 01:27:46.925
<v Speaker 1>It's not anything silly. Like, it's not Postgres

01:27:46.925 --> 01:27:49.164
<v Speaker 1>past w d or anything silly, is it?

01:27:50.205 --> 01:27:51.085
<v Speaker 0>I don't think so.

01:27:59.650 --> 01:28:00.690
<v Speaker 0>I mean so

01:28:01.010 --> 01:28:03.410
<v Speaker 0>this is a relatively stateless thing. Right?

01:28:03.570 --> 01:28:04.290
<v Speaker 0>So

01:28:04.450 --> 01:28:06.530
<v Speaker 0>he could have modified it in the pod.

01:28:07.250 --> 01:28:08.690
<v Speaker 0>I'm just gonna delete it and have the

01:28:08.690 --> 01:28:09.490
<v Speaker 0>database recreate.

01:28:11.445 --> 01:28:13.445
<v Speaker 1>Yeah. I I might be on our date

01:28:13.445 --> 01:28:15.284
<v Speaker 1>docs, but it looks like the environment variable

01:28:15.284 --> 01:28:17.604
<v Speaker 1>is called p g password, all one word.

01:28:20.804 --> 01:28:21.684
<v Speaker 0>Are you sure?

01:28:22.565 --> 01:28:24.085
<v Speaker 1>That's what I thought. I found some docs

01:28:24.085 --> 01:28:25.925
<v Speaker 1>that said that for the latest version.

01:28:30.700 --> 01:28:32.300
<v Speaker 1>But have you recreated it? Have you got

01:28:32.300 --> 01:28:33.900
<v Speaker 1>the original YAML sitting around? Can you just

01:28:33.900 --> 01:28:35.739
<v Speaker 1>recreate it? It didn't work. Oh, yeah. I

01:28:35.739 --> 01:28:37.500
<v Speaker 0>do have the original YAML.

01:28:37.580 --> 01:28:38.860
<v Speaker 1>Because a lot of what I did was

01:28:38.860 --> 01:28:40.645
<v Speaker 1>with kubectl edit. If you just thrown the

01:28:40.645 --> 01:28:42.325
<v Speaker 1>original YAML over the top of all the

01:28:42.805 --> 01:28:44.405
<v Speaker 1>you'd have fixed, like, six of my hacks

01:28:44.405 --> 01:28:45.285
<v Speaker 1>all at once.

01:28:48.965 --> 01:28:50.485
<v Speaker 2>Oh, don't do that.

01:28:51.045 --> 01:28:52.405
<v Speaker 2>Can we take a look at the YAML

01:28:52.405 --> 01:28:54.005
<v Speaker 2>again in the cluster?

01:28:56.080 --> 01:28:58.159
<v Speaker 1>Oh, it is. Postgre password. Okay.

01:28:59.760 --> 01:29:01.519
<v Speaker 1>That's what those docs are all about.

01:29:01.920 --> 01:29:03.840
<v Speaker 0>Okay. Let's work this out.

01:29:04.560 --> 01:29:06.640
<v Speaker 1>Okay. Stable set. No choice default.

01:29:11.895 --> 01:29:13.175
<v Speaker 2>Keep scrolling down.

01:29:15.495 --> 01:29:16.775
<v Speaker 0>Oh, you son of a

01:29:19.255 --> 01:29:20.215
<v Speaker 1>Oh, what?

01:29:20.534 --> 01:29:21.175
<v Speaker 2>Oh, man.

01:29:23.050 --> 01:29:24.889
<v Speaker 1>In the start up That's great.

01:29:25.210 --> 01:29:26.090
<v Speaker 1>Nice.

01:29:27.770 --> 01:29:30.170
<v Speaker 1>Very nice. You made me laugh out loud.

01:29:31.930 --> 01:29:34.330
<v Speaker 2>Like it. Our APIs never flapped.

01:29:36.385 --> 01:29:37.425
<v Speaker 1>Oh, yeah. We still haven't got to the

01:29:37.425 --> 01:29:39.745
<v Speaker 1>bottom of that. So what causes pods to

01:29:39.745 --> 01:29:40.545
<v Speaker 2>restart?

01:29:43.425 --> 01:29:44.545
<v Speaker 1>Health checks?

01:29:45.665 --> 01:29:46.625
<v Speaker 2>Interesting.

01:29:46.625 --> 01:29:47.505
<v Speaker 2>Yeah. So,

01:29:49.600 --> 01:29:52.400
<v Speaker 2>like, Kube API server and Kube scheduler and

01:29:52.400 --> 01:29:54.320
<v Speaker 2>those, they have health checks. Right?

01:29:55.120 --> 01:29:55.840
<v Speaker 1>Right.

01:29:56.400 --> 01:29:57.760
<v Speaker 1>I mean, lots of things. Right? I mean,

01:29:57.760 --> 01:29:58.960
<v Speaker 1>you could've been you could've been making a

01:29:58.960 --> 01:30:01.120
<v Speaker 1>note already. You could've caused the thing to

01:30:01.120 --> 01:30:02.800
<v Speaker 1>exit one because it doesn't like its config

01:30:02.800 --> 01:30:04.000
<v Speaker 1>file. But, yeah, health checks

01:30:04.875 --> 01:30:05.675
<v Speaker 1>also.

01:30:06.795 --> 01:30:09.435
<v Speaker 2>Is it possible that the health check is

01:30:09.435 --> 01:30:11.435
<v Speaker 2>not healthy for some reason?

01:30:14.875 --> 01:30:16.474
<v Speaker 1>It's doing HTTPS.

01:30:16.475 --> 01:30:17.195
<v Speaker 1>Is this

01:30:18.030 --> 01:30:19.550
<v Speaker 1>I could have believed it was because it

01:30:19.550 --> 01:30:21.550
<v Speaker 1>needed the CA bundle to be able to

01:30:21.550 --> 01:30:24.989
<v Speaker 1>to verify the service certificate of the API

01:30:24.989 --> 01:30:27.150
<v Speaker 1>server, but that's back now. Yeah. I don't

01:30:27.150 --> 01:30:29.629
<v Speaker 0>think lives use the real endpoint, is it?

01:30:30.429 --> 01:30:31.309
<v Speaker 0>Is that what you changed?

01:30:31.905 --> 01:30:33.905
<v Speaker 1>I actually think it No? It I think

01:30:33.905 --> 01:30:36.145
<v Speaker 1>it is. Yeah. I don't look enough at

01:30:36.145 --> 01:30:37.505
<v Speaker 0>this. Every time I see it, I'm like,

01:30:37.505 --> 01:30:40.385
<v Speaker 1>that can't be right. I mean, like, yeah,

01:30:40.385 --> 01:30:42.704
<v Speaker 2>it's probably gonna be, like, hard to there's

01:30:42.704 --> 01:30:44.385
<v Speaker 2>just a small little change. I mean, it

01:30:44.385 --> 01:30:44.784
<v Speaker 2>go up.

01:30:48.590 --> 01:30:49.949
<v Speaker 2>So there is where

01:30:51.230 --> 01:30:53.709
<v Speaker 2>is it? None of us access. False.

01:30:54.350 --> 01:30:55.309
<v Speaker 1>Right. Yeah.

01:30:55.630 --> 01:30:56.670
<v Speaker 2>Okay. So

01:30:57.150 --> 01:30:59.949
<v Speaker 2>yeah. So it's making the the health check

01:30:59.949 --> 01:31:00.350
<v Speaker 2>fail.

01:31:01.745 --> 01:31:03.665
<v Speaker 1>That's nice actually because that's honestly, like, an

01:31:03.665 --> 01:31:05.585
<v Speaker 1>error a user could make. Because if you're

01:31:05.585 --> 01:31:07.025
<v Speaker 1>if you're installing your own cluster, you see

01:31:07.025 --> 01:31:08.145
<v Speaker 1>something like that, and, of course, you turn

01:31:08.145 --> 01:31:09.505
<v Speaker 1>it off. Like, it's it's actually a very

01:31:09.585 --> 01:31:11.905
<v Speaker 2>Yeah. You're like, oh, I don't possible thing

01:31:11.905 --> 01:31:13.105
<v Speaker 1>to, yeah, to get wrong.

01:31:15.270 --> 01:31:16.230
<v Speaker 2>Awesome.

01:31:16.230 --> 01:31:18.470
<v Speaker 2>I think that should be it. Should that

01:31:18.470 --> 01:31:19.429
<v Speaker 1>be all of it?

01:31:21.270 --> 01:31:23.110
<v Speaker 0>We're We never actually go to edit our

01:31:23.110 --> 01:31:23.989
<v Speaker 0>Postgres.

01:31:24.950 --> 01:31:27.670
<v Speaker 2>Oh, you gotta okay. And you gotta restart

01:31:27.510 --> 01:31:28.150
<v Speaker 0>failed. Yeah.

01:31:29.055 --> 01:31:31.135
<v Speaker 1>Oh, I don't think you took enough. The

01:31:31.135 --> 01:31:33.135
<v Speaker 0>API server died before I could save the

01:31:33.135 --> 01:31:34.015
<v Speaker 0>alter.

01:31:35.135 --> 01:31:36.815
<v Speaker 1>I don't think you're taking enough lines out

01:31:36.815 --> 01:31:38.095
<v Speaker 1>of that. Have a look at the indentation

01:31:38.095 --> 01:31:38.655
<v Speaker 1>again.

01:31:39.535 --> 01:31:40.655
<v Speaker 0>Let's try again.

01:31:42.349 --> 01:31:44.349
<v Speaker 0>Oh, yeah. You're right. My whole idea was

01:31:44.349 --> 01:31:46.510
<v Speaker 2>that you would fix this first

01:31:46.989 --> 01:31:49.389
<v Speaker 2>and then try to recreate the pod, but

01:31:49.389 --> 01:31:52.349
<v Speaker 2>because this pod uses config map in this

01:31:52.349 --> 01:31:53.869
<v Speaker 2>namespace, it would fail.

01:31:54.270 --> 01:31:55.469
<v Speaker 2>And then you'll have to go figure out

01:31:55.469 --> 01:31:57.150
<v Speaker 2>what's going on with HCD.

01:31:59.445 --> 01:32:01.525
<v Speaker 0>That was a hard one, I gotta say.

01:32:04.565 --> 01:32:05.925
<v Speaker 1>We still haven't fixed it.

01:32:06.324 --> 01:32:08.405
<v Speaker 0>Oh, Postgres. HTTP. Yeah.

01:32:08.725 --> 01:32:10.965
<v Speaker 0>Why does it not when I changed the

01:32:10.965 --> 01:32:11.445
<v Speaker 0>spec?

01:32:13.639 --> 01:32:15.159
<v Speaker 1>Oh, you need to, yeah, you need to

01:32:15.159 --> 01:32:16.280
<v Speaker 1>kill it. Right? Yeah.

01:32:17.080 --> 01:32:18.920
<v Speaker 0>I shouldn't have. Not when I changed the

01:32:18.920 --> 01:32:19.959
<v Speaker 0>stateful set.

01:32:22.199 --> 01:32:23.880
<v Speaker 1>Oh, yeah. I did the stateful set. I

01:32:23.880 --> 01:32:24.520
<v Speaker 1>should have rolled it.

01:32:25.614 --> 01:32:28.655
<v Speaker 0>Well, unless someone changed the semantics. There we

01:32:28.655 --> 01:32:31.135
<v Speaker 0>go. There we go. We're two minutes late,

01:32:31.135 --> 01:32:32.894
<v Speaker 0>but we did get the dense. You were.

01:32:33.534 --> 01:32:34.894
<v Speaker 1>Not not bad.

01:32:36.255 --> 01:32:37.534
<v Speaker 0>Alright. Those were

01:32:38.094 --> 01:32:40.094
<v Speaker 0>two really tough clusters, I gotta say.

01:32:42.219 --> 01:32:45.659
<v Speaker 0>HCD is always I've had the AppArmor HCD,

01:32:45.659 --> 01:32:47.340
<v Speaker 0>never things I like to see.

01:32:47.659 --> 01:32:48.219
<v Speaker 0>So

01:32:48.860 --> 01:32:50.380
<v Speaker 0>that was a tough one, Rawkode.

01:32:50.940 --> 01:32:53.055
<v Speaker 1>And that was that was very good. I

01:32:53.055 --> 01:32:54.975
<v Speaker 1>thought I'd squeeze the SCD. That's why I

01:32:54.975 --> 01:32:56.815
<v Speaker 1>squeezed the CPU. Right? Because I'm like, SCD

01:32:56.815 --> 01:32:59.135
<v Speaker 1>is just when it goes wrong, you never

01:32:59.135 --> 01:33:00.255
<v Speaker 1>know how to fix it. So I thought

01:33:00.255 --> 01:33:01.855
<v Speaker 1>if I could just make it sort of

01:33:01.855 --> 01:33:02.655
<v Speaker 1>misbehave,

01:33:02.655 --> 01:33:04.575
<v Speaker 1>sort of be really slow and annoying,

01:33:05.135 --> 01:33:06.815
<v Speaker 1>everybody's just gonna be like, oh, SCD. I

01:33:06.815 --> 01:33:07.455
<v Speaker 1>don't understand it.

01:33:09.110 --> 01:33:10.389
<v Speaker 1>Because it's always the thing that gives you

01:33:10.389 --> 01:33:12.309
<v Speaker 1>cold sweats when you see the spam. Yeah.

01:33:12.309 --> 01:33:13.670
<v Speaker 0>Because how often do you have to use

01:33:13.670 --> 01:33:16.629
<v Speaker 0>STD control? Like, never. Right? Really?

01:33:17.110 --> 01:33:19.429
<v Speaker 2>Yeah. I did need the backup of it.

01:33:19.909 --> 01:33:21.110
<v Speaker 2>There's a hints folder.

01:33:22.625 --> 01:33:24.465
<v Speaker 0>Was there a Hints folder? Damn it. Yeah.

01:33:24.465 --> 01:33:27.344
<v Speaker 2>There was a backup of XCD completely unencrypted,

01:33:27.344 --> 01:33:30.224
<v Speaker 2>and there was a backup of

01:33:30.625 --> 01:33:33.664
<v Speaker 2>there was the the YAML file for

01:33:34.065 --> 01:33:36.785
<v Speaker 2>the encryption configuration with the identity in there.

01:33:37.770 --> 01:33:39.929
<v Speaker 2>So just in case we got lost,

01:33:40.730 --> 01:33:42.889
<v Speaker 2>we could do fix those. In case some

01:33:42.889 --> 01:33:45.690
<v Speaker 0>idiot starts writing random bytes to EdCT, yeah,

01:33:45.690 --> 01:33:47.050
<v Speaker 0>you really could better keep it back up.

01:33:47.050 --> 01:33:48.730
<v Speaker 2>Yeah. Well, I did it for me because

01:33:48.730 --> 01:33:51.369
<v Speaker 2>I was doing stupid things with EdCT.

01:33:53.505 --> 01:33:54.465
<v Speaker 0>Alright. Well,

01:33:55.585 --> 01:33:58.304
<v Speaker 0>thank you both for for joining us today.

01:33:59.105 --> 01:34:00.784
<v Speaker 0>Those were great. Those are really good. You

01:34:00.784 --> 01:34:03.185
<v Speaker 0>know what? It's it's the best episodes are

01:34:03.185 --> 01:34:04.864
<v Speaker 0>the ones where I walk away confused but

01:34:04.864 --> 01:34:06.304
<v Speaker 0>learning so much, and I got that from

01:34:06.304 --> 01:34:08.320
<v Speaker 0>both of your customers. So I really appreciate

01:34:08.320 --> 01:34:09.760
<v Speaker 0>the effort you've put in there and for

01:34:09.760 --> 01:34:11.600
<v Speaker 0>joining me during the debugging as well.

01:34:12.080 --> 01:34:14.080
<v Speaker 0>Thank you to the audience for watching us,

01:34:14.560 --> 01:34:16.880
<v Speaker 0>and all your comments. They're always very helpful.

01:34:16.880 --> 01:34:18.800
<v Speaker 0>These are always one step ahead of us,

01:34:18.800 --> 01:34:21.440
<v Speaker 0>and, thank you to Teleport for sponsoring clustered.

01:34:22.105 --> 01:34:24.105
<v Speaker 0>We will be back next week with more

01:34:24.105 --> 01:34:26.665
<v Speaker 0>broken clusters and more pain for me, Pop.

01:34:26.665 --> 01:34:28.825
<v Speaker 0>If you're still watching, you definitely all Barco

01:34:28.825 --> 01:34:31.865
<v Speaker 0>that that gift card there. You definitely destroyed

01:34:31.865 --> 01:34:32.505
<v Speaker 0>that.

01:34:32.745 --> 01:34:34.745
<v Speaker 0>Alright. Any final words before I say goodbye

01:34:34.745 --> 01:34:35.625
<v Speaker 0>to you both for today?

01:34:37.840 --> 01:34:40.400
<v Speaker 2>It's fine. Thanks a lot. I'm honored to

01:34:40.400 --> 01:34:41.040
<v Speaker 2>be here.

01:34:41.600 --> 01:34:43.840
<v Speaker 1>Yeah. No. Same. And thanks thanks for the

01:34:43.840 --> 01:34:47.280
<v Speaker 1>breakage. I lots of stuff as well. Alright.

01:34:47.280 --> 01:34:49.360
<v Speaker 0>Have a wonderful day. Enjoy your weekend. Thanks

01:34:49.360 --> 01:34:50.240
<v Speaker 0>a lot. Bye all.
