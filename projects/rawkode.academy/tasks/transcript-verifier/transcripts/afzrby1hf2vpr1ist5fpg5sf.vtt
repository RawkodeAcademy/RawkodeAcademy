WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 4834aa15-9d8b-46c8-a956-902f161a429b
Created: 2025-04-29T18:23:01.099Z
Duration: 5871.8223
Channels: 1

00:01:00.050 --> 00:01:04.690
<v Speaker 0>Hello and welcome to Rawkode live. Today is

00:01:04.690 --> 00:01:05.410
<v Speaker 0>Clustered.

00:01:06.265 --> 00:01:08.425
<v Speaker 0>I am going to, with the help of

00:01:08.425 --> 00:01:11.625
<v Speaker 0>some guests, fix some broken Kubernetes clusters today.

00:01:12.185 --> 00:01:14.025
<v Speaker 0>First, we've got a little bit of housekeeping.

00:01:14.665 --> 00:01:16.425
<v Speaker 0>If you are not subscribed to the YouTube

00:01:16.425 --> 00:01:18.104
<v Speaker 0>channel, now would be a really good time

00:01:18.104 --> 00:01:20.060
<v Speaker 0>to do that. Click subscribe, click the bell,

00:01:20.060 --> 00:01:21.820
<v Speaker 0>and you will get notifications for all new

00:01:21.820 --> 00:01:23.980
<v Speaker 0>episodes of Rawkode Live. I will do my

00:01:23.980 --> 00:01:25.500
<v Speaker 0>best to bring you the best cloud native

00:01:25.500 --> 00:01:27.580
<v Speaker 0>learning materials on the Internet. All you have

00:01:27.580 --> 00:01:29.820
<v Speaker 0>to do is watch and enjoy, hopefully.

00:01:30.300 --> 00:01:32.354
<v Speaker 0>Also, if you wanna chat, there is a

00:01:32.354 --> 00:01:34.595
<v Speaker 0>Discord server. There's over 400 people in there

00:01:34.595 --> 00:01:36.994
<v Speaker 0>now talking all things cloud native Kubernetes and

00:01:36.994 --> 00:01:38.915
<v Speaker 0>everything in between. So you can check that

00:01:38.915 --> 00:01:40.674
<v Speaker 0>out at Rawkode.chat.

00:01:41.315 --> 00:01:43.475
<v Speaker 0>And also starting today, this is the July

00:01:43.475 --> 00:01:45.395
<v Speaker 0>1. We are taking on a new sponsor

00:01:45.395 --> 00:01:47.770
<v Speaker 0>for clustered and that is Teleport. This was

00:01:47.770 --> 00:01:49.610
<v Speaker 0>the easiest decision I had to make because

00:01:49.610 --> 00:01:51.930
<v Speaker 0>I love Teleport. We have been using Teleport

00:01:51.930 --> 00:01:54.250
<v Speaker 0>and Clustered since the very beginning as a

00:01:54.250 --> 00:01:56.170
<v Speaker 0>great tool and I'm excited to share it

00:01:56.170 --> 00:01:57.770
<v Speaker 0>with you all today. So if you wanna

00:01:57.770 --> 00:01:59.210
<v Speaker 0>check that out and support the show, go

00:01:59.210 --> 00:02:01.130
<v Speaker 0>to Rawkode.liveteleport.

00:02:02.175 --> 00:02:04.575
<v Speaker 0>Now, let's fix some broken clusters.

00:02:04.815 --> 00:02:07.535
<v Speaker 0>Today, I am joined by Marek and Abdel.

00:02:07.535 --> 00:02:09.615
<v Speaker 0>Hi there both. How are you doing today?

00:02:11.135 --> 00:02:11.455
<v Speaker 0>Good.

00:02:13.790 --> 00:02:15.230
<v Speaker 0>I always say that and then throw it

00:02:15.230 --> 00:02:16.590
<v Speaker 0>out and forget I've got two people and

00:02:16.590 --> 00:02:17.870
<v Speaker 0>then they've got to say who's gonna talk

00:02:17.870 --> 00:02:19.790
<v Speaker 0>first. But, Marek, can you please do the

00:02:19.790 --> 00:02:21.470
<v Speaker 0>honors, introduce yourself and tell us a little

00:02:21.470 --> 00:02:22.350
<v Speaker 0>bit about you?

00:02:23.070 --> 00:02:25.550
<v Speaker 1>Yeah. So my name is Marek Counts. I've

00:02:25.550 --> 00:02:29.150
<v Speaker 1>been doing cloud native Kubernetes things

00:02:28.735 --> 00:02:30.495
<v Speaker 1>for a couple years now.

00:02:31.055 --> 00:02:32.895
<v Speaker 1>I do a little bit of YouTube in

00:02:32.895 --> 00:02:35.695
<v Speaker 1>myself, not nearly as good as Rawkode, but

00:02:36.495 --> 00:02:39.375
<v Speaker 1>all about learning about computer science and

00:02:39.935 --> 00:02:41.695
<v Speaker 1>and

00:02:40.900 --> 00:02:41.860
<v Speaker 1>Kubernetes.

00:02:41.860 --> 00:02:44.420
<v Speaker 1>So I'm really excited to learn more on

00:02:44.420 --> 00:02:46.980
<v Speaker 1>this show. So thanks for having me. Awesome.

00:02:46.980 --> 00:02:49.220
<v Speaker 0>Thank you for sharing. And, Abdel, please introduce

00:02:49.220 --> 00:02:50.740
<v Speaker 0>yourself and tell us a little bit about

00:02:50.740 --> 00:02:51.220
<v Speaker 0>you.

00:02:52.020 --> 00:02:54.660
<v Speaker 2>Yeah. Sure. Hi, everyone. Abdel. I go by

00:02:54.660 --> 00:02:57.275
<v Speaker 2>board Abdel on Twitter. I work for Google.

00:02:57.275 --> 00:03:00.075
<v Speaker 2>I specialize on everything, Kubernetes and serverless and

00:03:00.075 --> 00:03:02.475
<v Speaker 2>all these fancy, fancy buzzy words.

00:03:03.435 --> 00:03:06.955
<v Speaker 2>I am also core leading cloud native community

00:03:06.955 --> 00:03:08.715
<v Speaker 2>back in Morocco. I'm actually based in Stockholm,

00:03:08.715 --> 00:03:11.579
<v Speaker 2>Sweden, and I have a podcast. It's Iran.

00:03:11.579 --> 00:03:12.780
<v Speaker 2>You could just follow me on Twitter to

00:03:12.780 --> 00:03:15.900
<v Speaker 2>find all of that. And when David invited

00:03:15.900 --> 00:03:17.500
<v Speaker 2>me to actually come fix some clusters, I

00:03:17.500 --> 00:03:19.500
<v Speaker 2>was like, this is exciting. Because in Google,

00:03:19.500 --> 00:03:21.180
<v Speaker 2>we don't fix clusters. We just delete them

00:03:21.180 --> 00:03:22.780
<v Speaker 2>and create them again. So

00:03:23.819 --> 00:03:26.555
<v Speaker 2>so that's gonna be interesting. Yes. It's gonna

00:03:26.555 --> 00:03:28.235
<v Speaker 0>be a whole lot of fun, and I

00:03:28.235 --> 00:03:29.915
<v Speaker 0>will make sure to include links in the

00:03:29.915 --> 00:03:31.915
<v Speaker 0>show notes to both your YouTube channel and

00:03:31.915 --> 00:03:33.675
<v Speaker 0>your podcast, both of you. So I really

00:03:33.675 --> 00:03:35.835
<v Speaker 0>appreciate you being here, and I'm excited to

00:03:35.835 --> 00:03:37.355
<v Speaker 0>see what nasty things you have got in

00:03:37.355 --> 00:03:37.995
<v Speaker 0>store for us.

00:03:39.200 --> 00:03:41.360
<v Speaker 0>Okay. Let's get started.

00:03:42.159 --> 00:03:45.360
<v Speaker 0>We're starting on cluster 33.

00:03:45.360 --> 00:03:47.360
<v Speaker 0>I can't believe there's 33 of these already

00:03:47.360 --> 00:03:48.799
<v Speaker 0>and this

00:03:48.799 --> 00:03:51.200
<v Speaker 0>is Maddox cluster. So I

00:03:52.239 --> 00:03:53.360
<v Speaker 0>am going to

00:03:53.599 --> 00:03:54.480
<v Speaker 0>join

00:03:56.025 --> 00:03:56.665
<v Speaker 0>the

00:03:57.305 --> 00:04:00.025
<v Speaker 0>control plane node. This should start a session.

00:04:00.025 --> 00:04:01.545
<v Speaker 0>Abdul, you should be able to join through

00:04:01.545 --> 00:04:02.985
<v Speaker 0>the teleport interface.

00:04:03.065 --> 00:04:04.665
<v Speaker 0>If you can just give me an echo

00:04:04.665 --> 00:04:06.745
<v Speaker 0>hello to let me know that you're here,

00:04:06.745 --> 00:04:07.944
<v Speaker 0>I'll type echo hi first.

00:04:08.610 --> 00:04:09.970
<v Speaker 0>Let me know when you're in and then

00:04:09.970 --> 00:04:12.130
<v Speaker 0>we'll get set up. Oh, you're already in.

00:04:12.130 --> 00:04:14.210
<v Speaker 0>That is super awesome. Yep. Alright. So let's

00:04:14.210 --> 00:04:16.130
<v Speaker 0>set up our kube config.

00:04:16.209 --> 00:04:18.130
<v Speaker 0>This is a kube a d m cluster.

00:04:18.450 --> 00:04:20.450
<v Speaker 0>We're gonna use the admin conf

00:04:20.690 --> 00:04:23.330
<v Speaker 0>and of course we always need our alias.

00:04:24.555 --> 00:04:25.755
<v Speaker 0>Alright, Abdul.

00:04:25.835 --> 00:04:28.235
<v Speaker 0>The tradition on this show is you get

00:04:28.235 --> 00:04:29.835
<v Speaker 0>to run any command you want to see

00:04:29.835 --> 00:04:31.355
<v Speaker 0>if we have an API server.

00:04:31.835 --> 00:04:32.795
<v Speaker 0>Fire away.

00:04:33.675 --> 00:04:34.635
<v Speaker 2>Alright.

00:04:34.635 --> 00:04:35.915
<v Speaker 2>Let's do that.

00:04:36.715 --> 00:04:38.955
<v Speaker 2>Let's check pods and nodes at the same

00:04:38.955 --> 00:04:39.115
<v Speaker 2>time.

00:04:40.000 --> 00:04:43.600
<v Speaker 2>Okay. So we have some pending NGINX stuff.

00:04:43.600 --> 00:04:45.680
<v Speaker 2>Postgres is pretty much dead.

00:04:46.480 --> 00:04:48.560
<v Speaker 2>Your app is pretty much dead as well,

00:04:48.560 --> 00:04:50.560
<v Speaker 2>and we have three nodes not ready. Lovely.

00:04:53.215 --> 00:04:53.935
<v Speaker 2>Alright.

00:04:54.175 --> 00:04:56.015
<v Speaker 2>Let's have a look, I guess.

00:04:57.135 --> 00:04:58.495
<v Speaker 2>Yeah. What what do you want to start

00:04:58.495 --> 00:04:59.135
<v Speaker 2>fixing?

00:04:59.775 --> 00:05:00.415
<v Speaker 0>Well,

00:05:00.815 --> 00:05:03.055
<v Speaker 0>I'm curious about the NGINX nodes. I don't

00:05:03.055 --> 00:05:04.175
<v Speaker 0>think I left them there.

00:05:05.190 --> 00:05:07.910
<v Speaker 0>So but I'm gonna say they're not important

00:05:07.910 --> 00:05:08.790
<v Speaker 0>for now.

00:05:09.270 --> 00:05:11.270
<v Speaker 0>We've got stuff stuck in terminated.

00:05:12.790 --> 00:05:13.910
<v Speaker 0>Yeah. I don't know.

00:05:14.390 --> 00:05:16.150
<v Speaker 2>I guess it's because I mean, I guess

00:05:16.150 --> 00:05:18.150
<v Speaker 2>the postgres is terminating because the nodes are

00:05:18.150 --> 00:05:20.365
<v Speaker 0>not Yeah. We don't have any worker nodes.

00:05:20.365 --> 00:05:23.004
<v Speaker 0>Right? Everything there is not ready. Correct. Yeah.

00:05:23.004 --> 00:05:25.724
<v Speaker 2>So the Postgres is I in but it's

00:05:25.724 --> 00:05:26.445
<v Speaker 2>not running.

00:05:27.164 --> 00:05:28.764
<v Speaker 1>I did leave a read me on there

00:05:28.764 --> 00:05:30.764
<v Speaker 1>with just, like, a little bit of info,

00:05:31.564 --> 00:05:33.820
<v Speaker 1>but feel free to debug it as you

00:05:33.820 --> 00:05:35.580
<v Speaker 1>like. Yeah. We'll take a look at the

00:05:35.580 --> 00:05:38.220
<v Speaker 0>readme. I'm curious why you've added control plane

00:05:38.220 --> 00:05:40.060
<v Speaker 0>rules to my worker nodes,

00:05:40.220 --> 00:05:40.940
<v Speaker 0>Mavic.

00:05:43.420 --> 00:05:45.180
<v Speaker 1>Okay. I I had to have some fun.

00:05:47.764 --> 00:05:49.045
<v Speaker 2>Okay. Most

00:05:49.205 --> 00:05:52.245
<v Speaker 2>most control plane components are rising. API server

00:05:52.245 --> 00:05:55.125
<v Speaker 2>is running. Kube proxies are good. DNS is

00:05:55.125 --> 00:05:56.965
<v Speaker 2>down. Yeah. That's gone.

00:05:57.125 --> 00:05:57.765
<v Speaker 2>Okay.

00:05:59.205 --> 00:06:01.205
<v Speaker 2>And then the packet stuff is also down.

00:06:01.205 --> 00:06:01.365
<v Speaker 2>Okay.

00:06:02.520 --> 00:06:04.680
<v Speaker 2>Let's start with Postgres. What do you think?

00:06:05.080 --> 00:06:06.599
<v Speaker 0>Well, do you wanna will we take a

00:06:06.599 --> 00:06:08.520
<v Speaker 0>look at this read me? I think that

00:06:08.520 --> 00:06:09.800
<v Speaker 0>we shouldn't look at the list of things

00:06:09.800 --> 00:06:10.840
<v Speaker 0>you did, Marek.

00:06:12.919 --> 00:06:15.320
<v Speaker 2>Sure. Go for it. Go for it.

00:06:15.960 --> 00:06:16.759
<v Speaker 1>My mistake.

00:06:18.365 --> 00:06:19.965
<v Speaker 0>Was that supposed to be there?

00:06:21.405 --> 00:06:23.085
<v Speaker 1>My mistake. Go look at it.

00:06:25.325 --> 00:06:27.725
<v Speaker 2>Okay. Let's let's look at it. List of

00:06:27.725 --> 00:06:29.325
<v Speaker 2>things I did, the read okay. Do you

00:06:29.325 --> 00:06:30.685
<v Speaker 2>want to read the read me? Yeah. Let's

00:06:30.685 --> 00:06:32.045
<v Speaker 0>start with the read me. Just

00:06:34.760 --> 00:06:36.840
<v Speaker 0>Alright. My broken cluster.

00:06:37.080 --> 00:06:38.360
<v Speaker 0>I hope you enjoy.

00:06:38.760 --> 00:06:39.720
<v Speaker 0>Blah blah blah.

00:06:40.440 --> 00:06:42.520
<v Speaker 0>Okay. So we don't have any nodes which

00:06:42.520 --> 00:06:44.360
<v Speaker 0>are allow us to schedule workloads. I think

00:06:44.360 --> 00:06:45.880
<v Speaker 0>we kinda work that one out.

00:06:47.795 --> 00:06:49.075
<v Speaker 0>And we need to get that working on

00:06:49.075 --> 00:06:50.435
<v Speaker 0>the default namespace.

00:06:50.675 --> 00:06:52.355
<v Speaker 0>You have broken each node in a unique

00:06:52.355 --> 00:06:54.595
<v Speaker 0>way. Well, thanks for that. That's always fun.

00:06:57.555 --> 00:07:00.195
<v Speaker 0>Alright. We even got little difficulty levels. So

00:07:00.515 --> 00:07:00.915
<v Speaker 2>Yeah.

00:07:01.880 --> 00:07:03.880
<v Speaker 0>Will we start with worker easy and then

00:07:03.880 --> 00:07:05.320
<v Speaker 0>see if we can get work it work

00:07:05.320 --> 00:07:05.960
<v Speaker 0>it up?

00:07:06.440 --> 00:07:08.280
<v Speaker 2>Yeah. Let's do that. Sure.

00:07:08.440 --> 00:07:11.480
<v Speaker 0>Alright. Okay. So I am gonna jump out

00:07:11.480 --> 00:07:13.080
<v Speaker 0>of this effect.

00:07:15.115 --> 00:07:17.595
<v Speaker 2>So node 58 g and k?

00:07:17.995 --> 00:07:19.835
<v Speaker 0>Yeah. I'll jump off of that and I'm

00:07:19.835 --> 00:07:22.315
<v Speaker 0>gonna do t s h s h root

00:07:22.315 --> 00:07:23.755
<v Speaker 0>at this node

00:07:25.435 --> 00:07:26.795
<v Speaker 0>or even at symbol.

00:07:27.479 --> 00:07:28.840
<v Speaker 0>And you should be able to join us

00:07:28.840 --> 00:07:30.040
<v Speaker 0>on that machine.

00:07:33.720 --> 00:07:36.199
<v Speaker 0>Alright. I've done echo hi. Let me know

00:07:36.199 --> 00:07:37.800
<v Speaker 0>when you're there, and we'll see what we

00:07:37.800 --> 00:07:39.240
<v Speaker 0>can do. Yeah.

00:07:39.479 --> 00:07:41.400
<v Speaker 0>You're so you're so quick at this. Alright.

00:07:42.645 --> 00:07:44.965
<v Speaker 0>Should we check for a working kubelet?

00:07:45.764 --> 00:07:47.845
<v Speaker 2>Yep. Let's do that. Do you want to

00:07:47.845 --> 00:07:49.845
<v Speaker 2>do it? Yeah. Sure. Alright.

00:07:55.830 --> 00:07:57.510
<v Speaker 0>It does appear to be running, but we

00:07:57.510 --> 00:07:59.110
<v Speaker 0>definitely have some errors

00:07:59.190 --> 00:07:59.830
<v Speaker 0>here.

00:08:00.710 --> 00:08:02.710
<v Speaker 2>Yeah. Let's let's check the logs.

00:08:03.910 --> 00:08:05.350
<v Speaker 0>I'm sorry. Don't know.

00:08:06.310 --> 00:08:08.310
<v Speaker 2>Let's check the log, I said. Yep.

00:08:16.125 --> 00:08:17.005
<v Speaker 2>Journal

00:08:17.005 --> 00:08:18.045
<v Speaker 2>CTR.

00:08:21.965 --> 00:08:24.045
<v Speaker 2>I should have added just the tail.

00:08:26.270 --> 00:08:28.350
<v Speaker 2>Alright. This is not very helpful.

00:08:28.670 --> 00:08:29.950
<v Speaker 2>Stop it for now.

00:08:30.750 --> 00:08:33.549
<v Speaker 2>Connection refused. Ah, it's not We've no container.

00:08:33.309 --> 00:08:35.710
<v Speaker 0>The potential there. Okay.

00:08:36.590 --> 00:08:38.190
<v Speaker 2>Let's check that. System

00:08:40.905 --> 00:08:42.025
<v Speaker 2>CTL

00:08:42.025 --> 00:08:43.065
<v Speaker 2>status.

00:08:47.465 --> 00:08:48.985
<v Speaker 2>Container d.

00:08:50.505 --> 00:08:52.825
<v Speaker 2>Container d looks like it's good.

00:08:54.190 --> 00:08:55.790
<v Speaker 2>That

00:08:57.310 --> 00:08:58.829
<v Speaker 0>looks suspicious.

00:08:58.990 --> 00:09:00.430
<v Speaker 0>The docker

00:09:00.589 --> 00:09:02.110
<v Speaker 0>d dot sock.

00:09:05.470 --> 00:09:06.350
<v Speaker 0>Where where is it?

00:09:07.154 --> 00:09:08.595
<v Speaker 0>The third

00:09:08.834 --> 00:09:09.795
<v Speaker 0>log line.

00:09:13.394 --> 00:09:16.355
<v Speaker 0>It says address slash run slash docker slash

00:09:16.355 --> 00:09:18.595
<v Speaker 0>docker d dot sock. Uh-huh. Yeah. Okay. That

00:09:18.595 --> 00:09:20.115
<v Speaker 2>sounds good. Yeah. I wouldn't expect to see

00:09:20.115 --> 00:09:23.720
<v Speaker 0>that. So perhaps it's being misconfigured.

00:09:24.760 --> 00:09:25.480
<v Speaker 2>Yep.

00:09:25.720 --> 00:09:28.200
<v Speaker 2>Where is the config file for container d?

00:09:29.400 --> 00:09:31.320
<v Speaker 0>That's a a good question. So, I mean,

00:09:31.320 --> 00:09:33.000
<v Speaker 0>we can definitely look here, but I don't

00:09:33.000 --> 00:09:34.440
<v Speaker 0>think we'll see anything

00:09:34.920 --> 00:09:36.280
<v Speaker 0>and etcetera,

00:09:37.495 --> 00:09:39.095
<v Speaker 0>which means we're probably gonna have to do

00:09:39.095 --> 00:09:41.095
<v Speaker 0>a cat container d

00:09:41.334 --> 00:09:43.415
<v Speaker 0>and start working our way through any drop

00:09:43.415 --> 00:09:44.774
<v Speaker 0>ins that we see here,

00:09:45.814 --> 00:09:46.774
<v Speaker 0>of which

00:09:48.375 --> 00:09:49.814
<v Speaker 0>I don't see any.

00:09:50.970 --> 00:09:53.050
<v Speaker 2>So let's do a just a find. I

00:09:53.850 --> 00:09:56.649
<v Speaker 1>mean so I think that the the it's

00:09:56.649 --> 00:09:59.370
<v Speaker 1>at etsycontainerd.com.

00:10:01.610 --> 00:10:03.130
<v Speaker 1>I I need to wait. I'm looking for

00:10:03.130 --> 00:10:03.850
<v Speaker 1>a config file.

00:10:09.265 --> 00:10:09.985
<v Speaker 2>Okay.

00:10:13.905 --> 00:10:15.905
<v Speaker 2>Come on. There's also a very cool container

00:10:15.905 --> 00:10:18.785
<v Speaker 0>d config dump command as well, which I've

00:10:18.785 --> 00:10:19.585
<v Speaker 0>used in the past.

00:10:20.440 --> 00:10:21.240
<v Speaker 2>Uh-huh.

00:10:21.320 --> 00:10:25.160
<v Speaker 2>Container d. Really? That's cool. D dump? Yeah.

00:10:27.160 --> 00:10:28.760
<v Speaker 2>Pretty

00:10:28.920 --> 00:10:29.800
<v Speaker 2>pretty

00:10:30.199 --> 00:10:32.759
<v Speaker 0>verbose. People keep doing bad things with container

00:10:32.759 --> 00:10:35.185
<v Speaker 0>d and alias and images, and then making

00:10:35.185 --> 00:10:36.385
<v Speaker 0>my day really bad.

00:10:36.785 --> 00:10:39.265
<v Speaker 2>I think this is our problem. It's here.

00:10:39.265 --> 00:10:40.305
<v Speaker 2>We have to fix this.

00:10:40.785 --> 00:10:41.585
<v Speaker 0>Yeah.

00:10:41.585 --> 00:10:43.425
<v Speaker 0>That's not that's not right. I think if

00:10:43.425 --> 00:10:45.185
<v Speaker 0>we fix that path, that should be our

00:10:45.185 --> 00:10:47.105
<v Speaker 0>easy one fix, and hopefully, our node gets

00:10:47.105 --> 00:10:47.745
<v Speaker 0>back online.

00:10:48.930 --> 00:10:51.490
<v Speaker 2>Alright. So I'm gonna go into the file

00:10:52.610 --> 00:10:54.450
<v Speaker 2>and just look for

00:10:55.570 --> 00:10:56.210
<v Speaker 2>run,

00:10:58.290 --> 00:11:00.210
<v Speaker 2>and then we should be able to fix

00:11:00.210 --> 00:11:00.930
<v Speaker 2>this. Right?

00:11:03.525 --> 00:11:04.245
<v Speaker 2>What?

00:11:04.405 --> 00:11:06.965
<v Speaker 2>What's going on in the session? I'm not

00:11:06.965 --> 00:11:09.445
<v Speaker 0>sure. I'm gonna suggest that we just escape

00:11:09.445 --> 00:11:11.125
<v Speaker 0>and quit out of this.

00:11:12.165 --> 00:11:12.645
<v Speaker 2>Mhmm.

00:11:17.120 --> 00:11:17.760
<v Speaker 0>Oh.

00:11:18.560 --> 00:11:19.280
<v Speaker 2>Hello?

00:11:19.440 --> 00:11:20.480
<v Speaker 2>That sounds good.

00:11:24.960 --> 00:11:27.279
<v Speaker 1>I didn't do that. Just so everyone knows.

00:11:27.279 --> 00:11:28.480
<v Speaker 1>That was not

00:11:30.885 --> 00:11:33.445
<v Speaker 2>This is this is either Teleport or the

00:11:33.445 --> 00:11:34.645
<v Speaker 2>streaming software. Right?

00:11:35.125 --> 00:11:37.925
<v Speaker 0>It'll be maybe the command line interface for

00:11:37.925 --> 00:11:40.565
<v Speaker 0>Teleport. So for modifying this file, I am

00:11:40.565 --> 00:11:41.765
<v Speaker 0>going to grab

00:11:42.085 --> 00:11:44.085
<v Speaker 0>a web browser and see if it helps

00:11:44.085 --> 00:11:44.885
<v Speaker 0>just in case.

00:11:46.700 --> 00:11:47.580
<v Speaker 2>Or

00:11:47.580 --> 00:11:49.020
<v Speaker 2>we can just edit it and we show

00:11:49.020 --> 00:11:50.460
<v Speaker 2>people what we changed.

00:11:53.580 --> 00:11:54.140
<v Speaker 0>I

00:11:54.940 --> 00:11:56.300
<v Speaker 0>guess you were seeing the same as me

00:11:56.300 --> 00:11:57.260
<v Speaker 0>though. Right?

00:11:57.980 --> 00:11:59.740
<v Speaker 2>No. On my side, I will see it

00:11:59.740 --> 00:12:00.140
<v Speaker 2>properly.

00:12:02.045 --> 00:12:04.204
<v Speaker 0>Ah. Yeah. Okay. If you just if you

00:12:04.204 --> 00:12:06.045
<v Speaker 0>just fix it, and then we can cat

00:12:06.045 --> 00:12:06.845
<v Speaker 0>the fail.

00:12:07.485 --> 00:12:08.445
<v Speaker 2>Yeah. Yeah. Yeah.

00:12:09.565 --> 00:12:10.285
<v Speaker 2>So

00:12:12.764 --> 00:12:14.045
<v Speaker 2>That's funny. It is.

00:12:15.069 --> 00:12:17.949
<v Speaker 2>Yeah. Sorry, people. It's coming. Just give me

00:12:17.949 --> 00:12:19.870
<v Speaker 2>one second. I am not good with Vim,

00:12:19.870 --> 00:12:20.430
<v Speaker 2>so

00:12:22.110 --> 00:12:24.509
<v Speaker 2>I have to and it's a slash run

00:12:24.509 --> 00:12:26.509
<v Speaker 2>container v slash container v dot.

00:12:27.644 --> 00:12:28.445
<v Speaker 0>Slash

00:12:28.445 --> 00:12:30.685
<v Speaker 0>run slash container d slash container d dot

00:12:30.685 --> 00:12:33.725
<v Speaker 0>sock. That sock. Right. Yeah. Okay. Cool. So

00:12:33.805 --> 00:12:34.845
<v Speaker 1>You didn't have to tell us you were

00:12:34.845 --> 00:12:37.085
<v Speaker 1>bad at them. We wouldn't have known.

00:12:39.644 --> 00:12:40.765
<v Speaker 2>Okay. So

00:12:41.630 --> 00:12:44.750
<v Speaker 2>this is what we changed, the address of

00:12:44.750 --> 00:12:45.870
<v Speaker 2>container d.

00:12:46.590 --> 00:12:48.670
<v Speaker 2>If you so when I scroll, it doesn't

00:12:48.670 --> 00:12:50.990
<v Speaker 2>scroll on your side? No. No. You can't

00:12:50.990 --> 00:12:53.550
<v Speaker 0>scroll on my terminal. But I'll I'll try

00:12:53.550 --> 00:12:54.350
<v Speaker 0>and keep up. Don't worry.

00:12:55.185 --> 00:12:56.305
<v Speaker 2>That one

00:12:56.545 --> 00:12:58.945
<v Speaker 2>was set to slash run slash docker slash

00:12:58.945 --> 00:13:01.665
<v Speaker 2>docker d dot sock. So I just fixed

00:13:01.665 --> 00:13:02.305
<v Speaker 2>it.

00:13:02.545 --> 00:13:03.825
<v Speaker 2>So you should be able to

00:13:04.305 --> 00:13:05.985
<v Speaker 2>if you can restart container d.

00:13:11.120 --> 00:13:14.160
<v Speaker 0>And then we'll need to restart the kubelet.

00:13:16.000 --> 00:13:16.560
<v Speaker 2>True. Maybe.

00:13:18.399 --> 00:13:18.800
<v Speaker 0>We'll see.

00:13:20.295 --> 00:13:22.295
<v Speaker 0>And then let's pull up your journal command

00:13:22.295 --> 00:13:23.255
<v Speaker 0>from earlier.

00:13:25.815 --> 00:13:26.855
<v Speaker 0>That looks good.

00:13:27.975 --> 00:13:30.215
<v Speaker 2>That looks good. Yes. It does.

00:13:31.575 --> 00:13:33.975
<v Speaker 2>Let's look yeah. So that was the cubelet

00:13:34.135 --> 00:13:36.110
<v Speaker 2>the logs of cubelet. Right? Yeah. Yeah. That's

00:13:36.110 --> 00:13:37.710
<v Speaker 0>coming back on later. Okay.

00:13:38.350 --> 00:13:40.510
<v Speaker 2>Yeah. And it's it's able to talk to

00:13:40.510 --> 00:13:42.910
<v Speaker 2>containers, so it should be fine. Do you

00:13:42.910 --> 00:13:44.190
<v Speaker 2>want to exit oh, no. You are on

00:13:44.190 --> 00:13:45.709
<v Speaker 2>the control plane node. Maybe you want to

00:13:45.709 --> 00:13:48.269
<v Speaker 2>do get get nodes and see if it

00:13:48.269 --> 00:13:51.065
<v Speaker 2>was fixed. No. Sorry. It's a different node.

00:13:51.065 --> 00:13:52.745
<v Speaker 0>Yeah. I dropped off, but let's jump back

00:13:52.745 --> 00:13:54.905
<v Speaker 0>on the control plane because I think we

00:13:54.905 --> 00:13:55.705
<v Speaker 0>should see

00:13:57.465 --> 00:13:59.065
<v Speaker 0>we should see that healthy.

00:14:00.105 --> 00:14:00.345
<v Speaker 2>Yeah.

00:14:03.680 --> 00:14:05.199
<v Speaker 0>I'm gonna have to start adding this to

00:14:05.199 --> 00:14:07.279
<v Speaker 0>the profile when I spin up the clusters.

00:14:09.040 --> 00:14:10.639
<v Speaker 0>Alright. Let's see.

00:14:11.440 --> 00:14:14.480
<v Speaker 0>Easy mode when. There we go. Alright. That's

00:14:14.480 --> 00:14:15.839
<v Speaker 2>fixed. Okay.

00:14:16.000 --> 00:14:17.360
<v Speaker 2>Do you want to check the README file

00:14:17.360 --> 00:14:19.925
<v Speaker 2>again? Let's see what's the next in the

00:14:19.925 --> 00:14:21.125
<v Speaker 2>difficulty level.

00:14:21.365 --> 00:14:23.605
<v Speaker 0>It is v x four. Let's go for

00:14:23.605 --> 00:14:24.085
<v Speaker 1>it.

00:14:24.485 --> 00:14:27.365
<v Speaker 2>Let's go. Alright. Alright. So t s h

00:14:27.365 --> 00:14:29.365
<v Speaker 0>s s h we're at go.

00:14:30.005 --> 00:14:31.205
<v Speaker 0>I'm

00:14:31.205 --> 00:14:32.645
<v Speaker 0>gonna apologize

00:14:32.645 --> 00:14:33.765
<v Speaker 1>here because

00:14:34.310 --> 00:14:36.470
<v Speaker 1>this one also has the

00:14:37.029 --> 00:14:39.029
<v Speaker 1>the cubelet problem. It just has stuff on

00:14:39.029 --> 00:14:40.870
<v Speaker 1>top of that. We've already seen the cubelet

00:14:40.870 --> 00:14:43.190
<v Speaker 1>problem. You guys fixed it or the container

00:14:43.190 --> 00:14:45.510
<v Speaker 1>d problem. You did that on every note?

00:14:45.510 --> 00:14:46.149
<v Speaker 0>Come on.

00:14:47.155 --> 00:14:49.155
<v Speaker 1>Not on every node. Just on this node

00:14:49.155 --> 00:14:50.755
<v Speaker 1>as well. And that was my bad because

00:14:50.755 --> 00:14:51.795
<v Speaker 1>that's not fun.

00:14:52.115 --> 00:14:53.555
<v Speaker 1>So that's why I'm telling you. So you

00:14:53.555 --> 00:14:54.915
<v Speaker 1>can just fix it real quickly.

00:14:56.115 --> 00:14:57.875
<v Speaker 1>Alright. So it's the same problem with as

00:14:57.875 --> 00:15:00.220
<v Speaker 2>the previous one. Right? Yeah. I'll let you

00:15:00.300 --> 00:15:01.899
<v Speaker 0>if you wanna jump in and fix that

00:15:01.899 --> 00:15:03.579
<v Speaker 0>and There's more.

00:15:04.300 --> 00:15:06.220
<v Speaker 1>It's just that is one of It is

00:15:06.220 --> 00:15:08.060
<v Speaker 2>the same problem and then other stuff.

00:15:08.940 --> 00:15:11.100
<v Speaker 1>Yes. And this was my apology. I shouldn't

00:15:11.100 --> 00:15:12.380
<v Speaker 1>have done the same thing.

00:15:12.779 --> 00:15:14.300
<v Speaker 1>It was late when I was doing this.

00:15:16.695 --> 00:15:18.855
<v Speaker 0>Was there with a config dump too? Yeah.

00:15:18.855 --> 00:15:20.774
<v Speaker 0>That is a great command. We love that.

00:15:22.135 --> 00:15:22.855
<v Speaker 0>Oh.

00:15:23.014 --> 00:15:25.175
<v Speaker 0>People are enjoying listening to Marek laugh.

00:15:27.200 --> 00:15:27.760
<v Speaker 0>And

00:15:29.120 --> 00:15:31.760
<v Speaker 0>just install Nano. Come on, Khalid. We're not

00:15:31.760 --> 00:15:32.880
<v Speaker 0>gonna install Nano.

00:15:33.200 --> 00:15:35.760
<v Speaker 2>Somebody was suggesting to use c. If you

00:15:35.760 --> 00:15:37.360
<v Speaker 2>can give us the c command, it will

00:15:37.360 --> 00:15:39.035
<v Speaker 2>make our life easier for the next node

00:15:39.035 --> 00:15:40.795
<v Speaker 2>because he did the same he broke it

00:15:40.795 --> 00:15:43.675
<v Speaker 2>the same way No. No. The third node

00:15:43.675 --> 00:15:45.755
<v Speaker 1>does not have any of this. Just these

00:15:45.755 --> 00:15:47.835
<v Speaker 1>two. I accidentally did it. I

00:15:49.115 --> 00:15:50.555
<v Speaker 1>thought that I hadn't done it, so I

00:15:50.555 --> 00:15:51.675
<v Speaker 1>did it again, but I was doing it

00:15:51.675 --> 00:15:53.035
<v Speaker 1>to a different node, and that was my

00:15:53.035 --> 00:15:53.355
<v Speaker 1>problem.

00:15:54.490 --> 00:15:57.210
<v Speaker 2>Okay. Okay. That could look good.

00:15:57.450 --> 00:15:57.850
<v Speaker 2>So

00:15:58.810 --> 00:16:00.730
<v Speaker 2>The Kubernetes is especially

00:16:01.450 --> 00:16:02.730
<v Speaker 2>not verbose.

00:16:02.810 --> 00:16:03.530
<v Speaker 2>No?

00:16:04.170 --> 00:16:05.130
<v Speaker 2>Or maybe just me?

00:16:07.785 --> 00:16:10.584
<v Speaker 0>Yeah. There was no logs there, I guess.

00:16:11.305 --> 00:16:13.785
<v Speaker 2>Let's check the logs then. I am a

00:16:13.785 --> 00:16:16.345
<v Speaker 2>big fan of journal CTL. So I

00:16:16.745 --> 00:16:18.665
<v Speaker 0>just love seeing the different parameters that everyone

00:16:18.665 --> 00:16:20.185
<v Speaker 0>uses with journal CTL.

00:16:21.980 --> 00:16:24.540
<v Speaker 2>Alright. Okay. Uh-huh.

00:16:24.540 --> 00:16:26.060
<v Speaker 2>Container. Uh-huh.

00:16:29.420 --> 00:16:32.460
<v Speaker 0>Don't see anything there that gives me cause

00:16:32.460 --> 00:16:33.420
<v Speaker 0>for concern yet.

00:16:35.125 --> 00:16:37.685
<v Speaker 2>Okay. Then if you think it's fine, I'll

00:16:37.685 --> 00:16:40.325
<v Speaker 2>just do a quick f to see

00:16:41.285 --> 00:16:43.045
<v Speaker 2>what are the latest.

00:16:43.845 --> 00:16:45.765
<v Speaker 2>I don't know. Jono, I forgot with Jono,

00:16:45.765 --> 00:16:46.885
<v Speaker 2>how do you do the tail? How do

00:16:46.885 --> 00:16:47.525
<v Speaker 2>you get the tail?

00:16:49.880 --> 00:16:52.440
<v Speaker 0>Dash dash last and then a number, I

00:16:52.440 --> 00:16:52.920
<v Speaker 0>think.

00:16:53.319 --> 00:16:54.360
<v Speaker 2>Uh-huh. Okay.

00:16:55.000 --> 00:16:57.000
<v Speaker 2>Well, it looks good. I usually just do

00:16:57.000 --> 00:16:58.040
<v Speaker 1>f u.

00:16:58.279 --> 00:17:00.519
<v Speaker 0>Oh, yeah. You do f u l. Inverse.

00:17:00.759 --> 00:17:01.399
<v Speaker 1>Yeah.

00:17:01.800 --> 00:17:02.920
<v Speaker 2>Yeah. Okay. Cool.

00:17:04.954 --> 00:17:06.075
<v Speaker 2>That looks good.

00:17:07.994 --> 00:17:10.234
<v Speaker 2>Yeah. But it couldn't be this simple. Right?

00:17:13.355 --> 00:17:14.234
<v Speaker 0>Perhaps.

00:17:14.234 --> 00:17:16.234
<v Speaker 0>I don't know. Try scheduling something on it.

00:17:16.635 --> 00:17:18.250
<v Speaker 0>Well, we don't have to schedule something on

00:17:18.250 --> 00:17:19.369
<v Speaker 0>it. We just need to get our workload

00:17:19.369 --> 00:17:20.809
<v Speaker 0>scheduled on the cluster.

00:17:22.089 --> 00:17:25.049
<v Speaker 2>The existing pods that are in pending states.

00:17:26.570 --> 00:17:28.410
<v Speaker 2>Do you want to quickly jump on the

00:17:28.410 --> 00:17:30.090
<v Speaker 2>control plane node and check if it's good?

00:17:31.215 --> 00:17:33.374
<v Speaker 2>I bet it's not. Yeah.

00:17:34.335 --> 00:17:35.215
<v Speaker 0>So

00:17:40.095 --> 00:17:40.975
<v Speaker 0>TSS,

00:17:40.975 --> 00:17:42.975
<v Speaker 0>HSR. I'm just gonna leave this one open

00:17:42.975 --> 00:17:44.495
<v Speaker 0>because we're gonna need access to it.

00:17:46.180 --> 00:17:48.260
<v Speaker 0>And I'm fed up type and export already.

00:17:48.260 --> 00:17:49.860
<v Speaker 0>So that's definitely gonna add you to my

00:17:49.860 --> 00:17:52.580
<v Speaker 0>global profile on every future cluster.

00:17:53.140 --> 00:17:54.900
<v Speaker 1>I apologize for making you switch back and

00:17:54.900 --> 00:17:56.020
<v Speaker 1>forth so often.

00:17:56.740 --> 00:17:59.135
<v Speaker 0>No. It's part of the fun. So if

00:17:59.135 --> 00:18:00.414
<v Speaker 0>I was using the web interface, I have

00:18:00.414 --> 00:18:02.014
<v Speaker 0>multiple tabs. I was just trying to avoid

00:18:02.014 --> 00:18:04.414
<v Speaker 0>doing that on the browser. Maybe I'll just

00:18:04.414 --> 00:18:05.614
<v Speaker 0>start running both.

00:18:07.615 --> 00:18:08.894
<v Speaker 0>Alright. So that

00:18:08.975 --> 00:18:11.615
<v Speaker 0>node is not ready yet. So if there's

00:18:11.615 --> 00:18:13.695
<v Speaker 0>kubelet, there's definitely something wrong.

00:18:16.200 --> 00:18:17.720
<v Speaker 2>What could this be if it's not the

00:18:17.720 --> 00:18:18.520
<v Speaker 2>kubelet?

00:18:19.400 --> 00:18:20.200
<v Speaker 2>Can you

00:18:20.520 --> 00:18:22.280
<v Speaker 2>rerun that command

00:18:22.280 --> 00:18:24.920
<v Speaker 2>with the dash o y? Let's check the

00:18:24.920 --> 00:18:26.280
<v Speaker 2>network configuration.

00:18:28.525 --> 00:18:30.924
<v Speaker 2>Maybe he changed the internal IP or something?

00:18:31.405 --> 00:18:33.404
<v Speaker 2>I'm just speculating here, by the way.

00:18:35.245 --> 00:18:37.085
<v Speaker 0>Well, we would see a message from the

00:18:37.085 --> 00:18:39.325
<v Speaker 0>kubelet that it couldn't reach the

00:18:40.445 --> 00:18:41.645
<v Speaker 0>API server.

00:18:44.450 --> 00:18:46.369
<v Speaker 2>Okay. Yeah. That makes sense.

00:18:46.850 --> 00:18:49.089
<v Speaker 0>Yeah. Let's let's double check these logs.

00:18:49.730 --> 00:18:51.969
<v Speaker 1>Think about Okay. What needs to be running

00:18:51.970 --> 00:18:52.769
<v Speaker 1>when

00:18:53.809 --> 00:18:55.649
<v Speaker 1>for it to be healthy. There's some things

00:18:55.649 --> 00:18:58.505
<v Speaker 1>that should be running, generally, I think. We

00:18:58.505 --> 00:19:00.024
<v Speaker 1>need the queue proxy as well.

00:19:00.985 --> 00:19:01.784
<v Speaker 1>Yeah.

00:19:06.345 --> 00:19:08.984
<v Speaker 2>It looks can you check the

00:19:09.144 --> 00:19:10.904
<v Speaker 2>status of the queue proxy on the because

00:19:10.904 --> 00:19:12.024
<v Speaker 2>I think it was unscheduled,

00:19:12.370 --> 00:19:14.129
<v Speaker 2>or was it was it running?

00:19:21.330 --> 00:19:23.250
<v Speaker 0>This is v x four.

00:19:26.585 --> 00:19:29.465
<v Speaker 0>Okay. Let's see. One of one. We have

00:19:29.465 --> 00:19:32.105
<v Speaker 0>Cilium, we have Cilium Operator, we have Hubble.

00:19:32.185 --> 00:19:34.985
<v Speaker 0>Postgres is actually oh, no. That's terminating. Oh,

00:19:34.985 --> 00:19:36.745
<v Speaker 0>no. We did these are all terminating.

00:19:37.625 --> 00:19:38.585
<v Speaker 0>Cilium's okay.

00:19:39.510 --> 00:19:42.070
<v Speaker 0>How about I don't care about. Postgres, yeah,

00:19:42.070 --> 00:19:43.350
<v Speaker 0>we'll fix it eventually.

00:19:43.910 --> 00:19:45.590
<v Speaker 0>Kube proxy is running

00:19:45.830 --> 00:19:46.870
<v Speaker 0>and healthy.

00:19:47.670 --> 00:19:49.350
<v Speaker 2>Okay. The Kube proxy is good. Then and

00:19:49.350 --> 00:19:51.190
<v Speaker 2>and the and the

00:19:52.070 --> 00:19:53.430
<v Speaker 2>Cilium components are good?

00:19:54.075 --> 00:19:56.155
<v Speaker 0>Yeah. Only Hubble appears to be broken which

00:19:56.155 --> 00:19:57.995
<v Speaker 0>we can ignore. But yes, we have the

00:19:57.995 --> 00:20:00.395
<v Speaker 0>Cilium and the Cilium operator running okay on

00:20:00.395 --> 00:20:01.195
<v Speaker 0>this machine.

00:20:02.235 --> 00:20:05.355
<v Speaker 0>So I'm gonna suggest that we try

00:20:06.560 --> 00:20:08.800
<v Speaker 0>describe a node and see if we have

00:20:08.800 --> 00:20:10.480
<v Speaker 0>any events or warning.

00:20:11.040 --> 00:20:11.760
<v Speaker 0>Sure.

00:20:16.560 --> 00:20:18.240
<v Speaker 0>Okay. So it looks like it can't speak

00:20:18.240 --> 00:20:19.120
<v Speaker 0>to container d.

00:20:20.535 --> 00:20:22.215
<v Speaker 0>I was trying to pull images

00:20:22.615 --> 00:20:24.775
<v Speaker 0>or do image garbage collection.

00:20:26.455 --> 00:20:29.015
<v Speaker 0>You wanna double check our container d configuration?

00:20:30.375 --> 00:20:31.335
<v Speaker 2>Yep.

00:20:31.335 --> 00:20:31.735
<v Speaker 2>I can.

00:20:36.490 --> 00:20:38.890
<v Speaker 0>Can I extract an iTerm tab

00:20:39.850 --> 00:20:41.690
<v Speaker 0>split to tab? No?

00:20:43.130 --> 00:20:43.849
<v Speaker 0>Alright.

00:20:46.330 --> 00:20:49.529
<v Speaker 2>Slash run slash container d slash container d

00:20:49.529 --> 00:20:52.075
<v Speaker 2>dot sock. That looks good to me. But

00:20:52.075 --> 00:20:54.234
<v Speaker 2>is that binary file

00:20:54.875 --> 00:20:56.715
<v Speaker 2>where it needs to be?

00:20:59.995 --> 00:21:01.115
<v Speaker 2>Yeah. It is there.

00:21:03.600 --> 00:21:04.480
<v Speaker 2>It's

00:21:04.720 --> 00:21:05.360
<v Speaker 2>suspicious.

00:21:06.720 --> 00:21:08.639
<v Speaker 2>What's that suspicious color?

00:21:10.000 --> 00:21:10.639
<v Speaker 2>Okay.

00:21:11.840 --> 00:21:12.960
<v Speaker 2>It's a symbolic link.

00:21:18.195 --> 00:21:18.995
<v Speaker 2>This isn't

00:21:19.875 --> 00:21:21.235
<v Speaker 2>this is not a binary. Right? This is

00:21:21.235 --> 00:21:22.275
<v Speaker 2>a symbolic link.

00:21:22.435 --> 00:21:24.115
<v Speaker 2>What am I saying bullshit here?

00:21:25.555 --> 00:21:26.595
<v Speaker 0>It

00:21:26.595 --> 00:21:29.395
<v Speaker 0>doesn't look like a symbolic link.

00:21:30.035 --> 00:21:32.195
<v Speaker 2>No. It's not. But it's not

00:21:37.450 --> 00:21:38.810
<v Speaker 0>We get the same color on the control

00:21:38.810 --> 00:21:40.490
<v Speaker 0>plane node, so I think it's okay.

00:21:43.370 --> 00:21:44.890
<v Speaker 2>And when I try to run it, it

00:21:44.890 --> 00:21:45.930
<v Speaker 2>says permission denied.

00:21:46.605 --> 00:21:47.565
<v Speaker 0>So let's

00:21:47.805 --> 00:21:49.565
<v Speaker 0>let's try running a CTR

00:21:49.565 --> 00:21:50.765
<v Speaker 0>image pool

00:21:50.765 --> 00:21:56.285
<v Speaker 0>nginxdocker.i0/engine.

00:22:01.640 --> 00:22:02.600
<v Speaker 0>Yeah. Container?

00:22:03.800 --> 00:22:05.880
<v Speaker 0>Uh-oh. I was gonna say container d is

00:22:05.880 --> 00:22:08.200
<v Speaker 0>okay. Did I get that wrong?

00:22:09.160 --> 00:22:11.000
<v Speaker 0>Or the top level repository.

00:22:11.000 --> 00:22:11.559
<v Speaker 0>Right?

00:22:12.120 --> 00:22:13.320
<v Speaker 0>Library.

00:22:15.505 --> 00:22:17.265
<v Speaker 2>Yeah. I know. That looks good. Yeah. Okay.

00:22:17.265 --> 00:22:18.784
<v Speaker 0>Yeah. Container d seems okay.

00:22:19.985 --> 00:22:21.505
<v Speaker 2>So it's not Container d.

00:22:23.665 --> 00:22:26.144
<v Speaker 0>So if we look at the describe again

00:22:29.080 --> 00:22:30.200
<v Speaker 0>Oh, come on.

00:22:31.400 --> 00:22:32.520
<v Speaker 0>Export

00:22:32.520 --> 00:22:33.480
<v Speaker 0>alias

00:22:33.560 --> 00:22:34.600
<v Speaker 0>describe.

00:22:36.120 --> 00:22:38.120
<v Speaker 0>I guess this is maybe just an old

00:22:38.120 --> 00:22:40.600
<v Speaker 0>error then. So let's look for something else.

00:22:45.935 --> 00:22:47.615
<v Speaker 2>Let's see if there is any memory pressure

00:22:47.615 --> 00:22:49.695
<v Speaker 2>or disk pressure on the node. You have

00:22:49.695 --> 00:22:51.055
<v Speaker 2>those under the conditions.

00:22:53.295 --> 00:22:55.535
<v Speaker 0>Well, it's tainted with no schedule

00:22:56.015 --> 00:22:57.135
<v Speaker 0>and no execute,

00:22:57.780 --> 00:23:00.660
<v Speaker 0>but that might be because it's unhealthy.

00:23:01.220 --> 00:23:02.660
<v Speaker 2>Yeah. I think so.

00:23:06.820 --> 00:23:07.780
<v Speaker 0>Network unavailable.

00:23:10.065 --> 00:23:12.384
<v Speaker 2>Yeah. But it's false. It says is running

00:23:12.384 --> 00:23:14.225
<v Speaker 2>on this node. It's the conditions. Right?

00:23:24.450 --> 00:23:27.169
<v Speaker 2>Cube so the Kubelet RPC error, that was

00:23:28.450 --> 00:23:29.809
<v Speaker 2>eleven minutes ago.

00:23:30.450 --> 00:23:32.850
<v Speaker 2>And then the newer one is Kubelet started

00:23:33.090 --> 00:23:33.729
<v Speaker 2>Yeah.

00:23:34.929 --> 00:23:38.850
<v Speaker 2>Kubelet started Kubelet started Kubelet. Okay. Okay. I

00:23:38.155 --> 00:23:40.155
<v Speaker 2>was like, a Kubelet started the Kubelet? Like,

00:23:40.155 --> 00:23:40.395
<v Speaker 2>what's

00:23:41.195 --> 00:23:42.075
<v Speaker 2>what's funny?

00:23:42.475 --> 00:23:43.195
<v Speaker 2>Okay.

00:23:46.475 --> 00:23:47.195
<v Speaker 2>What

00:23:48.315 --> 00:23:50.315
<v Speaker 2>else could it be? Normally, a node would

00:23:50.315 --> 00:23:51.914
<v Speaker 0>not be ready if we had no

00:23:52.155 --> 00:23:52.715
<v Speaker 0>networking.

00:23:54.690 --> 00:23:56.530
<v Speaker 2>But since the Kubernetes is able to reach

00:23:56.530 --> 00:23:59.570
<v Speaker 2>to the API server, it means it's working.

00:23:59.809 --> 00:24:00.130
<v Speaker 2>Right?

00:24:08.465 --> 00:24:10.145
<v Speaker 1>What are some of the other ways that

00:24:10.145 --> 00:24:12.144
<v Speaker 1>a node goes unhealthy?

00:24:16.065 --> 00:24:17.985
<v Speaker 2>So the component Kubernetes is not reachable.

00:24:19.660 --> 00:24:22.140
<v Speaker 2>Maybe the CNI is broken, but Cilium seems

00:24:22.140 --> 00:24:22.940
<v Speaker 2>to be okay.

00:24:23.340 --> 00:24:25.500
<v Speaker 0>Will we try restarting Cilium and see if

00:24:25.500 --> 00:24:26.860
<v Speaker 0>it actually reschedules?

00:24:27.020 --> 00:24:27.660
<v Speaker 0>Maybe

00:24:27.900 --> 00:24:28.860
<v Speaker 2>That's good.

00:24:30.140 --> 00:24:31.820
<v Speaker 2>I know, but it's not Yeah. We'll need

00:24:31.820 --> 00:24:33.420
<v Speaker 0>to do it on the control plane. So

00:24:33.420 --> 00:24:34.620
<v Speaker 0>I can do

00:24:36.525 --> 00:24:38.684
<v Speaker 0>pods all white.

00:24:38.684 --> 00:24:39.085
<v Speaker 0>Correct.

00:24:40.925 --> 00:24:42.365
<v Speaker 0>Was it b x

00:24:44.205 --> 00:24:44.684
<v Speaker 1>four?

00:24:47.900 --> 00:24:49.740
<v Speaker 0>And then delete pod.

00:24:57.980 --> 00:24:59.179
<v Speaker 0>Dash n.

00:24:59.260 --> 00:25:00.139
<v Speaker 0>Cilium.

00:25:00.140 --> 00:25:00.780
<v Speaker 0>Bye bye.

00:25:01.745 --> 00:25:03.105
<v Speaker 0>Oh, almost.

00:25:13.345 --> 00:25:14.705
<v Speaker 0>And I should have forced it.

00:25:27.925 --> 00:25:29.765
<v Speaker 0>We don't need to wait on that. Let's

00:25:29.765 --> 00:25:31.684
<v Speaker 0>see if it still shows up here.

00:25:34.965 --> 00:25:37.045
<v Speaker 0>Oh, it's stuck in I am gonna force

00:25:37.045 --> 00:25:37.845
<v Speaker 0>it. Okay.

00:25:38.965 --> 00:25:40.325
<v Speaker 0>Grace

00:25:41.730 --> 00:25:42.610
<v Speaker 0>period

00:25:42.610 --> 00:25:43.650
<v Speaker 0>zero

00:25:43.970 --> 00:25:44.770
<v Speaker 0>force.

00:25:53.490 --> 00:25:54.610
<v Speaker 0>It's not starting was unexpected.

00:25:58.985 --> 00:26:00.745
<v Speaker 0>Yeah. It's not coming back, though.

00:26:02.665 --> 00:26:05.385
<v Speaker 2>Yeah. Because the node is stuck. Right?

00:26:05.705 --> 00:26:08.185
<v Speaker 2>I I jumped with you into the session.

00:26:08.185 --> 00:26:08.825
<v Speaker 2>Yeah.

00:26:09.545 --> 00:26:11.145
<v Speaker 2>Just give me a I I just want

00:26:11.145 --> 00:26:11.785
<v Speaker 2>to check something.

00:26:12.800 --> 00:26:15.040
<v Speaker 2>So the node that we are talking about

00:26:15.040 --> 00:26:16.080
<v Speaker 2>is this one.

00:26:16.560 --> 00:26:19.200
<v Speaker 2>Because your output of describe looks translated on

00:26:19.200 --> 00:26:20.960
<v Speaker 2>my side, so I wanted to see it

00:26:23.280 --> 00:26:24.400
<v Speaker 2>on the terminal directly.

00:26:34.275 --> 00:26:36.115
<v Speaker 2>Actually, we do have a problem.

00:26:36.675 --> 00:26:37.715
<v Speaker 0>What do you see?

00:26:38.355 --> 00:26:40.115
<v Speaker 2>So

00:26:40.115 --> 00:26:44.549
<v Speaker 2>I don't know why, but here. See?

00:26:45.830 --> 00:26:49.190
<v Speaker 2>Memory pressure, disk pressure, cubelets stopped posting node

00:26:49.190 --> 00:26:49.909
<v Speaker 2>status

00:26:49.990 --> 00:26:53.909
<v Speaker 2>node status unknown. Right? So if these conditions

00:26:53.909 --> 00:26:54.789
<v Speaker 2>are not

00:26:55.315 --> 00:26:56.115
<v Speaker 2>met,

00:26:56.595 --> 00:26:57.794
<v Speaker 2>then the node

00:26:58.835 --> 00:27:01.075
<v Speaker 2>well, the the EPS server will not flag

00:27:01.075 --> 00:27:02.434
<v Speaker 2>the node as ready.

00:27:04.595 --> 00:27:06.755
<v Speaker 1>And then it won't schedule anything on it.

00:27:07.075 --> 00:27:10.120
<v Speaker 2>Yeah. Correct. So the the Kubelet is not

00:27:10.120 --> 00:27:11.480
<v Speaker 2>posting something

00:27:11.560 --> 00:27:12.760
<v Speaker 2>to the node,

00:27:13.720 --> 00:27:15.320
<v Speaker 2>which is making me think that you have

00:27:15.320 --> 00:27:17.080
<v Speaker 2>screwed up the Kubelet configuration,

00:27:18.360 --> 00:27:19.800
<v Speaker 2>which we can check-in

00:27:20.040 --> 00:27:22.280
<v Speaker 2>the ETC Kubernetes

00:27:23.595 --> 00:27:26.715
<v Speaker 2>no. Slash slash bar lib

00:27:29.515 --> 00:27:30.475
<v Speaker 2>kubelet

00:27:31.515 --> 00:27:31.914
<v Speaker 2>config.

00:27:38.500 --> 00:27:39.379
<v Speaker 2>Did you

00:27:39.860 --> 00:27:41.700
<v Speaker 2>if you modified in your file, did you

00:27:41.700 --> 00:27:43.139
<v Speaker 2>keep any backup at least?

00:27:45.940 --> 00:27:48.019
<v Speaker 0>Nobody ever leave. I did, but not of

00:27:48.019 --> 00:27:48.419
<v Speaker 1>this one.

00:27:49.455 --> 00:27:52.014
<v Speaker 2>Not of this one. Okay. And

00:27:52.495 --> 00:27:54.095
<v Speaker 1>we can fix this one. I can help

00:27:54.095 --> 00:27:56.255
<v Speaker 1>you with this one. Hold on. Hold on.

00:27:56.255 --> 00:27:58.095
<v Speaker 0>You just can't done, mate. Hold on. Hold

00:27:58.095 --> 00:27:58.575
<v Speaker 2>on.

00:27:59.375 --> 00:28:01.775
<v Speaker 2>Why do you have a memory available 500

00:28:01.775 --> 00:28:02.655
<v Speaker 2>gigabots here?

00:28:04.310 --> 00:28:06.470
<v Speaker 0>Is this port correct? One zero two four

00:28:06.470 --> 00:28:08.309
<v Speaker 0>eight? That doesn't ring a bell for me.

00:28:14.630 --> 00:28:17.270
<v Speaker 2>Hold on. So that 500 gigabytes will say

00:28:17.270 --> 00:28:19.765
<v Speaker 1>that it hard evicts any pod if you

00:28:19.765 --> 00:28:21.765
<v Speaker 1>don't have 500 gigabytes. You're on the right

00:28:21.765 --> 00:28:22.804
<v Speaker 1>track with that one.

00:28:23.765 --> 00:28:25.845
<v Speaker 2>Okay. So that's not good. Yeah.

00:28:28.005 --> 00:28:29.125
<v Speaker 1>You can delete that one.

00:28:31.580 --> 00:28:32.860
<v Speaker 0>Oh, thanks, man.

00:28:33.500 --> 00:28:35.420
<v Speaker 2>Actually, I I cheated a little bit because

00:28:35.420 --> 00:28:37.100
<v Speaker 2>while you guys were talking, I went to

00:28:37.100 --> 00:28:39.180
<v Speaker 2>the cubelet config on the control plane node

00:28:39.180 --> 00:28:41.340
<v Speaker 2>to see what's going on there. That's a

00:28:41.420 --> 00:28:43.419
<v Speaker 0>cheated that that's good debugging.

00:28:43.420 --> 00:28:44.140
<v Speaker 0>We like that.

00:28:45.205 --> 00:28:45.925
<v Speaker 2>Okay.

00:28:46.245 --> 00:28:49.045
<v Speaker 2>Let's see. I restarted the cubelet now

00:28:51.765 --> 00:28:54.885
<v Speaker 2>on this node, and it should

00:28:55.125 --> 00:28:56.645
<v Speaker 2>be a general CTO.

00:29:02.030 --> 00:29:03.710
<v Speaker 2>It looks like it's good.

00:29:06.030 --> 00:29:06.750
<v Speaker 2>Okay.

00:29:07.230 --> 00:29:10.270
<v Speaker 2>But let's go back and check this

00:29:10.510 --> 00:29:11.790
<v Speaker 2>node status.

00:29:12.190 --> 00:29:13.630
<v Speaker 0>Yeah. It's still not ready.

00:29:16.235 --> 00:29:18.315
<v Speaker 1>There might have been something else in that

00:29:18.315 --> 00:29:18.955
<v Speaker 1>file.

00:29:20.235 --> 00:29:22.075
<v Speaker 2>Yeah. That's that's what's going to be my

00:29:22.075 --> 00:29:24.154
<v Speaker 2>last my next one. So let's check

00:29:24.955 --> 00:29:26.475
<v Speaker 2>this file, what's going on there.

00:29:28.169 --> 00:29:30.809
<v Speaker 2>I'm sorry. We cannot do from history.

00:29:32.490 --> 00:29:34.970
<v Speaker 2>I'm just comparing to the file, but I

00:29:34.970 --> 00:29:36.649
<v Speaker 2>don't want to compare. I want to see

00:29:37.370 --> 00:29:39.210
<v Speaker 2>by myself if I can spot something.

00:29:40.015 --> 00:29:42.414
<v Speaker 2>The health check port is good.

00:29:46.495 --> 00:29:48.895
<v Speaker 0>No suggestion that might just be iTerm that

00:29:48.895 --> 00:29:50.895
<v Speaker 0>is struggling there, so I'm gonna find out.

00:30:03.000 --> 00:30:05.240
<v Speaker 2>I'm literally now just comparing the two files,

00:30:05.240 --> 00:30:06.600
<v Speaker 2>just to be very honest.

00:30:06.920 --> 00:30:07.800
<v Speaker 0>No. Good.

00:30:10.105 --> 00:30:11.465
<v Speaker 1>Keep diffing them.

00:30:16.025 --> 00:30:17.945
<v Speaker 2>CPU blah blah blah.

00:30:20.185 --> 00:30:20.905
<v Speaker 2>That's good.

00:30:24.670 --> 00:30:25.390
<v Speaker 2>Okay.

00:30:30.590 --> 00:30:33.310
<v Speaker 0>Yeah. Make this better term. Hold on. Hold

00:30:33.310 --> 00:30:34.590
<v Speaker 2>on. What is that run once?

00:30:35.625 --> 00:30:36.904
<v Speaker 2>That's not good.

00:30:41.305 --> 00:30:42.904
<v Speaker 1>Sorry about that.

00:30:43.225 --> 00:30:45.625
<v Speaker 1>Yeah. Run once is a not very known

00:30:45.625 --> 00:30:46.425
<v Speaker 1>configuration

00:30:46.425 --> 00:30:48.505
<v Speaker 1>that makes the cubelet just run one time

00:30:48.505 --> 00:30:49.865
<v Speaker 1>and then ends.

00:30:51.070 --> 00:30:54.190
<v Speaker 2>That's doesn't look like a very useful configuration.

00:30:54.830 --> 00:30:56.670
<v Speaker 0>Where's the run once? Where did you see

00:30:56.670 --> 00:30:57.230
<v Speaker 0>that?

00:30:58.270 --> 00:30:58.750
<v Speaker 2>It's

00:30:59.870 --> 00:31:01.309
<v Speaker 2>you can see it here.

00:31:01.550 --> 00:31:02.430
<v Speaker 2>Run once through.

00:31:05.415 --> 00:31:07.095
<v Speaker 2>Do you see it there in your screen?

00:31:09.175 --> 00:31:09.895
<v Speaker 0>Oh,

00:31:10.455 --> 00:31:13.655
<v Speaker 0>got it. Yeah. Like, I commented out and

00:31:13.655 --> 00:31:15.335
<v Speaker 2>restarted the cubelet.

00:31:15.815 --> 00:31:17.335
<v Speaker 0>Alright. So

00:31:19.490 --> 00:31:20.129
<v Speaker 2>And

00:31:20.450 --> 00:31:23.489
<v Speaker 2>now I believe we should be good.

00:31:27.169 --> 00:31:28.690
<v Speaker 2>Okay. It's ready. Good.

00:31:30.675 --> 00:31:33.715
<v Speaker 0>So who don't? What's what's

00:31:33.715 --> 00:31:35.075
<v Speaker 0>the run once flag for?

00:31:36.035 --> 00:31:38.355
<v Speaker 1>One runs allows you to run the cubelet

00:31:38.355 --> 00:31:40.275
<v Speaker 1>once. It will do its thing and then

00:31:40.275 --> 00:31:43.235
<v Speaker 1>shut down, basically. So it goes on not

00:31:43.235 --> 00:31:45.475
<v Speaker 1>ready anymore because it won't accept anything more.

00:31:46.669 --> 00:31:47.950
<v Speaker 1>That's what it does.

00:31:48.590 --> 00:31:49.789
<v Speaker 0>What's that for?

00:31:56.429 --> 00:31:57.470
<v Speaker 2>Sounds like or not

00:31:59.305 --> 00:32:01.385
<v Speaker 1>Like, four year or no. Not four years.

00:32:01.385 --> 00:32:02.345
<v Speaker 1>Maybe

00:32:02.345 --> 00:32:04.025
<v Speaker 1>two years ago, there was actually a person

00:32:04.025 --> 00:32:06.265
<v Speaker 1>that had gotten this in their configuration,

00:32:06.345 --> 00:32:08.745
<v Speaker 1>and it caused me no amount of grief

00:32:09.065 --> 00:32:10.745
<v Speaker 1>before I found it. So you guys are

00:32:10.745 --> 00:32:12.659
<v Speaker 1>awesome because I would not have found it

00:32:12.659 --> 00:32:13.379
<v Speaker 1>that fast.

00:32:14.260 --> 00:32:17.140
<v Speaker 2>So look at if you open the if

00:32:17.140 --> 00:32:19.380
<v Speaker 2>you open the terminal where we have the

00:32:19.380 --> 00:32:21.460
<v Speaker 2>shared session on the worker node, do you

00:32:21.460 --> 00:32:22.499
<v Speaker 2>still have that one?

00:32:22.740 --> 00:32:24.585
<v Speaker 2>Mhmm. So we can show the people on

00:32:24.585 --> 00:32:26.985
<v Speaker 2>the livestream what's happening. So run one's true.

00:32:26.985 --> 00:32:28.905
<v Speaker 2>I commented that out. Right? So this is

00:32:28.905 --> 00:32:30.745
<v Speaker 2>pretty much what we were talking about

00:32:31.065 --> 00:32:33.465
<v Speaker 2>where Mark explained. And then there was these

00:32:33.465 --> 00:32:34.585
<v Speaker 2>two lines

00:32:34.985 --> 00:32:37.370
<v Speaker 2>a little bit up that says memory available

00:32:37.370 --> 00:32:40.250
<v Speaker 2>500 gigabytes. It's literally the third line from

00:32:40.250 --> 00:32:42.330
<v Speaker 2>the top as we see it on the

00:32:42.330 --> 00:32:43.049
<v Speaker 2>livestream.

00:32:43.610 --> 00:32:45.450
<v Speaker 1>We never actually got to see this in

00:32:45.450 --> 00:32:47.770
<v Speaker 1>action because the run once was working. But

00:32:47.770 --> 00:32:50.090
<v Speaker 1>with the eviction of hard, it's going to

00:32:50.090 --> 00:32:52.295
<v Speaker 1>actually kick out pods it doesn't have at

00:32:52.295 --> 00:32:55.415
<v Speaker 1>least 500 free gigs of memory. Usually, this

00:32:55.415 --> 00:32:56.935
<v Speaker 1>is a very small number. You want a

00:32:56.935 --> 00:32:59.575
<v Speaker 1>little overhead, a little room, little wiggle room,

00:32:59.575 --> 00:33:00.934
<v Speaker 1>like 200 megs.

00:33:01.975 --> 00:33:04.455
<v Speaker 2>I see. So you wanted us to find

00:33:04.455 --> 00:33:06.429
<v Speaker 2>the run ones, fix it, and then stumble

00:33:06.429 --> 00:33:07.869
<v Speaker 2>across the second one.

00:33:08.590 --> 00:33:10.830
<v Speaker 1>I thought the run well, there's actually a

00:33:10.830 --> 00:33:12.590
<v Speaker 1>third one that you guys haven't found, but

00:33:12.590 --> 00:33:13.950
<v Speaker 1>the cubelet will be working.

00:33:15.470 --> 00:33:16.109
<v Speaker 1>But

00:33:16.350 --> 00:33:18.029
<v Speaker 1>we can come back to that when you

00:33:18.029 --> 00:33:19.870
<v Speaker 1>find that things aren't being scheduled on it.

00:33:21.345 --> 00:33:22.144
<v Speaker 2>Uh-huh.

00:33:22.865 --> 00:33:24.304
<v Speaker 2>There's more surprises.

00:33:26.225 --> 00:33:27.665
<v Speaker 1>Yes. But for the most part, you fix

00:33:27.665 --> 00:33:28.465
<v Speaker 1>this node.

00:33:30.945 --> 00:33:32.625
<v Speaker 2>So what's happening?

00:33:36.990 --> 00:33:38.109
<v Speaker 2>What's the

00:33:39.789 --> 00:33:41.629
<v Speaker 2>what's the node name?

00:33:43.710 --> 00:33:44.909
<v Speaker 0>V x four.

00:33:45.789 --> 00:33:47.389
<v Speaker 2>Yep. So

00:33:49.395 --> 00:33:51.235
<v Speaker 2>we have a bunch of stuff that are

00:33:51.235 --> 00:33:52.995
<v Speaker 2>supposed to be running on that node that

00:33:52.995 --> 00:33:53.395
<v Speaker 2>are

00:33:53.875 --> 00:33:55.715
<v Speaker 0>We've got an admission controller,

00:33:56.195 --> 00:33:59.315
<v Speaker 2>potentially. Unexpected

00:33:59.315 --> 00:34:00.435
<v Speaker 2>admission error.

00:34:01.190 --> 00:34:01.909
<v Speaker 2>Okay.

00:34:03.350 --> 00:34:04.950
<v Speaker 2>Okay. Sneaky.

00:34:07.190 --> 00:34:08.230
<v Speaker 2>So what do you want? Do you want

00:34:08.230 --> 00:34:09.590
<v Speaker 2>to continue working on this one, or do

00:34:09.590 --> 00:34:10.790
<v Speaker 2>we move to the next one?

00:34:12.150 --> 00:34:14.469
<v Speaker 0>Well, let's do a quick check for that

00:34:14.469 --> 00:34:15.590
<v Speaker 0>admission error.

00:34:17.735 --> 00:34:18.535
<v Speaker 0>So

00:34:19.655 --> 00:34:21.655
<v Speaker 0>let's try validating

00:34:21.735 --> 00:34:23.735
<v Speaker 0>webhook configurations.

00:34:27.095 --> 00:34:27.895
<v Speaker 0>Validating.

00:34:34.239 --> 00:34:35.840
<v Speaker 0>Okay. I'm mutating.

00:34:36.000 --> 00:34:37.840
<v Speaker 0>Failing that, it could be in a kubect

00:34:37.840 --> 00:34:38.960
<v Speaker 0>config again

00:34:39.760 --> 00:34:41.440
<v Speaker 0>as a static.

00:34:41.440 --> 00:34:41.760
<v Speaker 0>Yeah.

00:34:44.415 --> 00:34:46.175
<v Speaker 2>Can you can you maybe describe one of

00:34:46.175 --> 00:34:47.455
<v Speaker 2>the pods that says

00:34:47.695 --> 00:34:50.895
<v Speaker 2>eviction error? Like, that Cilium operator pod maybe?

00:34:52.094 --> 00:34:52.574
<v Speaker 2>Mhmm.

00:35:00.589 --> 00:35:03.070
<v Speaker 2>Executed error while a computer recover from admission

00:35:03.070 --> 00:35:03.710
<v Speaker 2>fee.

00:35:06.430 --> 00:35:07.950
<v Speaker 2>Preemption. Not very helpful.

00:35:11.234 --> 00:35:12.595
<v Speaker 0>So we we

00:35:12.595 --> 00:35:14.435
<v Speaker 0>can take a look at the

00:35:14.595 --> 00:35:15.795
<v Speaker 0>Kubernetes

00:35:19.635 --> 00:35:21.155
<v Speaker 0>manifest and

00:35:21.875 --> 00:35:23.474
<v Speaker 0>the Kube API server.

00:35:25.680 --> 00:35:27.440
<v Speaker 0>My Vim is not gonna work, is it?

00:35:27.440 --> 00:35:29.440
<v Speaker 0>Oh, no, it seems okay. Oh, no.

00:35:31.119 --> 00:35:32.400
<v Speaker 0>I'll do it in key.

00:35:36.640 --> 00:35:38.125
<v Speaker 0>I don't know how to list this. Okay.

00:35:38.125 --> 00:35:39.085
<v Speaker 0>I'll just join a new one because I

00:35:39.085 --> 00:35:40.204
<v Speaker 0>don't know how to join from the command

00:35:40.204 --> 00:35:41.005
<v Speaker 0>line yet.

00:35:42.605 --> 00:35:44.045
<v Speaker 2>So what do you want to check?

00:35:44.365 --> 00:35:45.964
<v Speaker 0>I wanna see if the

00:35:46.444 --> 00:35:49.244
<v Speaker 0>admission controllers on the Kube API server are

00:35:49.244 --> 00:35:50.365
<v Speaker 0>set

00:35:50.220 --> 00:35:53.660
<v Speaker 0>and the file here. So we can do

00:35:55.580 --> 00:35:56.780
<v Speaker 0>manifests

00:35:56.780 --> 00:35:58.220
<v Speaker 0>then cube.

00:35:58.780 --> 00:36:01.420
<v Speaker 1>Wouldn't those affect other nodes though? We're looking

00:36:01.420 --> 00:36:03.420
<v Speaker 1>at something that's just affecting this node.

00:36:05.045 --> 00:36:06.565
<v Speaker 2>Yeah. That's what I'm thinking.

00:36:08.405 --> 00:36:11.605
<v Speaker 1>If if the admission controllers were misconfigured, unless

00:36:11.605 --> 00:36:14.005
<v Speaker 1>if they were, like, a custom programmed one,

00:36:14.005 --> 00:36:15.365
<v Speaker 1>which they are not, I didn't do that

00:36:15.365 --> 00:36:15.925
<v Speaker 1>much,

00:36:18.565 --> 00:36:20.325
<v Speaker 1>they would treat all the nodes equally.

00:36:22.160 --> 00:36:23.920
<v Speaker 0>Okay. Let's jump onto the hard node then

00:36:23.920 --> 00:36:25.680
<v Speaker 0>and see what we can work out before

00:36:25.680 --> 00:36:26.400
<v Speaker 0>we

00:36:27.440 --> 00:36:29.119
<v Speaker 0>Alright. We move on. Okay.

00:36:31.599 --> 00:36:32.720
<v Speaker 0>So LS.

00:36:35.245 --> 00:36:37.965
<v Speaker 0>I'm gonna do SSH onto root at and

00:36:37.965 --> 00:36:39.725
<v Speaker 0>this is zed p

00:36:40.525 --> 00:36:41.325
<v Speaker 0>r.

00:36:42.685 --> 00:36:43.085
<v Speaker 0>Yep.

00:36:50.160 --> 00:36:51.040
<v Speaker 0>It is

00:36:51.280 --> 00:36:52.240
<v Speaker 0>kubelet.

00:36:57.040 --> 00:36:57.600
<v Speaker 0>What?

00:36:58.720 --> 00:36:59.760
<v Speaker 0>I don't know.

00:37:00.400 --> 00:37:02.080
<v Speaker 0>There's no telling me Ketty isn't a good

00:37:02.080 --> 00:37:03.040
<v Speaker 0>terminal,

00:37:03.040 --> 00:37:03.280
<v Speaker 0>but

00:37:04.455 --> 00:37:05.895
<v Speaker 0>I'm just maybe I'll I'll I think I'll

00:37:05.895 --> 00:37:07.255
<v Speaker 0>just use the web interface.

00:37:07.575 --> 00:37:09.335
<v Speaker 0>You know, fun experiment, no using the command

00:37:09.335 --> 00:37:09.895
<v Speaker 0>line.

00:37:10.935 --> 00:37:11.655
<v Speaker 2>Okay.

00:37:12.615 --> 00:37:14.695
<v Speaker 2>So what was that error again?

00:37:15.815 --> 00:37:17.895
<v Speaker 2>No. Even from the web interface.

00:37:22.290 --> 00:37:24.609
<v Speaker 0>Okay. Thought I thought it was my my

00:37:24.609 --> 00:37:27.170
<v Speaker 0>terminal, but, okay, it's not. Right. Cool. Did

00:37:27.170 --> 00:37:29.329
<v Speaker 2>you mess up the terminal? No. It's my

00:37:29.329 --> 00:37:31.089
<v Speaker 0>cutie. Alright. I'll let me pull up the

00:37:31.089 --> 00:37:31.730
<v Speaker 0>web interface.

00:37:37.175 --> 00:37:37.975
<v Speaker 0>Alright.

00:37:41.255 --> 00:37:43.895
<v Speaker 0>Okay. You wanna join this new session, please?

00:37:44.615 --> 00:37:45.815
<v Speaker 2>I'm waiting for it.

00:37:47.349 --> 00:37:48.869
<v Speaker 0>Okay. So if we run the status on

00:37:48.869 --> 00:37:50.550
<v Speaker 0>the Kubelet, we yeah. We've got we've got

00:37:50.550 --> 00:37:52.070
<v Speaker 0>messages here. So

00:37:57.750 --> 00:38:00.790
<v Speaker 2>Request cancel while I is this IP address

00:38:00.790 --> 00:38:01.990
<v Speaker 2>of the of the

00:38:02.535 --> 00:38:03.575
<v Speaker 2>of the,

00:38:04.375 --> 00:38:05.095
<v Speaker 2>sorry,

00:38:05.575 --> 00:38:07.415
<v Speaker 2>of the EPS service. Correct?

00:38:12.615 --> 00:38:13.575
<v Speaker 0>Let's find out.

00:38:27.619 --> 00:38:30.579
<v Speaker 0>1477549.

00:38:31.905 --> 00:38:33.025
<v Speaker 2>6 7?

00:38:33.345 --> 00:38:34.385
<v Speaker 2>Yeah. Yep.

00:38:35.025 --> 00:38:37.745
<v Speaker 2>Failed to ensure, and it's getting a timeout.

00:38:37.745 --> 00:38:38.625
<v Speaker 2>So maybe

00:38:39.345 --> 00:38:40.865
<v Speaker 2>maybe it's

00:38:40.865 --> 00:38:41.985
<v Speaker 2>some sort of,

00:38:43.985 --> 00:38:45.505
<v Speaker 2>like, something that blocks

00:38:47.790 --> 00:38:49.550
<v Speaker 2>this node from existing out to the API

00:38:49.550 --> 00:38:52.030
<v Speaker 2>server because it's getting a timeout issue.

00:38:53.950 --> 00:38:54.830
<v Speaker 0>Yeah.

00:38:56.110 --> 00:38:58.190
<v Speaker 2>So maybe a simple thing would be just

00:38:58.190 --> 00:39:00.430
<v Speaker 2>to ping that

00:38:59.555 --> 00:39:02.115
<v Speaker 2>IP and see if it will respond.

00:39:02.835 --> 00:39:04.675
<v Speaker 0>Oh, sorry. I'll let you type.

00:39:05.235 --> 00:39:07.555
<v Speaker 2>Oh, oh, oh, just make it sure. It

00:39:07.555 --> 00:39:08.995
<v Speaker 2>should be one

00:39:09.075 --> 00:39:10.595
<v Speaker 2>four seven dot

00:39:11.075 --> 00:39:12.595
<v Speaker 2>I know that I'm copying it. Well, I

00:39:12.595 --> 00:39:14.435
<v Speaker 2>should just copy past it. Just bear with

00:39:14.435 --> 00:39:14.595
<v Speaker 2>me.

00:39:15.540 --> 00:39:20.980
<v Speaker 2>67.

00:39:22.820 --> 00:39:24.100
<v Speaker 2>Yeah. You're right.

00:39:25.220 --> 00:39:26.580
<v Speaker 2>6443.

00:39:28.020 --> 00:39:28.660
<v Speaker 2>Okay.

00:39:28.980 --> 00:39:30.660
<v Speaker 2>I'm expecting to see an okay here.

00:39:31.674 --> 00:39:33.915
<v Speaker 2>This is the Halsey port of the

00:39:34.635 --> 00:39:37.755
<v Speaker 2>the API server or maybe API. No.

00:39:37.994 --> 00:39:39.755
<v Speaker 2>So the node is not this node is

00:39:39.755 --> 00:39:41.035
<v Speaker 2>not able to reach out to the API

00:39:41.035 --> 00:39:43.035
<v Speaker 2>server on that IP address. So maybe

00:39:43.355 --> 00:39:44.234
<v Speaker 0>Can we ping it?

00:39:47.890 --> 00:39:51.010
<v Speaker 2>No. And, no, we can't. Can we ping

00:39:51.010 --> 00:39:51.890
<v Speaker 2>the Internet?

00:39:52.290 --> 00:39:54.850
<v Speaker 2>But you SSH over public IP. So, yeah,

00:39:54.850 --> 00:39:56.290
<v Speaker 2>the Internet actually should work.

00:39:56.530 --> 00:39:59.250
<v Speaker 0>So I guess for IP IP or something?

00:39:59.250 --> 00:40:00.130
<v Speaker 0>Exactly.

00:40:00.130 --> 00:40:00.370
<v Speaker 0>Yeah.

00:40:10.575 --> 00:40:13.055
<v Speaker 2>I'm really bad at reading active rules, by

00:40:13.055 --> 00:40:14.335
<v Speaker 2>the way. So I'm just

00:40:14.655 --> 00:40:16.335
<v Speaker 2>looking for, like, a very quick hint.

00:40:18.809 --> 00:40:20.730
<v Speaker 0>Yeah. Well I should have put four or

00:40:20.730 --> 00:40:22.970
<v Speaker 1>five stars on this one. Just

00:40:23.609 --> 00:40:24.810
<v Speaker 1>I apologize.

00:40:26.650 --> 00:40:29.529
<v Speaker 2>For dropping mark block in terminal local net.

00:40:29.529 --> 00:40:30.970
<v Speaker 2>Okay. No. There are nothing. Right?

00:40:34.255 --> 00:40:38.175
<v Speaker 0>I don't see anything. So there's a

00:40:38.895 --> 00:40:40.655
<v Speaker 0>this is a Cilium cluster.

00:40:41.295 --> 00:40:43.295
<v Speaker 0>I wonder if we'll get any Cilium host

00:40:43.295 --> 00:40:44.335
<v Speaker 0>networking policies.

00:40:48.660 --> 00:40:50.020
<v Speaker 2>You think so?

00:40:51.300 --> 00:40:53.780
<v Speaker 0>I mean, we can definitely check. So Cilium

00:40:53.780 --> 00:40:56.260
<v Speaker 0>has has the ability to use eBPF

00:40:56.260 --> 00:40:57.060
<v Speaker 0>to modify

00:40:59.615 --> 00:41:00.974
<v Speaker 0>the networking,

00:41:00.974 --> 00:41:02.655
<v Speaker 0>but we can do a separate Kubernetes.

00:41:02.655 --> 00:41:04.175
<v Speaker 0>Let me just set this up again.

00:41:05.535 --> 00:41:07.055
<v Speaker 0>K k control.

00:41:07.135 --> 00:41:09.055
<v Speaker 0>And then we can do k get

00:41:09.375 --> 00:41:10.255
<v Speaker 0>host

00:41:10.815 --> 00:41:13.215
<v Speaker 0>net poll. Is that right? Nope.

00:41:14.470 --> 00:41:16.870
<v Speaker 2>I don't know how the Cilium host network

00:41:16.870 --> 00:41:18.070
<v Speaker 2>policies are.

00:41:18.630 --> 00:41:20.550
<v Speaker 0>Yeah. So we wanna get

00:41:20.550 --> 00:41:21.590
<v Speaker 0>Cilium.

00:41:24.550 --> 00:41:26.950
<v Speaker 0>I kinda wanna just Class provide network policies,

00:41:26.950 --> 00:41:28.070
<v Speaker 2>but that would make sense.

00:41:31.085 --> 00:41:33.325
<v Speaker 0>None. And then there's Cilium

00:41:33.405 --> 00:41:34.285
<v Speaker 0>network.

00:41:34.525 --> 00:41:35.805
<v Speaker 0>Oh, okay.

00:41:37.244 --> 00:41:38.285
<v Speaker 0>So it's not that.

00:41:39.645 --> 00:41:41.645
<v Speaker 1>You can you guys are

00:41:42.860 --> 00:41:45.500
<v Speaker 1>for educational purposes, you guys are, like, right

00:41:45.500 --> 00:41:46.940
<v Speaker 1>on the right path.

00:41:48.140 --> 00:41:49.500
<v Speaker 1>This is why I said four or five

00:41:49.500 --> 00:41:51.180
<v Speaker 1>stars because I kinda went off the beaten

00:41:51.180 --> 00:41:53.180
<v Speaker 1>path of what the right this is where

00:41:53.180 --> 00:41:54.060
<v Speaker 1>you should look.

00:41:54.380 --> 00:41:56.220
<v Speaker 0>If it's something that was happening.

00:41:57.755 --> 00:42:00.155
<v Speaker 1>At Cilium. At your container run at your

00:42:00.155 --> 00:42:01.755
<v Speaker 1>container networking

00:42:02.555 --> 00:42:05.755
<v Speaker 1>solution, in our case, Cilium, hundred percent, this

00:42:05.755 --> 00:42:07.355
<v Speaker 1>is probably where it would be coming from

00:42:07.355 --> 00:42:08.315
<v Speaker 1>or DNS.

00:42:10.650 --> 00:42:11.530
<v Speaker 2>Uh-huh.

00:42:11.930 --> 00:42:14.490
<v Speaker 2>Well, DNS, no, because I tried to do

00:42:14.490 --> 00:42:17.849
<v Speaker 2>a ping from the worker node on www.google.com,

00:42:17.849 --> 00:42:20.410
<v Speaker 2>and it worked. Right? You already proved DNS

00:42:20.410 --> 00:42:21.610
<v Speaker 1>was working. Yep.

00:42:22.650 --> 00:42:23.369
<v Speaker 1>So it's not that.

00:42:26.445 --> 00:42:28.525
<v Speaker 2>So I'm looking at the serial configuration

00:42:28.525 --> 00:42:29.405
<v Speaker 2>and

00:42:30.285 --> 00:42:32.445
<v Speaker 2>control plane node to see if

00:42:34.445 --> 00:42:37.085
<v Speaker 2>you messed up with that. Let's

00:42:37.085 --> 00:42:37.325
<v Speaker 2>see.

00:42:38.529 --> 00:42:39.250
<v Speaker 2>Dash

00:42:39.410 --> 00:42:41.250
<v Speaker 2>dash o YAML.

00:42:45.089 --> 00:42:45.890
<v Speaker 2>Okay.

00:42:48.609 --> 00:42:50.690
<v Speaker 2>Yeah. But if the Serum configuration was broken

00:42:50.690 --> 00:42:52.210
<v Speaker 2>on the control plane node, it would affect

00:42:52.210 --> 00:42:53.010
<v Speaker 2>everything.

00:42:53.089 --> 00:42:53.490
<v Speaker 2>Right?

00:42:54.505 --> 00:42:56.265
<v Speaker 2>That's probably not it.

00:43:00.665 --> 00:43:02.905
<v Speaker 0>People are suggesting it's always DNS.

00:43:03.625 --> 00:43:05.065
<v Speaker 0>I don't think it is DNS.

00:43:06.300 --> 00:43:08.620
<v Speaker 1>It's it's not DNS this time, but you're

00:43:08.780 --> 00:43:10.940
<v Speaker 1>most people would be right to to question

00:43:10.940 --> 00:43:11.900
<v Speaker 1>DNS.

00:43:11.900 --> 00:43:14.140
<v Speaker 1>I don't know how often that breaks.

00:43:16.940 --> 00:43:19.385
<v Speaker 2>So I did a trace route from the

00:43:19.385 --> 00:43:22.185
<v Speaker 2>worker node toward the IP address of the

00:43:22.185 --> 00:43:23.465
<v Speaker 2>control plane node,

00:43:23.785 --> 00:43:25.625
<v Speaker 2>and I could see that the node actually

00:43:25.625 --> 00:43:28.025
<v Speaker 2>is able to get out. So it's able

00:43:28.025 --> 00:43:29.785
<v Speaker 2>to get to the gateway,

00:43:30.585 --> 00:43:32.185
<v Speaker 2>and I I believe the problem is on

00:43:32.185 --> 00:43:33.625
<v Speaker 2>the receiving end, so it will be on

00:43:33.625 --> 00:43:34.505
<v Speaker 2>control plane side.

00:43:35.040 --> 00:43:35.600
<v Speaker 2>Right?

00:43:36.080 --> 00:43:37.760
<v Speaker 2>Sorry. I'm I'm I have a background in

00:43:37.760 --> 00:43:39.040
<v Speaker 2>networking, so I'm reasoning.

00:43:39.360 --> 00:43:41.680
<v Speaker 0>I do not. So I I'm loving this.

00:43:41.680 --> 00:43:42.640
<v Speaker 0>I'll let you

00:43:43.040 --> 00:43:43.920
<v Speaker 0>do this.

00:43:44.320 --> 00:43:46.240
<v Speaker 0>Okay. So Well, I don't know what to

00:43:46.240 --> 00:43:47.840
<v Speaker 2>do. It's gonna be obvious, to be very

00:43:47.840 --> 00:43:49.625
<v Speaker 2>honest. I I just flex it a little

00:43:49.625 --> 00:43:51.945
<v Speaker 2>bit in my note my notebook knowledge. Okay.

00:43:53.945 --> 00:43:56.425
<v Speaker 0>No IP table. I'm

00:43:56.425 --> 00:43:58.185
<v Speaker 0>gonna just make sure we have

00:43:58.984 --> 00:43:59.785
<v Speaker 0>no firewall.

00:44:04.740 --> 00:44:06.180
<v Speaker 0>I mean, I run a status. I'm assuming

00:44:06.180 --> 00:44:07.780
<v Speaker 0>it's not running though. Yeah.

00:44:09.859 --> 00:44:11.619
<v Speaker 1>No. I thought that would be too easy.

00:44:11.619 --> 00:44:13.059
<v Speaker 1>You guys are better than that. I like

00:44:13.059 --> 00:44:14.500
<v Speaker 0>easy. Just Easy's good.

00:44:15.635 --> 00:44:17.315
<v Speaker 1>That was the other two nodes.

00:44:18.755 --> 00:44:20.195
<v Speaker 1>Guys, blew through those.

00:44:20.915 --> 00:44:21.635
<v Speaker 0>So

00:44:21.795 --> 00:44:23.075
<v Speaker 0>what else could this be?

00:44:31.609 --> 00:44:31.930
<v Speaker 0>Is

00:44:32.490 --> 00:44:33.210
<v Speaker 0>uh-oh.

00:44:37.690 --> 00:44:39.130
<v Speaker 1>I'm trying to think of a good hint

00:44:39.130 --> 00:44:39.690
<v Speaker 1>for you guys.

00:44:41.265 --> 00:44:44.464
<v Speaker 1>So you were really, really, really, really hot

00:44:44.464 --> 00:44:47.984
<v Speaker 1>when you were talking about Cilium and eBPF.

00:44:48.944 --> 00:44:50.625
<v Speaker 1>Like, you were on fire.

00:44:51.505 --> 00:44:53.905
<v Speaker 0>I hope there's not an eBPF probe running

00:44:53.905 --> 00:44:54.704
<v Speaker 0>on this machine.

00:45:00.020 --> 00:45:02.339
<v Speaker 2>Hold on. So if we look at all

00:45:02.339 --> 00:45:03.380
<v Speaker 2>the pods

00:45:04.579 --> 00:45:06.740
<v Speaker 2>and we do a dash o white here,

00:45:07.795 --> 00:45:10.195
<v Speaker 2>And then we grep on

00:45:10.275 --> 00:45:11.395
<v Speaker 2>the node

00:45:11.475 --> 00:45:12.835
<v Speaker 2>that we have.

00:45:14.035 --> 00:45:16.675
<v Speaker 2>So the z p blah blah

00:45:18.835 --> 00:45:22.260
<v Speaker 2>is Cydium running here. The Citium operator is

00:45:22.260 --> 00:45:24.100
<v Speaker 2>running on both nodes,

00:45:24.580 --> 00:45:25.780
<v Speaker 2>so that's good.

00:45:32.100 --> 00:45:33.780
<v Speaker 2>Let's check. I want to check the logs

00:45:33.780 --> 00:45:34.660
<v Speaker 2>of this thing.

00:45:40.285 --> 00:45:42.765
<v Speaker 2>Post the this. And Which machine are you

00:45:42.765 --> 00:45:43.485
<v Speaker 0>on? Sorry.

00:45:44.365 --> 00:45:45.805
<v Speaker 2>I'm on the control plane node.

00:45:50.150 --> 00:45:53.190
<v Speaker 2>So this one is not outputting any

00:45:54.790 --> 00:45:56.390
<v Speaker 2>oh, come there on the logs.

00:45:56.710 --> 00:45:59.270
<v Speaker 2>But so the two Cilium things that run

00:45:59.270 --> 00:45:59.910
<v Speaker 2>on

00:46:01.590 --> 00:46:02.870
<v Speaker 2>does not have any logs?

00:46:04.075 --> 00:46:06.795
<v Speaker 2>So I I see a a binary running.

00:46:06.795 --> 00:46:08.555
<v Speaker 0>I kinda highlighted that, but I don't know

00:46:08.555 --> 00:46:10.875
<v Speaker 0>if you've seen. But there's this BPF filter

00:46:10.875 --> 00:46:12.315
<v Speaker 0>running,

00:46:13.035 --> 00:46:14.395
<v Speaker 0>which to me looks

00:46:14.875 --> 00:46:15.915
<v Speaker 0>rather suspicious.

00:46:17.920 --> 00:46:18.880
<v Speaker 2>What is

00:46:19.040 --> 00:46:20.640
<v Speaker 2>BP filter?

00:46:22.800 --> 00:46:23.440
<v Speaker 2>You want

00:46:26.800 --> 00:46:28.320
<v Speaker 0>I mean, I'm gonna suggest we just kill

00:46:28.320 --> 00:46:29.440
<v Speaker 0>it and see what happens.

00:46:30.640 --> 00:46:31.120
<v Speaker 2>Go ahead.

00:46:36.694 --> 00:46:38.135
<v Speaker 0>Oh, three six.

00:46:40.615 --> 00:46:41.734
<v Speaker 0>Followed by taping.

00:46:46.599 --> 00:46:48.280
<v Speaker 0>Do you wanna try that ping again?

00:46:50.359 --> 00:46:50.760
<v Speaker 2>Yep.

00:46:58.914 --> 00:47:00.595
<v Speaker 2>Sorry. Give me a second.

00:47:01.234 --> 00:47:02.835
<v Speaker 2>Still not

00:47:03.075 --> 00:47:03.795
<v Speaker 2>pinging.

00:47:05.474 --> 00:47:08.355
<v Speaker 2>It's six seventy six. Right? What what what

00:47:08.355 --> 00:47:09.795
<v Speaker 2>is that IP address again? Just to make

00:47:09.795 --> 00:47:11.315
<v Speaker 2>sure that I'm not pinging the wrong one.

00:47:13.810 --> 00:47:15.570
<v Speaker 0>Having killing the program may have made things

00:47:15.570 --> 00:47:17.170
<v Speaker 0>worse to be fair if that was the

00:47:17.170 --> 00:47:19.490
<v Speaker 0>malicious. No. In fact, it's running again.

00:47:19.730 --> 00:47:22.450
<v Speaker 0>Okay. Let's find this rogue system d service

00:47:22.450 --> 00:47:23.650
<v Speaker 0>or Kubernetes pod.

00:47:26.765 --> 00:47:28.444
<v Speaker 0>Let's see what we've got running in the

00:47:28.444 --> 00:47:29.165
<v Speaker 0>cluster.

00:47:30.765 --> 00:47:31.885
<v Speaker 1>So in

00:47:32.684 --> 00:47:33.484
<v Speaker 1>in

00:47:33.885 --> 00:47:35.244
<v Speaker 1>light of educational,

00:47:35.244 --> 00:47:37.885
<v Speaker 1>there is a thing called a BPF tool,

00:47:38.670 --> 00:47:41.470
<v Speaker 1>which you can use to, like, examine BPF

00:47:41.470 --> 00:47:43.069
<v Speaker 1>apps if that's what you're digging into.

00:47:55.065 --> 00:47:56.664
<v Speaker 1>I'm not sure that it's installed on this

00:47:56.664 --> 00:47:57.385
<v Speaker 1>machine.

00:47:57.545 --> 00:47:59.224
<v Speaker 1>That was just a greater

00:47:59.305 --> 00:48:01.865
<v Speaker 1>for everybody out there watching if you're

00:48:02.345 --> 00:48:03.545
<v Speaker 1>digging into these things.

00:48:07.750 --> 00:48:09.750
<v Speaker 2>But this was running on the control plane.

00:48:09.750 --> 00:48:10.230
<v Speaker 2>Right?

00:48:10.630 --> 00:48:11.590
<v Speaker 0>It was.

00:48:13.190 --> 00:48:15.829
<v Speaker 0>I think there's something on the control plane

00:48:21.935 --> 00:48:24.415
<v Speaker 0>That's got an blocking

00:48:24.415 --> 00:48:26.175
<v Speaker 0>traffic from that node.

00:48:29.215 --> 00:48:31.055
<v Speaker 0>Am I right, Marek?

00:48:32.575 --> 00:48:34.255
<v Speaker 1>You're close.

00:48:34.335 --> 00:48:36.175
<v Speaker 1>It's

00:48:35.520 --> 00:48:38.000
<v Speaker 1>actually on the worker node. It's on the

00:48:38.000 --> 00:48:39.040
<v Speaker 0>worker node.

00:48:39.920 --> 00:48:40.960
<v Speaker 0>Yeah.

00:48:42.480 --> 00:48:44.720
<v Speaker 1>So I I think we're close to time

00:48:44.720 --> 00:48:46.000
<v Speaker 1>here. Yeah.

00:48:47.040 --> 00:48:49.680
<v Speaker 0>So what I did is There's Python port

00:48:49.680 --> 00:48:50.080
<v Speaker 0>blocker.

00:48:52.615 --> 00:48:53.575
<v Speaker 1>Yes, sir.

00:48:54.615 --> 00:48:55.415
<v Speaker 1>Actually,

00:48:55.815 --> 00:48:56.215
<v Speaker 1>just

00:48:57.815 --> 00:49:00.214
<v Speaker 1>actually, just deleting that doesn't fix the problem

00:49:00.214 --> 00:49:03.015
<v Speaker 1>because it actually loads the BPF module

00:49:03.734 --> 00:49:04.855
<v Speaker 1>that Python

00:49:05.095 --> 00:49:05.414
<v Speaker 1>does,

00:49:07.280 --> 00:49:09.760
<v Speaker 1>which is that filter c. So you could

00:49:09.760 --> 00:49:11.760
<v Speaker 1>actually go and check that out if you

00:49:11.760 --> 00:49:14.800
<v Speaker 1>like. It's just an eBPF program. All it

00:49:14.800 --> 00:49:17.040
<v Speaker 1>does is it goes in and

00:49:18.080 --> 00:49:21.200
<v Speaker 1>it reads each line there. Yep. That was

00:49:21.200 --> 00:49:21.440
<v Speaker 1>it.

00:49:23.255 --> 00:49:25.335
<v Speaker 1>So it takes every single packet. And if

00:49:25.335 --> 00:49:27.895
<v Speaker 1>it's from the API server, if the source

00:49:27.895 --> 00:49:30.055
<v Speaker 1>was from the API server, it rejects it

00:49:30.055 --> 00:49:31.255
<v Speaker 1>and throws it out.

00:49:31.815 --> 00:49:33.175
<v Speaker 1>It drops the packet.

00:49:33.575 --> 00:49:35.575
<v Speaker 0>Which is why when we did the trace

00:49:35.575 --> 00:49:37.560
<v Speaker 0>route, we got out, but we then never

00:49:37.560 --> 00:49:40.040
<v Speaker 0>got anything back. Okay. Not get back in.

00:49:40.040 --> 00:49:42.280
<v Speaker 1>You never get the request because the request

00:49:42.280 --> 00:49:45.400
<v Speaker 1>is dropped by or the the response is

00:49:45.400 --> 00:49:48.120
<v Speaker 1>then dropped by this. This is never going

00:49:48.120 --> 00:49:49.320
<v Speaker 1>to happen in production

00:49:49.560 --> 00:49:51.720
<v Speaker 1>and was just a fun eBPF

00:49:52.535 --> 00:49:53.335
<v Speaker 1>demo.

00:49:53.495 --> 00:49:55.975
<v Speaker 0>Okay. Jabbarred. See you later. Okay.

00:49:57.415 --> 00:49:58.455
<v Speaker 1>Sorry, guys.

00:49:58.855 --> 00:50:00.455
<v Speaker 0>In the interest of time, and

00:50:01.575 --> 00:50:02.535
<v Speaker 0>I wanna do

00:50:02.855 --> 00:50:04.455
<v Speaker 0>wanna do cluster.

00:50:05.255 --> 00:50:06.775
<v Speaker 0>Did we grab all like,

00:50:07.740 --> 00:50:09.340
<v Speaker 0>did we get all the issues there, Mark?

00:50:09.340 --> 00:50:10.060
<v Speaker 0>Are you happy?

00:50:11.260 --> 00:50:13.740
<v Speaker 1>You didn't fix the deployments, but that's fine.

00:50:13.740 --> 00:50:16.380
<v Speaker 1>We didn't have time. Yeah. Just I I

00:50:16.380 --> 00:50:17.980
<v Speaker 0>I wanna make sure we have enough time

00:50:17.980 --> 00:50:19.260
<v Speaker 0>for both clusters.

00:50:19.260 --> 00:50:22.175
<v Speaker 0>So I I deleted the scheduler,

00:50:22.415 --> 00:50:24.655
<v Speaker 1>and so there is no scheduler in the

00:50:24.655 --> 00:50:28.095
<v Speaker 1>static pod manifest. So how kubeadm stands this

00:50:28.095 --> 00:50:30.095
<v Speaker 1>up is all those are static pod manifests,

00:50:30.095 --> 00:50:33.135
<v Speaker 1>and they're those manifest exists in a static

00:50:33.135 --> 00:50:35.579
<v Speaker 1>folder. And so I just deleted the scheduler.

00:50:35.579 --> 00:50:36.700
<v Speaker 1>Now I did back it up, so it

00:50:36.700 --> 00:50:37.980
<v Speaker 1>was there. If you guys found it, you

00:50:37.980 --> 00:50:40.220
<v Speaker 1>could have just restored it. But, anyways

00:50:41.260 --> 00:50:43.900
<v Speaker 0>Alright. Awesome. Alright. So no pod would get

00:50:43.900 --> 00:50:45.660
<v Speaker 1>scheduled right now because

00:50:46.775 --> 00:50:48.295
<v Speaker 1>there's no scheduler.

00:50:49.415 --> 00:50:51.255
<v Speaker 0>Alright. That was the last thing. And a

00:50:51.255 --> 00:50:52.135
<v Speaker 0>nice

00:50:52.135 --> 00:50:53.095
<v Speaker 0>assortment

00:50:53.095 --> 00:50:55.175
<v Speaker 0>of problems there for us to tackle.

00:50:57.575 --> 00:50:57.895
<v Speaker 0>Fun,

00:50:58.440 --> 00:51:01.080
<v Speaker 0>kinda. It was so fun. You guys were

00:51:01.160 --> 00:51:02.280
<v Speaker 1>you guys were fantastic. Alright.

00:51:05.640 --> 00:51:08.359
<v Speaker 0>Thank you very much for that. Let's see

00:51:08.359 --> 00:51:09.080
<v Speaker 0>if

00:51:09.400 --> 00:51:11.720
<v Speaker 0>Abdele has been nicer to us.

00:51:12.885 --> 00:51:14.565
<v Speaker 2>I'm not very sure. Alright.

00:51:20.165 --> 00:51:23.205
<v Speaker 0>I'm gonna open a session on the control

00:51:23.205 --> 00:51:25.765
<v Speaker 0>player node. Please join me and echo something

00:51:25.765 --> 00:51:29.845
<v Speaker 0>when you are ready. I will export a

00:51:28.700 --> 00:51:30.140
<v Speaker 0>kube config

00:51:33.500 --> 00:51:34.300
<v Speaker 0>alias

00:51:34.300 --> 00:51:35.580
<v Speaker 0>kube control.

00:51:37.660 --> 00:51:39.020
<v Speaker 0>And I will give you the honors of

00:51:39.020 --> 00:51:41.500
<v Speaker 0>running whatever command you wish to check that

00:51:41.500 --> 00:51:43.100
<v Speaker 0>we have an API server.

00:51:48.545 --> 00:51:50.625
<v Speaker 0>Yeah. I agree with the comment there from

00:51:50.625 --> 00:51:53.345
<v Speaker 0>Navin in the chat. Abdel, you were fantastic

00:51:53.345 --> 00:51:55.425
<v Speaker 0>debugging for that. Very well done indeed.

00:51:56.220 --> 00:51:58.700
<v Speaker 2>Thank you. Yeah. I I a % you

00:51:58.700 --> 00:51:59.900
<v Speaker 1>guys rocked it.

00:52:03.020 --> 00:52:05.580
<v Speaker 0>Although I am adding no eBPF to the

00:52:05.580 --> 00:52:09.180
<v Speaker 0>rules in future. So that's no UTF characters

00:52:09.260 --> 00:52:10.460
<v Speaker 0>and no eBPF.

00:52:13.055 --> 00:52:15.375
<v Speaker 1>I do have a tendency of people making

00:52:15.375 --> 00:52:17.615
<v Speaker 1>new rules when I join challenges. So this

00:52:17.615 --> 00:52:18.974
<v Speaker 1>is alright.

00:52:19.535 --> 00:52:21.214
<v Speaker 1>Not entirely.

00:52:22.174 --> 00:52:24.494
<v Speaker 1>DevOps direction did a challenge, then he made

00:52:24.494 --> 00:52:26.174
<v Speaker 1>a new rule after I I did that.

00:52:26.174 --> 00:52:28.370
<v Speaker 1>So I apologize, guys. I do like to

00:52:28.370 --> 00:52:29.010
<v Speaker 1>have fun,

00:52:29.330 --> 00:52:32.450
<v Speaker 1>and, hopefully, that was fine. I didn't mean

00:52:32.450 --> 00:52:33.810
<v Speaker 1>for it to be horrible.

00:52:34.130 --> 00:52:34.690
<v Speaker 1>Alright.

00:52:35.330 --> 00:52:37.330
<v Speaker 1>Let's see. We have a control plane. This

00:52:37.330 --> 00:52:39.490
<v Speaker 1>is looking good so far.

00:52:39.970 --> 00:52:41.490
<v Speaker 0>Yeah. We have one working worker.

00:52:42.345 --> 00:52:45.065
<v Speaker 0>One was scheduling disabled, and something broken.

00:52:45.465 --> 00:52:47.785
<v Speaker 2>Oh, so the theme of my challenge that

00:52:47.785 --> 00:52:50.025
<v Speaker 2>even if things seems to be working, they

00:52:50.025 --> 00:52:51.145
<v Speaker 2>sometimes don't.

00:52:51.385 --> 00:52:52.984
<v Speaker 0>Those are the worst. So let's

00:52:54.425 --> 00:52:55.224
<v Speaker 1>yeah. Yeah.

00:52:56.859 --> 00:52:59.580
<v Speaker 1>Let's actually just describe this work. Actually, let's

00:52:59.580 --> 00:53:00.940
<v Speaker 1>look at the pods.

00:53:02.940 --> 00:53:03.980
<v Speaker 1>Let's see.

00:53:05.260 --> 00:53:06.859
<v Speaker 1>Yeah. So we have some InvictD.

00:53:11.895 --> 00:53:14.135
<v Speaker 1>What ones are those running on? So I'm

00:53:15.335 --> 00:53:16.215
<v Speaker 1>okay.

00:53:16.375 --> 00:53:17.255
<v Speaker 1>Let's see.

00:53:19.414 --> 00:53:21.095
<v Speaker 2>So there are a few things. There are

00:53:21.095 --> 00:53:23.750
<v Speaker 2>some nodes that are broken. Oh, actually, all

00:53:23.750 --> 00:53:24.790
<v Speaker 2>of them are broken. They have to be

00:53:24.790 --> 00:53:25.350
<v Speaker 2>fixed.

00:53:25.750 --> 00:53:27.670
<v Speaker 2>If I could rate them from the easiest

00:53:27.670 --> 00:53:29.750
<v Speaker 2>to the more difficult, it would be four

00:53:29.750 --> 00:53:31.670
<v Speaker 2>w g l m

00:53:31.990 --> 00:53:35.270
<v Speaker 2>followed by well, maybe g h p seven

00:53:35.270 --> 00:53:36.950
<v Speaker 2>k is first one, four w g l

00:53:36.950 --> 00:53:38.395
<v Speaker 2>m second one, and then the last one

00:53:38.395 --> 00:53:39.675
<v Speaker 2>would be the more difficult.

00:53:40.555 --> 00:53:41.195
<v Speaker 2>And

00:53:43.035 --> 00:53:45.035
<v Speaker 2>but, like, I think you will fix the

00:53:45.035 --> 00:53:46.795
<v Speaker 2>nodes very quickly. It's what I what I

00:53:46.795 --> 00:53:48.555
<v Speaker 2>would like you to do is actually try

00:53:48.555 --> 00:53:50.075
<v Speaker 2>to get the workloads up and running.

00:53:51.819 --> 00:53:54.380
<v Speaker 1>Okay. Okay. So you're more interested in that.

00:53:54.380 --> 00:53:55.020
<v Speaker 1>Let's

00:53:55.420 --> 00:53:58.460
<v Speaker 0>Okay. Let's fix four w g l then,

00:53:58.619 --> 00:54:00.780
<v Speaker 0>and then we'll take it from there.

00:54:02.619 --> 00:54:04.700
<v Speaker 0>I've created a session. Feel free to please

00:54:04.700 --> 00:54:07.020
<v Speaker 0>join, and then let's start the let's start

00:54:07.020 --> 00:54:07.660
<v Speaker 0>some debugging.

00:54:08.595 --> 00:54:10.035
<v Speaker 1>Oh, okay. Sorry. I was still on the

00:54:10.035 --> 00:54:12.195
<v Speaker 1>control plane. Let me pull up the new

00:54:12.195 --> 00:54:12.915
<v Speaker 1>session.

00:54:16.115 --> 00:54:17.075
<v Speaker 1>Alright.

00:54:18.035 --> 00:54:18.595
<v Speaker 1>I'm there.

00:54:20.109 --> 00:54:22.670
<v Speaker 1>Alright. So if we're looking here,

00:54:24.270 --> 00:54:25.550
<v Speaker 1>is up.

00:54:25.710 --> 00:54:28.589
<v Speaker 1>Memory pressure falls. So we're seeing disk pressure

00:54:28.589 --> 00:54:30.030
<v Speaker 1>on this node.

00:54:33.565 --> 00:54:35.565
<v Speaker 0>Okay. So you did that describe on a

00:54:35.565 --> 00:54:36.285
<v Speaker 0>node.

00:54:37.245 --> 00:54:39.645
<v Speaker 1>Yep. And we're seeing some disk pressure. So

00:54:39.645 --> 00:54:41.485
<v Speaker 1>something's causing disk pressure.

00:54:41.725 --> 00:54:44.285
<v Speaker 1>The terminal went all funky on me.

00:54:45.165 --> 00:54:48.045
<v Speaker 1>Yeah. So the failed disk something is causing

00:54:48.045 --> 00:54:49.005
<v Speaker 1>failed disk.

00:54:51.670 --> 00:54:54.390
<v Speaker 1>So let's try oh, okay. So the limits

00:54:54.390 --> 00:54:57.670
<v Speaker 1>are zero. It maybe it's not necessarily failed

00:54:57.670 --> 00:55:00.470
<v Speaker 1>disk, and they just configured the cubelet

00:55:00.550 --> 00:55:01.270
<v Speaker 1>funkily

00:55:02.435 --> 00:55:04.435
<v Speaker 1>in a weird way. It's not really a

00:55:04.435 --> 00:55:05.075
<v Speaker 1>word.

00:55:07.155 --> 00:55:10.275
<v Speaker 0>Well, looking at the disks on our worker,

00:55:10.755 --> 00:55:13.635
<v Speaker 0>our root partition is at 99%

00:55:13.715 --> 00:55:14.595
<v Speaker 0>saturation.

00:55:14.595 --> 00:55:17.075
<v Speaker 0>Although, there's still 2.5 gig left,

00:55:17.315 --> 00:55:18.890
<v Speaker 0>but even just

00:55:20.250 --> 00:55:22.010
<v Speaker 0>looking at this

00:55:30.090 --> 00:55:31.770
<v Speaker 2>So how would you figure out Okay.

00:55:38.695 --> 00:55:41.095
<v Speaker 0>How do you do the iNode thing?

00:55:41.815 --> 00:55:43.655
<v Speaker 2>So you can do if you want to

00:55:43.655 --> 00:55:45.335
<v Speaker 2>see which folders are full, you can do

00:55:45.335 --> 00:55:47.095
<v Speaker 2>a d u dash h

00:55:47.255 --> 00:55:49.655
<v Speaker 2>dash dash max depth one

00:55:51.890 --> 00:55:53.890
<v Speaker 2>max dash depth one

00:55:54.049 --> 00:55:55.890
<v Speaker 2>or like that. Yeah. And it should be

00:55:55.890 --> 00:55:58.130
<v Speaker 2>able to tell you where do you have

00:55:58.690 --> 00:55:59.490
<v Speaker 2>a lot of stuff.

00:56:05.085 --> 00:56:06.845
<v Speaker 0>Alright. And our directory.

00:56:07.485 --> 00:56:10.685
<v Speaker 0>We got some chunky looking files in here.

00:56:11.725 --> 00:56:12.445
<v Speaker 1>Yeah.

00:56:13.965 --> 00:56:15.885
<v Speaker 1>Those hundred gig files.

00:56:16.205 --> 00:56:17.725
<v Speaker 0>You wanna just well, we just delete?

00:56:18.740 --> 00:56:20.579
<v Speaker 1>I think that I I don't think that

00:56:20.579 --> 00:56:22.339
<v Speaker 1>those are useful for anything. Not that I

00:56:22.339 --> 00:56:23.700
<v Speaker 1>know of. Yeah.

00:56:25.220 --> 00:56:27.940
<v Speaker 1>If we delete those, that should hopefully

00:56:29.619 --> 00:56:32.099
<v Speaker 1>cure up that. I'm looking over the describe

00:56:32.099 --> 00:56:33.619
<v Speaker 1>here to see if I see if anything

00:56:33.619 --> 00:56:34.875
<v Speaker 1>else that was

00:56:38.875 --> 00:56:40.395
<v Speaker 1>yeah. I think that should clear it up,

00:56:40.395 --> 00:56:41.915
<v Speaker 1>and then I'll just run a describe again

00:56:41.915 --> 00:56:42.795
<v Speaker 1>and see if that

00:56:45.675 --> 00:56:47.035
<v Speaker 0>Yeah. That's looking

00:56:47.630 --> 00:56:50.670
<v Speaker 0>much better. Hopefully, that removes the desk pressure

00:56:50.670 --> 00:56:51.790
<v Speaker 0>warning then.

00:56:55.710 --> 00:56:57.710
<v Speaker 1>Yeah. It looks like that made it You

00:56:59.150 --> 00:57:00.750
<v Speaker 2>you guys pretty much got it. You fixed

00:57:00.750 --> 00:57:02.935
<v Speaker 2>it. So the goal actually of this exercise

00:57:02.935 --> 00:57:04.695
<v Speaker 2>was to because I get a lot of

00:57:04.695 --> 00:57:06.455
<v Speaker 2>times, we get people asking us, can we

00:57:06.455 --> 00:57:09.015
<v Speaker 2>just install random stuff on the clusters? Like,

00:57:09.015 --> 00:57:10.775
<v Speaker 2>can we actually use the nodes of Kubernetes

00:57:10.775 --> 00:57:12.215
<v Speaker 2>to do other shit? Right?

00:57:12.535 --> 00:57:14.855
<v Speaker 2>And, obviously, the problem there is that if

00:57:14.855 --> 00:57:16.695
<v Speaker 2>you install things on a Kubernetes node that

00:57:16.695 --> 00:57:18.910
<v Speaker 2>is out of the control of Kubernetes itself,

00:57:19.070 --> 00:57:20.990
<v Speaker 2>it would know about it. Right? So the

00:57:20.990 --> 00:57:22.990
<v Speaker 2>kubelet has a configuration to clear up the

00:57:22.990 --> 00:57:23.630
<v Speaker 2>logs,

00:57:23.790 --> 00:57:26.030
<v Speaker 2>to rotate the images, etcetera, etcetera on a

00:57:26.030 --> 00:57:26.750
<v Speaker 2>periodic

00:57:27.550 --> 00:57:29.150
<v Speaker 2>schedule, but it does this only in few

00:57:29.150 --> 00:57:31.135
<v Speaker 2>parts of the file system. So if you

00:57:31.135 --> 00:57:33.375
<v Speaker 2>would deploy something in slash root or in

00:57:33.375 --> 00:57:36.255
<v Speaker 2>slash OPT, it wouldn't know about it. Right?

00:57:37.215 --> 00:57:39.295
<v Speaker 1>It's like if you're running a VM on

00:57:39.295 --> 00:57:40.175
<v Speaker 1>a node,

00:57:40.415 --> 00:57:42.015
<v Speaker 1>which I thought Pretty much. Yeah.

00:57:42.335 --> 00:57:42.735
<v Speaker 2>Yeah.

00:57:44.420 --> 00:57:46.180
<v Speaker 1>A VM outside of Kubernetes.

00:57:46.980 --> 00:57:47.620
<v Speaker 1>Cool.

00:57:48.260 --> 00:57:50.420
<v Speaker 2>Is there anything else that Kubernetes is controlled?

00:57:50.420 --> 00:57:52.500
<v Speaker 2>Anything that's having to be running through Kubernetes

00:57:52.500 --> 00:57:53.220
<v Speaker 2>itself.

00:57:55.060 --> 00:57:56.980
<v Speaker 1>Alright. So we have this next one that

00:57:56.980 --> 00:57:58.660
<v Speaker 1>has scheduling disabled.

00:58:01.345 --> 00:58:01.984
<v Speaker 1>Check

00:58:02.145 --> 00:58:04.385
<v Speaker 1>out why the Yeah. Go for it.

00:58:05.984 --> 00:58:08.145
<v Speaker 1>One second. My sessions got all little bit

00:58:08.145 --> 00:58:10.704
<v Speaker 1>weird. It just resized the window a little

00:58:10.704 --> 00:58:12.305
<v Speaker 0>bit and it it tweaks it.

00:58:13.340 --> 00:58:15.340
<v Speaker 0>Okay. Just drag the corner away and we

00:58:15.340 --> 00:58:16.380
<v Speaker 0>put it back in.

00:58:21.820 --> 00:58:24.140
<v Speaker 1>That that does fix it. Perfect. Thank you.

00:58:24.220 --> 00:58:24.860
<v Speaker 1>Alright.

00:58:25.100 --> 00:58:26.700
<v Speaker 1>So we want to

00:58:27.100 --> 00:58:29.485
<v Speaker 1>describe this. I think describe is a generally

00:58:29.485 --> 00:58:30.205
<v Speaker 1>good

00:58:31.005 --> 00:58:31.965
<v Speaker 1>way of

00:58:43.609 --> 00:58:46.010
<v Speaker 1>Sorry. Yeah. Sid is asking where should I

00:58:46.010 --> 00:58:47.690
<v Speaker 0>install my crypto miners if not on the

00:58:47.690 --> 00:58:48.650
<v Speaker 0>control plane?

00:58:52.250 --> 00:58:53.450
<v Speaker 2>That's a good one.

00:58:54.650 --> 00:58:56.329
<v Speaker 0>No crypto miners here. Thank you.

00:58:57.744 --> 00:58:59.985
<v Speaker 0>Okay. So you've described

00:59:01.345 --> 00:59:03.425
<v Speaker 0>do we see a reason for being unscheduled

00:59:03.425 --> 00:59:03.985
<v Speaker 0>about?

00:59:05.744 --> 00:59:08.545
<v Speaker 1>It could just be tainted that way. One

00:59:08.545 --> 00:59:12.280
<v Speaker 1>second. What's let's see. Yeah. There's definitely got

00:59:12.280 --> 00:59:13.640
<v Speaker 0>a tint. I mean, we can try removing

00:59:13.640 --> 00:59:15.079
<v Speaker 0>it and see if it gets added back

00:59:15.079 --> 00:59:16.200
<v Speaker 0>or we can

00:59:17.880 --> 00:59:21.000
<v Speaker 1>Oh, one second. We have AppArmor enabled.

00:59:21.720 --> 00:59:23.319
<v Speaker 0>Who enabled AppArmor? Figure properly.

00:59:24.215 --> 00:59:26.775
<v Speaker 1>What? Nobody's allowed to enable AppArmor.

00:59:26.775 --> 00:59:27.575
<v Speaker 0>Come on.

00:59:28.855 --> 00:59:30.695
<v Speaker 1>AppArmor is enabled. I

00:59:31.175 --> 00:59:33.335
<v Speaker 2>did not enable AppArmor. It is there.

00:59:36.055 --> 00:59:36.535
<v Speaker 1>Alright.

00:59:41.380 --> 00:59:42.660
<v Speaker 1>Let's see what we'll choose.

00:59:43.060 --> 00:59:45.380
<v Speaker 1>Let's check out its labels.

00:59:47.540 --> 00:59:48.500
<v Speaker 1>This looks fine.

00:59:50.955 --> 00:59:53.915
<v Speaker 1>I guess we could also check the cubelet

00:59:53.915 --> 00:59:55.115
<v Speaker 1>logs here.

00:59:58.075 --> 00:59:59.755
<v Speaker 0>Which machine are you on? Oh, the actual

00:59:59.755 --> 01:00:00.635
<v Speaker 0>node. Right?

01:00:01.115 --> 01:00:02.955
<v Speaker 1>I'm on no. I'm on the control plane

01:00:02.955 --> 01:00:05.195
<v Speaker 1>right now. I might jump to the actual

01:00:05.195 --> 01:00:07.359
<v Speaker 1>node and check or if you wanna

01:00:11.280 --> 01:00:13.760
<v Speaker 1>I'm just looking through the describe right now.

01:00:15.600 --> 01:00:18.000
<v Speaker 1>CPU looks good. Memory

01:00:18.240 --> 01:00:19.440
<v Speaker 1>pod limit.

01:00:25.635 --> 01:00:26.755
<v Speaker 1>Version.

01:00:26.755 --> 01:00:29.075
<v Speaker 1>The version is right. Same as the rest

01:00:29.075 --> 01:00:29.795
<v Speaker 1>of the nodes.

01:00:34.275 --> 01:00:35.875
<v Speaker 0>No, Kevin. Never gonna happen.

01:00:37.820 --> 01:00:40.060
<v Speaker 0>We'll never be using an episode with Red

01:00:40.060 --> 01:00:41.820
<v Speaker 0>Hat Linux and SE Linux.

01:00:42.060 --> 01:00:42.460
<v Speaker 0>Okay.

01:00:52.685 --> 01:00:55.405
<v Speaker 1>Alright. Did did you get the

01:00:55.805 --> 01:00:58.125
<v Speaker 1>logs of the cubelet?

01:01:00.205 --> 01:01:00.925
<v Speaker 2>Nope.

01:01:01.725 --> 01:01:03.405
<v Speaker 1>Okay. Let me I can jump over there

01:01:03.405 --> 01:01:05.085
<v Speaker 1>and get them. That's alright. What machine was

01:01:05.085 --> 01:01:05.245
<v Speaker 0>it?

01:01:06.990 --> 01:01:08.030
<v Speaker 1>I don't know.

01:01:09.230 --> 01:01:11.150
<v Speaker 0>G g h p. Yep.

01:01:12.190 --> 01:01:13.950
<v Speaker 0>Alright. I have opened a session on g

01:01:13.950 --> 01:01:15.550
<v Speaker 0>h p. Come say hello.

01:01:16.990 --> 01:01:18.430
<v Speaker 0>We'll do a journal fluke.

01:01:26.164 --> 01:01:27.845
<v Speaker 1>I mean, I guess maybe we should just

01:01:27.845 --> 01:01:28.965
<v Speaker 1>untaint it

01:01:29.285 --> 01:01:32.244
<v Speaker 1>or remove the unschedulable and then go from

01:01:32.244 --> 01:01:34.325
<v Speaker 1>there. Yeah. I'd say we remove it and

01:01:34.325 --> 01:01:35.845
<v Speaker 0>see if it comes back. I think that's

01:01:35.845 --> 01:01:36.645
<v Speaker 0>a pretty good shot. Yeah.

01:01:38.640 --> 01:01:40.720
<v Speaker 0>You can just click here at that node.

01:01:42.880 --> 01:01:45.040
<v Speaker 0>Really should copy the name. I know.

01:01:47.280 --> 01:01:48.080
<v Speaker 0>Tense.

01:01:57.855 --> 01:01:59.695
<v Speaker 1>Remove the unschedulable as well.

01:02:11.539 --> 01:02:11.940
<v Speaker 0>Fixed.

01:02:14.474 --> 01:02:16.555
<v Speaker 2>Yeah. That that I was just so that

01:02:16.555 --> 01:02:18.075
<v Speaker 2>was the last node they wanted to to

01:02:18.075 --> 01:02:19.275
<v Speaker 2>screw up. I didn't know what to do.

01:02:19.275 --> 01:02:20.474
<v Speaker 2>It was just cordon then.

01:02:23.674 --> 01:02:24.954
<v Speaker 2>So you could I mean, you did it

01:02:25.035 --> 01:02:26.555
<v Speaker 2>you you did what should happen. You could

01:02:26.555 --> 01:02:27.994
<v Speaker 2>just do a kubectl

01:02:27.994 --> 01:02:29.640
<v Speaker 2>and and cordon, and it would just go

01:02:29.640 --> 01:02:30.680
<v Speaker 2>back. Cordon.

01:02:30.920 --> 01:02:32.119
<v Speaker 1>Okay. Yeah.

01:02:32.280 --> 01:02:33.799
<v Speaker 2>I didn't think it was a cordon because

01:02:33.799 --> 01:02:35.799
<v Speaker 1>they never seen anything in the events to

01:02:35.799 --> 01:02:37.799
<v Speaker 0>suggest that it was cordoned. I thought an

01:02:37.799 --> 01:02:39.799
<v Speaker 0>event would show up there, but I guess

01:02:39.799 --> 01:02:40.040
<v Speaker 0>not.

01:02:42.875 --> 01:02:43.595
<v Speaker 1>Alright.

01:02:44.234 --> 01:02:47.035
<v Speaker 1>So let's tackle this last one.

01:02:47.435 --> 01:02:49.195
<v Speaker 1>I'm going to do a let's do a

01:02:49.195 --> 01:02:50.635
<v Speaker 1>cube describe

01:02:50.635 --> 01:02:52.955
<v Speaker 1>on the control plane there.

01:02:54.130 --> 01:02:55.250
<v Speaker 0>Yeah. Go for it.

01:02:57.170 --> 01:02:59.650
<v Speaker 1>Which ones? One second. I gotta go reconnect

01:02:59.650 --> 01:03:02.770
<v Speaker 1>to the control plane, I think. Remember to

01:03:02.770 --> 01:03:05.090
<v Speaker 0>join so we can see it on the

01:03:05.330 --> 01:03:05.730
<v Speaker 1>Yeah. Screen.

01:03:10.805 --> 01:03:13.045
<v Speaker 1>I'm not nearly as fast as a bill

01:03:13.045 --> 01:03:14.325
<v Speaker 1>at at rejoining

01:03:14.325 --> 01:03:15.205
<v Speaker 1>these. Alright.

01:03:15.365 --> 01:03:17.605
<v Speaker 1>So we have our notes here. Let's go

01:03:17.605 --> 01:03:18.725
<v Speaker 1>ahead and

01:03:19.204 --> 01:03:20.165
<v Speaker 1>describe this one.

01:03:26.420 --> 01:03:27.220
<v Speaker 1>Alright.

01:03:27.220 --> 01:03:27.940
<v Speaker 1>So

01:03:28.260 --> 01:03:30.900
<v Speaker 1>let's see. It's not ready.

01:03:31.940 --> 01:03:33.380
<v Speaker 1>We have unknown.

01:03:33.619 --> 01:03:36.340
<v Speaker 1>Networking is not available on the node. This

01:03:36.340 --> 01:03:37.380
<v Speaker 1>is a big

01:03:38.355 --> 01:03:40.915
<v Speaker 1>red flag. It does say Cilium is up,

01:03:40.915 --> 01:03:41.315
<v Speaker 1>though.

01:03:42.515 --> 01:03:44.355
<v Speaker 2>I so that what pods are on this

01:03:44.355 --> 01:03:44.995
<v Speaker 0>node.

01:03:45.875 --> 01:03:48.115
<v Speaker 2>That output is extremely confusing, by the way,

01:03:48.115 --> 01:03:50.595
<v Speaker 2>because when it says network unavailable falls, it

01:03:50.595 --> 01:03:51.555
<v Speaker 2>actually means it's true.

01:03:54.440 --> 01:03:55.800
<v Speaker 1>Oh, that's right.

01:03:56.520 --> 01:03:59.240
<v Speaker 1>Because it's a double negative. Unavailable. Yeah. I

01:03:59.240 --> 01:04:02.040
<v Speaker 2>get it. Yeah. Okay. Whoever does the double

01:04:02.040 --> 01:04:03.960
<v Speaker 1>negatives, that's that's you're

01:04:03.960 --> 01:04:06.295
<v Speaker 1>right. Okay. But we're unknown on all of

01:04:06.295 --> 01:04:08.295
<v Speaker 1>our memory. So this could be a

01:04:08.455 --> 01:04:10.935
<v Speaker 1>bad configuration of the cubelet like I had

01:04:10.935 --> 01:04:11.415
<v Speaker 1>done,

01:04:12.295 --> 01:04:14.375
<v Speaker 1>or it could be

01:04:14.615 --> 01:04:16.215
<v Speaker 1>the health endpoint

01:04:16.535 --> 01:04:18.455
<v Speaker 1>could also be busted.

01:04:20.420 --> 01:04:22.580
<v Speaker 1>Let me look through here. It looks like

01:04:22.580 --> 01:04:23.860
<v Speaker 1>it's reporting

01:04:23.860 --> 01:04:25.300
<v Speaker 1>how much CPU

01:04:25.300 --> 01:04:26.660
<v Speaker 1>and memory

01:04:26.660 --> 01:04:27.780
<v Speaker 1>it has.

01:04:30.180 --> 01:04:33.780
<v Speaker 1>Non terminated pods, it has Cilium up, default

01:04:33.780 --> 01:04:34.420
<v Speaker 1>cluster,

01:04:34.845 --> 01:04:36.205
<v Speaker 1>cube system.

01:04:39.885 --> 01:04:42.285
<v Speaker 0>I've opened a session on that node if

01:04:42.285 --> 01:04:44.285
<v Speaker 0>you wanna Okay. Poke around.

01:04:44.525 --> 01:04:45.165
<v Speaker 1>Yeah.

01:04:45.405 --> 01:04:48.365
<v Speaker 1>Which node z x r six q.

01:04:57.050 --> 01:04:59.050
<v Speaker 1>So I guess let's go ahead and check

01:04:59.050 --> 01:05:02.970
<v Speaker 1>the cubelet logs so we can do

01:05:18.510 --> 01:05:19.790
<v Speaker 0>Nope. There's another.

01:05:21.870 --> 01:05:23.230
<v Speaker 1>Alright. So

01:05:23.630 --> 01:05:26.110
<v Speaker 1>Kubelet nodes not sync.

01:05:27.470 --> 01:05:28.590
<v Speaker 1>Unable to write.

01:05:31.065 --> 01:05:33.385
<v Speaker 1>So that almost looks like you when you

01:05:33.385 --> 01:05:34.984
<v Speaker 1>see these unable to write, it could also

01:05:34.984 --> 01:05:37.145
<v Speaker 1>be like an etcd error when

01:05:37.705 --> 01:05:39.785
<v Speaker 1>you try to write a resource. I don't

01:05:39.785 --> 01:05:42.265
<v Speaker 1>think this is because etcd usually is a

01:05:42.265 --> 01:05:43.705
<v Speaker 1>cluster wide event.

01:05:43.785 --> 01:05:45.785
<v Speaker 1>But sometimes when you get unable to write

01:05:45.785 --> 01:05:46.025
<v Speaker 1>things,

01:05:46.640 --> 01:05:48.800
<v Speaker 1>it's etcd. But I don't think it is

01:05:48.800 --> 01:05:51.280
<v Speaker 1>in this case because it's this node specifically.

01:05:51.680 --> 01:05:53.440
<v Speaker 0>Yeah. I think you might be I think

01:05:53.440 --> 01:05:54.880
<v Speaker 0>you might be right. Yeah.

01:05:56.320 --> 01:05:58.400
<v Speaker 0>We also got another tell. Error message just

01:05:58.400 --> 01:06:00.734
<v Speaker 0>above above it, which says eviction manager failed

01:06:00.734 --> 01:06:02.494
<v Speaker 0>to get memory. It got failed to get

01:06:02.494 --> 01:06:03.615
<v Speaker 0>summary stats,

01:06:03.695 --> 01:06:05.215
<v Speaker 0>failed to get node info,

01:06:05.535 --> 01:06:07.375
<v Speaker 0>nodes have not been ready. So, yeah, I

01:06:07.375 --> 01:06:09.775
<v Speaker 0>don't think our kubelet is actually speaking to

01:06:09.775 --> 01:06:11.375
<v Speaker 0>our API server potentially.

01:06:12.730 --> 01:06:14.410
<v Speaker 0>In fact, at the very end Yeah. That

01:06:14.410 --> 01:06:16.250
<v Speaker 0>big wall of text, we have a timer

01:06:16.250 --> 01:06:17.050
<v Speaker 0>as well.

01:06:17.610 --> 01:06:20.330
<v Speaker 0>So So let's just check the firewall.

01:06:21.690 --> 01:06:25.285
<v Speaker 1>It's what is it? The it's Ubuntu has

01:06:25.285 --> 01:06:27.685
<v Speaker 1>the super easy firewall that I can never

01:06:27.685 --> 01:06:29.765
<v Speaker 1>remember. It's not firewall d. It's u f

01:06:29.765 --> 01:06:32.245
<v Speaker 0>w. W f? Yeah. U f w.

01:06:33.845 --> 01:06:34.885
<v Speaker 1>I don't know.

01:06:37.329 --> 01:06:38.610
<v Speaker 0>Yeah. Don't think there's Oh,

01:06:41.250 --> 01:06:42.210
<v Speaker 0>are root. So

01:06:46.849 --> 01:06:48.609
<v Speaker 0>And you can try firewall d as a

01:06:48.690 --> 01:06:50.690
<v Speaker 0>usually work. That's usually there as an alias.

01:06:53.744 --> 01:06:55.745
<v Speaker 0>Yeah. So I don't think there's a firewall.

01:06:56.385 --> 01:06:57.105
<v Speaker 1>Okay.

01:06:57.825 --> 01:06:59.745
<v Speaker 1>So if there's not a firewall,

01:06:59.905 --> 01:07:02.704
<v Speaker 1>they could have messed with IP tables. That's

01:07:02.704 --> 01:07:03.744
<v Speaker 1>I'm not very good with.

01:07:07.080 --> 01:07:08.040
<v Speaker 1>Let's see.

01:07:10.520 --> 01:07:12.840
<v Speaker 0>Dash capital l will list all the rules,

01:07:12.840 --> 01:07:14.600
<v Speaker 0>then we can look for drops.

01:07:15.000 --> 01:07:17.000
<v Speaker 0>That's about as much IP knowledge as I've

01:07:17.000 --> 01:07:17.160
<v Speaker 0>got.

01:07:18.855 --> 01:07:20.775
<v Speaker 0>But Abdel may have given himself away earlier

01:07:20.775 --> 01:07:22.935
<v Speaker 0>by telling us of his networking background,

01:07:23.015 --> 01:07:24.855
<v Speaker 0>so I think we might be able to

01:07:25.015 --> 01:07:26.535
<v Speaker 2>It's

01:07:26.535 --> 01:07:28.535
<v Speaker 2>more simple than that. You're

01:07:28.535 --> 01:07:30.215
<v Speaker 2>on the right path, but it's more simple

01:07:30.215 --> 01:07:33.030
<v Speaker 2>than that. Alright. So we have rejects here.

01:07:33.030 --> 01:07:35.430
<v Speaker 1>Yeah. We're rejecting TTP anywhere.

01:07:35.430 --> 01:07:39.030
<v Speaker 1>So, I mean, if we ping google.com,

01:07:39.190 --> 01:07:41.270
<v Speaker 1>this should fail. Right? No. It works.

01:07:43.615 --> 01:07:45.375
<v Speaker 2>I mean, those IP addresses you are looking

01:07:45.375 --> 01:07:47.295
<v Speaker 2>at are 17226.

01:07:47.295 --> 01:07:49.455
<v Speaker 2>Those are internal IP addresses. So RFC ninety

01:07:49.455 --> 01:07:50.175
<v Speaker 2>eighteen.

01:07:50.655 --> 01:07:53.135
<v Speaker 1>Oh, okay. Right. They're only rejecting to these

01:07:53.135 --> 01:07:53.935
<v Speaker 1>internal

01:07:54.575 --> 01:07:55.535
<v Speaker 1>internal ones.

01:07:56.510 --> 01:07:58.670
<v Speaker 1>Alright. So we just need to remove these,

01:07:58.670 --> 01:08:00.510
<v Speaker 1>which if I knew the command for that,

01:08:00.510 --> 01:08:01.870
<v Speaker 1>I would do that right now.

01:08:03.950 --> 01:08:05.790
<v Speaker 0>We can try a flush and see if

01:08:05.790 --> 01:08:07.150
<v Speaker 0>they go away. I think if you do

01:08:07.150 --> 01:08:07.390
<v Speaker 2>that

01:08:08.430 --> 01:08:09.710
<v Speaker 0>And then restarts

01:08:10.190 --> 01:08:10.910
<v Speaker 0>kube proxy.

01:08:12.135 --> 01:08:13.335
<v Speaker 0>If

01:08:13.975 --> 01:08:15.415
<v Speaker 2>you do it, the queue proxy will just

01:08:15.415 --> 01:08:17.734
<v Speaker 2>recreate those, by the way. It's a controller.

01:08:17.734 --> 01:08:19.974
<v Speaker 2>Right? So it does look reconciliation loop.

01:08:20.854 --> 01:08:23.574
<v Speaker 2>Well, or maybe after you. Okay.

01:08:25.734 --> 01:08:27.175
<v Speaker 0>So let's

01:08:35.260 --> 01:08:38.220
<v Speaker 1>so did he put something? I I just

01:08:38.220 --> 01:08:40.140
<v Speaker 1>did an all let me look through the

01:08:40.140 --> 01:08:42.140
<v Speaker 1>namespaces here, make sure he didn't hide anything

01:08:42.140 --> 01:08:43.100
<v Speaker 1>in the namespace.

01:08:47.394 --> 01:08:48.994
<v Speaker 0>Okay. So that's the we have the Cilium

01:08:49.234 --> 01:08:50.274
<v Speaker 0>not connecting.

01:08:51.074 --> 01:08:52.834
<v Speaker 1>Outlook. Middle will be

01:09:00.000 --> 01:09:02.719
<v Speaker 1>So he's using Cillium or

01:09:03.040 --> 01:09:05.519
<v Speaker 1>a controller to do it.

01:09:09.520 --> 01:09:11.599
<v Speaker 0>Don't see any Cillium network policies.

01:09:16.564 --> 01:09:18.644
<v Speaker 1>I also don't see anything

01:09:20.885 --> 01:09:23.284
<v Speaker 1>that's running here that would do that.

01:09:27.660 --> 01:09:28.939
<v Speaker 0>I'm gonna restart

01:09:29.580 --> 01:09:31.979
<v Speaker 0>kubelet and container d and then

01:09:33.020 --> 01:09:35.180
<v Speaker 0>check the logs of the kubelet. Let's see

01:09:35.180 --> 01:09:37.020
<v Speaker 0>what happens. I'm curious to see if we're

01:09:37.020 --> 01:09:38.540
<v Speaker 0>still gonna see that time out.

01:09:41.835 --> 01:09:43.675
<v Speaker 0>Yeah. It looks maybe.

01:09:53.194 --> 01:09:53.675
<v Speaker 1>Alright.

01:10:01.780 --> 01:10:03.540
<v Speaker 1>One second. Let's check.

01:10:12.415 --> 01:10:14.655
<v Speaker 1>One second. Let me join the session over

01:10:14.655 --> 01:10:17.215
<v Speaker 2>here. I am enjoying this very much.

01:10:18.255 --> 01:10:20.094
<v Speaker 1>What did you say? I apologize. You broke

01:10:20.094 --> 01:10:20.655
<v Speaker 1>up a little.

01:10:21.420 --> 01:10:24.059
<v Speaker 2>I said as networking nerd, am enjoying this.

01:10:24.860 --> 01:10:26.780
<v Speaker 1>Oh, that's good. That's good.

01:10:27.500 --> 01:10:30.699
<v Speaker 1>Alright. So we have the idea that our

01:10:30.699 --> 01:10:33.900
<v Speaker 1>IP tables are getting screwed up. And let's

01:10:33.900 --> 01:10:35.420
<v Speaker 1>check our services actually.

01:10:36.525 --> 01:10:40.285
<v Speaker 0>Yeah. We got this drop all anywhere anywhere

01:10:42.045 --> 01:10:42.925
<v Speaker 0>on this.

01:10:44.845 --> 01:10:47.085
<v Speaker 0>I mean, that looks bad to me. So

01:10:47.085 --> 01:10:49.440
<v Speaker 0>something is rating. It's not it's it's not

01:10:49.440 --> 01:10:51.440
<v Speaker 2>of epidables. I'll just help you. It's not

01:10:51.440 --> 01:10:52.239
<v Speaker 2>epidables.

01:10:56.160 --> 01:10:58.640
<v Speaker 2>It's more simple than that. It's more simple

01:10:58.640 --> 01:11:01.119
<v Speaker 0>than that. Yeah. More simple.

01:11:01.360 --> 01:11:02.755
<v Speaker 0>I don't want you to go into IP

01:11:02.755 --> 01:11:06.435
<v Speaker 2>rules, firewall rules, loophole. No. Wait. I

01:11:07.395 --> 01:11:09.075
<v Speaker 0>mean, is it just the IP address is

01:11:09.075 --> 01:11:10.515
<v Speaker 0>wrong? Let's

01:11:10.515 --> 01:11:11.075
<v Speaker 0>let's see.

01:11:18.910 --> 01:11:20.030
<v Speaker 0>Seems fine.

01:11:21.949 --> 01:11:23.630
<v Speaker 1>Wait. We could check the

01:11:24.750 --> 01:11:26.030
<v Speaker 1>check the

01:11:26.670 --> 01:11:28.430
<v Speaker 0>the Someone's left as a backup.

01:11:31.365 --> 01:11:32.165
<v Speaker 1>Oh.

01:11:40.885 --> 01:11:42.485
<v Speaker 1>Very nice. Nice backup.

01:11:44.460 --> 01:11:46.300
<v Speaker 2>I didn't want you to leave you hanging

01:11:46.300 --> 01:11:48.540
<v Speaker 2>there. It just have this configured endpoint

01:11:48.540 --> 01:11:49.980
<v Speaker 2>for the API server.

01:11:50.219 --> 01:11:52.540
<v Speaker 2>So if you edit the and remove the

01:11:52.540 --> 01:11:54.620
<v Speaker 2>one in one sixty eight, it should work.

01:11:56.915 --> 01:11:58.835
<v Speaker 0>Well, you were right. It was simpler than

01:11:58.835 --> 01:12:01.075
<v Speaker 0>that. You want the honors of fixing our

01:12:01.075 --> 01:12:02.114
<v Speaker 0>IP address?

01:12:03.155 --> 01:12:03.954
<v Speaker 1>Sure.

01:12:07.315 --> 01:12:08.755
<v Speaker 2>I want you to get to the next

01:12:08.755 --> 01:12:08.995
<v Speaker 2>one.

01:12:11.110 --> 01:12:11.670
<v Speaker 1>Alright.

01:12:24.435 --> 01:12:26.275
<v Speaker 1>An interesting note here, if you ever type

01:12:26.275 --> 01:12:27.155
<v Speaker 1>reboot,

01:12:27.155 --> 01:12:29.155
<v Speaker 1>so system CTL reboot,

01:12:29.554 --> 01:12:31.635
<v Speaker 1>it will actually just reboot your machine,

01:12:32.995 --> 01:12:34.835
<v Speaker 1>not the service that you type after that

01:12:35.190 --> 01:12:37.590
<v Speaker 1>because it takes it as a bad argument,

01:12:37.590 --> 01:12:39.269
<v Speaker 1>which would then say now.

01:12:39.750 --> 01:12:40.389
<v Speaker 1>Anyways,

01:12:40.949 --> 01:12:43.030
<v Speaker 1>fun story. I've done that too many times.

01:12:44.390 --> 01:12:45.510
<v Speaker 1>Alright. So now you want us to get

01:12:45.510 --> 01:12:46.230
<v Speaker 1>on to the next one.

01:12:47.925 --> 01:12:48.725
<v Speaker 0>Yep.

01:12:48.805 --> 01:12:50.725
<v Speaker 0>Well, he just said I did this before

01:12:50.725 --> 01:12:52.645
<v Speaker 0>and he's right. I actually just removed the

01:12:52.645 --> 01:12:54.245
<v Speaker 0>s from HTTPS

01:12:54.245 --> 01:12:55.445
<v Speaker 0>and nobody

01:12:55.445 --> 01:12:56.405
<v Speaker 0>noticed it.

01:12:57.925 --> 01:12:58.565
<v Speaker 1>Oh,

01:12:58.805 --> 01:12:59.940
<v Speaker 1>do I need to add that back in

01:12:59.940 --> 01:13:01.380
<v Speaker 1>then? No. No. No. No. No. No. No.

01:13:01.380 --> 01:13:03.780
<v Speaker 0>Was a different episode. It's just a flashback.

01:13:04.500 --> 01:13:05.620
<v Speaker 1>Oh, okay.

01:13:06.900 --> 01:13:08.820
<v Speaker 2>Maybe I think want to check if your

01:13:08.820 --> 01:13:09.780
<v Speaker 2>notes are up.

01:13:10.420 --> 01:13:11.860
<v Speaker 1>I was gonna say, I don't think we're

01:13:11.860 --> 01:13:13.700
<v Speaker 1>scheduling stuff though still.

01:13:13.780 --> 01:13:14.420
<v Speaker 1>So

01:13:15.475 --> 01:13:17.795
<v Speaker 0>Alright. Let me check. Confirm that.

01:13:20.675 --> 01:13:23.875
<v Speaker 0>Yeah. So we still have evicted pods here.

01:13:24.675 --> 01:13:26.594
<v Speaker 1>Let's just go ahead and describe one of

01:13:26.594 --> 01:13:27.235
<v Speaker 1>these pods.

01:13:33.230 --> 01:13:35.550
<v Speaker 0>But that's just an old replica set, and

01:13:35.550 --> 01:13:36.669
<v Speaker 0>it's a Vexit.

01:13:36.750 --> 01:13:39.230
<v Speaker 0>I think it's just not been cleaned up.

01:13:39.230 --> 01:13:40.829
<v Speaker 0>Like, it does look like clustered is running

01:13:40.829 --> 01:13:41.949
<v Speaker 0>and Postgres is running.

01:13:43.445 --> 01:13:44.405
<v Speaker 1>Alright. Let me do this.

01:14:02.960 --> 01:14:04.800
<v Speaker 1>Let's see. Yeah. Scheduled.

01:14:06.640 --> 01:14:08.480
<v Speaker 2>So here is the challenge.

01:14:09.440 --> 01:14:10.800
<v Speaker 2>So here is the challenge for you guys.

01:14:10.800 --> 01:14:12.640
<v Speaker 2>So when you deploy an app into Kubernetes,

01:14:12.640 --> 01:14:13.945
<v Speaker 2>if you want to expose it to be

01:14:13.945 --> 01:14:15.305
<v Speaker 2>able to reach it, you have to create

01:14:15.305 --> 01:14:17.385
<v Speaker 2>a service. Right? Service.

01:14:17.705 --> 01:14:19.385
<v Speaker 1>Alright. So you wanna create a service to

01:14:19.385 --> 01:14:21.545
<v Speaker 1>expose memory? Yeah. Yep.

01:14:24.905 --> 01:14:26.905
<v Speaker 0>Well, we could always check that our current

01:14:26.905 --> 01:14:28.105
<v Speaker 0>services have endpoints.

01:14:32.810 --> 01:14:34.969
<v Speaker 1>Okay. So we we should have a postgres

01:14:34.969 --> 01:14:36.810
<v Speaker 0>and a clustered service. Do wanna see if

01:14:36.810 --> 01:14:38.170
<v Speaker 0>they are looking good?

01:14:41.929 --> 01:14:44.330
<v Speaker 1>So we have

01:14:43.405 --> 01:14:44.285
<v Speaker 1>none.

01:14:44.605 --> 01:14:46.925
<v Speaker 1>So let's go ahead and look at

01:14:47.085 --> 01:14:48.525
<v Speaker 1>our Postgres here.

01:15:05.139 --> 01:15:08.900
<v Speaker 0>That's good. Alright. So we have app selectors,

01:15:09.139 --> 01:15:09.699
<v Speaker 1>Postgres.

01:15:11.014 --> 01:15:13.494
<v Speaker 1>Let's see. Here's the IP. We don't have

01:15:13.494 --> 01:15:15.974
<v Speaker 1>a type on here, do we? It's cluster

01:15:15.974 --> 01:15:16.695
<v Speaker 0>IP.

01:15:16.855 --> 01:15:18.935
<v Speaker 0>But I think the important thing here is

01:15:18.935 --> 01:15:21.255
<v Speaker 0>the endpoints has a value. So I'm curious

01:15:21.255 --> 01:15:23.094
<v Speaker 0>to see do you wanna do the same

01:15:23.094 --> 01:15:23.735
<v Speaker 0>on clustered?

01:15:25.340 --> 01:15:25.980
<v Speaker 1>Sure.

01:15:26.220 --> 01:15:27.900
<v Speaker 2>Or yeah. Do it do the same on

01:15:27.900 --> 01:15:29.820
<v Speaker 2>clustered and try to scale it up and

01:15:29.820 --> 01:15:32.140
<v Speaker 2>see if that's actually what's broken. So you

01:15:32.140 --> 01:15:34.780
<v Speaker 2>you kinda got into what could be broken.

01:15:36.220 --> 01:15:37.900
<v Speaker 2>So Right. So that

01:15:38.565 --> 01:15:40.965
<v Speaker 2>IP corresponds to one to the pod which

01:15:40.965 --> 01:15:42.645
<v Speaker 2>already exists of clustered. Right?

01:15:43.605 --> 01:15:44.405
<v Speaker 1>Right.

01:15:44.405 --> 01:15:46.325
<v Speaker 1>And you already are

01:15:46.805 --> 01:15:48.645
<v Speaker 1>putting a port on there. Yeah.

01:15:49.045 --> 01:15:50.805
<v Speaker 2>So scale clustered up,

01:15:51.210 --> 01:15:53.450
<v Speaker 2>Let's say two replicas, for example. Let well,

01:15:53.450 --> 01:15:56.250
<v Speaker 0>let's try, like, let's try upgrading the image.

01:15:56.250 --> 01:15:57.850
<v Speaker 0>It's rather than scaling it.

01:15:59.050 --> 01:16:01.770
<v Speaker 2>That could also work. Of course. Yeah. Because,

01:16:01.770 --> 01:16:02.810
<v Speaker 0>like, you know, one of the things we

01:16:02.810 --> 01:16:04.970
<v Speaker 0>wanna do here is modify our deployment

01:16:05.050 --> 01:16:06.010
<v Speaker 0>to get v two.

01:16:06.895 --> 01:16:07.295
<v Speaker 0>So

01:16:08.975 --> 01:16:11.855
<v Speaker 1>If it's just hitting okay. Sweet. You have

01:16:11.855 --> 01:16:13.375
<v Speaker 1>a different I was gonna say if it's

01:16:13.375 --> 01:16:15.054
<v Speaker 1>just latest, it you can't actually do that.

01:16:32.720 --> 01:16:34.400
<v Speaker 1>But this is gonna still point to the

01:16:34.400 --> 01:16:35.200
<v Speaker 1>same endpoint.

01:16:35.805 --> 01:16:37.965
<v Speaker 0>It should be a new hardcoder.

01:16:40.445 --> 01:16:41.005
<v Speaker 1>But

01:16:41.485 --> 01:16:43.565
<v Speaker 1>there there is a new pod. You go

01:16:43.565 --> 01:16:44.685
<v Speaker 1>ahead and do get

01:16:46.445 --> 01:16:48.844
<v Speaker 0>Alright. I'll I'll do as I feel said.

01:16:48.844 --> 01:16:49.565
<v Speaker 0>Let's scale up.

01:16:50.890 --> 01:16:53.290
<v Speaker 0>Because that that looks okay to me. Right?

01:16:54.330 --> 01:16:55.850
<v Speaker 1>But Can you But this is the problem

01:16:55.850 --> 01:16:57.130
<v Speaker 1>here. One second.

01:16:57.690 --> 01:16:59.449
<v Speaker 2>Can you rerun the What were saying, Abdul?

01:16:59.530 --> 01:16:59.929
<v Speaker 2>White.

01:17:00.410 --> 01:17:00.969
<v Speaker 2>Yeah.

01:17:01.610 --> 01:17:03.610
<v Speaker 2>And see So this is the IP addresses.

01:17:04.445 --> 01:17:06.525
<v Speaker 1>Yeah. Yeah. This is what the problem is.

01:17:06.525 --> 01:17:07.405
<v Speaker 0>Been updated.

01:17:08.125 --> 01:17:10.925
<v Speaker 1>His endpoint's not being updated, and so

01:17:11.164 --> 01:17:12.844
<v Speaker 1>it's not going to do this. So we

01:17:12.844 --> 01:17:14.364
<v Speaker 1>need to go in and edit the service.

01:17:16.699 --> 01:17:20.380
<v Speaker 0>Or fix the controller manager, maybe. Do you

01:17:20.380 --> 01:17:22.059
<v Speaker 0>think it could be disabled?

01:17:22.300 --> 01:17:25.900
<v Speaker 1>I've

01:17:25.900 --> 01:17:28.059
<v Speaker 1>actually never hard coded endpoints

01:17:28.300 --> 01:17:30.860
<v Speaker 1>into a service. Usually, I use a selector

01:17:30.860 --> 01:17:31.260
<v Speaker 1>label.

01:17:32.745 --> 01:17:34.585
<v Speaker 0>There there should be a selector label, though.

01:17:34.585 --> 01:17:35.704
<v Speaker 0>Right? But there should

01:17:36.025 --> 01:17:37.705
<v Speaker 1>be a selector label. So let me look

01:17:37.705 --> 01:17:38.585
<v Speaker 1>for that.

01:17:39.545 --> 01:17:41.225
<v Speaker 1>I don't I don't remember if it was

01:17:41.225 --> 01:17:41.465
<v Speaker 1>there.

01:17:47.110 --> 01:17:47.749
<v Speaker 0>Yeah.

01:17:48.310 --> 01:17:48.710
<v Speaker 0>My

01:17:49.349 --> 01:17:52.070
<v Speaker 0>I'm assuming if their service hasn't been updated,

01:17:52.230 --> 01:17:54.150
<v Speaker 0>then Abdul has been a bit of a

01:17:54.150 --> 01:17:56.070
<v Speaker 0>mini and disabled one of our controllers.

01:17:57.255 --> 01:17:58.534
<v Speaker 0>And I'm looking at him to see if

01:17:58.534 --> 01:18:00.455
<v Speaker 0>he's got guess. Got a tail. Like

01:18:03.094 --> 01:18:04.775
<v Speaker 2>No idea. Alright.

01:18:05.735 --> 01:18:08.054
<v Speaker 1>So we do have an app selector.

01:18:08.295 --> 01:18:10.855
<v Speaker 1>The endpoint's not being updated. This this is

01:18:10.855 --> 01:18:13.230
<v Speaker 1>an old update. This isn't any either of

01:18:13.230 --> 01:18:14.350
<v Speaker 1>the new ones.

01:18:15.630 --> 01:18:16.350
<v Speaker 1>So

01:18:20.270 --> 01:18:21.790
<v Speaker 0>So my

01:18:22.190 --> 01:18:25.470
<v Speaker 0>I'm assuming if we come in here. And

01:18:25.470 --> 01:18:26.670
<v Speaker 1>look at the manifests.

01:18:27.205 --> 01:18:28.804
<v Speaker 0>I wonder if he's been kind enough to

01:18:28.804 --> 01:18:30.885
<v Speaker 0>leave it back up. No. Not this time.

01:18:31.045 --> 01:18:33.844
<v Speaker 0>But look at the cube controller manager here

01:18:33.925 --> 01:18:35.364
<v Speaker 0>has a list of

01:18:37.605 --> 01:18:38.324
<v Speaker 0>controllers.

01:18:40.250 --> 01:18:41.450
<v Speaker 0>You

01:18:41.450 --> 01:18:42.250
<v Speaker 0>see that?

01:18:43.770 --> 01:18:44.570
<v Speaker 1>Yeah.

01:18:44.810 --> 01:18:45.929
<v Speaker 1>The endpoints.

01:18:47.530 --> 01:18:48.409
<v Speaker 1>Sneaky.

01:18:50.090 --> 01:18:52.170
<v Speaker 2>So if you do a minus on the

01:18:52.170 --> 01:18:55.224
<v Speaker 2>controller, it means remove one of the controllers.

01:18:55.224 --> 01:18:56.184
<v Speaker 2>Right? Yes.

01:18:56.585 --> 01:18:58.905
<v Speaker 2>So the star means all the controllers except

01:18:58.905 --> 01:19:01.704
<v Speaker 2>the nondefault ones. The nondefault ones are the

01:19:01.945 --> 01:19:03.144
<v Speaker 2>token cleaner

01:19:03.304 --> 01:19:06.104
<v Speaker 2>token cleaner and the bootstrap

01:19:06.824 --> 01:19:09.180
<v Speaker 2>validator or something like that. And then if

01:19:09.180 --> 01:19:10.460
<v Speaker 2>you do a minus on one of the

01:19:10.460 --> 01:19:12.860
<v Speaker 2>controllers, it just basically removes that controller. It

01:19:12.860 --> 01:19:14.460
<v Speaker 2>doesn't run it. So I remove the endpoint

01:19:14.460 --> 01:19:15.260
<v Speaker 2>controller,

01:19:15.900 --> 01:19:17.020
<v Speaker 2>which is what You can do the same

01:19:17.020 --> 01:19:17.500
<v Speaker 1>thing.

01:19:18.780 --> 01:19:20.700
<v Speaker 2>Mhmm. Yeah. No. You can do the same

01:19:20.700 --> 01:19:22.700
<v Speaker 1>thing with labels with the minus and just

01:19:22.700 --> 01:19:24.405
<v Speaker 1>removing the label.

01:19:25.445 --> 01:19:26.084
<v Speaker 2>Yes.

01:19:26.724 --> 01:19:28.405
<v Speaker 2>So the reason I didn't leave a backup

01:19:28.405 --> 01:19:29.925
<v Speaker 2>there, it's because

01:19:30.324 --> 01:19:32.724
<v Speaker 2>I struggled with it because I didn't know.

01:19:32.724 --> 01:19:36.005
<v Speaker 2>If you just get that file copied to

01:19:36.005 --> 01:19:38.630
<v Speaker 2>something called dot old dot backup, the cubelet

01:19:38.630 --> 01:19:39.749
<v Speaker 2>will still pick it up.

01:19:40.710 --> 01:19:42.389
<v Speaker 0>It wouldn't pick up the files and start

01:19:42.389 --> 01:19:43.510
<v Speaker 0>with a dot, though.

01:19:43.909 --> 01:19:45.590
<v Speaker 0>So you could have Yeah. Exactly. Yeah. Dot

01:19:45.590 --> 01:19:47.030
<v Speaker 0>back. Oh, yeah. I could I could have

01:19:47.030 --> 01:19:47.590
<v Speaker 2>done that. Yes.

01:19:49.055 --> 01:19:51.614
<v Speaker 0>Alright. So now we need to restart.

01:19:52.575 --> 01:19:53.135
<v Speaker 2>Yeah.

01:19:53.695 --> 01:19:56.175
<v Speaker 2>You have to roll out your

01:19:57.135 --> 01:19:58.415
<v Speaker 2>do a roll out on the We have

01:19:58.415 --> 01:20:00.655
<v Speaker 2>to restart the cubelet, though, first. Right?

01:20:01.720 --> 01:20:03.880
<v Speaker 0>No. The cubelet will detect that failed change

01:20:03.880 --> 01:20:05.800
<v Speaker 0>to roll out the new controller managers. I

01:20:05.800 --> 01:20:07.880
<v Speaker 0>think we'll just need to modify our

01:20:08.360 --> 01:20:09.400
<v Speaker 0>deployment,

01:20:10.760 --> 01:20:12.840
<v Speaker 0>and then the controller rollout rollout. Yeah.

01:20:18.795 --> 01:20:21.435
<v Speaker 1>Okay. So we just need to restart

01:20:21.435 --> 01:20:22.074
<v Speaker 1>this.

01:20:25.195 --> 01:20:27.435
<v Speaker 0>Yeah. You can use whatever whatever method you

01:20:27.435 --> 01:20:27.675
<v Speaker 0>want.

01:20:34.250 --> 01:20:36.810
<v Speaker 0>You're too nice. I normally do cube delete

01:20:36.810 --> 01:20:38.409
<v Speaker 0>pods dash dash all.

01:20:40.810 --> 01:20:42.570
<v Speaker 0>Which I know is a horrible, horrible way

01:20:42.570 --> 01:20:43.850
<v Speaker 0>of doing it, but it's fast.

01:20:46.025 --> 01:20:47.065
<v Speaker 1>Oh, wait. Did I

01:20:47.705 --> 01:20:50.105
<v Speaker 0>Yeah. You just missed that l

01:20:50.105 --> 01:20:51.465
<v Speaker 0>and clustered. Yeah.

01:20:57.385 --> 01:20:57.785
<v Speaker 0>Sweet.

01:20:59.300 --> 01:21:01.540
<v Speaker 1>Now we should be able to

01:21:02.100 --> 01:21:04.180
<v Speaker 1>describe the service, and we have all the

01:21:04.180 --> 01:21:05.380
<v Speaker 1>endpoints listing.

01:21:05.540 --> 01:21:07.139
<v Speaker 1>Very nice. That was a good one.

01:21:07.940 --> 01:21:10.100
<v Speaker 1>And, yeah, I I actually really like that

01:21:10.100 --> 01:21:12.980
<v Speaker 1>one because of the

01:21:12.135 --> 01:21:15.494
<v Speaker 1>the educational with the dash minus there. Let's

01:21:15.494 --> 01:21:17.655
<v Speaker 1>see if there's anything else here that's broken.

01:21:18.375 --> 01:21:20.294
<v Speaker 0>Yeah. I'm going There is one more thing.

01:21:21.255 --> 01:21:22.614
<v Speaker 0>I am going to

01:21:23.094 --> 01:21:24.934
<v Speaker 0>just on my local terminal dot port forward

01:21:24.934 --> 01:21:26.695
<v Speaker 0>and see if we can hit our application.

01:21:31.739 --> 01:21:33.659
<v Speaker 0>That's fine. Let's grab this one.

01:21:44.885 --> 01:21:46.645
<v Speaker 0>Looks like we're gonna get a timeout.

01:21:49.765 --> 01:21:53.125
<v Speaker 0>So I suspect our clustered application cannot speak

01:21:53.125 --> 01:21:53.925
<v Speaker 0>to Postgres.

01:21:56.860 --> 01:21:59.260
<v Speaker 1>Well, we didn't scale Postgres or anything, so

01:21:59.260 --> 01:22:01.179
<v Speaker 1>anything that had a bad service,

01:22:01.659 --> 01:22:04.139
<v Speaker 1>right, would need to be updated anyways.

01:22:04.219 --> 01:22:05.340
<v Speaker 0>Right? Failed

01:22:05.340 --> 01:22:07.739
<v Speaker 0>to connect the database and we've got angry

01:22:07.739 --> 01:22:08.059
<v Speaker 0>face.

01:22:12.355 --> 01:22:14.195
<v Speaker 0>Alright. Go for it. How do we fix

01:22:14.195 --> 01:22:14.755
<v Speaker 0>this?

01:22:16.514 --> 01:22:18.915
<v Speaker 1>Alright. So I was just looking at everything

01:22:18.915 --> 01:22:20.594
<v Speaker 1>that was up and running,

01:22:21.635 --> 01:22:22.755
<v Speaker 1>which is quite a bit.

01:22:23.780 --> 01:22:26.099
<v Speaker 1>Let's actually get the logs from

01:22:27.060 --> 01:22:29.780
<v Speaker 1>the database, see if if there's anything wrong

01:22:29.780 --> 01:22:30.900
<v Speaker 1>with the database.

01:22:31.140 --> 01:22:33.300
<v Speaker 1>I'm guessing that it's the database service.

01:22:37.215 --> 01:22:39.215
<v Speaker 1>So Postgres here, it says it's running.

01:22:50.910 --> 01:22:53.309
<v Speaker 1>I always use git with logs.

01:22:53.710 --> 01:22:55.230
<v Speaker 0>Yeah. We all do it.

01:22:56.989 --> 01:22:58.989
<v Speaker 1>They they might as well make git and

01:22:58.989 --> 01:23:00.110
<v Speaker 1>logs like

01:23:00.270 --> 01:23:01.630
<v Speaker 1>just like an alias.

01:23:02.190 --> 01:23:02.430
<v Speaker 0>Yeah.

01:23:03.155 --> 01:23:04.675
<v Speaker 0>Do you wanna check the So it says

01:23:04.755 --> 01:23:06.675
<v Speaker 0>surface and make sure the IP addresses match?

01:23:06.675 --> 01:23:07.954
<v Speaker 0>I wonder if we need to

01:23:08.355 --> 01:23:10.195
<v Speaker 0>do that, you know, what we did with

01:23:10.195 --> 01:23:14.035
<v Speaker 0>the clustered one. Okay. Yeah. K. Get pods

01:23:14.035 --> 01:23:15.155
<v Speaker 1>dash a,

01:23:15.475 --> 01:23:15.715
<v Speaker 1>not

01:23:16.960 --> 01:23:18.639
<v Speaker 1>dash o y.

01:23:19.120 --> 01:23:21.920
<v Speaker 1>So its IP address is this one right

01:23:21.920 --> 01:23:25.280
<v Speaker 1>here, and then we're going to do 4156.

01:23:33.755 --> 01:23:35.114
<v Speaker 0>It's just Postgres,

01:23:35.115 --> 01:23:35.675
<v Speaker 0>I think.

01:23:49.630 --> 01:23:50.429
<v Speaker 1>Alright.

01:23:52.510 --> 01:23:55.230
<v Speaker 1>Why did it re oh, I I misspelled

01:23:55.230 --> 01:23:55.790
<v Speaker 1>it. There we go.

01:24:00.635 --> 01:24:01.594
<v Speaker 1>There we go.

01:24:02.235 --> 01:24:03.034
<v Speaker 1>So

01:24:03.195 --> 01:24:06.155
<v Speaker 1>external IP, cluster IP address. Yeah. This is

01:24:06.395 --> 01:24:07.915
<v Speaker 1>let's describe this service.

01:24:13.560 --> 01:24:15.080
<v Speaker 1>Oh, if nothing else

01:24:15.960 --> 01:24:17.320
<v Speaker 1>this is correct.

01:24:18.040 --> 01:24:19.160
<v Speaker 1>192

01:24:19.480 --> 01:24:20.120
<v Speaker 1>yeah.

01:24:22.600 --> 01:24:25.720
<v Speaker 1>What what's the IP address that

01:24:25.355 --> 01:24:27.514
<v Speaker 1>he could've messed with the IP address?

01:24:28.635 --> 01:24:30.315
<v Speaker 1>No. It's always DNS.

01:24:32.875 --> 01:24:34.715
<v Speaker 2>I was hoping you don't see it.

01:24:35.835 --> 01:24:36.955
<v Speaker 1>It's

01:24:36.955 --> 01:24:38.315
<v Speaker 1>always DNS. Okay.

01:24:38.980 --> 01:24:41.380
<v Speaker 1>Yeah. Probably. That's because earlier when we were

01:24:41.460 --> 01:24:43.140
<v Speaker 2>when me and David were stuck at one

01:24:43.140 --> 01:24:44.900
<v Speaker 2>of your problems, everybody in chat was saying

01:24:44.900 --> 01:24:45.860
<v Speaker 2>it's always DNS.

01:24:53.645 --> 01:24:54.445
<v Speaker 1>So

01:24:56.204 --> 01:24:58.044
<v Speaker 1>you screwed with DNS.

01:25:00.284 --> 01:25:01.885
<v Speaker 0>You wanna check what's running in the cube

01:25:01.885 --> 01:25:02.764
<v Speaker 0>system namespace?

01:25:09.280 --> 01:25:11.280
<v Speaker 0>I'm now starting to doubt whether that service

01:25:11.280 --> 01:25:13.440
<v Speaker 0>was called Postgres or PostgresQL.

01:25:13.520 --> 01:25:15.360
<v Speaker 0>Like, I wonder if he's just renamed it.

01:25:15.360 --> 01:25:16.720
<v Speaker 0>Oh, no. Or we just had no core

01:25:16.720 --> 01:25:17.920
<v Speaker 0>DNS. Look at that.

01:25:19.360 --> 01:25:21.360
<v Speaker 1>Or or no core DNS. Yeah.

01:25:24.005 --> 01:25:26.325
<v Speaker 1>That would be a problem. Wait. Wait. Did

01:25:26.325 --> 01:25:27.605
<v Speaker 1>you leave us a backup?

01:25:29.445 --> 01:25:31.205
<v Speaker 2>That's a lesson for you folks, how to

01:25:31.205 --> 01:25:33.525
<v Speaker 2>easily screw up DNS in Kubernetes.

01:25:36.290 --> 01:25:38.930
<v Speaker 0>I'm assuming by a desired zero, this it

01:25:38.930 --> 01:25:39.810
<v Speaker 0>may just

01:25:40.130 --> 01:25:41.409
<v Speaker 0>be scaled down,

01:25:42.370 --> 01:25:43.250
<v Speaker 0>you think?

01:25:44.210 --> 01:25:46.290
<v Speaker 1>We could try scaling it. Let's let's do

01:25:46.290 --> 01:25:48.290
<v Speaker 1>that. I'm good with that.

01:25:49.890 --> 01:25:50.290
<v Speaker 1>Okay.

01:25:59.655 --> 01:26:01.975
<v Speaker 1>Let's let's do three since we have a

01:26:01.975 --> 01:26:02.775
<v Speaker 1>three node.

01:26:02.935 --> 01:26:05.094
<v Speaker 0>And you'll need the namespace.

01:26:05.574 --> 01:26:05.975
<v Speaker 0>Yeah.

01:26:22.005 --> 01:26:25.445
<v Speaker 1>Let's see. Well, it's they're not running yet,

01:26:25.445 --> 01:26:25.925
<v Speaker 1>but

01:26:27.365 --> 01:26:29.685
<v Speaker 1>it says three of three ready. Hit the

01:26:29.685 --> 01:26:31.125
<v Speaker 1>refresh. See if your database works.

01:26:38.140 --> 01:26:38.860
<v Speaker 0>I

01:26:39.020 --> 01:26:40.860
<v Speaker 0>don't think so.

01:26:43.100 --> 01:26:46.700
<v Speaker 1>Alright. Well, we do have core DNS

01:26:46.045 --> 01:26:47.004
<v Speaker 1>running.

01:26:47.085 --> 01:26:49.565
<v Speaker 1>We have three pods running. Let's check some

01:26:49.565 --> 01:26:51.005
<v Speaker 1>of the logs from core DNS.

01:27:06.080 --> 01:27:08.800
<v Speaker 2>Did you leave the queue proxy command running

01:27:08.800 --> 01:27:10.880
<v Speaker 2>while you were scaling up and down the

01:27:10.880 --> 01:27:13.360
<v Speaker 2>queue port forward command while you were you

01:27:13.360 --> 01:27:15.040
<v Speaker 2>were scaling up and down clustered?

01:27:17.125 --> 01:27:18.565
<v Speaker 2>That might be your problem.

01:27:29.125 --> 01:27:31.284
<v Speaker 0>It definitely still seems to be timing out.

01:27:33.900 --> 01:27:35.580
<v Speaker 0>Do you wanna exec into one of our

01:27:35.580 --> 01:27:38.060
<v Speaker 0>pods and try cluster DNS and see if

01:27:38.060 --> 01:27:38.780
<v Speaker 0>it's working?

01:27:39.580 --> 01:27:40.139
<v Speaker 1>Yeah.

01:27:41.820 --> 01:27:43.660
<v Speaker 1>I was just looking at the logs. I

01:27:43.660 --> 01:27:46.780
<v Speaker 1>don't see Yeah. Cloud DNS never logs anything.

01:27:47.180 --> 01:27:47.500
<v Speaker 1>Yeah.

01:27:48.405 --> 01:27:50.005
<v Speaker 1>Yeah. Well, it didn't fail.

01:27:51.045 --> 01:27:53.925
<v Speaker 1>But yeah. Okay. Sure. We can exec into

01:27:54.165 --> 01:27:57.364
<v Speaker 1>I guess, we could exec into the clustered.

01:27:58.645 --> 01:28:00.165
<v Speaker 1>Does it have fashion in I don't know

01:28:00.165 --> 01:28:02.325
<v Speaker 1>what's installed in these. It's

01:28:04.160 --> 01:28:05.760
<v Speaker 0>shit. What is it? It may be Alpine

01:28:05.760 --> 01:28:07.600
<v Speaker 0>or maybe Scratch. We're about to find out.

01:28:07.600 --> 01:28:09.199
<v Speaker 1>We can just run

01:28:09.680 --> 01:28:11.120
<v Speaker 1>we could just run a

01:28:12.000 --> 01:28:14.400
<v Speaker 0>You ran NGINX earlier, right, I think?

01:28:14.960 --> 01:28:16.725
<v Speaker 1>Alright. I did. Let's let's

01:28:19.284 --> 01:28:21.205
<v Speaker 0>Yeah. There we go. Let's jump into there.

01:28:21.205 --> 01:28:22.965
<v Speaker 0>I'm pretty sure that's got bash available.

01:28:23.844 --> 01:28:24.485
<v Speaker 1>Go for it.

01:28:28.680 --> 01:28:30.039
<v Speaker 0>Don't know what complete.

01:28:33.719 --> 01:28:34.519
<v Speaker 2>Curl.

01:28:36.440 --> 01:28:38.199
<v Speaker 0>Oh, let's try normal DNS.

01:28:38.440 --> 01:28:40.039
<v Speaker 0>Yep. And

01:28:41.560 --> 01:28:42.280
<v Speaker 0>Kubernetes.

01:28:44.295 --> 01:28:45.895
<v Speaker 0>It looks to be working.

01:28:46.455 --> 01:28:48.215
<v Speaker 0>Do we have NC? No.

01:28:48.615 --> 01:28:49.255
<v Speaker 0>Can

01:28:51.895 --> 01:28:53.735
<v Speaker 1>you crawl Postgres?

01:28:54.295 --> 01:28:56.295
<v Speaker 2>We're getting into the end of this, and

01:28:56.295 --> 01:28:57.735
<v Speaker 2>there is only one last thing

01:28:58.500 --> 01:28:59.940
<v Speaker 2>that you have to figure out.

01:29:02.580 --> 01:29:04.660
<v Speaker 0>Yeah. The name of the DNS package across

01:29:04.660 --> 01:29:06.660
<v Speaker 0>different operating systems. That's the one thing I

01:29:06.660 --> 01:29:08.180
<v Speaker 0>need to figure out because it changes every

01:29:08.180 --> 01:29:08.659
<v Speaker 0>time.

01:29:09.140 --> 01:29:10.500
<v Speaker 0>And tools,

01:29:10.500 --> 01:29:12.420
<v Speaker 0>DNS tool. It changes

01:29:12.900 --> 01:29:13.460
<v Speaker 1>per version.

01:29:15.585 --> 01:29:16.624
<v Speaker 2>It'll

01:29:17.985 --> 01:29:18.545
<v Speaker 2>take

01:29:19.985 --> 01:29:20.945
<v Speaker 2>come

01:29:20.945 --> 01:29:23.744
<v Speaker 2>on. Maybe around that app to get update.

01:29:23.744 --> 01:29:25.585
<v Speaker 2>Did you do an update? I did.

01:29:28.840 --> 01:29:30.440
<v Speaker 0>I just never remember the name of the

01:29:30.440 --> 01:29:31.880
<v Speaker 0>package across Ubuntu,

01:29:31.880 --> 01:29:35.239
<v Speaker 0>Debian, Dms utils. Dms dms dash utils.

01:29:35.400 --> 01:29:36.679
<v Speaker 0>I I did that.

01:29:37.880 --> 01:29:39.320
<v Speaker 1>I thought I tried that.

01:29:39.559 --> 01:29:41.079
<v Speaker 0>Yeah. Maybe it's not dash.

01:29:44.015 --> 01:29:44.895
<v Speaker 1>Yeah. Alright.

01:29:47.135 --> 01:29:48.175
<v Speaker 0>Let's take

01:29:48.335 --> 01:29:49.215
<v Speaker 0>Postgres.

01:29:51.135 --> 01:29:53.455
<v Speaker 0>No response. Have to do defaults.

01:29:53.455 --> 01:29:55.930
<v Speaker 2>No. Dot dot defaults. Because otherwise, it would

01:29:55.930 --> 01:29:57.530
<v Speaker 1>be It's

01:29:57.530 --> 01:29:58.969
<v Speaker 1>in the default namespace.

01:30:00.810 --> 01:30:02.970
<v Speaker 0>Oh, there we default, it should find it.

01:30:02.970 --> 01:30:03.449
<v Speaker 2>Yeah.

01:30:04.490 --> 01:30:06.810
<v Speaker 0>Okay. That resolved. DNS is working.

01:30:07.815 --> 01:30:09.975
<v Speaker 0>Oh, no. It didn't. Because this is

01:30:10.535 --> 01:30:11.895
<v Speaker 0>oh, no. It did. It did.

01:30:12.375 --> 01:30:13.975
<v Speaker 2>No. It did. That's your IP address of

01:30:13.975 --> 01:30:16.935
<v Speaker 2>the DNS or the Kubernetes API.

01:30:18.055 --> 01:30:18.295
<v Speaker 1>So

01:30:19.970 --> 01:30:21.570
<v Speaker 1>he said there's one last thing for us

01:30:21.570 --> 01:30:22.930
<v Speaker 1>to find out. We gotta

01:30:23.250 --> 01:30:25.250
<v Speaker 1>figure out something else that's broken.

01:30:27.490 --> 01:30:30.130
<v Speaker 0>Yeah. Okay. So I I would okay. Just

01:30:30.130 --> 01:30:31.570
<v Speaker 2>to help you out, it's something that shouldn't

01:30:31.570 --> 01:30:31.890
<v Speaker 2>be there.

01:30:33.985 --> 01:30:35.745
<v Speaker 1>Something that shouldn't be there.

01:30:36.145 --> 01:30:36.705
<v Speaker 1>Yes.

01:30:38.065 --> 01:30:40.545
<v Speaker 1>Is it this file right here? When oh,

01:30:40.545 --> 01:30:41.585
<v Speaker 1>wait. Where am I? We're still in the

01:30:41.585 --> 01:30:42.705
<v Speaker 0>container. Yeah.

01:30:43.665 --> 01:30:45.585
<v Speaker 1>Oh, okay. Yeah. Thank you. I was like,

01:30:45.585 --> 01:30:45.745
<v Speaker 1>what?

01:30:50.920 --> 01:30:53.560
<v Speaker 0>Nice tip from Waleed using plus short with

01:30:53.560 --> 01:30:54.520
<v Speaker 0>big Oh, that's the

01:30:55.560 --> 01:30:56.840
<v Speaker 2>that's just the

01:30:57.960 --> 01:30:59.800
<v Speaker 2>backup of the cube control manager.

01:31:00.599 --> 01:31:02.679
<v Speaker 1>So something that shouldn't be there.

01:31:10.304 --> 01:31:12.784
<v Speaker 1>There's metal l b cube system.

01:31:12.864 --> 01:31:13.824
<v Speaker 1>Let's see.

01:31:14.145 --> 01:31:14.945
<v Speaker 1>Packet.

01:31:15.425 --> 01:31:18.210
<v Speaker 1>Wait. What's this packet packet cloud, man? Is

01:31:18.210 --> 01:31:19.570
<v Speaker 1>this I I don't know what's this supposed

01:31:19.570 --> 01:31:20.770
<v Speaker 1>to be in this system. I could check

01:31:20.930 --> 01:31:23.650
<v Speaker 0>Yeah. That's just the the Equinix metal CCM,

01:31:23.650 --> 01:31:25.170
<v Speaker 0>but it's not been renamed. So it it's

01:31:25.170 --> 01:31:26.610
<v Speaker 0>it's okay. We trust it.

01:31:29.745 --> 01:31:31.425
<v Speaker 1>It's hard for me to know something that's

01:31:31.425 --> 01:31:32.865
<v Speaker 1>not supposed to be there when I'm not

01:31:32.865 --> 01:31:33.905
<v Speaker 1>necessarily

01:31:36.225 --> 01:31:39.025
<v Speaker 1>sure what's What's confusing me is that

01:31:39.425 --> 01:31:41.905
<v Speaker 0>our application we can we can browse to

01:31:42.790 --> 01:31:44.630
<v Speaker 0>this is still a DNS error, which we

01:31:44.630 --> 01:31:46.550
<v Speaker 0>know is not to be true. So

01:31:52.389 --> 01:31:54.949
<v Speaker 0>either that pod isn't getting DNS

01:31:56.914 --> 01:31:58.195
<v Speaker 0>or it's just some Probably

01:31:58.994 --> 01:32:00.675
<v Speaker 2>probably put differently.

01:32:01.954 --> 01:32:04.275
<v Speaker 2>So your clustered application is not able to

01:32:04.275 --> 01:32:06.994
<v Speaker 2>reach your database, but your NGINX application was

01:32:06.994 --> 01:32:09.155
<v Speaker 2>able to resolve DNS. Right?

01:32:11.180 --> 01:32:12.620
<v Speaker 0>So Okay. So we need to take a

01:32:12.620 --> 01:32:14.620
<v Speaker 0>look at our deployment for Clustard because he

01:32:14.620 --> 01:32:15.900
<v Speaker 0>may have modified it.

01:32:16.700 --> 01:32:19.660
<v Speaker 1>The deployment or the service could have

01:32:20.060 --> 01:32:21.420
<v Speaker 1>the wrong ports

01:32:21.500 --> 01:32:21.900
<v Speaker 1>exposed.

01:32:23.425 --> 01:32:26.065
<v Speaker 0>But no. Clustard can't even resolve

01:32:26.465 --> 01:32:28.945
<v Speaker 0>the DNS, but our Nginx pod did.

01:32:29.985 --> 01:32:31.505
<v Speaker 2>Even if the DNS Are you sure that

01:32:31.505 --> 01:32:32.225
<v Speaker 2>it cut okay.

01:32:33.985 --> 01:32:34.305
<v Speaker 1>Okay.

01:32:38.540 --> 01:32:39.579
<v Speaker 2>Let's okay.

01:32:39.900 --> 01:32:41.500
<v Speaker 2>Put it a different way. Let's say that

01:32:41.500 --> 01:32:44.219
<v Speaker 2>you are a security cautious customer. Nope. You're

01:32:44.219 --> 01:32:45.099
<v Speaker 2>trying to

01:32:45.739 --> 01:32:46.780
<v Speaker 2>block

01:32:47.099 --> 01:32:48.940
<v Speaker 2>the hell out of everything that you don't

01:32:48.940 --> 01:32:50.540
<v Speaker 2>need, and then you fucked up when you

01:32:50.540 --> 01:32:51.739
<v Speaker 2>were trying to do that.

01:32:57.235 --> 01:32:59.235
<v Speaker 1>So are we talking about, like

01:33:01.235 --> 01:33:03.235
<v Speaker 1>did you go in and modify

01:33:03.235 --> 01:33:03.954
<v Speaker 1>the

01:33:04.275 --> 01:33:05.315
<v Speaker 1>capabilities

01:33:05.315 --> 01:33:07.315
<v Speaker 1>or the

01:33:09.640 --> 01:33:11.719
<v Speaker 1>the permissions for this pod?

01:33:13.560 --> 01:33:15.400
<v Speaker 2>Oh, depends how No

01:33:15.880 --> 01:33:18.920
<v Speaker 1>cluster role binding for it? No. I'm saying,

01:33:18.920 --> 01:33:20.360
<v Speaker 1>like, did you go and, like,

01:33:22.435 --> 01:33:25.395
<v Speaker 1>give it a a role with no permissions?

01:33:27.235 --> 01:33:27.875
<v Speaker 2>No.

01:33:31.715 --> 01:33:33.875
<v Speaker 2>Something is there, but it's just misconfigured.

01:33:43.160 --> 01:33:44.840
<v Speaker 1>Okay. So something

01:33:49.785 --> 01:33:50.585
<v Speaker 2>Good catch.

01:33:52.745 --> 01:33:53.704
<v Speaker 2>Good catch.

01:33:57.305 --> 01:33:57.785
<v Speaker 0>Cheeky.

01:34:00.469 --> 01:34:02.469
<v Speaker 2>I like I like David. They just delete

01:34:02.469 --> 01:34:03.670
<v Speaker 2>stuff. It doesn't care.

01:34:04.390 --> 01:34:05.909
<v Speaker 1>Very nice. You can't delete.

01:34:07.909 --> 01:34:10.070
<v Speaker 1>You deserve that one. Yeah. I put the

01:34:10.070 --> 01:34:13.110
<v Speaker 2>top policy to block traffic for the clustered

01:34:13.715 --> 01:34:16.434
<v Speaker 2>app on egress. So even if you can

01:34:16.434 --> 01:34:18.434
<v Speaker 2>talk to it, it's not able to talk

01:34:18.434 --> 01:34:20.354
<v Speaker 2>out, so it could not reach Postgres.

01:34:22.034 --> 01:34:25.954
<v Speaker 1>Very nice. I checked the Cilium network policies,

01:34:25.954 --> 01:34:28.434
<v Speaker 0>and I didn't check the standard cluster policies.

01:34:29.150 --> 01:34:30.590
<v Speaker 2>So for the sake of

01:34:31.550 --> 01:34:33.230
<v Speaker 2>knowledge sharing, there are two things you have

01:34:33.230 --> 01:34:36.190
<v Speaker 2>to keep in mind. Kubernetes itself has a

01:34:36.190 --> 01:34:38.990
<v Speaker 2>network policy, an upstream API part of the

01:34:38.990 --> 01:34:40.110
<v Speaker 2>Kubernetes code.

01:34:40.590 --> 01:34:40.830
<v Speaker 2>Right?

01:34:41.645 --> 01:34:43.965
<v Speaker 2>That network policy allows you to implement network

01:34:43.965 --> 01:34:45.164
<v Speaker 2>policies on a cluster,

01:34:45.645 --> 01:34:46.204
<v Speaker 2>but

01:34:46.765 --> 01:34:48.285
<v Speaker 2>it doesn't come with a controller. So we

01:34:48.285 --> 01:34:50.285
<v Speaker 2>basically when you install Kubernetes, you have to

01:34:50.285 --> 01:34:52.285
<v Speaker 2>install something that will make those network policies

01:34:52.285 --> 01:34:54.364
<v Speaker 2>happen. So Calico or Serium or anything like

01:34:54.364 --> 01:34:56.850
<v Speaker 2>that. And most CNIs that exist on the

01:34:56.850 --> 01:34:58.930
<v Speaker 2>markets, they have some sort of integration, and

01:34:58.930 --> 01:35:00.610
<v Speaker 2>they allow you to either use their own

01:35:00.610 --> 01:35:02.690
<v Speaker 2>CRDs like the case of has

01:35:02.770 --> 01:35:05.090
<v Speaker 2>has network policy, which is an object. You

01:35:05.090 --> 01:35:06.850
<v Speaker 2>can either use that to define the network

01:35:06.850 --> 01:35:09.170
<v Speaker 2>policy, or you can use the upstream network

01:35:09.170 --> 01:35:09.810
<v Speaker 2>policy

01:35:10.475 --> 01:35:11.275
<v Speaker 2>API,

01:35:11.355 --> 01:35:12.715
<v Speaker 2>and then Serum should be able to read

01:35:12.715 --> 01:35:15.275
<v Speaker 2>that and enforce it or or whatever c

01:35:15.275 --> 01:35:17.435
<v Speaker 2>and I run the cluster. Right? And that's

01:35:17.435 --> 01:35:18.875
<v Speaker 2>done for portability.

01:35:19.355 --> 01:35:21.435
<v Speaker 2>If you have a cluster that runs on

01:35:21.435 --> 01:35:24.170
<v Speaker 2>one cloud provider with network policies, you should

01:35:24.170 --> 01:35:25.290
<v Speaker 2>be able to take it out and put

01:35:25.290 --> 01:35:26.570
<v Speaker 2>it in a different cloud provider. As long

01:35:26.570 --> 01:35:28.250
<v Speaker 2>as they have network policy

01:35:28.490 --> 01:35:30.010
<v Speaker 2>plug in, it should just work.

01:35:32.490 --> 01:35:34.330
<v Speaker 0>There you go. Alright.

01:35:35.575 --> 01:35:37.335
<v Speaker 0>Thank you both for

01:35:37.575 --> 01:35:38.935
<v Speaker 0>ruining my day.

01:35:39.335 --> 01:35:42.855
<v Speaker 0>Some evil evil breakages of both clusters there,

01:35:42.855 --> 01:35:43.335
<v Speaker 0>and

01:35:43.975 --> 01:35:45.895
<v Speaker 0>thank you for also spending a little bit

01:35:45.895 --> 01:35:48.215
<v Speaker 0>of your day fixing these clusters with me.

01:35:48.215 --> 01:35:50.760
<v Speaker 0>It's been it's always super knowledgeable seeing what

01:35:50.760 --> 01:35:52.119
<v Speaker 0>people do to these clusters and the way

01:35:52.119 --> 01:35:53.080
<v Speaker 0>that they think and the way that they

01:35:53.080 --> 01:35:54.679
<v Speaker 0>debug and it's just an absolute pleasure for

01:35:54.679 --> 01:35:56.199
<v Speaker 0>you both to join me today. So thank

01:35:56.199 --> 01:35:57.400
<v Speaker 0>you very much for that.

01:36:00.520 --> 01:36:01.719
<v Speaker 2>Thank you for having us. I hate both

01:36:01.719 --> 01:36:03.400
<v Speaker 0>those clusters. I gotta say that those are

01:36:03.400 --> 01:36:04.585
<v Speaker 0>just cruel. Network

01:36:05.065 --> 01:36:06.425
<v Speaker 0>policies, DNS.

01:36:06.585 --> 01:36:08.425
<v Speaker 0>You're just bringing out the worst in everything

01:36:08.425 --> 01:36:09.065
<v Speaker 0>here.

01:36:11.145 --> 01:36:12.905
<v Speaker 1>Hey. Know that's what I'm doing with DNS.

01:36:12.905 --> 01:36:13.304
<v Speaker 1>Alright.

01:36:14.905 --> 01:36:17.305
<v Speaker 0>Thanks to everyone that watched as well. Thank

01:36:17.305 --> 01:36:18.665
<v Speaker 0>you to the sponsors Teleport.

01:36:19.350 --> 01:36:21.350
<v Speaker 0>We use Teleport today to debug this. Make

01:36:21.350 --> 01:36:22.630
<v Speaker 0>sure you check it out using the link

01:36:22.630 --> 01:36:24.710
<v Speaker 0>in the video. Do either of you have

01:36:24.710 --> 01:36:26.870
<v Speaker 0>any last words before we finish up for

01:36:26.870 --> 01:36:27.510
<v Speaker 0>today?

01:36:29.910 --> 01:36:31.670
<v Speaker 1>It's Thank you, dude, for that cluster.

01:36:33.155 --> 01:36:36.595
<v Speaker 1>That dude, that that was a fantastic cluster.

01:36:36.595 --> 01:36:37.875
<v Speaker 1>I really appreciate it.

01:36:38.995 --> 01:36:40.755
<v Speaker 1>We should do this again sometime.

01:36:42.035 --> 01:36:44.355
<v Speaker 2>Yes. We should come up with more interesting

01:36:44.355 --> 01:36:46.800
<v Speaker 2>ways to break things. Well, it's funny that

01:36:46.800 --> 01:36:48.800
<v Speaker 0>you both mentioned that because next week is

01:36:48.800 --> 01:36:50.720
<v Speaker 0>the start of cluster teams, and I would

01:36:50.720 --> 01:36:52.080
<v Speaker 0>love for you both to bring a team

01:36:52.080 --> 01:36:54.400
<v Speaker 0>for the team edition if you wish and

01:36:54.400 --> 01:36:56.080
<v Speaker 0>get involved that way as well.

01:36:57.040 --> 01:36:58.640
<v Speaker 1>My team versus your team?

01:36:58.960 --> 01:36:59.840
<v Speaker 1>It's a rematch.

01:37:02.025 --> 01:37:04.265
<v Speaker 0>I can't promise you that's how the schedule

01:37:04.265 --> 01:37:05.705
<v Speaker 0>will go, but if you both wanna submit

01:37:05.705 --> 01:37:07.865
<v Speaker 0>teams, we'll catch up afterwards anyway.

01:37:08.185 --> 01:37:09.865
<v Speaker 0>I know we're a little bit overtime now,

01:37:09.865 --> 01:37:11.145
<v Speaker 0>so I'm gonna let you both go. But

01:37:11.145 --> 01:37:13.960
<v Speaker 0>again, seriously, absolute pleasure. Thank you for joining

01:37:13.960 --> 01:37:15.320
<v Speaker 0>me and I hope hope you both have

01:37:15.320 --> 01:37:16.280
<v Speaker 0>a wonderful day.

01:37:16.840 --> 01:37:17.800
<v Speaker 1>Thanks. Thank you, folks.
