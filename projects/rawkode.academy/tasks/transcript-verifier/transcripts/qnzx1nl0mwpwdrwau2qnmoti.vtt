WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 02bdca8f-0d3f-4b20-bedb-d2e37c3daf2b
Created: 2025-04-29T22:56:13.213Z
Duration: 3418.0884
Channels: 1

00:00:00.480 --> 00:00:01.439
<v Speaker 0>Preparing.

00:00:25.775 --> 00:00:27.855
<v Speaker 0>Okay. I will post the link into the

00:00:27.855 --> 00:00:28.175
<v Speaker 0>chat.

00:00:29.900 --> 00:00:31.420
<v Speaker 1>Yes. You're bringing it up for me. I'll

00:00:31.420 --> 00:00:33.420
<v Speaker 1>put it here as well. Alright. Nice.

00:01:48.405 --> 00:01:50.405
<v Speaker 0>Alright. We'll get started in just a few

00:01:50.405 --> 00:01:51.284
<v Speaker 0>seconds.

00:01:51.525 --> 00:01:51.924
<v Speaker 1>Sure.

00:02:21.460 --> 00:02:23.300
<v Speaker 0>Alright. Welcome everyone.

00:02:23.460 --> 00:02:25.380
<v Speaker 0>Thank you for joining us today.

00:02:25.860 --> 00:02:27.620
<v Speaker 0>Today, I have the pleasure of being joined

00:02:27.620 --> 00:02:28.500
<v Speaker 0>by Matt.

00:02:28.820 --> 00:02:30.580
<v Speaker 0>Say hello, Matt. Hello.

00:02:33.365 --> 00:02:36.165
<v Speaker 0>We're gonna use today as a stream to

00:02:36.165 --> 00:02:38.565
<v Speaker 0>take a look at Matt's pretty cool setup

00:02:38.565 --> 00:02:41.045
<v Speaker 0>that he's got configured with Home Assistant

00:02:41.285 --> 00:02:43.605
<v Speaker 0>to provide loads of cool home automation.

00:02:44.485 --> 00:02:47.205
<v Speaker 0>And we're also gonna take a look at

00:02:46.010 --> 00:02:48.170
<v Speaker 0>some of the integrations with Home Assistant so

00:02:48.170 --> 00:02:49.930
<v Speaker 0>that we can see how InfluxDB

00:02:49.930 --> 00:02:52.090
<v Speaker 0>becomes a part of that setup.

00:02:52.250 --> 00:02:55.290
<v Speaker 0>And we'll try to kind of discuss

00:02:55.450 --> 00:02:58.409
<v Speaker 0>using my experience along with with maths to

00:02:58.409 --> 00:03:00.890
<v Speaker 0>see what else we could do with InfluxDB

00:03:01.155 --> 00:03:03.715
<v Speaker 0>to help improve that whole automation as well.

00:03:04.435 --> 00:03:06.034
<v Speaker 0>So I think I said any further ado,

00:03:06.034 --> 00:03:07.795
<v Speaker 0>what we'll do is we will hand over

00:03:07.795 --> 00:03:09.555
<v Speaker 0>to Matt. We'll take a look at what

00:03:09.555 --> 00:03:10.595
<v Speaker 0>he's got running.

00:03:10.995 --> 00:03:12.355
<v Speaker 0>I will try and probe him with some

00:03:12.355 --> 00:03:14.194
<v Speaker 0>questions. If you have any of your own,

00:03:14.194 --> 00:03:16.194
<v Speaker 0>please feel free to drop them into our

00:03:16.194 --> 00:03:18.510
<v Speaker 0>chat box, which I will be monitoring

00:03:18.670 --> 00:03:20.510
<v Speaker 0>and we will take it from there. Over

00:03:20.510 --> 00:03:21.470
<v Speaker 0>to you, Matt.

00:03:22.110 --> 00:03:23.230
<v Speaker 1>Right. Let's

00:03:23.390 --> 00:03:26.350
<v Speaker 1>get home assistant up on that one there.

00:03:27.390 --> 00:03:30.510
<v Speaker 1>So I kinda started with home assistant when

00:03:31.355 --> 00:03:33.035
<v Speaker 1>I realized, like, I had a lot of

00:03:33.035 --> 00:03:33.755
<v Speaker 1>home

00:03:33.915 --> 00:03:35.995
<v Speaker 1>sort of smart devices as you would call

00:03:35.995 --> 00:03:37.755
<v Speaker 1>them. I had some Philips Hue lights.

00:03:38.315 --> 00:03:41.114
<v Speaker 1>I had some sensors from other various other

00:03:41.114 --> 00:03:42.875
<v Speaker 1>companies. I had some basic

00:03:43.834 --> 00:03:45.915
<v Speaker 1>RF radio frequency switches,

00:03:46.320 --> 00:03:48.800
<v Speaker 1>which had timers built in for my reptiles.

00:03:50.080 --> 00:03:51.840
<v Speaker 1>We have two reptiles downstairs and one in

00:03:51.840 --> 00:03:54.080
<v Speaker 1>my office who needs light at different times

00:03:54.080 --> 00:03:54.800
<v Speaker 1>of day.

00:03:55.120 --> 00:03:57.040
<v Speaker 1>They have different lamps and different heating and

00:03:57.040 --> 00:03:58.800
<v Speaker 1>temperature and humidity requirements.

00:03:59.440 --> 00:04:01.575
<v Speaker 1>So I had a lot of non connected

00:04:01.575 --> 00:04:03.734
<v Speaker 1>devices for monitoring and measuring that sort of

00:04:03.734 --> 00:04:05.575
<v Speaker 1>thing, and we were having some trouble keeping

00:04:05.575 --> 00:04:07.254
<v Speaker 1>one of our reptiles at a correct humidity

00:04:07.254 --> 00:04:07.895
<v Speaker 1>level.

00:04:08.454 --> 00:04:10.135
<v Speaker 1>So the problem with that was that they

00:04:10.135 --> 00:04:11.734
<v Speaker 1>needed to be at a certain humidity level.

00:04:11.734 --> 00:04:13.890
<v Speaker 1>We were having trouble keeping the tank between

00:04:13.890 --> 00:04:15.410
<v Speaker 1>the right range. It would get too low

00:04:15.410 --> 00:04:16.370
<v Speaker 1>during the day.

00:04:17.570 --> 00:04:19.010
<v Speaker 1>You have to mist them and spray them

00:04:19.010 --> 00:04:20.370
<v Speaker 1>with water to keep it at the right

00:04:20.370 --> 00:04:20.930
<v Speaker 1>level.

00:04:21.170 --> 00:04:23.330
<v Speaker 1>So we bought a device that's just a

00:04:23.330 --> 00:04:25.490
<v Speaker 1>very basic timer device. A tank of water

00:04:25.490 --> 00:04:27.485
<v Speaker 1>sits on the side of his tank and

00:04:27.485 --> 00:04:29.485
<v Speaker 1>sprays water in every few hours for us

00:04:29.485 --> 00:04:31.005
<v Speaker 1>just to keep the humidity level up.

00:04:31.325 --> 00:04:32.605
<v Speaker 1>That's interesting.

00:04:32.925 --> 00:04:34.125
<v Speaker 1>But there's no way for me to monitor

00:04:34.125 --> 00:04:35.965
<v Speaker 1>that being a developer. I like everything to

00:04:35.965 --> 00:04:38.044
<v Speaker 1>be, you know, centralized and then want to

00:04:38.044 --> 00:04:40.445
<v Speaker 1>grab everything as as in one place if

00:04:40.445 --> 00:04:42.540
<v Speaker 1>possible. So I started looking at what was

00:04:42.540 --> 00:04:44.300
<v Speaker 1>available for me for actually

00:04:44.780 --> 00:04:46.860
<v Speaker 1>collecting that sort of data and

00:04:47.020 --> 00:04:49.020
<v Speaker 1>Home Assistant popped up because I had some

00:04:49.020 --> 00:04:51.260
<v Speaker 1>cameras as well. And I realized that actually

00:04:51.260 --> 00:04:53.020
<v Speaker 1>I was looking at one app for my

00:04:53.020 --> 00:04:54.300
<v Speaker 1>lights, one for my cameras.

00:04:54.815 --> 00:04:57.455
<v Speaker 1>I couldn't control switches with another because they

00:04:57.455 --> 00:04:58.895
<v Speaker 1>they didn't have an app for them. They

00:04:58.895 --> 00:05:00.335
<v Speaker 1>were just very basic devices.

00:05:00.574 --> 00:05:01.935
<v Speaker 1>So I looked at Home Assistant as a

00:05:01.935 --> 00:05:04.014
<v Speaker 1>way to get all of these separate ecosystems

00:05:04.014 --> 00:05:06.495
<v Speaker 1>talking to each other because typically they don't

00:05:06.495 --> 00:05:06.895
<v Speaker 1>do that.

00:05:07.960 --> 00:05:10.440
<v Speaker 1>Ecosystems are built by different companies. They might

00:05:10.440 --> 00:05:11.880
<v Speaker 1>use similar protocols,

00:05:12.040 --> 00:05:13.400
<v Speaker 1>but they each have their own gateway. They're

00:05:13.400 --> 00:05:14.360
<v Speaker 1>in implementation.

00:05:14.680 --> 00:05:17.800
<v Speaker 1>They don't typically like working together unless the

00:05:17.800 --> 00:05:19.400
<v Speaker 1>company decides that that's the thing they want

00:05:19.400 --> 00:05:21.560
<v Speaker 1>to do. So you're kind of at their

00:05:22.465 --> 00:05:24.544
<v Speaker 1>mercy if you want to get them talking

00:05:24.544 --> 00:05:25.345
<v Speaker 1>to each other.

00:05:25.985 --> 00:05:27.664
<v Speaker 1>So I I looked at Home Assistant as

00:05:27.664 --> 00:05:29.745
<v Speaker 1>a way to centralize it all. I can

00:05:29.745 --> 00:05:30.865
<v Speaker 1>now have one app

00:05:31.585 --> 00:05:34.384
<v Speaker 1>to monitor my switches, my lights, my temperatures

00:05:34.384 --> 00:05:36.625
<v Speaker 1>around the house for my reptiles as well

00:05:36.940 --> 00:05:38.540
<v Speaker 1>and control them

00:05:38.700 --> 00:05:40.460
<v Speaker 1>is where I started, you know, have buttons

00:05:40.460 --> 00:05:42.940
<v Speaker 1>for clicking and nice dashboards for everything.

00:05:43.900 --> 00:05:45.180
<v Speaker 1>And now I'm sort of in the stage

00:05:45.180 --> 00:05:47.500
<v Speaker 1>where I'm moving towards less control and more

00:05:47.500 --> 00:05:48.300
<v Speaker 1>automation.

00:05:48.620 --> 00:05:50.140
<v Speaker 1>I don't want to have to do some

00:05:50.140 --> 00:05:52.224
<v Speaker 1>of these things manually. It doesn't make sense

00:05:52.224 --> 00:05:53.585
<v Speaker 1>for me to do that. So I I

00:05:53.585 --> 00:05:55.585
<v Speaker 1>automate it as much as possible so that

00:05:55.585 --> 00:05:56.705
<v Speaker 1>I don't have to think about it and

00:05:56.705 --> 00:05:58.225
<v Speaker 1>it just does what I need to do.

00:05:58.705 --> 00:05:59.345
<v Speaker 1>So

00:05:59.745 --> 00:06:01.665
<v Speaker 1>Home Assistant itself is

00:06:02.305 --> 00:06:04.544
<v Speaker 1>it's four kind of key components under the

00:06:04.544 --> 00:06:07.100
<v Speaker 1>surface, the architecture of it. It's got an

00:06:07.100 --> 00:06:09.180
<v Speaker 1>event bus, which is like the heart the

00:06:09.180 --> 00:06:10.540
<v Speaker 1>heartbeat of Home Assistant.

00:06:10.860 --> 00:06:11.580
<v Speaker 1>You

00:06:11.740 --> 00:06:13.660
<v Speaker 1>have a state machine that stores the states

00:06:13.660 --> 00:06:16.220
<v Speaker 1>of various devices around your your sort of

00:06:16.220 --> 00:06:17.420
<v Speaker 1>platform or your home,

00:06:17.820 --> 00:06:19.820
<v Speaker 1>and that can emit state changed events into

00:06:19.820 --> 00:06:21.900
<v Speaker 1>the event bus. There's a timer that emits

00:06:21.795 --> 00:06:23.715
<v Speaker 1>emits a new event every second into the

00:06:23.715 --> 00:06:25.235
<v Speaker 1>event bus, so you can, you know, act

00:06:25.235 --> 00:06:26.595
<v Speaker 1>on a timer if you need to.

00:06:26.995 --> 00:06:29.475
<v Speaker 1>And there's a service registry that allows devices

00:06:29.475 --> 00:06:31.955
<v Speaker 1>and components and platforms and all the different

00:06:31.955 --> 00:06:34.620
<v Speaker 1>integrations that they that might exist. They can

00:06:34.620 --> 00:06:36.620
<v Speaker 1>register a service with the service registry that

00:06:36.620 --> 00:06:37.340
<v Speaker 1>can both

00:06:38.140 --> 00:06:40.620
<v Speaker 1>react to call service events when an event

00:06:40.620 --> 00:06:42.300
<v Speaker 1>happens that says, hey. Call this service and

00:06:42.300 --> 00:06:44.460
<v Speaker 1>perform this action. And then when it's done

00:06:44.460 --> 00:06:45.340
<v Speaker 1>that, it will

00:06:45.820 --> 00:06:47.500
<v Speaker 1>push an event back into the system to

00:06:47.500 --> 00:06:49.685
<v Speaker 1>say, hey. I called this service. So you

00:06:49.685 --> 00:06:51.925
<v Speaker 1>get an event saying, hey, light system. I'm

00:06:51.925 --> 00:06:53.845
<v Speaker 1>gonna call your service to turn this particular

00:06:53.845 --> 00:06:55.765
<v Speaker 1>light on. It will go into up turn

00:06:55.765 --> 00:06:57.445
<v Speaker 1>that light on, update the state of the

00:06:57.445 --> 00:06:59.365
<v Speaker 1>light, and then it will emit event back

00:06:59.365 --> 00:07:01.685
<v Speaker 1>into the system saying, hey. I've now called

00:07:01.685 --> 00:07:04.690
<v Speaker 1>that service, and the state machine will update

00:07:04.690 --> 00:07:06.370
<v Speaker 1>an event put an event into the event

00:07:06.370 --> 00:07:07.970
<v Speaker 1>bus and say, the state of this particular

00:07:07.970 --> 00:07:09.570
<v Speaker 1>device has also been updated.

00:07:10.050 --> 00:07:10.610
<v Speaker 1>So

00:07:10.930 --> 00:07:13.730
<v Speaker 1>from a development perspective, it's something that, you

00:07:13.730 --> 00:07:15.490
<v Speaker 1>know, a number of developers will be familiar

00:07:15.490 --> 00:07:17.805
<v Speaker 1>with. It's an event based system. You can

00:07:17.805 --> 00:07:19.565
<v Speaker 1>put events in. You can listen for events

00:07:19.565 --> 00:07:22.365
<v Speaker 1>and react to them. And that's a fairly

00:07:22.685 --> 00:07:24.365
<v Speaker 1>sort of, you know, widespread pattern in the

00:07:24.365 --> 00:07:25.485
<v Speaker 1>development world. So it made a lot of

00:07:25.485 --> 00:07:26.525
<v Speaker 1>sense for me when I looked at it

00:07:26.525 --> 00:07:28.765
<v Speaker 1>to say, actually, this this looks a lot

00:07:28.765 --> 00:07:30.285
<v Speaker 1>like some code I've written in the way

00:07:30.285 --> 00:07:32.230
<v Speaker 1>it works. I I've I've got a familiarity

00:07:32.230 --> 00:07:33.750
<v Speaker 1>with this. I'm not jumping into something and

00:07:33.750 --> 00:07:36.070
<v Speaker 1>not knowing what it is. On top of

00:07:36.070 --> 00:07:37.430
<v Speaker 1>that, a large part of it can be

00:07:37.430 --> 00:07:39.830
<v Speaker 1>configured through a UI, which is nice, but

00:07:39.830 --> 00:07:42.470
<v Speaker 1>also behind the scenes, it's YAML and Python.

00:07:42.870 --> 00:07:45.465
<v Speaker 1>So I can write Python scripts and execute

00:07:45.465 --> 00:07:47.305
<v Speaker 1>those as I want to. I can execute

00:07:47.305 --> 00:07:49.385
<v Speaker 1>command line scripts. I can configure stuff in

00:07:49.385 --> 00:07:50.025
<v Speaker 1>YAML.

00:07:50.264 --> 00:07:52.104
<v Speaker 1>It's a fairly friendly

00:07:52.104 --> 00:07:54.824
<v Speaker 1>way of doing it. It's still fairly techy.

00:07:54.824 --> 00:07:57.145
<v Speaker 1>I wouldn't expect someone without a background in

00:07:57.439 --> 00:07:59.199
<v Speaker 1>some technical capacity to get to grips with

00:07:59.199 --> 00:08:00.560
<v Speaker 1>it as fast, but I think that it

00:08:00.560 --> 00:08:03.280
<v Speaker 1>can be done because the UI has improved

00:08:03.280 --> 00:08:04.320
<v Speaker 1>recently that

00:08:04.639 --> 00:08:06.159
<v Speaker 1>a lot of it can be done without

00:08:06.159 --> 00:08:08.639
<v Speaker 1>actually having to dive under under the surface

00:08:08.639 --> 00:08:10.159
<v Speaker 1>and into code. You can just, you know,

00:08:10.159 --> 00:08:12.240
<v Speaker 1>click some UI options and it will and

00:08:12.400 --> 00:08:12.879
<v Speaker 1>it will work.

00:08:14.165 --> 00:08:16.725
<v Speaker 1>So what's really nice about Home Assistant is

00:08:16.725 --> 00:08:20.005
<v Speaker 1>it also provides a lot of developer tools.

00:08:20.325 --> 00:08:21.845
<v Speaker 1>So as a developer, I want to be

00:08:21.845 --> 00:08:22.965
<v Speaker 1>able to look at the event bus and

00:08:22.965 --> 00:08:24.885
<v Speaker 1>the state machine and the service registry and

00:08:24.885 --> 00:08:26.565
<v Speaker 1>sort of see what's what's happening with that.

00:08:27.750 --> 00:08:30.150
<v Speaker 1>I've got a number of different devices connected.

00:08:30.470 --> 00:08:33.429
<v Speaker 1>I've got devices from Philips Hue that are

00:08:33.990 --> 00:08:35.990
<v Speaker 1>based on Zigbee, but act through a Hue

00:08:35.990 --> 00:08:38.390
<v Speaker 1>gateway, which is a fairly common thing if

00:08:38.390 --> 00:08:40.635
<v Speaker 1>you've got Philips Hue lights. I now have

00:08:40.635 --> 00:08:43.034
<v Speaker 1>some sensors that are also Zigbee based sensors,

00:08:43.034 --> 00:08:44.795
<v Speaker 1>but they connect to a different gateway.

00:08:45.515 --> 00:08:47.195
<v Speaker 1>I have some IKEA

00:08:47.195 --> 00:08:49.435
<v Speaker 1>smart plugs, the the the trad free model.

00:08:49.435 --> 00:08:50.635
<v Speaker 1>They're also Zigbee,

00:08:51.195 --> 00:08:51.275
<v Speaker 1>they

00:08:52.120 --> 00:08:53.800
<v Speaker 1>connect to a different gateway.

00:08:55.080 --> 00:08:56.840
<v Speaker 1>So they're all the same sort of technology.

00:08:56.840 --> 00:08:59.320
<v Speaker 1>I'm generally sticking with Zigbee as a as

00:08:59.320 --> 00:09:00.280
<v Speaker 1>a technology

00:09:00.440 --> 00:09:01.480
<v Speaker 1>where possible,

00:09:01.800 --> 00:09:03.960
<v Speaker 1>but they all don't necessarily talk to each

00:09:03.960 --> 00:09:05.560
<v Speaker 1>other and that's kind of where Home Assistant

00:09:05.560 --> 00:09:07.320
<v Speaker 1>fits into the middle. It fits into that

00:09:07.320 --> 00:09:08.575
<v Speaker 1>section of, you know,

00:09:09.295 --> 00:09:11.775
<v Speaker 1>application and ecosystem one doesn't talk to application

00:09:11.775 --> 00:09:13.135
<v Speaker 1>or ecosystem two,

00:09:13.615 --> 00:09:15.215
<v Speaker 1>but they can both talk to Home Assistant,

00:09:15.215 --> 00:09:16.895
<v Speaker 1>and Home Assistant can delegate between the two

00:09:16.895 --> 00:09:18.895
<v Speaker 1>of them and and control them independently.

00:09:21.440 --> 00:09:23.360
<v Speaker 1>So with Home Assistant, I've got these sort

00:09:23.360 --> 00:09:24.960
<v Speaker 1>of various devices connected.

00:09:25.280 --> 00:09:27.840
<v Speaker 1>I have a number of in Home Assistant,

00:09:27.840 --> 00:09:29.760
<v Speaker 1>you have devices and entities.

00:09:30.080 --> 00:09:31.920
<v Speaker 1>So a device might be a

00:09:32.560 --> 00:09:34.764
<v Speaker 1>a switch. So that device will have a

00:09:34.764 --> 00:09:36.685
<v Speaker 1>state of on or off

00:09:36.925 --> 00:09:39.245
<v Speaker 1>or it could be a temperature sensor or

00:09:39.245 --> 00:09:42.045
<v Speaker 1>a humidity sensor so I've got one just

00:09:42.045 --> 00:09:44.125
<v Speaker 1>a little one here that say

00:09:45.165 --> 00:09:47.644
<v Speaker 1>it's an a Cara temperature and humidity sensor

00:09:47.870 --> 00:09:49.949
<v Speaker 1>So it will be one device, but within

00:09:49.949 --> 00:09:51.070
<v Speaker 1>this one device,

00:09:51.310 --> 00:09:53.550
<v Speaker 1>there are actually four separate entities. It will

00:09:53.550 --> 00:09:55.790
<v Speaker 1>tell me the temperature, the humidity,

00:09:56.029 --> 00:09:56.829
<v Speaker 1>the pressure,

00:09:57.070 --> 00:09:59.790
<v Speaker 1>as well as the battery level of that

00:09:59.790 --> 00:10:02.110
<v Speaker 1>particular device so I can monitor battery levels

00:10:02.110 --> 00:10:03.915
<v Speaker 1>and make sure that things aren't running out

00:10:03.915 --> 00:10:06.154
<v Speaker 1>of battery on me because Zigbee's a low

00:10:06.154 --> 00:10:08.395
<v Speaker 1>power system and a lot of the sort

00:10:08.395 --> 00:10:11.515
<v Speaker 1>of separate devices are battery powered, which is

00:10:11.515 --> 00:10:13.355
<v Speaker 1>nice because they can go anywhere, but you

00:10:13.355 --> 00:10:14.875
<v Speaker 1>need to make sure you're keeping track of

00:10:14.875 --> 00:10:15.515
<v Speaker 1>your

00:10:16.315 --> 00:10:18.475
<v Speaker 1>battery levels. Otherwise, things stop working.

00:10:19.590 --> 00:10:22.630
<v Speaker 1>So for example, with my reptiles, I have

00:10:23.510 --> 00:10:27.110
<v Speaker 1>some temperature and humidity sensors for mister Hubble,

00:10:27.110 --> 00:10:28.710
<v Speaker 1>which is one of my one of my

00:10:28.710 --> 00:10:29.430
<v Speaker 1>reptiles.

00:10:30.070 --> 00:10:31.990
<v Speaker 1>And I've got a sensor here

00:10:32.305 --> 00:10:34.545
<v Speaker 1>and it lives within the sensor domain.

00:10:34.945 --> 00:10:36.545
<v Speaker 1>And a domain in

00:10:37.105 --> 00:10:39.265
<v Speaker 1>Home Assistant is the type of device that

00:10:39.265 --> 00:10:41.825
<v Speaker 1>it is. So you'll have a sensor or

00:10:41.825 --> 00:10:42.465
<v Speaker 1>a

00:10:43.425 --> 00:10:44.705
<v Speaker 1>there will be a

00:10:45.025 --> 00:10:47.425
<v Speaker 1>switch domain for outlets and plugs that can

00:10:47.425 --> 00:10:49.560
<v Speaker 1>turn on and off. There's a light domain.

00:10:49.960 --> 00:10:51.800
<v Speaker 1>If you've got a binary sensor such as

00:10:51.800 --> 00:10:54.120
<v Speaker 1>a motion detector where it's either motion detected

00:10:54.120 --> 00:10:56.120
<v Speaker 1>or not, it's a binary state one or

00:10:56.120 --> 00:10:58.280
<v Speaker 1>zero, that will be a binary sensor.

00:10:58.600 --> 00:11:01.240
<v Speaker 1>And there's a whole range of different domains

00:11:01.240 --> 00:11:03.245
<v Speaker 1>that can exist with a home assistant. And

00:11:03.245 --> 00:11:04.845
<v Speaker 1>they're all referred to as the Internet of

00:11:04.845 --> 00:11:05.805
<v Speaker 1>things domains.

00:11:06.045 --> 00:11:08.125
<v Speaker 1>So it's kind of there's

00:11:08.205 --> 00:11:09.645
<v Speaker 1>dozens and dozens of them.

00:11:10.205 --> 00:11:11.565
<v Speaker 1>So here's a sensor

00:11:11.964 --> 00:11:13.805
<v Speaker 1>that is mister Hubble.

00:11:14.845 --> 00:11:16.860
<v Speaker 1>I can look at the historical data for

00:11:16.860 --> 00:11:18.540
<v Speaker 1>it so I can see that his temperature

00:11:18.540 --> 00:11:20.140
<v Speaker 1>currently is 25.2

00:11:20.140 --> 00:11:22.460
<v Speaker 1>degrees c which is about what I'd want

00:11:22.460 --> 00:11:24.380
<v Speaker 1>during the day that's nice to know I

00:11:24.380 --> 00:11:26.300
<v Speaker 1>can see the pattern of how it drops

00:11:26.300 --> 00:11:28.060
<v Speaker 1>overnight so at night it gets down to

00:11:28.060 --> 00:11:30.135
<v Speaker 1>around the 22 range which is you know,

00:11:30.135 --> 00:11:31.575
<v Speaker 1>about right as well sort of what I

00:11:31.575 --> 00:11:33.495
<v Speaker 1>want and then it starts climbing back up

00:11:33.495 --> 00:11:34.775
<v Speaker 1>in the morning when the lights turn back

00:11:34.775 --> 00:11:35.335
<v Speaker 1>on

00:11:35.735 --> 00:11:38.535
<v Speaker 1>and those lights are controlled through what's known

00:11:38.535 --> 00:11:40.375
<v Speaker 1>in Home Assistant as an automation

00:11:40.775 --> 00:11:43.495
<v Speaker 1>and automation is effectively a trigger and an

00:11:43.495 --> 00:11:46.510
<v Speaker 1>action with some optional conditions So you can

00:11:46.510 --> 00:11:49.150
<v Speaker 1>say the trigger is when this thing happens,

00:11:49.390 --> 00:11:52.190
<v Speaker 1>and that could be when the state changes

00:11:52.190 --> 00:11:54.670
<v Speaker 1>to a certain value. It could be

00:11:55.630 --> 00:11:57.390
<v Speaker 1>when an event is fired into the event

00:11:57.390 --> 00:11:59.855
<v Speaker 1>bus. It could be when a time is

00:11:59.855 --> 00:12:01.375
<v Speaker 1>reached, you know, at a certain point of

00:12:01.375 --> 00:12:02.975
<v Speaker 1>day, trigger this action.

00:12:03.774 --> 00:12:05.615
<v Speaker 1>A condition will sort of give you additional

00:12:05.615 --> 00:12:07.135
<v Speaker 1>things to say, you know what? I want

00:12:07.135 --> 00:12:09.375
<v Speaker 1>you to turn for example, my landing light

00:12:09.375 --> 00:12:10.654
<v Speaker 1>is on a motion sensor.

00:12:10.815 --> 00:12:11.935
<v Speaker 1>So I want you to turn the light

00:12:11.935 --> 00:12:13.055
<v Speaker 1>on when you detect motion,

00:12:14.050 --> 00:12:17.250
<v Speaker 1>but only do that after 09:00 in the

00:12:17.250 --> 00:12:20.370
<v Speaker 1>evening and before 07:00 in the morning, say.

00:12:20.930 --> 00:12:22.529
<v Speaker 1>So I can have these triggers that are

00:12:22.529 --> 00:12:23.890
<v Speaker 1>acted on conditionally,

00:12:24.209 --> 00:12:25.810
<v Speaker 1>and then they perform an action, and the

00:12:25.810 --> 00:12:28.645
<v Speaker 1>action would be turn this particular light on.

00:12:29.445 --> 00:12:30.005
<v Speaker 1>So

00:12:30.805 --> 00:12:34.085
<v Speaker 1>automations are configurable through a UI, which is

00:12:34.085 --> 00:12:36.485
<v Speaker 1>quite nice. I've got a number of automations

00:12:36.485 --> 00:12:38.245
<v Speaker 1>here to do various different things.

00:12:39.430 --> 00:12:41.430
<v Speaker 1>For example, if I look at my

00:12:41.910 --> 00:12:43.670
<v Speaker 1>search for landing light,

00:12:44.149 --> 00:12:46.709
<v Speaker 1>so turn on landing lights when motion detected.

00:12:47.190 --> 00:12:48.389
<v Speaker 1>At the minute, I've just got it sent

00:12:48.389 --> 00:12:50.790
<v Speaker 1>us up as a basic. When my binary

00:12:50.790 --> 00:12:53.750
<v Speaker 1>sensor of my landing motion sensor reaches the

00:12:53.750 --> 00:12:54.389
<v Speaker 1>on state,

00:12:55.045 --> 00:12:57.045
<v Speaker 1>then I want you to trigger an action.

00:12:57.045 --> 00:12:58.165
<v Speaker 1>So this is the trigger,

00:12:58.565 --> 00:12:59.925
<v Speaker 1>and the action is

00:13:00.405 --> 00:13:01.605
<v Speaker 1>it has a different number of things. You

00:13:01.605 --> 00:13:03.125
<v Speaker 1>can specify the type of action, so I

00:13:03.125 --> 00:13:05.365
<v Speaker 1>could also call a service. I could say,

00:13:05.365 --> 00:13:07.205
<v Speaker 1>when you detect motion, call the service and

00:13:07.205 --> 00:13:08.805
<v Speaker 1>send a notification to my phone to say

00:13:08.805 --> 00:13:10.085
<v Speaker 1>that you've detected some motion.

00:13:10.700 --> 00:13:12.860
<v Speaker 1>But in this case, I've got actually, I

00:13:12.860 --> 00:13:15.020
<v Speaker 1>want to activate the landing light and I

00:13:15.020 --> 00:13:16.700
<v Speaker 1>want to turn on the light level and

00:13:16.700 --> 00:13:18.700
<v Speaker 1>set the brightness to 10% because in the

00:13:18.700 --> 00:13:20.060
<v Speaker 1>middle of the night when I get up

00:13:20.060 --> 00:13:21.660
<v Speaker 1>and go to the toilet or, you know,

00:13:21.660 --> 00:13:23.340
<v Speaker 1>downstairs for a glass of water, I don't

00:13:23.340 --> 00:13:24.860
<v Speaker 1>want to be blinded by the lights turning

00:13:24.860 --> 00:13:27.545
<v Speaker 1>on at full brightness when it's dark because

00:13:27.545 --> 00:13:29.144
<v Speaker 1>I've had that before when I forgot to

00:13:29.144 --> 00:13:30.425
<v Speaker 1>configure it and it was not a pleasant

00:13:30.425 --> 00:13:31.865
<v Speaker 1>experience the first time that happened

00:13:32.745 --> 00:13:35.065
<v Speaker 1>so you live and learn and

00:13:35.065 --> 00:13:38.345
<v Speaker 1>then I've got a counter sort of automation

00:13:38.345 --> 00:13:40.550
<v Speaker 1>to that that says turn off the landing

00:13:40.550 --> 00:13:42.630
<v Speaker 1>lights when no motion is detected and what

00:13:42.630 --> 00:13:45.029
<v Speaker 1>that says is when the boat the binary

00:13:45.029 --> 00:13:46.149
<v Speaker 1>motion sensor

00:13:46.230 --> 00:13:47.190
<v Speaker 1>reaches

00:13:47.190 --> 00:13:50.149
<v Speaker 1>the off state for five minutes so I

00:13:50.149 --> 00:13:51.430
<v Speaker 1>don't want it to turn the lights off

00:13:51.430 --> 00:13:53.350
<v Speaker 1>as soon as it detects no motion because

00:13:53.694 --> 00:13:55.694
<v Speaker 1>that could happen a few seconds later and

00:13:55.694 --> 00:13:56.975
<v Speaker 1>it will be turning the lights on and

00:13:56.975 --> 00:13:57.935
<v Speaker 1>off repeatedly.

00:13:58.095 --> 00:14:00.254
<v Speaker 1>So after five minutes, if you haven't detected

00:14:00.254 --> 00:14:00.975
<v Speaker 1>motion,

00:14:01.134 --> 00:14:02.175
<v Speaker 1>then similarly

00:14:02.574 --> 00:14:04.975
<v Speaker 1>activate the landing light and turn it off.

00:14:05.855 --> 00:14:07.055
<v Speaker 1>So this kind of goes down to the

00:14:07.055 --> 00:14:09.600
<v Speaker 1>root of I'm now automating things that previously

00:14:09.600 --> 00:14:10.880
<v Speaker 1>I might have had a button for, you

00:14:10.880 --> 00:14:11.839
<v Speaker 1>know, I could have had a switch that

00:14:11.839 --> 00:14:14.160
<v Speaker 1>says turn the landing light on for 10%,

00:14:14.560 --> 00:14:16.000
<v Speaker 1>but I'd have to remember to press it

00:14:16.000 --> 00:14:17.360
<v Speaker 1>if I'm tired at the night, I don't

00:14:17.360 --> 00:14:18.640
<v Speaker 1>want to do that and it's the sort

00:14:18.640 --> 00:14:19.920
<v Speaker 1>of thing that can be automated to where

00:14:19.920 --> 00:14:21.440
<v Speaker 1>you don't have to think about it anymore.

00:14:23.345 --> 00:14:26.785
<v Speaker 1>So automations can pretty much do anything you

00:14:26.785 --> 00:14:27.265
<v Speaker 1>want.

00:14:27.745 --> 00:14:30.465
<v Speaker 1>We've got automations for buttons. So I've got

00:14:30.465 --> 00:14:32.225
<v Speaker 1>a button here. And when I press it,

00:14:32.225 --> 00:14:33.825
<v Speaker 1>I can have an automation run when this

00:14:33.825 --> 00:14:35.105
<v Speaker 1>particular event is detected.

00:14:36.540 --> 00:14:38.860
<v Speaker 1>I've gone down the route of configuring automations

00:14:38.860 --> 00:14:41.420
<v Speaker 1>for things like this weird little cube,

00:14:42.139 --> 00:14:44.060
<v Speaker 1>and this little cube emits events when you

00:14:44.060 --> 00:14:46.060
<v Speaker 1>change the side of the cube. So if

00:14:46.060 --> 00:14:47.579
<v Speaker 1>I change it from one side to another,

00:14:47.579 --> 00:14:48.860
<v Speaker 1>it will emit an event that I can

00:14:48.860 --> 00:14:51.295
<v Speaker 1>listen for and do something with. I've currently

00:14:51.295 --> 00:14:53.055
<v Speaker 1>got it configured to change the scene of

00:14:53.055 --> 00:14:54.495
<v Speaker 1>lights in my office so that when I

00:14:54.495 --> 00:14:56.015
<v Speaker 1>turn it to a certain side, the lights

00:14:56.015 --> 00:14:57.295
<v Speaker 1>in my office change.

00:14:57.535 --> 00:15:00.015
<v Speaker 1>It's completely pointless, but it's really cool and

00:15:00.015 --> 00:15:01.775
<v Speaker 1>isn't that what development is all about.

00:15:02.175 --> 00:15:03.695
<v Speaker 1>So I kind of figured that's that's a

00:15:03.695 --> 00:15:05.850
<v Speaker 1>way to do something interesting with something that

00:15:05.850 --> 00:15:07.450
<v Speaker 1>people might not be familiar with.

00:15:09.050 --> 00:15:10.490
<v Speaker 1>And I've got things like

00:15:12.010 --> 00:15:14.250
<v Speaker 1>mister Hubble needs a certain

00:15:14.410 --> 00:15:15.290
<v Speaker 1>temperature.

00:15:17.050 --> 00:15:19.295
<v Speaker 1>So if he gets too hot, I've got

00:15:19.295 --> 00:15:21.535
<v Speaker 1>an automation that says so he's got a

00:15:21.535 --> 00:15:23.935
<v Speaker 1>sensor of his temperature sensor and if it

00:15:23.935 --> 00:15:26.575
<v Speaker 1>gets above 30 degrees I want you to

00:15:26.575 --> 00:15:28.095
<v Speaker 1>notify my phone

00:15:28.495 --> 00:15:29.135
<v Speaker 1>that

00:15:29.615 --> 00:15:31.295
<v Speaker 1>his temperature is too hot

00:15:32.269 --> 00:15:34.350
<v Speaker 1>I might also then set it up eventually.

00:15:34.350 --> 00:15:36.110
<v Speaker 1>It hasn't reached 30 degrees, but I might

00:15:36.110 --> 00:15:37.629
<v Speaker 1>set it up to turn off his heating

00:15:37.629 --> 00:15:39.389
<v Speaker 1>lamp if it reaches 30 degrees because it's

00:15:39.389 --> 00:15:40.910
<v Speaker 1>clearly too hot and it doesn't need to

00:15:40.910 --> 00:15:41.389
<v Speaker 1>be.

00:15:41.790 --> 00:15:43.709
<v Speaker 1>But for now, he's never actually reached 30

00:15:43.709 --> 00:15:45.485
<v Speaker 1>degrees. This would be like a don't want

00:15:45.485 --> 00:15:46.685
<v Speaker 1>it to be there for more than, you

00:15:46.685 --> 00:15:47.964
<v Speaker 1>know, half an hour. So this is a

00:15:47.964 --> 00:15:49.565
<v Speaker 1>do something about it, but it's never reached

00:15:49.565 --> 00:15:50.925
<v Speaker 1>that level yet. So this is just a

00:15:50.765 --> 00:15:52.765
<v Speaker 1>you know, in case of emergency, let me

00:15:52.765 --> 00:15:54.605
<v Speaker 1>know that something something needs doing.

00:15:57.000 --> 00:15:58.520
<v Speaker 1>So this is kind of the core of

00:15:58.520 --> 00:16:01.160
<v Speaker 1>it. It's it's basically just different configurations of

00:16:01.160 --> 00:16:03.400
<v Speaker 1>when this happens, take this action and do

00:16:03.400 --> 00:16:04.280
<v Speaker 1>this other thing.

00:16:04.760 --> 00:16:06.680
<v Speaker 1>For me, it's it's kind of a bit

00:16:06.680 --> 00:16:08.440
<v Speaker 1>like Lego. You've got this core set of

00:16:08.440 --> 00:16:09.960
<v Speaker 1>Lego blocks, and it's kind of up to

00:16:09.960 --> 00:16:11.785
<v Speaker 1>you how you assemble them. You could do

00:16:11.785 --> 00:16:13.305
<v Speaker 1>something as simple as when a button is

00:16:13.305 --> 00:16:13.865
<v Speaker 1>pressed,

00:16:14.185 --> 00:16:16.425
<v Speaker 1>turn on a light. Or you could say,

00:16:16.505 --> 00:16:18.905
<v Speaker 1>when a button is pressed and this other

00:16:18.905 --> 00:16:22.185
<v Speaker 1>sensor is at this particular state, then alert

00:16:22.185 --> 00:16:24.585
<v Speaker 1>this device, turn on that light, play this

00:16:24.585 --> 00:16:25.865
<v Speaker 1>media over here, for example.

00:16:26.630 --> 00:16:28.390
<v Speaker 1>I have one set up for my doorbell.

00:16:28.390 --> 00:16:30.550
<v Speaker 1>My doorbell is a Zigbee button that when

00:16:30.550 --> 00:16:32.950
<v Speaker 1>you press it, broadcasts the doorbell sound through

00:16:32.950 --> 00:16:35.110
<v Speaker 1>my Google Home systems and then sends a

00:16:35.110 --> 00:16:36.710
<v Speaker 1>notification to my phone to tell me that

00:16:36.710 --> 00:16:38.630
<v Speaker 1>someone's at the door. And the reason I

00:16:38.630 --> 00:16:40.390
<v Speaker 1>put that in place was because I'm upstairs

00:16:40.390 --> 00:16:41.510
<v Speaker 1>at the back of my house in my

00:16:41.510 --> 00:16:44.275
<v Speaker 1>office, often wearing headphones when I'm working and

00:16:44.275 --> 00:16:46.195
<v Speaker 1>if the doorbell goes, never hear it.

00:16:46.595 --> 00:16:48.035
<v Speaker 1>So I needed something to kind of alert

00:16:48.035 --> 00:16:49.875
<v Speaker 1>me that, hey, someone's at the door. I

00:16:49.875 --> 00:16:52.115
<v Speaker 1>could potentially have it also trigger camera recording

00:16:52.115 --> 00:16:53.555
<v Speaker 1>because I've got a camera that looks over

00:16:53.555 --> 00:16:55.380
<v Speaker 1>our driveway. So I could say, you know,

00:16:55.380 --> 00:16:57.139
<v Speaker 1>when someone presses the doorbell, tell me that

00:16:57.139 --> 00:16:59.140
<v Speaker 1>someone's at the door, record a video,

00:16:59.700 --> 00:17:01.700
<v Speaker 1>and install that on my server somewhere.

00:17:01.940 --> 00:17:03.139
<v Speaker 1>And it's

00:17:03.139 --> 00:17:05.059
<v Speaker 1>kind of up to you what what you

00:17:05.059 --> 00:17:06.419
<v Speaker 1>want to do with it, and that's the

00:17:06.419 --> 00:17:08.339
<v Speaker 1>that's the flexibility and the freedom of Home

00:17:08.339 --> 00:17:08.980
<v Speaker 1>Assistant.

00:17:09.540 --> 00:17:11.595
<v Speaker 1>It's also part of the downside in that

00:17:11.595 --> 00:17:13.674
<v Speaker 1>you do have to configure everything yourself.

00:17:14.075 --> 00:17:16.315
<v Speaker 1>Previously, when I've used systems like Philips Hue

00:17:16.315 --> 00:17:17.835
<v Speaker 1>and whatnot, there's nice apps that you can

00:17:17.835 --> 00:17:19.515
<v Speaker 1>go in. You know, they're very generally pretty

00:17:19.515 --> 00:17:20.154
<v Speaker 1>slick.

00:17:20.315 --> 00:17:21.675
<v Speaker 1>They've got a lot of stuff built in

00:17:21.675 --> 00:17:22.795
<v Speaker 1>where you can just click a few buttons

00:17:22.795 --> 00:17:23.835
<v Speaker 1>and it will set something up.

00:17:24.809 --> 00:17:26.490
<v Speaker 1>But the problem with that is that then

00:17:26.490 --> 00:17:28.089
<v Speaker 1>you're limited to what they want you to

00:17:28.089 --> 00:17:28.569
<v Speaker 1>do.

00:17:29.049 --> 00:17:30.730
<v Speaker 1>With this, if it doesn't do what I

00:17:30.730 --> 00:17:32.330
<v Speaker 1>want it to do, I can probably write

00:17:32.330 --> 00:17:33.850
<v Speaker 1>some Python to get it to do that

00:17:33.850 --> 00:17:35.929
<v Speaker 1>for me under the surface. And I've actually

00:17:35.929 --> 00:17:37.845
<v Speaker 1>written a couple of custom Python scripts that

00:17:37.845 --> 00:17:39.845
<v Speaker 1>allow me to interact with my cameras to

00:17:39.845 --> 00:17:41.684
<v Speaker 1>turn on and off motion detection

00:17:41.765 --> 00:17:43.764
<v Speaker 1>because that wasn't something that was built in.

00:17:43.845 --> 00:17:45.285
<v Speaker 1>So I wrote a Python script that will

00:17:45.285 --> 00:17:47.525
<v Speaker 1>pause the camera response to tell me whether

00:17:47.525 --> 00:17:49.125
<v Speaker 1>or not motion detection is on or off

00:17:49.125 --> 00:17:50.885
<v Speaker 1>so I can detect that in a sensor

00:17:50.885 --> 00:17:52.649
<v Speaker 1>and have a look at it. And then

00:17:52.649 --> 00:17:53.609
<v Speaker 1>I've also got

00:17:54.169 --> 00:17:56.169
<v Speaker 1>a very basic script that just talks to

00:17:56.169 --> 00:17:57.450
<v Speaker 1>the camera URL

00:17:57.450 --> 00:17:58.889
<v Speaker 1>to update the

00:17:59.289 --> 00:18:02.409
<v Speaker 1>motion detection settings to turn motion detection on.

00:18:03.210 --> 00:18:05.289
<v Speaker 1>So it's kind of flexible, and that's what

00:18:05.289 --> 00:18:05.929
<v Speaker 1>I like about it.

00:18:07.505 --> 00:18:09.424
<v Speaker 1>So as a as an example,

00:18:09.905 --> 00:18:11.905
<v Speaker 1>we've got this event bus and that's kind

00:18:11.905 --> 00:18:14.384
<v Speaker 1>of the core of Home Assistant.

00:18:14.625 --> 00:18:16.705
<v Speaker 1>The Home Assistant developer documentation has got a

00:18:16.705 --> 00:18:18.785
<v Speaker 1>lot of diagrams and things around the architecture,

00:18:18.785 --> 00:18:20.450
<v Speaker 1>which is pretty good because they they like

00:18:20.450 --> 00:18:22.450
<v Speaker 1>describing it. It's it's an open source

00:18:22.690 --> 00:18:24.530
<v Speaker 1>platform built by developers.

00:18:24.850 --> 00:18:26.530
<v Speaker 1>They're they're very good into

00:18:26.610 --> 00:18:28.370
<v Speaker 1>in diving into the documentation on how to

00:18:28.370 --> 00:18:29.330
<v Speaker 1>configure things.

00:18:29.650 --> 00:18:31.810
<v Speaker 1>And even the YAML configuration for a lot

00:18:31.810 --> 00:18:32.610
<v Speaker 1>of the actual

00:18:33.775 --> 00:18:35.535
<v Speaker 1>integrations and things, it will give you all

00:18:35.535 --> 00:18:37.295
<v Speaker 1>the parameters and then give you some examples

00:18:37.295 --> 00:18:38.495
<v Speaker 1>of how you can use it, which I

00:18:38.495 --> 00:18:39.455
<v Speaker 1>always appreciate.

00:18:39.935 --> 00:18:41.455
<v Speaker 1>Because examples are kind of how I like

00:18:41.455 --> 00:18:43.455
<v Speaker 1>learning. I like seeing what okay. What's the

00:18:43.455 --> 00:18:44.495
<v Speaker 1>code I need to put in place to

00:18:44.495 --> 00:18:45.775
<v Speaker 1>get this to work? It might not be

00:18:45.775 --> 00:18:48.015
<v Speaker 1>perfect, but I can adjust it rather than

00:18:48.015 --> 00:18:50.070
<v Speaker 1>just saying, here's all the configuration keys, go

00:18:50.070 --> 00:18:51.430
<v Speaker 1>and work it out for yourself like some

00:18:51.430 --> 00:18:52.630
<v Speaker 1>documentation does.

00:18:53.590 --> 00:18:55.029
<v Speaker 1>So when I'm looking at my

00:18:55.590 --> 00:18:57.190
<v Speaker 1>my configuration file,

00:18:57.350 --> 00:18:59.670
<v Speaker 1>it's mostly just YAML. You can include separate

00:18:59.670 --> 00:19:00.309
<v Speaker 1>files,

00:19:00.550 --> 00:19:02.230
<v Speaker 1>so I can group lights together in this

00:19:02.230 --> 00:19:05.705
<v Speaker 1>groups file. I can configure InfluxDB integration with

00:19:05.705 --> 00:19:08.105
<v Speaker 1>this, you you know, database username and password,

00:19:08.424 --> 00:19:09.785
<v Speaker 1>and there's a separate add on that runs

00:19:09.785 --> 00:19:11.945
<v Speaker 1>InfluxDB for me. So the add on

00:19:12.424 --> 00:19:13.065
<v Speaker 1>setup

00:19:13.304 --> 00:19:15.145
<v Speaker 1>and runs InfluxDB,

00:19:15.145 --> 00:19:17.650
<v Speaker 1>the database itself. And then this integration is

00:19:17.650 --> 00:19:19.650
<v Speaker 1>just how Home Assistant knows how to talk

00:19:19.650 --> 00:19:21.890
<v Speaker 1>to it, which is nice because it then

00:19:21.890 --> 00:19:23.810
<v Speaker 1>means that I can potentially talk to different

00:19:23.810 --> 00:19:25.490
<v Speaker 1>ones. And I know that you found, David,

00:19:25.490 --> 00:19:25.970
<v Speaker 1>that

00:19:26.290 --> 00:19:29.170
<v Speaker 1>someone had put in a commit for InfluxDB

00:19:29.170 --> 00:19:30.610
<v Speaker 1>version two support recently.

00:19:31.054 --> 00:19:32.895
<v Speaker 1>So at some point soon, hopefully, that will

00:19:32.895 --> 00:19:34.414
<v Speaker 1>be in place and we can talk to

00:19:34.414 --> 00:19:37.134
<v Speaker 1>the InfluxDB cloud, which will be nice because

00:19:37.775 --> 00:19:38.975
<v Speaker 1>that means we can get a whole bunch

00:19:38.975 --> 00:19:40.655
<v Speaker 1>of new benefits that might not be supported

00:19:40.655 --> 00:19:41.934
<v Speaker 1>by the add on yet,

00:19:42.575 --> 00:19:44.060
<v Speaker 1>which is something that I

00:19:44.060 --> 00:19:45.500
<v Speaker 1>know isn't supported by the add on because

00:19:45.500 --> 00:19:47.820
<v Speaker 1>that's still running an older version of InfluxDB.

00:19:49.580 --> 00:19:50.940
<v Speaker 1>But with all this yaml, you can like

00:19:50.940 --> 00:19:52.380
<v Speaker 1>you say, you can configure kind of what

00:19:52.380 --> 00:19:53.900
<v Speaker 1>you want to do. So if I look

00:19:53.900 --> 00:19:56.654
<v Speaker 1>into my groups file, for example, I have

00:19:57.534 --> 00:19:59.214
<v Speaker 1>or my lights file even.

00:19:59.615 --> 00:20:01.774
<v Speaker 1>I've grouped some lights together. So I've got

00:20:02.095 --> 00:20:03.695
<v Speaker 1>each of my living room lights

00:20:03.934 --> 00:20:06.414
<v Speaker 1>are separate lights, but if I group them

00:20:06.414 --> 00:20:08.255
<v Speaker 1>together under the name of living room lights,

00:20:08.255 --> 00:20:09.774
<v Speaker 1>I can now control them with Home Assistant

00:20:09.774 --> 00:20:12.150
<v Speaker 1>as if they were one single entity. So

00:20:12.150 --> 00:20:13.750
<v Speaker 1>I can say turn on the living room

00:20:13.750 --> 00:20:14.390
<v Speaker 1>lights,

00:20:14.710 --> 00:20:16.150
<v Speaker 1>and they will act on all of those

00:20:16.150 --> 00:20:17.510
<v Speaker 1>lights within that group as if they were

00:20:17.510 --> 00:20:18.710
<v Speaker 1>one. I don't have to go through and

00:20:18.710 --> 00:20:20.310
<v Speaker 1>do it for each each of the lights

00:20:20.310 --> 00:20:22.550
<v Speaker 1>within there, which, for example, in my office

00:20:22.550 --> 00:20:25.294
<v Speaker 1>when I have seven lights in here would

00:20:25.294 --> 00:20:26.575
<v Speaker 1>be a bit of a pain to have

00:20:26.575 --> 00:20:27.775
<v Speaker 1>to go through and update each one of

00:20:27.775 --> 00:20:28.975
<v Speaker 1>them every single time.

00:20:29.294 --> 00:20:31.135
<v Speaker 1>So I've got them just grouped together as

00:20:31.135 --> 00:20:32.335
<v Speaker 1>a single entity.

00:20:34.255 --> 00:20:36.095
<v Speaker 1>So like I say, we've got this event

00:20:36.095 --> 00:20:37.855
<v Speaker 1>system that's the core of

00:20:39.294 --> 00:20:40.495
<v Speaker 1>core of Home Assistant.

00:20:41.180 --> 00:20:43.659
<v Speaker 1>And this particular switch, for example,

00:20:44.140 --> 00:20:46.860
<v Speaker 1>is connected through a gateway known as DCONS,

00:20:47.260 --> 00:20:48.860
<v Speaker 1>and it's a piece of software

00:20:49.660 --> 00:20:51.340
<v Speaker 1>and a piece of hardware called a con

00:20:51.340 --> 00:20:52.059
<v Speaker 1>b two,

00:20:52.860 --> 00:20:54.845
<v Speaker 1>which is a little Zigbee gateway that's plugged

00:20:54.845 --> 00:20:56.525
<v Speaker 1>into the USB port on my Raspberry Pi

00:20:56.525 --> 00:20:57.725
<v Speaker 1>that runs Home Assistant.

00:20:58.285 --> 00:21:00.685
<v Speaker 1>What that then allows me to do is

00:21:00.685 --> 00:21:03.405
<v Speaker 1>connect Zigbee devices to that gateway and then

00:21:03.405 --> 00:21:05.485
<v Speaker 1>listen to events from that gateway

00:21:05.725 --> 00:21:08.200
<v Speaker 1>whenever something happens. So I can listen to

00:21:08.200 --> 00:21:10.279
<v Speaker 1>events if I filter

00:21:10.279 --> 00:21:13.159
<v Speaker 1>these by decons event and start listening for

00:21:13.159 --> 00:21:15.640
<v Speaker 1>any decons events that come through if I

00:21:15.640 --> 00:21:18.120
<v Speaker 1>click this button I will get an event

00:21:18.120 --> 00:21:19.559
<v Speaker 1>that appears that says

00:21:20.200 --> 00:21:22.045
<v Speaker 1>what the event type is I've got a

00:21:22.045 --> 00:21:24.765
<v Speaker 1>decons event what the data of that particular

00:21:24.765 --> 00:21:26.445
<v Speaker 1>event is so I get the ID of

00:21:26.445 --> 00:21:28.365
<v Speaker 1>the device that it came from and I've

00:21:28.365 --> 00:21:29.965
<v Speaker 1>named this stream switch

00:21:31.565 --> 00:21:32.605
<v Speaker 1>unique ID

00:21:32.685 --> 00:21:35.280
<v Speaker 1>here and an event code Now the event

00:21:35.280 --> 00:21:37.360
<v Speaker 1>code can change depending on what happened.

00:21:38.080 --> 00:21:39.840
<v Speaker 1>So I we also get the time that

00:21:39.840 --> 00:21:42.000
<v Speaker 1>it was fired down to, you know, microseconds

00:21:42.000 --> 00:21:44.080
<v Speaker 1>level. So we get very, very high accuracy

00:21:44.080 --> 00:21:45.600
<v Speaker 1>on that if if if that's something that

00:21:45.600 --> 00:21:46.400
<v Speaker 1>you needed.

00:21:46.960 --> 00:21:49.440
<v Speaker 1>Now the nice part about this is that

00:21:49.675 --> 00:21:52.475
<v Speaker 1>this particular switch can emit multiple different events.

00:21:52.475 --> 00:21:54.875
<v Speaker 1>If I single press it, I get event

00:21:54.875 --> 00:21:56.315
<v Speaker 1>1002.

00:21:56.635 --> 00:21:58.075
<v Speaker 1>If I double press it,

00:21:58.395 --> 00:22:00.395
<v Speaker 1>I get event 1,004.

00:22:00.555 --> 00:22:02.410
<v Speaker 1>And if I press and hold it, I

00:22:02.410 --> 00:22:03.930
<v Speaker 1>get event 1,001

00:22:03.930 --> 00:22:06.490
<v Speaker 1>when I press it and event 1,003

00:22:06.490 --> 00:22:08.409
<v Speaker 1>when I release the switch.

00:22:08.650 --> 00:22:10.810
<v Speaker 1>So there's potentially four different events that I

00:22:10.810 --> 00:22:11.929
<v Speaker 1>can react on here.

00:22:12.250 --> 00:22:14.570
<v Speaker 1>In reality, it's only really three because press

00:22:14.570 --> 00:22:16.965
<v Speaker 1>and down. Press and hold, you get two

00:22:16.965 --> 00:22:18.485
<v Speaker 1>events for one for down and one for

00:22:18.485 --> 00:22:20.485
<v Speaker 1>up. But that could be used for something

00:22:20.485 --> 00:22:22.325
<v Speaker 1>like a when I press it and hold

00:22:22.325 --> 00:22:24.485
<v Speaker 1>it down, start recording something, and when it

00:22:24.485 --> 00:22:27.125
<v Speaker 1>releases, stop recording if you really want periodic

00:22:27.365 --> 00:22:29.045
<v Speaker 1>measurements or periodic

00:22:29.045 --> 00:22:29.925
<v Speaker 1>events happening.

00:22:30.990 --> 00:22:32.270
<v Speaker 1>But what that allows me to do is

00:22:32.270 --> 00:22:34.590
<v Speaker 1>I can listen for that particular event, and

00:22:34.590 --> 00:22:36.190
<v Speaker 1>now I can act on it and

00:22:36.430 --> 00:22:38.350
<v Speaker 1>run pretty much whatever I want.

00:22:38.990 --> 00:22:41.790
<v Speaker 1>So I've got this magic little light here.

00:22:42.795 --> 00:22:45.595
<v Speaker 1>This is a Philips Hue Go. It's a

00:22:45.595 --> 00:22:47.995
<v Speaker 1>Hue controlled Zigbee light bulb.

00:22:48.395 --> 00:22:50.875
<v Speaker 1>It's a little bowl. It's rechargeable.

00:22:50.955 --> 00:22:52.875
<v Speaker 1>It lasts a couple of hours on battery,

00:22:53.275 --> 00:22:55.035
<v Speaker 1>and it can also be plugged in. And

00:22:55.035 --> 00:22:56.395
<v Speaker 1>I usually have this up on a bookshelf

00:22:56.395 --> 00:22:59.080
<v Speaker 1>in my office for some accent lighting because

00:22:59.240 --> 00:23:00.679
<v Speaker 1>I'm a nerd and I like having all

00:23:00.679 --> 00:23:02.440
<v Speaker 1>that sort of lighting all over my office.

00:23:02.840 --> 00:23:03.399
<v Speaker 1>So

00:23:04.120 --> 00:23:05.880
<v Speaker 1>with kind of these two devices, I can

00:23:05.880 --> 00:23:07.559
<v Speaker 1>now get this button to do something with

00:23:07.559 --> 00:23:09.880
<v Speaker 1>this light. And for the purposes of this

00:23:09.880 --> 00:23:11.880
<v Speaker 1>sort of quick demo here, I'm basically going

00:23:11.880 --> 00:23:14.065
<v Speaker 1>to say, when this button is pressed, flash

00:23:14.065 --> 00:23:14.865
<v Speaker 1>this light.

00:23:15.265 --> 00:23:16.785
<v Speaker 1>And and that's pretty much all we're gonna

00:23:16.785 --> 00:23:19.425
<v Speaker 1>do. But configuring that is actually really quite

00:23:19.425 --> 00:23:21.265
<v Speaker 1>simple once you've got into it. So once

00:23:21.345 --> 00:23:23.105
<v Speaker 1>once I've worked out that the event for

00:23:23.105 --> 00:23:25.585
<v Speaker 1>pressing this button is event 1,002

00:23:25.585 --> 00:23:26.785
<v Speaker 1>on my stream switch,

00:23:27.480 --> 00:23:29.720
<v Speaker 1>I can go to my automation system,

00:23:30.200 --> 00:23:31.480
<v Speaker 1>and I can say click a little plus

00:23:31.480 --> 00:23:32.760
<v Speaker 1>button down here to say create me a

00:23:32.760 --> 00:23:33.559
<v Speaker 1>new automation.

00:23:33.800 --> 00:23:35.720
<v Speaker 1>And I've got some automations here, and they've

00:23:35.720 --> 00:23:37.560
<v Speaker 1>built this almond system, which is like a

00:23:37.560 --> 00:23:39.240
<v Speaker 1>voice assistant that can try and guess what

00:23:39.240 --> 00:23:41.085
<v Speaker 1>it is you're trying to do. You can

00:23:41.085 --> 00:23:42.605
<v Speaker 1>type out what you think it would you

00:23:42.605 --> 00:23:44.205
<v Speaker 1>would like it to do, and it will

00:23:44.205 --> 00:23:46.684
<v Speaker 1>try and put the automation together for you

00:23:46.684 --> 00:23:47.485
<v Speaker 1>automatically.

00:23:47.804 --> 00:23:49.245
<v Speaker 1>In reality, I haven't had a lot of

00:23:49.245 --> 00:23:51.085
<v Speaker 1>luck with that, so I tend to skip

00:23:51.085 --> 00:23:52.445
<v Speaker 1>past it and just go straight to the

00:23:52.445 --> 00:23:53.325
<v Speaker 1>creation of it myself.

00:23:54.360 --> 00:23:56.280
<v Speaker 1>So I'm gonna give this automation a name

00:23:56.280 --> 00:23:57.240
<v Speaker 1>and this is

00:23:57.640 --> 00:24:00.760
<v Speaker 1>when the stream switch is pressed,

00:24:01.080 --> 00:24:03.159
<v Speaker 1>flash the bowl light.

00:24:03.560 --> 00:24:05.240
<v Speaker 1>And that's the name we're gonna give this.

00:24:05.400 --> 00:24:06.855
<v Speaker 1>So the trigger type for this is an

00:24:06.855 --> 00:24:08.775
<v Speaker 1>event because I know I'm listening for a

00:24:08.775 --> 00:24:10.054
<v Speaker 1>stream switch event,

00:24:10.295 --> 00:24:12.455
<v Speaker 1>and it's gonna be event 1,002.

00:24:12.615 --> 00:24:14.695
<v Speaker 1>So I say the event the trigger type

00:24:14.695 --> 00:24:16.935
<v Speaker 1>is an event, and the event type is

00:24:16.935 --> 00:24:20.055
<v Speaker 1>a decons event because that's the platform that's

00:24:20.055 --> 00:24:22.760
<v Speaker 1>running this system, and that's the type of

00:24:22.760 --> 00:24:24.039
<v Speaker 1>event that I'm listening to.

00:24:24.600 --> 00:24:26.200
<v Speaker 1>Now this is just YAML in here, so

00:24:26.200 --> 00:24:27.640
<v Speaker 1>I'm just gonna paste in what I had

00:24:27.640 --> 00:24:28.200
<v Speaker 1>before.

00:24:28.520 --> 00:24:31.240
<v Speaker 1>But the data I'm looking for is

00:24:31.560 --> 00:24:33.800
<v Speaker 1>I'm looking for an ID of stream switch

00:24:33.885 --> 00:24:35.885
<v Speaker 1>and an event of 1,002. And if an

00:24:35.885 --> 00:24:38.285
<v Speaker 1>event a decon's event comes through with this

00:24:38.285 --> 00:24:41.085
<v Speaker 1>data inside it, that will trigger this particular

00:24:41.085 --> 00:24:41.804
<v Speaker 1>automation.

00:24:42.685 --> 00:24:44.445
<v Speaker 1>And what that allows me to then do

00:24:44.445 --> 00:24:47.980
<v Speaker 1>is say, right, I'm going to do something

00:24:47.980 --> 00:24:48.860
<v Speaker 1>with a device.

00:24:49.260 --> 00:24:51.100
<v Speaker 1>So the device I'm going to do is

00:24:51.100 --> 00:24:52.380
<v Speaker 1>my bookshelf

00:24:52.380 --> 00:24:53.980
<v Speaker 1>go is what it's called because these are

00:24:53.980 --> 00:24:55.179
<v Speaker 1>the Hugo lights.

00:24:55.340 --> 00:24:56.860
<v Speaker 1>I'd probably need to remade it to bold

00:24:56.860 --> 00:24:58.300
<v Speaker 1>because that's what I refer to them as.

00:24:59.054 --> 00:25:00.654
<v Speaker 1>But this is the light we're going to

00:25:00.654 --> 00:25:02.815
<v Speaker 1>be working with. And the action here I

00:25:02.815 --> 00:25:04.894
<v Speaker 1>can specify, I can either turn it on,

00:25:05.054 --> 00:25:07.054
<v Speaker 1>turn it off. I can toggle it. So

00:25:07.054 --> 00:25:08.495
<v Speaker 1>if it's on, it will turn off. And

00:25:08.495 --> 00:25:10.495
<v Speaker 1>if it's off, it will turn on. I

00:25:10.495 --> 00:25:12.414
<v Speaker 1>can increase the brightness. I can decrease the

00:25:12.414 --> 00:25:14.490
<v Speaker 1>brightness or I can flash it. And in

00:25:14.490 --> 00:25:16.010
<v Speaker 1>this case, we're going to flash it.

00:25:16.490 --> 00:25:17.850
<v Speaker 1>And what that will then do is that

00:25:17.850 --> 00:25:19.530
<v Speaker 1>will say, right, when this device is when

00:25:19.530 --> 00:25:20.730
<v Speaker 1>this button is pressed,

00:25:21.210 --> 00:25:22.570
<v Speaker 1>an event will get put into the event

00:25:22.570 --> 00:25:25.210
<v Speaker 1>bus. It will then this automation is then

00:25:25.210 --> 00:25:27.674
<v Speaker 1>listening for that particular event. And when it

00:25:27.674 --> 00:25:29.195
<v Speaker 1>does that, it will say to the event

00:25:29.195 --> 00:25:30.715
<v Speaker 1>bus, hey, I'm gonna put an event into

00:25:30.715 --> 00:25:32.075
<v Speaker 1>you that says you need to call the

00:25:32.075 --> 00:25:34.794
<v Speaker 1>light service on this particular light, and you

00:25:34.794 --> 00:25:36.635
<v Speaker 1>need to flash that light. And that's what

00:25:36.635 --> 00:25:37.755
<v Speaker 1>will happen is it will go into the

00:25:37.755 --> 00:25:39.490
<v Speaker 1>the event bus, put an event in, the

00:25:39.490 --> 00:25:41.169
<v Speaker 1>service registry will be listening for one of

00:25:41.169 --> 00:25:43.090
<v Speaker 1>those, that service, the light service will pick

00:25:43.090 --> 00:25:44.850
<v Speaker 1>it up, pull the the event out, say,

00:25:44.850 --> 00:25:46.049
<v Speaker 1>ah, I need to flash that light for

00:25:46.049 --> 00:25:47.409
<v Speaker 1>you, and it will flash the light for

00:25:47.409 --> 00:25:47.889
<v Speaker 1>me.

00:25:48.529 --> 00:25:51.169
<v Speaker 1>So once we've saved this, in theory, now

00:25:51.169 --> 00:25:53.250
<v Speaker 1>all I've done is I've put some YAML

00:25:53.250 --> 00:25:53.490
<v Speaker 1>in.

00:25:54.195 --> 00:25:56.115
<v Speaker 1>Behind the scenes, this action down here is

00:25:56.115 --> 00:25:58.515
<v Speaker 1>also just YAML. We can specify the device

00:25:58.515 --> 00:25:59.955
<v Speaker 1>IDs, the domains,

00:26:00.355 --> 00:26:02.275
<v Speaker 1>the entities, the type of thing we're doing

00:26:02.275 --> 00:26:03.955
<v Speaker 1>with it. So you can still edit YAML

00:26:03.955 --> 00:26:05.635
<v Speaker 1>if that's something you want to do. But

00:26:05.635 --> 00:26:07.395
<v Speaker 1>ultimately, you can just configure it through the

00:26:07.395 --> 00:26:09.500
<v Speaker 1>UI for the most part. So now this

00:26:09.500 --> 00:26:11.419
<v Speaker 1>is set up. In theory,

00:26:11.740 --> 00:26:14.220
<v Speaker 1>when I press this button, this light should

00:26:14.220 --> 00:26:14.859
<v Speaker 1>flash

00:26:18.059 --> 00:26:19.259
<v Speaker 1>and it's not.

00:26:19.580 --> 00:26:20.219
<v Speaker 1>So

00:26:20.539 --> 00:26:22.380
<v Speaker 1>the joys of all live demos, let's see

00:26:22.380 --> 00:26:23.659
<v Speaker 1>if we can work out what's happening.

00:26:24.415 --> 00:26:25.935
<v Speaker 1>So if I go back into my event

00:26:25.935 --> 00:26:28.654
<v Speaker 1>system and I start listening for decon's events,

00:26:29.375 --> 00:26:31.375
<v Speaker 1>if I listen for this particular event,

00:26:31.855 --> 00:26:34.095
<v Speaker 1>I'm still getting stream switch 1,002.

00:26:34.095 --> 00:26:35.295
<v Speaker 1>And I've pressed it and the light has

00:26:35.295 --> 00:26:38.240
<v Speaker 1>now flashed. What's probably happened there is when

00:26:38.240 --> 00:26:40.080
<v Speaker 1>you save an automation, you need to reload

00:26:40.080 --> 00:26:42.560
<v Speaker 1>the automation system within Home Assistant. If you

00:26:42.560 --> 00:26:43.760
<v Speaker 1>do it through the UI, it does that

00:26:43.760 --> 00:26:45.840
<v Speaker 1>automatically for you, but it can take thirty

00:26:45.840 --> 00:26:47.200
<v Speaker 1>seconds to a minute to do that for

00:26:47.200 --> 00:26:48.880
<v Speaker 1>you. So I think actually what was happening

00:26:48.880 --> 00:26:50.800
<v Speaker 1>is the automation system was just reloading in

00:26:50.800 --> 00:26:52.640
<v Speaker 1>the background. So if I press this button,

00:26:54.075 --> 00:26:55.434
<v Speaker 1>this light now flashes.

00:26:55.675 --> 00:26:57.674
<v Speaker 1>I can press it again, it flashes again,

00:26:57.675 --> 00:26:59.195
<v Speaker 1>I can press it again and it will

00:26:59.195 --> 00:27:00.154
<v Speaker 1>continue flashing.

00:27:00.554 --> 00:27:01.195
<v Speaker 1>So

00:27:01.515 --> 00:27:03.595
<v Speaker 1>automations in Home Assistant can be as simple

00:27:03.595 --> 00:27:05.995
<v Speaker 1>as, you know, click a button and flash

00:27:05.995 --> 00:27:08.000
<v Speaker 1>a light, or they can be much more

00:27:08.000 --> 00:27:09.279
<v Speaker 1>complicated in

00:27:11.600 --> 00:27:13.520
<v Speaker 1>in sort of, you know, actions that they

00:27:13.520 --> 00:27:15.280
<v Speaker 1>perform. I have one set up so that

00:27:15.280 --> 00:27:16.960
<v Speaker 1>when we leave home, it will turn off

00:27:16.960 --> 00:27:18.799
<v Speaker 1>all the lights for me, because my fiance

00:27:18.799 --> 00:27:20.880
<v Speaker 1>gets really annoyed that I leave the lights

00:27:20.880 --> 00:27:21.679
<v Speaker 1>on all the time.

00:27:22.865 --> 00:27:24.465
<v Speaker 1>They're LED lights, they don't use a lot

00:27:24.465 --> 00:27:26.144
<v Speaker 1>of power, but, you know, need to turn

00:27:26.144 --> 00:27:27.745
<v Speaker 1>them off when when we leave the house

00:27:27.745 --> 00:27:29.904
<v Speaker 1>and I'm a nightmare for leaving them on.

00:27:30.065 --> 00:27:31.985
<v Speaker 1>So we've got the Home Assistant app installed

00:27:31.985 --> 00:27:33.745
<v Speaker 1>on both of our phones, which has location

00:27:33.745 --> 00:27:34.065
<v Speaker 1>tracking,

00:27:34.559 --> 00:27:36.720
<v Speaker 1>and it can update my Home Assistant installation

00:27:36.720 --> 00:27:39.039
<v Speaker 1>to say, right, Matt and his fiance have

00:27:39.039 --> 00:27:39.759
<v Speaker 1>left home.

00:27:40.159 --> 00:27:42.000
<v Speaker 1>And then my automation runs to say, ah,

00:27:42.000 --> 00:27:44.000
<v Speaker 1>they've both left home. Therefore, I need to

00:27:44.000 --> 00:27:45.360
<v Speaker 1>go through and turn off all the lights

00:27:45.360 --> 00:27:47.039
<v Speaker 1>because they don't need them anymore.

00:27:48.799 --> 00:27:50.795
<v Speaker 1>So it can be as complicated as

00:27:51.275 --> 00:27:53.035
<v Speaker 1>location based tracking with

00:27:53.995 --> 00:27:56.715
<v Speaker 1>conditions and turning multiple devices off or

00:27:57.035 --> 00:28:00.155
<v Speaker 1>add this button, press this button and flash

00:28:00.155 --> 00:28:00.875
<v Speaker 1>a light.

00:28:01.835 --> 00:28:03.035
<v Speaker 1>That's kind of

00:28:03.370 --> 00:28:04.730
<v Speaker 1>at a basic level

00:28:05.290 --> 00:28:07.929
<v Speaker 1>what Home Assistant can do. There's a whole

00:28:07.929 --> 00:28:10.570
<v Speaker 1>community of add ons and plugins

00:28:11.049 --> 00:28:11.610
<v Speaker 1>and

00:28:12.010 --> 00:28:14.090
<v Speaker 1>systems that you might want to integrate with.

00:28:14.090 --> 00:28:14.650
<v Speaker 1>For example,

00:28:15.905 --> 00:28:17.985
<v Speaker 1>I've installed the InfluxDB add on through an

00:28:17.985 --> 00:28:19.345
<v Speaker 1>add on store. So I can go into

00:28:19.345 --> 00:28:21.504
<v Speaker 1>an add on store, click some buttons,

00:28:21.745 --> 00:28:24.225
<v Speaker 1>and a developer somewhere has set up a

00:28:24.225 --> 00:28:26.544
<v Speaker 1>repository that allows it to run an InfluxDB

00:28:26.544 --> 00:28:27.585
<v Speaker 1>container in the background.

00:28:28.190 --> 00:28:30.030
<v Speaker 1>And I've not had to do any management

00:28:30.030 --> 00:28:31.470
<v Speaker 1>of Docker on that. I can click a

00:28:31.470 --> 00:28:32.830
<v Speaker 1>button through a nice UI.

00:28:33.070 --> 00:28:34.830
<v Speaker 1>I could restart the service. I can stop

00:28:34.830 --> 00:28:35.390
<v Speaker 1>it. I could

00:28:36.030 --> 00:28:37.390
<v Speaker 1>I can configure it all through a nice

00:28:37.390 --> 00:28:39.070
<v Speaker 1>UI without having to manage it under the

00:28:39.070 --> 00:28:41.150
<v Speaker 1>surface. And that's kind of one of the

00:28:41.150 --> 00:28:42.845
<v Speaker 1>things I like about this is that I

00:28:42.845 --> 00:28:44.205
<v Speaker 1>wanted a bit more control,

00:28:44.525 --> 00:28:46.205
<v Speaker 1>but I have friends that run Home Assistant

00:28:46.205 --> 00:28:48.205
<v Speaker 1>in, you know, manually managed Docker

00:28:48.365 --> 00:28:49.164
<v Speaker 1>setups.

00:28:49.165 --> 00:28:51.085
<v Speaker 1>And I didn't quite want that level of

00:28:51.085 --> 00:28:53.565
<v Speaker 1>responsibility in managing my platform. I kind of

00:28:53.565 --> 00:28:54.285
<v Speaker 1>wanted to

00:28:54.740 --> 00:28:56.660
<v Speaker 1>put a memory card into a Raspberry Pi

00:28:56.660 --> 00:28:58.340
<v Speaker 1>connected to my network and just have it

00:28:58.340 --> 00:29:00.180
<v Speaker 1>work. And that's how I've installed Home Assistant.

00:29:00.180 --> 00:29:01.460
<v Speaker 1>And for the most part, that's how it's

00:29:01.460 --> 00:29:03.620
<v Speaker 1>working so far. And I'm quite happy with

00:29:03.620 --> 00:29:05.860
<v Speaker 1>that. But if you wanna get, you know,

00:29:06.260 --> 00:29:07.860
<v Speaker 1>down into it, you can run your own

00:29:07.860 --> 00:29:09.140
<v Speaker 1>Docker containers. You can run.

00:29:09.965 --> 00:29:11.565
<v Speaker 1>It runs in Python, so you can run

00:29:11.565 --> 00:29:12.365
<v Speaker 1>core

00:29:12.445 --> 00:29:14.205
<v Speaker 1>the core application itself

00:29:14.445 --> 00:29:16.125
<v Speaker 1>any way you want that can run Python

00:29:16.125 --> 00:29:17.164
<v Speaker 1>for the most part.

00:29:17.405 --> 00:29:19.164
<v Speaker 1>I personally just wasn't

00:29:19.805 --> 00:29:21.325
<v Speaker 1>happy to do that sort of thing because

00:29:21.325 --> 00:29:22.685
<v Speaker 1>I didn't want to spend the time doing

00:29:22.685 --> 00:29:22.925
<v Speaker 1>it.

00:29:23.490 --> 00:29:25.730
<v Speaker 1>And I didn't I didn't really realize that

00:29:25.730 --> 00:29:27.410
<v Speaker 1>actually I don't need to do that because

00:29:27.410 --> 00:29:28.690
<v Speaker 1>I don't think I'm gonna I would use

00:29:28.690 --> 00:29:30.930
<v Speaker 1>any advanced functionality of that. So I've not

00:29:30.930 --> 00:29:33.010
<v Speaker 1>I've not bothered. And so far, it's worked

00:29:33.010 --> 00:29:33.809
<v Speaker 1>out okay.

00:29:35.650 --> 00:29:35.970
<v Speaker 0>Nice.

00:29:38.695 --> 00:29:39.255
<v Speaker 0>So I have

00:29:40.294 --> 00:29:41.975
<v Speaker 0>I kinda one question that's popped in my

00:29:41.975 --> 00:29:43.895
<v Speaker 0>head right now is that Yeah. Obviously, I

00:29:43.895 --> 00:29:45.095
<v Speaker 0>wanna get this up and running on my

00:29:45.095 --> 00:29:48.215
<v Speaker 0>house now. I think Home Assistant seems pretty

00:29:48.215 --> 00:29:48.774
<v Speaker 0>cool.

00:29:49.095 --> 00:29:51.575
<v Speaker 0>So I install it on I've got a

00:29:51.575 --> 00:29:52.934
<v Speaker 0>a micro server

00:29:53.340 --> 00:29:54.539
<v Speaker 0>in the corner.

00:29:54.940 --> 00:29:56.700
<v Speaker 0>I get the containers running

00:29:57.260 --> 00:29:59.100
<v Speaker 0>and I go out and buy a new

00:29:59.100 --> 00:30:00.139
<v Speaker 0>hue bulb.

00:30:00.380 --> 00:30:02.379
<v Speaker 0>How do I add that to Home Assistant?

00:30:02.780 --> 00:30:05.020
<v Speaker 1>Right. So the way devices are added, it

00:30:05.020 --> 00:30:07.499
<v Speaker 1>it kinda depends on what platform you're using.

00:30:07.580 --> 00:30:09.275
<v Speaker 1>So if I go to my integrations, it

00:30:09.275 --> 00:30:10.875
<v Speaker 1>will show me all of the different integrations

00:30:10.875 --> 00:30:12.715
<v Speaker 1>I've got running for

00:30:13.195 --> 00:30:14.475
<v Speaker 1>various different devices.

00:30:14.715 --> 00:30:15.995
<v Speaker 1>So with Philips Hue,

00:30:16.315 --> 00:30:18.555
<v Speaker 1>you could connect it to any Zigbee gateway,

00:30:18.555 --> 00:30:20.155
<v Speaker 1>I believe. I think because they're Zigbee, they

00:30:20.155 --> 00:30:21.860
<v Speaker 1>can work with any gateway, but you can

00:30:21.860 --> 00:30:23.860
<v Speaker 1>also connect them to the Hue hub. So

00:30:24.100 --> 00:30:25.620
<v Speaker 1>the way Hue works is you buy, like,

00:30:25.620 --> 00:30:27.940
<v Speaker 1>a little home hub, and that's what you

00:30:27.940 --> 00:30:29.700
<v Speaker 1>set up and connect to your network.

00:30:29.940 --> 00:30:31.220
<v Speaker 1>And the app talks to the hub, and

00:30:31.220 --> 00:30:33.700
<v Speaker 1>the hub deals with the Zigbee network between

00:30:33.700 --> 00:30:34.580
<v Speaker 1>all of the other devices.

00:30:35.155 --> 00:30:36.835
<v Speaker 1>If I add a new device to that

00:30:36.835 --> 00:30:39.715
<v Speaker 1>hub, it and I've previously configured Philips Hue

00:30:39.715 --> 00:30:41.555
<v Speaker 1>for Home Assistant, it will automatically add it

00:30:41.555 --> 00:30:43.235
<v Speaker 1>as a new bulb within Home Assistant for

00:30:43.235 --> 00:30:43.715
<v Speaker 1>me.

00:30:44.435 --> 00:30:46.995
<v Speaker 1>When you first set up Home Assistant,

00:30:47.475 --> 00:30:49.155
<v Speaker 1>it's a really nice way it works is

00:30:49.279 --> 00:30:50.960
<v Speaker 1>it sets itself up. And then the first

00:30:50.960 --> 00:30:53.120
<v Speaker 1>thing it does is it says, hey, I've

00:30:53.120 --> 00:30:56.240
<v Speaker 1>discovered these various different devices and integrations on

00:30:56.240 --> 00:30:58.559
<v Speaker 1>your network. So mine said, hey, I can

00:30:58.559 --> 00:31:00.240
<v Speaker 1>see your router and I can give you

00:31:00.240 --> 00:31:01.760
<v Speaker 1>some stats for your router for your traffic

00:31:01.760 --> 00:31:03.115
<v Speaker 1>in and out if you want. I can

00:31:03.115 --> 00:31:05.195
<v Speaker 1>see that you've got a Google Chromecast on

00:31:05.195 --> 00:31:05.994
<v Speaker 1>your TV.

00:31:06.235 --> 00:31:07.595
<v Speaker 1>I can see that you've got Philips Hue

00:31:07.595 --> 00:31:08.315
<v Speaker 1>lights,

00:31:08.554 --> 00:31:09.674
<v Speaker 1>and it kind of said, hey. All of

00:31:09.674 --> 00:31:11.115
<v Speaker 1>these things need to be connected to me,

00:31:11.115 --> 00:31:13.115
<v Speaker 1>but I've discovered they're here. Here's how to

00:31:13.115 --> 00:31:15.115
<v Speaker 1>go and do it, and you click the

00:31:15.115 --> 00:31:16.955
<v Speaker 1>button on Home Assistant that says, I'm gonna

00:31:16.955 --> 00:31:18.760
<v Speaker 1>connect you to Philips Hue, and the Philips

00:31:18.760 --> 00:31:20.360
<v Speaker 1>Hue gateway says, hey. You need to press

00:31:20.360 --> 00:31:21.880
<v Speaker 1>the button on me to authorize this like

00:31:21.880 --> 00:31:23.559
<v Speaker 1>you would with most other devices with Philips

00:31:23.559 --> 00:31:25.400
<v Speaker 1>Hue. And what that then allows me to

00:31:25.400 --> 00:31:25.879
<v Speaker 1>do

00:31:26.280 --> 00:31:29.080
<v Speaker 1>is have it work by just connecting my

00:31:29.080 --> 00:31:31.025
<v Speaker 1>device to the Philips Hue gateway, at which

00:31:31.025 --> 00:31:33.585
<v Speaker 1>point it will automatically add entities into Home

00:31:33.585 --> 00:31:34.705
<v Speaker 1>Assistant for me.

00:31:37.585 --> 00:31:39.904
<v Speaker 1>So this is the the option here, enable

00:31:39.904 --> 00:31:41.985
<v Speaker 1>newly added entities. So when it's if it's

00:31:41.985 --> 00:31:42.385
<v Speaker 1>disabled,

00:31:43.200 --> 00:31:45.280
<v Speaker 1>entities for Philips Hue will not be added

00:31:45.280 --> 00:31:46.559
<v Speaker 1>to Home Assistant. So you can set it

00:31:46.559 --> 00:31:48.240
<v Speaker 1>up so that it doesn't automatically add things

00:31:48.240 --> 00:31:49.520
<v Speaker 1>to Home Assistant for you, and you have

00:31:49.520 --> 00:31:50.720
<v Speaker 1>to go and do that yourself.

00:31:51.040 --> 00:31:52.640
<v Speaker 1>But I've set mine up to say, if

00:31:52.640 --> 00:31:54.480
<v Speaker 1>I connect something to Philips Hue, I probably

00:31:54.480 --> 00:31:56.355
<v Speaker 1>want it in my Home Assistant system. So

00:31:56.355 --> 00:31:58.195
<v Speaker 1>anytime a device is added to Philips Hue,

00:31:58.195 --> 00:32:00.115
<v Speaker 1>automatically add it to Home Assistant for me,

00:32:00.115 --> 00:32:01.475
<v Speaker 1>and it will be available for me to

00:32:01.475 --> 00:32:03.075
<v Speaker 1>use as soon as it updates. It could

00:32:03.075 --> 00:32:04.115
<v Speaker 1>be a couple of minutes,

00:32:04.434 --> 00:32:06.035
<v Speaker 1>but typically, it will it will add it

00:32:06.035 --> 00:32:08.434
<v Speaker 1>to Home Assistant within, you know, five minutes

00:32:08.434 --> 00:32:09.794
<v Speaker 1>is typically what I found.

00:32:10.355 --> 00:32:11.475
<v Speaker 1>Usually, a lot lot sooner.

00:32:12.310 --> 00:32:13.990
<v Speaker 1>But for the most part, it just

00:32:14.230 --> 00:32:15.350
<v Speaker 1>it's a weird thing to say, you know,

00:32:15.350 --> 00:32:16.870
<v Speaker 1>when it just works. It's a bit like

00:32:16.870 --> 00:32:17.750
<v Speaker 1>magic sometimes. But

00:32:18.550 --> 00:32:20.950
<v Speaker 1>the auto discovery stuff is usually quite good.

00:32:22.630 --> 00:32:24.870
<v Speaker 1>It's got integrations for so many things. Like

00:32:24.870 --> 00:32:26.545
<v Speaker 1>I said, I've got I've got a Raspberry

00:32:26.545 --> 00:32:29.105
<v Speaker 1>Pi running, my Pi hole ad blocking system,

00:32:29.425 --> 00:32:31.025
<v Speaker 1>and I've set up an API key for

00:32:31.025 --> 00:32:33.185
<v Speaker 1>that. And Home Assistant can talk to it

00:32:33.185 --> 00:32:34.545
<v Speaker 1>and tell me the percentage of ads that

00:32:34.545 --> 00:32:35.905
<v Speaker 1>it's blocked for me today.

00:32:36.465 --> 00:32:38.385
<v Speaker 1>As well as now having an API key,

00:32:38.465 --> 00:32:39.985
<v Speaker 1>I've got a button that I can press

00:32:40.400 --> 00:32:42.320
<v Speaker 1>that will disable ad blocking for me for

00:32:42.320 --> 00:32:43.039
<v Speaker 1>five minutes.

00:32:44.000 --> 00:32:45.679
<v Speaker 1>So my other half, my fiance,

00:32:46.480 --> 00:32:48.559
<v Speaker 1>she does a lot of sewing and crafting

00:32:48.559 --> 00:32:50.960
<v Speaker 1>and stuff, and there's been some fabric websites

00:32:50.960 --> 00:32:52.905
<v Speaker 1>that she buys fabric from that have been

00:32:52.905 --> 00:32:54.905
<v Speaker 1>blocked by pie hole because for whatever reason

00:32:54.905 --> 00:32:56.265
<v Speaker 1>it believes that they are

00:32:56.745 --> 00:32:58.905
<v Speaker 1>blacklisted domains. When in reality, they're not. They're

00:32:58.905 --> 00:33:00.025
<v Speaker 1>just a fabric website.

00:33:01.065 --> 00:33:03.065
<v Speaker 1>But she she's not gonna necessarily know how

00:33:03.065 --> 00:33:04.585
<v Speaker 1>to go into pie hole and configure the

00:33:04.585 --> 00:33:06.429
<v Speaker 1>allow list to put that domain on and

00:33:06.429 --> 00:33:08.590
<v Speaker 1>allow it through. So I I've set up

00:33:08.590 --> 00:33:10.750
<v Speaker 1>a a button and also Google Home Assistant

00:33:10.750 --> 00:33:12.509
<v Speaker 1>can do it Google Home can do it

00:33:12.509 --> 00:33:14.830
<v Speaker 1>where you can say, you know, okay, Google,

00:33:14.830 --> 00:33:16.429
<v Speaker 1>turn off ad blocking and it will disable

00:33:16.429 --> 00:33:17.870
<v Speaker 1>ad blocking for five minutes for me.

00:33:18.815 --> 00:33:20.175
<v Speaker 1>So I can turn off that sort of

00:33:20.175 --> 00:33:21.375
<v Speaker 1>thing as well if I were to need

00:33:21.375 --> 00:33:21.855
<v Speaker 1>it.

00:33:22.735 --> 00:33:24.895
<v Speaker 1>We've got things like the the mobile apps.

00:33:24.895 --> 00:33:25.855
<v Speaker 1>You can see I've got it on an

00:33:25.855 --> 00:33:28.095
<v Speaker 1>iPad, my fiance's phone, my phone.

00:33:28.495 --> 00:33:30.895
<v Speaker 1>I've got Font Awesome integrated into Home Assistant

00:33:30.895 --> 00:33:32.575
<v Speaker 1>as well because someone built an integration for

00:33:32.575 --> 00:33:34.015
<v Speaker 1>that so that I can use different icons.

00:33:35.030 --> 00:33:36.309
<v Speaker 1>When I first set it up because it

00:33:36.309 --> 00:33:37.830
<v Speaker 1>was based on the reptiles, I was really

00:33:37.830 --> 00:33:39.350
<v Speaker 1>annoyed to find that the default icon set

00:33:39.350 --> 00:33:41.110
<v Speaker 1>for Home Assistant didn't have a reptile in

00:33:41.110 --> 00:33:42.710
<v Speaker 1>it. So I was like, well, this this

00:33:42.710 --> 00:33:43.830
<v Speaker 1>this won't do.

00:33:44.470 --> 00:33:46.549
<v Speaker 1>And typical developer fashion, I went, oh, someone

00:33:46.549 --> 00:33:48.265
<v Speaker 1>else has done it for And they've put

00:33:48.265 --> 00:33:49.785
<v Speaker 1>full awesome in so I can have different

00:33:49.785 --> 00:33:51.785
<v Speaker 1>icons for things. For example, on my dashboard

00:33:51.785 --> 00:33:52.424
<v Speaker 1>here,

00:33:53.065 --> 00:33:55.385
<v Speaker 1>I've got my home and my dragon

00:33:55.545 --> 00:33:57.785
<v Speaker 1>and my office and my cameras. So if

00:33:57.785 --> 00:33:58.985
<v Speaker 1>I click on my dragon, I can see

00:33:58.985 --> 00:34:00.345
<v Speaker 1>that this is all the status of my

00:34:00.345 --> 00:34:02.420
<v Speaker 1>reptiles. So I can see their temperature and

00:34:02.420 --> 00:34:04.980
<v Speaker 1>their humidity is where where relevant

00:34:06.180 --> 00:34:08.580
<v Speaker 1>and keep track of their their statuses as

00:34:08.580 --> 00:34:10.260
<v Speaker 1>well as the insects that we're keeping as

00:34:10.260 --> 00:34:10.660
<v Speaker 1>well.

00:34:11.699 --> 00:34:12.340
<v Speaker 1>So

00:34:12.580 --> 00:34:14.260
<v Speaker 1>adding devices is fairly simple

00:34:14.784 --> 00:34:16.545
<v Speaker 1>If you've got like a Hue gateway.

00:34:16.945 --> 00:34:19.025
<v Speaker 1>For something like this, which is a button

00:34:19.025 --> 00:34:21.985
<v Speaker 1>that uses the con b two integration,

00:34:22.385 --> 00:34:24.864
<v Speaker 1>it's slightly different because that's a third party

00:34:24.864 --> 00:34:27.425
<v Speaker 1>Zigbee gateway and it's it's a bit more

00:34:27.425 --> 00:34:29.719
<v Speaker 1>of work to get involved. But what you

00:34:29.719 --> 00:34:31.079
<v Speaker 1>do is you install the add on for

00:34:31.079 --> 00:34:32.280
<v Speaker 1>it and then I can go into my

00:34:32.280 --> 00:34:33.000
<v Speaker 1>Deacons

00:34:33.799 --> 00:34:34.520
<v Speaker 1>integration.

00:34:35.079 --> 00:34:36.600
<v Speaker 1>I can go into my

00:34:36.839 --> 00:34:38.839
<v Speaker 1>h a con b device. It's just my

00:34:38.839 --> 00:34:40.920
<v Speaker 1>Home Assistant Con b gateway effectively that I've

00:34:40.920 --> 00:34:42.760
<v Speaker 1>named this connected to my Raspberry Pi.

00:34:43.864 --> 00:34:45.385
<v Speaker 1>I can put in my password,

00:34:45.704 --> 00:34:46.665
<v Speaker 1>and I can say

00:34:47.464 --> 00:34:48.505
<v Speaker 1>within here,

00:34:49.065 --> 00:34:51.385
<v Speaker 1>I've got all my lights connected. So this

00:34:51.545 --> 00:34:52.185
<v Speaker 1>with

00:34:52.344 --> 00:34:55.224
<v Speaker 1>IKEA trade free, the control outlets,

00:34:55.224 --> 00:34:57.704
<v Speaker 1>the little, like, UK plug socket plugs that

00:34:57.704 --> 00:34:59.305
<v Speaker 1>are Zigbee enabled and can turn

00:34:59.880 --> 00:35:02.440
<v Speaker 1>mains powered devices on and off. They come

00:35:02.440 --> 00:35:04.280
<v Speaker 1>they come as lights. They that's what they

00:35:04.280 --> 00:35:06.280
<v Speaker 1>count as. But then I've got my switches,

00:35:06.280 --> 00:35:07.960
<v Speaker 1>which are my little buttons for my bedside

00:35:07.960 --> 00:35:09.720
<v Speaker 1>switch and my office and my doorbell,

00:35:11.325 --> 00:35:13.484
<v Speaker 1>and then my sensors as well for my

00:35:13.484 --> 00:35:16.045
<v Speaker 1>temperature and humidity and my motion sensing. And

00:35:16.045 --> 00:35:17.325
<v Speaker 1>if I wanted to add a new device

00:35:17.325 --> 00:35:19.325
<v Speaker 1>for this or a sensor, you click this

00:35:19.325 --> 00:35:21.405
<v Speaker 1>little button that says add new sensor. What

00:35:21.405 --> 00:35:23.165
<v Speaker 1>type is it? So I typically mine are

00:35:23.165 --> 00:35:25.885
<v Speaker 1>other because I'm using the Xiaomi Aqara sensors.

00:35:26.470 --> 00:35:28.070
<v Speaker 1>And then it will effectively say, right. I'm

00:35:28.070 --> 00:35:30.550
<v Speaker 1>now looking for new devices for three minutes.

00:35:30.630 --> 00:35:32.070
<v Speaker 1>And you press the pairing button on the

00:35:32.070 --> 00:35:34.390
<v Speaker 1>device, it will appear here and you can

00:35:34.390 --> 00:35:36.710
<v Speaker 1>say, cool. Connected. Connect this device to me

00:35:36.710 --> 00:35:38.885
<v Speaker 1>and it's then paired to your gateway and

00:35:38.885 --> 00:35:40.885
<v Speaker 1>it will just then within a few minutes

00:35:40.885 --> 00:35:42.724
<v Speaker 1>be available within Home Assistant as well to

00:35:42.724 --> 00:35:43.285
<v Speaker 1>use.

00:35:44.565 --> 00:35:46.805
<v Speaker 1>So depending on what device you're using can

00:35:46.805 --> 00:35:48.244
<v Speaker 1>depend on how to configure it, but for

00:35:48.244 --> 00:35:50.565
<v Speaker 1>the most part, it's not too bad. I

00:35:50.565 --> 00:35:51.685
<v Speaker 1>haven't found it

00:35:52.244 --> 00:35:54.620
<v Speaker 1>problematic in any way. The biggest one was

00:35:54.620 --> 00:35:56.060
<v Speaker 1>just, you know, these can take some time.

00:35:56.060 --> 00:35:57.660
<v Speaker 1>If I'm adding, you know, eight of these,

00:35:57.660 --> 00:35:59.340
<v Speaker 1>it can take me ten minutes because I've

00:35:59.340 --> 00:36:00.540
<v Speaker 1>gotta sit and press one and then wait

00:36:00.540 --> 00:36:01.420
<v Speaker 1>for the next one.

00:36:02.620 --> 00:36:04.220
<v Speaker 1>But I don't know of any way that

00:36:04.220 --> 00:36:06.060
<v Speaker 1>they would solve that because that's gonna be

00:36:06.060 --> 00:36:08.140
<v Speaker 1>the case no matter what ecosystem you're using.

00:36:10.135 --> 00:36:11.255
<v Speaker 0>Okay. Perfect.

00:36:11.815 --> 00:36:13.015
<v Speaker 0>Very cool setup.

00:36:13.815 --> 00:36:15.815
<v Speaker 0>So these little graphs we've got here, they're

00:36:15.815 --> 00:36:17.655
<v Speaker 0>not being delivered by InfluxDB.

00:36:17.655 --> 00:36:22.135
<v Speaker 0>Is that correct? Not currently. No. These are

00:36:21.170 --> 00:36:23.570
<v Speaker 1>these are custom graphs. They look at the

00:36:23.570 --> 00:36:25.730
<v Speaker 1>historical date. And the reason they're there is

00:36:25.730 --> 00:36:28.210
<v Speaker 1>because I was looking through, for example, this

00:36:28.210 --> 00:36:30.130
<v Speaker 1>sensor and this is the raw data. This

00:36:30.130 --> 00:36:32.210
<v Speaker 1>is just every new plot is a is

00:36:32.210 --> 00:36:33.570
<v Speaker 1>a raw data. And I could get this

00:36:33.570 --> 00:36:34.050
<v Speaker 1>to display,

00:36:34.674 --> 00:36:36.914
<v Speaker 1>but in my shallow nature, I decided I

00:36:36.914 --> 00:36:38.275
<v Speaker 1>didn't like the way this looked

00:36:39.154 --> 00:36:41.474
<v Speaker 1>and so I wanted something different. So I

00:36:41.474 --> 00:36:43.795
<v Speaker 1>found there's a different card. It's a custom

00:36:43.795 --> 00:36:44.915
<v Speaker 1>UI component

00:36:45.154 --> 00:36:46.595
<v Speaker 1>and what it allows me to do is

00:36:46.595 --> 00:36:48.595
<v Speaker 1>specify color thresholds. So I can say that

00:36:48.595 --> 00:36:50.500
<v Speaker 1>when the color is either too high or

00:36:50.500 --> 00:36:52.420
<v Speaker 1>too low sorry. The value is either too

00:36:52.420 --> 00:36:53.859
<v Speaker 1>high or too low, then change the color

00:36:53.859 --> 00:36:54.579
<v Speaker 1>for me

00:36:54.980 --> 00:36:56.660
<v Speaker 1>as well as telling it how many points

00:36:56.660 --> 00:36:58.180
<v Speaker 1>per hour I want. So now it's doing

00:36:58.180 --> 00:37:00.339
<v Speaker 1>one point every two hours. But if I

00:37:00.339 --> 00:37:02.259
<v Speaker 1>specify four, I get a much more

00:37:03.735 --> 00:37:05.575
<v Speaker 1>accurate graph of up to date data because

00:37:05.575 --> 00:37:07.095
<v Speaker 1>I can specify a lot more points per

00:37:07.095 --> 00:37:08.535
<v Speaker 1>hour if I require that.

00:37:09.655 --> 00:37:10.855
<v Speaker 1>So I can I kind of just wanted

00:37:10.855 --> 00:37:12.455
<v Speaker 1>something that I could see at a glance?

00:37:12.775 --> 00:37:15.735
<v Speaker 1>I I had previously used Grafana and InfluxDB

00:37:15.735 --> 00:37:16.375
<v Speaker 1>because

00:37:16.560 --> 00:37:18.080
<v Speaker 1>all of my data is being sent into

00:37:18.080 --> 00:37:20.640
<v Speaker 1>InfluxDB and Home Assistant. Every state change gets

00:37:20.640 --> 00:37:22.000
<v Speaker 1>put into InfluxDB,

00:37:22.160 --> 00:37:23.600
<v Speaker 1>and that's just part of the in the

00:37:23.600 --> 00:37:25.600
<v Speaker 1>integration that Home Assistant can have with it.

00:37:26.560 --> 00:37:28.640
<v Speaker 1>I was using Grafana to actually display the

00:37:28.640 --> 00:37:29.200
<v Speaker 1>graphs as well,

00:37:30.135 --> 00:37:32.295
<v Speaker 1>but that's a limitation with Grafana is that

00:37:32.295 --> 00:37:34.295
<v Speaker 1>within Home Assistant, it has to be if

00:37:34.295 --> 00:37:35.735
<v Speaker 1>I want a card like this that just

00:37:35.735 --> 00:37:37.095
<v Speaker 1>displays it at a glance,

00:37:37.335 --> 00:37:39.415
<v Speaker 1>it had to be embedded via an iframe,

00:37:39.735 --> 00:37:41.255
<v Speaker 1>and that then meant that it was a

00:37:41.255 --> 00:37:42.055
<v Speaker 1>locally

00:37:42.339 --> 00:37:44.339
<v Speaker 1>referenced iframe. And when I tried to access

00:37:44.339 --> 00:37:46.260
<v Speaker 1>it remotely, it wouldn't load because it couldn't

00:37:46.260 --> 00:37:48.180
<v Speaker 1>resolve the homeassistant.local

00:37:48.180 --> 00:37:50.180
<v Speaker 1>domain name. And I had some issues that

00:37:50.180 --> 00:37:51.460
<v Speaker 1>I was I sort of said, you know

00:37:51.460 --> 00:37:53.540
<v Speaker 1>what? I don't think that's gonna quite work

00:37:53.540 --> 00:37:55.540
<v Speaker 1>for me just yet, so I will I

00:37:55.540 --> 00:37:56.260
<v Speaker 1>will leave it be.

00:37:58.155 --> 00:37:59.915
<v Speaker 1>But I am still running InfluxDB and it's

00:37:59.915 --> 00:38:01.275
<v Speaker 1>just hovering up all the data in my

00:38:01.275 --> 00:38:02.235
<v Speaker 1>system currently.

00:38:03.195 --> 00:38:04.955
<v Speaker 0>Shall we take a look at that?

00:38:05.275 --> 00:38:06.315
<v Speaker 1>Sure. Yeah.

00:38:07.435 --> 00:38:08.875
<v Speaker 1>So within InfluxDB,

00:38:10.990 --> 00:38:13.070
<v Speaker 1>Home Assistant kind of pushes stuff to it

00:38:13.070 --> 00:38:15.470
<v Speaker 1>however it it wants really. So I've I've

00:38:15.470 --> 00:38:17.230
<v Speaker 1>got it set up using the auto gen

00:38:18.430 --> 00:38:19.470
<v Speaker 1>retention period.

00:38:21.070 --> 00:38:23.390
<v Speaker 1>And the measurement is a percentage, for example,

00:38:23.390 --> 00:38:26.565
<v Speaker 1>for a humidity sensor. So the humidity sensor

00:38:26.565 --> 00:38:27.845
<v Speaker 1>for mister Hubble,

00:38:28.005 --> 00:38:29.205
<v Speaker 1>I want to look at the value and

00:38:29.205 --> 00:38:30.805
<v Speaker 1>it's within the percentage measurement.

00:38:31.365 --> 00:38:32.965
<v Speaker 1>This is kind of the query over the

00:38:32.965 --> 00:38:35.285
<v Speaker 1>last twenty four hours. So I can kinda

00:38:35.285 --> 00:38:36.645
<v Speaker 1>see that, ah, at its peak, it was

00:38:36.645 --> 00:38:38.645
<v Speaker 1>about, you know, 74

00:38:38.645 --> 00:38:39.525
<v Speaker 1>ish percent.

00:38:39.845 --> 00:38:42.350
<v Speaker 1>And on its lowest, it's just below 60%,

00:38:42.350 --> 00:38:44.030
<v Speaker 1>which for me, I can kinda look at

00:38:44.030 --> 00:38:45.470
<v Speaker 1>that and go, you know what? That's that's

00:38:45.470 --> 00:38:48.430
<v Speaker 1>about right. Mister Hubble wants between 6080%

00:38:48.430 --> 00:38:49.150
<v Speaker 1>humidity,

00:38:49.390 --> 00:38:51.550
<v Speaker 1>so I'm keeping that within an acceptable range.

00:38:51.550 --> 00:38:52.750
<v Speaker 1>Outside of that, it's not gonna do him

00:38:52.750 --> 00:38:54.030
<v Speaker 1>too much damage as long as it's not

00:38:54.030 --> 00:38:55.230
<v Speaker 1>dropping too low for too long.

00:38:55.974 --> 00:38:57.895
<v Speaker 1>But within this range, I can see that

00:38:57.895 --> 00:38:59.735
<v Speaker 1>this is a this is an acceptable

00:39:00.695 --> 00:39:01.495
<v Speaker 1>period.

00:39:02.454 --> 00:39:04.535
<v Speaker 1>The thing that I'm looking at eventually doing,

00:39:04.535 --> 00:39:05.895
<v Speaker 1>which is something that we've kind of discussed

00:39:05.895 --> 00:39:08.214
<v Speaker 1>with the InfluxDB two stuff is being able

00:39:08.214 --> 00:39:10.550
<v Speaker 1>to look at what the average humidity at

00:39:10.550 --> 00:39:12.710
<v Speaker 1>night is versus during the day. Because when

00:39:12.710 --> 00:39:14.230
<v Speaker 1>I've looked at his graphs in the past,

00:39:14.230 --> 00:39:15.750
<v Speaker 1>I've noticed that at night,

00:39:16.470 --> 00:39:18.470
<v Speaker 1>his humidity goes up because there's not as

00:39:18.470 --> 00:39:21.110
<v Speaker 1>much light reducing and heat reducing the humidity

00:39:21.110 --> 00:39:23.255
<v Speaker 1>within the tank. So I I was just

00:39:23.255 --> 00:39:25.335
<v Speaker 1>sort of really curious to see, like, okay.

00:39:25.335 --> 00:39:25.895
<v Speaker 1>Between

00:39:26.295 --> 00:39:28.535
<v Speaker 1>eight eight 8PM and 7AM,

00:39:28.935 --> 00:39:31.495
<v Speaker 1>what does the average humidity look like versus

00:39:31.495 --> 00:39:33.895
<v Speaker 1>7AM to 8PM during the day? Because then

00:39:33.895 --> 00:39:35.175
<v Speaker 1>I could kinda look

00:39:35.175 --> 00:39:37.890
<v Speaker 1>at, at night his humidity goes up by,

00:39:37.890 --> 00:39:40.050
<v Speaker 1>I don't know, it might be 10%.

00:39:40.050 --> 00:39:41.650
<v Speaker 1>I I honestly couldn't tell you.

00:39:42.130 --> 00:39:43.890
<v Speaker 1>But that then could then could potentially give

00:39:43.890 --> 00:39:46.050
<v Speaker 1>me some more insights into how I might

00:39:46.050 --> 00:39:48.690
<v Speaker 1>want to control his humidity his misting system

00:39:48.690 --> 00:39:50.875
<v Speaker 1>to keep the humidity up. Maybe I reduce

00:39:50.875 --> 00:39:52.635
<v Speaker 1>the frequency at night because that will be

00:39:52.635 --> 00:39:53.195
<v Speaker 1>better.

00:39:54.235 --> 00:39:55.515
<v Speaker 1>I could set it up to be sensor

00:39:55.515 --> 00:39:57.435
<v Speaker 1>based, but at the minute, it's just a

00:39:57.915 --> 00:39:59.515
<v Speaker 1>it's a device that's got a timer built

00:39:59.515 --> 00:40:01.035
<v Speaker 1>onto it. It's not actually connected to any

00:40:01.035 --> 00:40:03.275
<v Speaker 1>of my home automation stuff because we haven't

00:40:03.275 --> 00:40:04.635
<v Speaker 1>sort of looked at that as an option

00:40:04.635 --> 00:40:04.875
<v Speaker 1>yet.

00:40:06.609 --> 00:40:07.970
<v Speaker 1>But, yes, similarly, if I want to look

00:40:07.970 --> 00:40:10.369
<v Speaker 1>at the the temperatures for someone like mister

00:40:10.369 --> 00:40:12.770
<v Speaker 1>Hubble, I can go to the degree c

00:40:12.770 --> 00:40:13.490
<v Speaker 1>measurement,

00:40:14.450 --> 00:40:17.010
<v Speaker 1>look at the entity ID of Hubble temperature,

00:40:17.570 --> 00:40:19.570
<v Speaker 1>and I can see that over the past

00:40:19.895 --> 00:40:21.974
<v Speaker 1>twenty four hours, he's had a maximum temperature

00:40:21.974 --> 00:40:23.335
<v Speaker 1>of 26.2

00:40:23.494 --> 00:40:25.815
<v Speaker 1>and a low temperature of 21.8,

00:40:25.815 --> 00:40:27.575
<v Speaker 1>which to me, again, is about right. That's

00:40:27.575 --> 00:40:29.735
<v Speaker 1>what we're looking for when we're keeping reptiles.

00:40:30.535 --> 00:40:32.295
<v Speaker 1>So it's typically the you know, looking at

00:40:32.295 --> 00:40:33.335
<v Speaker 1>this sort of thing. I'm looking at it

00:40:33.335 --> 00:40:34.855
<v Speaker 1>going, yeah, it's acceptable ranges.

00:40:36.590 --> 00:40:38.350
<v Speaker 1>And, yeah, InfluxDB has just been hovering up

00:40:38.350 --> 00:40:40.110
<v Speaker 1>the data for me, which has been nice

00:40:40.110 --> 00:40:41.230
<v Speaker 1>because I didn't have to do it all

00:40:41.230 --> 00:40:43.070
<v Speaker 1>for lot to get it working. I installed

00:40:43.070 --> 00:40:45.710
<v Speaker 1>the I installed the add on, which set

00:40:45.710 --> 00:40:47.964
<v Speaker 1>up InfluxDB for me. I set up a

00:40:47.964 --> 00:40:49.805
<v Speaker 1>user, a database, and a password, and then

00:40:49.805 --> 00:40:51.325
<v Speaker 1>I configured it in my integration and Home

00:40:51.325 --> 00:40:53.005
<v Speaker 1>Assistant just over it. Yep. I'll do that.

00:40:53.005 --> 00:40:54.765
<v Speaker 1>And it's been submitting all the data to

00:40:54.765 --> 00:40:57.005
<v Speaker 1>InfluxDB in the background ever since, really.

00:40:58.285 --> 00:40:59.244
<v Speaker 0>Nice. Yeah.

00:41:00.800 --> 00:41:02.480
<v Speaker 0>Okay. So why don't we talk about the

00:41:02.480 --> 00:41:03.760
<v Speaker 0>problems we had?

00:41:04.000 --> 00:41:06.640
<v Speaker 0>So we got discussed the query that Matt

00:41:06.640 --> 00:41:08.320
<v Speaker 0>wanted to run on his data.

00:41:09.520 --> 00:41:12.000
<v Speaker 0>Now, I I guess what's important here is

00:41:12.000 --> 00:41:14.744
<v Speaker 0>that the add on that you're using only

00:41:14.744 --> 00:41:16.105
<v Speaker 0>deploys InfluxDB

00:41:16.105 --> 00:41:19.385
<v Speaker 0>one. Yes. Correct. It's not deploying InfluxDB two.

00:41:20.744 --> 00:41:21.464
<v Speaker 0>Now

00:41:22.025 --> 00:41:24.505
<v Speaker 0>it would be very difficult using InfluxQL,

00:41:24.505 --> 00:41:26.664
<v Speaker 0>which is a query language for InfluxDB one

00:41:26.664 --> 00:41:27.704
<v Speaker 0>to do

00:41:28.089 --> 00:41:31.050
<v Speaker 0>that kind of breaking down the values by

00:41:31.050 --> 00:41:34.170
<v Speaker 0>error and did aggregates across that specific window.

00:41:34.569 --> 00:41:36.970
<v Speaker 0>However, with our new query language within FluxDB

00:41:36.970 --> 00:41:37.690
<v Speaker 0>two,

00:41:38.089 --> 00:41:39.450
<v Speaker 0>that actually is

00:41:39.770 --> 00:41:40.250
<v Speaker 0>possible.

00:41:41.125 --> 00:41:42.645
<v Speaker 0>And we did try to do that through

00:41:42.645 --> 00:41:44.805
<v Speaker 0>the flux add on for InfluxDB one, but

00:41:44.805 --> 00:41:46.565
<v Speaker 0>we did have a couple of problems. As

00:41:46.565 --> 00:41:47.845
<v Speaker 0>we can see right now,

00:41:48.165 --> 00:41:50.485
<v Speaker 0>we have the flux script bottom and center,

00:41:50.645 --> 00:41:52.085
<v Speaker 0>but when we try to run it, we

00:41:52.085 --> 00:41:55.045
<v Speaker 0>were hitting a runtime error. Now there are

00:41:55.690 --> 00:41:58.010
<v Speaker 0>two reasons I think for this.

00:41:59.370 --> 00:42:01.210
<v Speaker 0>The first one is is that this is

00:42:01.210 --> 00:42:03.530
<v Speaker 0>running on a 32 bit r m b

00:42:03.530 --> 00:42:04.970
<v Speaker 0>seven Raspberry Pi.

00:42:06.010 --> 00:42:07.770
<v Speaker 0>And unfortunately,

00:42:07.770 --> 00:42:11.050
<v Speaker 0>flux does have some outstanding bug reports

00:42:11.275 --> 00:42:13.835
<v Speaker 0>that are affected with the 32 bit build.

00:42:14.635 --> 00:42:15.755
<v Speaker 0>And secondly,

00:42:15.915 --> 00:42:19.115
<v Speaker 0>as there as some performance improvements or challenges

00:42:19.115 --> 00:42:22.395
<v Speaker 0>right now with flux, that means that when

00:42:22.395 --> 00:42:24.475
<v Speaker 0>you run things like an accurate window or

00:42:24.475 --> 00:42:26.880
<v Speaker 0>calculate a mean over a window, is all

00:42:26.880 --> 00:42:29.119
<v Speaker 0>those values have to fit in memory.

00:42:29.520 --> 00:42:31.839
<v Speaker 0>And then the Raspberry Pi is obviously limited

00:42:31.839 --> 00:42:33.599
<v Speaker 0>access to memory depending on what else is

00:42:33.599 --> 00:42:35.840
<v Speaker 0>being consumed by other components on the system.

00:42:36.240 --> 00:42:36.880
<v Speaker 0>So

00:42:37.200 --> 00:42:39.455
<v Speaker 0>my other plan after that was, well, why

00:42:39.455 --> 00:42:41.855
<v Speaker 0>don't we publish this data to InfluxDB to

00:42:41.855 --> 00:42:43.695
<v Speaker 0>cloud? And it looks to be to cloud

00:42:43.695 --> 00:42:47.215
<v Speaker 0>actually has a very, very good free tier.

00:42:47.615 --> 00:42:49.615
<v Speaker 0>I don't think this use case would go

00:42:49.615 --> 00:42:51.775
<v Speaker 0>over, meaning that you could push that data

00:42:51.775 --> 00:42:53.369
<v Speaker 0>to cloud and then do all of your

00:42:53.369 --> 00:42:56.010
<v Speaker 0>more sophisticated flex based queries there.

00:42:56.730 --> 00:42:58.809
<v Speaker 0>However, in fact, if you don't mind, Matt,

00:42:58.809 --> 00:43:00.250
<v Speaker 0>I will just take over the screen now.

00:43:00.250 --> 00:43:01.450
<v Speaker 0>Sure. Go for it.

00:43:05.849 --> 00:43:07.450
<v Speaker 0>And we'll take that one.

00:43:10.025 --> 00:43:12.505
<v Speaker 0>You see my screen okay? Yep. Awesome.

00:43:13.145 --> 00:43:14.105
<v Speaker 0>Okay. So

00:43:14.744 --> 00:43:16.585
<v Speaker 0>my plan was we could just have this

00:43:16.585 --> 00:43:18.345
<v Speaker 0>rate to InfluxDB two in the cloud as

00:43:18.345 --> 00:43:20.505
<v Speaker 0>well using that free tier. Unfortunately,

00:43:20.505 --> 00:43:22.664
<v Speaker 0>the pill request to add that support to

00:43:22.664 --> 00:43:23.785
<v Speaker 0>Home Assistant core

00:43:24.080 --> 00:43:26.800
<v Speaker 0>was only merged eleven days ago and hasn't

00:43:26.800 --> 00:43:29.360
<v Speaker 0>been promoted from the dev branch yet.

00:43:30.320 --> 00:43:31.680
<v Speaker 0>So as much as I would love to

00:43:31.680 --> 00:43:33.280
<v Speaker 0>show you how we could do that creating

00:43:33.280 --> 00:43:34.160
<v Speaker 0>influx

00:43:34.240 --> 00:43:34.960
<v Speaker 0>with

00:43:35.520 --> 00:43:38.000
<v Speaker 0>Matt's actual data, unfortunately, that's not going to

00:43:38.000 --> 00:43:38.640
<v Speaker 0>be the

00:43:39.135 --> 00:43:41.135
<v Speaker 0>So what I am gonna do is run

00:43:41.135 --> 00:43:43.295
<v Speaker 0>through a slightly different example,

00:43:43.615 --> 00:43:46.095
<v Speaker 0>but go ahead highlight the function

00:43:46.335 --> 00:43:48.975
<v Speaker 0>that is needed to accomplish what Matt wants.

00:43:49.535 --> 00:43:51.615
<v Speaker 0>So I actually didn't realize this function existed.

00:43:51.615 --> 00:43:52.950
<v Speaker 0>I spoke to someone on our docs team

00:43:52.950 --> 00:43:54.630
<v Speaker 0>who was like, yeah, we added that recently.

00:43:54.630 --> 00:43:56.710
<v Speaker 0>And I was like, perfect timing. It was

00:43:56.710 --> 00:43:57.830
<v Speaker 1>a school day. Right?

00:43:58.230 --> 00:43:59.030
<v Speaker 0>Exactly.

00:43:59.030 --> 00:44:01.190
<v Speaker 0>All the time. I mean, Fox is evolving

00:44:01.190 --> 00:44:03.270
<v Speaker 0>so quickly. And in fact, I

00:44:03.750 --> 00:44:06.005
<v Speaker 0>think there's been 62

00:44:06.005 --> 00:44:08.485
<v Speaker 0>releases in the last twelve months. So continually

00:44:08.645 --> 00:44:09.045
<v Speaker 0>When

00:44:10.565 --> 00:44:11.845
<v Speaker 0>I was looking at it, it looks it's

00:44:11.845 --> 00:44:13.925
<v Speaker 1>a really nice expressive way to declare stuff.

00:44:13.925 --> 00:44:15.685
<v Speaker 1>It just it it felt really nice when

00:44:15.685 --> 00:44:17.605
<v Speaker 1>I was sort of, oh, it's just literally,

00:44:17.685 --> 00:44:19.260
<v Speaker 1>know, step, do this, do this, do this.

00:44:19.260 --> 00:44:20.620
<v Speaker 1>And it made a lot of sense.

00:44:21.580 --> 00:44:22.940
<v Speaker 1>Yeah. I really like it.

00:44:23.580 --> 00:44:26.620
<v Speaker 0>Yeah. It definitely champions the idea that working

00:44:26.620 --> 00:44:28.940
<v Speaker 0>with data is a is a transformation process.

00:44:28.940 --> 00:44:30.060
<v Speaker 0>And we'll take a look at that when

00:44:30.060 --> 00:44:31.580
<v Speaker 0>we write our our first query for sure.

00:44:32.505 --> 00:44:34.345
<v Speaker 0>But I found out just yesterday, we have

00:44:34.345 --> 00:44:36.025
<v Speaker 0>access to this over selection,

00:44:36.025 --> 00:44:37.865
<v Speaker 0>which actually allows us to filter all of

00:44:37.865 --> 00:44:40.265
<v Speaker 0>the values and prospect the timestamp on those

00:44:40.265 --> 00:44:40.984
<v Speaker 0>metrics,

00:44:41.065 --> 00:44:42.744
<v Speaker 0>and then filter them to the specific windows

00:44:42.744 --> 00:44:43.625
<v Speaker 0>that we wanna analyze.

00:44:44.840 --> 00:44:46.520
<v Speaker 0>Now because I don't have access to mass

00:44:46.520 --> 00:44:47.720
<v Speaker 0>data, I

00:44:48.360 --> 00:44:50.760
<v Speaker 0>do have access to something I've been working

00:44:50.760 --> 00:44:51.640
<v Speaker 0>on recently,

00:44:52.120 --> 00:44:54.360
<v Speaker 0>which is the tool called get series,

00:44:54.360 --> 00:44:56.680
<v Speaker 0>which will process all of the ref log

00:44:56.680 --> 00:44:58.680
<v Speaker 0>inside of your get repository

00:44:58.815 --> 00:45:00.655
<v Speaker 0>and store that in InfluxDB.

00:45:01.295 --> 00:45:02.734
<v Speaker 0>Now just so we have an understanding of

00:45:02.734 --> 00:45:03.935
<v Speaker 0>the kind of data that we're working with

00:45:03.935 --> 00:45:05.295
<v Speaker 0>here, we're gonna take a look at the

00:45:05.295 --> 00:45:06.575
<v Speaker 0>overview dashboard.

00:45:07.135 --> 00:45:09.694
<v Speaker 0>And this analyzes all of the commit points

00:45:09.694 --> 00:45:10.815
<v Speaker 0>written to InfluxDB,

00:45:11.040 --> 00:45:13.600
<v Speaker 0>And this is calculating an aggregate window, which

00:45:13.600 --> 00:45:15.600
<v Speaker 0>means it's breaking down all the commits

00:45:15.760 --> 00:45:17.440
<v Speaker 0>and two monthly

00:45:17.440 --> 00:45:18.240
<v Speaker 0>windows

00:45:18.240 --> 00:45:20.800
<v Speaker 0>that's specified by this drop down here.

00:45:21.360 --> 00:45:24.415
<v Speaker 0>And then it is doing a count of

00:45:24.415 --> 00:45:26.494
<v Speaker 0>the commits within that window. So we can

00:45:26.494 --> 00:45:28.415
<v Speaker 0>see here that the

00:45:28.415 --> 00:45:31.055
<v Speaker 0>09/01/2019,

00:45:31.454 --> 00:45:33.375
<v Speaker 0>there were a hundred and eight commits

00:45:33.615 --> 00:45:35.535
<v Speaker 0>to one or more repositories that were being

00:45:35.535 --> 00:45:36.015
<v Speaker 0>analyzed.

00:45:36.810 --> 00:45:38.410
<v Speaker 0>We have a total count and we have

00:45:38.410 --> 00:45:40.890
<v Speaker 0>the mean commits per windows. So on average,

00:45:40.890 --> 00:45:43.050
<v Speaker 0>every month, the repositories that were analyzed and

00:45:43.050 --> 00:45:44.890
<v Speaker 0>have her in 75 commits.

00:45:45.850 --> 00:45:47.290
<v Speaker 0>And because all of this is an influx

00:45:47.290 --> 00:45:49.695
<v Speaker 0>DB, we can actually do further breakdowns. Now

00:45:49.695 --> 00:45:51.935
<v Speaker 0>I'm only analyzing one repository, which is our

00:45:51.935 --> 00:45:55.375
<v Speaker 0>telegraph one. So the breakdowns are almost useless.

00:45:56.095 --> 00:45:58.575
<v Speaker 0>But we can also break it down as

00:45:58.575 --> 00:46:00.575
<v Speaker 0>well as commit to the number of contributors

00:46:00.575 --> 00:46:02.575
<v Speaker 0>on the project. We can see that telegraph,

00:46:02.575 --> 00:46:04.495
<v Speaker 0>you know, as a pretty consistent three to

00:46:04.495 --> 00:46:05.215
<v Speaker 0>five people

00:46:05.500 --> 00:46:06.780
<v Speaker 0>contributions.

00:46:07.500 --> 00:46:10.060
<v Speaker 0>We have release information and so forth.

00:46:10.380 --> 00:46:13.180
<v Speaker 0>Even breaks down the get series analysis,

00:46:13.180 --> 00:46:14.540
<v Speaker 0>the extensions

00:46:14.700 --> 00:46:16.860
<v Speaker 0>to try and guess which type of code

00:46:16.860 --> 00:46:18.780
<v Speaker 0>and files are inside the repository.

00:46:18.940 --> 00:46:21.055
<v Speaker 0>So we could track all of the modifications

00:46:21.055 --> 00:46:22.975
<v Speaker 0>to go files over time. We can see

00:46:22.975 --> 00:46:25.295
<v Speaker 0>markdown. We can see how the documentation

00:46:25.295 --> 00:46:27.695
<v Speaker 0>is evolving with the code and any other

00:46:27.695 --> 00:46:29.615
<v Speaker 0>languages that sneak ends. We've got some Tomo

00:46:29.615 --> 00:46:30.735
<v Speaker 0>comp files,

00:46:30.895 --> 00:46:31.695
<v Speaker 0>protobufs,

00:46:31.695 --> 00:46:32.095
<v Speaker 0>etcetera.

00:46:33.309 --> 00:46:35.309
<v Speaker 0>We could break that down even further just

00:46:35.309 --> 00:46:37.950
<v Speaker 0>by saying, show me all of the

00:46:38.670 --> 00:46:40.670
<v Speaker 0>markdown fails. Maybe I want to know who

00:46:40.670 --> 00:46:42.510
<v Speaker 0>writes the most amount of documentation in this

00:46:42.510 --> 00:46:44.190
<v Speaker 0>repository, and we can see the number of

00:46:44.190 --> 00:46:44.829
<v Speaker 0>commits in it.

00:46:45.734 --> 00:46:48.055
<v Speaker 0>So it's just a nice special way of

00:46:48.055 --> 00:46:50.295
<v Speaker 0>understanding what is going on within your get

00:46:50.295 --> 00:46:51.175
<v Speaker 0>repository.

00:46:52.214 --> 00:46:54.454
<v Speaker 0>But to come back to Matt's query then,

00:46:54.454 --> 00:46:55.815
<v Speaker 0>we click configure.

00:46:56.934 --> 00:47:00.615
<v Speaker 0>What we have here as our flux

00:46:59.810 --> 00:47:00.690
<v Speaker 0>explorer

00:47:00.690 --> 00:47:02.610
<v Speaker 0>kind of view where we can break out

00:47:02.610 --> 00:47:04.050
<v Speaker 0>the flux query and

00:47:04.450 --> 00:47:06.610
<v Speaker 0>get a real time visualization of what's going

00:47:06.610 --> 00:47:07.170
<v Speaker 0>on.

00:47:08.690 --> 00:47:11.250
<v Speaker 0>So if we just comment out our active

00:47:11.250 --> 00:47:12.290
<v Speaker 0>window

00:47:13.185 --> 00:47:13.985
<v Speaker 0>group,

00:47:13.985 --> 00:47:15.745
<v Speaker 0>and we'll keep our filters in and we

00:47:15.745 --> 00:47:16.705
<v Speaker 0>hit submit.

00:47:18.065 --> 00:47:21.105
<v Speaker 0>We have something that is almost

00:47:21.105 --> 00:47:22.305
<v Speaker 0>unintelligible.

00:47:22.385 --> 00:47:24.065
<v Speaker 0>If we drop down to the raw data,

00:47:24.065 --> 00:47:25.265
<v Speaker 0>we can actually see

00:47:25.660 --> 00:47:27.100
<v Speaker 0>each of the commits,

00:47:27.180 --> 00:47:29.420
<v Speaker 0>the message that was sent with the commit,

00:47:29.740 --> 00:47:31.900
<v Speaker 0>and we can see who submitted the commit

00:47:31.900 --> 00:47:33.500
<v Speaker 0>and to what repository.

00:47:34.620 --> 00:47:36.220
<v Speaker 0>And then what we're doing here with this

00:47:36.220 --> 00:47:38.460
<v Speaker 0>flux security is first specifying where we want

00:47:38.460 --> 00:47:40.515
<v Speaker 0>to read the data from and Fox DB

00:47:40.515 --> 00:47:42.835
<v Speaker 0>to all data is grouped by buckets. You

00:47:42.835 --> 00:47:46.115
<v Speaker 0>can think of that as like a database

00:47:46.515 --> 00:47:48.195
<v Speaker 0>or a table

00:47:48.595 --> 00:47:51.075
<v Speaker 0>and, you know, your more general purpose databases.

00:47:52.100 --> 00:47:53.940
<v Speaker 0>We then provide a range. So we're using

00:47:53.940 --> 00:47:56.340
<v Speaker 0>the pay forward operator here. If you're familiar

00:47:56.340 --> 00:47:58.500
<v Speaker 0>with Alexa or f sharp, you might be

00:47:58.500 --> 00:48:00.340
<v Speaker 0>familiar with this. But it just means take

00:48:00.340 --> 00:48:02.820
<v Speaker 0>the result of this from function call

00:48:02.980 --> 00:48:04.900
<v Speaker 0>and pass that and as the first parameter

00:48:04.900 --> 00:48:05.620
<v Speaker 0>to arrange.

00:48:06.435 --> 00:48:08.435
<v Speaker 0>With the range, we can specify a few

00:48:08.435 --> 00:48:10.435
<v Speaker 0>named parameters here. So we've got the start

00:48:10.435 --> 00:48:11.955
<v Speaker 0>value and the stop value.

00:48:12.355 --> 00:48:14.435
<v Speaker 0>Now what's cool is that this will use

00:48:14.435 --> 00:48:16.595
<v Speaker 0>the variables provided by the dashboard, which gives

00:48:16.595 --> 00:48:18.195
<v Speaker 0>us a start and stop time range here.

00:48:19.029 --> 00:48:21.430
<v Speaker 0>Not only that, we could remove that and

00:48:21.430 --> 00:48:23.829
<v Speaker 0>use duration literals. And I could say, show

00:48:23.829 --> 00:48:24.869
<v Speaker 0>me one month,

00:48:25.109 --> 00:48:26.950
<v Speaker 0>one year and so forth.

00:48:29.190 --> 00:48:31.190
<v Speaker 0>Once we've pulled out all of the the

00:48:31.595 --> 00:48:33.994
<v Speaker 0>points from the bucket and that range, we

00:48:33.994 --> 00:48:35.914
<v Speaker 0>then want to filter it to only see

00:48:35.914 --> 00:48:37.755
<v Speaker 0>the information that is relevant to our query.

00:48:37.755 --> 00:48:39.914
<v Speaker 0>So here we're analyzing anywhere where the measurement

00:48:39.914 --> 00:48:41.355
<v Speaker 0>is to commit and the field is a

00:48:41.355 --> 00:48:41.994
<v Speaker 0>message.

00:48:42.555 --> 00:48:45.260
<v Speaker 0>There's something that Flux does that people normally

00:48:45.260 --> 00:48:47.420
<v Speaker 0>get tripped on up and normally get tripped

00:48:47.420 --> 00:48:49.420
<v Speaker 0>on at the start is that we actually

00:48:49.420 --> 00:48:51.420
<v Speaker 0>get something called tables back.

00:48:51.740 --> 00:48:53.099
<v Speaker 0>And you can see this number kind of

00:48:53.099 --> 00:48:53.980
<v Speaker 0>incrementing

00:48:53.980 --> 00:48:55.980
<v Speaker 0>on the left all the way up into

00:48:55.980 --> 00:48:57.020
<v Speaker 0>the hundreds now.

00:48:57.340 --> 00:48:58.940
<v Speaker 0>And that just means that we're getting

00:48:59.495 --> 00:49:01.575
<v Speaker 0>a few hundred tables back.

00:49:01.815 --> 00:49:03.895
<v Speaker 0>And that is based on the group key.

00:49:04.455 --> 00:49:06.695
<v Speaker 0>So by default, it's gonna grip at any

00:49:06.695 --> 00:49:08.775
<v Speaker 0>tag within the database, which is gonna be

00:49:08.775 --> 00:49:09.655
<v Speaker 0>the author,

00:49:09.735 --> 00:49:10.615
<v Speaker 0>I believe.

00:49:10.855 --> 00:49:12.535
<v Speaker 0>Which means if I come along here,

00:49:13.930 --> 00:49:16.090
<v Speaker 0>scroll down to number one.

00:49:18.010 --> 00:49:20.410
<v Speaker 0>We still got the author is the same.

00:49:21.690 --> 00:49:23.530
<v Speaker 0>What else is on the group key?

00:49:24.890 --> 00:49:26.810
<v Speaker 0>Let's go down a bit more. Keep going.

00:49:28.635 --> 00:49:30.635
<v Speaker 0>Alright. So oh, so we do have some

00:49:30.635 --> 00:49:33.195
<v Speaker 0>different offers, but the group key is different.

00:49:36.395 --> 00:49:38.555
<v Speaker 0>We're just gonna modify the group key anyway.

00:49:38.555 --> 00:49:39.355
<v Speaker 0>Doesn't matter.

00:49:39.835 --> 00:49:41.515
<v Speaker 0>Now these tables are great when you want

00:49:41.515 --> 00:49:43.435
<v Speaker 0>to be able to see at in fact,

00:49:43.435 --> 00:49:43.995
<v Speaker 0>let's

00:49:44.619 --> 00:49:46.060
<v Speaker 0>bring this group in. We're going to add

00:49:46.060 --> 00:49:47.660
<v Speaker 0>a column and we're going to actually group

00:49:47.660 --> 00:49:50.540
<v Speaker 0>by the author. So the field itself, it's

00:49:50.540 --> 00:49:52.460
<v Speaker 0>actually called author

00:49:52.460 --> 00:49:53.340
<v Speaker 0>email.

00:49:54.860 --> 00:49:56.619
<v Speaker 0>And if we run that again, we're going

00:49:56.619 --> 00:49:58.845
<v Speaker 0>to get less tables and just time it

00:49:58.845 --> 00:50:00.685
<v Speaker 0>will actually be tripped by the author.

00:50:01.165 --> 00:50:03.245
<v Speaker 0>We've got table zero is Daniel, who is

00:50:03.245 --> 00:50:04.765
<v Speaker 0>the main contributor.

00:50:07.165 --> 00:50:08.365
<v Speaker 0>We

00:50:08.365 --> 00:50:09.245
<v Speaker 0>go down to one.

00:50:10.299 --> 00:50:12.460
<v Speaker 0>I really hope we don't see Daniel.

00:50:12.940 --> 00:50:14.460
<v Speaker 0>Oh, we do, but it's a different email

00:50:14.460 --> 00:50:15.580
<v Speaker 0>address. Good.

00:50:16.220 --> 00:50:17.660
<v Speaker 0>I wonder if that's what I missed last

00:50:17.660 --> 00:50:18.940
<v Speaker 0>time. So

00:50:19.740 --> 00:50:21.339
<v Speaker 0>we modify the group key and we get

00:50:21.339 --> 00:50:23.339
<v Speaker 0>back a table per group, which is really

00:50:23.339 --> 00:50:25.260
<v Speaker 0>useful because it now means that I can

00:50:25.260 --> 00:50:27.515
<v Speaker 0>actually count the number of commits

00:50:27.914 --> 00:50:29.195
<v Speaker 0>by email address.

00:50:29.755 --> 00:50:31.355
<v Speaker 0>That's not what I wanna do right now.

00:50:31.515 --> 00:50:33.434
<v Speaker 0>So what I'm actually gonna do here is

00:50:33.434 --> 00:50:35.355
<v Speaker 0>I'm gonna flatten the table so that I

00:50:35.355 --> 00:50:37.755
<v Speaker 0>can do some analysis of all the commits

00:50:37.755 --> 00:50:39.035
<v Speaker 0>without any group key.

00:50:40.070 --> 00:50:41.670
<v Speaker 0>So if I group that now, we'll see

00:50:41.670 --> 00:50:44.710
<v Speaker 0>that we only have table zero with all

00:50:44.710 --> 00:50:45.750
<v Speaker 0>of the commits.

00:50:48.150 --> 00:50:50.390
<v Speaker 0>We then want to do something. So

00:50:50.790 --> 00:50:52.630
<v Speaker 0>did we cover your query,

00:50:52.710 --> 00:50:54.150
<v Speaker 0>Matt? Or have I just gonna skip past

00:50:54.150 --> 00:50:54.390
<v Speaker 0>that?

00:50:55.905 --> 00:50:57.505
<v Speaker 1>Think we briefly covered it, but it was

00:50:57.665 --> 00:50:59.585
<v Speaker 1>I was essentially looking to get

00:51:00.385 --> 00:51:01.105
<v Speaker 1>the

00:51:01.985 --> 00:51:03.665
<v Speaker 1>average humidity between

00:51:04.145 --> 00:51:06.865
<v Speaker 1>7AM and 8PM and 8PM

00:51:06.865 --> 00:51:09.105
<v Speaker 1>and 7AM or, you know, maybe 8AM like

00:51:09.105 --> 00:51:09.905
<v Speaker 1>a twelve hour period.

00:51:10.440 --> 00:51:11.720
<v Speaker 1>Basically to compare

00:51:12.680 --> 00:51:16.359
<v Speaker 1>nighttime humidity levels versus daytime humidity levels as

00:51:16.359 --> 00:51:17.080
<v Speaker 1>an average.

00:51:18.200 --> 00:51:20.200
<v Speaker 0>Awesome. Yeah. That is great. So

00:51:20.520 --> 00:51:22.119
<v Speaker 0>we're gonna try and do the same thing

00:51:22.119 --> 00:51:22.760
<v Speaker 0>here,

00:51:23.079 --> 00:51:23.960
<v Speaker 0>but we have commence.

00:51:25.025 --> 00:51:27.905
<v Speaker 0>Now I know that most of the contributors

00:51:27.905 --> 00:51:31.425
<v Speaker 0>and maintainers for Telegraph are in The US.

00:51:31.425 --> 00:51:33.345
<v Speaker 0>So we're gonna try and break down these

00:51:33.345 --> 00:51:35.345
<v Speaker 0>commits using the error selection function,

00:51:36.440 --> 00:51:38.200
<v Speaker 0>And we're gonna try and compare

00:51:38.200 --> 00:51:41.880
<v Speaker 0>UK morning and afternoon versus US morning and

00:51:41.880 --> 00:51:42.600
<v Speaker 0>afternoon

00:51:43.080 --> 00:51:44.200
<v Speaker 0>to see

00:51:44.600 --> 00:51:46.440
<v Speaker 0>how many commits we get across those two

00:51:46.440 --> 00:51:47.400
<v Speaker 0>different regions.

00:51:48.520 --> 00:51:49.960
<v Speaker 0>So what I'm gonna do is first just

00:51:49.960 --> 00:51:51.240
<v Speaker 0>to say in this as a base.

00:51:52.085 --> 00:51:54.244
<v Speaker 0>So Influx, I can take any stream of

00:51:54.244 --> 00:51:56.005
<v Speaker 0>tables and just store them in a variable

00:51:56.005 --> 00:51:57.765
<v Speaker 0>so that I can reuse them again.

00:51:58.404 --> 00:52:00.484
<v Speaker 0>And I'm gonna paint this base into the

00:52:00.484 --> 00:52:01.685
<v Speaker 0>error selection.

00:52:04.164 --> 00:52:08.484
<v Speaker 0>And we're gonna specify a start time of

00:52:07.560 --> 00:52:08.440
<v Speaker 0>9AM

00:52:09.560 --> 00:52:11.240
<v Speaker 0>and a stop time

00:52:11.800 --> 00:52:12.680
<v Speaker 0>of

00:52:12.680 --> 00:52:13.480
<v Speaker 0>none.

00:52:14.600 --> 00:52:16.520
<v Speaker 0>And what we want to do is then

00:52:16.520 --> 00:52:17.960
<v Speaker 0>aggregate window

00:52:18.440 --> 00:52:19.240
<v Speaker 0>over that,

00:52:20.515 --> 00:52:22.115
<v Speaker 0>and we're gonna do a count.

00:52:23.715 --> 00:52:26.515
<v Speaker 0>The duration that we want to use here

00:52:28.835 --> 00:52:31.155
<v Speaker 0>will be on a daily

00:52:31.155 --> 00:52:32.115
<v Speaker 0>basis.

00:52:33.235 --> 00:52:35.340
<v Speaker 0>So we're pulling out all the commits. We're

00:52:35.340 --> 00:52:37.580
<v Speaker 0>filtering to only those commits between nine and

00:52:37.580 --> 00:52:40.460
<v Speaker 0>twelve, but we are gonna calculate a daily

00:52:40.460 --> 00:52:43.420
<v Speaker 0>commit count for that. And we're gonna yield

00:52:43.420 --> 00:52:44.060
<v Speaker 0>this

00:52:44.540 --> 00:52:46.540
<v Speaker 0>to the graph as

00:52:46.700 --> 00:52:48.140
<v Speaker 0>UK

00:52:47.755 --> 00:52:48.795
<v Speaker 0>commits

00:52:48.875 --> 00:52:49.755
<v Speaker 0>like so.

00:52:50.155 --> 00:52:52.474
<v Speaker 0>And if we copy this, we can reuse

00:52:52.474 --> 00:52:54.075
<v Speaker 0>base only this time.

00:52:54.315 --> 00:52:56.395
<v Speaker 0>We're gonna see that The US starts today

00:52:56.395 --> 00:52:57.995
<v Speaker 0>around 4PM.

00:52:59.755 --> 00:53:02.715
<v Speaker 0>We'll count their commits until

00:53:03.790 --> 00:53:05.710
<v Speaker 0>till nine. That's about

00:53:06.510 --> 00:53:08.110
<v Speaker 0>oh, that's eight till one.

00:53:08.990 --> 00:53:10.349
<v Speaker 0>We're gonna do seventeen,

00:53:10.349 --> 00:53:11.869
<v Speaker 0>which is 9AM.

00:53:12.109 --> 00:53:14.030
<v Speaker 0>Excuse me. Reveal on how bad I am

00:53:14.030 --> 00:53:14.750
<v Speaker 0>at math

00:53:15.295 --> 00:53:16.175
<v Speaker 0>till noon.

00:53:16.655 --> 00:53:18.815
<v Speaker 0>If we go by San Francisco time,

00:53:19.615 --> 00:53:22.335
<v Speaker 0>using the same aggregate window and then yielding

00:53:22.335 --> 00:53:23.535
<v Speaker 0>as US

00:53:23.535 --> 00:53:24.495
<v Speaker 0>commits.

00:53:26.735 --> 00:53:27.935
<v Speaker 0>And if I run this,

00:53:28.480 --> 00:53:29.680
<v Speaker 0>we should

00:53:36.560 --> 00:53:37.600
<v Speaker 0>have lanes.

00:53:38.000 --> 00:53:38.640
<v Speaker 0>We do.

00:53:40.625 --> 00:53:43.105
<v Speaker 0>Okay. So let's not do a day

00:53:43.505 --> 00:53:45.184
<v Speaker 0>because there are gonna be days where there

00:53:45.184 --> 00:53:46.385
<v Speaker 0>are no commets.

00:53:46.385 --> 00:53:49.265
<v Speaker 0>So let's amplify this a little bit and

00:53:49.265 --> 00:53:51.184
<v Speaker 0>do a month by month breakdown

00:53:51.184 --> 00:53:52.385
<v Speaker 0>over the last

00:53:52.785 --> 00:53:56.065
<v Speaker 0>because the range here is 2019, January '20

00:53:55.380 --> 00:53:58.019
<v Speaker 0>'19 till today, we're talking eighteen months. So

00:53:58.019 --> 00:54:00.099
<v Speaker 0>we'll break that down into monthly figures.

00:54:01.539 --> 00:54:03.380
<v Speaker 0>And we get something that's just been smoothed

00:54:03.380 --> 00:54:04.980
<v Speaker 0>out, so it's not as jaggy.

00:54:06.099 --> 00:54:08.259
<v Speaker 0>And what we see here is that The

00:54:08.259 --> 00:54:10.420
<v Speaker 0>US commits are substantially higher.

00:54:11.015 --> 00:54:13.095
<v Speaker 0>And that kind of goes with our hypothesis

00:54:13.095 --> 00:54:16.055
<v Speaker 0>is that most of the contributors and maintainers

00:54:16.055 --> 00:54:17.575
<v Speaker 0>for the project are in The US time

00:54:17.575 --> 00:54:19.975
<v Speaker 0>zone. So of course, we're going to see

00:54:20.055 --> 00:54:22.375
<v Speaker 0>this purple line of The US commits being

00:54:22.375 --> 00:54:23.175
<v Speaker 0>substantially higher,

00:54:23.730 --> 00:54:25.570
<v Speaker 0>but some of The UK commits actually just

00:54:25.570 --> 00:54:27.250
<v Speaker 0>checked on our own zero to one or

00:54:27.250 --> 00:54:27.810
<v Speaker 0>two.

00:54:28.530 --> 00:54:29.810
<v Speaker 0>So that's how we can use the error

00:54:29.810 --> 00:54:32.930
<v Speaker 0>selection function within flux to break down the

00:54:32.930 --> 00:54:35.650
<v Speaker 0>commits or as it where the temperature and

00:54:35.650 --> 00:54:36.770
<v Speaker 0>humidity sensors

00:54:37.185 --> 00:54:39.025
<v Speaker 0>within mister Hubble's

00:54:39.025 --> 00:54:39.825
<v Speaker 0>tank.

00:54:40.145 --> 00:54:40.865
<v Speaker 0>Cool.

00:54:40.945 --> 00:54:42.145
<v Speaker 0>That'll make sense.

00:54:42.545 --> 00:54:43.185
<v Speaker 1>Yeah.

00:54:44.145 --> 00:54:45.025
<v Speaker 0>Awesome.

00:54:45.745 --> 00:54:47.665
<v Speaker 0>Alright. I won't save this.

00:54:49.745 --> 00:54:51.265
<v Speaker 0>So I will stop sharing.

00:54:52.440 --> 00:54:54.520
<v Speaker 0>We will quickly see if there are any

00:54:54.520 --> 00:54:56.520
<v Speaker 0>questions. I don't think there are. Is there

00:54:56.520 --> 00:54:58.760
<v Speaker 0>anything you would like to go over before

00:54:58.760 --> 00:55:00.120
<v Speaker 0>we finish up for today?

00:55:00.440 --> 00:55:01.480
<v Speaker 1>Not

00:55:01.480 --> 00:55:02.920
<v Speaker 1>particularly. No. It was

00:55:04.359 --> 00:55:07.640
<v Speaker 1>we're sort of going over yesterday to the

00:55:06.684 --> 00:55:09.164
<v Speaker 1>just the ability to pipe into different functions

00:55:09.164 --> 00:55:10.685
<v Speaker 1>to say, ah, give me the

00:55:11.085 --> 00:55:12.845
<v Speaker 1>and I want a window. Now give me

00:55:12.845 --> 00:55:14.605
<v Speaker 1>the mean. Oh, there's a function that combines

00:55:14.605 --> 00:55:16.444
<v Speaker 1>the two that says it's an aggregate window.

00:55:16.444 --> 00:55:18.365
<v Speaker 1>Just simplify it. It was like, that's really

00:55:18.365 --> 00:55:20.125
<v Speaker 1>nice. Like, this it was it was pretty

00:55:20.125 --> 00:55:21.760
<v Speaker 1>slick. No. This is just something that makes

00:55:21.760 --> 00:55:23.440
<v Speaker 1>it that little bit cleaner and simpler.

00:55:24.720 --> 00:55:26.000
<v Speaker 1>And having Yeah. I think one of little

00:55:26.000 --> 00:55:27.920
<v Speaker 1>bit of Alexa before. The the pipe forward

00:55:27.920 --> 00:55:29.599
<v Speaker 1>stuff was was nice to see. Like, that

00:55:29.599 --> 00:55:31.599
<v Speaker 1>was probably one of my favorite things in

00:55:31.760 --> 00:55:33.520
<v Speaker 1>in Alexa. Was just the ability to just

00:55:33.520 --> 00:55:35.835
<v Speaker 1>run through transformations, you know, do this, transform

00:55:35.835 --> 00:55:37.035
<v Speaker 1>transform transform.

00:55:37.195 --> 00:55:38.795
<v Speaker 1>It does make a lot of sense when

00:55:38.795 --> 00:55:40.155
<v Speaker 1>when working with data.

00:55:41.035 --> 00:55:41.595
<v Speaker 0>Yeah.

00:55:41.835 --> 00:55:44.315
<v Speaker 0>Yeah. If that's a model really well, and

00:55:44.315 --> 00:55:45.355
<v Speaker 0>it's the way that you would work with

00:55:45.355 --> 00:55:47.035
<v Speaker 0>data, I mean, if you're writing it down

00:55:47.035 --> 00:55:49.115
<v Speaker 0>or or any other kind of crazy math

00:55:49.115 --> 00:55:49.755
<v Speaker 0>that you were doing.

00:55:50.540 --> 00:55:52.540
<v Speaker 0>And I think what's really cool about flux

00:55:52.540 --> 00:55:54.300
<v Speaker 0>is that we have you Well, what I've

00:55:54.300 --> 00:55:55.340
<v Speaker 0>used it for there is to speak to

00:55:55.340 --> 00:55:58.060
<v Speaker 0>InfluxDB. They're actually data sources that speak to

00:55:58.060 --> 00:56:01.260
<v Speaker 0>my SQL, Postgres, SQL lite. I can consume

00:56:01.260 --> 00:56:03.865
<v Speaker 0>CSV data. So it's not you're not really

00:56:03.865 --> 00:56:07.224
<v Speaker 0>confined by you confined by using flux to

00:56:07.224 --> 00:56:09.224
<v Speaker 0>only data and and flux DB.

00:56:09.625 --> 00:56:11.704
<v Speaker 0>Lots of possibilities are still really early, but

00:56:11.704 --> 00:56:13.224
<v Speaker 0>I'm really impressed with what I see with

00:56:13.224 --> 00:56:14.904
<v Speaker 0>flux and the team is continually making it

00:56:14.904 --> 00:56:17.140
<v Speaker 0>better, which is great. That's cool.

00:56:18.340 --> 00:56:20.260
<v Speaker 0>Well, you know what? That was awesome. Thank

00:56:20.260 --> 00:56:21.380
<v Speaker 0>you for that introduction.

00:56:21.620 --> 00:56:23.140
<v Speaker 0>I think we went a lot deeper than

00:56:23.140 --> 00:56:24.900
<v Speaker 0>I was just better. I definitely need to

00:56:24.900 --> 00:56:26.340
<v Speaker 0>get a set up and start playing with

00:56:26.340 --> 00:56:27.620
<v Speaker 0>it because it just looks like so much

00:56:27.620 --> 00:56:29.540
<v Speaker 0>fun. So thank you for that. Really great

00:56:29.540 --> 00:56:31.140
<v Speaker 0>that you were able to share your experience.

00:56:31.325 --> 00:56:32.685
<v Speaker 1>Be careful you don't go down the rabbit

00:56:32.685 --> 00:56:34.525
<v Speaker 1>hole. I've I've gone I've gone too far

00:56:34.525 --> 00:56:35.405
<v Speaker 1>now. It's

00:56:36.125 --> 00:56:37.725
<v Speaker 1>I'm trying to work out what I can

00:56:37.725 --> 00:56:39.405
<v Speaker 1>and can't automate stuff that doesn't need to

00:56:39.405 --> 00:56:40.925
<v Speaker 1>be automated, but I'm like, no, but I

00:56:40.925 --> 00:56:42.125
<v Speaker 1>could do. I could do it.

00:56:42.765 --> 00:56:44.605
<v Speaker 0>Tell you what, we'll redo this session in

00:56:44.605 --> 00:56:46.045
<v Speaker 0>like six months and we'll see how big

00:56:46.045 --> 00:56:47.670
<v Speaker 0>I am and how much and how lost

00:56:47.670 --> 00:56:49.190
<v Speaker 0>you've gotten in the whole thing.

00:56:49.829 --> 00:56:50.710
<v Speaker 0>Let's do it.

00:56:51.109 --> 00:56:53.430
<v Speaker 0>Alright. Well, thank you again. My it was

00:56:53.430 --> 00:56:54.790
<v Speaker 0>an absolute pleasure and I will speak to

00:56:54.790 --> 00:56:56.070
<v Speaker 0>you soon. Thank you for having me.

00:56:56.630 --> 00:56:57.990
<v Speaker 0>Bye everyone. Have a nice day.
