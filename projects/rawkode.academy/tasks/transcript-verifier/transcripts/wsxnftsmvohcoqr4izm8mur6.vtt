WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: b243b20e-3d64-455a-8b14-23b5bac70805
Created: 2025-04-29T13:55:11.492Z
Duration: 580.4706
Channels: 1

00:00:00.000 --> 00:00:01.439
<v Speaker 0>ChatGPT

00:00:01.439 --> 00:00:03.360
<v Speaker 0>is going to take your job.

00:00:05.279 --> 00:00:06.240
<v Speaker 0>Not really.

00:00:06.640 --> 00:00:09.440
<v Speaker 0>But we are seeing some very interesting things

00:00:09.440 --> 00:00:11.040
<v Speaker 0>because of ChatGPT.

00:00:11.040 --> 00:00:12.320
<v Speaker 0>It's changing the way a lot of people

00:00:12.320 --> 00:00:15.125
<v Speaker 0>work. It's It's able to augment and enrich

00:00:15.125 --> 00:00:17.765
<v Speaker 0>your own capabilities with that with the collective

00:00:17.765 --> 00:00:20.645
<v Speaker 0>experience of the Internet. The model can be

00:00:20.645 --> 00:00:23.525
<v Speaker 0>trained with smaller subsections of data to help

00:00:23.525 --> 00:00:26.164
<v Speaker 0>make using existing applications easier.

00:00:26.404 --> 00:00:28.165
<v Speaker 0>And we're going to see an example of

00:00:28.165 --> 00:00:28.645
<v Speaker 0>that today.

00:00:29.130 --> 00:00:30.730
<v Speaker 0>Let's talk about Kubescape.

00:00:30.730 --> 00:00:34.329
<v Speaker 0>Fantastic product that helps improve your security posture

00:00:34.329 --> 00:00:36.410
<v Speaker 0>for all of your Kubernetes clusters.

00:00:36.570 --> 00:00:39.129
<v Speaker 0>That is if you stick to the frameworks

00:00:39.129 --> 00:00:41.129
<v Speaker 0>provided by Kubescape and

00:00:41.385 --> 00:00:44.024
<v Speaker 0>which to be fair is pretty comprehensive.

00:00:44.425 --> 00:00:45.065
<v Speaker 0>However,

00:00:45.385 --> 00:00:47.945
<v Speaker 0>some organizations may wish to write their own

00:00:47.945 --> 00:00:48.824
<v Speaker 0>controls

00:00:48.824 --> 00:00:50.504
<v Speaker 0>for their own frameworks.

00:00:51.065 --> 00:00:53.225
<v Speaker 0>And writing your own controls has been a

00:00:53.225 --> 00:00:56.300
<v Speaker 0>little bit tedious today. Not because of Kubescape,

00:00:56.300 --> 00:00:58.540
<v Speaker 0>but because of the language they're written in.

00:00:58.620 --> 00:00:59.500
<v Speaker 0>Controls

00:00:59.500 --> 00:01:02.620
<v Speaker 0>are written in Regal. Watch Regal.

00:01:03.020 --> 00:01:05.420
<v Speaker 0>Regal is a language that is part of

00:01:05.420 --> 00:01:06.940
<v Speaker 0>open policy agent.

00:01:07.265 --> 00:01:10.385
<v Speaker 0>And it's not like other programming languages that

00:01:10.385 --> 00:01:12.465
<v Speaker 0>you may be familiar with. A lot of

00:01:12.465 --> 00:01:16.545
<v Speaker 0>people struggle with its syntax mostly around comprehension.

00:01:16.705 --> 00:01:18.625
<v Speaker 0>It can sometimes be hard

00:01:18.705 --> 00:01:21.130
<v Speaker 0>to read a Regal program and actually know

00:01:21.130 --> 00:01:23.850
<v Speaker 0>what's going on because at times it feels

00:01:23.850 --> 00:01:25.930
<v Speaker 0>like there's bits of magic especially

00:01:25.930 --> 00:01:27.530
<v Speaker 0>around iterators

00:01:27.530 --> 00:01:28.490
<v Speaker 0>on lists.

00:01:28.650 --> 00:01:31.850
<v Speaker 0>So this is prime real estate for chat

00:01:32.185 --> 00:01:34.665
<v Speaker 0>to come in and make your life easier.

00:01:34.665 --> 00:01:36.585
<v Speaker 0>And fortunately for us, the team at Armo

00:01:36.585 --> 00:01:38.424
<v Speaker 0>have done all the heavy lifting.

00:01:39.064 --> 00:01:39.865
<v Speaker 0>Thank you.

00:01:40.265 --> 00:01:42.825
<v Speaker 0>So we're gonna use Armo platform today

00:01:43.145 --> 00:01:45.680
<v Speaker 0>where they have a UI for building

00:01:46.000 --> 00:01:46.799
<v Speaker 0>custom

00:01:46.880 --> 00:01:49.040
<v Speaker 0>controls. Now as you'll see in our website,

00:01:49.040 --> 00:01:50.159
<v Speaker 0>if you want to go and find out

00:01:50.159 --> 00:01:53.440
<v Speaker 0>more, please feel free. But I am already

00:01:53.440 --> 00:01:54.479
<v Speaker 0>logged in

00:01:54.640 --> 00:01:55.760
<v Speaker 0>to ARMOR

00:01:56.000 --> 00:01:59.280
<v Speaker 0>where if you click on your face and

00:01:59.280 --> 00:01:59.840
<v Speaker 0>settings

00:02:00.625 --> 00:02:02.225
<v Speaker 0>followed by controls,

00:02:03.425 --> 00:02:06.225
<v Speaker 0>you can click create custom control where you

00:02:06.225 --> 00:02:07.505
<v Speaker 0>provide a name,

00:02:07.985 --> 00:02:09.025
<v Speaker 0>severity,

00:02:09.745 --> 00:02:11.745
<v Speaker 0>a wish or what you want the control

00:02:11.745 --> 00:02:12.465
<v Speaker 0>to do

00:02:13.050 --> 00:02:15.690
<v Speaker 0>with the ability to provide a description,

00:02:15.690 --> 00:02:18.330
<v Speaker 0>an example object and a remediation path if

00:02:18.330 --> 00:02:19.770
<v Speaker 0>you wish. However,

00:02:19.930 --> 00:02:23.050
<v Speaker 0>you don't need to. You can let ChatGPD

00:02:23.050 --> 00:02:25.245
<v Speaker 0>work it out for you. So in this

00:02:25.245 --> 00:02:26.845
<v Speaker 0>short video, we're gonna take a look at

00:02:26.845 --> 00:02:30.125
<v Speaker 0>some prompts and some custom controls generating Regal

00:02:30.125 --> 00:02:33.165
<v Speaker 0>policies for us and making our lives easier.

00:02:33.165 --> 00:02:35.485
<v Speaker 0>Let's check it out. So let's start with

00:02:35.485 --> 00:02:39.325
<v Speaker 0>a nice easy one just to warm ChatGPT

00:02:39.405 --> 00:02:41.880
<v Speaker 0>up. I'm going to call this control

00:02:42.200 --> 00:02:43.000
<v Speaker 0>no

00:02:43.320 --> 00:02:44.120
<v Speaker 0>latest

00:02:44.360 --> 00:02:46.600
<v Speaker 0>tag. I'm going to paste in a prompt

00:02:46.600 --> 00:02:48.600
<v Speaker 0>that says ensure deployments

00:02:48.600 --> 00:02:51.080
<v Speaker 0>never use the latest tag. Not going to

00:02:51.080 --> 00:02:53.880
<v Speaker 0>provide any examples, descriptions, or remediation.

00:02:53.880 --> 00:02:56.405
<v Speaker 0>I'm just going to let ARMOR platform and

00:02:56.405 --> 00:02:57.685
<v Speaker 0>chat GPD

00:02:57.685 --> 00:03:00.565
<v Speaker 0>work it out. Now we have a response.

00:03:00.725 --> 00:03:02.725
<v Speaker 0>The description is to prevent the use of

00:03:02.725 --> 00:03:04.965
<v Speaker 0>the latest tag in Kubernetes workloads,

00:03:05.285 --> 00:03:07.990
<v Speaker 0>which makes perfect sense to me. The remediation

00:03:07.990 --> 00:03:10.950
<v Speaker 0>path as generated by a ChatGPD

00:03:11.030 --> 00:03:12.950
<v Speaker 0>is to update the image tag to a

00:03:12.950 --> 00:03:14.710
<v Speaker 0>specific version. Again,

00:03:14.950 --> 00:03:16.150
<v Speaker 0>pretty spot on.

00:03:16.710 --> 00:03:18.150
<v Speaker 0>Over on the right hand side,

00:03:18.390 --> 00:03:21.110
<v Speaker 0>we have the Ragel rule or the Ragel

00:03:21.110 --> 00:03:21.910
<v Speaker 0>policy.

00:03:21.910 --> 00:03:24.985
<v Speaker 0>Because you hear that it looks at all

00:03:24.985 --> 00:03:25.865
<v Speaker 0>resources.

00:03:26.025 --> 00:03:28.345
<v Speaker 0>It does this by expanding the input

00:03:28.425 --> 00:03:29.465
<v Speaker 0>as a list.

00:03:29.705 --> 00:03:32.105
<v Speaker 0>The underscore means get them all. From here,

00:03:32.105 --> 00:03:34.185
<v Speaker 0>it has a list of the different workload

00:03:34.185 --> 00:03:36.900
<v Speaker 0>types available in Kubernetes. Deployment,

00:03:36.980 --> 00:03:40.340
<v Speaker 0>replica set, daemon set, stateful set, and jobs.

00:03:40.420 --> 00:03:42.740
<v Speaker 0>From there, it checks the workload as of

00:03:42.740 --> 00:03:44.580
<v Speaker 0>one of these kinds, pulls out the image

00:03:44.580 --> 00:03:45.780
<v Speaker 0>of the first container,

00:03:45.940 --> 00:03:48.420
<v Speaker 0>runs a comparison check to see if it

00:03:48.420 --> 00:03:50.660
<v Speaker 0>contains a string colon latest.

00:03:50.915 --> 00:03:53.555
<v Speaker 0>And if so, we get an error message.

00:03:53.555 --> 00:03:56.515
<v Speaker 0>From here, you can click download your control.

00:03:56.515 --> 00:03:58.595
<v Speaker 0>Once that's downloaded, you can pop it open

00:03:58.595 --> 00:04:00.595
<v Speaker 0>and take a look if you wish. You'll

00:04:00.595 --> 00:04:02.035
<v Speaker 0>see your control name and ID,

00:04:03.400 --> 00:04:04.920
<v Speaker 0>the built in Regal,

00:04:06.120 --> 00:04:09.400
<v Speaker 0>and the resources to apply the policy. On

00:04:09.400 --> 00:04:12.520
<v Speaker 0>the command line, you can run Kubescape scan

00:04:12.520 --> 00:04:13.400
<v Speaker 0>control

00:04:13.640 --> 00:04:15.320
<v Speaker 0>no latest tag,

00:04:15.895 --> 00:04:17.975
<v Speaker 0>where this is the name or ID that

00:04:17.975 --> 00:04:20.454
<v Speaker 0>you put into the control name form or

00:04:20.454 --> 00:04:22.215
<v Speaker 0>you can find in the JSON as we've

00:04:22.215 --> 00:04:25.015
<v Speaker 0>seen a moment ago. Next, we provide use

00:04:25.015 --> 00:04:28.055
<v Speaker 0>from and provide the file name to where

00:04:28.055 --> 00:04:31.255
<v Speaker 0>you downloaded your policy. The last parameter is

00:04:31.320 --> 00:04:34.120
<v Speaker 0>the resource or directory of resources that you

00:04:34.120 --> 00:04:35.480
<v Speaker 0>wish to scan.

00:04:36.840 --> 00:04:39.000
<v Speaker 0>And now we have a failed resource on

00:04:39.000 --> 00:04:41.880
<v Speaker 0>our no latest tag control, one failed resource

00:04:41.880 --> 00:04:45.160
<v Speaker 0>against two scanned. So let's pop open

00:04:45.485 --> 00:04:47.325
<v Speaker 0>our deployment dot YAML.

00:04:48.205 --> 00:04:50.285
<v Speaker 0>And as we can see here, the first

00:04:50.285 --> 00:04:53.565
<v Speaker 0>container in our deployment is NGINX with a

00:04:53.565 --> 00:04:56.125
<v Speaker 0>latest tag that we do not want. So

00:04:56.125 --> 00:04:58.365
<v Speaker 0>let's run our scan one more time.

00:05:00.860 --> 00:05:01.580
<v Speaker 0>Past.

00:05:01.900 --> 00:05:02.620
<v Speaker 0>Perfect.

00:05:03.100 --> 00:05:05.340
<v Speaker 0>Better security posture already

00:05:05.340 --> 00:05:07.340
<v Speaker 0>with a little help from the AI. But

00:05:07.340 --> 00:05:08.940
<v Speaker 0>we made that a little bit easy for

00:05:08.940 --> 00:05:09.820
<v Speaker 0>ChatGPT

00:05:09.820 --> 00:05:11.100
<v Speaker 0>and ARMOR platform.

00:05:11.340 --> 00:05:13.555
<v Speaker 0>So let's kick it up a notch. Let's

00:05:13.555 --> 00:05:15.795
<v Speaker 0>make this a little bit more challenging for

00:05:15.795 --> 00:05:16.755
<v Speaker 0>ChatGPT.

00:05:16.755 --> 00:05:19.795
<v Speaker 0>Let's say that we want a secure container.

00:05:19.875 --> 00:05:22.195
<v Speaker 0>And actually what we mean by secure is

00:05:22.195 --> 00:05:23.955
<v Speaker 0>that we don't want to allow any workload

00:05:23.955 --> 00:05:26.930
<v Speaker 0>in our cluster to add the capability

00:05:26.930 --> 00:05:28.290
<v Speaker 0>cap sysadmin.

00:05:28.290 --> 00:05:30.770
<v Speaker 0>So let's just type that up exactly as

00:05:30.770 --> 00:05:31.570
<v Speaker 0>I said it.

00:05:31.970 --> 00:05:33.330
<v Speaker 0>Do not allow

00:05:34.289 --> 00:05:35.570
<v Speaker 0>any workloads

00:05:36.050 --> 00:05:37.170
<v Speaker 0>to add

00:05:37.250 --> 00:05:38.370
<v Speaker 0>the cap

00:05:38.955 --> 00:05:39.675
<v Speaker 0>admin

00:05:40.395 --> 00:05:41.195
<v Speaker 0>capability

00:05:41.195 --> 00:05:42.475
<v Speaker 0>and click generate.

00:05:43.035 --> 00:05:45.195
<v Speaker 0>Okay. We have our secure control.

00:05:45.595 --> 00:05:48.395
<v Speaker 0>Deny CAPSYS admin capability to workloads with the

00:05:48.395 --> 00:05:51.755
<v Speaker 0>remediation path that basically says, hey, don't add

00:05:51.755 --> 00:05:53.755
<v Speaker 0>this capability. And on the right hand side,

00:05:53.970 --> 00:05:55.330
<v Speaker 0>we have some Rego.

00:05:55.490 --> 00:05:57.330
<v Speaker 0>So let's download this.

00:05:57.970 --> 00:06:00.290
<v Speaker 0>But before we run it locally on a

00:06:00.290 --> 00:06:02.610
<v Speaker 0>CLI, I want to show you a cool

00:06:02.610 --> 00:06:05.330
<v Speaker 0>little trick. First, open a new tab in

00:06:05.330 --> 00:06:06.130
<v Speaker 0>your browser

00:06:06.290 --> 00:06:08.530
<v Speaker 0>and search for the Rego playground

00:06:08.935 --> 00:06:10.135
<v Speaker 0>and click go.

00:06:10.775 --> 00:06:13.335
<v Speaker 0>This is an interactive playground that allows you

00:06:13.335 --> 00:06:15.495
<v Speaker 0>to test your Ragel policies.

00:06:16.294 --> 00:06:18.535
<v Speaker 0>And I'm going to paste in the Ragel

00:06:18.535 --> 00:06:21.495
<v Speaker 0>that we copied from the ARMOR platform and

00:06:21.495 --> 00:06:23.530
<v Speaker 0>you can click format.

00:06:23.930 --> 00:06:27.050
<v Speaker 0>From here, you can copy your example workload.

00:06:27.130 --> 00:06:28.970
<v Speaker 0>As we can see here, I have a

00:06:28.970 --> 00:06:31.370
<v Speaker 0>deployment but a stored as YAML.

00:06:32.090 --> 00:06:33.690
<v Speaker 0>Convert it to JSON,

00:06:34.810 --> 00:06:37.850
<v Speaker 0>create a list and paste it in. Again,

00:06:38.384 --> 00:06:41.185
<v Speaker 0>click format to tidy it up. Now we

00:06:41.185 --> 00:06:44.065
<v Speaker 0>have an interactive test bed that allows us

00:06:44.065 --> 00:06:45.185
<v Speaker 0>to evaluate

00:06:45.745 --> 00:06:47.185
<v Speaker 0>our Regal policies.

00:06:47.264 --> 00:06:49.664
<v Speaker 0>So let's add the capability

00:06:49.664 --> 00:06:51.985
<v Speaker 0>that we don't want to our workload,

00:06:54.110 --> 00:06:54.910
<v Speaker 0>like so.

00:06:55.230 --> 00:06:56.750
<v Speaker 0>And if we click evaluate,

00:06:56.830 --> 00:06:59.710
<v Speaker 0>we don't get a deny in our output,

00:06:59.710 --> 00:07:02.670
<v Speaker 0>something is not quite right. So the best

00:07:02.670 --> 00:07:04.750
<v Speaker 0>way to debug this in a Regal playground

00:07:04.750 --> 00:07:05.550
<v Speaker 0>is

00:07:05.550 --> 00:07:07.630
<v Speaker 0>to turn on the options for coverage.

00:07:09.564 --> 00:07:11.805
<v Speaker 0>Now when we click evaluate, we will see

00:07:11.805 --> 00:07:15.085
<v Speaker 0>a line by line breakthrough of any evaluation

00:07:15.085 --> 00:07:16.604
<v Speaker 0>that was true or false.

00:07:17.564 --> 00:07:19.645
<v Speaker 0>And as we can see here, it never

00:07:19.645 --> 00:07:21.965
<v Speaker 0>reaches line eight where it checks with the

00:07:21.965 --> 00:07:24.720
<v Speaker 0>capability capsid admin being added. And the reason

00:07:24.720 --> 00:07:26.240
<v Speaker 0>is the path

00:07:26.480 --> 00:07:28.240
<v Speaker 0>for the container spec

00:07:28.240 --> 00:07:29.600
<v Speaker 0>or properties

00:07:29.680 --> 00:07:32.000
<v Speaker 0>on our deployment is incorrect. Now I've noticed

00:07:32.000 --> 00:07:33.920
<v Speaker 0>this a few times with the chat GPT

00:07:33.920 --> 00:07:36.240
<v Speaker 0>integration is that it's not always good at

00:07:36.240 --> 00:07:39.505
<v Speaker 0>getting spec templates, spec containers versus resource spec

00:07:39.505 --> 00:07:40.465
<v Speaker 0>containers.

00:07:40.625 --> 00:07:42.705
<v Speaker 0>So you may have to tweak this depending

00:07:42.705 --> 00:07:44.865
<v Speaker 0>on the policy you get back from the

00:07:44.865 --> 00:07:47.505
<v Speaker 0>integration. To fix this, I can do spec

00:07:47.665 --> 00:07:48.625
<v Speaker 0>template

00:07:48.625 --> 00:07:49.505
<v Speaker 0>spec

00:07:49.505 --> 00:07:52.065
<v Speaker 0>like so. Now when we click evaluate, we

00:07:52.065 --> 00:07:53.265
<v Speaker 0>get our error message

00:07:53.650 --> 00:07:55.650
<v Speaker 0>that we can know that we shouldn't be

00:07:55.650 --> 00:07:58.370
<v Speaker 0>adding Capsys admin to our pod.

00:07:58.930 --> 00:08:00.290
<v Speaker 0>So let's remove it

00:08:00.530 --> 00:08:02.370
<v Speaker 0>and add cap net

00:08:02.849 --> 00:08:03.490
<v Speaker 0>raw

00:08:03.889 --> 00:08:04.930
<v Speaker 0>and evaluate.

00:08:05.090 --> 00:08:07.445
<v Speaker 0>Now our policy is successful.

00:08:07.605 --> 00:08:09.605
<v Speaker 0>Now if you're wondering how to tweak this

00:08:09.605 --> 00:08:12.245
<v Speaker 0>within the JSON that you've downloaded from the

00:08:12.245 --> 00:08:13.365
<v Speaker 0>ARMOR platform,

00:08:14.165 --> 00:08:17.845
<v Speaker 0>you can come here, copy your secure policy

00:08:19.790 --> 00:08:22.190
<v Speaker 0>like so. Pop it open in Versus code

00:08:22.190 --> 00:08:24.590
<v Speaker 0>and save it to force it to format.

00:08:24.590 --> 00:08:27.470
<v Speaker 0>Your rule is where the Rago lives here.

00:08:28.910 --> 00:08:31.230
<v Speaker 0>We can scroll along and modify

00:08:39.454 --> 00:08:41.294
<v Speaker 0>Like so. So it can be a little

00:08:41.294 --> 00:08:43.774
<v Speaker 0>bit finicky, but it's not that hard to

00:08:43.774 --> 00:08:46.730
<v Speaker 0>fix. Plus, we just described

00:08:46.730 --> 00:08:47.930
<v Speaker 0>a policy

00:08:48.170 --> 00:08:50.569
<v Speaker 0>to block capsid admin being added as a

00:08:50.569 --> 00:08:53.529
<v Speaker 0>capability to any pod without having to understand

00:08:53.529 --> 00:08:56.649
<v Speaker 0>too much about the RADO language. That is

00:08:56.649 --> 00:08:59.705
<v Speaker 0>pretty cool. So go check out ARMOR platform.

00:08:59.785 --> 00:09:02.904
<v Speaker 0>Use the custom controls and AI to help

00:09:02.904 --> 00:09:05.145
<v Speaker 0>you generate all the Regal that you need

00:09:05.225 --> 00:09:07.385
<v Speaker 0>for your cluster. Is it perfect?

00:09:07.625 --> 00:09:11.020
<v Speaker 0>No. But software rarely is. But I can

00:09:11.020 --> 00:09:13.100
<v Speaker 0>tell you that the team at Armo are

00:09:13.100 --> 00:09:16.140
<v Speaker 0>improving this integration every single day. But what

00:09:16.140 --> 00:09:18.300
<v Speaker 0>doesn't work today when you're watching this video

00:09:18.300 --> 00:09:20.540
<v Speaker 0>may very well work tomorrow. I'm gonna be

00:09:20.540 --> 00:09:22.780
<v Speaker 0>keeping a close eye on this integration because

00:09:22.780 --> 00:09:24.860
<v Speaker 0>it personally solves a lot of the challenges

00:09:24.860 --> 00:09:27.324
<v Speaker 0>that I have right in Regal. And sometimes

00:09:27.324 --> 00:09:29.324
<v Speaker 0>all you need is a little kick start

00:09:29.324 --> 00:09:30.764
<v Speaker 0>to get you going. So go check it

00:09:30.764 --> 00:09:32.605
<v Speaker 0>out. Have some fun and let me know

00:09:32.605 --> 00:09:34.685
<v Speaker 0>how you get on in the comments. Have

00:09:34.685 --> 00:09:35.165
<v Speaker 0>a great day.
