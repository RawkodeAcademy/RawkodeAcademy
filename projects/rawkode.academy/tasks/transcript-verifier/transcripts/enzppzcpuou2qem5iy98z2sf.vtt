WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 9cbc706d-bcca-44f5-a106-8d73c55e1cac
Created: 2025-04-29T12:51:21.220Z
Duration: 4674.241
Channels: 1

00:01:48.175 --> 00:01:51.520
<v Speaker 0>Hello. And welcome back to the Rawkode Academy.

00:01:51.520 --> 00:01:53.759
<v Speaker 0>I'm your host Rawkode, although sometimes known as

00:01:53.759 --> 00:01:54.880
<v Speaker 0>David Flanagan.

00:01:55.119 --> 00:01:57.759
<v Speaker 0>Today, we are continuing with Rawkode Live where

00:01:57.759 --> 00:01:59.840
<v Speaker 0>we take a look and get hands on

00:01:59.840 --> 00:02:00.479
<v Speaker 0>with

00:02:01.119 --> 00:02:02.479
<v Speaker 0>open source software

00:02:02.560 --> 00:02:04.320
<v Speaker 0>and the cloud native space to help make

00:02:04.320 --> 00:02:06.055
<v Speaker 0>your lives a little bit easier. And, you

00:02:06.055 --> 00:02:07.575
<v Speaker 0>know, for a second there, I forgot entirely

00:02:07.575 --> 00:02:09.575
<v Speaker 0>what I'm doing and why I'm here. However,

00:02:10.055 --> 00:02:11.575
<v Speaker 0>we're gonna be taking a look at a

00:02:11.575 --> 00:02:13.335
<v Speaker 0>really cool open source project today because it

00:02:13.335 --> 00:02:15.495
<v Speaker 0>solves a very difficult challenge. And I'm sure

00:02:15.495 --> 00:02:17.175
<v Speaker 0>if you're watching this, you've had to implement

00:02:17.175 --> 00:02:19.430
<v Speaker 0>identity and authentication at some point in your

00:02:19.430 --> 00:02:21.510
<v Speaker 0>career, probably many, many times.

00:02:21.830 --> 00:02:24.070
<v Speaker 0>Fortunately, that is a lot easier today.

00:02:24.390 --> 00:02:26.630
<v Speaker 0>To guide us on our journey of Zitadel,

00:02:26.630 --> 00:02:29.750
<v Speaker 0>I am joined by Florian.

00:02:29.750 --> 00:02:31.350
<v Speaker 0>Hello, Florian. How are you?

00:02:31.830 --> 00:02:34.195
<v Speaker 1>Hello. I'm doing great. Thank you.

00:02:34.595 --> 00:02:35.475
<v Speaker 0>Awesome.

00:02:35.635 --> 00:02:36.515
<v Speaker 0>Can

00:02:36.835 --> 00:02:38.755
<v Speaker 0>you just start and tell us a little

00:02:38.755 --> 00:02:40.355
<v Speaker 0>bit more about you?

00:02:41.555 --> 00:02:45.955
<v Speaker 1>For sure. I'm Florian. I'm CEO and and

00:02:46.195 --> 00:02:47.955
<v Speaker 1>cofounder of Zitadel.

00:02:48.035 --> 00:02:50.379
<v Speaker 1>And, I mean, there's many reasons why we

00:02:50.379 --> 00:02:51.420
<v Speaker 1>built Zitadel,

00:02:51.819 --> 00:02:54.540
<v Speaker 1>but one of which is we don't want

00:02:54.540 --> 00:02:55.580
<v Speaker 1>to give people

00:02:55.819 --> 00:02:58.379
<v Speaker 1>the pain that you need while building your

00:02:58.379 --> 00:03:01.500
<v Speaker 1>own authentication authorization solution because there is, like,

00:03:01.735 --> 00:03:03.575
<v Speaker 1>a lot of things to it. Right? So

00:03:03.575 --> 00:03:05.415
<v Speaker 1>it's not just two input fields and the

00:03:05.415 --> 00:03:08.614
<v Speaker 1>button because that's an absolute running deck. There

00:03:08.614 --> 00:03:10.775
<v Speaker 1>is way more depth to it. And, yeah,

00:03:10.775 --> 00:03:12.775
<v Speaker 1>we try to take a lot of that

00:03:12.775 --> 00:03:13.815
<v Speaker 1>pain away from people.

00:03:14.760 --> 00:03:16.920
<v Speaker 0>Yeah. I mean, surely, off end is as

00:03:16.920 --> 00:03:19.079
<v Speaker 0>simple as a form and submit and then

00:03:19.079 --> 00:03:21.959
<v Speaker 0>insert into user's username and password. You know?

00:03:21.959 --> 00:03:23.400
<v Speaker 0>We don't need to worry about that crazy

00:03:23.400 --> 00:03:25.319
<v Speaker 0>and hashing stuff or anything like that. Right?

00:03:26.995 --> 00:03:29.155
<v Speaker 1>Well, that's certainly off for a good start.

00:03:29.155 --> 00:03:31.235
<v Speaker 1>Yes. I mean, you can all already discuss

00:03:31.235 --> 00:03:34.115
<v Speaker 1>what hashing algorithms are correct and how to

00:03:34.115 --> 00:03:36.355
<v Speaker 1>use them properly and what salt and what

00:03:36.355 --> 00:03:38.755
<v Speaker 1>cost. And so, that's that's where the party

00:03:38.755 --> 00:03:40.020
<v Speaker 1>starts. And

00:03:40.260 --> 00:03:42.500
<v Speaker 1>that's not even without touching the new stuff.

00:03:42.500 --> 00:03:44.820
<v Speaker 1>Right? Pass keys that's around the corner or

00:03:44.820 --> 00:03:47.620
<v Speaker 1>many many already rely on and OTP and

00:03:47.620 --> 00:03:49.300
<v Speaker 1>what kind of OTP there is. And so

00:03:49.300 --> 00:03:51.620
<v Speaker 1>there is, like, so many flavors, and you

00:03:51.620 --> 00:03:53.860
<v Speaker 1>can do so many things wrong. And

00:03:54.100 --> 00:03:55.795
<v Speaker 1>I think it's specialization

00:03:55.795 --> 00:03:58.674
<v Speaker 1>in-depth that's kind of the the the brilliancy

00:03:58.674 --> 00:04:01.954
<v Speaker 1>behind the whole authentication and authorization and identity

00:04:01.954 --> 00:04:03.235
<v Speaker 1>topic in general,

00:04:03.394 --> 00:04:05.475
<v Speaker 1>and that's what we specialized in, basically.

00:04:06.435 --> 00:04:08.034
<v Speaker 0>Yeah. It's it's definitely

00:04:08.260 --> 00:04:10.340
<v Speaker 0>one of those areas of software development that

00:04:10.340 --> 00:04:12.420
<v Speaker 0>I think you're better just offloading that pain

00:04:12.420 --> 00:04:14.660
<v Speaker 0>to someone else like you. Right? Because

00:04:15.380 --> 00:04:17.459
<v Speaker 0>I know we joke, but it's just a

00:04:17.459 --> 00:04:19.300
<v Speaker 0>username, a password, save it at database rate.

00:04:19.300 --> 00:04:20.580
<v Speaker 0>You've got fine. That's that may be v

00:04:20.580 --> 00:04:22.180
<v Speaker 0>one, but it's definitely not something you ship

00:04:22.180 --> 00:04:23.775
<v Speaker 0>into production. That may have been cool in

00:04:23.775 --> 00:04:24.815
<v Speaker 0>1998,

00:04:24.815 --> 00:04:26.655
<v Speaker 0>but not so much anymore.

00:04:27.134 --> 00:04:29.455
<v Speaker 0>You also mentioned passkeys, which I think they're

00:04:29.455 --> 00:04:32.175
<v Speaker 0>very exciting. And but supporting them is a

00:04:32.175 --> 00:04:33.615
<v Speaker 0>bit of like the Wild West right now.

00:04:33.615 --> 00:04:34.815
<v Speaker 0>I'm hoping you're gonna show me something a

00:04:34.815 --> 00:04:35.615
<v Speaker 0>bit more nicer.

00:04:36.180 --> 00:04:39.060
<v Speaker 0>There's also hardware tokens. There's OTP. There's time

00:04:39.060 --> 00:04:40.180
<v Speaker 0>based OTP.

00:04:40.900 --> 00:04:43.620
<v Speaker 0>There's an OAuth too. So, you know, I

00:04:43.620 --> 00:04:45.380
<v Speaker 0>I still see people getting all of this

00:04:45.380 --> 00:04:47.220
<v Speaker 0>wrong today. You know when you go and

00:04:47.220 --> 00:04:48.660
<v Speaker 0>you sign in to a website and it's

00:04:48.660 --> 00:04:50.485
<v Speaker 0>like, okay. Log in with Google. Oh, shit.

00:04:50.485 --> 00:04:51.765
<v Speaker 0>I didn't use Google. Okay. Log in with

00:04:51.765 --> 00:04:53.365
<v Speaker 0>GitHub. They're both the same email address and

00:04:53.365 --> 00:04:54.645
<v Speaker 0>I end up with two different accounts and

00:04:54.645 --> 00:04:56.885
<v Speaker 0>it just all ends up confusing and I'm

00:04:56.885 --> 00:04:58.965
<v Speaker 0>just pulling my hair out going, this has

00:04:58.965 --> 00:04:59.845
<v Speaker 0>to be easier.

00:05:00.485 --> 00:05:02.485
<v Speaker 0>It Zitadel's gonna solve all of that for

00:05:02.485 --> 00:05:03.125
<v Speaker 0>me. Is that right?

00:05:04.240 --> 00:05:05.200
<v Speaker 1>For hopefully.

00:05:06.560 --> 00:05:09.280
<v Speaker 1>No pressure. Honestly no. No. I mean, at

00:05:09.280 --> 00:05:11.280
<v Speaker 1>least that's what you aspire to be. Right?

00:05:11.280 --> 00:05:12.479
<v Speaker 1>I mean, it it's like

00:05:13.040 --> 00:05:15.840
<v Speaker 1>I think sometimes of Citadel is like the

00:05:15.840 --> 00:05:17.280
<v Speaker 1>stripe of identity.

00:05:17.280 --> 00:05:20.125
<v Speaker 1>We try to keep the pumping work away

00:05:20.125 --> 00:05:21.965
<v Speaker 1>of people who just want to build their

00:05:21.965 --> 00:05:22.845
<v Speaker 1>applications.

00:05:22.845 --> 00:05:25.325
<v Speaker 1>And, I mean, as soon as you start

00:05:25.325 --> 00:05:28.125
<v Speaker 1>serving to enterprise customers, things can get really

00:05:28.125 --> 00:05:29.805
<v Speaker 1>weird. Like, then you need to have support

00:05:29.805 --> 00:05:30.445
<v Speaker 1>for SAML,

00:05:30.900 --> 00:05:32.660
<v Speaker 1>and SAML can be weird. There is not

00:05:32.660 --> 00:05:35.300
<v Speaker 1>even, a proper certification framework. And so there

00:05:35.380 --> 00:05:37.220
<v Speaker 1>the that's why I said there's so many

00:05:37.220 --> 00:05:39.700
<v Speaker 1>moving pieces in that stack

00:05:39.780 --> 00:05:40.420
<v Speaker 1>that

00:05:40.660 --> 00:05:43.780
<v Speaker 1>I and that's my certainly a biased opinion,

00:05:43.780 --> 00:05:46.340
<v Speaker 1>but I would rather use something that's predefined

00:05:46.340 --> 00:05:48.075
<v Speaker 1>and brings brings a lot of the stuff

00:05:48.075 --> 00:05:51.035
<v Speaker 1>Turkey with it rather than just building it

00:05:51.035 --> 00:05:53.515
<v Speaker 1>out in whatever framework I have lying around.

00:05:53.755 --> 00:05:55.915
<v Speaker 1>Even though I must say good things on

00:05:55.915 --> 00:05:56.555
<v Speaker 1>on

00:05:56.795 --> 00:05:58.955
<v Speaker 1>some of the frameworks out there. Some of

00:05:58.955 --> 00:06:01.880
<v Speaker 1>them are doing really well made stuff as

00:06:01.880 --> 00:06:03.320
<v Speaker 1>as long as you have, like, a tight

00:06:03.320 --> 00:06:05.880
<v Speaker 1>scope. As soon as it gets broader with

00:06:05.880 --> 00:06:08.120
<v Speaker 1>further integrations, it can get tedious.

00:06:09.480 --> 00:06:10.280
<v Speaker 1>Awesome.

00:06:10.680 --> 00:06:11.320
<v Speaker 0>Alright.

00:06:11.560 --> 00:06:13.080
<v Speaker 0>I'm gonna go off on a tangent first

00:06:13.080 --> 00:06:14.680
<v Speaker 0>and then come back. But I just wanted

00:06:14.680 --> 00:06:15.080
<v Speaker 0>to say,

00:06:15.685 --> 00:06:17.045
<v Speaker 0>I have taken a look at a lot

00:06:17.045 --> 00:06:19.445
<v Speaker 0>of tools in this space. And what I

00:06:19.445 --> 00:06:21.925
<v Speaker 0>love about Zitadel that's different from all the

00:06:21.925 --> 00:06:24.085
<v Speaker 0>other kind of awesome providers that I've seen

00:06:24.245 --> 00:06:27.045
<v Speaker 0>is that people might think identity is hard

00:06:27.045 --> 00:06:30.005
<v Speaker 0>and is enterprise y and it's no fun

00:06:30.005 --> 00:06:31.600
<v Speaker 0>and that it should just be, like, black

00:06:31.600 --> 00:06:33.200
<v Speaker 0>text on the way back around and boarding.

00:06:33.200 --> 00:06:35.760
<v Speaker 0>But the Zitadel branding and the aesthetic, I

00:06:35.760 --> 00:06:38.240
<v Speaker 0>just thought was absolutely top notch. I thought

00:06:38.240 --> 00:06:40.480
<v Speaker 0>that was breath of fresh air.

00:06:41.120 --> 00:06:41.680
<v Speaker 0>So

00:06:42.160 --> 00:06:44.000
<v Speaker 0>I just wanted to say, like, kudos. That

00:06:44.000 --> 00:06:44.720
<v Speaker 0>would I love that.

00:06:45.595 --> 00:06:47.355
<v Speaker 0>But let's get back. We could we could

00:06:47.355 --> 00:06:48.715
<v Speaker 0>we could talk about who who the name

00:06:48.715 --> 00:06:50.235
<v Speaker 0>is, the person on the team that does,

00:06:50.235 --> 00:06:51.675
<v Speaker 0>but whatever.

00:06:52.075 --> 00:06:53.115
<v Speaker 0>I wanna know

00:06:53.595 --> 00:06:55.835
<v Speaker 0>what your background is and how you got

00:06:55.835 --> 00:06:57.035
<v Speaker 0>into building

00:06:57.515 --> 00:06:59.435
<v Speaker 0>open source company around

00:06:59.435 --> 00:07:00.155
<v Speaker 0>identity.

00:07:01.730 --> 00:07:02.930
<v Speaker 1>Sure. I mean,

00:07:03.490 --> 00:07:06.690
<v Speaker 1>originally, I was a vehicle electronics engineer, so

00:07:06.690 --> 00:07:07.970
<v Speaker 1>I I built

00:07:08.770 --> 00:07:10.690
<v Speaker 1>yeah. I I honestly, that's kind of where

00:07:10.690 --> 00:07:11.970
<v Speaker 1>where we all started.

00:07:12.210 --> 00:07:14.450
<v Speaker 1>I I built and repaired electronics

00:07:14.450 --> 00:07:15.650
<v Speaker 1>in vehicles, especially

00:07:16.405 --> 00:07:19.525
<v Speaker 1>trucks and stuff and and first responder vehicles.

00:07:19.765 --> 00:07:21.285
<v Speaker 1>And so there you had

00:07:21.525 --> 00:07:23.365
<v Speaker 1>well, you should have a lot of security,

00:07:23.365 --> 00:07:25.605
<v Speaker 1>basically, but that well, there was not so

00:07:25.605 --> 00:07:27.845
<v Speaker 1>much security in there at that time. And

00:07:27.845 --> 00:07:30.390
<v Speaker 1>I thought, well, I don't stick to that

00:07:30.390 --> 00:07:32.790
<v Speaker 1>area of expertise for too long because you

00:07:32.790 --> 00:07:35.670
<v Speaker 1>get dirty hands. It's it's clam. You'll get

00:07:35.670 --> 00:07:37.430
<v Speaker 1>snow on your head if you try to

00:07:37.430 --> 00:07:39.750
<v Speaker 1>lay under a car. So, yeah, it was

00:07:39.750 --> 00:07:41.750
<v Speaker 1>a nice time, but I I switched carrier

00:07:41.750 --> 00:07:44.735
<v Speaker 1>pass after that. Basically, I I did some

00:07:44.735 --> 00:07:47.295
<v Speaker 1>military service and then went into the whole

00:07:47.375 --> 00:07:49.535
<v Speaker 1>we call call it IT at that point,

00:07:49.775 --> 00:07:52.015
<v Speaker 1>where I did a lot of system engineering,

00:07:52.015 --> 00:07:53.055
<v Speaker 1>basically. So

00:07:53.775 --> 00:07:57.535
<v Speaker 1>mainly the networking stuff like Cisco at that

00:07:57.535 --> 00:07:59.870
<v Speaker 1>point in time. I got some certifications rolling,

00:07:59.870 --> 00:08:02.590
<v Speaker 1>and then I I once again switched carrier

00:08:02.590 --> 00:08:04.350
<v Speaker 1>paths to the software side.

00:08:04.910 --> 00:08:06.830
<v Speaker 1>So, I mean, yeah, there's, like, a red

00:08:06.830 --> 00:08:09.790
<v Speaker 1>a red line through all of that because

00:08:09.790 --> 00:08:11.630
<v Speaker 1>can be programmed,

00:08:11.950 --> 00:08:14.475
<v Speaker 1>switches can be programmed to some extent depending

00:08:14.475 --> 00:08:15.355
<v Speaker 1>on the vendor.

00:08:15.595 --> 00:08:18.075
<v Speaker 1>And then I switched to to companies who

00:08:18.075 --> 00:08:19.515
<v Speaker 1>actually build software.

00:08:19.675 --> 00:08:23.515
<v Speaker 1>And after some more project driven companies, I

00:08:23.515 --> 00:08:25.515
<v Speaker 1>ended up in a company in Switzerland,

00:08:25.755 --> 00:08:27.915
<v Speaker 1>which built services for the public sector.

00:08:28.639 --> 00:08:30.800
<v Speaker 1>And there, I met the team that actually

00:08:30.800 --> 00:08:33.839
<v Speaker 1>built and operated identity systems for the public

00:08:33.839 --> 00:08:34.480
<v Speaker 1>government.

00:08:34.720 --> 00:08:37.279
<v Speaker 1>So first responders that needed to log in

00:08:37.279 --> 00:08:40.000
<v Speaker 1>somewhere to check a citizen's record and such

00:08:40.000 --> 00:08:42.355
<v Speaker 1>things. And during that time, the team and

00:08:42.355 --> 00:08:45.475
<v Speaker 1>I, we identified a lot of problems

00:08:45.475 --> 00:08:48.035
<v Speaker 1>around the existing solutions in the market. I

00:08:48.035 --> 00:08:50.995
<v Speaker 1>mean, like, the Keycloaks and Fortrox of zeros.

00:08:51.315 --> 00:08:53.555
<v Speaker 1>And we thought, why don't we just do

00:08:53.555 --> 00:08:55.660
<v Speaker 1>better? And since it was like the rise

00:08:55.660 --> 00:08:57.740
<v Speaker 1>of Kubernetes was really going at that point

00:08:57.740 --> 00:09:00.380
<v Speaker 1>in time, that was basically 2016

00:09:00.380 --> 00:09:02.860
<v Speaker 1>where, yeah, the hype just started,

00:09:03.100 --> 00:09:05.020
<v Speaker 1>we thought, why don't we build a cloud

00:09:05.020 --> 00:09:07.260
<v Speaker 1>native identity infrastructure

00:09:07.260 --> 00:09:10.644
<v Speaker 1>tool that is open source, that behaves well

00:09:10.644 --> 00:09:11.764
<v Speaker 1>on containerized

00:09:11.764 --> 00:09:12.644
<v Speaker 1>platforms,

00:09:12.964 --> 00:09:15.845
<v Speaker 1>and is more optimized for developers than the

00:09:15.845 --> 00:09:19.444
<v Speaker 1>past tools. Right? Because the past tools, in

00:09:19.444 --> 00:09:22.324
<v Speaker 1>our opinion, at least, were mainly focused towards

00:09:22.324 --> 00:09:23.125
<v Speaker 1>IT guys.

00:09:23.940 --> 00:09:26.500
<v Speaker 1>And we thought, well, we should have better

00:09:26.500 --> 00:09:28.420
<v Speaker 1>APIs, and so let's invest some time on

00:09:28.420 --> 00:09:31.540
<v Speaker 1>that end. Yeah. That's basically the origin story

00:09:31.540 --> 00:09:34.100
<v Speaker 1>of me and kind of Zitadel as well

00:09:34.100 --> 00:09:34.820
<v Speaker 1>to some extent.

00:09:35.935 --> 00:09:36.815
<v Speaker 0>Awesome.

00:09:37.135 --> 00:09:38.655
<v Speaker 0>I don't know why my camera keeps losing

00:09:38.655 --> 00:09:40.655
<v Speaker 0>focus, but hopefully it fixes itself.

00:09:43.055 --> 00:09:43.775
<v Speaker 0>Awesome.

00:09:44.415 --> 00:09:45.855
<v Speaker 0>I'm assuming whether it be in a cloud

00:09:45.855 --> 00:09:48.735
<v Speaker 0>native identity management solution, it's written in Go.

00:09:48.735 --> 00:09:49.695
<v Speaker 0>Is that a fair assumption?

00:09:50.490 --> 00:09:51.690
<v Speaker 1>Yes. It is.

00:09:53.370 --> 00:09:55.450
<v Speaker 1>Mean Yeah. I mean, that's that's that's a

00:09:55.450 --> 00:09:57.050
<v Speaker 0>good thing. I mean, it better if it

00:09:57.050 --> 00:09:58.570
<v Speaker 0>is Rust, but I'm not gonna split here.

00:09:58.570 --> 00:09:59.290
<v Speaker 0>It's right. But

00:09:59.930 --> 00:10:01.850
<v Speaker 0>we you know, Keycloak was amazing back in

00:10:01.850 --> 00:10:04.545
<v Speaker 0>the day. But running and operating Java, especially

00:10:04.545 --> 00:10:07.185
<v Speaker 0>in containers on Kubernetes, is is really, really

00:10:07.185 --> 00:10:09.745
<v Speaker 0>painful. And just having something that is

00:10:10.065 --> 00:10:11.425
<v Speaker 0>I'm gonna say modern, but I don't mean

00:10:11.425 --> 00:10:13.745
<v Speaker 0>that Keycloak is, like, integrated or anything, but,

00:10:13.745 --> 00:10:15.740
<v Speaker 0>you know, built on more modern technologies. And

00:10:15.740 --> 00:10:17.019
<v Speaker 0>again, I don't mean the Java. In fact,

00:10:17.019 --> 00:10:18.220
<v Speaker 0>you know what I do. Java is old

00:10:18.220 --> 00:10:19.820
<v Speaker 0>and crap. I don't like it. So

00:10:20.940 --> 00:10:22.940
<v Speaker 0>someone's gonna yell at me for that eventually,

00:10:22.940 --> 00:10:25.420
<v Speaker 0>but that's okay. Oh, they did already a

00:10:25.420 --> 00:10:26.779
<v Speaker 1>lot of yelling on our end too.

00:10:27.605 --> 00:10:28.725
<v Speaker 1>Actually,

00:10:28.885 --> 00:10:30.245
<v Speaker 1>I mean, to be honest, we took a

00:10:30.245 --> 00:10:32.245
<v Speaker 1>lot of inspiration of Keycloak,

00:10:32.565 --> 00:10:35.365
<v Speaker 1>but there were some concepts that were fundamentally

00:10:35.365 --> 00:10:37.925
<v Speaker 1>blow broken to to what we thought,

00:10:38.245 --> 00:10:40.885
<v Speaker 1>like that amount of realms you can run-in

00:10:40.885 --> 00:10:42.965
<v Speaker 1>parallel and and how you need to configure

00:10:42.965 --> 00:10:45.260
<v Speaker 1>and set up Keycloak to keep it scalable.

00:10:45.420 --> 00:10:47.420
<v Speaker 1>And, I mean, in the past, you couldn't

00:10:47.420 --> 00:10:50.700
<v Speaker 1>even do, like, proper zero downtime upgrades.

00:10:50.780 --> 00:10:52.620
<v Speaker 1>And so there was a lot of operational

00:10:52.620 --> 00:10:55.020
<v Speaker 1>hustle in in in Keycloak,

00:10:55.020 --> 00:10:57.100
<v Speaker 1>which we try to to solve as well

00:10:57.100 --> 00:10:58.380
<v Speaker 1>during the process.

00:10:58.700 --> 00:10:58.860
<v Speaker 1>And,

00:10:59.695 --> 00:11:02.255
<v Speaker 1>yeah, the language was just one means of

00:11:02.255 --> 00:11:03.295
<v Speaker 1>getting there.

00:11:03.935 --> 00:11:06.255
<v Speaker 1>It has some some nice benefits go, but

00:11:06.255 --> 00:11:06.975
<v Speaker 1>it

00:11:07.135 --> 00:11:09.295
<v Speaker 1>also has some drawbacks. Right? So I'm not

00:11:09.295 --> 00:11:11.375
<v Speaker 1>going to sugarcoat you too much there because

00:11:11.375 --> 00:11:13.160
<v Speaker 1>there is a drawback, and we'll come to

00:11:13.160 --> 00:11:15.640
<v Speaker 1>that as we we talk about how Zitadel

00:11:15.640 --> 00:11:16.520
<v Speaker 1>is built,

00:11:17.079 --> 00:11:19.800
<v Speaker 1>about about what what things we experienced during

00:11:19.800 --> 00:11:21.560
<v Speaker 1>that initial build phase.

00:11:22.279 --> 00:11:25.000
<v Speaker 0>Alright. Awesome. Well, let's cover just one more

00:11:25.000 --> 00:11:26.200
<v Speaker 0>thing, and then we'll get on to the

00:11:26.200 --> 00:11:27.959
<v Speaker 0>hands on component, and we'll actually show people

00:11:27.959 --> 00:11:28.985
<v Speaker 0>how to get started.

00:11:29.385 --> 00:11:30.585
<v Speaker 0>Zitadel,

00:11:30.585 --> 00:11:32.345
<v Speaker 0>we said open source more than once now,

00:11:32.345 --> 00:11:34.505
<v Speaker 0>but I I I wanna clarify. Is Zitadel

00:11:34.665 --> 00:11:37.065
<v Speaker 0>you are a SaaS based company, so you

00:11:37.065 --> 00:11:39.145
<v Speaker 0>do offer to manage all of this for

00:11:39.145 --> 00:11:40.904
<v Speaker 0>people, and they can sign up for Zitadel

00:11:40.904 --> 00:11:43.625
<v Speaker 0>cloud and get started without installing or running

00:11:43.625 --> 00:11:46.160
<v Speaker 0>anything. But is it open source? Is it

00:11:46.160 --> 00:11:48.560
<v Speaker 0>open core? What is your business model, and

00:11:48.560 --> 00:11:50.320
<v Speaker 0>how do you work with open source community?

00:11:51.839 --> 00:11:52.880
<v Speaker 1>We we think

00:11:53.279 --> 00:11:54.000
<v Speaker 1>the

00:11:54.399 --> 00:11:57.279
<v Speaker 1>everything related to authentication and authorization

00:11:57.615 --> 00:12:00.495
<v Speaker 1>and audit capabilities and getting your data out

00:12:00.495 --> 00:12:03.055
<v Speaker 1>of an identity system needs to be open.

00:12:03.055 --> 00:12:03.615
<v Speaker 1>And

00:12:04.175 --> 00:12:06.334
<v Speaker 1>to the point in time, we run the

00:12:06.334 --> 00:12:08.975
<v Speaker 1>same code in our cloud service. Our paying

00:12:08.975 --> 00:12:10.654
<v Speaker 1>customers run the same code as the open

00:12:10.654 --> 00:12:12.654
<v Speaker 1>source version that you can fetch from GitHub.

00:12:12.990 --> 00:12:15.150
<v Speaker 1>So right now, everything is an Apache two

00:12:15.150 --> 00:12:17.550
<v Speaker 1>license and fully open source. And I can

00:12:17.550 --> 00:12:20.510
<v Speaker 1>tell where we will draw a line down

00:12:20.510 --> 00:12:23.470
<v Speaker 1>the future will be things like analytics and

00:12:23.470 --> 00:12:25.070
<v Speaker 1>and and reporting

00:12:25.070 --> 00:12:27.390
<v Speaker 1>stuff because that's where we think we can

00:12:27.390 --> 00:12:31.225
<v Speaker 1>provide value add stuff for for paying customers,

00:12:31.225 --> 00:12:34.425
<v Speaker 1>basically. Because there is a lot of interesting

00:12:34.425 --> 00:12:36.345
<v Speaker 1>data buried in identity.

00:12:36.345 --> 00:12:38.905
<v Speaker 1>You basically get the high quality data pinned

00:12:38.905 --> 00:12:40.940
<v Speaker 1>to a user, and you can tell what

00:12:40.940 --> 00:12:43.100
<v Speaker 1>happened with a user in the past, where

00:12:43.100 --> 00:12:44.940
<v Speaker 1>he locked in from, what what what user

00:12:44.940 --> 00:12:46.620
<v Speaker 1>agent he had, and all such things.

00:12:47.020 --> 00:12:48.860
<v Speaker 1>And that can be used in a positive

00:12:48.860 --> 00:12:51.100
<v Speaker 1>way for our customers. And and I can

00:12:51.100 --> 00:12:53.020
<v Speaker 1>tell you what what's in there because that's

00:12:53.020 --> 00:12:55.339
<v Speaker 1>a a huge bag of interesting features.

00:12:55.824 --> 00:12:56.945
<v Speaker 1>But right now,

00:12:57.185 --> 00:12:58.625
<v Speaker 1>the the as is state is really like

00:12:58.625 --> 00:13:00.225
<v Speaker 1>is full blown open source

00:13:00.704 --> 00:13:01.584
<v Speaker 1>deployed

00:13:01.584 --> 00:13:04.545
<v Speaker 1>wherever you want, however you want. And if

00:13:04.545 --> 00:13:06.464
<v Speaker 1>you're big enough and interested in a support

00:13:06.464 --> 00:13:08.865
<v Speaker 1>contract, please call us up. There is a

00:13:08.865 --> 00:13:10.305
<v Speaker 1>contact section on our website.

00:13:11.000 --> 00:13:12.680
<v Speaker 1>Or if you don't want to hustle off

00:13:12.680 --> 00:13:14.200
<v Speaker 1>of operating Zitadel,

00:13:14.200 --> 00:13:16.040
<v Speaker 1>well, use our cloud service. There is even

00:13:16.040 --> 00:13:16.920
<v Speaker 1>a free tier

00:13:17.399 --> 00:13:19.320
<v Speaker 1>that you can use to to get basically

00:13:19.320 --> 00:13:20.680
<v Speaker 1>rolling with your project.

00:13:21.480 --> 00:13:22.760
<v Speaker 0>Awesome. Alright.

00:13:24.695 --> 00:13:26.455
<v Speaker 0>One last thing. I know I keep saying

00:13:26.455 --> 00:13:28.135
<v Speaker 0>that, but I love that you give that

00:13:28.135 --> 00:13:31.495
<v Speaker 0>history. Right? You went from a physical engineer,

00:13:31.495 --> 00:13:33.015
<v Speaker 0>you went, no. Fuck that. I like it.

00:13:33.015 --> 00:13:33.495
<v Speaker 0>To doing

00:13:35.319 --> 00:13:37.800
<v Speaker 0>government jobs. Oh, no. Wait. Before that, you

00:13:37.800 --> 00:13:40.040
<v Speaker 0>did networking. Right? So it's Cisco and CCNA

00:13:40.040 --> 00:13:41.879
<v Speaker 0>and you went, no. Fuck that. CCNA went

00:13:41.879 --> 00:13:43.879
<v Speaker 0>to the government, and then you did identity.

00:13:43.879 --> 00:13:45.879
<v Speaker 0>And then you went, oh, identity in SAML.

00:13:45.879 --> 00:13:48.040
<v Speaker 0>That's my jam. I mean, you know, you're

00:13:48.040 --> 00:13:49.160
<v Speaker 0>a certain type of crazy.

00:13:50.035 --> 00:13:51.395
<v Speaker 0>But But

00:13:52.755 --> 00:13:55.155
<v Speaker 1>but in all honesty, XML is not exactly

00:13:55.155 --> 00:13:56.595
<v Speaker 1>my favorite choice.

00:13:58.515 --> 00:14:00.275
<v Speaker 1>Somebody needs to do it. Right?

00:14:01.555 --> 00:14:04.195
<v Speaker 0>Alright. Well, let's dive into the crazy rabbit

00:14:04.195 --> 00:14:06.600
<v Speaker 0>hole and take a look at Zitadel.

00:14:06.839 --> 00:14:10.279
<v Speaker 0>So I'm gonna pop my screen up. We're

00:14:10.279 --> 00:14:13.240
<v Speaker 0>still here. Amazing. This is like I said,

00:14:13.240 --> 00:14:14.920
<v Speaker 0>the aesthetics on this are just very nice

00:14:14.920 --> 00:14:17.575
<v Speaker 0>and the logos is lovely too. It's not

00:14:17.575 --> 00:14:19.334
<v Speaker 0>important to the software, but it always makes

00:14:19.334 --> 00:14:20.695
<v Speaker 0>me smile when I find a good really

00:14:20.695 --> 00:14:21.815
<v Speaker 0>good landing page.

00:14:22.295 --> 00:14:23.335
<v Speaker 1>Thank you.

00:14:24.375 --> 00:14:28.055
<v Speaker 1>And it's also pass along the celebrations there.

00:14:28.214 --> 00:14:30.375
<v Speaker 0>Yeah. I'll go to pricing first. So, yeah,

00:14:30.375 --> 00:14:32.280
<v Speaker 0>here is that free tier. So, you know,

00:14:32.280 --> 00:14:34.360
<v Speaker 0>if you like what you see today, definitely

00:14:34.360 --> 00:14:36.280
<v Speaker 0>go to .com.

00:14:36.440 --> 00:14:38.600
<v Speaker 0>Jump in. You get a free instance

00:14:39.080 --> 00:14:39.960
<v Speaker 0>with

00:14:39.960 --> 00:14:41.640
<v Speaker 0>all the security features, and it can have

00:14:41.640 --> 00:14:43.560
<v Speaker 0>up to 100 daily active users, which is

00:14:43.560 --> 00:14:46.200
<v Speaker 0>probably adequate for most of but it's adequate

00:14:46.200 --> 00:14:48.735
<v Speaker 0>for all my projects times 10 the activity.

00:14:48.735 --> 00:14:49.855
<v Speaker 0>So that's pretty good.

00:14:50.815 --> 00:14:52.255
<v Speaker 0>Let's go to documentation,

00:14:52.575 --> 00:14:54.815
<v Speaker 0>and we're gonna work on the getting started

00:14:54.815 --> 00:14:55.935
<v Speaker 0>guide for today.

00:14:56.815 --> 00:14:58.654
<v Speaker 0>So I haven't looked at this. I always

00:14:58.654 --> 00:14:59.935
<v Speaker 0>like to come into it with a fresh

00:14:59.935 --> 00:15:02.480
<v Speaker 0>set of eyes. So we're gonna be I

00:15:02.480 --> 00:15:03.600
<v Speaker 0>have no I have no idea what we're

00:15:03.600 --> 00:15:05.040
<v Speaker 0>gonna be working through, but I'm assuming we're

00:15:05.040 --> 00:15:07.760
<v Speaker 0>gonna have some sort of random website that

00:15:07.760 --> 00:15:09.200
<v Speaker 0>we can spin up where we could integrate

00:15:09.200 --> 00:15:12.160
<v Speaker 0>Zitadel and get some sort of authentication system

00:15:12.160 --> 00:15:14.560
<v Speaker 0>up and running all in Yep. Less than

00:15:14.560 --> 00:15:15.680
<v Speaker 0>six or seven hours. Right?

00:15:16.735 --> 00:15:18.735
<v Speaker 1>For sure. I mean, I would I would

00:15:18.735 --> 00:15:21.134
<v Speaker 1>say we start with a self hosted Zitadel.

00:15:21.134 --> 00:15:23.055
<v Speaker 1>Right? Because the the core message here is

00:15:23.055 --> 00:15:24.654
<v Speaker 1>kind of yeah. Just use the open source

00:15:24.654 --> 00:15:25.295
<v Speaker 1>project.

00:15:25.774 --> 00:15:27.855
<v Speaker 1>And you can simply start it by going

00:15:27.855 --> 00:15:29.694
<v Speaker 1>on the top corner. There is navigation with

00:15:29.694 --> 00:15:30.334
<v Speaker 1>self hosting.

00:15:31.940 --> 00:15:34.500
<v Speaker 1>Yes. Perfect. And then I I would advise

00:15:34.500 --> 00:15:36.580
<v Speaker 1>we use Docker Compose because it's basically the

00:15:36.580 --> 00:15:38.100
<v Speaker 1>easiest to get started with.

00:15:38.420 --> 00:15:39.060
<v Speaker 1>And

00:15:39.780 --> 00:15:42.260
<v Speaker 1>the point blank, you can download that file

00:15:42.260 --> 00:15:44.420
<v Speaker 1>and Docker Compose up the whole thing, and

00:15:44.420 --> 00:15:46.980
<v Speaker 1>you should be ready with Zitadel that

00:15:48.155 --> 00:15:50.955
<v Speaker 1>runs a CockroachDB in this case. We support

00:15:50.955 --> 00:15:54.155
<v Speaker 1>CockroachDB and Postgres. It's a matter of choice,

00:15:54.875 --> 00:15:56.475
<v Speaker 1>actually, or what you prefer.

00:15:57.755 --> 00:15:59.675
<v Speaker 1>For the sake of simplicity, we use your

00:15:59.675 --> 00:16:00.475
<v Speaker 1>Cockroach, usually.

00:16:01.610 --> 00:16:03.610
<v Speaker 0>I I I default to Postgres for everything

00:16:03.610 --> 00:16:05.610
<v Speaker 0>because I've got twenty years of operating it,

00:16:05.610 --> 00:16:06.889
<v Speaker 0>and it's and I know how to manage

00:16:06.889 --> 00:16:07.370
<v Speaker 0>it.

00:16:07.690 --> 00:16:09.290
<v Speaker 0>Cockroach is always one of those things. I'm

00:16:09.290 --> 00:16:10.329
<v Speaker 0>like, it's really cool.

00:16:10.570 --> 00:16:12.649
<v Speaker 0>I know it's got influence from Spanner, from

00:16:12.649 --> 00:16:14.329
<v Speaker 0>Google, which means it's very, very cool,

00:16:15.315 --> 00:16:17.395
<v Speaker 0>but I just haven't dived into it enough

00:16:17.395 --> 00:16:19.795
<v Speaker 0>to really take on the operational responsibility

00:16:20.435 --> 00:16:22.835
<v Speaker 0>yet. So Yeah. I mean, we're we'll just

00:16:22.835 --> 00:16:25.555
<v Speaker 1>work on an article where we compare Postgres

00:16:25.555 --> 00:16:28.195
<v Speaker 1>and Cockroach and some learnings from our operational

00:16:28.195 --> 00:16:30.355
<v Speaker 1>side, operating the cloud service.

00:16:30.990 --> 00:16:33.070
<v Speaker 1>And, yeah, that should come, yeah, I guess,

00:16:33.070 --> 00:16:35.230
<v Speaker 1>in the next few weeks from our end

00:16:35.230 --> 00:16:38.270
<v Speaker 1>to explain more in-depth on when to choose

00:16:38.270 --> 00:16:41.150
<v Speaker 1>what because, basically, both have their strong suits

00:16:41.150 --> 00:16:42.190
<v Speaker 1>and weak suits. Right?

00:16:43.015 --> 00:16:43.735
<v Speaker 0>Yeah.

00:16:44.535 --> 00:16:45.895
<v Speaker 0>Alright. So we do have a dark horse

00:16:45.895 --> 00:16:48.535
<v Speaker 0>pose. I'm already happy because it's under 40

00:16:48.535 --> 00:16:50.774
<v Speaker 0>lines. A million investors key cloak, I would

00:16:50.774 --> 00:16:51.654
<v Speaker 0>be 400.

00:16:51.895 --> 00:16:52.455
<v Speaker 0>So

00:16:54.375 --> 00:16:55.015
<v Speaker 0>let's see.

00:16:56.399 --> 00:16:58.880
<v Speaker 0>I will remove your restart because that's

00:16:59.120 --> 00:16:59.839
<v Speaker 0>that's wild.

00:17:01.600 --> 00:17:02.880
<v Speaker 1>Go away. Go.

00:17:03.440 --> 00:17:04.639
<v Speaker 1>Put the custom away.

00:17:06.480 --> 00:17:07.919
<v Speaker 0>I also

00:17:08.559 --> 00:17:10.079
<v Speaker 0>just I don't need to do this, but

00:17:10.079 --> 00:17:11.635
<v Speaker 0>I'm just doing it because if I were

00:17:11.635 --> 00:17:12.755
<v Speaker 0>doing it if I were doing this on

00:17:12.755 --> 00:17:14.755
<v Speaker 0>my own and I didn't have people watching,

00:17:14.755 --> 00:17:16.355
<v Speaker 0>I would be like, why do people do

00:17:16.355 --> 00:17:18.755
<v Speaker 0>the less syntax for environment? Because it loses

00:17:18.755 --> 00:17:20.434
<v Speaker 0>the the syntax highlighting.

00:17:20.595 --> 00:17:22.275
<v Speaker 0>I don't know why it's like, why would

00:17:22.275 --> 00:17:24.275
<v Speaker 0>you do this? Anyway I need to ask

00:17:24.275 --> 00:17:25.795
<v Speaker 1>my colleague why he did this actually.

00:17:27.740 --> 00:17:29.019
<v Speaker 1>That's a good question.

00:17:29.660 --> 00:17:31.900
<v Speaker 0>Yeah. That's that's all great. We need a

00:17:31.900 --> 00:17:34.380
<v Speaker 0>32 character string. It's just the master key.

00:17:34.380 --> 00:17:37.500
<v Speaker 0>That's fine. We've got Zitadel network and Yeah.

00:17:37.580 --> 00:17:40.380
<v Speaker 0>Everything down there. So we're using nice 3.8

00:17:40.380 --> 00:17:42.755
<v Speaker 0>stuff. We've got service healthy. This this is

00:17:42.755 --> 00:17:45.315
<v Speaker 0>a nice Dockerfile except for your environment stuff.

00:17:45.315 --> 00:17:45.475
<v Speaker 0>So

00:17:48.274 --> 00:17:50.274
<v Speaker 1>I would say, p o's welcome since we're

00:17:50.274 --> 00:17:50.914
<v Speaker 1>open source.

00:17:54.870 --> 00:17:56.630
<v Speaker 0>I I think I've also met that pull

00:17:56.630 --> 00:17:57.429
<v Speaker 0>request.

00:17:58.630 --> 00:18:00.710
<v Speaker 0>And I'll have, like, a forward paragraph description

00:18:00.710 --> 00:18:01.990
<v Speaker 0>of why we should do it this way

00:18:01.990 --> 00:18:04.549
<v Speaker 0>for a two lane change, but still. Yeah.

00:18:05.910 --> 00:18:08.470
<v Speaker 0>So we'll let cockroach d p get healthy.

00:18:08.470 --> 00:18:10.905
<v Speaker 0>Yeah. And then That should take out Yeah.

00:18:11.225 --> 00:18:13.705
<v Speaker 1>Ten seconds. Ten ish seconds, Zitadel will do,

00:18:13.705 --> 00:18:15.225
<v Speaker 1>like, the migrations here.

00:18:17.545 --> 00:18:18.825
<v Speaker 1>And, yeah, as soon as you should see

00:18:18.825 --> 00:18:21.305
<v Speaker 1>the Zitadel thingy, it's basically ready to run.

00:18:21.305 --> 00:18:23.800
<v Speaker 1>So you can click the the URL there,

00:18:23.800 --> 00:18:25.240
<v Speaker 1>and it should bring you to the management

00:18:25.240 --> 00:18:26.120
<v Speaker 1>UI.

00:18:27.640 --> 00:18:29.560
<v Speaker 1>At least that's what it should do.

00:18:29.800 --> 00:18:30.520
<v Speaker 1>Perfect.

00:18:30.600 --> 00:18:32.520
<v Speaker 1>And if you go back to the documentations

00:18:32.520 --> 00:18:34.520
<v Speaker 1>page, there is the default user

00:18:34.680 --> 00:18:35.560
<v Speaker 1>somewhere exactly.

00:18:37.785 --> 00:18:39.625
<v Speaker 1>There will be Aviso that one point in

00:18:39.625 --> 00:18:41.945
<v Speaker 1>time, but you can pass the configuration

00:18:42.025 --> 00:18:44.985
<v Speaker 1>to to predefine that stuff if you want.

00:18:46.105 --> 00:18:46.665
<v Speaker 1>Yeah. So

00:18:47.385 --> 00:18:49.945
<v Speaker 0>I'm disappointed that your default password is password

00:18:49.945 --> 00:18:51.705
<v Speaker 0>one exclamation mark and and not a hundred

00:18:51.705 --> 00:18:52.265
<v Speaker 0>twenty two.

00:18:55.240 --> 00:18:57.080
<v Speaker 0>I was very disappointed that in the last

00:18:57.080 --> 00:18:57.800
<v Speaker 0>two weeks,

00:18:58.120 --> 00:19:00.200
<v Speaker 0>bash dot org is down forever. I don't

00:19:00.200 --> 00:19:01.640
<v Speaker 0>know if you ever used to read bash.org,

00:19:01.640 --> 00:19:03.880
<v Speaker 0>but I I grew up with bash.org.

00:19:03.960 --> 00:19:05.720
<v Speaker 1>I I I did from time to time.

00:19:05.720 --> 00:19:07.720
<v Speaker 1>Yeah. You can skip on the left lower

00:19:07.720 --> 00:19:09.675
<v Speaker 1>left if you don't wanna set a multi

00:19:09.675 --> 00:19:10.554
<v Speaker 1>factor off.

00:19:10.795 --> 00:19:12.635
<v Speaker 1>I mean, for the sake of you can

00:19:12.635 --> 00:19:14.555
<v Speaker 1>you can't just you can skip it away

00:19:14.555 --> 00:19:16.555
<v Speaker 1>if you want. Right. Okay. We'll we'll do

00:19:16.555 --> 00:19:18.475
<v Speaker 0>it. And then we need we certainly force

00:19:18.475 --> 00:19:20.555
<v Speaker 1>you to change the password. What kind of

00:19:20.555 --> 00:19:22.555
<v Speaker 1>security product would we be if we don't?

00:19:23.780 --> 00:19:24.659
<v Speaker 1>It's like

00:19:28.820 --> 00:19:30.980
<v Speaker 0>I have too many passwords stored on this

00:19:30.980 --> 00:19:32.740
<v Speaker 0>local host and it's all I mean, they're

00:19:32.740 --> 00:19:33.779
<v Speaker 0>the market so quick.

00:19:34.179 --> 00:19:35.140
<v Speaker 0>Classic.

00:19:37.335 --> 00:19:39.894
<v Speaker 1>Oh. I guess you you violated something.

00:19:41.575 --> 00:19:42.295
<v Speaker 1>What was it?

00:19:51.270 --> 00:19:52.789
<v Speaker 0>Perfect. Should work.

00:19:53.110 --> 00:19:55.750
<v Speaker 1>So that actually password is invalid usually means

00:19:55.750 --> 00:19:57.750
<v Speaker 1>the original password is invalid.

00:19:57.910 --> 00:19:59.750
<v Speaker 0>Yeah. I probably typed that wrong.

00:20:00.390 --> 00:20:02.070
<v Speaker 1>Perfect. Now it should

00:20:02.550 --> 00:20:03.910
<v Speaker 1>basically give you a spin.

00:20:06.585 --> 00:20:07.305
<v Speaker 1>Perfect.

00:20:08.105 --> 00:20:10.345
<v Speaker 1>Off you go. Zitadel is running, basically.

00:20:12.505 --> 00:20:15.225
<v Speaker 1>I mean, there is a lot of things

00:20:15.225 --> 00:20:18.265
<v Speaker 1>you need to consider going to production. Right?

00:20:18.265 --> 00:20:19.785
<v Speaker 1>But from from

00:20:20.610 --> 00:20:22.130
<v Speaker 1>getting started experience,

00:20:22.130 --> 00:20:24.690
<v Speaker 1>that's as as quick as Zitadel can be

00:20:24.690 --> 00:20:25.570
<v Speaker 1>operationalized

00:20:25.570 --> 00:20:26.289
<v Speaker 1>locally.

00:20:26.450 --> 00:20:28.210
<v Speaker 0>Alright. Well, thanks for watching, everyone. We'll see

00:20:28.210 --> 00:20:28.929
<v Speaker 0>you next week.

00:20:29.890 --> 00:20:30.050
<v Speaker 1>Done.

00:20:32.145 --> 00:20:33.665
<v Speaker 0>I I do like I mean, obviously, I'm

00:20:33.665 --> 00:20:35.745
<v Speaker 0>not gonna run a docker compose file for

00:20:35.745 --> 00:20:37.905
<v Speaker 0>any sort of production deploy. But again, this

00:20:37.905 --> 00:20:40.225
<v Speaker 0>is a Go application. So it's probably even

00:20:40.225 --> 00:20:42.065
<v Speaker 0>easier to get it running. And then it's

00:20:42.065 --> 00:20:43.745
<v Speaker 0>just about making sure that that

00:20:44.065 --> 00:20:45.745
<v Speaker 0>database is backed up and you've got your

00:20:45.745 --> 00:20:48.600
<v Speaker 0>store processes, all that operational stuff. But I

00:20:48.600 --> 00:20:50.280
<v Speaker 0>love the simplicity of getting that started. And

00:20:50.280 --> 00:20:52.360
<v Speaker 0>that master key, I'm curious.

00:20:52.600 --> 00:20:55.000
<v Speaker 0>We passed in on the CLI. Can that

00:20:55.000 --> 00:20:57.639
<v Speaker 0>read from, like, cloud KMS systems?

00:20:57.640 --> 00:20:59.320
<v Speaker 0>I mean, what are my other options to

00:20:59.320 --> 00:20:59.960
<v Speaker 0>keep that secure?

00:21:01.405 --> 00:21:03.965
<v Speaker 1>I mean, you can pass it in usually,

00:21:03.965 --> 00:21:06.925
<v Speaker 1>we recommend passing it in as RQ because

00:21:06.925 --> 00:21:09.725
<v Speaker 1>all the other things are passed as environments,

00:21:10.045 --> 00:21:11.565
<v Speaker 1>and so it's kind of easier to get

00:21:11.565 --> 00:21:13.005
<v Speaker 1>the separation of concern going.

00:21:13.750 --> 00:21:16.870
<v Speaker 1>Honestly, it's just an additional layer of security

00:21:16.870 --> 00:21:18.950
<v Speaker 1>because some passwords in the database

00:21:19.429 --> 00:21:21.830
<v Speaker 1>the password, but some secrets in the database

00:21:21.990 --> 00:21:24.549
<v Speaker 1>are encrypted in an asymmetrical

00:21:25.029 --> 00:21:27.029
<v Speaker 1>way, like with a s in that case.

00:21:27.875 --> 00:21:30.275
<v Speaker 1>And it's just an additional safeguard if your

00:21:30.275 --> 00:21:33.795
<v Speaker 1>database leaks. Somehow, you you do not leak

00:21:33.795 --> 00:21:35.955
<v Speaker 1>out all the guts of of your Citadel.

00:21:35.955 --> 00:21:38.835
<v Speaker 1>Right? So Okay. It's just more that because

00:21:38.835 --> 00:21:41.395
<v Speaker 1>one one example that we use

00:21:41.220 --> 00:21:44.739
<v Speaker 1>symmetric cryptography tool is for the private keys

00:21:44.740 --> 00:21:47.460
<v Speaker 1>that we use to to sign jobs tokens,

00:21:47.460 --> 00:21:48.179
<v Speaker 1>for example,

00:21:48.500 --> 00:21:51.620
<v Speaker 1>or the certificates for SAML and stuff. Mhmm.

00:21:51.620 --> 00:21:53.460
<v Speaker 1>That's where what it mainly does right there.

00:21:54.475 --> 00:21:55.195
<v Speaker 0>Okay.

00:21:56.075 --> 00:21:56.794
<v Speaker 0>Alright.

00:21:57.034 --> 00:21:59.274
<v Speaker 0>The onboarding process wants me to create a

00:21:59.274 --> 00:22:01.115
<v Speaker 0>project, register my app, and log in to

00:22:01.115 --> 00:22:03.114
<v Speaker 0>my app. So let's crack on.

00:22:03.434 --> 00:22:05.434
<v Speaker 0>We'll call this the Rawkode Academy.

00:22:07.490 --> 00:22:11.090
<v Speaker 0>I have a project, roots research ID,

00:22:11.410 --> 00:22:12.370
<v Speaker 0>applications,

00:22:12.690 --> 00:22:13.490
<v Speaker 0>rules,

00:22:13.490 --> 00:22:16.530
<v Speaker 0>grants. Alright. All that fun off stuff.

00:22:16.930 --> 00:22:18.290
<v Speaker 1>Yeah. Yeah. We can talk in a minute

00:22:18.290 --> 00:22:20.690
<v Speaker 1>about all the the underlying concepts there. I

00:22:20.690 --> 00:22:22.994
<v Speaker 1>would I would advise we quickly

00:22:23.794 --> 00:22:26.354
<v Speaker 1>run, like, an OAuth proxy, for example,

00:22:26.595 --> 00:22:27.234
<v Speaker 1>and

00:22:27.794 --> 00:22:30.274
<v Speaker 1>that can be used as an example application,

00:22:30.274 --> 00:22:32.195
<v Speaker 1>or we can use a Vue application,

00:22:32.274 --> 00:22:34.835
<v Speaker 1>or we can use a Grafana or whatever

00:22:34.835 --> 00:22:37.080
<v Speaker 1>is to your liking. I I usually tend

00:22:37.080 --> 00:22:38.920
<v Speaker 1>to use it for an an external tool

00:22:38.920 --> 00:22:41.080
<v Speaker 1>like OAuth Proxy because it's just the binary

00:22:41.080 --> 00:22:42.520
<v Speaker 1>on the config file and does a great

00:22:42.520 --> 00:22:45.240
<v Speaker 1>job for showing people how how they can

00:22:45.240 --> 00:22:45.799
<v Speaker 1>work.

00:22:46.600 --> 00:22:47.240
<v Speaker 0>Yeah.

00:22:47.560 --> 00:22:48.840
<v Speaker 0>Well, I'm assuming we have to create an

00:22:48.840 --> 00:22:50.040
<v Speaker 0>application first. Is that correct?

00:22:51.715 --> 00:22:53.955
<v Speaker 1>No? Yeah. That means you need to know

00:22:53.955 --> 00:22:56.355
<v Speaker 1>what application. When we settle for for an

00:22:56.355 --> 00:22:58.674
<v Speaker 1>OAuth proxy, yeah, go away and and create

00:22:58.674 --> 00:23:01.154
<v Speaker 1>create a new application right there. There is

00:23:01.154 --> 00:23:01.874
<v Speaker 1>a wizard.

00:23:02.515 --> 00:23:04.115
<v Speaker 1>We we try to give people,

00:23:05.110 --> 00:23:07.190
<v Speaker 1>like, a little bit of guidance

00:23:07.190 --> 00:23:08.950
<v Speaker 1>because if you click on new there,

00:23:12.230 --> 00:23:15.190
<v Speaker 1>you see, like, multiple things there. Right? It's

00:23:15.190 --> 00:23:18.230
<v Speaker 1>like web application, native applications, user agent, APIs,

00:23:18.230 --> 00:23:18.789
<v Speaker 1>and SAML.

00:23:19.155 --> 00:23:21.075
<v Speaker 1>The reason being, like, web application is your

00:23:21.075 --> 00:23:23.795
<v Speaker 1>classic web application with a server rendered

00:23:25.795 --> 00:23:26.595
<v Speaker 1>engine.

00:23:27.075 --> 00:23:29.235
<v Speaker 1>Native is when you're using mobile apps or

00:23:29.235 --> 00:23:31.235
<v Speaker 1>desktop apps, and user agent is basically the

00:23:31.235 --> 00:23:33.229
<v Speaker 1>good old single page application.

00:23:33.390 --> 00:23:35.309
<v Speaker 1>The API is kind of special because, yeah,

00:23:35.309 --> 00:23:37.309
<v Speaker 1>it's for for back end systems. Like, you

00:23:37.309 --> 00:23:38.669
<v Speaker 1>get the token, you want to do something

00:23:38.669 --> 00:23:40.270
<v Speaker 1>with it. But in this case, we stick

00:23:40.270 --> 00:23:42.350
<v Speaker 1>to web application that works perfectly. Want to

00:23:42.350 --> 00:23:43.070
<v Speaker 0>do SAML?

00:23:43.309 --> 00:23:44.750
<v Speaker 1>Oh, no. I don't.

00:23:46.315 --> 00:23:49.274
<v Speaker 1>I even though it's it's it's a thing.

00:23:49.274 --> 00:23:49.914
<v Speaker 1>Yes.

00:23:50.154 --> 00:23:51.914
<v Speaker 1>But I if you could skip it for

00:23:51.914 --> 00:23:54.154
<v Speaker 1>today, you know, I I would advise doing

00:23:54.154 --> 00:23:56.955
<v Speaker 1>that. Otherwise, we'll we'll be around midnight to

00:23:56.955 --> 00:23:59.195
<v Speaker 1>to to do the metadata exchange.

00:23:59.434 --> 00:23:59.914
<v Speaker 1>In

00:24:00.660 --> 00:24:02.820
<v Speaker 1>this case, let's pick code here

00:24:03.220 --> 00:24:06.420
<v Speaker 1>that works great for the the OAuth proxy.

00:24:06.900 --> 00:24:09.300
<v Speaker 1>I'm just I I can explain the differences

00:24:09.300 --> 00:24:11.220
<v Speaker 1>if you're interested, but let's let's keep it

00:24:11.220 --> 00:24:12.980
<v Speaker 1>tidy for the moment being and dive after

00:24:12.980 --> 00:24:14.820
<v Speaker 1>that into it again.

00:24:14.980 --> 00:24:15.300
<v Speaker 0>Okay.

00:24:16.275 --> 00:24:17.075
<v Speaker 1>Alright.

00:24:17.715 --> 00:24:20.275
<v Speaker 1>Yeah. Just continue here. You because we can

00:24:20.275 --> 00:24:22.435
<v Speaker 1>we can change that afterwards. It's fine.

00:24:23.475 --> 00:24:24.435
<v Speaker 0>Alright. So

00:24:25.395 --> 00:24:27.475
<v Speaker 1>So you get two values like there. You

00:24:27.475 --> 00:24:30.530
<v Speaker 1>should copy them, especially the client secret. Otherwise,

00:24:30.530 --> 00:24:32.129
<v Speaker 1>you can regenerate it.

00:24:34.610 --> 00:24:35.409
<v Speaker 1>Perfect. And

00:24:36.210 --> 00:24:39.010
<v Speaker 1>then let's go to trust the OAuth proxy.

00:24:39.010 --> 00:24:40.850
<v Speaker 1>You should find it on on Google by

00:24:40.850 --> 00:24:41.330
<v Speaker 1>quickly

00:24:45.155 --> 00:24:47.795
<v Speaker 1>because we combine can combine multiple things here.

00:24:47.795 --> 00:24:50.275
<v Speaker 1>Right? Yeah. Perfect. That's the thing. There is

00:24:50.275 --> 00:24:52.275
<v Speaker 1>a download guide on the website on the

00:24:52.435 --> 00:24:53.955
<v Speaker 1>yeah. On the on the

00:24:54.960 --> 00:24:57.120
<v Speaker 1>yes? Nope. Nope. Not oh, yeah. Okay. No.

00:24:57.120 --> 00:24:58.880
<v Speaker 1>It works perfect. You can download the prebuilt

00:24:58.880 --> 00:25:01.200
<v Speaker 1>binary or use Go, whatever suits your taste

00:25:01.200 --> 00:25:01.759
<v Speaker 1>here.

00:25:02.640 --> 00:25:05.440
<v Speaker 1>I often use the the prebuilt binary quickly.

00:25:06.159 --> 00:25:08.640
<v Speaker 0>I wonder if it's in package x,

00:25:09.185 --> 00:25:11.265
<v Speaker 0>which I I always check everything now. Is

00:25:11.265 --> 00:25:13.025
<v Speaker 0>it off to a proxy or off proxy?

00:25:13.025 --> 00:25:14.785
<v Speaker 1>It is. That's

00:25:14.785 --> 00:25:16.705
<v Speaker 1>a good question. I have never checked it.

00:25:17.505 --> 00:25:20.705
<v Speaker 1>I could think there is no. No. I

00:25:20.705 --> 00:25:23.185
<v Speaker 0>like it. I'm I've I've become like,

00:25:23.880 --> 00:25:25.720
<v Speaker 0>I used to use Knicks for all my

00:25:25.720 --> 00:25:27.880
<v Speaker 0>local development environments, and it's just I just

00:25:27.880 --> 00:25:30.440
<v Speaker 0>got so frustrated having to write Knicks myself.

00:25:30.840 --> 00:25:32.920
<v Speaker 0>And then I discovered Package X, which is

00:25:32.920 --> 00:25:35.320
<v Speaker 0>like a project from the person that originally

00:25:35.320 --> 00:25:36.040
<v Speaker 0>built homebrew.

00:25:36.455 --> 00:25:38.695
<v Speaker 0>It's like reimagined homebrew, and it's it's really

00:25:38.695 --> 00:25:40.215
<v Speaker 0>nice. I like the way it works.

00:25:40.535 --> 00:25:41.654
<v Speaker 1>So Sure.

00:25:43.415 --> 00:25:44.855
<v Speaker 0>Alright. We have a proxy.

00:25:45.255 --> 00:25:47.495
<v Speaker 1>Perfect. So we have a planer at least.

00:25:49.815 --> 00:25:52.375
<v Speaker 1>Yeah. If you go back to their page

00:25:52.460 --> 00:25:54.059
<v Speaker 1>and the OAuth proxy page,

00:25:54.380 --> 00:25:56.700
<v Speaker 1>there is an OAuth provider configuration. Yes. Go

00:25:56.700 --> 00:25:58.300
<v Speaker 1>go ahead with this one, and then let's

00:25:58.300 --> 00:25:59.340
<v Speaker 1>select the

00:25:59.980 --> 00:26:01.820
<v Speaker 1>let's use Okta's.

00:26:01.900 --> 00:26:03.260
<v Speaker 1>So there is oh, somewhere there is an

00:26:03.260 --> 00:26:06.534
<v Speaker 1>Okta configuration, isn't it? Oh, there's OpenID Connect.

00:26:06.534 --> 00:26:08.534
<v Speaker 1>Let's go with OpenID Connect. That's fine.

00:26:08.934 --> 00:26:11.495
<v Speaker 1>Let's scroll down a little bit because we're

00:26:11.495 --> 00:26:13.095
<v Speaker 1>gonna use a config file. No. No. Go

00:26:13.095 --> 00:26:14.934
<v Speaker 1>to scroll a little bit downwards.

00:26:15.014 --> 00:26:17.095
<v Speaker 1>Yeah. Let's let's copy the this thing here.

00:26:17.095 --> 00:26:18.534
<v Speaker 1>That's perfect right there. Yes.

00:26:19.650 --> 00:26:22.450
<v Speaker 1>Because that's basically applicable to Zitadel as well.

00:26:25.570 --> 00:26:26.370
<v Speaker 1>Perfect.

00:26:29.730 --> 00:26:32.610
<v Speaker 1>So now let's call the the redirect URL

00:26:32.610 --> 00:26:33.330
<v Speaker 1>there.

00:26:33.650 --> 00:26:34.930
<v Speaker 1>Let's do HTTPS,

00:26:35.225 --> 00:26:37.465
<v Speaker 1>And and I think in their guides, they

00:26:37.465 --> 00:26:38.105
<v Speaker 1>use

00:26:38.505 --> 00:26:40.105
<v Speaker 1>I mean, if you can you quickly go

00:26:40.105 --> 00:26:41.145
<v Speaker 1>back to the

00:26:41.945 --> 00:26:43.625
<v Speaker 1>your example? And a little bit upwards to

00:26:43.625 --> 00:26:45.385
<v Speaker 1>the OpenEye Connect example.

00:26:45.385 --> 00:26:48.185
<v Speaker 1>Yeah. Let's let's use the redirect URL there

00:26:49.190 --> 00:26:51.670
<v Speaker 1>because that's the default port for Rawkode proxy,

00:26:51.670 --> 00:26:52.950
<v Speaker 1>if I remember correctly.

00:26:53.990 --> 00:26:56.870
<v Speaker 1>Perfect. You missed an h, but no worries.

00:26:58.870 --> 00:27:01.990
<v Speaker 1>And on the OIDC issue, you can use

00:27:01.990 --> 00:27:02.870
<v Speaker 1>HTTP

00:27:02.870 --> 00:27:05.095
<v Speaker 1>local host in our case because we don't

00:27:05.095 --> 00:27:06.934
<v Speaker 1>use a DEX. We use Zitadel.

00:27:06.934 --> 00:27:08.134
<v Speaker 1>But that's basically

00:27:08.934 --> 00:27:11.494
<v Speaker 1>exactly local host eighty eighty.

00:27:13.335 --> 00:27:14.934
<v Speaker 1>Yes. That should be fine.

00:27:15.255 --> 00:27:18.135
<v Speaker 1>And then upstreams, let's use HTTP bin. That's

00:27:18.135 --> 00:27:20.720
<v Speaker 1>basically where the OAuth proxy will send traffic

00:27:20.720 --> 00:27:22.640
<v Speaker 1>as soon as it authenticated

00:27:22.640 --> 00:27:23.360
<v Speaker 1>us.

00:27:23.920 --> 00:27:27.440
<v Speaker 1>And email domains, you can use citadel.

00:27:27.440 --> 00:27:28.400
<v Speaker 1>Local host.

00:27:30.640 --> 00:27:31.440
<v Speaker 1>Perfect.

00:27:31.520 --> 00:27:34.800
<v Speaker 1>And client ID, client secret, you just copied

00:27:35.315 --> 00:27:37.315
<v Speaker 1>right before we switch to here.

00:27:46.275 --> 00:27:49.700
<v Speaker 1>Perfect. And then I think the the cookie

00:27:49.700 --> 00:27:52.340
<v Speaker 1>secret needs some c's more. That should be

00:27:52.340 --> 00:27:55.220
<v Speaker 1>16 bits, so just throw in, like, 11

00:27:55.220 --> 00:27:56.179
<v Speaker 1>c's

00:27:56.500 --> 00:27:57.539
<v Speaker 1>or whatever.

00:28:00.260 --> 00:28:00.900
<v Speaker 1>Yeah.

00:28:01.060 --> 00:28:01.700
<v Speaker 1>Perfect.

00:28:03.524 --> 00:28:04.884
<v Speaker 1>That's basically it.

00:28:06.005 --> 00:28:08.085
<v Speaker 1>Now the redirect URL

00:28:08.164 --> 00:28:10.485
<v Speaker 1>on on row two, that's that thing you

00:28:10.485 --> 00:28:11.524
<v Speaker 1>should copy.

00:28:13.845 --> 00:28:15.765
<v Speaker 1>Perfect. And then let's switch to Zitadel.

00:28:20.040 --> 00:28:22.520
<v Speaker 1>And you have the redirect settings.

00:28:22.760 --> 00:28:25.400
<v Speaker 1>Exactly. Throw it in there. Press enter.

00:28:27.160 --> 00:28:28.760
<v Speaker 1>I I you need to to press the

00:28:28.760 --> 00:28:31.000
<v Speaker 1>plus sign or press enter. I know. UX

00:28:31.000 --> 00:28:33.125
<v Speaker 1>and bad. The development mode needs to be

00:28:33.125 --> 00:28:35.605
<v Speaker 1>activated, and there is a reason for it.

00:28:36.165 --> 00:28:39.605
<v Speaker 1>The in in in yeah. The specification

00:28:39.605 --> 00:28:42.325
<v Speaker 1>basically demands to use HTTPS,

00:28:42.885 --> 00:28:44.259
<v Speaker 1>and we

00:28:44.420 --> 00:28:46.900
<v Speaker 1>don't want people to to fire away their

00:28:46.900 --> 00:28:49.940
<v Speaker 1>production into whatever weird state they can they

00:28:49.940 --> 00:28:51.780
<v Speaker 1>can get it, and that's why we have,

00:28:51.780 --> 00:28:54.019
<v Speaker 1>like, a development mode. So you need to

00:28:54.020 --> 00:28:56.980
<v Speaker 1>turn it on to get an unsafe configuration

00:28:56.980 --> 00:28:59.325
<v Speaker 1>rolling in Zitadel. But after that, you are

00:28:59.325 --> 00:29:01.245
<v Speaker 1>fine to do whatever you want to do.

00:29:01.405 --> 00:29:03.965
<v Speaker 1>It's just an additional safeguard for people.

00:29:04.445 --> 00:29:05.965
<v Speaker 1>Yeah. Then let's save it.

00:29:08.205 --> 00:29:10.605
<v Speaker 1>Perfect. No changes. So it should be already

00:29:10.605 --> 00:29:11.165
<v Speaker 1>saved. Right?

00:29:12.610 --> 00:29:13.409
<v Speaker 1>Yeah.

00:29:16.450 --> 00:29:18.690
<v Speaker 1>Cool. Yeah. So let's

00:29:18.690 --> 00:29:20.769
<v Speaker 1>start there at the OAuth proxy and see

00:29:20.769 --> 00:29:22.849
<v Speaker 1>how it goes. That's basically

00:29:23.330 --> 00:29:25.090
<v Speaker 1>it should be, like, OAuth proxy and then

00:29:25.090 --> 00:29:27.010
<v Speaker 1>minus minus for configure, I guess, or something

00:29:27.010 --> 00:29:27.409
<v Speaker 1>like that.

00:29:28.735 --> 00:29:32.014
<v Speaker 1>Call that. Oh, no. I called it Rawkode.

00:29:32.095 --> 00:29:32.575
<v Speaker 0>Oh,

00:29:35.534 --> 00:29:37.854
<v Speaker 0>could see I need some more bytes. Yeah.

00:29:39.054 --> 00:29:39.934
<v Speaker 1>It's a classic.

00:29:43.130 --> 00:29:45.049
<v Speaker 1>Whatever you throw in there, just two bites

00:29:45.049 --> 00:29:46.249
<v Speaker 1>and off you go.

00:29:49.530 --> 00:29:50.249
<v Speaker 1>Perfect.

00:29:50.970 --> 00:29:54.169
<v Speaker 1>So, yeah, let's browse to local host

00:29:55.885 --> 00:29:57.245
<v Speaker 1>4178,

00:29:57.245 --> 00:29:59.644
<v Speaker 1>I guess, off the top of my head.

00:30:01.405 --> 00:30:03.164
<v Speaker 1>4178,

00:30:03.164 --> 00:30:04.205
<v Speaker 1>I guess. Right.

00:30:05.164 --> 00:30:07.164
<v Speaker 1>Or is it not? Oh, I just quickly

00:30:07.164 --> 00:30:08.365
<v Speaker 1>need to check the configuration.

00:30:08.750 --> 00:30:11.070
<v Speaker 1>It's not written here. That's kinda bad. But

00:30:11.230 --> 00:30:13.230
<v Speaker 0>418. Yeah. Alright. Yeah.

00:30:15.150 --> 00:30:16.590
<v Speaker 0>Wrong window. There we go.

00:30:18.670 --> 00:30:19.710
<v Speaker 1>418.

00:30:20.590 --> 00:30:23.345
<v Speaker 1>Perfect. Forbidden. So if you click sign in

00:30:23.345 --> 00:30:23.825
<v Speaker 1>here,

00:30:26.625 --> 00:30:28.625
<v Speaker 1>we should do the good old OpenID round

00:30:28.625 --> 00:30:30.385
<v Speaker 1>trip, and off you go. You have authenticated

00:30:30.385 --> 00:30:32.144
<v Speaker 1>with yourself with Zitadel.

00:30:32.544 --> 00:30:33.424
<v Speaker 1>Right. Right?

00:30:34.544 --> 00:30:35.904
<v Speaker 1>That's all it took.

00:30:36.544 --> 00:30:39.440
<v Speaker 1>So what OAuth Proxy basically does here is

00:30:39.440 --> 00:30:41.839
<v Speaker 1>it allows traffic only through

00:30:42.080 --> 00:30:44.240
<v Speaker 1>when you have successfully authenticated

00:30:44.240 --> 00:30:46.399
<v Speaker 1>with Zitadel. And if you go for your

00:30:46.399 --> 00:30:47.200
<v Speaker 1>terminal

00:30:47.760 --> 00:30:48.480
<v Speaker 1>in that case,

00:30:51.794 --> 00:30:54.355
<v Speaker 1>You should basically see here that somewhere your

00:30:54.355 --> 00:30:56.354
<v Speaker 1>user should be written out.

00:30:56.835 --> 00:30:59.394
<v Speaker 1>Where is it? Is it I I it's

00:30:59.395 --> 00:31:00.914
<v Speaker 1>in the lower third.

00:31:01.075 --> 00:31:04.434
<v Speaker 1>There is, like, authenticated view of session,

00:31:04.434 --> 00:31:06.880
<v Speaker 1>email, Zitadel, yada yada yada. You see that.

00:31:06.880 --> 00:31:10.240
<v Speaker 1>Right? Yeah. Okay. I wanna I just wanna

00:31:10.240 --> 00:31:12.399
<v Speaker 0>make sure I understood all this. Okay? So

00:31:14.080 --> 00:31:16.160
<v Speaker 0>because that I mean, obviously, that all worked

00:31:16.160 --> 00:31:17.200
<v Speaker 0>rather fast.

00:31:17.440 --> 00:31:19.945
<v Speaker 1>So Yep. I mean, what we What we're

00:31:20.025 --> 00:31:21.145
<v Speaker 0>that's 4188.

00:31:21.145 --> 00:31:22.825
<v Speaker 0>What we did there, right, is

00:31:24.184 --> 00:31:25.544
<v Speaker 0>okay. I don't need to sign out. It's

00:31:25.544 --> 00:31:26.825
<v Speaker 0>just temporary

00:31:27.225 --> 00:31:28.104
<v Speaker 0>authentication.

00:31:28.424 --> 00:31:30.265
<v Speaker 0>Yep. What I want to do is log

00:31:30.265 --> 00:31:31.784
<v Speaker 0>out of Zitadel

00:31:32.265 --> 00:31:34.559
<v Speaker 0>Yep. And click sign in here.

00:31:35.200 --> 00:31:37.760
<v Speaker 0>Okay. Cool. So what we've what we did

00:31:37.760 --> 00:31:39.920
<v Speaker 0>was we set up Zitadel as an OAuth

00:31:39.920 --> 00:31:41.200
<v Speaker 0>two provider.

00:31:41.600 --> 00:31:44.320
<v Speaker 0>It's not going to other external subparity provider

00:31:44.320 --> 00:31:45.440
<v Speaker 0>as

00:31:45.165 --> 00:31:46.845
<v Speaker 0>the source of authentication.

00:31:47.005 --> 00:31:48.925
<v Speaker 0>In which case, it was using my account

00:31:48.925 --> 00:31:51.165
<v Speaker 0>here, which is currently signed out, where I

00:31:51.165 --> 00:31:53.325
<v Speaker 0>can log back in, and it's gonna give

00:31:53.325 --> 00:31:56.205
<v Speaker 0>me back a token, and I'm now authenticated

00:31:56.525 --> 00:31:58.045
<v Speaker 0>again. Okay. Yes.

00:31:59.400 --> 00:32:01.400
<v Speaker 1>And I mean That was painless.

00:32:02.360 --> 00:32:04.760
<v Speaker 1>Right? And you can do, like, many flavors

00:32:04.760 --> 00:32:06.360
<v Speaker 1>of it. There is, like

00:32:07.880 --> 00:32:09.800
<v Speaker 1>whatever I mean, we can plug in a

00:32:09.800 --> 00:32:12.040
<v Speaker 1>view app. We can plug in a Symphony

00:32:12.040 --> 00:32:12.360
<v Speaker 1>app.

00:32:12.934 --> 00:32:16.455
<v Speaker 1>There is multiple ways of of attaching applications

00:32:16.455 --> 00:32:19.174
<v Speaker 1>to Zitadel. And that's just for for the

00:32:19.174 --> 00:32:20.374
<v Speaker 1>sake of simplicity.

00:32:21.095 --> 00:32:22.615
<v Speaker 1>Yeah. Many

00:32:22.615 --> 00:32:26.455
<v Speaker 1>prebuilt tools use, like, OpenID Connect or OAuth.

00:32:26.455 --> 00:32:28.535
<v Speaker 1>I mean, that's kind of an overlapping term.

00:32:28.990 --> 00:32:31.149
<v Speaker 1>There is a a proper

00:32:31.710 --> 00:32:34.029
<v Speaker 1>differentiation between the two, but for the lack

00:32:34.029 --> 00:32:36.669
<v Speaker 1>of better management, let's keep it like federated

00:32:36.669 --> 00:32:37.710
<v Speaker 1>authentication.

00:32:38.190 --> 00:32:38.989
<v Speaker 1>And and

00:32:39.230 --> 00:32:41.789
<v Speaker 1>those tools just rely on Zitadel on doing

00:32:41.789 --> 00:32:42.750
<v Speaker 1>the authentication

00:32:42.750 --> 00:32:45.585
<v Speaker 1>piece. Right? They get basically a code back,

00:32:45.665 --> 00:32:47.665
<v Speaker 1>and with that code, they go to Zitadel

00:32:47.665 --> 00:32:50.305
<v Speaker 1>and get back a token, oftentimes an ID

00:32:50.305 --> 00:32:51.745
<v Speaker 1>token, an access token,

00:32:51.985 --> 00:32:54.145
<v Speaker 1>which they can use then if they need

00:32:54.145 --> 00:32:56.385
<v Speaker 1>it to communicate with another service or in

00:32:56.385 --> 00:32:58.065
<v Speaker 1>that case, the proxy says, well,

00:32:58.830 --> 00:33:00.269
<v Speaker 1>you are authenticated,

00:33:00.269 --> 00:33:02.029
<v Speaker 1>mate. I I let you through and off

00:33:02.029 --> 00:33:02.749
<v Speaker 1>you go.

00:33:03.950 --> 00:33:06.750
<v Speaker 1>That's the that's the piece in in how

00:33:06.750 --> 00:33:08.510
<v Speaker 1>fast it can go. It works also with

00:33:08.510 --> 00:33:11.149
<v Speaker 1>Grafana. They have an OAuth provider. It works

00:33:11.149 --> 00:33:12.565
<v Speaker 1>with GitLab.

00:33:12.565 --> 00:33:15.445
<v Speaker 1>It works with many, many different systems. And,

00:33:15.445 --> 00:33:19.284
<v Speaker 1>also, it works with language frameworks like Angular,

00:33:19.365 --> 00:33:22.485
<v Speaker 1>Next, and and and multiple others. But that's

00:33:22.485 --> 00:33:25.284
<v Speaker 1>not all Zitadel can bring to the table.

00:33:25.284 --> 00:33:28.790
<v Speaker 1>And because that's just one protocol here. Right?

00:33:28.950 --> 00:33:31.110
<v Speaker 1>Mhmm. With Zitadel, you can even build your

00:33:31.110 --> 00:33:33.270
<v Speaker 1>own login UI, like the the thing you

00:33:33.270 --> 00:33:35.750
<v Speaker 1>saw with the the the username password thing.

00:33:35.830 --> 00:33:37.270
<v Speaker 1>You can build that on your own if

00:33:37.270 --> 00:33:38.790
<v Speaker 1>you'd like to. There is an API for

00:33:38.790 --> 00:33:41.955
<v Speaker 1>that, And and we can even, like, deploy

00:33:41.955 --> 00:33:44.274
<v Speaker 1>a quick demo later on on on Versal

00:33:44.274 --> 00:33:45.715
<v Speaker 1>or something like that where you can self

00:33:45.715 --> 00:33:47.154
<v Speaker 1>host the login page as well.

00:33:47.475 --> 00:33:48.514
<v Speaker 1>But that's

00:33:48.514 --> 00:33:51.075
<v Speaker 1>the the appeal of Zitadel, basically. So

00:33:52.120 --> 00:33:54.440
<v Speaker 1>now we can talk details, I guess,

00:33:56.040 --> 00:33:58.040
<v Speaker 1>or dive in any direction you want or

00:33:58.040 --> 00:33:59.559
<v Speaker 1>we want to dive into.

00:34:00.520 --> 00:34:02.200
<v Speaker 0>Yeah. I mean, there's a different a few

00:34:02.200 --> 00:34:04.040
<v Speaker 0>different avenues we can do down here. Right?

00:34:04.040 --> 00:34:04.679
<v Speaker 0>I think

00:34:05.255 --> 00:34:07.095
<v Speaker 0>what I love is that in under thirty

00:34:07.095 --> 00:34:07.734
<v Speaker 0>minutes,

00:34:08.534 --> 00:34:11.815
<v Speaker 0>we've got an OAuth provider running, doing identity

00:34:11.815 --> 00:34:13.574
<v Speaker 0>management for an organization,

00:34:13.574 --> 00:34:15.735
<v Speaker 0>a team, a product, whatever you want.

00:34:16.135 --> 00:34:16.375
<v Speaker 0>Yeah.

00:34:17.150 --> 00:34:19.310
<v Speaker 0>And I have successfully logged in right off

00:34:19.310 --> 00:34:21.550
<v Speaker 0>the bat. So we already seen the setup

00:34:21.550 --> 00:34:23.949
<v Speaker 0>process. We created a project. You know, we

00:34:23.949 --> 00:34:25.710
<v Speaker 0>we can see that we configure the applications

00:34:25.710 --> 00:34:27.390
<v Speaker 0>and how those all communicate.

00:34:27.710 --> 00:34:28.510
<v Speaker 0>Let's

00:34:28.510 --> 00:34:30.910
<v Speaker 0>talk about some of those security considerations that

00:34:30.910 --> 00:34:32.895
<v Speaker 0>also come from you know, if I'm gonna

00:34:32.895 --> 00:34:34.975
<v Speaker 0>roll my own identity solution,

00:34:35.775 --> 00:34:38.094
<v Speaker 0>auditability is gonna be really important. So what

00:34:38.094 --> 00:34:39.695
<v Speaker 0>is Zitadel given me

00:34:40.015 --> 00:34:42.175
<v Speaker 0>to help me understand how my users are

00:34:42.175 --> 00:34:44.574
<v Speaker 0>consuming and working with the projects that I

00:34:44.574 --> 00:34:44.815
<v Speaker 0>create?

00:34:46.340 --> 00:34:48.900
<v Speaker 1>Well, that's where the funny piece of Zitadel

00:34:48.900 --> 00:34:52.179
<v Speaker 1>comes into play. It's we built Zitadel in

00:34:52.179 --> 00:34:54.260
<v Speaker 1>a kind of unique way for the identity

00:34:54.260 --> 00:34:55.140
<v Speaker 1>industries.

00:34:55.699 --> 00:34:58.020
<v Speaker 1>For all those who are interested in a

00:34:58.020 --> 00:35:00.660
<v Speaker 1>topic, it's basically based on event sourcing and

00:35:00.660 --> 00:35:01.460
<v Speaker 1>and CQRS.

00:35:01.775 --> 00:35:04.655
<v Speaker 1>So we truly separated the the writing side

00:35:04.655 --> 00:35:06.895
<v Speaker 1>of the system from the reading side. And

00:35:06.895 --> 00:35:08.495
<v Speaker 1>there is a lot of material on on

00:35:08.495 --> 00:35:09.535
<v Speaker 1>reading up

00:35:09.695 --> 00:35:11.535
<v Speaker 1>all those those two patterns.

00:35:11.695 --> 00:35:14.095
<v Speaker 1>But the unique reason we chose basically to

00:35:14.095 --> 00:35:16.335
<v Speaker 1>use event sourcing as a concept is that

00:35:16.335 --> 00:35:18.839
<v Speaker 1>we have a perfect audit trail, so to

00:35:18.839 --> 00:35:21.000
<v Speaker 1>say. We know what happened in the past.

00:35:21.480 --> 00:35:23.720
<v Speaker 1>And we can quickly visualize that if you

00:35:23.720 --> 00:35:26.440
<v Speaker 1>go on the right top corner of Zitadel,

00:35:26.440 --> 00:35:27.960
<v Speaker 1>there is an instance button,

00:35:28.599 --> 00:35:30.920
<v Speaker 1>and that's basically the root level of Zitadel

00:35:30.920 --> 00:35:32.920
<v Speaker 1>because it it is has multitenant.

00:35:33.425 --> 00:35:35.585
<v Speaker 1>And in in in the top navigation, we

00:35:35.585 --> 00:35:36.545
<v Speaker 1>have events.

00:35:36.545 --> 00:35:38.065
<v Speaker 1>And if we could go there

00:35:39.025 --> 00:35:41.825
<v Speaker 1>yeah. The event thingy. And that's basically all

00:35:41.825 --> 00:35:44.385
<v Speaker 1>the things that happened in Zitadel so far.

00:35:44.385 --> 00:35:46.785
<v Speaker 1>And you can filter them through different things,

00:35:47.500 --> 00:35:48.540
<v Speaker 1>and and

00:35:49.020 --> 00:35:51.100
<v Speaker 1>you can also look at the payload on

00:35:51.100 --> 00:35:52.860
<v Speaker 1>the on the right side. You can expand

00:35:52.860 --> 00:35:53.820
<v Speaker 1>the events.

00:35:54.220 --> 00:35:56.780
<v Speaker 1>Yep. I mean, UI wise, it's not super,

00:35:56.780 --> 00:35:57.260
<v Speaker 1>but

00:35:58.540 --> 00:36:00.460
<v Speaker 1>somebody needs to improve the UI.

00:36:00.700 --> 00:36:03.855
<v Speaker 1>Thing is, you can also get those information

00:36:03.855 --> 00:36:05.375
<v Speaker 1>out through

00:36:05.375 --> 00:36:08.655
<v Speaker 1>an REST API or a gRPC API in

00:36:08.655 --> 00:36:09.375
<v Speaker 1>our case.

00:36:09.695 --> 00:36:12.175
<v Speaker 1>And that means you can filter out whatever

00:36:12.175 --> 00:36:14.815
<v Speaker 1>your users did on whatever they did on

00:36:14.815 --> 00:36:15.935
<v Speaker 1>on whatever resource.

00:36:16.320 --> 00:36:18.000
<v Speaker 1>So it gives you a lot of insights

00:36:18.000 --> 00:36:20.240
<v Speaker 1>what what happens in your system. So you

00:36:20.240 --> 00:36:23.280
<v Speaker 1>can pull out each operation that Zitadel did

00:36:23.840 --> 00:36:26.160
<v Speaker 1>and or a long time. You you see,

00:36:26.160 --> 00:36:28.640
<v Speaker 1>like, accept languages and whatnot. So

00:36:29.825 --> 00:36:31.505
<v Speaker 1>do, I guess, to build whatever you wanna

00:36:31.505 --> 00:36:33.424
<v Speaker 1>build up on top on that. That's kind

00:36:33.424 --> 00:36:35.265
<v Speaker 1>of the idea. Let's give our users back

00:36:35.265 --> 00:36:36.465
<v Speaker 1>their data. Right?

00:36:37.664 --> 00:36:39.505
<v Speaker 1>And that's

00:36:39.505 --> 00:36:42.545
<v Speaker 1>just the the guts of Zitadel. It's basically

00:36:42.545 --> 00:36:45.320
<v Speaker 1>a glorified SQL table in a Postgres. Right?

00:36:45.320 --> 00:36:47.400
<v Speaker 1>It's just an events table where we write

00:36:47.400 --> 00:36:50.360
<v Speaker 1>an append only log, and, yeah, that's what's

00:36:50.360 --> 00:36:53.000
<v Speaker 1>what's got thrown out there. Usually, you will

00:36:53.000 --> 00:36:54.280
<v Speaker 1>have more than, like,

00:36:55.160 --> 00:36:56.200
<v Speaker 1>so little events. But

00:37:04.305 --> 00:37:04.865
<v Speaker 1>okay.

00:37:07.105 --> 00:37:09.505
<v Speaker 1>You can also configure a a password

00:37:10.065 --> 00:37:12.145
<v Speaker 0>Yeah. Just try to local policy.

00:37:13.480 --> 00:37:16.040
<v Speaker 0>Just there's some interesting stuff. So let's go

00:37:16.040 --> 00:37:17.560
<v Speaker 0>back to that and to and by the

00:37:17.560 --> 00:37:19.560
<v Speaker 0>way, the minute you said CQRS and event

00:37:19.560 --> 00:37:21.960
<v Speaker 0>sourcing, I was sold. I'm a huge advocate

00:37:21.960 --> 00:37:23.960
<v Speaker 0>of event sourcing. I think it's such a

00:37:23.960 --> 00:37:26.840
<v Speaker 0>powerful way to build software. So Yes. Go

00:37:26.840 --> 00:37:29.815
<v Speaker 1>to events again because that's that's more technical

00:37:29.815 --> 00:37:32.535
<v Speaker 1>errors. Here, you have, like, the the

00:37:32.775 --> 00:37:35.415
<v Speaker 1>the check password check failures. Right. There it

00:37:35.415 --> 00:37:37.095
<v Speaker 1>is. And if you expand the event, you

00:37:37.095 --> 00:37:38.375
<v Speaker 1>see some additional metadata.

00:37:41.559 --> 00:37:43.720
<v Speaker 0>Yeah. But the IP address, user agent, stuff

00:37:43.720 --> 00:37:45.880
<v Speaker 0>like that. Okay. Exactly. And the funny thing

00:37:45.880 --> 00:37:48.200
<v Speaker 1>being all about we envision of Zitadel and

00:37:48.200 --> 00:37:50.200
<v Speaker 1>the reason why we chose event sourcing also

00:37:50.200 --> 00:37:51.880
<v Speaker 1>is we can train

00:37:52.599 --> 00:37:55.640
<v Speaker 1>machine learning models that basically can identify

00:37:55.640 --> 00:37:58.355
<v Speaker 1>threats in the past. And that's the funny

00:37:58.355 --> 00:38:00.755
<v Speaker 1>thing with event sourcing. Right? You can train

00:38:00.755 --> 00:38:01.475
<v Speaker 1>models,

00:38:01.555 --> 00:38:03.155
<v Speaker 1>and then we can give them to our

00:38:03.155 --> 00:38:03.875
<v Speaker 1>customers.

00:38:04.115 --> 00:38:06.835
<v Speaker 1>And with their models, we can fortify

00:38:07.315 --> 00:38:10.115
<v Speaker 1>our our our models and see whether they

00:38:10.115 --> 00:38:12.275
<v Speaker 1>had breaches down the road or whether they

00:38:12.275 --> 00:38:14.980
<v Speaker 1>had, like, signals that might have a weird

00:38:14.980 --> 00:38:16.260
<v Speaker 1>feeling to them.

00:38:16.579 --> 00:38:18.420
<v Speaker 1>And and and that basically is good for

00:38:18.420 --> 00:38:21.619
<v Speaker 1>security operations and SOC centers in general.

00:38:21.859 --> 00:38:23.299
<v Speaker 1>But that that as I said, that's the

00:38:23.299 --> 00:38:26.099
<v Speaker 1>reason why we chose to keep everything open

00:38:26.099 --> 00:38:29.005
<v Speaker 1>source in regard of the identity infrastructure piece

00:38:29.005 --> 00:38:29.885
<v Speaker 1>and only

00:38:30.125 --> 00:38:33.484
<v Speaker 1>keep the analytics piece to ourselves because that's

00:38:33.484 --> 00:38:35.805
<v Speaker 1>the thing where where you can produce additional

00:38:35.805 --> 00:38:37.885
<v Speaker 1>value for for paying customers.

00:38:38.125 --> 00:38:39.965
<v Speaker 1>That's basically the story right there.

00:38:40.525 --> 00:38:40.925
<v Speaker 1>Besides,

00:38:41.619 --> 00:38:44.260
<v Speaker 1>what Zitadel is optimized to is definitely, like,

00:38:44.260 --> 00:38:45.540
<v Speaker 1>b to b stuff

00:38:45.859 --> 00:38:47.860
<v Speaker 1>where you have multi tenants involved.

00:38:47.940 --> 00:38:49.700
<v Speaker 1>And and I'm certainly I think we should

00:38:49.700 --> 00:38:51.380
<v Speaker 1>talk about that in a in a minute

00:38:51.380 --> 00:38:53.700
<v Speaker 1>or so because that that's the reason why

00:38:53.700 --> 00:38:55.619
<v Speaker 1>Zitadel is built in a way it is

00:38:55.619 --> 00:38:59.045
<v Speaker 1>built currently and from a data architecture

00:38:59.045 --> 00:39:00.085
<v Speaker 1>standpoint.

00:39:02.964 --> 00:39:04.805
<v Speaker 1>Oh, yeah. If you wanna go bonkers on

00:39:04.805 --> 00:39:05.925
<v Speaker 1>the keyboard layout.

00:39:06.165 --> 00:39:06.965
<v Speaker 1>Yeah.

00:39:08.805 --> 00:39:11.010
<v Speaker 0>I'm here for this. I'm so happy.

00:39:13.170 --> 00:39:14.850
<v Speaker 1>That's by the way, it's a a name

00:39:14.850 --> 00:39:15.730
<v Speaker 1>you'll agree,

00:39:15.890 --> 00:39:18.050
<v Speaker 1>what you're looking at. It it it uses

00:39:18.050 --> 00:39:19.970
<v Speaker 1>the same APIs as everything.

00:39:20.770 --> 00:39:22.530
<v Speaker 1>So we don't we we do, like, eat

00:39:22.530 --> 00:39:24.835
<v Speaker 1>your own dog food thingy because we think

00:39:24.835 --> 00:39:27.715
<v Speaker 1>it's it's worth using our own APIs. That's

00:39:27.715 --> 00:39:30.515
<v Speaker 1>why we we even have an ongoing effort

00:39:30.515 --> 00:39:33.235
<v Speaker 1>to to create newer APIs, like a version

00:39:33.235 --> 00:39:35.155
<v Speaker 1>two APIs that have an improved

00:39:35.315 --> 00:39:36.755
<v Speaker 1>developer experience,

00:39:36.755 --> 00:39:36.915
<v Speaker 1>basically.

00:39:39.609 --> 00:39:42.570
<v Speaker 1>Yeah. You can customize your eyes and everything.

00:39:42.570 --> 00:39:44.250
<v Speaker 0>I'll stop the second randomly.

00:39:44.330 --> 00:39:46.650
<v Speaker 0>We do have a question in the chat,

00:39:46.650 --> 00:39:48.250
<v Speaker 0>which we'll get to in just a second.

00:39:48.250 --> 00:39:48.810
<v Speaker 0>So

00:39:50.010 --> 00:39:51.530
<v Speaker 0>alright. We have Zitadel.

00:39:52.235 --> 00:39:54.315
<v Speaker 0>Things are working. I'm clicking on things. The

00:39:54.315 --> 00:39:56.235
<v Speaker 0>keyboard driven thing is a nice little cherry

00:39:56.235 --> 00:39:58.555
<v Speaker 0>there just to sweeten the deal that I'm

00:39:58.555 --> 00:40:00.795
<v Speaker 0>very happy about. But the question is

00:40:02.235 --> 00:40:04.235
<v Speaker 0>oh, it's a bit small. Let me

00:40:06.190 --> 00:40:08.110
<v Speaker 0>can we dive into this a little bit

00:40:08.110 --> 00:40:09.550
<v Speaker 0>more with regarding

00:40:09.550 --> 00:40:10.350
<v Speaker 0>organization

00:40:10.350 --> 00:40:12.190
<v Speaker 0>project grants and identity

00:40:12.270 --> 00:40:13.150
<v Speaker 0>brokering?

00:40:13.470 --> 00:40:14.270
<v Speaker 1>Sure.

00:40:14.270 --> 00:40:16.270
<v Speaker 1>I mean, that's the the beef and butter

00:40:16.270 --> 00:40:18.665
<v Speaker 1>work of Zitadel, basically. Because

00:40:19.145 --> 00:40:21.705
<v Speaker 1>from a data architecture standpoint and you can

00:40:21.705 --> 00:40:23.465
<v Speaker 1>go to our docs. I guess we have

00:40:23.465 --> 00:40:24.025
<v Speaker 1>a

00:40:24.425 --> 00:40:26.585
<v Speaker 1>graph for that. So if you quickly go

00:40:26.585 --> 00:40:28.105
<v Speaker 1>go to our documentation,

00:40:28.744 --> 00:40:29.705
<v Speaker 1>and then

00:40:30.265 --> 00:40:31.945
<v Speaker 1>let's go to documentation

00:40:31.945 --> 00:40:33.625
<v Speaker 1>on in in the top menu,

00:40:34.800 --> 00:40:37.120
<v Speaker 1>and then concepts on the left side.

00:40:37.920 --> 00:40:41.040
<v Speaker 1>Yes. And then there is let's use instances

00:40:41.040 --> 00:40:43.360
<v Speaker 1>for the first. Yes. Perfect.

00:40:43.840 --> 00:40:44.720
<v Speaker 1>So

00:40:44.720 --> 00:40:46.640
<v Speaker 1>even though the graph is not especially the

00:40:46.640 --> 00:40:48.640
<v Speaker 1>nicest one in the world, it it we

00:40:48.640 --> 00:40:50.335
<v Speaker 1>try to show what what's going on in

00:40:50.335 --> 00:40:51.135
<v Speaker 1>Zitadel. And

00:40:51.695 --> 00:40:52.255
<v Speaker 1>so

00:40:53.535 --> 00:40:55.295
<v Speaker 1>one Zitadel binary

00:40:55.615 --> 00:40:58.495
<v Speaker 1>can have multiple Zitadel instances.

00:40:58.575 --> 00:41:01.455
<v Speaker 1>So you can run multiple virtual

00:41:01.790 --> 00:41:04.670
<v Speaker 1>identity systems in parallel. That's basically how we

00:41:04.670 --> 00:41:06.670
<v Speaker 1>operate our cloud service, and some of our

00:41:06.670 --> 00:41:08.430
<v Speaker 1>customers operate their systems.

00:41:08.910 --> 00:41:12.270
<v Speaker 1>And each Zitadel instance within itself is an

00:41:12.270 --> 00:41:13.630
<v Speaker 1>isolated system.

00:41:13.710 --> 00:41:14.910
<v Speaker 1>It has its own

00:41:15.550 --> 00:41:17.885
<v Speaker 1>IDs in the database, and and and it

00:41:17.885 --> 00:41:21.005
<v Speaker 1>basically acts as the thing you use as

00:41:21.005 --> 00:41:21.805
<v Speaker 1>customer

00:41:21.805 --> 00:41:22.925
<v Speaker 1>most of the time.

00:41:23.325 --> 00:41:26.045
<v Speaker 1>And within an instance, there is a concept

00:41:26.045 --> 00:41:27.165
<v Speaker 1>of organizations.

00:41:27.165 --> 00:41:28.765
<v Speaker 1>You can think of them like in an

00:41:28.765 --> 00:41:30.685
<v Speaker 1>LDAP directory organizational

00:41:30.685 --> 00:41:31.244
<v Speaker 1>units.

00:41:32.250 --> 00:41:33.770
<v Speaker 1>They are comparable

00:41:33.770 --> 00:41:36.170
<v Speaker 1>to realms in a Keycloak. It's not exactly

00:41:36.170 --> 00:41:39.530
<v Speaker 1>the same because with Zitadel, the intent was,

00:41:39.690 --> 00:41:42.730
<v Speaker 1>let's create one identity system that is the

00:41:42.730 --> 00:41:45.210
<v Speaker 1>trust anchor. So you basically plug in your

00:41:45.210 --> 00:41:48.375
<v Speaker 1>application into Zitadel. You trust Zitadel to do

00:41:48.375 --> 00:41:49.495
<v Speaker 1>the job properly,

00:41:49.815 --> 00:41:51.415
<v Speaker 1>and then you configure

00:41:51.575 --> 00:41:53.015
<v Speaker 1>your your application

00:41:53.015 --> 00:41:53.815
<v Speaker 1>inside

00:41:53.815 --> 00:41:55.015
<v Speaker 1>an organization.

00:41:55.095 --> 00:41:57.415
<v Speaker 1>Like, if I'm if if I'm creating

00:41:58.290 --> 00:42:00.690
<v Speaker 1>a cloud service, for example, I create an

00:42:00.690 --> 00:42:03.250
<v Speaker 1>organization for my own company. In our case,

00:42:03.250 --> 00:42:05.250
<v Speaker 1>we have an organization called Zitadel in our

00:42:05.250 --> 00:42:06.130
<v Speaker 1>cloud service.

00:42:06.530 --> 00:42:07.650
<v Speaker 1>And therein,

00:42:07.730 --> 00:42:09.650
<v Speaker 1>we have our applications

00:42:09.650 --> 00:42:12.050
<v Speaker 1>or all the things that's tied together

00:42:12.455 --> 00:42:15.495
<v Speaker 1>And to to to have multiple applications

00:42:15.495 --> 00:42:16.775
<v Speaker 1>combined together,

00:42:17.015 --> 00:42:18.135
<v Speaker 1>we have what's

00:42:18.135 --> 00:42:20.935
<v Speaker 1>called a project. So that's basically the hierarchy.

00:42:20.935 --> 00:42:22.215
<v Speaker 1>It's instance,

00:42:22.215 --> 00:42:23.175
<v Speaker 1>organization,

00:42:23.255 --> 00:42:24.215
<v Speaker 1>and and project.

00:42:25.380 --> 00:42:28.579
<v Speaker 1>And the users always belong to an organization.

00:42:28.579 --> 00:42:30.660
<v Speaker 1>So a organization typically

00:42:31.299 --> 00:42:34.420
<v Speaker 1>is is a vessel for either b two

00:42:34.420 --> 00:42:36.500
<v Speaker 1>c users. So you can create an organization

00:42:36.500 --> 00:42:38.420
<v Speaker 1>where you throw in all your customers, consumers,

00:42:39.725 --> 00:42:41.965
<v Speaker 1>and then you can create organizations

00:42:41.965 --> 00:42:44.925
<v Speaker 1>for each business customer or for each team.

00:42:44.925 --> 00:42:47.005
<v Speaker 1>So that's more whatever your data model basically

00:42:47.005 --> 00:42:47.645
<v Speaker 1>is.

00:42:48.045 --> 00:42:50.285
<v Speaker 1>And and that helps you separating

00:42:50.685 --> 00:42:52.125
<v Speaker 1>different configurations

00:42:52.125 --> 00:42:54.205
<v Speaker 1>from each other. So, for example,

00:42:54.860 --> 00:42:56.940
<v Speaker 1>if you have a b to b scenario,

00:42:56.940 --> 00:42:59.420
<v Speaker 1>well, customer a might want to use Azure

00:42:59.420 --> 00:43:01.500
<v Speaker 1>AD to log in, so he can configure

00:43:01.500 --> 00:43:03.900
<v Speaker 1>Azure AD in in his organization.

00:43:04.380 --> 00:43:06.860
<v Speaker 1>And customer b wants to use

00:43:07.180 --> 00:43:09.660
<v Speaker 1>Okta, so he can configure Okta in his

00:43:09.660 --> 00:43:12.875
<v Speaker 1>organization. And it's clear, okay, customer a uses

00:43:12.875 --> 00:43:15.195
<v Speaker 1>Azure AD, customer b uses Okta,

00:43:15.355 --> 00:43:18.395
<v Speaker 1>and Zitadel knows through the username to which

00:43:18.395 --> 00:43:21.835
<v Speaker 1>organization the user belongs and can forward accordingly,

00:43:22.315 --> 00:43:25.430
<v Speaker 1>which basically turns into what what's called identity

00:43:25.430 --> 00:43:26.310
<v Speaker 1>brokering

00:43:26.789 --> 00:43:29.910
<v Speaker 1>because we take the identity of the external

00:43:29.910 --> 00:43:30.630
<v Speaker 1>system,

00:43:31.269 --> 00:43:34.230
<v Speaker 1>generate the user object in Zitadel, and attach

00:43:34.230 --> 00:43:37.109
<v Speaker 1>the external identity to it, and give then

00:43:37.109 --> 00:43:39.670
<v Speaker 1>to the application that trust Zitadel

00:43:39.924 --> 00:43:42.404
<v Speaker 1>an ID that was generated by Zitadel. And

00:43:42.404 --> 00:43:44.885
<v Speaker 1>we do that because we want to, a,

00:43:44.885 --> 00:43:47.845
<v Speaker 1>retain the audit trail. We wanna assign permissions

00:43:47.845 --> 00:43:49.685
<v Speaker 1>to to to that user.

00:43:50.085 --> 00:43:50.964
<v Speaker 1>And, also,

00:43:51.444 --> 00:43:53.605
<v Speaker 1>maybe there is a scenario where

00:43:54.350 --> 00:43:57.390
<v Speaker 1>the same user has multiple identity sources. Right?

00:43:57.390 --> 00:43:59.870
<v Speaker 1>You already said in the beginning, like, okay.

00:43:59.870 --> 00:44:01.470
<v Speaker 1>You might have a GitHub and a GitLab

00:44:01.470 --> 00:44:04.190
<v Speaker 1>account. Maybe you want to attach both external

00:44:04.190 --> 00:44:07.385
<v Speaker 1>identities to the same identity in Zitadel. That's

00:44:07.385 --> 00:44:08.825
<v Speaker 1>basically the concept

00:44:09.224 --> 00:44:11.065
<v Speaker 1>of identity brokering.

00:44:11.464 --> 00:44:12.825
<v Speaker 0>So Okay. Can I just make sure I

00:44:12.825 --> 00:44:14.825
<v Speaker 0>understand this Yeah? Correctly?

00:44:15.065 --> 00:44:16.984
<v Speaker 0>So, you know, I'm a human, which means

00:44:16.984 --> 00:44:18.825
<v Speaker 0>I have an identity. Right? I am me.

00:44:18.825 --> 00:44:21.380
<v Speaker 0>And I go sign up first. Let's call

00:44:21.380 --> 00:44:23.300
<v Speaker 0>it amazing service a,

00:44:23.620 --> 00:44:25.380
<v Speaker 0>and I use my GitHub authentication, and I

00:44:25.380 --> 00:44:27.300
<v Speaker 0>have an account, and I got access to

00:44:27.300 --> 00:44:30.020
<v Speaker 0>whatever resources this company gives me. Right? But

00:44:30.020 --> 00:44:31.860
<v Speaker 0>then my employer then signs a b two

00:44:31.860 --> 00:44:32.580
<v Speaker 0>b deal with them,

00:44:33.234 --> 00:44:34.994
<v Speaker 0>and they want me to log in with

00:44:34.994 --> 00:44:36.755
<v Speaker 0>my Google account. I'm still the same person.

00:44:36.755 --> 00:44:38.035
<v Speaker 0>Right? I'm not I've not been split in

00:44:38.035 --> 00:44:38.595
<v Speaker 0>two.

00:44:38.994 --> 00:44:40.994
<v Speaker 0>Yep. What we're what you said there is

00:44:40.994 --> 00:44:42.435
<v Speaker 0>me as a person, I could log in

00:44:42.435 --> 00:44:45.075
<v Speaker 0>with my GitHub, attach my corporate identity. I'd

00:44:45.075 --> 00:44:46.915
<v Speaker 0>be part of this organization, but still part

00:44:46.915 --> 00:44:48.035
<v Speaker 0>of the b two c organization,

00:44:48.410 --> 00:44:49.930
<v Speaker 0>but my authorization

00:44:49.930 --> 00:44:52.250
<v Speaker 0>would be extended to the extra resources provided

00:44:52.250 --> 00:44:54.330
<v Speaker 0>by my org other organization. Is that is

00:44:54.330 --> 00:44:55.210
<v Speaker 0>that correct?

00:44:55.930 --> 00:44:58.330
<v Speaker 1>That's feasible. It's not the default what we

00:44:58.330 --> 00:44:59.130
<v Speaker 1>recommend

00:44:59.130 --> 00:45:01.210
<v Speaker 1>because it's, like, it's it's hard for your

00:45:01.210 --> 00:45:03.130
<v Speaker 1>company to manage stuff that way.

00:45:03.785 --> 00:45:06.745
<v Speaker 1>In in Zitadel's world, it's actually totally feasible

00:45:06.745 --> 00:45:07.545
<v Speaker 1>because

00:45:07.785 --> 00:45:10.505
<v Speaker 1>that's where the concept of grants come in.

00:45:11.145 --> 00:45:13.785
<v Speaker 1>Grants is basically a concept of

00:45:14.105 --> 00:45:16.905
<v Speaker 1>an an an application provider

00:45:17.140 --> 00:45:20.260
<v Speaker 1>can give a user permission to do something,

00:45:20.420 --> 00:45:24.260
<v Speaker 1>or an application provider can give an organization

00:45:24.260 --> 00:45:26.500
<v Speaker 1>the right to do something, and in turn,

00:45:26.500 --> 00:45:28.900
<v Speaker 1>they can assign the permission to their users.

00:45:28.900 --> 00:45:31.585
<v Speaker 1>Right? So it's either direct to a user

00:45:31.585 --> 00:45:33.825
<v Speaker 1>or indirect through an organization.

00:45:33.905 --> 00:45:34.865
<v Speaker 1>And that's often

00:45:35.105 --> 00:45:37.105
<v Speaker 1>what happens in the b to b scenario.

00:45:37.105 --> 00:45:40.065
<v Speaker 1>It's basically, okay. I, as company, have a

00:45:40.065 --> 00:45:42.145
<v Speaker 1>contract with GitHub, for example,

00:45:42.305 --> 00:45:45.040
<v Speaker 1>and I want on my own to be

00:45:45.040 --> 00:45:47.520
<v Speaker 1>able to give my users

00:45:47.840 --> 00:45:51.359
<v Speaker 1>admin rights or viewer rights or billing administrator

00:45:51.359 --> 00:45:52.320
<v Speaker 1>or whatnot

00:45:53.119 --> 00:45:55.695
<v Speaker 1>to do because that's what I want to

00:45:55.695 --> 00:45:58.575
<v Speaker 1>do. Right? I own the organization, Zitadel, on

00:45:58.575 --> 00:46:01.375
<v Speaker 1>GitHub. And that concept is basically what we

00:46:01.375 --> 00:46:03.855
<v Speaker 1>call brands in different flavors.

00:46:04.415 --> 00:46:04.975
<v Speaker 0>Okay.

00:46:05.295 --> 00:46:07.935
<v Speaker 0>So everything we've talked about so far is

00:46:07.935 --> 00:46:09.775
<v Speaker 0>on the Us end

00:46:10.210 --> 00:46:11.250
<v Speaker 0>side of the

00:46:11.970 --> 00:46:14.690
<v Speaker 0>I call it spectrum. Right? But I I

00:46:14.690 --> 00:46:18.130
<v Speaker 0>I do see grant rules and authorizations.

00:46:18.290 --> 00:46:21.250
<v Speaker 0>Does Zitadel offer off zed as well as

00:46:21.250 --> 00:46:22.850
<v Speaker 0>off end? And how does we haven't seen

00:46:22.850 --> 00:46:24.290
<v Speaker 0>that yet. So how does that work?

00:46:25.185 --> 00:46:27.585
<v Speaker 1>Yeah. We try to to keep it lean

00:46:27.585 --> 00:46:29.585
<v Speaker 1>at the moment there, and which basically means,

00:46:29.585 --> 00:46:32.065
<v Speaker 1>yeah, on the authorization space, we provide role

00:46:32.065 --> 00:46:33.425
<v Speaker 1>based access control

00:46:33.745 --> 00:46:35.265
<v Speaker 1>and attribute ace access

00:46:35.825 --> 00:46:37.265
<v Speaker 1>attribute attribute

00:46:37.265 --> 00:46:39.960
<v Speaker 1>based access control. That's the two things we

00:46:39.960 --> 00:46:41.960
<v Speaker 1>provide right now. And is that just done

00:46:41.960 --> 00:46:44.600
<v Speaker 0>through claims within the GWT that you you

00:46:44.600 --> 00:46:45.240
<v Speaker 0>provide?

00:46:45.800 --> 00:46:48.120
<v Speaker 1>That's one way of doing it. Yes. I

00:46:48.120 --> 00:46:50.200
<v Speaker 1>mean, you can throw it into a claim

00:46:50.200 --> 00:46:51.000
<v Speaker 1>in a token.

00:46:51.375 --> 00:46:53.695
<v Speaker 1>You can throw it in a sample assertion.

00:46:53.935 --> 00:46:56.175
<v Speaker 1>You can throw it into to the user

00:46:56.175 --> 00:46:59.455
<v Speaker 1>info, introspection response from Zitadel. So there's multiple

00:46:59.455 --> 00:47:00.575
<v Speaker 1>ways tackling it.

00:47:01.055 --> 00:47:03.455
<v Speaker 1>But generally speaking, yes, you're correct there.

00:47:04.610 --> 00:47:07.250
<v Speaker 0>Alright. Nice. Yeah. I think this

00:47:07.490 --> 00:47:09.250
<v Speaker 0>concept space is is a good way to

00:47:09.250 --> 00:47:09.890
<v Speaker 0>understand

00:47:10.290 --> 00:47:12.610
<v Speaker 0>the vocabulary that people would probably need to

00:47:12.610 --> 00:47:14.530
<v Speaker 0>bring on board and understand as they Yeah.

00:47:14.530 --> 00:47:16.210
<v Speaker 0>Boards of the data there. You know? And

00:47:16.210 --> 00:47:17.730
<v Speaker 0>so these organizations,

00:47:17.730 --> 00:47:19.890
<v Speaker 0>projects, applications, grants, and so forth like this.

00:47:19.890 --> 00:47:21.205
<v Speaker 0>It seems like a pretty good place where

00:47:21.205 --> 00:47:22.645
<v Speaker 0>people should spend a little bit of time

00:47:22.645 --> 00:47:24.565
<v Speaker 0>to be familiar before they start shipping this

00:47:24.565 --> 00:47:25.445
<v Speaker 0>into production.

00:47:26.085 --> 00:47:29.125
<v Speaker 1>Yeah. That's we usually recommend people at least

00:47:29.125 --> 00:47:30.485
<v Speaker 1>getting some some

00:47:31.045 --> 00:47:34.539
<v Speaker 1>briefer idea on instances, organizations, and projects because

00:47:34.539 --> 00:47:37.260
<v Speaker 1>that's the meet main concepts if you're dealing

00:47:37.260 --> 00:47:39.740
<v Speaker 1>with user management and authentication.

00:47:39.980 --> 00:47:42.460
<v Speaker 1>As soon as you're diving into the authorization

00:47:42.460 --> 00:47:44.619
<v Speaker 1>space, you should look at the grant

00:47:45.099 --> 00:47:46.539
<v Speaker 1>grant stuff, like, for

00:47:47.339 --> 00:47:50.775
<v Speaker 1>the granted projects piece there because that's

00:47:51.335 --> 00:47:52.775
<v Speaker 1>a delegated

00:47:52.775 --> 00:47:53.575
<v Speaker 1>scenario

00:47:53.974 --> 00:47:54.375
<v Speaker 1>where

00:47:54.775 --> 00:47:56.375
<v Speaker 1>for example, if you're going back to the

00:47:56.375 --> 00:47:58.615
<v Speaker 1>GitHub example, I, as GitHub,

00:47:58.615 --> 00:48:00.535
<v Speaker 1>gives Zitadel the opportunity

00:48:00.535 --> 00:48:03.015
<v Speaker 1>to self manage who is administrator.

00:48:03.015 --> 00:48:04.615
<v Speaker 1>Right? And so GitHub

00:48:04.694 --> 00:48:05.255
<v Speaker 1>delegates

00:48:05.619 --> 00:48:08.500
<v Speaker 1>the administrator role to the organization Zitadel, and

00:48:08.500 --> 00:48:11.540
<v Speaker 1>the organization Zitadel can give that role to

00:48:11.540 --> 00:48:14.740
<v Speaker 1>somebody within Zitadel or even outside of Zitadel.

00:48:14.740 --> 00:48:17.140
<v Speaker 1>So that's the the delegation model. And so

00:48:17.140 --> 00:48:20.099
<v Speaker 1>that's mostly applicable to b to b scenarios

00:48:20.385 --> 00:48:23.265
<v Speaker 1>because I, as Wendell says something to another

00:48:23.265 --> 00:48:25.905
<v Speaker 1>business, and I don't really care whom of

00:48:25.905 --> 00:48:28.625
<v Speaker 1>their crew is doing what besides that I

00:48:28.625 --> 00:48:30.065
<v Speaker 1>wanna have it auditable.

00:48:31.585 --> 00:48:31.905
<v Speaker 0>Okay.

00:48:32.400 --> 00:48:33.200
<v Speaker 0>Nice.

00:48:34.000 --> 00:48:35.599
<v Speaker 0>Alright. I'm

00:48:35.599 --> 00:48:37.200
<v Speaker 0>I'm gonna ask a question, and it's either

00:48:37.200 --> 00:48:38.640
<v Speaker 0>gonna be a really good question. You're gonna

00:48:38.640 --> 00:48:40.559
<v Speaker 0>have an amazing answer or you're gonna hate

00:48:40.559 --> 00:48:41.920
<v Speaker 0>me. I don't know which way it's gonna

00:48:41.920 --> 00:48:44.000
<v Speaker 0>go. Alright? But but so far,

00:48:44.400 --> 00:48:46.480
<v Speaker 0>everything we did, we clicked around.

00:48:47.345 --> 00:48:49.424
<v Speaker 0>Yep. And while it's got an amazing set

00:48:49.424 --> 00:48:51.664
<v Speaker 0>of keyboard shortcuts, which I could explore for

00:48:51.664 --> 00:48:52.385
<v Speaker 0>days,

00:48:53.025 --> 00:48:54.705
<v Speaker 0>I am a as code

00:48:54.785 --> 00:48:55.905
<v Speaker 0>kind of person.

00:48:56.385 --> 00:48:58.545
<v Speaker 0>Yeah. What are my options? Do we have

00:48:58.545 --> 00:48:59.664
<v Speaker 0>the ability to

00:49:00.460 --> 00:49:01.500
<v Speaker 0>commit

00:49:01.740 --> 00:49:02.940
<v Speaker 0>my organizations,

00:49:02.940 --> 00:49:04.700
<v Speaker 0>my projects, stuff like that, at least some

00:49:04.700 --> 00:49:05.660
<v Speaker 0>of it to get

00:49:05.980 --> 00:49:07.660
<v Speaker 0>or use SDKs?

00:49:07.660 --> 00:49:09.580
<v Speaker 0>Like, is there any way for me automate

00:49:09.820 --> 00:49:10.860
<v Speaker 0>like, let's assume

00:49:12.060 --> 00:49:14.755
<v Speaker 0>my Zitadel's compromised. I need to rebuild it.

00:49:14.755 --> 00:49:16.275
<v Speaker 0>No. That could just be a database resource,

00:49:16.275 --> 00:49:17.555
<v Speaker 0>but maybe I wanna start for I don't

00:49:17.555 --> 00:49:19.075
<v Speaker 0>know. Like, how how do I do this

00:49:19.075 --> 00:49:21.395
<v Speaker 0>in a way that's reproducible? Can I?

00:49:22.195 --> 00:49:24.515
<v Speaker 1>Sure. If you quickly go to our documentation

00:49:24.515 --> 00:49:27.619
<v Speaker 1>page, there is, like on on the top,

00:49:27.619 --> 00:49:28.820
<v Speaker 1>there is APIs

00:49:29.299 --> 00:49:31.859
<v Speaker 1>because that's basically the starting point. There is

00:49:31.859 --> 00:49:33.940
<v Speaker 1>a lot of APIs in Zitadel.

00:49:33.940 --> 00:49:36.740
<v Speaker 1>And with without going into too much detail

00:49:36.740 --> 00:49:38.740
<v Speaker 1>right now, because I could talk for hours

00:49:38.740 --> 00:49:39.619
<v Speaker 1>about APIs,

00:49:40.205 --> 00:49:43.725
<v Speaker 1>It it always boils down to Zitadel providing

00:49:43.725 --> 00:49:47.005
<v Speaker 1>APIs either standard based, like OpenID Connect or

00:49:47.005 --> 00:49:49.645
<v Speaker 1>sample stuff. That's the baseline stuff.

00:49:50.045 --> 00:49:52.445
<v Speaker 1>And then we have APIs to change objects

00:49:52.445 --> 00:49:55.005
<v Speaker 1>in Zitadel, like create users, delete users, create

00:49:55.005 --> 00:49:56.740
<v Speaker 1>applications, everything. And,

00:49:57.140 --> 00:49:58.820
<v Speaker 1>for example, if you go to the left

00:49:58.820 --> 00:49:59.860
<v Speaker 1>hand side and

00:50:00.500 --> 00:50:03.620
<v Speaker 1>see user life cycle, for example, let's let's

00:50:03.620 --> 00:50:05.140
<v Speaker 1>pick that one, and then you go for

00:50:05.140 --> 00:50:06.180
<v Speaker 1>the user service.

00:50:07.540 --> 00:50:09.755
<v Speaker 1>Yeah. That's you can look at the create

00:50:09.755 --> 00:50:10.955
<v Speaker 1>user, for example.

00:50:11.515 --> 00:50:13.035
<v Speaker 1>Yeah. That's basically

00:50:13.835 --> 00:50:16.715
<v Speaker 1>resource based API where you can create users.

00:50:16.715 --> 00:50:17.275
<v Speaker 1>Right?

00:50:18.075 --> 00:50:20.795
<v Speaker 1>From there on out, you have multiple options.

00:50:21.915 --> 00:50:24.875
<v Speaker 1>There is, for example, a Terraform provider

00:50:24.450 --> 00:50:27.650
<v Speaker 1>people use to manage resources in Zitadel. You

00:50:27.650 --> 00:50:29.410
<v Speaker 1>can find that on GitHub or on the

00:50:29.410 --> 00:50:30.770
<v Speaker 1>Terraform registry.

00:50:31.570 --> 00:50:32.050
<v Speaker 1>Exactly.

00:50:33.730 --> 00:50:34.370
<v Speaker 1>Which

00:50:34.609 --> 00:50:36.290
<v Speaker 1>can help you configure,

00:50:36.290 --> 00:50:38.609
<v Speaker 1>like, organizations and such things. It can also

00:50:38.609 --> 00:50:41.655
<v Speaker 1>create users. It's not not what we usually

00:50:41.655 --> 00:50:44.855
<v Speaker 1>recommend doing because reconciling users is kinda bad

00:50:44.855 --> 00:50:46.935
<v Speaker 1>if the user changes thing and so back

00:50:46.935 --> 00:50:49.335
<v Speaker 1>and so forth. But you can use

00:50:49.735 --> 00:50:52.615
<v Speaker 1>Terraform if that's the the the poison of

00:50:52.615 --> 00:50:54.960
<v Speaker 1>your choice. Right? You can use Pulumi. There

00:50:54.960 --> 00:50:57.040
<v Speaker 1>is even a Pulumi provider built on top

00:50:57.040 --> 00:50:59.360
<v Speaker 1>of the Terraform provider,

00:50:59.600 --> 00:51:02.480
<v Speaker 1>or we already have some SDKs for certain

00:51:02.480 --> 00:51:05.600
<v Speaker 1>languages, for example, for Go or for .net

00:51:06.400 --> 00:51:08.975
<v Speaker 1>to also do the same. Right? So that's

00:51:08.975 --> 00:51:11.135
<v Speaker 1>why I said it's multiple angles

00:51:11.935 --> 00:51:14.015
<v Speaker 1>tackling the same problem. So it kind of

00:51:14.015 --> 00:51:15.455
<v Speaker 1>depends on your use case,

00:51:15.855 --> 00:51:17.535
<v Speaker 1>what what fits your needs there.

00:51:18.495 --> 00:51:20.255
<v Speaker 0>Yeah. I'm good with a terra firm provider.

00:51:20.255 --> 00:51:21.455
<v Speaker 0>You should have started with that. Come on.

00:51:24.210 --> 00:51:25.970
<v Speaker 0>Like, like, I was expected to open this

00:51:25.970 --> 00:51:28.050
<v Speaker 0>resources list and see, like, you know, you

00:51:28.130 --> 00:51:29.570
<v Speaker 0>you're like, oh, yeah. We we kinda have

00:51:29.570 --> 00:51:31.090
<v Speaker 0>this TerraForm provider and a few people use

00:51:31.090 --> 00:51:32.290
<v Speaker 0>it. I said, oh, there's gonna be, like,

00:51:32.290 --> 00:51:34.530
<v Speaker 0>two resources. And then, like, everything is just

00:51:34.530 --> 00:51:34.930
<v Speaker 0>sat there.

00:51:35.744 --> 00:51:38.464
<v Speaker 1>Yeah. It's it's it's it's not everything, but

00:51:38.464 --> 00:51:40.464
<v Speaker 1>it's we try to keep it really, like,

00:51:40.464 --> 00:51:40.865
<v Speaker 1>comprehensive,

00:51:41.505 --> 00:51:42.305
<v Speaker 1>so to say.

00:51:42.704 --> 00:51:45.825
<v Speaker 1>Because we have enterprise customers who also use

00:51:45.825 --> 00:51:48.305
<v Speaker 1>Terraform, and they're quite happy because they can

00:51:48.950 --> 00:51:52.230
<v Speaker 1>create new applications and projects across environments,

00:51:52.230 --> 00:51:54.390
<v Speaker 1>for example, within their Zitadel. Right? They can

00:51:54.390 --> 00:51:56.550
<v Speaker 1>just copy the environments and off they go.

00:51:57.829 --> 00:51:59.829
<v Speaker 0>I mean, I would probably just raise some

00:51:59.829 --> 00:52:02.069
<v Speaker 0>Rust. I mean, this API seems to be

00:52:01.865 --> 00:52:04.664
<v Speaker 0>pretty comprehensive as well. So, you know, generate

00:52:04.825 --> 00:52:06.744
<v Speaker 1>That's good. SDK and a way I go,

00:52:06.744 --> 00:52:08.825
<v Speaker 0>I think I'd be quite happy. Actually,

00:52:09.145 --> 00:52:09.785
<v Speaker 1>there is a

00:52:11.385 --> 00:52:12.744
<v Speaker 1>all our APIs

00:52:12.744 --> 00:52:15.060
<v Speaker 1>based on on on gRPC.

00:52:15.060 --> 00:52:16.980
<v Speaker 1>And if you go to our repository,

00:52:16.980 --> 00:52:19.380
<v Speaker 1>I can quickly guide you through it. So

00:52:19.380 --> 00:52:21.780
<v Speaker 0>that's you've got protobufs just hanging around waiting

00:52:21.780 --> 00:52:23.860
<v Speaker 0>for me as well then. Okay. Exactly.

00:52:24.020 --> 00:52:26.420
<v Speaker 1>It's it's that it's that simple. Like, close

00:52:26.420 --> 00:52:28.820
<v Speaker 1>to everything has a has a proto with

00:52:28.820 --> 00:52:28.980
<v Speaker 1>us.

00:52:30.325 --> 00:52:33.125
<v Speaker 1>So if you go for Zitadel, the repository,

00:52:34.485 --> 00:52:37.045
<v Speaker 1>and then it's a proto.

00:52:37.445 --> 00:52:39.205
<v Speaker 1>Yes. And then you see there is Oh,

00:52:39.205 --> 00:52:42.165
<v Speaker 0>buff. Very easy. Yes. So you can generate

00:52:42.480 --> 00:52:45.680
<v Speaker 1>whatever you is your poison right there. And

00:52:46.480 --> 00:52:46.960
<v Speaker 1>yeah.

00:52:47.520 --> 00:52:49.359
<v Speaker 1>That's that's what you You've got the right

00:52:49.359 --> 00:52:51.359
<v Speaker 0>answer to everything today. I'm just smiling my

00:52:51.359 --> 00:52:52.800
<v Speaker 0>entire way through this because,

00:52:53.440 --> 00:52:54.880
<v Speaker 0>I mean, I've I've I've got a buff

00:52:54.880 --> 00:52:56.755
<v Speaker 0>file. I I have I mean, it's got

00:52:56.755 --> 00:52:59.315
<v Speaker 0>an instant gRPC SDK ready to go, and

00:52:59.315 --> 00:53:01.715
<v Speaker 0>that works beautifully with Rust angle. So, I

00:53:01.715 --> 00:53:04.035
<v Speaker 0>mean, I'm sitting pretty happy with that.

00:53:04.595 --> 00:53:06.515
<v Speaker 1>We we use it even for, like, the

00:53:06.515 --> 00:53:09.475
<v Speaker 1>the management console you you clicked around. The

00:53:09.555 --> 00:53:11.475
<v Speaker 1>the the Angular code there as well uses

00:53:11.670 --> 00:53:14.150
<v Speaker 1>gRPC web to to to

00:53:14.710 --> 00:53:15.910
<v Speaker 1>change resources.

00:53:15.990 --> 00:53:18.869
<v Speaker 1>And so we provide REST services, gRPC web,

00:53:18.869 --> 00:53:20.070
<v Speaker 1>and gRPC.

00:53:20.470 --> 00:53:23.349
<v Speaker 1>But, honestly, it's just a transformation of the

00:53:23.349 --> 00:53:25.910
<v Speaker 1>gRPC model to the other languages to the

00:53:25.910 --> 00:53:27.030
<v Speaker 1>other API

00:53:27.345 --> 00:53:28.305
<v Speaker 1>frameworks.

00:53:28.785 --> 00:53:30.785
<v Speaker 1>And and as said, there is a v

00:53:30.785 --> 00:53:33.265
<v Speaker 1>one API that that was more use case

00:53:33.265 --> 00:53:34.065
<v Speaker 1>oriented.

00:53:34.065 --> 00:53:35.825
<v Speaker 1>If you go for the Zitadel folder, you

00:53:35.825 --> 00:53:37.345
<v Speaker 1>can see the difference there.

00:53:39.585 --> 00:53:41.770
<v Speaker 1>Yes. That's that's the thing. And there you

00:53:41.770 --> 00:53:43.369
<v Speaker 1>see, like, that's the old APIs on the

00:53:43.369 --> 00:53:46.170
<v Speaker 1>top folder, so semantically not super nice. But

00:53:46.170 --> 00:53:48.170
<v Speaker 1>the new APIs with the v two beta

00:53:48.170 --> 00:53:49.530
<v Speaker 1>flag, for example,

00:53:49.690 --> 00:53:51.609
<v Speaker 1>if we go for the yeah. Let's take

00:53:51.609 --> 00:53:54.245
<v Speaker 1>the session API or whatnot. And then there

00:53:54.245 --> 00:53:56.405
<v Speaker 1>is a session proto, and everything is nice

00:53:56.405 --> 00:53:58.245
<v Speaker 1>and tidy, and you have, like, the descriptor

00:53:58.245 --> 00:54:00.965
<v Speaker 1>fields for the open API specification as well.

00:54:01.445 --> 00:54:03.525
<v Speaker 1>And so it's it's up to pick your

00:54:03.525 --> 00:54:06.789
<v Speaker 1>poison, really, like, what suits you best. That's

00:54:06.789 --> 00:54:09.109
<v Speaker 1>why we were kind of hesitant in the

00:54:09.109 --> 00:54:11.670
<v Speaker 1>past to create too many SDKs because we

00:54:11.670 --> 00:54:14.309
<v Speaker 1>thought people, hey. There is your buff generates.

00:54:14.309 --> 00:54:16.630
<v Speaker 1>Do whatever you do. Yeah. Everything

00:54:16.630 --> 00:54:17.910
<v Speaker 1>is already there. Right?

00:54:18.230 --> 00:54:19.270
<v Speaker 0>Yeah. Definitely.

00:54:19.589 --> 00:54:21.365
<v Speaker 0>Buffs are pretty solid way to go. I

00:54:21.365 --> 00:54:23.125
<v Speaker 0>mean, gRPC in general is is, like, if

00:54:23.125 --> 00:54:24.484
<v Speaker 0>you go down that path and everyone can

00:54:24.484 --> 00:54:26.645
<v Speaker 0>generate their clients, fine. But Buff does make

00:54:26.645 --> 00:54:28.485
<v Speaker 0>it just that little bit easier to consume.

00:54:28.805 --> 00:54:30.484
<v Speaker 1>Oh, yeah. In the past, it was kind

00:54:30.484 --> 00:54:31.285
<v Speaker 1>of painful.

00:54:31.445 --> 00:54:33.125
<v Speaker 1>We've grown to see directly and so.

00:54:35.010 --> 00:54:35.810
<v Speaker 0>Awesome.

00:54:35.810 --> 00:54:38.370
<v Speaker 0>Alright. We do have a question on the

00:54:38.370 --> 00:54:39.810
<v Speaker 0>chat, so we should pop over to that

00:54:39.810 --> 00:54:41.890
<v Speaker 0>instead of me just clicking around helplessly having

00:54:41.890 --> 00:54:43.010
<v Speaker 0>fun with them.

00:54:44.450 --> 00:54:45.090
<v Speaker 0>Alright.

00:54:45.650 --> 00:54:46.210
<v Speaker 0>So

00:54:46.690 --> 00:54:49.410
<v Speaker 0>can there be multiple organizations that use brokering?

00:54:50.135 --> 00:54:52.775
<v Speaker 0>For example, GitHub wondering about the discovery and

00:54:52.775 --> 00:54:54.295
<v Speaker 0>creating the user upfront.

00:54:56.535 --> 00:54:58.695
<v Speaker 0>Not sure I understand that question. Do you?

00:54:59.575 --> 00:55:02.375
<v Speaker 1>I try to to I mean, I think

00:55:02.790 --> 00:55:05.510
<v Speaker 1>I know where it points out. Yes. And

00:55:05.830 --> 00:55:06.710
<v Speaker 1>I'm

00:55:06.710 --> 00:55:09.750
<v Speaker 1>just implying here, but, yes, multiple

00:55:09.750 --> 00:55:13.110
<v Speaker 1>organizations in Zitadel can use GitHub.

00:55:14.470 --> 00:55:16.535
<v Speaker 1>Though we should not we do not really

00:55:16.535 --> 00:55:19.335
<v Speaker 1>comment recommend that they use the same configuration.

00:55:19.415 --> 00:55:21.815
<v Speaker 1>In GitHub, anyway, you can't can only have,

00:55:21.815 --> 00:55:23.415
<v Speaker 1>like, one redirect URL.

00:55:23.575 --> 00:55:24.935
<v Speaker 1>So at least that was in the past

00:55:24.935 --> 00:55:25.655
<v Speaker 1>like that.

00:55:26.055 --> 00:55:28.775
<v Speaker 1>But you can have multiple GitHub

00:55:28.775 --> 00:55:29.655
<v Speaker 1>IDPs

00:55:29.655 --> 00:55:31.415
<v Speaker 1>in in in in Zitadel.

00:55:32.070 --> 00:55:35.510
<v Speaker 1>The brokering piece happens on an instance level.

00:55:35.510 --> 00:55:38.870
<v Speaker 1>So there is multiple ways of triggering

00:55:38.950 --> 00:55:41.110
<v Speaker 1>what we call domain discovery.

00:55:41.510 --> 00:55:44.390
<v Speaker 1>That's basically where Citadel tries to figure out

00:55:44.390 --> 00:55:47.865
<v Speaker 1>on which organization a user belongs to. Ah.

00:55:47.865 --> 00:55:48.505
<v Speaker 0>And

00:55:48.825 --> 00:55:51.625
<v Speaker 1>we have if you go to the documentation

00:55:52.665 --> 00:55:53.545
<v Speaker 1>layer,

00:55:54.265 --> 00:55:56.425
<v Speaker 1>basically, on the top left documentation again,

00:55:56.745 --> 00:55:57.625
<v Speaker 1>there is

00:55:57.945 --> 00:55:58.505
<v Speaker 1>where

00:55:58.745 --> 00:56:00.425
<v Speaker 1>was it? Just

00:56:00.505 --> 00:56:01.945
<v Speaker 1>use the search quickly.

00:56:03.500 --> 00:56:06.220
<v Speaker 1>Domain discovery or discovery should should bring you

00:56:06.220 --> 00:56:07.980
<v Speaker 1>up. Yeah. Domain discovery. Perfect.

00:56:09.339 --> 00:56:11.180
<v Speaker 1>Because there is multiple

00:56:11.420 --> 00:56:14.300
<v Speaker 1>ways Zitadel can discover where the user belongs

00:56:14.300 --> 00:56:14.460
<v Speaker 1>to.

00:56:15.115 --> 00:56:17.755
<v Speaker 1>First and foremost, we pass the username and

00:56:17.755 --> 00:56:19.995
<v Speaker 1>figure out where the user belongs to because

00:56:19.995 --> 00:56:22.315
<v Speaker 1>the username needs to be unique globally.

00:56:22.875 --> 00:56:25.355
<v Speaker 1>And the same applies to if there is

00:56:25.355 --> 00:56:26.555
<v Speaker 1>a identity

00:56:26.715 --> 00:56:29.349
<v Speaker 1>provider configured for the whole instance, like, for

00:56:29.349 --> 00:56:31.430
<v Speaker 1>everybody, well, then in that case, we can

00:56:31.430 --> 00:56:32.150
<v Speaker 1>figure it out.

00:56:32.710 --> 00:56:34.230
<v Speaker 1>If that's not applicable,

00:56:34.230 --> 00:56:37.109
<v Speaker 1>we can pause, for example, the user's email

00:56:37.109 --> 00:56:39.589
<v Speaker 1>address and tell, okay. If the email address

00:56:39.589 --> 00:56:42.550
<v Speaker 1>ends with at zitadel dot com, well, that

00:56:42.550 --> 00:56:45.255
<v Speaker 1>belongs to the organization from Citadel,

00:56:45.335 --> 00:56:47.495
<v Speaker 1>and then we can prompt the user, hey.

00:56:47.815 --> 00:56:49.335
<v Speaker 1>This is your organization.

00:56:50.535 --> 00:56:53.575
<v Speaker 1>Please use whatever is configured on that organization.

00:56:53.575 --> 00:56:55.255
<v Speaker 1>That can be automatically

00:56:55.255 --> 00:56:56.214
<v Speaker 1>redirecting

00:56:56.214 --> 00:56:58.855
<v Speaker 1>to GitHub. It can be

00:56:58.320 --> 00:57:00.240
<v Speaker 1>prompting the use of our passkey. It can

00:57:00.240 --> 00:57:00.720
<v Speaker 1>be

00:57:01.120 --> 00:57:03.920
<v Speaker 1>leaving the user a selection of things like

00:57:03.920 --> 00:57:04.800
<v Speaker 1>username,

00:57:04.800 --> 00:57:05.600
<v Speaker 1>password,

00:57:05.600 --> 00:57:06.960
<v Speaker 1>and or

00:57:07.840 --> 00:57:10.880
<v Speaker 1>GitHub. So there is multiple permutations of it,

00:57:11.155 --> 00:57:13.955
<v Speaker 1>but that's basically the way Zitadel tries to

00:57:13.955 --> 00:57:16.275
<v Speaker 1>figure out where the user belongs to.

00:57:16.755 --> 00:57:18.755
<v Speaker 1>And to make sure everything is unique in

00:57:18.755 --> 00:57:20.915
<v Speaker 1>Zitadel, each user automatically

00:57:20.915 --> 00:57:23.795
<v Speaker 1>gets an internal username assigned.

00:57:24.035 --> 00:57:26.435
<v Speaker 1>And if you quickly go for Zitadel's UI,

00:57:27.119 --> 00:57:28.880
<v Speaker 1>I can show you how that looks like.

00:57:29.279 --> 00:57:31.599
<v Speaker 1>So we have, like, the the Zitadel organization

00:57:31.599 --> 00:57:33.920
<v Speaker 1>here. That's the first organization that you create.

00:57:34.000 --> 00:57:35.359
<v Speaker 1>And you you

00:57:36.640 --> 00:57:38.640
<v Speaker 1>the yes. Exactly. You can you can.

00:57:39.385 --> 00:57:41.945
<v Speaker 1>Yes. The user is perfect. Click just click

00:57:41.945 --> 00:57:43.305
<v Speaker 1>on the user quickly here,

00:57:43.705 --> 00:57:45.625
<v Speaker 1>and you see on the top right, there

00:57:45.625 --> 00:57:47.225
<v Speaker 1>is login methods.

00:57:47.545 --> 00:57:49.305
<v Speaker 1>So it's basically username,

00:57:49.305 --> 00:57:51.385
<v Speaker 1>Zitadel minus admin, that's the username,

00:57:51.880 --> 00:57:55.560
<v Speaker 1>at Zitadel dot localhost. That means the organization

00:57:55.560 --> 00:57:56.920
<v Speaker 1>is called Zitadel,

00:57:57.000 --> 00:57:57.800
<v Speaker 1>and your

00:57:57.960 --> 00:57:58.599
<v Speaker 1>Zitadel

00:57:58.760 --> 00:58:00.680
<v Speaker 1>the whole thing is called localhost

00:58:00.680 --> 00:58:01.400
<v Speaker 1>right now.

00:58:01.800 --> 00:58:03.800
<v Speaker 1>And that's the semantics on how we can

00:58:03.800 --> 00:58:06.125
<v Speaker 1>figure it out easily because we know, okay,

00:58:06.125 --> 00:58:08.445
<v Speaker 1>Zitadel admin, well, there can only be one

00:58:08.445 --> 00:58:11.645
<v Speaker 1>in at Zitadel in dot local host. So

00:58:11.645 --> 00:58:13.805
<v Speaker 1>that that that's where it trickles down.

00:58:14.845 --> 00:58:18.125
<v Speaker 1>You can define those those domains on your

00:58:18.125 --> 00:58:20.510
<v Speaker 1>own. It's just we we pre regenerate

00:58:20.510 --> 00:58:21.870
<v Speaker 1>something for you already.

00:58:23.550 --> 00:58:26.109
<v Speaker 1>Oh, I'm so sorry. Answers the question. Yeah.

00:58:26.109 --> 00:58:27.470
<v Speaker 0>I I mean, I I hope I answered

00:58:27.470 --> 00:58:29.070
<v Speaker 0>the question. I'm not entirely sure. I'm just

00:58:29.070 --> 00:58:31.550
<v Speaker 0>clicking about now, but yeah. Yeah.

00:58:32.109 --> 00:58:33.470
<v Speaker 1>You found the peso list.

00:58:34.030 --> 00:58:34.430
<v Speaker 0>Well, yeah.

00:58:35.645 --> 00:58:37.885
<v Speaker 0>Is there you you mentioned pass keys at

00:58:37.885 --> 00:58:39.165
<v Speaker 0>the start, and I know it's very early

00:58:39.165 --> 00:58:41.005
<v Speaker 0>in the pass key adoption. Does Zitadel support

00:58:41.005 --> 00:58:42.205
<v Speaker 0>pass keys as a

00:58:42.765 --> 00:58:45.645
<v Speaker 0>it does? Go for, yeah, password and security.

00:58:46.045 --> 00:58:47.405
<v Speaker 1>That's the subcategory.

00:58:47.405 --> 00:58:49.405
<v Speaker 1>And then pass less authentication, you can click

00:58:49.405 --> 00:58:50.525
<v Speaker 1>or add method here.

00:58:51.930 --> 00:58:53.210
<v Speaker 1>And then you can

00:58:54.170 --> 00:58:56.970
<v Speaker 1>throw in a name, like, whatever. You can

00:58:56.970 --> 00:58:57.930
<v Speaker 1>say, whatever

00:58:58.170 --> 00:59:00.250
<v Speaker 1>suits your yeah. One password does does the

00:59:00.250 --> 00:59:02.490
<v Speaker 1>trick. Add new, and then you should be

00:59:02.490 --> 00:59:05.530
<v Speaker 1>prompted by your One password to actually

00:59:06.635 --> 00:59:07.515
<v Speaker 1>store

00:59:07.835 --> 00:59:08.875
<v Speaker 1>something.

00:59:08.875 --> 00:59:09.915
<v Speaker 1>Oh, yeah.

00:59:11.195 --> 00:59:13.275
<v Speaker 1>I guess you need to open password options

00:59:13.275 --> 00:59:16.315
<v Speaker 1>because one password needs to be configured properly

00:59:16.315 --> 00:59:17.035
<v Speaker 1>to

00:59:17.435 --> 00:59:20.240
<v Speaker 1>work with the browser of choice.

00:59:23.040 --> 00:59:25.360
<v Speaker 1>At least on on Mac OS,

00:59:25.440 --> 00:59:25.600
<v Speaker 1>there

00:59:27.280 --> 00:59:29.280
<v Speaker 1>it tries to store it on on the

00:59:29.280 --> 00:59:31.280
<v Speaker 1>iCloud keychain as it looks like. Oh, yeah.

00:59:31.280 --> 00:59:33.200
<v Speaker 0>It's trying to store on the iCloud keychain.

00:59:33.895 --> 00:59:34.855
<v Speaker 1>Yeah. But

00:59:35.335 --> 00:59:37.095
<v Speaker 1>pass keys, yeah, they work.

00:59:37.575 --> 00:59:39.575
<v Speaker 1>That's the short answer here.

00:59:41.415 --> 00:59:43.655
<v Speaker 1>I think it it took the iCloud thingy

00:59:43.655 --> 00:59:45.095
<v Speaker 1>right now. All it did What?

00:59:45.990 --> 00:59:47.750
<v Speaker 0>Yeah. Alright. Okay. Never mind.

00:59:48.230 --> 00:59:49.430
<v Speaker 1>Yeah. The UI,

00:59:49.670 --> 00:59:51.590
<v Speaker 1>one person and the iCloud key chain is

00:59:51.590 --> 00:59:53.350
<v Speaker 1>sometimes a little bit wanky.

00:59:53.590 --> 00:59:55.590
<v Speaker 0>I I do have it see, it's because

00:59:55.590 --> 00:59:57.990
<v Speaker 0>I I just I I change all my

00:59:57.990 --> 00:59:59.590
<v Speaker 0>stuff too much. Right? But I this is

00:59:59.590 --> 01:00:01.545
<v Speaker 0>the first day in, like, two years I've

01:00:01.545 --> 01:00:02.585
<v Speaker 0>run Firefox.

01:00:02.665 --> 01:00:04.425
<v Speaker 0>And whereas my one password to pass keys

01:00:04.425 --> 01:00:06.425
<v Speaker 0>is all configured properly on my normal browser.

01:00:06.425 --> 01:00:08.665
<v Speaker 0>So okay. I'll do that. I'll play with

01:00:08.665 --> 01:00:09.385
<v Speaker 0>that later.

01:00:09.625 --> 01:00:10.425
<v Speaker 0>Alright.

01:00:11.865 --> 01:00:13.625
<v Speaker 0>Very nice. I like this. It's very cool

01:00:13.625 --> 01:00:13.945
<v Speaker 0>system.

01:00:16.310 --> 01:00:17.670
<v Speaker 0>I mean, I don't wanna say it's painless

01:00:17.670 --> 01:00:20.230
<v Speaker 0>because it's it's identity. Right? It's it's not

01:00:20.230 --> 01:00:23.830
<v Speaker 0>painless. You've already endured the pain for us.

01:00:23.830 --> 01:00:25.670
<v Speaker 0>That that's the beauty of what Zitadel is

01:00:25.670 --> 01:00:27.190
<v Speaker 0>bringing to the table, and I love that.

01:00:27.190 --> 01:00:27.590
<v Speaker 0>I

01:00:28.070 --> 01:00:29.030
<v Speaker 1>mean, it's it's

01:00:29.845 --> 01:00:31.205
<v Speaker 1>really a comprehensive

01:00:31.205 --> 01:00:32.965
<v Speaker 1>thing, Zitadel. And

01:00:33.525 --> 01:00:34.405
<v Speaker 1>what we

01:00:34.645 --> 01:00:37.845
<v Speaker 1>we think Zitadel is best suited for is

01:00:37.845 --> 01:00:40.405
<v Speaker 1>if you're building a b to b case,

01:00:40.805 --> 01:00:42.805
<v Speaker 1>that's the strong suit of Zitadel. If you're

01:00:42.805 --> 01:00:44.485
<v Speaker 1>running b to c, that's where we can

01:00:44.485 --> 01:00:47.690
<v Speaker 1>work totally as well. It's not overly optimized

01:00:47.690 --> 01:00:49.530
<v Speaker 1>for workforce identity,

01:00:49.930 --> 01:00:52.810
<v Speaker 1>but because we like the the HR processes

01:00:52.810 --> 01:00:56.010
<v Speaker 1>and stuff. But from a technological standpoint, it

01:00:56.010 --> 01:00:56.890
<v Speaker 1>can do that as well.

01:00:57.585 --> 01:00:59.905
<v Speaker 1>So it's just our our focus definitely is

01:00:59.905 --> 01:01:01.745
<v Speaker 1>toward customer identity,

01:01:02.305 --> 01:01:04.305
<v Speaker 1>so to say. And that's where we try

01:01:04.305 --> 01:01:06.385
<v Speaker 1>to really, like, bring a turnkey solution

01:01:06.545 --> 01:01:08.945
<v Speaker 1>that does authentication for you. You can create

01:01:08.945 --> 01:01:10.065
<v Speaker 1>identities. You can

01:01:11.180 --> 01:01:13.260
<v Speaker 1>use external identity sources.

01:01:13.339 --> 01:01:15.660
<v Speaker 1>You can even use LDAP if you like.

01:01:15.660 --> 01:01:17.260
<v Speaker 1>I mean, if you go, like, for settings

01:01:17.260 --> 01:01:17.900
<v Speaker 1>here,

01:01:19.660 --> 01:01:20.940
<v Speaker 1>there is even, like,

01:01:22.460 --> 01:01:24.700
<v Speaker 1>an identity provider section on the left hand

01:01:24.700 --> 01:01:25.260
<v Speaker 1>side there.

01:01:26.935 --> 01:01:28.935
<v Speaker 1>A little upwards. Yes. And then you have,

01:01:28.935 --> 01:01:31.415
<v Speaker 1>like, a a lot of preconfigured providers here.

01:01:31.415 --> 01:01:33.255
<v Speaker 1>And there is also SAML if you wanna

01:01:33.255 --> 01:01:35.255
<v Speaker 1>give you the pain. You can do SAML

01:01:35.255 --> 01:01:37.335
<v Speaker 1>as well. And there is, like, a Active

01:01:37.335 --> 01:01:39.960
<v Speaker 1>Directory LDAP. You can also use that if

01:01:39.960 --> 01:01:42.520
<v Speaker 1>you wanna authenticate with preexisting

01:01:42.520 --> 01:01:43.640
<v Speaker 1>infrastructure.

01:01:43.800 --> 01:01:47.000
<v Speaker 1>It's more for for projects that are already

01:01:47.000 --> 01:01:48.760
<v Speaker 1>established rather than new.

01:01:49.400 --> 01:01:50.040
<v Speaker 1>Mhmm.

01:01:50.280 --> 01:01:51.640
<v Speaker 1>If you click on one of those, you

01:01:51.640 --> 01:01:53.685
<v Speaker 1>just get a whistle, basically. That's right. I

01:01:53.685 --> 01:01:55.365
<v Speaker 0>I will take action. Nothing plays will happen.

01:01:55.365 --> 01:01:56.325
<v Speaker 1>No. No. No.

01:01:57.525 --> 01:01:58.885
<v Speaker 0>I'm pretty sure if I click on one

01:01:58.885 --> 01:02:00.805
<v Speaker 0>of these, it's just it doesn't help spy

01:02:00.805 --> 01:02:03.525
<v Speaker 0>at all. Act LDAP active directory SAML. Those

01:02:03.525 --> 01:02:04.565
<v Speaker 0>are bad words in my book.

01:02:08.110 --> 01:02:09.790
<v Speaker 0>This is a bit of a a

01:02:10.430 --> 01:02:12.190
<v Speaker 0>random question. I know it's not that the

01:02:14.030 --> 01:02:15.710
<v Speaker 0>it's not, like, the directly the use case

01:02:15.710 --> 01:02:17.630
<v Speaker 0>result. You've covered what that is really well.

01:02:17.955 --> 01:02:19.635
<v Speaker 0>But, you know, there's a there is machine

01:02:19.635 --> 01:02:21.235
<v Speaker 0>to machine identity.

01:02:21.235 --> 01:02:23.155
<v Speaker 0>Right? This is something that's more prominent, and

01:02:23.155 --> 01:02:24.915
<v Speaker 0>I'm thinking of the use case of I

01:02:24.915 --> 01:02:26.995
<v Speaker 0>operate a number of Kubernetes clusters for my

01:02:26.995 --> 01:02:28.515
<v Speaker 0>Rawkode Academy infrastructure.

01:02:28.515 --> 01:02:30.275
<v Speaker 0>And, like, you know, if I can do

01:02:30.275 --> 01:02:32.115
<v Speaker 0>a generic YDC and I can hook that

01:02:32.115 --> 01:02:34.859
<v Speaker 0>up to the Kubernetes RBAC stuff, like, has

01:02:34.859 --> 01:02:36.780
<v Speaker 0>anyone explored this? Is this something that you've

01:02:36.780 --> 01:02:38.060
<v Speaker 0>you've played with yourself?

01:02:39.180 --> 01:02:41.579
<v Speaker 1>Yeah. We played around with Istio in the

01:02:41.579 --> 01:02:43.500
<v Speaker 1>past quite a lot, and and some of

01:02:43.500 --> 01:02:45.420
<v Speaker 1>our customers even use Istio.

01:02:45.660 --> 01:02:47.339
<v Speaker 1>But

01:02:46.635 --> 01:02:47.995
<v Speaker 1>we since then,

01:02:48.315 --> 01:02:51.835
<v Speaker 1>well, left the Kubernetes world for our infrastructure.

01:02:52.075 --> 01:02:53.995
<v Speaker 1>I mean, not in a bad mood, but

01:02:53.995 --> 01:02:56.715
<v Speaker 1>they'll try to to use, like, less operational

01:02:56.715 --> 01:02:59.720
<v Speaker 1>overhead for a start up. And, yeah, operationalizing

01:02:59.720 --> 01:03:02.119
<v Speaker 1>Kubernetes was kinda hard even though we did

01:03:02.119 --> 01:03:04.520
<v Speaker 1>run Kubernetes in the past quite a lot.

01:03:04.839 --> 01:03:06.520
<v Speaker 1>But we chose to use Cloud Run. I

01:03:06.520 --> 01:03:08.680
<v Speaker 1>have a whole talk about why switching from

01:03:08.680 --> 01:03:11.560
<v Speaker 1>Kubernetes to Cloud Run, but that's a different

01:03:11.560 --> 01:03:11.800
<v Speaker 1>thing.

01:03:13.415 --> 01:03:15.895
<v Speaker 1>Going from machine to machine stuff is kind

01:03:15.895 --> 01:03:18.375
<v Speaker 1>of what Zitadel can do as well. Let

01:03:18.375 --> 01:03:19.655
<v Speaker 1>me show you an example. If you go

01:03:19.655 --> 01:03:21.495
<v Speaker 1>for users in in in your UI,

01:03:24.150 --> 01:03:26.309
<v Speaker 1>And then you have, like, a toggle on

01:03:26.309 --> 01:03:27.670
<v Speaker 1>the lower a little bit on the left

01:03:27.670 --> 01:03:29.589
<v Speaker 1>there, you have a toggle, which is barely

01:03:29.589 --> 01:03:31.589
<v Speaker 1>visible, but we know that's that's a bad

01:03:31.589 --> 01:03:32.630
<v Speaker 1>design decision.

01:03:33.029 --> 01:03:34.710
<v Speaker 1>And then you can create service users. So

01:03:34.710 --> 01:03:36.309
<v Speaker 1>if we quickly create the service user,

01:03:37.685 --> 01:03:39.685
<v Speaker 1>just throw in whatever you wanna throw in

01:03:39.685 --> 01:03:40.885
<v Speaker 1>as as username.

01:03:40.885 --> 01:03:41.765
<v Speaker 1>Nothing

01:03:41.925 --> 01:03:43.445
<v Speaker 1>really bad can happen here.

01:03:48.005 --> 01:03:48.725
<v Speaker 1>Yes.

01:03:49.605 --> 01:03:51.765
<v Speaker 1>Just create it and and off we go.

01:03:55.580 --> 01:03:56.940
<v Speaker 1>Now you get basically

01:03:57.020 --> 01:03:59.500
<v Speaker 1>a a a service user, and users in

01:03:59.500 --> 01:04:01.980
<v Speaker 1>Zitadel are kind of the same. The only

01:04:01.980 --> 01:04:04.540
<v Speaker 1>thing they differ is the the the means

01:04:04.540 --> 01:04:06.140
<v Speaker 1>they have to authenticate

01:04:06.140 --> 01:04:06.700
<v Speaker 1>themselves.

01:04:07.325 --> 01:04:09.085
<v Speaker 1>And so in a service user, you can

01:04:09.085 --> 01:04:11.724
<v Speaker 1>basically choose to create personal access tokens. On

01:04:11.724 --> 01:04:14.525
<v Speaker 1>the left side, you can just create tokens

01:04:14.525 --> 01:04:17.005
<v Speaker 1>that can do whatever the service account can

01:04:17.005 --> 01:04:17.565
<v Speaker 1>do.

01:04:17.964 --> 01:04:20.285
<v Speaker 1>You can throw in an expiration date or

01:04:20.285 --> 01:04:21.724
<v Speaker 1>just create it unlimited,

01:04:21.724 --> 01:04:22.525
<v Speaker 1>and off you go.

01:04:23.440 --> 01:04:25.280
<v Speaker 1>Or you can create keys.

01:04:26.240 --> 01:04:29.280
<v Speaker 1>That's basically a pry a Jot private key

01:04:29.520 --> 01:04:30.400
<v Speaker 1>process.

01:04:30.720 --> 01:04:32.960
<v Speaker 1>Like, you get a Jot file from us,

01:04:32.960 --> 01:04:34.160
<v Speaker 1>like a private key, and you can use

01:04:34.160 --> 01:04:36.865
<v Speaker 1>that to sign your your payload, and then

01:04:36.865 --> 01:04:39.025
<v Speaker 1>we can give you a nice tidy token

01:04:39.025 --> 01:04:40.704
<v Speaker 1>back. We have a guide for that. So

01:04:40.785 --> 01:04:43.025
<v Speaker 1>and and our Go SDK can already take

01:04:43.025 --> 01:04:45.025
<v Speaker 1>care of it as well as the Terraform

01:04:45.025 --> 01:04:46.865
<v Speaker 1>library does all also the same.

01:04:47.664 --> 01:04:49.105
<v Speaker 1>But the reason being, you don't leak the

01:04:49.105 --> 01:04:52.020
<v Speaker 1>the your secret. Right? And that can be

01:04:52.020 --> 01:04:54.900
<v Speaker 1>used to basically build machine to machine processes

01:04:54.900 --> 01:04:55.700
<v Speaker 1>because

01:04:55.780 --> 01:04:58.900
<v Speaker 1>a machine user in Zitadel can have rights

01:04:58.900 --> 01:05:01.700
<v Speaker 1>in an application that is attached to Zitadel,

01:05:01.940 --> 01:05:05.060
<v Speaker 1>or it can have rights in Zitadel itself.

01:05:05.060 --> 01:05:08.275
<v Speaker 1>Like, for example, you build your your nice

01:05:08.275 --> 01:05:10.515
<v Speaker 1>register UI and you want to create your

01:05:10.515 --> 01:05:13.075
<v Speaker 1>users on your own, well, create a service

01:05:13.075 --> 01:05:13.795
<v Speaker 1>user,

01:05:14.355 --> 01:05:16.275
<v Speaker 1>call our API, and off you go.

01:05:18.355 --> 01:05:19.075
<v Speaker 0>Nice.

01:05:19.235 --> 01:05:19.795
<v Speaker 0>Very cool.

01:05:21.560 --> 01:05:22.760
<v Speaker 0>I'm gonna have to play with this a

01:05:22.760 --> 01:05:24.200
<v Speaker 0>bit more. It's got a nice little robot

01:05:24.200 --> 01:05:24.920
<v Speaker 0>icon.

01:05:26.120 --> 01:05:27.880
<v Speaker 0>I mean Yeah. There is there's also a

01:05:27.880 --> 01:05:29.080
<v Speaker 1>guide for that because

01:05:33.105 --> 01:05:35.665
<v Speaker 0>Alright. There's a follow-up in the chat

01:05:35.905 --> 01:05:38.225
<v Speaker 0>with regards to the b two b angle.

01:05:38.945 --> 01:05:39.585
<v Speaker 0>Sure.

01:05:40.305 --> 01:05:41.185
<v Speaker 0>So

01:05:41.585 --> 01:05:43.345
<v Speaker 0>it says thank you. Thank you for the

01:05:43.345 --> 01:05:44.625
<v Speaker 0>b two b case where the users don't

01:05:44.625 --> 01:05:46.750
<v Speaker 0>exist in Zitadel initially, but they use an

01:05:46.750 --> 01:05:48.750
<v Speaker 0>email domain to propagate them through to the

01:05:48.750 --> 01:05:50.110
<v Speaker 0>correct IDP.

01:05:50.510 --> 01:05:51.150
<v Speaker 1>Yep.

01:05:51.390 --> 01:05:53.870
<v Speaker 1>That's possible. You can attach the domain

01:05:54.030 --> 01:05:55.710
<v Speaker 1>to to an organization.

01:05:55.710 --> 01:05:57.550
<v Speaker 1>Like, you can say acme.com

01:05:57.550 --> 01:05:58.910
<v Speaker 1>belongs to the organization.

01:05:59.484 --> 01:06:01.964
<v Speaker 1>And as soon as the user arrives from

01:06:01.964 --> 01:06:04.204
<v Speaker 1>an IDP, like GitHub, for example, and the

01:06:04.204 --> 01:06:07.405
<v Speaker 1>email address ends with at acme dot com,

01:06:07.484 --> 01:06:10.445
<v Speaker 1>you can automatically register the user inside

01:06:10.685 --> 01:06:13.325
<v Speaker 1>that organization who owns the domain, basically.

01:06:14.720 --> 01:06:15.680
<v Speaker 0>Awesome.

01:06:16.319 --> 01:06:18.640
<v Speaker 0>I'm gonna jump back to our big face

01:06:18.640 --> 01:06:20.880
<v Speaker 0>mode. So I'll give everyone watching a little

01:06:20.880 --> 01:06:22.160
<v Speaker 0>bit of a warning. If you do have

01:06:22.160 --> 01:06:23.680
<v Speaker 0>any more questions, get them into the chat

01:06:23.680 --> 01:06:24.400
<v Speaker 0>quick.

01:06:25.440 --> 01:06:26.240
<v Speaker 0>Now I'm curious.

01:06:27.135 --> 01:06:28.735
<v Speaker 0>I don't wanna talk about the Kubernetes side.

01:06:28.735 --> 01:06:31.215
<v Speaker 0>Right? I think critical infrastructure, you know, needs

01:06:31.215 --> 01:06:33.295
<v Speaker 0>its own Kubernetes cluster. You should be running

01:06:33.295 --> 01:06:34.975
<v Speaker 0>it with your standard workloads,

01:06:34.975 --> 01:06:37.295
<v Speaker 0>which brings more complications. I

01:06:37.615 --> 01:06:40.175
<v Speaker 0>actually even though I operate many Kubernetes clusters,

01:06:40.400 --> 01:06:43.200
<v Speaker 0>I put critical stuff on, like, fly.io or

01:06:43.200 --> 01:06:45.840
<v Speaker 0>I run it on railway. Like or even

01:06:45.840 --> 01:06:47.680
<v Speaker 0>Cloud Run is another really good approach as

01:06:47.680 --> 01:06:49.200
<v Speaker 0>well. Yep.

01:06:49.440 --> 01:06:50.400
<v Speaker 0>It's like

01:06:50.800 --> 01:06:53.120
<v Speaker 0>yeah. I hadn't I didn't know Cloud Run

01:06:53.120 --> 01:06:55.280
<v Speaker 0>could do long running processes, though. That's not

01:06:55.280 --> 01:06:56.875
<v Speaker 0>something I've explored before. I thought it was

01:06:56.875 --> 01:06:59.035
<v Speaker 0>just serverless platforms, but I'm assuming

01:06:59.355 --> 01:07:01.115
<v Speaker 0>your Zitadel isn't spinning up as a cold

01:07:01.115 --> 01:07:02.714
<v Speaker 0>start every time, is it? Or

01:07:03.835 --> 01:07:06.875
<v Speaker 1>It's like usually one second ish

01:07:06.954 --> 01:07:08.714
<v Speaker 1>to to get ready and serve traffic.

01:07:09.460 --> 01:07:10.900
<v Speaker 1>Oh, Yeah.

01:07:11.540 --> 01:07:14.580
<v Speaker 1>If you look at the Docker Compose file

01:07:14.580 --> 01:07:15.540
<v Speaker 1>we opened,

01:07:15.700 --> 01:07:18.740
<v Speaker 1>there is an argument passed to Zitadel there,

01:07:19.460 --> 01:07:21.140
<v Speaker 1>which is start from init

01:07:21.525 --> 01:07:24.484
<v Speaker 1>that basically advises Zitadel, hey.

01:07:24.724 --> 01:07:27.605
<v Speaker 1>Start from from your init standpoint, like, okay.

01:07:27.605 --> 01:07:29.845
<v Speaker 1>Try to do all the migrations and figure

01:07:29.845 --> 01:07:31.924
<v Speaker 1>out whether everything is prep and ready and

01:07:31.924 --> 01:07:34.085
<v Speaker 1>and whether the projections are there and all

01:07:34.085 --> 01:07:36.690
<v Speaker 1>that stuff. But there is also a a

01:07:36.690 --> 01:07:39.490
<v Speaker 1>start flag. So you basically can tell Zitadel

01:07:39.490 --> 01:07:42.450
<v Speaker 1>just to start with whatever system is just

01:07:42.450 --> 01:07:45.570
<v Speaker 1>there, and that increases the start up cold

01:07:45.570 --> 01:07:47.885
<v Speaker 1>start times quite a lot. Like, you can

01:07:47.885 --> 01:07:50.845
<v Speaker 1>get one second call starts with that. That's

01:07:50.845 --> 01:07:53.165
<v Speaker 1>how we operate Zitadel on on Cloud Run

01:07:53.165 --> 01:07:54.125
<v Speaker 1>is basically

01:07:54.445 --> 01:07:57.005
<v Speaker 1>we have a a job that applies the

01:07:57.005 --> 01:07:58.445
<v Speaker 1>schema changes and stuff,

01:07:58.765 --> 01:08:01.405
<v Speaker 1>but the scaling containers, they just start

01:08:01.730 --> 01:08:04.369
<v Speaker 1>with the precondition of everything is already prepped

01:08:04.369 --> 01:08:05.970
<v Speaker 1>and ready. And the same

01:08:06.289 --> 01:08:08.130
<v Speaker 1>our Helm chart does the same.

01:08:08.450 --> 01:08:09.970
<v Speaker 1>You get, like, a job that does the

01:08:09.970 --> 01:08:12.210
<v Speaker 1>setup stuff and initialization,

01:08:12.369 --> 01:08:15.329
<v Speaker 1>but the serving containers will not start with

01:08:15.785 --> 01:08:17.385
<v Speaker 1>from scratch everything.

01:08:17.385 --> 01:08:19.785
<v Speaker 1>That's basically how you can separate and and

01:08:19.785 --> 01:08:22.024
<v Speaker 1>improve operational efficiency there.

01:08:22.905 --> 01:08:24.505
<v Speaker 0>Nice. I like that.

01:08:25.625 --> 01:08:28.920
<v Speaker 0>Alright. Let's finish on what's what's next. Right?

01:08:28.920 --> 01:08:30.680
<v Speaker 0>What are you and the team working on?

01:08:30.680 --> 01:08:32.040
<v Speaker 0>What's on your road map for the next

01:08:32.040 --> 01:08:33.240
<v Speaker 0>three or six months?

01:08:33.720 --> 01:08:35.880
<v Speaker 0>New shiny features are always a bonus, but,

01:08:35.880 --> 01:08:36.439
<v Speaker 0>of course,

01:08:37.320 --> 01:08:38.520
<v Speaker 0>share what you can.

01:08:40.120 --> 01:08:43.320
<v Speaker 1>I mean, there is also citadel.com/roadmap,

01:08:43.635 --> 01:08:45.715
<v Speaker 1>but I will give you the the the

01:08:45.875 --> 01:08:47.635
<v Speaker 1>yeah. There is it basically goes to a

01:08:47.635 --> 01:08:48.354
<v Speaker 1>GitHub

01:08:48.675 --> 01:08:51.395
<v Speaker 1>board. I mean, we are we are committed

01:08:51.395 --> 01:08:52.514
<v Speaker 1>to transparency.

01:08:52.515 --> 01:08:53.955
<v Speaker 1>That is one of our missions of really,

01:08:53.955 --> 01:08:55.955
<v Speaker 1>like, let's keep things transparent because we are

01:08:55.955 --> 01:08:58.899
<v Speaker 1>a security product. We wanna build trust in

01:08:58.899 --> 01:09:00.740
<v Speaker 1>what we do, and so we try to

01:09:00.740 --> 01:09:01.939
<v Speaker 1>keep as much

01:09:02.180 --> 01:09:05.140
<v Speaker 1>visible as feasible. Not not everything, but as

01:09:05.140 --> 01:09:06.260
<v Speaker 1>much as feasible.

01:09:06.660 --> 01:09:09.620
<v Speaker 1>And the the most important things we are

01:09:09.620 --> 01:09:10.979
<v Speaker 1>actually working on is

01:09:11.385 --> 01:09:13.545
<v Speaker 1>we are working on a an a an

01:09:13.545 --> 01:09:15.064
<v Speaker 1>already made login

01:09:15.465 --> 01:09:17.385
<v Speaker 1>that you can just fetch, and then you

01:09:17.385 --> 01:09:20.185
<v Speaker 1>basically get the Next. Js application you can

01:09:20.185 --> 01:09:22.425
<v Speaker 1>tailor to your needs, and it already brings

01:09:22.425 --> 01:09:24.825
<v Speaker 1>along the components you need, like input

01:09:24.825 --> 01:09:27.189
<v Speaker 1>fields and that things. So that's one thing

01:09:27.189 --> 01:09:29.029
<v Speaker 1>we are currently working on. There is also

01:09:29.109 --> 01:09:30.949
<v Speaker 1>there is already a a work in progress

01:09:30.949 --> 01:09:34.309
<v Speaker 1>prototype on Zitadel slash TypeScript.

01:09:36.630 --> 01:09:39.029
<v Speaker 1>One thing that will come is

01:09:39.270 --> 01:09:41.165
<v Speaker 1>user schemas is

01:09:41.405 --> 01:09:43.965
<v Speaker 1>what should be soon the the the work

01:09:43.965 --> 01:09:45.165
<v Speaker 1>should soon start.

01:09:45.965 --> 01:09:48.365
<v Speaker 1>The idea being we want to give our

01:09:48.365 --> 01:09:51.405
<v Speaker 1>users the the possibility to define how a

01:09:51.405 --> 01:09:53.245
<v Speaker 1>user should look like because

01:09:53.640 --> 01:09:56.200
<v Speaker 1>different needs across different ranges.

01:09:56.200 --> 01:09:57.880
<v Speaker 1>Right? Like, what is mandatory,

01:09:57.880 --> 01:10:00.120
<v Speaker 1>what's what's what's not mandatory, and all those

01:10:00.120 --> 01:10:02.040
<v Speaker 1>things, and we wanna give people the flexibility

01:10:02.040 --> 01:10:03.080
<v Speaker 1>to define it.

01:10:03.800 --> 01:10:05.960
<v Speaker 1>And, also, what will land

01:10:06.120 --> 01:10:08.520
<v Speaker 1>is an improved versions of our actions.

01:10:09.205 --> 01:10:11.845
<v Speaker 1>Actions basically is you can run a little

01:10:11.845 --> 01:10:15.125
<v Speaker 1>bit of JavaScript code, etcetera, at runtime

01:10:15.285 --> 01:10:17.925
<v Speaker 1>to alter things, like to call an HTTP

01:10:17.925 --> 01:10:20.405
<v Speaker 1>API to to fetch some data of your

01:10:20.405 --> 01:10:23.409
<v Speaker 1>CRM or whatnot. Or when a user registers,

01:10:23.409 --> 01:10:25.329
<v Speaker 1>you can do an HTTP post to your

01:10:25.329 --> 01:10:26.769
<v Speaker 1>application, such things.

01:10:27.250 --> 01:10:29.969
<v Speaker 1>And we are working on an improved version

01:10:29.969 --> 01:10:31.409
<v Speaker 1>there where you can

01:10:31.650 --> 01:10:34.770
<v Speaker 1>intercept HTTP requests. So you can basically

01:10:35.655 --> 01:10:38.055
<v Speaker 1>alter everything that Zitadel can give you from

01:10:38.055 --> 01:10:39.494
<v Speaker 1>an API perspective

01:10:39.815 --> 01:10:40.455
<v Speaker 1>and

01:10:40.695 --> 01:10:43.575
<v Speaker 1>also an event feed. So you can basically

01:10:43.575 --> 01:10:44.935
<v Speaker 1>tell Zitadel each

01:10:45.415 --> 01:10:48.295
<v Speaker 1>event that matches to x y z throws

01:10:48.295 --> 01:10:50.295
<v Speaker 1>something at me, and then I can react

01:10:50.295 --> 01:10:52.730
<v Speaker 1>on it. So you can do event driven

01:10:52.730 --> 01:10:55.370
<v Speaker 1>applications even further. Right? Like, if a user

01:10:55.370 --> 01:10:57.370
<v Speaker 1>logs in, we can send event. If a

01:10:57.370 --> 01:10:59.930
<v Speaker 1>user password verification fails, we can send an

01:10:59.930 --> 01:11:01.770
<v Speaker 1>event to you. You can do whatever you

01:11:01.770 --> 01:11:02.330
<v Speaker 1>want with it.

01:11:03.465 --> 01:11:05.545
<v Speaker 1>And so we wanna have, like, those features

01:11:05.545 --> 01:11:06.665
<v Speaker 1>really extended.

01:11:06.985 --> 01:11:09.225
<v Speaker 1>Main idea being you we give you an

01:11:09.225 --> 01:11:11.385
<v Speaker 1>SDK. You can run that in a cloud

01:11:11.385 --> 01:11:13.545
<v Speaker 1>flow or call, and you can handle what

01:11:13.545 --> 01:11:15.305
<v Speaker 1>we send you and do whatever you wanna

01:11:15.305 --> 01:11:17.890
<v Speaker 1>do with it. Right? Because we try to

01:11:17.890 --> 01:11:20.770
<v Speaker 1>to build the developer experience around the actions

01:11:20.770 --> 01:11:23.250
<v Speaker 1>thingy, like, with an embedded runtime.

01:11:23.490 --> 01:11:26.290
<v Speaker 1>But so far, the we thought, well, there

01:11:26.290 --> 01:11:28.210
<v Speaker 1>is cloud flow, course, there is they know

01:11:28.210 --> 01:11:30.930
<v Speaker 1>there is multiple other tools that can do

01:11:30.930 --> 01:11:31.730
<v Speaker 1>edge functions.

01:11:32.185 --> 01:11:33.065
<v Speaker 1>Why do we need

01:11:33.625 --> 01:11:35.385
<v Speaker 1>what's the need for us to do the

01:11:35.385 --> 01:11:37.784
<v Speaker 1>same? Let's just reuse what's are out there

01:11:37.784 --> 01:11:40.505
<v Speaker 1>and use the developer experience, basically. Because it's

01:11:40.505 --> 01:11:42.505
<v Speaker 1>easier to debug, right, if you have, like,

01:11:42.505 --> 01:11:44.665
<v Speaker 1>full ID support and everything, and you can

01:11:44.665 --> 01:11:46.744
<v Speaker 1>put pick your language of your choice and

01:11:46.790 --> 01:11:49.110
<v Speaker 1>yeah, let let's basically define an API. We

01:11:49.110 --> 01:11:50.950
<v Speaker 1>send you an HTTP request. We send you

01:11:50.950 --> 01:11:52.469
<v Speaker 1>an event, and off you go.

01:11:53.350 --> 01:11:55.429
<v Speaker 1>Nice. So extensibility,

01:11:55.430 --> 01:11:57.750
<v Speaker 1>basically, is the the main topic there that

01:11:57.750 --> 01:11:58.310
<v Speaker 1>will come.

01:11:59.365 --> 01:12:00.645
<v Speaker 0>Yeah. I like that.

01:12:01.765 --> 01:12:04.324
<v Speaker 0>Have you, anyone in your team, or any

01:12:04.885 --> 01:12:06.645
<v Speaker 0>tangential now? Right? But I'm just going there

01:12:06.645 --> 01:12:08.885
<v Speaker 0>because it popped into my head. Like,

01:12:10.485 --> 01:12:13.285
<v Speaker 0>I see a really compelling story for the

01:12:12.540 --> 01:12:13.900
<v Speaker 0>for the author and I know there's some

01:12:13.900 --> 01:12:16.220
<v Speaker 0>of the off c stuff, but, you know,

01:12:16.220 --> 01:12:18.700
<v Speaker 0>SpiceDB is written in Go, Zitadel is written

01:12:18.700 --> 01:12:21.260
<v Speaker 0>in Go. I could essentially just consume them

01:12:21.260 --> 01:12:23.500
<v Speaker 0>both as libraries, ship a single binary to

01:12:23.500 --> 01:12:24.940
<v Speaker 0>do off n and off c in a

01:12:24.940 --> 01:12:26.380
<v Speaker 0>very and they both speak Postgres.

01:12:27.165 --> 01:12:29.005
<v Speaker 0>Have you is that something you've ever explored

01:12:29.005 --> 01:12:29.885
<v Speaker 0>to, like,

01:12:31.085 --> 01:12:33.324
<v Speaker 0>do some interesting patterns there?

01:12:33.885 --> 01:12:37.165
<v Speaker 1>Actually, yes. We're always looking into to

01:12:37.405 --> 01:12:40.285
<v Speaker 1>what's the culmination or the perfect culmination of

01:12:40.285 --> 01:12:43.350
<v Speaker 1>identity? Like, you need our event capabilities. You

01:12:43.350 --> 01:12:45.510
<v Speaker 1>need user management. You need audit, and you

01:12:45.510 --> 01:12:46.710
<v Speaker 1>need authorization.

01:12:46.710 --> 01:12:47.350
<v Speaker 1>And

01:12:47.670 --> 01:12:50.310
<v Speaker 1>we think we should keep it open. That's

01:12:50.310 --> 01:12:52.550
<v Speaker 1>why we came up with the events design,

01:12:52.630 --> 01:12:55.415
<v Speaker 1>like sending events to other systems.

01:12:55.575 --> 01:12:57.175
<v Speaker 1>So if a user changes and say that

01:12:57.175 --> 01:12:59.575
<v Speaker 1>they'll let's send something to SpiceDB

01:12:59.815 --> 01:13:02.215
<v Speaker 1>or whatever tool you wanna use, there is

01:13:02.215 --> 01:13:04.135
<v Speaker 1>also permi permi permi

01:13:04.215 --> 01:13:06.855
<v Speaker 1>permi permi yeah. Yeah. Warrant's Warrant is also

01:13:06.855 --> 01:13:09.250
<v Speaker 1>out there. So let's let's give users the

01:13:09.250 --> 01:13:11.970
<v Speaker 1>choice and try to keep, like, an let

01:13:12.130 --> 01:13:14.450
<v Speaker 1>let's try to build kind of an ecosystem

01:13:14.450 --> 01:13:15.570
<v Speaker 1>to some extent.

01:13:15.810 --> 01:13:18.610
<v Speaker 1>Maybe at one point when we we grow

01:13:18.610 --> 01:13:21.090
<v Speaker 1>big enough, we will try to to to

01:13:20.685 --> 01:13:23.325
<v Speaker 1>bring something more mature along to the party

01:13:23.325 --> 01:13:24.125
<v Speaker 1>for people.

01:13:24.525 --> 01:13:26.605
<v Speaker 1>But until then, we we advise to do

01:13:26.605 --> 01:13:27.885
<v Speaker 1>that do it that way.

01:13:29.245 --> 01:13:30.045
<v Speaker 0>Nice.

01:13:31.085 --> 01:13:33.085
<v Speaker 0>Alright. Last question from the chat, and then

01:13:33.085 --> 01:13:34.285
<v Speaker 0>we'll wrap this up for today.

01:13:35.170 --> 01:13:37.409
<v Speaker 0>Have you had any thoughts or plans regarding

01:13:37.409 --> 01:13:39.329
<v Speaker 0>fine grained authorization?

01:13:40.530 --> 01:13:43.170
<v Speaker 1>It it per wraps perfectly. I mean,

01:13:47.955 --> 01:13:50.594
<v Speaker 1>yes, we have a lot of ideas about

01:13:50.594 --> 01:13:53.635
<v Speaker 1>it. We also thought of integrating it directly

01:13:53.635 --> 01:13:54.994
<v Speaker 1>into the call product.

01:13:55.554 --> 01:13:56.914
<v Speaker 1>Honestly speaking,

01:13:57.074 --> 01:13:59.155
<v Speaker 1>we we try to focus a little bit

01:13:59.155 --> 01:14:02.034
<v Speaker 1>more on on authentication and integration pieces of

01:14:02.034 --> 01:14:04.550
<v Speaker 1>Zitadel right now. But I said, maybe at

01:14:04.550 --> 01:14:06.790
<v Speaker 1>one point, we'll try to integrate something.

01:14:07.030 --> 01:14:09.190
<v Speaker 1>Until then, we we advise people to do

01:14:09.190 --> 01:14:11.349
<v Speaker 1>what it is best, and that is basically

01:14:11.830 --> 01:14:13.830
<v Speaker 1>use Zitadel for authentication

01:14:13.830 --> 01:14:16.470
<v Speaker 1>and, like, role based authorization

01:14:16.470 --> 01:14:18.550
<v Speaker 1>stuff Okay. Pass the info along

01:14:18.875 --> 01:14:22.315
<v Speaker 1>to your authorization engine of choice that can

01:14:22.315 --> 01:14:24.155
<v Speaker 1>be OPA, it can be Verint, it can

01:14:24.155 --> 01:14:25.275
<v Speaker 1>be SPICE DB.

01:14:26.235 --> 01:14:28.155
<v Speaker 1>Let let's let's try to use it that

01:14:28.155 --> 01:14:30.635
<v Speaker 1>way because they have invested quite a lot

01:14:30.635 --> 01:14:33.890
<v Speaker 1>of time of unbundling the fine grain authorization

01:14:33.890 --> 01:14:35.570
<v Speaker 1>stuff. Right? Mhmm.

01:14:35.890 --> 01:14:37.730
<v Speaker 1>It's also a topic a topic with a

01:14:37.730 --> 01:14:40.130
<v Speaker 1>huge depth to it. So that's

01:14:40.930 --> 01:14:43.090
<v Speaker 0>Yeah. A whole journey. The replies is basically

01:14:43.090 --> 01:14:44.770
<v Speaker 0>my question. Yeah. I wasn't sure if it

01:14:44.770 --> 01:14:46.210
<v Speaker 0>was a bit more specific or if it

01:14:46.210 --> 01:14:48.645
<v Speaker 0>was kinda, you know No. No. It it's

01:14:48.645 --> 01:14:51.204
<v Speaker 1>decode correct in the same direction.

01:14:52.085 --> 01:14:54.244
<v Speaker 0>Alright. That was awesome. It's such a good

01:14:54.244 --> 01:14:56.405
<v Speaker 0>product. It's open source. People can get started

01:14:56.405 --> 01:14:58.644
<v Speaker 0>today. There's a free tier on the cloud.

01:14:58.645 --> 01:15:00.645
<v Speaker 0>I mean, just go start kicking the tires

01:15:00.645 --> 01:15:03.079
<v Speaker 0>on it. This is a problem that, you

01:15:03.079 --> 01:15:04.920
<v Speaker 0>know, if your if your company wants to

01:15:04.920 --> 01:15:06.920
<v Speaker 0>make money, they have to deal with identity.

01:15:06.920 --> 01:15:08.760
<v Speaker 0>It's just there's no other way about it.

01:15:08.760 --> 01:15:10.840
<v Speaker 0>Yeah. And why burden your developers with stuff

01:15:10.840 --> 01:15:13.639
<v Speaker 0>that's already available open source right there to

01:15:13.639 --> 01:15:16.280
<v Speaker 0>you? So thank you so much to Florian

01:15:16.280 --> 01:15:18.985
<v Speaker 0>and to the entire Zitadel team. Again, amazing

01:15:18.985 --> 01:15:20.745
<v Speaker 0>product. Can't wait to start kicking the tires

01:15:20.745 --> 01:15:21.705
<v Speaker 0>on it myself.

01:15:21.945 --> 01:15:24.185
<v Speaker 0>Any final words that you wanna share with

01:15:24.185 --> 01:15:25.545
<v Speaker 0>people before we say goodbye?

01:15:26.345 --> 01:15:29.145
<v Speaker 1>We certainly like to have engagement on on

01:15:29.145 --> 01:15:31.465
<v Speaker 1>Discord, for example. So there is quite a

01:15:31.465 --> 01:15:34.105
<v Speaker 1>lot in active community over there. If if

01:15:33.420 --> 01:15:35.980
<v Speaker 1>people wanna hang out and ask questions about

01:15:35.980 --> 01:15:36.940
<v Speaker 1>Zitadel,

01:15:36.940 --> 01:15:40.139
<v Speaker 1>the best way to go is zitadel.com/chat.

01:15:40.140 --> 01:15:42.540
<v Speaker 1>That should send you to a discording web

01:15:42.540 --> 01:15:45.100
<v Speaker 1>page. Otherwise, feel free to engage with us

01:15:45.100 --> 01:15:46.219
<v Speaker 1>on GitHub as well

01:15:47.425 --> 01:15:50.465
<v Speaker 1>because if we really try to to build

01:15:50.465 --> 01:15:51.905
<v Speaker 1>the next great

01:15:52.225 --> 01:15:56.065
<v Speaker 1>framework or or turnkey solution that can really

01:15:56.065 --> 01:15:58.785
<v Speaker 1>bring you the value of not building authentication,

01:15:58.785 --> 01:16:01.025
<v Speaker 1>of not caring about past case implementation,

01:16:01.870 --> 01:16:04.510
<v Speaker 1>of of trying to avoid all those fallacies

01:16:04.510 --> 01:16:07.630
<v Speaker 1>and having basically a a well defined ready

01:16:07.630 --> 01:16:09.790
<v Speaker 1>made product for for the job. Right? And

01:16:09.790 --> 01:16:10.270
<v Speaker 1>so

01:16:10.910 --> 01:16:13.230
<v Speaker 1>enjoy the ride. Ask questions. There is a

01:16:13.230 --> 01:16:14.989
<v Speaker 1>lot of weird things you can tackle once

01:16:14.989 --> 01:16:16.030
<v Speaker 1>you wanna scale

01:16:16.270 --> 01:16:17.070
<v Speaker 1>such a system.

01:16:17.685 --> 01:16:19.685
<v Speaker 1>Like, you get a lot of operational headache,

01:16:19.685 --> 01:16:21.925
<v Speaker 1>and that's not especially due to Zitadel, but

01:16:21.925 --> 01:16:25.525
<v Speaker 1>that's just generally, identity is weird because you

01:16:25.525 --> 01:16:28.804
<v Speaker 1>deal with authenticated and not authenticated traffic.

01:16:29.205 --> 01:16:31.205
<v Speaker 1>And, yeah, give us a shout out if

01:16:31.205 --> 01:16:33.205
<v Speaker 1>you have interest or needs or questions.

01:16:33.949 --> 01:16:35.949
<v Speaker 1>We are an open minded community.

01:16:36.670 --> 01:16:39.310
<v Speaker 0>Alright. Well, I'm now in your Discord, so

01:16:39.310 --> 01:16:41.389
<v Speaker 0>I'll be throwing all my questions to your

01:16:41.389 --> 01:16:43.550
<v Speaker 0>team and the community as I explore.

01:16:44.110 --> 01:16:45.150
<v Speaker 0>But

01:16:45.150 --> 01:16:47.614
<v Speaker 0>thank you so much for your there. So

01:16:48.895 --> 01:16:51.215
<v Speaker 1>we'll see each other again. Oh, you I

01:16:51.215 --> 01:16:52.415
<v Speaker 0>know I know we could gonna be like,

01:16:52.415 --> 01:16:53.535
<v Speaker 0>I really hate that guy. Why is he

01:16:53.535 --> 01:16:55.054
<v Speaker 0>just keep asking so many questions?

01:16:55.695 --> 01:16:57.454
<v Speaker 1>No worries. No worries.

01:16:57.775 --> 01:16:59.820
<v Speaker 0>Alright. Thank you so much, It was wonderful

01:16:59.820 --> 01:17:01.739
<v Speaker 0>exposure project. Keep up the good work, and

01:17:01.739 --> 01:17:03.260
<v Speaker 0>hopefully, I'll see you again soon. And to

01:17:03.260 --> 01:17:05.659
<v Speaker 0>everyone who watched, have a wonderful day. Thanks.

01:17:06.060 --> 01:17:07.659
<v Speaker 1>Likewise. Thank you for having me.
