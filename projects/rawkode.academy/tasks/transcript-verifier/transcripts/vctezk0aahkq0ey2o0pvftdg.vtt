WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 8a086d46-d619-4b8d-82de-6215110afda0
Created: 2025-04-29T13:06:15.021Z
Duration: 4339.3516
Channels: 1

00:01:48.245 --> 00:01:51.285
<v Speaker 0>Hello, and welcome back to the Rawkode Academy.

00:01:51.285 --> 00:01:52.965
<v Speaker 0>I'm your host, David Flanagan.

00:01:52.965 --> 00:01:54.885
<v Speaker 0>And today, we are back for another episode

00:01:54.885 --> 00:01:56.725
<v Speaker 0>of Rawkode live where we take a look

00:01:56.725 --> 00:01:59.365
<v Speaker 0>at technology and the cloud native in Kubernetes

00:01:59.365 --> 00:02:02.910
<v Speaker 0>space joined by their creators for the creators,

00:02:03.310 --> 00:02:04.670
<v Speaker 0>founders, maintainers

00:02:04.830 --> 00:02:06.510
<v Speaker 0>to give us that inside look to what

00:02:06.510 --> 00:02:08.430
<v Speaker 0>the project does, the problem it solves, and

00:02:08.430 --> 00:02:09.710
<v Speaker 0>how cool it is.

00:02:10.110 --> 00:02:11.790
<v Speaker 0>Today, we're taking a look at a project

00:02:11.790 --> 00:02:13.070
<v Speaker 0>called Sveltos,

00:02:13.215 --> 00:02:15.855
<v Speaker 0>and I am joined by Jan Luka. Hello,

00:02:15.855 --> 00:02:16.895
<v Speaker 0>Adam. Welcome.

00:02:17.694 --> 00:02:20.334
<v Speaker 1>Hello, and thanks for having me here. I'm

00:02:20.334 --> 00:02:22.735
<v Speaker 1>Jan Luka. I'm a principal

00:02:22.894 --> 00:02:26.015
<v Speaker 1>engineer at Cisco. I mostly work on distributed

00:02:26.015 --> 00:02:26.815
<v Speaker 1>systems.

00:02:27.055 --> 00:02:28.730
<v Speaker 1>And on the side, like, I'm working, like,

00:02:28.730 --> 00:02:29.210
<v Speaker 1>for

00:02:29.930 --> 00:02:32.010
<v Speaker 1>many months now, over a year, like, on

00:02:32.010 --> 00:02:34.330
<v Speaker 1>projects Sveltos, which is what we cover today.

00:02:34.650 --> 00:02:35.370
<v Speaker 1>Thank you.

00:02:35.930 --> 00:02:38.090
<v Speaker 0>Awesome. Well, I'm looking forward to learning more

00:02:38.090 --> 00:02:40.785
<v Speaker 0>all about it. So you said you're a

00:02:40.785 --> 00:02:43.745
<v Speaker 0>principal engineer at Cisco. Have you been working

00:02:43.745 --> 00:02:45.825
<v Speaker 0>with Kubernetes for for long now?

00:02:47.745 --> 00:02:48.945
<v Speaker 1>Yes. I

00:02:49.345 --> 00:02:51.425
<v Speaker 1>worked at I started working Kubernetes when I

00:02:51.425 --> 00:02:53.745
<v Speaker 1>joined together. I was there for over a

00:02:53.745 --> 00:02:57.390
<v Speaker 1>year on the enterprise version of project Calico.

00:02:57.470 --> 00:02:58.590
<v Speaker 1>Ah. And then

00:02:59.230 --> 00:02:59.870
<v Speaker 1>I went

00:03:00.510 --> 00:03:02.270
<v Speaker 1>I was at Cisco, went to together, and

00:03:02.270 --> 00:03:04.270
<v Speaker 1>then went back to Cisco because they start,

00:03:04.270 --> 00:03:07.790
<v Speaker 1>like, an Kubernetes project at Cisco, and I

00:03:07.790 --> 00:03:09.069
<v Speaker 1>want to work on it. And,

00:03:09.915 --> 00:03:11.755
<v Speaker 1>yes, so now I'm back there.

00:03:12.555 --> 00:03:13.755
<v Speaker 0>Yeah. Very cool.

00:03:14.315 --> 00:03:16.795
<v Speaker 0>Well, maybe you could kinda give us the

00:03:16.795 --> 00:03:18.075
<v Speaker 0>the TLDR.

00:03:18.075 --> 00:03:20.075
<v Speaker 0>What what is Project Sveltos?

00:03:21.195 --> 00:03:23.355
<v Speaker 1>It's a project to

00:03:24.050 --> 00:03:25.730
<v Speaker 1>dynamically manage

00:03:25.730 --> 00:03:29.250
<v Speaker 1>add ons on a fleet of Kubernetes clusters.

00:03:29.570 --> 00:03:30.530
<v Speaker 1>And the

00:03:30.770 --> 00:03:33.330
<v Speaker 1>final goal will be that it's a pure

00:03:33.330 --> 00:03:37.090
<v Speaker 1>intent base. So you can express easily what

00:03:37.090 --> 00:03:39.935
<v Speaker 1>you want, what type of allowance you want,

00:03:40.095 --> 00:03:41.455
<v Speaker 1>given, like, the

00:03:41.855 --> 00:03:43.775
<v Speaker 1>state of a cluster and a bunch of

00:03:43.775 --> 00:03:45.935
<v Speaker 1>other information and Sveltos

00:03:46.575 --> 00:03:48.335
<v Speaker 1>make it happen for you.

00:03:49.135 --> 00:03:51.375
<v Speaker 0>Okay. So I have a Kubernetes cluster.

00:03:52.015 --> 00:03:54.710
<v Speaker 0>I wanna stick something onto it. I have

00:03:54.710 --> 00:03:56.550
<v Speaker 0>more than one Kubernetes cluster

00:03:56.630 --> 00:03:59.510
<v Speaker 0>as Sveltos can handle that for us.

00:03:59.990 --> 00:04:01.830
<v Speaker 0>I mean, I'm assuming when you said fleet,

00:04:01.830 --> 00:04:04.230
<v Speaker 0>right, that word to me says scale. I

00:04:04.230 --> 00:04:07.614
<v Speaker 0>have dozens, hundreds, potentially thousands of clusters. But

00:04:07.614 --> 00:04:10.015
<v Speaker 0>does it scale down well for people that

00:04:10.015 --> 00:04:11.775
<v Speaker 0>want to experiment and play with it and

00:04:11.775 --> 00:04:14.415
<v Speaker 0>just run against one or or two clusters?

00:04:15.855 --> 00:04:18.175
<v Speaker 1>It should scale pretty well. Honestly, I haven't

00:04:18.175 --> 00:04:20.735
<v Speaker 1>tested, like, with thousands clusters. This will be,

00:04:20.735 --> 00:04:22.495
<v Speaker 1>like I don't know, like, too many clusters,

00:04:22.495 --> 00:04:22.735
<v Speaker 1>but

00:04:23.340 --> 00:04:25.580
<v Speaker 1>it's the design.

00:04:25.580 --> 00:04:27.819
<v Speaker 1>It's it's it's done in a way that

00:04:27.819 --> 00:04:28.780
<v Speaker 1>it should scale.

00:04:29.180 --> 00:04:31.819
<v Speaker 1>Now what the point where it's you know,

00:04:31.819 --> 00:04:34.939
<v Speaker 1>will start having problem scaling, I honestly haven't

00:04:34.939 --> 00:04:37.535
<v Speaker 1>hit that yet. But, yes, the idea is

00:04:37.535 --> 00:04:39.375
<v Speaker 1>that you have this management cluster.

00:04:39.615 --> 00:04:42.095
<v Speaker 1>And in this management cluster, you have, Sveltos

00:04:42.095 --> 00:04:42.735
<v Speaker 1>running.

00:04:43.134 --> 00:04:45.455
<v Speaker 1>And then you have a fleet of Kubernetes

00:04:45.455 --> 00:04:46.335
<v Speaker 1>clusters,

00:04:46.335 --> 00:04:47.615
<v Speaker 1>which are your managed clusters.

00:04:48.040 --> 00:04:50.360
<v Speaker 1>The only requirement for Sveltos is that there

00:04:50.360 --> 00:04:53.160
<v Speaker 1>is network connectivity to those managed clusters.

00:04:53.560 --> 00:04:55.640
<v Speaker 1>And and from around, pretty much, you can

00:04:55.640 --> 00:04:57.560
<v Speaker 1>say, like, this is those are the ones

00:04:57.560 --> 00:04:59.560
<v Speaker 1>that I want to deploy in those clusters,

00:04:59.560 --> 00:05:01.560
<v Speaker 1>and Sveltos can can do it for you.

00:05:02.955 --> 00:05:05.754
<v Speaker 1>It's a it's it has support for cluster

00:05:05.754 --> 00:05:06.475
<v Speaker 1>API.

00:05:06.955 --> 00:05:09.354
<v Speaker 1>Initially, pretty much, like, I was the project

00:05:09.354 --> 00:05:10.875
<v Speaker 1>we were working at Cisco,

00:05:11.754 --> 00:05:15.675
<v Speaker 1>it was using cluster API to create Kubernetes

00:05:15.675 --> 00:05:18.720
<v Speaker 1>clusters on on demand, on prem.

00:05:19.040 --> 00:05:21.520
<v Speaker 1>And and that's pretty much when I realized

00:05:21.520 --> 00:05:23.600
<v Speaker 1>that there was a need. At least I

00:05:23.600 --> 00:05:26.960
<v Speaker 1>felt a need to have management

00:05:26.960 --> 00:05:28.480
<v Speaker 1>for a fleet of clusters.

00:05:29.200 --> 00:05:30.560
<v Speaker 1>And I know that there are other solutions

00:05:30.560 --> 00:05:31.840
<v Speaker 1>there, but I

00:05:33.195 --> 00:05:35.275
<v Speaker 1>think, like, Sveltos is a little bit different

00:05:35.275 --> 00:05:37.675
<v Speaker 1>because, like, it's it's goal is to be,

00:05:37.675 --> 00:05:40.955
<v Speaker 1>like, pure intent based and very dynamic in

00:05:40.955 --> 00:05:42.155
<v Speaker 1>in what it does.

00:05:42.395 --> 00:05:44.315
<v Speaker 1>You know, it deploys, like, the phones and

00:05:44.315 --> 00:05:44.635
<v Speaker 1>everything.

00:05:45.510 --> 00:05:46.310
<v Speaker 0>Nice.

00:05:46.470 --> 00:05:47.910
<v Speaker 0>Yeah. I think this is a

00:05:48.390 --> 00:05:50.550
<v Speaker 0>common scenario in Kubernetes

00:05:50.550 --> 00:05:52.150
<v Speaker 0>land. You know, we have a lot of

00:05:52.150 --> 00:05:54.790
<v Speaker 0>choice. Right? There's there's individual problems, but there

00:05:54.790 --> 00:05:55.990
<v Speaker 0>are lots of tools that come at it

00:05:55.990 --> 00:05:57.990
<v Speaker 0>from a different way. And I think, you

00:05:57.835 --> 00:05:59.995
<v Speaker 0>know, there's no one right or wrong answer.

00:05:59.995 --> 00:06:01.835
<v Speaker 0>There's the one that applies for your use

00:06:01.835 --> 00:06:03.514
<v Speaker 0>case. And, like, the more choice we have

00:06:03.514 --> 00:06:05.034
<v Speaker 0>to make there, I think it's it's always

00:06:05.034 --> 00:06:06.715
<v Speaker 0>a good thing, you know, being able to

00:06:07.514 --> 00:06:09.675
<v Speaker 0>have a like minded solution to other people

00:06:09.675 --> 00:06:12.074
<v Speaker 0>and contribute and especially in open source. Right?

00:06:12.074 --> 00:06:14.770
<v Speaker 0>Like, it's just a great possession for us

00:06:14.770 --> 00:06:15.570
<v Speaker 0>all to be in.

00:06:15.970 --> 00:06:18.850
<v Speaker 1>Absolutely. Yeah. I mean, the cases are every

00:06:19.010 --> 00:06:21.010
<v Speaker 1>I feel that too much like it's everyone

00:06:21.010 --> 00:06:23.810
<v Speaker 1>has a slightly different use case. And so

00:06:24.130 --> 00:06:25.970
<v Speaker 1>there are, like, it's the more product that

00:06:25.970 --> 00:06:27.570
<v Speaker 1>are out there, the better it is because

00:06:27.570 --> 00:06:29.705
<v Speaker 1>there is definitely, like, it's gonna be one

00:06:29.705 --> 00:06:32.345
<v Speaker 1>which is closer to solve, everybody use case.

00:06:32.345 --> 00:06:33.945
<v Speaker 1>So it's good. Yeah.

00:06:34.345 --> 00:06:35.065
<v Speaker 1>Thanks.

00:06:35.385 --> 00:06:37.305
<v Speaker 0>So I believe you have some slides you

00:06:37.305 --> 00:06:38.905
<v Speaker 0>want to run through to give us a

00:06:38.905 --> 00:06:40.185
<v Speaker 0>bit more context and information.

00:06:40.879 --> 00:06:43.520
<v Speaker 1>Yes. Left some slides just to give, like,

00:06:43.599 --> 00:06:44.160
<v Speaker 1>a

00:06:44.720 --> 00:06:45.760
<v Speaker 1>context of

00:06:46.639 --> 00:06:49.039
<v Speaker 1>how Sveltos runs, and then we can go,

00:06:49.039 --> 00:06:51.039
<v Speaker 1>like, into a demo of of the light

00:06:51.039 --> 00:06:51.760
<v Speaker 1>demo.

00:06:52.240 --> 00:06:53.840
<v Speaker 0>We like demos. Yeah.

00:06:55.440 --> 00:06:56.159
<v Speaker 1>Perfect. Yeah.

00:06:57.175 --> 00:06:59.735
<v Speaker 1>Okay. So I'll share

00:06:59.735 --> 00:07:01.895
<v Speaker 1>some slides, and I go, like, in presentation

00:07:01.895 --> 00:07:02.615
<v Speaker 1>mode.

00:07:02.775 --> 00:07:03.335
<v Speaker 1>So

00:07:03.895 --> 00:07:06.615
<v Speaker 1>we know that once we create a Kubernetes

00:07:06.615 --> 00:07:09.655
<v Speaker 1>cluster, now that is just the beginning because

00:07:09.655 --> 00:07:12.210
<v Speaker 1>after that, we have at the end to

00:07:12.210 --> 00:07:12.930
<v Speaker 1>deploy

00:07:13.010 --> 00:07:14.850
<v Speaker 1>a bunch of add ons to have, like,

00:07:14.850 --> 00:07:17.890
<v Speaker 1>a production cluster or a cluster that fulfills,

00:07:17.890 --> 00:07:19.010
<v Speaker 1>like, our needs.

00:07:20.210 --> 00:07:22.210
<v Speaker 1>So what Sveltos does, the idea of Sveltos,

00:07:22.210 --> 00:07:24.575
<v Speaker 1>is that there is one management cluster. And

00:07:24.575 --> 00:07:27.135
<v Speaker 1>in this management cluster, Sveltos is running, and

00:07:27.135 --> 00:07:28.495
<v Speaker 1>there are a bunch of

00:07:29.295 --> 00:07:30.655
<v Speaker 1>managed clusters.

00:07:32.415 --> 00:07:34.735
<v Speaker 1>Some of the cluster can be cluster API,

00:07:34.735 --> 00:07:39.295
<v Speaker 1>power clusters. Sveltos, like, fully understand

00:07:38.450 --> 00:07:40.370
<v Speaker 1>cluster API concept.

00:07:41.090 --> 00:07:43.250
<v Speaker 1>And but any other cluster pretty much can

00:07:43.250 --> 00:07:44.850
<v Speaker 1>be managed by Sveltos. As long as there

00:07:44.850 --> 00:07:45.730
<v Speaker 1>is network

00:07:46.290 --> 00:07:48.930
<v Speaker 1>connectivity and Sveltos has a cube conflict to

00:07:48.930 --> 00:07:51.010
<v Speaker 1>us is like the managed cluster, that's all

00:07:51.010 --> 00:07:51.330
<v Speaker 1>it needs.

00:07:53.544 --> 00:07:57.705
<v Speaker 1>The main CRB that Sveltos uses, it's it's

00:07:57.705 --> 00:08:00.185
<v Speaker 1>called cluster profile, and it has, like, essentially

00:08:00.185 --> 00:08:01.305
<v Speaker 1>four fields.

00:08:01.705 --> 00:08:03.385
<v Speaker 1>The first field, which is the most important,

00:08:03.385 --> 00:08:05.065
<v Speaker 1>is the not the most important, which is

00:08:05.065 --> 00:08:06.345
<v Speaker 1>like it's the the first field is the

00:08:06.345 --> 00:08:08.370
<v Speaker 1>cluster selector. The cluster selector is just like

00:08:08.370 --> 00:08:10.370
<v Speaker 1>a Kubernetes label selector.

00:08:10.530 --> 00:08:11.810
<v Speaker 1>So we have

00:08:12.370 --> 00:08:13.890
<v Speaker 1>a fleet of clusters.

00:08:13.970 --> 00:08:15.490
<v Speaker 1>Each cluster says

00:08:15.889 --> 00:08:18.850
<v Speaker 1>set of labels. These cluster selectors, in this

00:08:18.850 --> 00:08:21.250
<v Speaker 1>case, is selecting all the clusters which

00:08:21.810 --> 00:08:22.770
<v Speaker 1>match this

00:08:23.465 --> 00:08:26.185
<v Speaker 1>label selector here. So any cluster which has

00:08:26.185 --> 00:08:28.105
<v Speaker 1>a label EMV

00:08:28.264 --> 00:08:30.585
<v Speaker 1>equals to a fig, which stands like for

00:08:30.585 --> 00:08:31.705
<v Speaker 1>functional verification.

00:08:32.025 --> 00:08:34.585
<v Speaker 1>Now those clusters, what Sveltos does, it gets

00:08:34.585 --> 00:08:36.664
<v Speaker 1>all those clusters here, and then it deploys

00:08:36.664 --> 00:08:38.530
<v Speaker 1>all the ones that are listed here. And

00:08:38.530 --> 00:08:40.450
<v Speaker 1>we have three different sections. There is an

00:08:40.450 --> 00:08:42.690
<v Speaker 1>L chart sections where there can be one

00:08:42.690 --> 00:08:45.250
<v Speaker 1>or more L charts. In this case, what

00:08:45.250 --> 00:08:46.130
<v Speaker 1>I'm asking,

00:08:46.770 --> 00:08:50.210
<v Speaker 1>like, Sveltos is to deploy Caverno version 2.6

00:08:50.210 --> 00:08:52.130
<v Speaker 1>in any cluster which is missing this cluster

00:08:52.130 --> 00:08:52.530
<v Speaker 1>selector.

00:08:53.115 --> 00:08:54.955
<v Speaker 1>There is another section which is

00:08:55.435 --> 00:08:58.635
<v Speaker 1>a customization section. Essentially, here, you can defer,

00:08:58.635 --> 00:09:00.235
<v Speaker 1>like, to one or more

00:09:00.715 --> 00:09:01.755
<v Speaker 1>directories

00:09:02.315 --> 00:09:03.755
<v Speaker 1>that contain

00:09:04.315 --> 00:09:05.515
<v Speaker 1>customization file,

00:09:05.949 --> 00:09:09.310
<v Speaker 1>and Sveltos uses, like, the customized pretty much

00:09:09.310 --> 00:09:12.910
<v Speaker 1>to take the YAML and deploy the YAML

00:09:12.910 --> 00:09:14.350
<v Speaker 1>in all the managed clusters.

00:09:14.509 --> 00:09:16.269
<v Speaker 1>And finally, there is another section which is

00:09:16.269 --> 00:09:19.230
<v Speaker 1>policy ref, which essentially is referencing

00:09:20.605 --> 00:09:22.845
<v Speaker 1>secrets and config map. And each one of

00:09:22.845 --> 00:09:25.005
<v Speaker 1>the secrets config map can contain one or

00:09:25.005 --> 00:09:27.805
<v Speaker 1>more Kubernetes resources that Sveltos is gonna deploy

00:09:27.805 --> 00:09:29.645
<v Speaker 1>in all the clusters that matches the clutch

00:09:29.725 --> 00:09:31.325
<v Speaker 1>the the cluster selector.

00:09:32.285 --> 00:09:34.285
<v Speaker 1>So here I have one example of a

00:09:34.285 --> 00:09:38.470
<v Speaker 1>config map that, contain in its data section

00:09:38.870 --> 00:09:39.590
<v Speaker 1>two,

00:09:39.830 --> 00:09:43.110
<v Speaker 1>Kubernetes resources, a gateway class and a gateway.

00:09:43.270 --> 00:09:46.550
<v Speaker 1>So, what Sveltos will do if a cluster

00:09:46.550 --> 00:09:48.785
<v Speaker 1>profile is referenced in this config map, it

00:09:48.785 --> 00:09:51.665
<v Speaker 1>will deploy this gateway class and the gateway

00:09:51.665 --> 00:09:54.145
<v Speaker 1>instance in any cluster that is matching the

00:09:54.145 --> 00:09:57.505
<v Speaker 1>cluster profile that is referencing this config map.

00:09:58.865 --> 00:10:01.025
<v Speaker 1>So this is pretty much the basic idea,

00:10:01.425 --> 00:10:03.425
<v Speaker 1>to have a single

00:10:05.360 --> 00:10:08.240
<v Speaker 1>one or more cluster profile where you dictate

00:10:08.240 --> 00:10:10.320
<v Speaker 1>what add ons needs to be deployed.

00:10:12.160 --> 00:10:14.480
<v Speaker 1>And this is just like a

00:10:16.800 --> 00:10:19.040
<v Speaker 1>slide that shows, like, how Sveltos we work.

00:10:19.545 --> 00:10:22.345
<v Speaker 1>So if I post a cluster profile in

00:10:22.345 --> 00:10:23.625
<v Speaker 1>the management cluster,

00:10:24.024 --> 00:10:26.265
<v Speaker 1>and this cluster profile is a cluster selector.

00:10:26.265 --> 00:10:28.265
<v Speaker 1>In this case, it just has, like, one

00:10:28.265 --> 00:10:29.545
<v Speaker 1>single chart.

00:10:29.705 --> 00:10:31.545
<v Speaker 1>And I do have, like, two managed clusters.

00:10:32.410 --> 00:10:34.410
<v Speaker 1>As soon as I add the label environment

00:10:34.410 --> 00:10:37.450
<v Speaker 1>production to this cluster, Sveltos will detect that

00:10:37.450 --> 00:10:39.050
<v Speaker 1>this cluster is not a match for this

00:10:39.050 --> 00:10:40.010
<v Speaker 1>cluster profile.

00:10:40.410 --> 00:10:42.010
<v Speaker 1>It will take all the add ons that

00:10:42.010 --> 00:10:44.010
<v Speaker 1>are listed in this cluster profile and deploy

00:10:44.010 --> 00:10:44.650
<v Speaker 1>those.

00:10:44.890 --> 00:10:45.530
<v Speaker 1>So

00:10:46.545 --> 00:10:48.225
<v Speaker 1>will be deployed in this cluster.

00:10:48.945 --> 00:10:49.585
<v Speaker 1>And

00:10:49.825 --> 00:10:52.305
<v Speaker 1>likewise, if I add the same environment production

00:10:52.305 --> 00:10:54.225
<v Speaker 1>label on the second managed cluster,

00:10:54.625 --> 00:10:57.345
<v Speaker 1>twice exactly the same. Sveltos will detect that

00:10:57.345 --> 00:10:59.185
<v Speaker 1>this cluster is not matched for this cluster

00:10:59.185 --> 00:11:01.340
<v Speaker 1>profile. It will take all the that are

00:11:01.340 --> 00:11:03.340
<v Speaker 1>listed in the cluster profile and will deploy

00:11:03.340 --> 00:11:03.900
<v Speaker 1>those.

00:11:05.420 --> 00:11:07.900
<v Speaker 1>So Sveltos can take care of deploying,

00:11:07.900 --> 00:11:08.780
<v Speaker 1>upgrading,

00:11:08.780 --> 00:11:10.620
<v Speaker 1>but it can also take care of removing

00:11:10.620 --> 00:11:12.860
<v Speaker 1>add ons. Because, for instance, if I remove

00:11:12.860 --> 00:11:13.180
<v Speaker 1>the

00:11:13.824 --> 00:11:16.865
<v Speaker 1>label environment production for this workload cluster,

00:11:17.345 --> 00:11:19.425
<v Speaker 1>this cluster is now not matching the cluster

00:11:19.425 --> 00:11:20.545
<v Speaker 1>profile anymore.

00:11:20.704 --> 00:11:23.264
<v Speaker 1>And so Sveltos, by default, is gonna remove

00:11:23.264 --> 00:11:25.185
<v Speaker 1>all the add ons that it has installed

00:11:25.185 --> 00:11:26.305
<v Speaker 1>because of this cluster here.

00:11:27.410 --> 00:11:29.250
<v Speaker 1>This is the default behavior. It's it is

00:11:29.250 --> 00:11:31.410
<v Speaker 1>configurable what Sveltos should do

00:11:31.890 --> 00:11:34.610
<v Speaker 1>when a cluster stop matching a cluster profile.

00:11:34.610 --> 00:11:36.850
<v Speaker 1>But the default behavior, it will withdraw all

00:11:36.850 --> 00:11:39.570
<v Speaker 1>the add ons that as Sveltos is deployed.

00:11:42.045 --> 00:11:45.005
<v Speaker 1>Now I follow you, like, on Twitter,

00:11:45.085 --> 00:11:45.565
<v Speaker 1>and

00:11:46.445 --> 00:11:48.365
<v Speaker 1>I think it was a week back.

00:11:49.085 --> 00:11:50.925
<v Speaker 1>There was a thread that you posted, and

00:11:50.925 --> 00:11:52.765
<v Speaker 1>I like the statement that you put it

00:11:52.765 --> 00:11:55.810
<v Speaker 1>there. That everything that your application needs, beyond

00:11:55.810 --> 00:11:58.129
<v Speaker 1>its own declarations should come from the environment

00:11:58.129 --> 00:11:59.170
<v Speaker 1>in cluster.

00:11:59.649 --> 00:12:00.290
<v Speaker 1>And

00:12:01.170 --> 00:12:03.410
<v Speaker 1>I liked it because this is actually what

00:12:03.410 --> 00:12:05.730
<v Speaker 1>is behind Sveltos' idea.

00:12:06.930 --> 00:12:08.129
<v Speaker 1>Because, for instance,

00:12:10.735 --> 00:12:13.535
<v Speaker 1>if I have to deploy Calico in all

00:12:13.535 --> 00:12:15.774
<v Speaker 1>the clusters which are matching

00:12:15.774 --> 00:12:16.495
<v Speaker 1>the

00:12:17.615 --> 00:12:20.975
<v Speaker 1>label, the cluster selector environment production. Now Calico

00:12:20.975 --> 00:12:23.615
<v Speaker 1>requires to be passed the port CIDR

00:12:25.390 --> 00:12:26.510
<v Speaker 1>to be deployed.

00:12:27.070 --> 00:12:27.790
<v Speaker 1>Now

00:12:28.270 --> 00:12:31.630
<v Speaker 1>I know that if the cluster it's a

00:12:31.630 --> 00:12:33.630
<v Speaker 1>cluster API type of cluster, there is a

00:12:33.630 --> 00:12:36.510
<v Speaker 1>cluster instance which represents the cluster in the

00:12:36.510 --> 00:12:37.310
<v Speaker 1>management cluster.

00:12:37.944 --> 00:12:40.904
<v Speaker 1>And that cluster instance has exactly this information

00:12:40.904 --> 00:12:42.425
<v Speaker 1>that Kalliko needs.

00:12:42.665 --> 00:12:45.464
<v Speaker 1>So what I'm telling here, Sveltos, is

00:12:46.745 --> 00:12:49.065
<v Speaker 1>anytime you find a cluster which is matching

00:12:49.065 --> 00:12:50.665
<v Speaker 1>this cluster selector here,

00:12:51.250 --> 00:12:53.250
<v Speaker 1>before you deploy Calico,

00:12:53.330 --> 00:12:55.970
<v Speaker 1>take the cluster instance in the management cluster,

00:12:55.970 --> 00:12:58.290
<v Speaker 1>which represents the cluster where you are about

00:12:58.290 --> 00:12:59.810
<v Speaker 1>to deploy Calico.

00:13:00.290 --> 00:13:02.050
<v Speaker 1>Take these hider blocks

00:13:02.050 --> 00:13:03.330
<v Speaker 1>from the,

00:13:03.650 --> 00:13:05.890
<v Speaker 1>cluster instance, which sits in the management cluster,

00:13:06.384 --> 00:13:08.625
<v Speaker 1>replace it here, instantiate

00:13:08.625 --> 00:13:11.264
<v Speaker 1>this value section, and now you can go

00:13:11.264 --> 00:13:13.105
<v Speaker 1>ahead and deploy Calico.

00:13:13.345 --> 00:13:14.065
<v Speaker 1>So

00:13:15.505 --> 00:13:16.945
<v Speaker 1>it is important that

00:13:17.665 --> 00:13:19.824
<v Speaker 1>sometimes the information that

00:13:19.950 --> 00:13:22.270
<v Speaker 1>you need when you are deploying add ons

00:13:22.270 --> 00:13:24.190
<v Speaker 1>in bunch of clusters

00:13:24.350 --> 00:13:26.990
<v Speaker 1>might be present in the management cluster, and

00:13:26.990 --> 00:13:29.870
<v Speaker 1>you might wanna fetch it at run time

00:13:30.030 --> 00:13:31.870
<v Speaker 1>and then pass it along to all the

00:13:31.870 --> 00:13:32.510
<v Speaker 1>managed clusters.

00:13:35.475 --> 00:13:38.515
<v Speaker 1>Another example, like, by default, like, Sveltos,

00:13:39.954 --> 00:13:40.835
<v Speaker 1>it's

00:13:40.995 --> 00:13:43.395
<v Speaker 1>fetches like, you can fetch, like, those

00:13:44.274 --> 00:13:45.795
<v Speaker 1>resources here from the

00:13:46.355 --> 00:13:48.755
<v Speaker 1>management cluster. But Sveltos is not limited to

00:13:48.755 --> 00:13:50.675
<v Speaker 1>that. Essentially, you can tell Sveltos to fetch

00:13:50.675 --> 00:13:53.210
<v Speaker 1>anything and use it. In this case, I'm

00:13:53.210 --> 00:13:56.970
<v Speaker 1>telling Sveltos to fetch a resource, a secret,

00:13:56.970 --> 00:13:59.290
<v Speaker 1>which is present in management cluster, which is

00:13:59.290 --> 00:14:01.290
<v Speaker 1>called which is in the default namespace. It's

00:14:01.290 --> 00:14:04.330
<v Speaker 1>called autoscaler. And I want Sveltos to represent

00:14:04.330 --> 00:14:07.825
<v Speaker 1>this resource with the autoscaler secret ID. And

00:14:07.825 --> 00:14:09.585
<v Speaker 1>so now this config map here

00:14:09.985 --> 00:14:12.065
<v Speaker 1>can actually use any

00:14:12.785 --> 00:14:14.785
<v Speaker 1>information which is present in this in this

00:14:14.785 --> 00:14:17.105
<v Speaker 1>secret. If you see, it's like Sveltos fetches

00:14:17.105 --> 00:14:19.265
<v Speaker 1>the secret, default autoscaler,

00:14:19.425 --> 00:14:19.745
<v Speaker 1>it

00:14:20.250 --> 00:14:22.410
<v Speaker 1>names it autoscaler secret. And now if I

00:14:22.410 --> 00:14:24.730
<v Speaker 1>look at the config map, the config map,

00:14:24.730 --> 00:14:26.970
<v Speaker 1>it's actually pretty much using the autoscaler secret

00:14:26.970 --> 00:14:29.450
<v Speaker 1>and seems like, I wanna take the namespace

00:14:29.450 --> 00:14:31.130
<v Speaker 1>of the secret, and I wanna take the

00:14:31.130 --> 00:14:32.890
<v Speaker 1>data token of the secrets, and I wanna

00:14:32.890 --> 00:14:34.010
<v Speaker 1>take the data section

00:14:35.285 --> 00:14:38.085
<v Speaker 1>CA CRT of the secret. In this case,

00:14:38.085 --> 00:14:40.165
<v Speaker 1>pretty much the secrets contains

00:14:40.325 --> 00:14:42.245
<v Speaker 1>a certificate and a token, and I wanna

00:14:42.245 --> 00:14:44.245
<v Speaker 1>pass it, like, to the managed cluster because

00:14:44.245 --> 00:14:46.085
<v Speaker 1>I wanna create a sequence in the managed

00:14:46.085 --> 00:14:48.725
<v Speaker 1>cluster which contains this information. So it's very

00:14:48.725 --> 00:14:49.285
<v Speaker 1>dynamic

00:14:49.690 --> 00:14:52.330
<v Speaker 1>because that too much, like, it's it's it's

00:14:52.330 --> 00:14:53.850
<v Speaker 1>the main goal one of the main goal

00:14:53.850 --> 00:14:54.730
<v Speaker 1>of Sveltos.

00:14:56.570 --> 00:14:58.970
<v Speaker 1>The other features that I'm gonna demo,

00:14:59.370 --> 00:15:00.090
<v Speaker 1>it's

00:15:00.890 --> 00:15:02.410
<v Speaker 1>it's what I'm gonna cover, like, here in

00:15:02.410 --> 00:15:04.775
<v Speaker 1>the next two slides. Essentially, so far, what

00:15:04.775 --> 00:15:06.855
<v Speaker 1>we have said is that the

00:15:08.455 --> 00:15:11.495
<v Speaker 1>platform admin in the management cluster is the

00:15:11.495 --> 00:15:14.215
<v Speaker 1>one that is in charge of adding labels

00:15:14.215 --> 00:15:15.575
<v Speaker 1>to the managed clusters.

00:15:15.655 --> 00:15:17.610
<v Speaker 1>But, ideally, I don't wanna do that. For

00:15:17.610 --> 00:15:19.770
<v Speaker 1>instance, if I have two different admins, right,

00:15:19.770 --> 00:15:21.370
<v Speaker 1>I might have one admin which is in

00:15:21.370 --> 00:15:24.490
<v Speaker 1>charge of deciding which is the Kubernetes version

00:15:24.490 --> 00:15:26.170
<v Speaker 1>in each of the managed clusters.

00:15:26.490 --> 00:15:28.170
<v Speaker 1>And I might have a different admin which

00:15:28.170 --> 00:15:30.410
<v Speaker 1>might be in charge of deciding which add

00:15:30.410 --> 00:15:31.770
<v Speaker 1>ons needs to be deployed.

00:15:32.010 --> 00:15:34.625
<v Speaker 1>Now I wanna I don't want to require

00:15:34.625 --> 00:15:36.625
<v Speaker 1>those two admins to talk to each other.

00:15:36.625 --> 00:15:38.625
<v Speaker 1>So if I need to upgrade the cluster,

00:15:38.625 --> 00:15:39.665
<v Speaker 1>I don't have to go to the add

00:15:39.665 --> 00:15:40.865
<v Speaker 1>on admin and say,

00:15:41.264 --> 00:15:42.704
<v Speaker 1>is there any action that you have to

00:15:42.704 --> 00:15:44.704
<v Speaker 1>take care before I upgrade the cluster or

00:15:44.704 --> 00:15:45.825
<v Speaker 1>after I upgrade the

00:15:46.225 --> 00:15:47.970
<v Speaker 1>cluster? I want that to be, like,

00:15:48.930 --> 00:15:50.930
<v Speaker 1>taken care of by Sveltos. And so there

00:15:50.930 --> 00:15:52.850
<v Speaker 1>is a second concept that Sveltos has, which

00:15:52.850 --> 00:15:55.730
<v Speaker 1>is called classifier. Essentially, classifier is capable of

00:15:55.730 --> 00:15:57.810
<v Speaker 1>classifying a cluster based on its run time

00:15:57.810 --> 00:15:58.050
<v Speaker 1>state.

00:15:59.285 --> 00:16:01.205
<v Speaker 1>What I'm doing, like, in this example here,

00:16:01.205 --> 00:16:03.125
<v Speaker 1>I have a classifier which is saying, if

00:16:03.125 --> 00:16:04.964
<v Speaker 1>you find any cluster which is running a

00:16:04.964 --> 00:16:06.645
<v Speaker 1>Kubernetes version, is

00:16:07.925 --> 00:16:11.125
<v Speaker 1>greater than or equal to one twenty four,

00:16:11.125 --> 00:16:12.805
<v Speaker 1>but strictly less than one twenty five,

00:16:13.509 --> 00:16:15.430
<v Speaker 1>does this cluster here is a match for

00:16:15.430 --> 00:16:17.350
<v Speaker 1>this classifier, and I want you to add

00:16:17.350 --> 00:16:19.910
<v Speaker 1>automatically this label to the cluster gatekeeper v

00:16:19.910 --> 00:16:22.310
<v Speaker 1>three nine. Now if I can if I

00:16:22.310 --> 00:16:24.870
<v Speaker 1>pair this classifier with a cluster profile, which

00:16:24.870 --> 00:16:26.870
<v Speaker 1>is saying take any cluster which has this

00:16:26.870 --> 00:16:29.485
<v Speaker 1>label here gatekeeper with nine, and deploy those

00:16:29.485 --> 00:16:30.285
<v Speaker 1>add ons.

00:16:30.605 --> 00:16:32.125
<v Speaker 1>Now there is nothing else I have to

00:16:32.125 --> 00:16:34.125
<v Speaker 1>do because what happens is that as soon

00:16:34.125 --> 00:16:35.405
<v Speaker 1>as I post those two objects to the

00:16:35.405 --> 00:16:36.525
<v Speaker 1>management cluster,

00:16:37.005 --> 00:16:39.405
<v Speaker 1>Sveltos is gonna deploy an agent in each

00:16:39.405 --> 00:16:40.285
<v Speaker 1>of the managed cluster.

00:16:40.820 --> 00:16:42.900
<v Speaker 1>These agents here is gonna detect that those

00:16:42.900 --> 00:16:44.820
<v Speaker 1>two clusters are both match

00:16:44.900 --> 00:16:47.460
<v Speaker 1>and match for this classifier.

00:16:48.100 --> 00:16:49.940
<v Speaker 1>Because they are a match for this classifier,

00:16:49.940 --> 00:16:52.580
<v Speaker 1>Sveltos is gonna add the labels that he

00:16:52.580 --> 00:16:54.340
<v Speaker 1>has been instructed to add 20 cluster that

00:16:54.340 --> 00:16:57.084
<v Speaker 1>match this classifier. So now those labels, gatekeeper

00:16:57.084 --> 00:16:59.245
<v Speaker 1>59, are gonna be added to both clusters.

00:16:59.644 --> 00:17:02.045
<v Speaker 1>Because those clusters have this label here, now

00:17:02.045 --> 00:17:04.125
<v Speaker 1>they are a match for this cluster profile.

00:17:04.285 --> 00:17:05.565
<v Speaker 1>And because they are a match for this

00:17:05.565 --> 00:17:08.125
<v Speaker 1>cluster profile, gatekeeper gets deployed in all those

00:17:08.204 --> 00:17:09.885
<v Speaker 1>in both clusters automatically.

00:17:11.550 --> 00:17:13.869
<v Speaker 1>Now let's say that I am the

00:17:15.150 --> 00:17:15.710
<v Speaker 1>I

00:17:16.190 --> 00:17:18.430
<v Speaker 1>don't admin. And what I know is that

00:17:18.910 --> 00:17:20.270
<v Speaker 1>I'm fine with gate gate

00:17:21.070 --> 00:17:22.510
<v Speaker 1>gatekeeper 390

00:17:22.510 --> 00:17:24.430
<v Speaker 1>if the cluster is less than one twenty

00:17:24.430 --> 00:17:27.525
<v Speaker 1>five. But if the cluster, it's, upgraded to

00:17:27.525 --> 00:17:31.045
<v Speaker 1>one twenty five or higher, I want, gatekeeper

00:17:31.045 --> 00:17:33.605
<v Speaker 1>b three ten. So I can express my

00:17:33.605 --> 00:17:36.485
<v Speaker 1>intent simply creating another pair of classifier classifier.

00:17:37.250 --> 00:17:39.330
<v Speaker 1>I'm creating classifier that says, like, if there

00:17:39.330 --> 00:17:41.410
<v Speaker 1>is any cluster which is matching

00:17:42.450 --> 00:17:43.250
<v Speaker 1>which is

00:17:44.210 --> 00:17:45.650
<v Speaker 1>running a Kubernetes

00:17:46.290 --> 00:17:48.610
<v Speaker 1>version better or equal than one twenty five,

00:17:48.690 --> 00:17:50.770
<v Speaker 1>now I want the label gatekeeper b three

00:17:50.770 --> 00:17:51.970
<v Speaker 1>ten added to the cluster.

00:17:52.735 --> 00:17:54.654
<v Speaker 1>And then I say that, if there is

00:17:54.654 --> 00:17:56.815
<v Speaker 1>any cluster with gatekeeper v three ten, I

00:17:56.815 --> 00:17:57.855
<v Speaker 1>want gatekeeper

00:17:57.855 --> 00:18:00.734
<v Speaker 1>n chart three ten zero to be deployed.

00:18:00.975 --> 00:18:03.294
<v Speaker 1>So now let's look at this cluster here.

00:18:03.294 --> 00:18:04.575
<v Speaker 1>It's running 124.

00:18:05.080 --> 00:18:07.560
<v Speaker 1>I post select this pair of classifier and

00:18:07.560 --> 00:18:09.480
<v Speaker 1>cluster profile to the management cluster.

00:18:09.640 --> 00:18:11.480
<v Speaker 1>I upgrade the cluster to

00:18:11.800 --> 00:18:13.080
<v Speaker 1>125.

00:18:13.160 --> 00:18:15.080
<v Speaker 1>So now because the cluster has been upgraded

00:18:15.080 --> 00:18:16.440
<v Speaker 1>to 1252,

00:18:17.000 --> 00:18:19.640
<v Speaker 1>this cluster stop being a match for the

00:18:19.640 --> 00:18:20.680
<v Speaker 1>previous classifier

00:18:20.865 --> 00:18:23.105
<v Speaker 1>and becomes a match for the new classifier.

00:18:23.505 --> 00:18:24.865
<v Speaker 1>And because it becomes a match for the

00:18:24.865 --> 00:18:25.825
<v Speaker 1>new classifier,

00:18:25.905 --> 00:18:26.545
<v Speaker 1>the gatekeeper

00:18:26.865 --> 00:18:28.544
<v Speaker 1>the the label is gonna be updated

00:18:28.865 --> 00:18:30.705
<v Speaker 1>because the label is supposed to be gatekeeper

00:18:30.705 --> 00:18:33.745
<v Speaker 1>v 310. So Sveltos update update the labels

00:18:33.745 --> 00:18:35.909
<v Speaker 1>on this cluster only. The other cluster is

00:18:35.909 --> 00:18:37.429
<v Speaker 1>still matching your classifier.

00:18:37.669 --> 00:18:39.350
<v Speaker 1>Because the label on this cluster has been

00:18:39.350 --> 00:18:40.070
<v Speaker 1>updated,

00:18:40.230 --> 00:18:42.230
<v Speaker 1>this cluster becomes a match for this cluster

00:18:42.230 --> 00:18:45.830
<v Speaker 1>profile and automatically gatekeeper and chart gets upgraded

00:18:46.470 --> 00:18:48.309
<v Speaker 1>to three times zero by Sveltos.

00:18:49.755 --> 00:18:52.155
<v Speaker 1>So those are the two main features that

00:18:52.155 --> 00:18:53.995
<v Speaker 1>I'm

00:18:53.995 --> 00:18:56.475
<v Speaker 1>gonna demo today. Sveltos is like more of

00:18:56.475 --> 00:18:58.635
<v Speaker 1>those features here and did the final goal

00:18:58.635 --> 00:19:00.715
<v Speaker 1>of Sveltos, it's intent based. So it has

00:19:00.715 --> 00:19:03.190
<v Speaker 1>an event driven mechanism where it can detects

00:19:03.190 --> 00:19:05.669
<v Speaker 1>events and deploy a don't see response of

00:19:05.669 --> 00:19:06.629
<v Speaker 1>events as well.

00:19:07.909 --> 00:19:08.469
<v Speaker 1>Me

00:19:10.470 --> 00:19:11.110
<v Speaker 1>exit the

00:19:12.389 --> 00:19:13.909
<v Speaker 1>so I'm done with the slide.

00:19:14.230 --> 00:19:16.095
<v Speaker 1>Don't know if there are questions or if

00:19:16.095 --> 00:19:18.015
<v Speaker 1>you wanna make me to jump on the

00:19:18.015 --> 00:19:20.255
<v Speaker 1>demo. I can go, like, on the demo

00:19:20.255 --> 00:19:20.975
<v Speaker 1>twice.

00:19:21.855 --> 00:19:22.495
<v Speaker 0>Yeah.

00:19:23.775 --> 00:19:26.255
<v Speaker 0>Like, this really resonates

00:19:26.255 --> 00:19:28.415
<v Speaker 0>with me about the way I want my

00:19:28.415 --> 00:19:31.080
<v Speaker 0>GitOps pipelines to work. I love that you

00:19:31.080 --> 00:19:33.240
<v Speaker 0>can pull out arbitrary resources within the target

00:19:33.240 --> 00:19:35.160
<v Speaker 0>cluster and use them as part of the

00:19:35.160 --> 00:19:36.600
<v Speaker 0>templating across

00:19:37.000 --> 00:19:38.600
<v Speaker 0>the application delivery.

00:19:38.840 --> 00:19:41.559
<v Speaker 0>Like, we've had, you know, we're all we're

00:19:41.640 --> 00:19:43.640
<v Speaker 0>typically, we're all developers. Right? We've been writing

00:19:43.640 --> 00:19:45.455
<v Speaker 0>code for, say, five years, ten years, twenty

00:19:45.455 --> 00:19:47.135
<v Speaker 0>years, however long you've been writing code. We

00:19:47.135 --> 00:19:48.655
<v Speaker 0>learn all these best practices.

00:19:48.895 --> 00:19:50.255
<v Speaker 0>And I felt that every time we were

00:19:50.255 --> 00:19:51.695
<v Speaker 0>adopted get ups, we were thrown all of

00:19:51.695 --> 00:19:53.535
<v Speaker 0>that away. Like, you know, the fact that

00:19:53.535 --> 00:19:55.775
<v Speaker 0>we have CICD pipelines with baked in hard

00:19:55.775 --> 00:19:57.855
<v Speaker 0>coded environments like dev and staging and prod

00:19:58.190 --> 00:19:59.150
<v Speaker 0>infuriates

00:19:59.150 --> 00:20:00.990
<v Speaker 0>me and they're doing it because they need

00:20:00.990 --> 00:20:03.150
<v Speaker 0>to inject ingress host names and all this

00:20:03.150 --> 00:20:04.269
<v Speaker 0>other fluff.

00:20:04.670 --> 00:20:06.750
<v Speaker 0>But the cluster can provide that and like

00:20:06.750 --> 00:20:08.590
<v Speaker 0>I'm sitting here but where has Sveltos been

00:20:08.590 --> 00:20:10.350
<v Speaker 0>my entire life? Like I need this tool

00:20:10.665 --> 00:20:12.025
<v Speaker 0>and magically

00:20:12.025 --> 00:20:13.785
<v Speaker 0>your demo on it today. So I'm really

00:20:13.785 --> 00:20:15.785
<v Speaker 0>excited. I think this is a really great

00:20:15.785 --> 00:20:18.025
<v Speaker 0>addition and the way the

00:20:18.425 --> 00:20:21.465
<v Speaker 0>the classifiers are working as well on top

00:20:21.465 --> 00:20:23.990
<v Speaker 0>of that as a kind of you know,

00:20:23.990 --> 00:20:25.109
<v Speaker 0>that ad hoc

00:20:25.429 --> 00:20:27.590
<v Speaker 0>way like as my cluster evolves like we're

00:20:27.590 --> 00:20:29.269
<v Speaker 0>always oh, no. Alright.

00:20:29.590 --> 00:20:31.509
<v Speaker 0>Most people that I have spoken to are

00:20:31.509 --> 00:20:34.549
<v Speaker 0>using managed Kubernetes clusters. Right? They're not using

00:20:35.655 --> 00:20:38.055
<v Speaker 0>infrastructure as code as strictly as we used

00:20:38.055 --> 00:20:39.895
<v Speaker 0>to kind of encourage ten years ago. Right?

00:20:39.895 --> 00:20:42.855
<v Speaker 0>Because JKE, EKS, AKS, they will manage the

00:20:42.855 --> 00:20:44.215
<v Speaker 0>upgrade for us. Like, we don't even store

00:20:44.215 --> 00:20:45.975
<v Speaker 0>the versions on our IAC anymore.

00:20:46.215 --> 00:20:48.375
<v Speaker 0>And as these things are changing dynamically behind

00:20:48.375 --> 00:20:50.215
<v Speaker 0>the scenes, our IAC doesn't really know how

00:20:50.215 --> 00:20:51.550
<v Speaker 0>to react to that or do anything with

00:20:51.550 --> 00:20:52.990
<v Speaker 0>that. And there are get ups pipelines don't

00:20:52.990 --> 00:20:54.750
<v Speaker 0>have any awareness of that either.

00:20:55.070 --> 00:20:56.910
<v Speaker 0>And this kind of bridges that gap as

00:20:56.910 --> 00:20:57.390
<v Speaker 0>well.

00:20:58.190 --> 00:21:01.070
<v Speaker 0>Guess the question I have Yeah. Right? Because

00:21:01.070 --> 00:21:02.750
<v Speaker 0>I'm excited though and I'm like, I wanna

00:21:02.750 --> 00:21:04.350
<v Speaker 0>use this, but I don't have a fleet

00:21:04.350 --> 00:21:04.990
<v Speaker 0>of clusters.

00:21:05.565 --> 00:21:07.885
<v Speaker 0>Can I run Sveltos and the cluster that

00:21:07.885 --> 00:21:08.684
<v Speaker 0>it manages?

00:21:11.164 --> 00:21:11.804
<v Speaker 1>So

00:21:12.284 --> 00:21:12.764
<v Speaker 1>it's

00:21:13.644 --> 00:21:16.445
<v Speaker 1>for few things, it's the the real answer,

00:21:16.445 --> 00:21:18.284
<v Speaker 1>it's I will say it's no because it's

00:21:18.284 --> 00:21:20.205
<v Speaker 1>limited in what you can do, like, in

00:21:20.205 --> 00:21:21.164
<v Speaker 1>the cluster itself.

00:21:23.140 --> 00:21:23.780
<v Speaker 1>But

00:21:24.420 --> 00:21:26.740
<v Speaker 1>it's actually a good point. Like, I've been

00:21:26.740 --> 00:21:29.460
<v Speaker 1>thinking about, like, whether, like, you should be

00:21:29.460 --> 00:21:32.100
<v Speaker 1>able to manage even the cluster where it's

00:21:32.100 --> 00:21:34.740
<v Speaker 1>running because, ideally, it's feasible. I mean, it's

00:21:34.740 --> 00:21:36.180
<v Speaker 1>all there. It's just a matter, like,

00:21:37.285 --> 00:21:40.165
<v Speaker 1>of running the agent in the management cluster

00:21:40.165 --> 00:21:40.884
<v Speaker 1>itself,

00:21:41.205 --> 00:21:43.365
<v Speaker 1>but I've not gone there yet.

00:21:44.165 --> 00:21:44.725
<v Speaker 1>So

00:21:45.045 --> 00:21:47.125
<v Speaker 0>Yeah. Think that might be something to happen

00:21:47.125 --> 00:21:50.020
<v Speaker 0>to tie on and experiment with because, yeah,

00:21:50.020 --> 00:21:51.059
<v Speaker 0>it could be cool.

00:21:51.300 --> 00:21:53.700
<v Speaker 0>Anyway, yeah, no questions right now. Just excitement

00:21:53.700 --> 00:21:55.700
<v Speaker 0>from my end. So happy to to see

00:21:55.700 --> 00:21:57.300
<v Speaker 0>the demo and see what we're playing with

00:21:57.300 --> 00:21:59.139
<v Speaker 0>here. Thank you. Thanks.

00:21:59.380 --> 00:22:02.340
<v Speaker 1>So what what I have here, it's I

00:22:02.340 --> 00:22:04.820
<v Speaker 1>have, like, I'm I'm running in the management

00:22:04.820 --> 00:22:05.300
<v Speaker 1>clusters.

00:22:05.915 --> 00:22:07.915
<v Speaker 1>And the only thing saved so far in

00:22:07.915 --> 00:22:09.514
<v Speaker 1>the management cluster, it's

00:22:09.915 --> 00:22:11.034
<v Speaker 1>cluster API.

00:22:11.355 --> 00:22:14.394
<v Speaker 1>So and I'm using Docker as infrastructure provider.

00:22:14.875 --> 00:22:17.114
<v Speaker 1>And I did create

00:22:17.755 --> 00:22:19.674
<v Speaker 1>one cluster API cluster,

00:22:20.290 --> 00:22:21.570
<v Speaker 1>which is called

00:22:21.890 --> 00:22:23.570
<v Speaker 1>cluster API workload.

00:22:26.130 --> 00:22:29.090
<v Speaker 1>But I haven't installed Sveltos yet. I will

00:22:29.090 --> 00:22:30.529
<v Speaker 1>follow pretty much the

00:22:31.730 --> 00:22:32.610
<v Speaker 1>Sveltos.

00:22:33.175 --> 00:22:35.015
<v Speaker 1>We'll go to the document and we'll follow

00:22:35.015 --> 00:22:36.935
<v Speaker 1>the document like to install Sveltos. And I

00:22:36.935 --> 00:22:38.534
<v Speaker 1>do also have, like, two

00:22:38.775 --> 00:22:40.375
<v Speaker 1>GK clusters,

00:22:40.455 --> 00:22:41.735
<v Speaker 1>which I did create,

00:22:41.895 --> 00:22:43.575
<v Speaker 1>which I'm gonna import

00:22:43.575 --> 00:22:45.495
<v Speaker 1>and let Sveltos also manage

00:22:46.750 --> 00:22:48.750
<v Speaker 1>GK clusters. So pretty much, like, I can

00:22:48.750 --> 00:22:51.549
<v Speaker 1>show that both cluster API, power clusters, or

00:22:51.549 --> 00:22:53.150
<v Speaker 1>any other type of cluster. In this case,

00:22:53.150 --> 00:22:54.669
<v Speaker 1>GK can be managed by

00:22:55.150 --> 00:22:56.190
<v Speaker 1>by Sveltos.

00:22:56.590 --> 00:22:57.869
<v Speaker 1>So

00:22:58.110 --> 00:22:58.749
<v Speaker 1>if

00:22:58.910 --> 00:23:00.030
<v Speaker 1>if I go to

00:23:01.205 --> 00:23:03.125
<v Speaker 1>this Sveltos installation,

00:23:04.005 --> 00:23:05.205
<v Speaker 1>it's simply

00:23:05.205 --> 00:23:08.725
<v Speaker 1>as deploying those to YAML. It has, like,

00:23:08.725 --> 00:23:12.164
<v Speaker 1>an end chart as well to deploy Sveltos,

00:23:12.245 --> 00:23:15.205
<v Speaker 1>but I'm gonna, like, follow, those to simply

00:23:15.205 --> 00:23:16.005
<v Speaker 1>pretty much, like,

00:23:16.690 --> 00:23:18.290
<v Speaker 1>deploy these

00:23:19.170 --> 00:23:21.410
<v Speaker 1>these YAML to the management cluster. So I'm

00:23:21.410 --> 00:23:23.170
<v Speaker 1>gonna apply the first YAML. The first YAML

00:23:23.170 --> 00:23:24.370
<v Speaker 1>pretty much contains

00:23:24.690 --> 00:23:27.650
<v Speaker 1>all the resources and everything that Sveltos needs.

00:23:28.050 --> 00:23:30.130
<v Speaker 1>I do not have permissions installed, that's why

00:23:30.130 --> 00:23:31.515
<v Speaker 1>pretty much, like, there is this error here

00:23:31.515 --> 00:23:33.355
<v Speaker 1>because that was pretty much like if

00:23:33.835 --> 00:23:35.275
<v Speaker 1>it has Could we be seeing some light

00:23:35.275 --> 00:23:37.034
<v Speaker 1>settings? I guess those are your slides.

00:23:38.075 --> 00:23:39.595
<v Speaker 1>Oh, you're still seeing this slide. Oh, I'm

00:23:39.595 --> 00:23:40.155
<v Speaker 1>sorry.

00:23:40.475 --> 00:23:42.635
<v Speaker 1>I think yeah. So, like, let me just

00:23:42.715 --> 00:23:44.955
<v Speaker 1>I think I was sharing the okay. Sorry.

00:23:45.035 --> 00:23:45.595
<v Speaker 0>That's okay.

00:23:47.710 --> 00:23:49.710
<v Speaker 1>So I'll go here. Okay. So pretty much

00:23:49.710 --> 00:23:51.870
<v Speaker 1>what let me see. Actually, I'll I'll share

00:23:51.870 --> 00:23:52.429
<v Speaker 1>the

00:23:52.990 --> 00:23:54.270
<v Speaker 1>the entire moment. That's why I don't like

00:23:54.270 --> 00:23:56.510
<v Speaker 1>to keep switching every time. I'll share the

00:23:56.510 --> 00:23:57.790
<v Speaker 1>entire screen. And

00:24:00.955 --> 00:24:02.395
<v Speaker 1>it doesn't allow me to share the entire

00:24:02.395 --> 00:24:04.955
<v Speaker 1>screen. So okay. So pretty much, I'll like

00:24:05.435 --> 00:24:07.275
<v Speaker 1>I'll have to share and stop and share

00:24:07.275 --> 00:24:09.275
<v Speaker 1>again. So what I did, I went to

00:24:09.275 --> 00:24:11.195
<v Speaker 1>the project Sveltos

00:24:11.275 --> 00:24:12.075
<v Speaker 1>documentation,

00:24:12.799 --> 00:24:13.360
<v Speaker 1>and

00:24:13.600 --> 00:24:15.919
<v Speaker 1>this is pretty much like the install section.

00:24:16.320 --> 00:24:17.679
<v Speaker 1>And this is how pretty much I can

00:24:17.679 --> 00:24:20.400
<v Speaker 1>install Sveltos in the management cluster. So it's

00:24:20.400 --> 00:24:21.999
<v Speaker 1>just posting those to YAML.

00:24:22.240 --> 00:24:22.879
<v Speaker 1>And

00:24:23.600 --> 00:24:24.720
<v Speaker 1>what I did

00:24:26.000 --> 00:24:27.919
<v Speaker 1>I'll share my monitor now.

00:24:29.405 --> 00:24:30.445
<v Speaker 1>You know? And

00:24:31.245 --> 00:24:32.684
<v Speaker 1>want I like to share anymore. So what

00:24:32.684 --> 00:24:34.924
<v Speaker 1>I did, like, this is my management cluster,

00:24:35.005 --> 00:24:36.285
<v Speaker 1>and I would say that what I have

00:24:36.285 --> 00:24:37.644
<v Speaker 1>in the management cluster,

00:24:37.804 --> 00:24:40.125
<v Speaker 1>I did now right now, like, installs Sveltos

00:24:40.125 --> 00:24:42.210
<v Speaker 1>as well. So you just like these Sveltos

00:24:42.210 --> 00:24:45.169
<v Speaker 1>components are running in the project Sveltos namespace.

00:24:45.490 --> 00:24:46.130
<v Speaker 1>And

00:24:46.290 --> 00:24:47.570
<v Speaker 1>I do have the,

00:24:47.890 --> 00:24:51.490
<v Speaker 1>cluster API, which are installed as well. And

00:24:51.490 --> 00:24:54.050
<v Speaker 1>the, Docker is the infrastructure provider.

00:24:54.495 --> 00:24:56.655
<v Speaker 1>And I do have a cluster which is

00:24:56.655 --> 00:24:58.174
<v Speaker 1>being provided using

00:25:00.655 --> 00:25:01.294
<v Speaker 1>just

00:25:02.095 --> 00:25:03.615
<v Speaker 1>move this a little bit higher so it

00:25:03.615 --> 00:25:04.575
<v Speaker 1>doesn't bother me.

00:25:05.135 --> 00:25:07.375
<v Speaker 1>And I do have one cluster which it's

00:25:07.375 --> 00:25:08.495
<v Speaker 1>been

00:25:09.259 --> 00:25:12.459
<v Speaker 1>created using cluster API and Docker's infrastructure provider.

00:25:12.860 --> 00:25:15.419
<v Speaker 1>And I did install pretty much like Sveltos,

00:25:15.419 --> 00:25:17.740
<v Speaker 1>and now I'm installing the default classifier, which

00:25:17.740 --> 00:25:19.499
<v Speaker 1>is just need to, like, to

00:25:20.220 --> 00:25:22.220
<v Speaker 1>make sure that the agent gets deployed in

00:25:22.220 --> 00:25:23.179
<v Speaker 1>all the managed clusters.

00:25:23.725 --> 00:25:24.364
<v Speaker 1>Now

00:25:24.605 --> 00:25:27.565
<v Speaker 1>what I do have here is that I

00:25:27.565 --> 00:25:29.644
<v Speaker 1>do have also two

00:25:31.965 --> 00:25:34.284
<v Speaker 1>two GKE clusters, and I do have the

00:25:34.284 --> 00:25:36.044
<v Speaker 1>cube config of those GKE clusters.

00:25:37.440 --> 00:25:38.159
<v Speaker 1>And

00:25:38.720 --> 00:25:40.080
<v Speaker 1>what I'm going to do,

00:25:40.960 --> 00:25:41.999
<v Speaker 1>I'm going to

00:25:42.240 --> 00:25:45.039
<v Speaker 1>register those two GKE clusters with

00:25:46.720 --> 00:25:49.040
<v Speaker 1>with Sveltos as well. So Sveltos can also

00:25:49.040 --> 00:25:51.845
<v Speaker 1>manage those GKE clusters as well. So I'll

00:25:51.845 --> 00:25:53.445
<v Speaker 1>go back to the management cluster,

00:25:53.845 --> 00:25:55.045
<v Speaker 1>and I'm

00:25:55.045 --> 00:25:57.685
<v Speaker 1>going to create a namespace, which I call

00:25:57.685 --> 00:25:58.565
<v Speaker 1>GKE.

00:25:59.285 --> 00:26:00.085
<v Speaker 1>And then

00:26:00.725 --> 00:26:02.725
<v Speaker 1>Sveltos comes with the CLI.

00:26:02.980 --> 00:26:04.980
<v Speaker 1>It's not required to use the CLI, but

00:26:04.980 --> 00:26:07.220
<v Speaker 1>it's very handy when you have to do,

00:26:07.220 --> 00:26:07.619
<v Speaker 1>like,

00:26:08.419 --> 00:26:10.100
<v Speaker 1>when you wanna see what the ones have

00:26:10.100 --> 00:26:11.860
<v Speaker 1>been deployed or when you want to register

00:26:11.860 --> 00:26:13.299
<v Speaker 1>a cluster with Sveltos.

00:26:13.460 --> 00:26:15.700
<v Speaker 1>So even to register a cluster with Sveltos,

00:26:15.700 --> 00:26:17.539
<v Speaker 1>the documentation is on the

00:26:18.865 --> 00:26:21.585
<v Speaker 1>project Sveltos. I can show where that it

00:26:21.585 --> 00:26:22.544
<v Speaker 1>is. This

00:26:23.105 --> 00:26:25.024
<v Speaker 1>is very annoying to type like this.

00:26:25.745 --> 00:26:27.664
<v Speaker 1>It doesn't allow me, unfortunately, to share the

00:26:27.664 --> 00:26:28.624
<v Speaker 1>entire screen

00:26:28.865 --> 00:26:29.585
<v Speaker 1>full screen.

00:26:30.970 --> 00:26:33.210
<v Speaker 1>So I have to go here. But if

00:26:33.210 --> 00:26:35.129
<v Speaker 1>I go back to this Sveltos documentation,

00:26:35.690 --> 00:26:37.850
<v Speaker 1>there is a section which explains

00:26:37.850 --> 00:26:40.409
<v Speaker 1>how to register a cluster with Sveltos.

00:26:40.649 --> 00:26:43.210
<v Speaker 1>And there is, like, an example. Essentially, it

00:26:43.210 --> 00:26:45.210
<v Speaker 1>all Sveltos requires is to

00:26:46.315 --> 00:26:48.475
<v Speaker 1>get the KubeConfig

00:26:48.955 --> 00:26:50.875
<v Speaker 1>to create a service account in the managed

00:26:50.875 --> 00:26:51.595
<v Speaker 1>cluster,

00:26:51.675 --> 00:26:54.715
<v Speaker 1>which allows Sveltos to deploy add ons and

00:26:54.715 --> 00:26:57.195
<v Speaker 1>push, like, create resource on the cluster.

00:26:57.355 --> 00:26:59.195
<v Speaker 1>And the commendation is just here. And for

00:26:59.195 --> 00:27:01.470
<v Speaker 1>GKE, there is pretty much like this script

00:27:01.470 --> 00:27:03.150
<v Speaker 1>that I put in there, which does pretty

00:27:03.150 --> 00:27:05.150
<v Speaker 1>much everything it takes to keep config from

00:27:05.150 --> 00:27:07.710
<v Speaker 1>from the cluster. Does that work for GKE

00:27:07.710 --> 00:27:10.110
<v Speaker 0>and EKS where they need, like, that second

00:27:10.110 --> 00:27:12.269
<v Speaker 0>factor, you know, like, the g cloud?

00:27:12.670 --> 00:27:14.990
<v Speaker 0>Does it need to get the service account,

00:27:15.150 --> 00:27:15.470
<v Speaker 0>I guess?

00:27:16.435 --> 00:27:19.715
<v Speaker 1>So it will work for any cluster which

00:27:19.715 --> 00:27:22.915
<v Speaker 1>allows you to get the KubeConfig

00:27:23.315 --> 00:27:24.035
<v Speaker 1>and

00:27:25.475 --> 00:27:27.715
<v Speaker 1>allows you to use that KubeConfig process the

00:27:27.715 --> 00:27:29.235
<v Speaker 1>cluster without requiring,

00:27:29.395 --> 00:27:29.795
<v Speaker 1>you know,

00:27:30.950 --> 00:27:31.750
<v Speaker 1>any

00:27:31.910 --> 00:27:32.629
<v Speaker 1>third

00:27:32.790 --> 00:27:33.590
<v Speaker 1>tool

00:27:34.470 --> 00:27:37.029
<v Speaker 1>installed pretty much to to us. Sometimes, like,

00:27:37.190 --> 00:27:38.149
<v Speaker 1>if you use,

00:27:38.710 --> 00:27:40.070
<v Speaker 1>I think, some of the

00:27:41.670 --> 00:27:43.350
<v Speaker 1>I forgot what it may be. Like but

00:27:43.350 --> 00:27:44.710
<v Speaker 1>let's say that you are creating, like, a

00:27:44.710 --> 00:27:45.750
<v Speaker 1>cluster which one

00:27:46.365 --> 00:27:49.485
<v Speaker 1>of the cloud providers, and they require you

00:27:49.485 --> 00:27:51.245
<v Speaker 1>to install their own CLI. So even after

00:27:51.245 --> 00:27:54.525
<v Speaker 1>you download, like, the KubeConfig, the KubeConfig internally,

00:27:54.525 --> 00:27:56.125
<v Speaker 1>it's calling the

00:27:56.925 --> 00:27:59.165
<v Speaker 1>this cloud provider CLI to to work. I

00:27:59.165 --> 00:28:01.005
<v Speaker 1>mean, in that case, pretty much, Sveltos won't

00:28:01.005 --> 00:28:03.130
<v Speaker 1>work. So Sveltos will work every time you

00:28:03.130 --> 00:28:04.570
<v Speaker 1>have, like, a cube config that you can

00:28:04.570 --> 00:28:06.330
<v Speaker 1>pass to Sveltos. Sveltos can load that cube

00:28:06.330 --> 00:28:08.090
<v Speaker 1>config and automatically pretty much can assist the

00:28:08.090 --> 00:28:08.730
<v Speaker 1>cluster

00:28:09.130 --> 00:28:10.490
<v Speaker 1>without requiring any.

00:28:11.450 --> 00:28:12.410
<v Speaker 0>Okay. Cool.

00:28:13.450 --> 00:28:15.770
<v Speaker 1>So I'll go back

00:28:16.250 --> 00:28:16.970
<v Speaker 1>to

00:28:17.225 --> 00:28:20.345
<v Speaker 1>I apologize for this switching back and forth.

00:28:20.345 --> 00:28:22.664
<v Speaker 0>Don't worry about it. All good.

00:28:23.625 --> 00:28:24.184
<v Speaker 1>So

00:28:24.505 --> 00:28:26.505
<v Speaker 1>as I was saying, like, Sveltos has a

00:28:26.505 --> 00:28:28.825
<v Speaker 1>CLI. So what I'm doing here is, like

00:28:30.850 --> 00:28:32.929
<v Speaker 1>sorry. It's a that

00:28:33.010 --> 00:28:35.249
<v Speaker 1>I'm gonna run the register cluster.

00:28:35.970 --> 00:28:36.529
<v Speaker 1>So

00:28:36.770 --> 00:28:39.090
<v Speaker 1>what I'm doing, it's I don't ever like

00:28:39.090 --> 00:28:42.049
<v Speaker 1>to pass this anymore because, like, mycubecom

00:28:42.130 --> 00:28:43.890
<v Speaker 1>my cube catalog is pointing directly to the

00:28:43.890 --> 00:28:45.570
<v Speaker 1>management cluster, I can get rid of this.

00:28:46.985 --> 00:28:50.265
<v Speaker 1>And Sveltos Kaddle is the CLI that comes

00:28:50.265 --> 00:28:51.224
<v Speaker 1>with Sveltos.

00:28:51.705 --> 00:28:54.664
<v Speaker 1>Again, it's not required. It's it's it's useful

00:28:54.664 --> 00:28:55.945
<v Speaker 1>to I find it useful. I use it

00:28:55.945 --> 00:28:57.784
<v Speaker 1>all the time. Clearly, I'm biased because I

00:28:57.784 --> 00:28:58.345
<v Speaker 1>developed it.

00:28:59.200 --> 00:29:01.280
<v Speaker 1>But what I'm saying what I'm asking Sveltos

00:29:01.280 --> 00:29:02.799
<v Speaker 1>is to register a cluster

00:29:03.040 --> 00:29:03.760
<v Speaker 1>and

00:29:04.560 --> 00:29:07.120
<v Speaker 1>create the instance that represents this cluster in

00:29:07.120 --> 00:29:09.040
<v Speaker 1>the GKE namespace,

00:29:09.360 --> 00:29:10.880
<v Speaker 1>call it cluster one.

00:29:11.280 --> 00:29:13.280
<v Speaker 1>And the KubeConfig,

00:29:13.280 --> 00:29:14.320
<v Speaker 1>it's

00:29:15.015 --> 00:29:17.895
<v Speaker 1>it's the KubeConfig that I store, which is

00:29:17.895 --> 00:29:18.534
<v Speaker 1>the

00:29:19.335 --> 00:29:19.815
<v Speaker 1>just

00:29:21.815 --> 00:29:23.174
<v Speaker 1>yeah. It's called

00:29:25.255 --> 00:29:26.934
<v Speaker 1>GKE cluster one.

00:29:27.335 --> 00:29:29.735
<v Speaker 1>So this is pretty much like

00:29:29.299 --> 00:29:31.540
<v Speaker 1>the cube config that I took from DGKE

00:29:31.540 --> 00:29:32.179
<v Speaker 1>cluster.

00:29:32.660 --> 00:29:35.059
<v Speaker 1>So right now, I'm creating this one, and

00:29:35.059 --> 00:29:36.340
<v Speaker 1>I'm gonna do the same for the other

00:29:36.340 --> 00:29:38.419
<v Speaker 1>cluster as well. So I'll call it cluster

00:29:38.419 --> 00:29:40.740
<v Speaker 1>two because pretty much it's how I

00:29:41.425 --> 00:29:42.784
<v Speaker 1>call, like, on on.

00:29:43.345 --> 00:29:44.945
<v Speaker 1>It's just like for simplicity.

00:29:45.025 --> 00:29:47.585
<v Speaker 1>And now if I can say that so

00:29:47.585 --> 00:29:49.105
<v Speaker 1>there is, again, there is one cluster, which

00:29:49.105 --> 00:29:50.865
<v Speaker 1>is cluster API provider

00:29:50.945 --> 00:29:51.424
<v Speaker 1>power,

00:29:52.065 --> 00:29:53.585
<v Speaker 1>but there is also two

00:29:54.785 --> 00:29:55.985
<v Speaker 1>Sveltos clusters.

00:29:56.700 --> 00:29:58.860
<v Speaker 1>Sveltos cluster pretty much like are using the

00:29:58.860 --> 00:30:01.099
<v Speaker 1>cube conflict that they just passed, like, to

00:30:04.299 --> 00:30:06.299
<v Speaker 1>manage those two g k clusters.

00:30:06.539 --> 00:30:09.820
<v Speaker 1>Now I have prepared, like, a few

00:30:10.380 --> 00:30:11.740
<v Speaker 1>I did prepare, like, one

00:30:12.815 --> 00:30:15.535
<v Speaker 1>few configurations that I wanna show. So there

00:30:15.535 --> 00:30:17.054
<v Speaker 1>is one cluster profile,

00:30:17.055 --> 00:30:19.135
<v Speaker 1>which this is a very basic one. So

00:30:19.135 --> 00:30:22.495
<v Speaker 1>what I'm doing, like, I'm asking Sveltos

00:30:22.495 --> 00:30:23.934
<v Speaker 1>to deploy

00:30:23.934 --> 00:30:25.134
<v Speaker 1>in

00:30:25.135 --> 00:30:27.215
<v Speaker 1>any cluster matching like this

00:30:27.830 --> 00:30:30.789
<v Speaker 1>cluster selector here, environment function verification,

00:30:30.950 --> 00:30:32.790
<v Speaker 1>and also to deploy the content of this

00:30:32.790 --> 00:30:33.669
<v Speaker 1>content map.

00:30:34.070 --> 00:30:35.510
<v Speaker 1>And what I'm gonna put, like, in this

00:30:35.510 --> 00:30:36.390
<v Speaker 1>content map,

00:30:36.630 --> 00:30:37.350
<v Speaker 1>it's

00:30:37.430 --> 00:30:39.590
<v Speaker 1>it's a Caverno policy. So I think I

00:30:39.590 --> 00:30:41.590
<v Speaker 1>download like this. I do have the Caverno

00:30:41.590 --> 00:30:44.714
<v Speaker 1>policy here. Just a Cavernoplastic policy which

00:30:45.034 --> 00:30:45.914
<v Speaker 1>prevents

00:30:46.315 --> 00:30:47.195
<v Speaker 1>any

00:30:47.195 --> 00:30:49.834
<v Speaker 1>image with the latest start to be deployed.

00:30:50.475 --> 00:30:52.715
<v Speaker 1>So what I'm gonna do, like, I'm gonna

00:30:52.715 --> 00:30:54.154
<v Speaker 1>create a

00:30:54.875 --> 00:30:55.674
<v Speaker 1>config map

00:30:56.320 --> 00:30:58.480
<v Speaker 1>with the content of this file here. So

00:30:58.480 --> 00:31:00.560
<v Speaker 1>I'm creating a config map into the following

00:31:00.560 --> 00:31:02.880
<v Speaker 1>space and then call it, cabernaletas,

00:31:02.880 --> 00:31:04.720
<v Speaker 1>and the content is coming from the file

00:31:04.720 --> 00:31:05.840
<v Speaker 1>that we just saw.

00:31:06.080 --> 00:31:07.760
<v Speaker 1>So if I'm gonna look at this config

00:31:07.760 --> 00:31:08.320
<v Speaker 1>map here,

00:31:14.715 --> 00:31:17.835
<v Speaker 1>Because essentially the in the data section, it

00:31:17.835 --> 00:31:19.595
<v Speaker 1>has the cluster policy here.

00:31:19.915 --> 00:31:22.475
<v Speaker 1>Now before I go and pause the cluster

00:31:22.475 --> 00:31:22.955
<v Speaker 1>profile,

00:31:23.280 --> 00:31:25.360
<v Speaker 1>if I look at the I want to

00:31:25.360 --> 00:31:27.760
<v Speaker 1>add, like, the proper label for the clusters.

00:31:28.000 --> 00:31:28.559
<v Speaker 1>So

00:31:28.800 --> 00:31:30.400
<v Speaker 1>I can start doing the, like, an edit

00:31:30.400 --> 00:31:31.120
<v Speaker 1>of the

00:31:31.520 --> 00:31:33.520
<v Speaker 1>cluster API, power cluster.

00:31:34.160 --> 00:31:34.720
<v Speaker 1>And

00:31:35.280 --> 00:31:37.440
<v Speaker 1>it has few labels, but this is the

00:31:37.440 --> 00:31:38.800
<v Speaker 1>label I'm gonna use, like, in the cluster

00:31:38.800 --> 00:31:42.375
<v Speaker 1>profile, environment function verification. So I'm adding this

00:31:42.375 --> 00:31:43.255
<v Speaker 1>label here,

00:31:43.655 --> 00:31:45.735
<v Speaker 1>and I'm gonna do the same for the

00:31:48.855 --> 00:31:51.895
<v Speaker 1>Bell plus clusters that I have. So it's

00:31:51.735 --> 00:31:53.815
<v Speaker 0>Yeah. Still looking at your terminal just as

00:31:53.815 --> 00:31:54.375
<v Speaker 0>a reminder.

00:31:56.850 --> 00:31:58.690
<v Speaker 1>Yes. Can can you see me editing? Like,

00:31:58.690 --> 00:32:00.930
<v Speaker 1>just to make sure that I'm showing sharing

00:32:00.930 --> 00:32:02.850
<v Speaker 1>the right record No. I I don't see

00:32:02.850 --> 00:32:05.250
<v Speaker 0>editing. We're still looking at the get Sveltos

00:32:05.250 --> 00:32:07.570
<v Speaker 0>cluster dash here. Okay.

00:32:07.810 --> 00:32:09.650
<v Speaker 1>This is a bummer. Sorry.

00:32:10.245 --> 00:32:11.365
<v Speaker 1>Stop sharing.

00:32:11.445 --> 00:32:11.924
<v Speaker 1>And

00:32:16.165 --> 00:32:18.164
<v Speaker 1>even if I switch tab,

00:32:18.885 --> 00:32:20.085
<v Speaker 1>I think so,

00:32:22.245 --> 00:32:24.520
<v Speaker 1>essentially, what I did, I

00:32:24.920 --> 00:32:26.360
<v Speaker 1>I add

00:32:26.760 --> 00:32:28.360
<v Speaker 1>I downloaded like this

00:32:29.320 --> 00:32:31.000
<v Speaker 1>cluster policy.

00:32:32.360 --> 00:32:34.200
<v Speaker 1>Can you see now the cluster policy? Yes.

00:32:34.200 --> 00:32:36.440
<v Speaker 0>I see it. Yeah. Okay. And then what

00:32:36.440 --> 00:32:37.800
<v Speaker 1>I did, I created

00:32:38.695 --> 00:32:39.095
<v Speaker 1>config

00:32:39.575 --> 00:32:42.855
<v Speaker 1>map that contains this cluster policy here. This

00:32:42.855 --> 00:32:44.535
<v Speaker 1>is like in the data section, it contains

00:32:44.535 --> 00:32:45.335
<v Speaker 1>the config map

00:32:46.215 --> 00:32:47.335
<v Speaker 1>cluster

00:32:47.415 --> 00:32:48.135
<v Speaker 1>policy.

00:32:48.455 --> 00:32:50.455
<v Speaker 1>And then the other things that I did,

00:32:50.535 --> 00:32:51.975
<v Speaker 1>I went to the

00:32:52.980 --> 00:32:55.139
<v Speaker 1>cluster which is created by

00:32:57.540 --> 00:32:59.139
<v Speaker 1>powered by cluster API,

00:32:59.460 --> 00:33:02.260
<v Speaker 1>and I added this label here, environment functional

00:33:02.260 --> 00:33:03.139
<v Speaker 1>verification.

00:33:04.100 --> 00:33:06.419
<v Speaker 1>Because I added this label because I'm gonna

00:33:06.419 --> 00:33:08.100
<v Speaker 1>use this label in the cluster profile.

00:33:09.505 --> 00:33:11.585
<v Speaker 1>So so far, I only have, like, this

00:33:11.585 --> 00:33:13.665
<v Speaker 1>label here. There is nothing else done. And

00:33:13.665 --> 00:33:16.785
<v Speaker 1>now I'm also going to do the same

00:33:16.785 --> 00:33:17.904
<v Speaker 1>for the two

00:33:19.185 --> 00:33:22.900
<v Speaker 1>Sveltos clusters that I created. So Sveltos clusters

00:33:22.900 --> 00:33:24.980
<v Speaker 1>in the g k namespace.

00:33:24.980 --> 00:33:27.140
<v Speaker 1>I think I called one cluster one.

00:33:27.860 --> 00:33:30.260
<v Speaker 1>And I'm going to add the same label

00:33:30.260 --> 00:33:31.620
<v Speaker 1>to this cluster here.

00:33:32.020 --> 00:33:34.420
<v Speaker 1>So environment is function verification.

00:33:35.335 --> 00:33:37.175
<v Speaker 1>And I'm gonna do the same for the

00:33:37.175 --> 00:33:38.135
<v Speaker 1>third cluster.

00:33:38.615 --> 00:33:39.255
<v Speaker 1>So

00:33:41.335 --> 00:33:43.655
<v Speaker 1>environment function verification. So at this point, all

00:33:43.655 --> 00:33:44.695
<v Speaker 1>the clusters

00:33:46.455 --> 00:33:47.575
<v Speaker 1>have this level here.

00:33:48.550 --> 00:33:52.230
<v Speaker 1>Now I do have this cluster profile here,

00:33:52.630 --> 00:33:53.190
<v Speaker 1>which

00:33:53.430 --> 00:33:55.590
<v Speaker 1>I haven't posted yet, but, essentially, what this

00:33:55.590 --> 00:33:57.670
<v Speaker 1>cluster is saying, it's it's cluster profile saying

00:33:57.670 --> 00:34:00.070
<v Speaker 1>it it's instructing Sveltos to

00:34:00.635 --> 00:34:01.275
<v Speaker 1>take

00:34:01.435 --> 00:34:03.435
<v Speaker 1>find all the clusters which have this level

00:34:03.435 --> 00:34:05.275
<v Speaker 1>here, environment functional verification,

00:34:06.075 --> 00:34:08.475
<v Speaker 1>and to deploy and

00:34:08.475 --> 00:34:09.195
<v Speaker 1>chart,

00:34:10.315 --> 00:34:13.275
<v Speaker 1>and to also deploy the content of this

00:34:13.275 --> 00:34:15.910
<v Speaker 1>config map here, which we saw it's it's

00:34:15.910 --> 00:34:17.910
<v Speaker 1>just like a cluster policy.

00:34:18.870 --> 00:34:19.430
<v Speaker 1>So

00:34:19.989 --> 00:34:21.750
<v Speaker 1>as soon as I post this cluster here,

00:34:21.750 --> 00:34:23.190
<v Speaker 1>just gonna show something else.

00:34:23.989 --> 00:34:26.070
<v Speaker 1>There is no cluster profile yet.

00:34:27.264 --> 00:34:29.745
<v Speaker 1>So I'm going to and there is no

00:34:31.264 --> 00:34:33.264
<v Speaker 1>cluster summary yet. I'm gonna show what this

00:34:33.264 --> 00:34:35.185
<v Speaker 1>cluster summary is. But so

00:34:36.304 --> 00:34:38.385
<v Speaker 1>I'm going to apply

00:34:38.465 --> 00:34:40.460
<v Speaker 1>the cluster policy.

00:34:40.460 --> 00:34:43.580
<v Speaker 1>So cluster because I profile with the.

00:34:44.619 --> 00:34:46.219
<v Speaker 1>As soon as I apply

00:34:46.300 --> 00:34:49.980
<v Speaker 1>this cluster profile here, what Sveltos does,

00:34:49.980 --> 00:34:52.460
<v Speaker 1>it's it figures out automatically that there are

00:34:52.460 --> 00:34:54.059
<v Speaker 1>three clusters which are bot matching.

00:34:55.114 --> 00:34:58.715
<v Speaker 1>And it creates a cluster summary for

00:34:58.795 --> 00:35:01.755
<v Speaker 1>every per cluster profile matching cluster. So I

00:35:01.755 --> 00:35:03.275
<v Speaker 1>have three clusters that which are matching this

00:35:03.275 --> 00:35:04.315
<v Speaker 1>cluster profile.

00:35:04.635 --> 00:35:07.115
<v Speaker 1>And so it creates, like, three cluster summary.

00:35:07.400 --> 00:35:09.640
<v Speaker 1>This allows Sveltos pretty much to know per

00:35:09.640 --> 00:35:11.240
<v Speaker 1>cluster what to do.

00:35:13.800 --> 00:35:16.680
<v Speaker 1>So if I go and I can use,

00:35:16.680 --> 00:35:19.560
<v Speaker 1>like, this Sveltos CLI at this point to

00:35:21.175 --> 00:35:24.375
<v Speaker 1>show the add ons. So I'm simply like

00:35:24.775 --> 00:35:26.695
<v Speaker 1>there's this Sveltos CLI.

00:35:26.695 --> 00:35:27.895
<v Speaker 1>It has a

00:35:28.055 --> 00:35:29.495
<v Speaker 1>bunch of commands.

00:35:29.815 --> 00:35:31.255
<v Speaker 1>I'm gonna show you, like, some of the

00:35:31.255 --> 00:35:31.975
<v Speaker 1>commands.

00:35:32.214 --> 00:35:34.055
<v Speaker 1>And one of the commands is add on.

00:35:34.940 --> 00:35:37.100
<v Speaker 1>And if I ask to

00:35:37.580 --> 00:35:39.900
<v Speaker 1>show me what the add ons are, it's

00:35:39.900 --> 00:35:41.820
<v Speaker 1>gonna display all the add ons that that

00:35:42.060 --> 00:35:44.140
<v Speaker 1>Sveltos have deployed so far.

00:35:44.460 --> 00:35:45.900
<v Speaker 1>So when I look at it,

00:35:46.620 --> 00:35:48.140
<v Speaker 1>you know, it's like I can see that

00:35:48.140 --> 00:35:50.300
<v Speaker 1>so far, he has deployed Caverno

00:35:50.875 --> 00:35:54.075
<v Speaker 1>version and chart version three zero one at

00:35:54.075 --> 00:35:55.995
<v Speaker 1>this time here in the

00:35:56.315 --> 00:35:58.155
<v Speaker 1>cluster API power cluster.

00:35:58.155 --> 00:36:00.875
<v Speaker 1>And it has deployed a cluster policy, a

00:36:00.875 --> 00:36:02.395
<v Speaker 1>Caverno cluster policy

00:36:02.475 --> 00:36:03.675
<v Speaker 1>with this name here

00:36:04.310 --> 00:36:06.230
<v Speaker 1>at this time, again, in this cluster here

00:36:06.230 --> 00:36:08.950
<v Speaker 1>because of this cluster profile here, Caverno.

00:36:09.030 --> 00:36:10.710
<v Speaker 1>Now I think it's still deploying in the

00:36:10.710 --> 00:36:12.790
<v Speaker 1>other two GKE cluster. It takes a little

00:36:12.790 --> 00:36:15.190
<v Speaker 1>longer for add ons to be deployed there.

00:36:15.190 --> 00:36:16.630
<v Speaker 1>It's like but

00:36:17.510 --> 00:36:18.550
<v Speaker 1>this is, like, now

00:36:19.055 --> 00:36:20.975
<v Speaker 1>it has deployed its

00:36:21.855 --> 00:36:22.655
<v Speaker 1>Caverno

00:36:22.655 --> 00:36:24.495
<v Speaker 1>and chart in the cluster one. In the

00:36:24.495 --> 00:36:26.895
<v Speaker 1>cluster two, pretty much, it's done deploying everything.

00:36:27.055 --> 00:36:28.735
<v Speaker 1>And the cluster one is still missing the

00:36:28.735 --> 00:36:31.135
<v Speaker 1>cluster pull up policy, which hopefully by now

00:36:31.135 --> 00:36:32.815
<v Speaker 1>is deployed. So, yes, now at this point,

00:36:32.815 --> 00:36:34.690
<v Speaker 1>pretty much, everything is there. And I can

00:36:34.690 --> 00:36:36.530
<v Speaker 1>see the exact time when it was deployed

00:36:36.530 --> 00:36:38.050
<v Speaker 1>in each one of those clusters.

00:36:39.810 --> 00:36:42.210
<v Speaker 0>Are these add ons just CRDs? Like, can

00:36:42.210 --> 00:36:44.450
<v Speaker 0>you just run cube control get Sveltos add

00:36:44.450 --> 00:36:46.130
<v Speaker 0>ons as Sveltos add ons?

00:36:47.905 --> 00:36:49.185
<v Speaker 0>Is that how this work?

00:36:51.665 --> 00:36:52.225
<v Speaker 1>So

00:36:52.625 --> 00:36:54.704
<v Speaker 1>no. That's pretty much like it's this Sveltos

00:36:54.704 --> 00:36:56.385
<v Speaker 1>card or show add ons. It's it's pretty

00:36:56.385 --> 00:36:58.785
<v Speaker 1>much just showing you what resources,

00:36:58.785 --> 00:37:00.625
<v Speaker 1>what add ons Sveltos has deployed in each

00:37:00.625 --> 00:37:01.505
<v Speaker 1>cluster so far.

00:37:02.890 --> 00:37:05.050
<v Speaker 1>Okay. So I can actually Could I get

00:37:05.050 --> 00:37:07.050
<v Speaker 0>that myself with kubectl? That's what I was

00:37:07.210 --> 00:37:09.210
<v Speaker 1>Oh, yes. Yes. Yes. Absolutely. Yes. For instance,

00:37:09.210 --> 00:37:11.770
<v Speaker 1>like, if we look let's go to to

00:37:11.770 --> 00:37:13.770
<v Speaker 1>one of the cluster here. So I have

00:37:14.170 --> 00:37:16.515
<v Speaker 1>we can take, like, the cluster API of

00:37:16.515 --> 00:37:17.395
<v Speaker 1>our cluster.

00:37:17.555 --> 00:37:19.635
<v Speaker 1>Right? So if I do this

00:37:20.194 --> 00:37:22.435
<v Speaker 1>and I do, like, a QCalow get

00:37:23.395 --> 00:37:25.875
<v Speaker 1>pods, for instance, you can see that the

00:37:25.875 --> 00:37:26.994
<v Speaker 1>has been deployed.

00:37:28.070 --> 00:37:28.870
<v Speaker 1>You see?

00:37:29.110 --> 00:37:31.750
<v Speaker 0>Yes. And you can see that the

00:37:33.270 --> 00:37:35.990
<v Speaker 1>cluster policy, it's also been deployed. Like, it

00:37:36.150 --> 00:37:39.190
<v Speaker 1>it's a it's at the Sveltos Kabo, pretty

00:37:39.190 --> 00:37:41.085
<v Speaker 1>much like it's a it's it it runs

00:37:41.085 --> 00:37:43.165
<v Speaker 1>in the management cluster and so it's a

00:37:43.165 --> 00:37:44.925
<v Speaker 1>centralized place where you can go into, like,

00:37:44.925 --> 00:37:45.885
<v Speaker 1>show me, like,

00:37:46.525 --> 00:37:48.525
<v Speaker 1>call the I don't so you don't have,

00:37:48.525 --> 00:37:50.525
<v Speaker 1>like, to keep changing your Qt config, like,

00:37:50.525 --> 00:37:52.285
<v Speaker 1>to switch from one of the managed cluster

00:37:52.285 --> 00:37:54.250
<v Speaker 1>to the other. Hey. Can you run That's

00:37:54.410 --> 00:37:57.289
<v Speaker 0>to control API resources and correct it for

00:37:57.289 --> 00:37:59.690
<v Speaker 0>Sveltos so I could see what what custom

00:37:59.690 --> 00:38:01.849
<v Speaker 0>resources that deploys to the management cluster?

00:38:04.329 --> 00:38:05.290
<v Speaker 1>You can

00:38:05.529 --> 00:38:06.250
<v Speaker 1>show

00:38:06.329 --> 00:38:07.609
<v Speaker 1>oh, in the management cluster.

00:38:07.944 --> 00:38:08.585
<v Speaker 1>Yeah.

00:38:08.984 --> 00:38:11.385
<v Speaker 1>Yes. So pretty much like the resources that

00:38:11.385 --> 00:38:14.185
<v Speaker 1>Sveltos is deploying so far are, like, it's

00:38:15.464 --> 00:38:17.065
<v Speaker 1>it's I know. But I can you show

00:38:17.065 --> 00:38:19.545
<v Speaker 0>me the output of API dash resources

00:38:24.060 --> 00:38:25.260
<v Speaker 1>For Sveltos?

00:38:25.420 --> 00:38:25.980
<v Speaker 1>Yeah.

00:38:26.300 --> 00:38:27.500
<v Speaker 1>Okay. Yes.

00:38:28.060 --> 00:38:30.380
<v Speaker 0>I just I'm very curious. That's all. No.

00:38:30.380 --> 00:38:32.780
<v Speaker 1>Absolutely. Yes. Yes. Yes. Sorry. Don't understand your

00:38:32.780 --> 00:38:34.780
<v Speaker 1>your question. So those are the

00:38:35.835 --> 00:38:38.875
<v Speaker 1>all the different CRDs that Sveltos has. So

00:38:38.875 --> 00:38:40.474
<v Speaker 1>so far, the only ones that we are

00:38:40.474 --> 00:38:42.955
<v Speaker 1>using, it's the cluster profile and the cluster

00:38:42.955 --> 00:38:43.675
<v Speaker 1>summary.

00:38:44.075 --> 00:38:44.555
<v Speaker 1>And

00:38:44.875 --> 00:38:45.995
<v Speaker 1>this is something

00:38:46.555 --> 00:38:47.835
<v Speaker 1>that we can configure.

00:38:47.915 --> 00:38:49.515
<v Speaker 1>This is something that is not supposed to

00:38:49.515 --> 00:38:50.875
<v Speaker 1>be configured like Sveltos

00:38:51.320 --> 00:38:53.160
<v Speaker 1>configures in it on on its own to

00:38:53.160 --> 00:38:55.240
<v Speaker 1>keep track pretty much of the progress on

00:38:55.240 --> 00:38:56.600
<v Speaker 1>every managed clusters.

00:38:56.840 --> 00:38:58.280
<v Speaker 1>And then the cluster configuration,

00:38:58.280 --> 00:39:00.200
<v Speaker 1>it's if you wanna see pretty much without

00:39:00.200 --> 00:39:01.320
<v Speaker 1>using Sveltos

00:39:01.400 --> 00:39:04.200
<v Speaker 1>without using this Sveltos CLI, you can actually

00:39:04.360 --> 00:39:07.035
<v Speaker 1>look at this cluster configuration here, and there

00:39:07.035 --> 00:39:09.755
<v Speaker 1>should be one resources per cluster.

00:39:09.994 --> 00:39:11.835
<v Speaker 1>And for instance, if we look at this

00:39:11.835 --> 00:39:12.395
<v Speaker 1>one,

00:39:12.714 --> 00:39:13.035
<v Speaker 1>it

00:39:13.994 --> 00:39:15.115
<v Speaker 1>this contains

00:39:15.515 --> 00:39:17.835
<v Speaker 1>all the add ons that Sveltos has deployed

00:39:17.835 --> 00:39:19.675
<v Speaker 1>and why. And this is pretty much what

00:39:19.675 --> 00:39:22.210
<v Speaker 1>the Sveltos catalog does. It goes and beats

00:39:22.210 --> 00:39:24.770
<v Speaker 1>this config this cluster configuration here,

00:39:24.930 --> 00:39:26.530
<v Speaker 1>and it knows how to parse, like, this

00:39:26.530 --> 00:39:28.610
<v Speaker 1>information here and display, like, in a human

00:39:28.610 --> 00:39:31.010
<v Speaker 1>little pivot table. Okay. Yeah. That's what I

00:39:31.010 --> 00:39:31.570
<v Speaker 1>was use, like

00:39:32.370 --> 00:39:33.810
<v Speaker 1>yeah. You don't have to use this Sveltos

00:39:33.810 --> 00:39:35.250
<v Speaker 1>Kaddle. Pretty much, you can use like, you

00:39:35.250 --> 00:39:37.090
<v Speaker 1>can go and look at the cluster configuration,

00:39:37.090 --> 00:39:38.744
<v Speaker 1>and it gives you exactly the same information

00:39:38.744 --> 00:39:41.464
<v Speaker 1>that this Sveltos Kaddle does. Except that pretty

00:39:41.464 --> 00:39:42.505
<v Speaker 1>much in this case, you will have to

00:39:42.505 --> 00:39:43.944
<v Speaker 1>read the three of these because pretty much

00:39:43.944 --> 00:39:46.825
<v Speaker 1>there are three different class that are managed

00:39:46.825 --> 00:39:47.865
<v Speaker 1>by Sveltos.

00:39:48.825 --> 00:39:49.464
<v Speaker 1>But yeah.

00:39:50.210 --> 00:39:51.890
<v Speaker 1>Absolutely. You don't have to use as as

00:39:51.890 --> 00:39:54.369
<v Speaker 1>I mentioned, like, Sveltos Gaddle is fully optional.

00:39:54.369 --> 00:39:56.210
<v Speaker 1>It's not it's not needed.

00:39:56.769 --> 00:39:57.809
<v Speaker 0>There's

00:39:57.809 --> 00:39:59.970
<v Speaker 0>a question from the audience, which I'm gonna

00:39:59.970 --> 00:40:02.609
<v Speaker 0>drop in just now where we're we're chatting.

00:40:02.609 --> 00:40:03.730
<v Speaker 0>So Harsh is asking,

00:40:04.295 --> 00:40:06.615
<v Speaker 0>I'm trying to picture the get up story.

00:40:06.855 --> 00:40:08.775
<v Speaker 0>Is it going to be Argo or Flux

00:40:08.775 --> 00:40:10.855
<v Speaker 0>to manage the management cluster

00:40:11.095 --> 00:40:13.415
<v Speaker 0>and let Sveltos manage apps?

00:40:14.695 --> 00:40:16.455
<v Speaker 0>Is there like, how do you see Sveltos

00:40:16.455 --> 00:40:18.455
<v Speaker 0>in a landscape of It's actually this is

00:40:18.455 --> 00:40:19.575
<v Speaker 1>a very good questions.

00:40:20.109 --> 00:40:21.790
<v Speaker 1>Thank you for the question. I the way

00:40:21.790 --> 00:40:23.070
<v Speaker 1>I see it is that

00:40:23.550 --> 00:40:25.070
<v Speaker 1>I would use flux

00:40:25.070 --> 00:40:27.870
<v Speaker 1>to push the configuration to the management cluster.

00:40:28.270 --> 00:40:30.349
<v Speaker 1>And once it reaches the management cluster, I

00:40:30.349 --> 00:40:33.070
<v Speaker 1>will use Sveltos to send it to the

00:40:33.070 --> 00:40:35.865
<v Speaker 1>managed clusters. The reason pretty much I will

00:40:35.865 --> 00:40:38.105
<v Speaker 1>do that way is because the configuration that

00:40:38.105 --> 00:40:40.105
<v Speaker 1>you push to the management cluster, you clearly

00:40:40.105 --> 00:40:42.105
<v Speaker 1>pretty much wanna have, like, all the advantage

00:40:42.105 --> 00:40:44.665
<v Speaker 1>of the detox approach, right, where you can

00:40:44.665 --> 00:40:45.785
<v Speaker 1>do a review of any

00:40:46.359 --> 00:40:47.640
<v Speaker 1>change. You can have a history of every

00:40:47.640 --> 00:40:48.280
<v Speaker 1>change.

00:40:49.000 --> 00:40:51.560
<v Speaker 1>It's you can have your CICD pipeline before

00:40:51.560 --> 00:40:53.480
<v Speaker 1>pretty much it reaches the management cluster. But

00:40:53.480 --> 00:40:55.480
<v Speaker 1>once it reaches the management cluster, I think

00:40:55.480 --> 00:40:57.080
<v Speaker 1>the the the

00:40:57.240 --> 00:40:59.320
<v Speaker 1>benefit of using Sveltos is that Sveltos is

00:40:59.320 --> 00:41:00.119
<v Speaker 1>capable of

00:41:00.444 --> 00:41:03.565
<v Speaker 1>fetching information from the management cluster and use

00:41:03.565 --> 00:41:05.165
<v Speaker 1>this information here

00:41:05.964 --> 00:41:06.525
<v Speaker 1>to

00:41:06.845 --> 00:41:07.964
<v Speaker 1>customize

00:41:07.964 --> 00:41:10.285
<v Speaker 1>or configure the advance that are then going

00:41:10.285 --> 00:41:12.444
<v Speaker 1>to be deployed to every managed clusters. And

00:41:12.444 --> 00:41:14.845
<v Speaker 1>for instance, like, if a new cluster is

00:41:14.845 --> 00:41:17.300
<v Speaker 1>added that is managed by Sveltos,

00:41:17.300 --> 00:41:19.780
<v Speaker 1>you know, there is no configuration that needs

00:41:19.780 --> 00:41:21.540
<v Speaker 1>to change the management cluster. Let's say that

00:41:21.540 --> 00:41:22.820
<v Speaker 1>I create another

00:41:24.180 --> 00:41:26.420
<v Speaker 1>cluster API per work cluster using Docker as

00:41:26.420 --> 00:41:28.895
<v Speaker 1>infrastructure provider. As soon as I add the

00:41:28.895 --> 00:41:31.535
<v Speaker 1>label environment functional verification, it means that this

00:41:31.535 --> 00:41:34.735
<v Speaker 1>cluster should have and this cluster policy deployed,

00:41:34.735 --> 00:41:36.575
<v Speaker 1>and Sveltos will take care from there. So

00:41:36.575 --> 00:41:38.015
<v Speaker 1>there is nothing else that I have to

00:41:38.015 --> 00:41:39.135
<v Speaker 1>do. So

00:41:39.375 --> 00:41:41.375
<v Speaker 1>I do see to to

00:41:41.480 --> 00:41:43.000
<v Speaker 1>answer again the question, like, I do see

00:41:43.000 --> 00:41:43.800
<v Speaker 1>flux

00:41:44.279 --> 00:41:45.720
<v Speaker 1>as the tool

00:41:46.440 --> 00:41:49.000
<v Speaker 1>to push the configuration to the management cluster.

00:41:49.000 --> 00:41:50.839
<v Speaker 1>And once he reaches the management cluster, I

00:41:50.839 --> 00:41:52.359
<v Speaker 1>see Sveltos as

00:41:52.520 --> 00:41:54.885
<v Speaker 1>the solution to to deploy. The other reason

00:41:54.885 --> 00:41:56.405
<v Speaker 1>I would use Sveltos in that case because

00:41:56.405 --> 00:41:58.885
<v Speaker 1>Sveltos has features like, for instance, you may

00:41:58.885 --> 00:41:59.365
<v Speaker 1>say,

00:42:00.005 --> 00:42:02.325
<v Speaker 1>if in any of the cluster, you see

00:42:02.325 --> 00:42:04.805
<v Speaker 1>that there is this event here, for instance,

00:42:04.805 --> 00:42:06.085
<v Speaker 1>a service is created,

00:42:06.325 --> 00:42:07.605
<v Speaker 1>this is the set of add ons that

00:42:07.605 --> 00:42:09.205
<v Speaker 1>they want to deploy in response of that

00:42:09.205 --> 00:42:11.500
<v Speaker 1>service being created. So with Sveltos, you can

00:42:11.500 --> 00:42:13.260
<v Speaker 1>do that. So it's more dynamic. Right? You

00:42:13.260 --> 00:42:14.299
<v Speaker 1>can react to,

00:42:14.700 --> 00:42:17.180
<v Speaker 1>cluster on time stage changes. You can react,

00:42:17.180 --> 00:42:19.099
<v Speaker 1>like, to events in any of the managed

00:42:19.099 --> 00:42:21.339
<v Speaker 1>cluster, which is difficult, like, to express

00:42:22.315 --> 00:42:25.115
<v Speaker 1>in in a GitOps approach. But the configuration

00:42:25.115 --> 00:42:27.435
<v Speaker 1>cost to manage my cluster should should should

00:42:27.435 --> 00:42:28.635
<v Speaker 1>come with plugs

00:42:28.715 --> 00:42:30.315
<v Speaker 1>if I were to do it. Actually, this

00:42:30.315 --> 00:42:31.835
<v Speaker 1>is how pretty much, like, I internally do

00:42:31.835 --> 00:42:32.315
<v Speaker 1>it.

00:42:32.635 --> 00:42:33.515
<v Speaker 0>Okay. Thank you.

00:42:37.210 --> 00:42:39.450
<v Speaker 1>There is since we are, in scale, there's

00:42:39.450 --> 00:42:41.369
<v Speaker 1>one something else that I wanna show. For

00:42:41.369 --> 00:42:43.369
<v Speaker 1>instance, let's say that now I I wanna

00:42:43.369 --> 00:42:44.730
<v Speaker 1>make a change. Right?

00:42:44.970 --> 00:42:45.849
<v Speaker 1>But

00:42:46.505 --> 00:42:48.825
<v Speaker 1>I'm not sure about what the outcome is.

00:42:49.065 --> 00:42:52.265
<v Speaker 1>So I want, for instance, to change the

00:42:52.265 --> 00:42:53.545
<v Speaker 1>caverno

00:42:53.865 --> 00:42:54.585
<v Speaker 1>from

00:42:54.985 --> 00:42:57.465
<v Speaker 1>and chart from three zero one to three

00:42:57.465 --> 00:42:59.320
<v Speaker 1>zero two. But I don't know what the

00:42:59.320 --> 00:43:00.920
<v Speaker 1>outcome is going to be. Right?

00:43:01.160 --> 00:43:03.079
<v Speaker 1>What I can tell Sveltos is, please go

00:43:03.079 --> 00:43:04.200
<v Speaker 1>in dry run mode.

00:43:04.680 --> 00:43:06.839
<v Speaker 1>Right? In dry run mode, what Sveltos is

00:43:06.839 --> 00:43:08.440
<v Speaker 1>going to do, it's not gonna make any

00:43:08.440 --> 00:43:09.960
<v Speaker 1>change to the managed clusters.

00:43:10.520 --> 00:43:13.480
<v Speaker 1>But it's internally gonna run like the full

00:43:13.480 --> 00:43:16.415
<v Speaker 1>logic that it will run. So pretty much,

00:43:16.415 --> 00:43:17.775
<v Speaker 1>like, it will run all the steps that

00:43:17.775 --> 00:43:19.215
<v Speaker 1>it will execute

00:43:20.575 --> 00:43:22.575
<v Speaker 1>when it deploys a once. It's just like

00:43:22.575 --> 00:43:24.015
<v Speaker 1>it will skip the last one, which is

00:43:24.015 --> 00:43:26.095
<v Speaker 1>actually the real deployment to the managed cluster.

00:43:26.270 --> 00:43:28.910
<v Speaker 1>So if I change this cluster profile and

00:43:28.910 --> 00:43:30.190
<v Speaker 1>I say it's like, I

00:43:31.069 --> 00:43:32.510
<v Speaker 1>wanna upgrade but

00:43:32.510 --> 00:43:34.349
<v Speaker 1>be in dry end mode because I don't

00:43:34.349 --> 00:43:36.110
<v Speaker 1>know what the outcome is going to be.

00:43:36.270 --> 00:43:38.270
<v Speaker 1>Now I can use again

00:43:38.510 --> 00:43:39.550
<v Speaker 1>Sveltoscalo,

00:43:40.115 --> 00:43:42.194
<v Speaker 1>and I forgot what the command is in

00:43:42.194 --> 00:43:42.835
<v Speaker 1>that case.

00:43:43.795 --> 00:43:45.795
<v Speaker 1>I think it's a dry run. Yes. Okay.

00:43:46.434 --> 00:43:48.674
<v Speaker 1>So it's I can tell Sveltos, show me

00:43:48.674 --> 00:43:50.994
<v Speaker 1>what will change if I were to commit

00:43:50.994 --> 00:43:53.330
<v Speaker 1>this change. And if you see what it's

00:43:53.330 --> 00:43:55.010
<v Speaker 1>gonna say is that it's gonna say that

00:43:55.170 --> 00:43:57.890
<v Speaker 1>the Caverno in it's gonna be the current

00:43:57.890 --> 00:43:59.490
<v Speaker 1>version 30.1,

00:43:59.490 --> 00:44:01.890
<v Speaker 1>and we'll move to version 30.2

00:44:01.890 --> 00:44:04.130
<v Speaker 1>in this cluster here. And same pretty much

00:44:04.130 --> 00:44:05.570
<v Speaker 1>like, you know, the cluster. Right? So there

00:44:05.570 --> 00:44:07.010
<v Speaker 1>would be like a Caverno

00:44:07.535 --> 00:44:08.895
<v Speaker 1>and Sharp upgrade.

00:44:09.055 --> 00:44:11.375
<v Speaker 1>But with respect to the cluster policy,

00:44:11.535 --> 00:44:14.015
<v Speaker 1>there's no change. The object is already deployed,

00:44:14.015 --> 00:44:15.935
<v Speaker 1>and there is no change. You you haven't

00:44:15.935 --> 00:44:18.655
<v Speaker 1>changed the configuration affecting this object, so there

00:44:18.655 --> 00:44:20.095
<v Speaker 1>is no change there. So pretty much, you

00:44:20.095 --> 00:44:22.590
<v Speaker 1>can review, like, what the you can make

00:44:22.590 --> 00:44:24.030
<v Speaker 1>a change. You can review the change. And

00:44:24.030 --> 00:44:26.110
<v Speaker 1>if you find the change, you can go

00:44:26.110 --> 00:44:28.110
<v Speaker 1>back and tell Sveltos, okay. Now deploy it.

00:44:28.110 --> 00:44:29.550
<v Speaker 1>Or if you're not fine with the change,

00:44:29.550 --> 00:44:31.230
<v Speaker 1>just revert back to whatever you were.

00:44:34.125 --> 00:44:36.285
<v Speaker 1>So this is something pretty much like that,

00:44:36.605 --> 00:44:39.565
<v Speaker 1>especially when managing, like, a fleet of clusters.

00:44:39.565 --> 00:44:40.205
<v Speaker 1>It's

00:44:40.525 --> 00:44:41.565
<v Speaker 1>it's tough to

00:44:43.005 --> 00:44:45.085
<v Speaker 1>and you wanna make sure that only a

00:44:45.085 --> 00:44:45.805
<v Speaker 1>certain

00:44:46.850 --> 00:44:48.370
<v Speaker 1>you you wanna make sure what the side

00:44:48.370 --> 00:44:49.730
<v Speaker 1>effect is going to be. Like, it's it's

00:44:49.730 --> 00:44:51.730
<v Speaker 1>nice to have, like, this dry run command.

00:44:53.970 --> 00:44:54.770
<v Speaker 0>See, the

00:44:55.650 --> 00:44:58.290
<v Speaker 0>sorry. Just related to that. Right? Let's assume

00:44:58.290 --> 00:44:59.730
<v Speaker 0>we wanted to change from

00:45:00.865 --> 00:45:02.945
<v Speaker 0>dry run. There's also continuous.

00:45:03.665 --> 00:45:05.745
<v Speaker 0>I've got two clusters about to be upgraded.

00:45:05.745 --> 00:45:07.905
<v Speaker 0>Say one of them is considered lower risk

00:45:07.905 --> 00:45:10.305
<v Speaker 0>by the organization. Can we tell Sveltos to

00:45:10.305 --> 00:45:11.985
<v Speaker 0>apply it to that one first? And if

00:45:11.985 --> 00:45:14.200
<v Speaker 0>it's successful, continue the rule, like, you know,

00:45:14.200 --> 00:45:16.040
<v Speaker 0>like a phased rollout of a deployment across

00:45:16.040 --> 00:45:16.920
<v Speaker 0>the add on.

00:45:17.480 --> 00:45:18.120
<v Speaker 1>That's a

00:45:19.480 --> 00:45:21.640
<v Speaker 1>not right now. So the way you will

00:45:21.640 --> 00:45:23.480
<v Speaker 1>have to do right now is to

00:45:23.720 --> 00:45:27.185
<v Speaker 1>have different labels in that cluster there. So,

00:45:27.265 --> 00:45:28.705
<v Speaker 1>for instance, like, the way I will solve

00:45:28.705 --> 00:45:29.425
<v Speaker 1>it, I will,

00:45:30.145 --> 00:45:32.225
<v Speaker 1>I will call that cluster there, for instance,

00:45:32.225 --> 00:45:33.185
<v Speaker 1>preproduction

00:45:33.345 --> 00:45:36.065
<v Speaker 1>and the other cluster production, let's say. Yeah.

00:45:36.065 --> 00:45:38.625
<v Speaker 1>And then I will have, like, two cluster

00:45:38.625 --> 00:45:40.705
<v Speaker 1>profiles which are exactly then

00:45:41.020 --> 00:45:43.500
<v Speaker 1>one matching the preproduction and one matching the

00:45:43.500 --> 00:45:44.220
<v Speaker 1>production.

00:45:44.380 --> 00:45:45.980
<v Speaker 1>And then if you wanna actually

00:45:46.540 --> 00:45:48.460
<v Speaker 1>see the change live in the preproduction, you

00:45:48.460 --> 00:45:49.900
<v Speaker 1>just make the change to the cluster profile

00:45:49.900 --> 00:45:51.980
<v Speaker 1>there. You see what happens to the preproduction

00:45:51.980 --> 00:45:53.260
<v Speaker 1>cluster, and then you go back to the

00:45:53.260 --> 00:45:55.260
<v Speaker 1>to the other cluster profile and change it

00:45:55.260 --> 00:45:57.085
<v Speaker 1>there. But it's actually this is, like, it's

00:45:57.085 --> 00:45:57.885
<v Speaker 1>one of the

00:45:58.365 --> 00:46:00.605
<v Speaker 1>features that I would like to add. Well,

00:46:00.605 --> 00:46:02.285
<v Speaker 1>you also tell Sveltos,

00:46:02.285 --> 00:46:03.805
<v Speaker 1>which is the order.

00:46:04.125 --> 00:46:06.365
<v Speaker 1>If you make a change, I wanted you

00:46:06.365 --> 00:46:08.285
<v Speaker 1>to go and you are matching, like, 10

00:46:08.285 --> 00:46:10.680
<v Speaker 1>different clusters. I want you to go in

00:46:10.680 --> 00:46:12.280
<v Speaker 1>order. So go first to this cluster, then

00:46:12.280 --> 00:46:13.640
<v Speaker 1>to this cluster, then to this cluster, then

00:46:13.640 --> 00:46:15.880
<v Speaker 1>to this cluster. Yeah. But it's it's not

00:46:15.880 --> 00:46:18.200
<v Speaker 1>there yet, but it's it's a very good

00:46:18.200 --> 00:46:21.000
<v Speaker 1>point because it's it's something that definitely too

00:46:21.000 --> 00:46:21.640
<v Speaker 1>much you wanna see.

00:46:22.625 --> 00:46:23.665
<v Speaker 0>Cool. Thank you.

00:46:25.585 --> 00:46:27.744
<v Speaker 1>Now the other things I wanna show, it's

00:46:27.744 --> 00:46:30.305
<v Speaker 1>the the two so the cluster that I

00:46:30.305 --> 00:46:32.145
<v Speaker 1>have, it's running

00:46:32.145 --> 00:46:34.385
<v Speaker 1>one twenty six version. This is the cluster

00:46:34.385 --> 00:46:35.185
<v Speaker 1>profile.

00:46:35.665 --> 00:46:36.625
<v Speaker 1>While the two,

00:46:38.090 --> 00:46:39.850
<v Speaker 1>the two GK clusters

00:46:42.090 --> 00:46:43.530
<v Speaker 1>I don't know if I have this information

00:46:43.530 --> 00:46:44.730
<v Speaker 1>here, but they are running

00:46:47.930 --> 00:46:49.610
<v Speaker 1>do not have this information here, but they're

00:46:49.610 --> 00:46:51.705
<v Speaker 1>running one twenty seven. So they're running at

00:46:51.705 --> 00:46:53.065
<v Speaker 1>the different, like,

00:46:54.665 --> 00:46:56.105
<v Speaker 1>Kubernetes cluster.

00:46:56.105 --> 00:46:58.825
<v Speaker 1>So Kubernetes version. So what I created here,

00:46:58.825 --> 00:47:00.345
<v Speaker 1>like, I have one classifier.

00:47:00.825 --> 00:47:03.305
<v Speaker 1>And this classifier is saying that if you

00:47:03.305 --> 00:47:04.665
<v Speaker 1>find a cluster which is

00:47:05.319 --> 00:47:07.319
<v Speaker 1>greater or equal than one twenty six or

00:47:07.319 --> 00:47:09.480
<v Speaker 1>less than one twenty seven, I want this

00:47:09.480 --> 00:47:12.039
<v Speaker 1>cluster to have this label here, version b

00:47:12.039 --> 00:47:13.080
<v Speaker 1>one twenty six.

00:47:13.559 --> 00:47:15.720
<v Speaker 1>And then I'm gonna pair actually no. Actually,

00:47:15.720 --> 00:47:17.640
<v Speaker 1>here, I'm gonna pair this one with

00:47:22.425 --> 00:47:24.905
<v Speaker 1>cluster profile for one twenty six. So this

00:47:24.905 --> 00:47:26.345
<v Speaker 1>cluster profile here is saying, like, if you

00:47:26.345 --> 00:47:28.425
<v Speaker 1>see any cluster with one twenty six,

00:47:28.665 --> 00:47:30.985
<v Speaker 1>please deploy NGINX

00:47:31.545 --> 00:47:32.505
<v Speaker 1>ingress

00:47:32.745 --> 00:47:34.185
<v Speaker 1>version

00:47:35.020 --> 00:47:36.540
<v Speaker 1>18.

00:47:36.780 --> 00:47:39.180
<v Speaker 1>So I'm gonna pause both of those.

00:47:39.900 --> 00:47:42.380
<v Speaker 1>So I'm gonna pause first this one. All

00:47:42.380 --> 00:47:44.940
<v Speaker 1>these posts are going to the management cluster.

00:47:46.460 --> 00:47:48.380
<v Speaker 1>I'm gonna pause this, and I'm gonna pause

00:47:48.380 --> 00:47:48.940
<v Speaker 1>the

00:47:49.585 --> 00:47:51.025
<v Speaker 1>cluster profile

00:47:52.385 --> 00:47:54.865
<v Speaker 1>What's the name? For b one twenty six.

00:47:55.105 --> 00:47:56.865
<v Speaker 1>As soon as I post those two things,

00:47:56.865 --> 00:47:58.465
<v Speaker 1>now what you should happen if I go

00:47:58.465 --> 00:48:00.465
<v Speaker 1>in again and look at the add ons,

00:48:00.625 --> 00:48:03.025
<v Speaker 1>only one cluster, it's running one twenty six.

00:48:03.140 --> 00:48:05.300
<v Speaker 1>So I expect the NGINX is gonna deploy

00:48:05.300 --> 00:48:07.060
<v Speaker 1>only to one cluster. The other two clusters

00:48:07.060 --> 00:48:09.220
<v Speaker 1>should not have, like, this configuration deployed.

00:48:09.780 --> 00:48:12.180
<v Speaker 1>So so far, pretty much nothing is deployed

00:48:12.180 --> 00:48:12.900
<v Speaker 1>yet.

00:48:13.300 --> 00:48:15.700
<v Speaker 1>You know, I just deployed the

00:48:16.100 --> 00:48:18.340
<v Speaker 1>classifier, so the classifier is gonna get

00:48:18.684 --> 00:48:19.885
<v Speaker 1>pushed to the

00:48:20.444 --> 00:48:22.205
<v Speaker 1>manage clusters,

00:48:22.525 --> 00:48:24.445
<v Speaker 1>and then it's gonna come back

00:48:24.845 --> 00:48:26.765
<v Speaker 1>saying whether the cluster is a match or

00:48:26.765 --> 00:48:28.285
<v Speaker 1>not. At this point, I see that pretty

00:48:28.285 --> 00:48:29.964
<v Speaker 1>much, like, this information came back to the

00:48:29.964 --> 00:48:31.085
<v Speaker 1>management cluster,

00:48:31.325 --> 00:48:34.045
<v Speaker 1>and it should say that the cluster is

00:48:35.350 --> 00:48:36.150
<v Speaker 1>too much.

00:48:36.550 --> 00:48:38.470
<v Speaker 1>Let's take classify your reports.

00:48:38.869 --> 00:48:40.390
<v Speaker 1>Yeah. So this is back. So now if

00:48:40.390 --> 00:48:41.510
<v Speaker 1>I go and look at the on support

00:48:41.510 --> 00:48:42.310
<v Speaker 1>deployed,

00:48:42.630 --> 00:48:45.830
<v Speaker 1>you see that NGINX now has been deployed

00:48:46.405 --> 00:48:47.205
<v Speaker 1>only

00:48:47.205 --> 00:48:49.525
<v Speaker 1>to this cluster here. NGINX is not gonna

00:48:49.525 --> 00:48:51.205
<v Speaker 1>be deployed to the other cluster one and

00:48:51.205 --> 00:48:53.685
<v Speaker 1>cluster two because those two clusters are running

00:48:53.685 --> 00:48:58.325
<v Speaker 1>Kubernetes version, which is 01/1972.

00:48:58.325 --> 00:48:59.845
<v Speaker 1>So the only cluster which is running a

00:48:59.845 --> 00:49:01.285
<v Speaker 1>Kubernetes version, which is

00:49:01.839 --> 00:49:03.680
<v Speaker 1>greater or lower than one twenty six and

00:49:03.680 --> 00:49:05.280
<v Speaker 1>less than one twenty seven is this cluster

00:49:05.280 --> 00:49:06.480
<v Speaker 1>here. And

00:49:06.720 --> 00:49:08.400
<v Speaker 1>so this is the only cluster which is

00:49:08.400 --> 00:49:09.440
<v Speaker 1>matching this

00:49:11.200 --> 00:49:12.160
<v Speaker 1>classifier.

00:49:12.880 --> 00:49:14.800
<v Speaker 1>And because this is the only cluster that

00:49:14.800 --> 00:49:16.974
<v Speaker 1>is matching the classifier here, which is running

00:49:16.974 --> 00:49:18.815
<v Speaker 1>a version between one twenty six and less

00:49:18.815 --> 00:49:20.734
<v Speaker 1>than one twenty seven, this is the only

00:49:20.734 --> 00:49:21.775
<v Speaker 1>cluster where

00:49:22.095 --> 00:49:23.855
<v Speaker 1>NGINX is gonna be deployed.

00:49:24.015 --> 00:49:24.495
<v Speaker 1>And

00:49:25.215 --> 00:49:27.775
<v Speaker 1>and we saw it looking at the advance

00:49:27.775 --> 00:49:29.775
<v Speaker 1>that, again, like, it's just like nothing else

00:49:29.775 --> 00:49:31.535
<v Speaker 1>is deployed. This is the only place where

00:49:31.535 --> 00:49:33.110
<v Speaker 1>NGINX has been deployed.

00:49:33.510 --> 00:49:34.150
<v Speaker 1>And

00:49:34.470 --> 00:49:36.150
<v Speaker 1>if I look at the cluster

00:49:38.630 --> 00:49:40.470
<v Speaker 1>so I get to my edit.

00:49:40.950 --> 00:49:42.550
<v Speaker 1>Just to, like, get cluster.

00:49:45.905 --> 00:49:47.425
<v Speaker 1>If we look at this cluster here, we

00:49:47.425 --> 00:49:49.265
<v Speaker 1>can see that Sveltos

00:49:49.265 --> 00:49:52.145
<v Speaker 1>added this label here, version one twenty six.

00:49:52.145 --> 00:49:53.665
<v Speaker 1>But if we look at the

00:49:54.945 --> 00:49:57.985
<v Speaker 1>Sveltos cluster, the other two Sveltos cluster,

00:49:58.785 --> 00:50:00.145
<v Speaker 1>cluster one, for instance,

00:50:01.580 --> 00:50:03.820
<v Speaker 1>the GK namespace.

00:50:05.340 --> 00:50:07.340
<v Speaker 1>No. The label has not been added because

00:50:07.340 --> 00:50:08.860
<v Speaker 1>it's pretty much like this cluster is not

00:50:08.860 --> 00:50:09.500
<v Speaker 1>a match.

00:50:09.820 --> 00:50:11.180
<v Speaker 1>So this is the

00:50:11.660 --> 00:50:14.380
<v Speaker 1>classifier demo that you can say

00:50:15.365 --> 00:50:17.685
<v Speaker 1>what advance you want to be deployed based

00:50:17.685 --> 00:50:20.085
<v Speaker 1>on the cluster run time state.

00:50:22.165 --> 00:50:24.244
<v Speaker 1>Nice. I wanna post here, like, if there

00:50:24.244 --> 00:50:25.765
<v Speaker 1>is any question. Otherwise, pretty much, like, I

00:50:25.765 --> 00:50:26.964
<v Speaker 1>have another

00:50:27.090 --> 00:50:29.090
<v Speaker 1>features that I would like to demo,

00:50:29.330 --> 00:50:31.490
<v Speaker 1>which is the event driven framework.

00:50:31.650 --> 00:50:33.170
<v Speaker 1>But I will post here, like, if there's

00:50:33.170 --> 00:50:33.890
<v Speaker 1>any question.

00:50:34.210 --> 00:50:36.770
<v Speaker 0>Okay. I mean, what can we do with

00:50:36.770 --> 00:50:38.130
<v Speaker 0>the the classifiers?

00:50:38.130 --> 00:50:40.450
<v Speaker 0>Could you run a cube control explain on

00:50:40.450 --> 00:50:42.450
<v Speaker 0>the spec so we can see what the

00:50:42.735 --> 00:50:44.015
<v Speaker 0>what that looks like.

00:50:47.055 --> 00:50:47.775
<v Speaker 1>Yes.

00:50:47.935 --> 00:50:48.735
<v Speaker 1>So

00:50:49.935 --> 00:50:50.815
<v Speaker 1>just

00:50:52.975 --> 00:50:54.575
<v Speaker 1>see here.

00:50:56.150 --> 00:50:57.430
<v Speaker 1>See what's the

00:51:00.630 --> 00:51:02.550
<v Speaker 1>filters, and this is the

00:51:02.870 --> 00:51:04.070
<v Speaker 1>classifier.

00:51:04.550 --> 00:51:07.350
<v Speaker 1>Okay. So it's this classifier here so I

00:51:07.350 --> 00:51:08.950
<v Speaker 1>can get the

00:51:14.895 --> 00:51:16.655
<v Speaker 1>Alright. Is there any other command which is

00:51:16.655 --> 00:51:18.895
<v Speaker 1>better Yeah. You can run cube control, explain,

00:51:19.455 --> 00:51:20.895
<v Speaker 0>and then space,

00:51:21.295 --> 00:51:22.655
<v Speaker 0>c r d name dot spec.

00:51:26.099 --> 00:51:26.980
<v Speaker 1>I'm

00:51:28.420 --> 00:51:29.940
<v Speaker 1>like this? Yeah.

00:51:31.380 --> 00:51:34.900
<v Speaker 1>Perfect. Oh, alright. That's Yeah. You could do

00:51:34.900 --> 00:51:37.815
<v Speaker 0>that with any nested field that expands. It's

00:51:37.815 --> 00:51:40.215
<v Speaker 0>really cool and my favorite command. Oh, that's

00:51:40.215 --> 00:51:40.855
<v Speaker 1>perfect.

00:51:41.095 --> 00:51:43.335
<v Speaker 1>That's great. Yeah. Pretty much like what

00:51:44.455 --> 00:51:45.255
<v Speaker 1>the classifier

00:51:46.455 --> 00:51:48.535
<v Speaker 1>you to do. It's we saw pretty much

00:51:48.535 --> 00:51:50.695
<v Speaker 1>classifying a cluster based on the Kubernetes version,

00:51:51.720 --> 00:51:54.360
<v Speaker 1>but it can also classify a cluster based

00:51:54.360 --> 00:51:55.240
<v Speaker 1>on the

00:51:55.800 --> 00:51:56.600
<v Speaker 1>the

00:51:56.920 --> 00:51:58.360
<v Speaker 1>deployed resources.

00:51:58.680 --> 00:51:59.960
<v Speaker 1>So for instance, now

00:52:00.760 --> 00:52:01.960
<v Speaker 1>so if I if

00:52:02.360 --> 00:52:04.680
<v Speaker 1>I take this one, it's gonna go farther

00:52:04.680 --> 00:52:06.280
<v Speaker 1>into that. Right? Yeah. Correct.

00:52:07.295 --> 00:52:09.535
<v Speaker 1>K. So you see pretty much, like, you

00:52:09.535 --> 00:52:10.975
<v Speaker 1>can tell Sveltos classify

00:52:12.495 --> 00:52:13.855
<v Speaker 1>a cluster based on

00:52:14.415 --> 00:52:16.415
<v Speaker 1>take this group, this kind,

00:52:16.655 --> 00:52:19.855
<v Speaker 1>take this label filters to filter object, like,

00:52:19.855 --> 00:52:21.055
<v Speaker 1>of this group kind

00:52:21.630 --> 00:52:22.590
<v Speaker 1>version.

00:52:23.549 --> 00:52:25.630
<v Speaker 1>You can say it's like if there is

00:52:25.630 --> 00:52:27.390
<v Speaker 1>a max count or a min count of

00:52:27.390 --> 00:52:28.190
<v Speaker 1>resources,

00:52:28.430 --> 00:52:30.109
<v Speaker 1>and you can even pass, like, a Lua

00:52:30.109 --> 00:52:30.750
<v Speaker 1>script.

00:52:31.150 --> 00:52:33.470
<v Speaker 1>Okay. So you so you can pretty much,

00:52:33.470 --> 00:52:36.190
<v Speaker 1>like, cusses, like, any field in any of

00:52:36.190 --> 00:52:36.829
<v Speaker 1>those resources.

00:52:37.224 --> 00:52:38.905
<v Speaker 1>And then you can say pretty much whether

00:52:38.905 --> 00:52:39.465
<v Speaker 1>the

00:52:40.185 --> 00:52:42.984
<v Speaker 1>you know, like, if this return is true,

00:52:42.984 --> 00:52:45.224
<v Speaker 1>it means that the cluster is unmatched. So

00:52:45.224 --> 00:52:46.025
<v Speaker 1>you can

00:52:46.505 --> 00:52:48.105
<v Speaker 1>really look like at

00:52:48.825 --> 00:52:50.025
<v Speaker 1>at any deployed

00:52:51.579 --> 00:52:53.260
<v Speaker 1>can look at the cluster and decide the

00:52:53.260 --> 00:52:56.940
<v Speaker 1>the classified cluster based on the resources that

00:52:56.940 --> 00:53:00.540
<v Speaker 1>are deployed there. So it's it's Yeah. So,

00:53:00.540 --> 00:53:02.940
<v Speaker 0>like, using our example from earlier, if I've

00:53:02.940 --> 00:53:05.595
<v Speaker 0>got let's just say a WordPress website. Right?

00:53:05.595 --> 00:53:07.195
<v Speaker 0>And I don't want to deploy to the

00:53:07.195 --> 00:53:09.995
<v Speaker 0>cluster until there's a config map that exists

00:53:10.075 --> 00:53:12.395
<v Speaker 0>with everything I need, like DNS name and

00:53:12.395 --> 00:53:13.755
<v Speaker 0>TLS or whatever.

00:53:13.915 --> 00:53:15.755
<v Speaker 0>I would add a classifier that monitors for

00:53:15.755 --> 00:53:18.075
<v Speaker 0>that config map and then when it exists,

00:53:18.075 --> 00:53:19.355
<v Speaker 0>I deploy my application.

00:53:19.869 --> 00:53:22.109
<v Speaker 0>And I think this loops right into a

00:53:22.109 --> 00:53:24.110
<v Speaker 0>second question from Harsh.

00:53:24.349 --> 00:53:25.630
<v Speaker 0>He says, is there a way we could

00:53:25.630 --> 00:53:27.630
<v Speaker 0>order the app or resource installations?

00:53:27.630 --> 00:53:28.350
<v Speaker 0>For example,

00:53:28.670 --> 00:53:30.670
<v Speaker 0>make sure we install project x first because

00:53:30.670 --> 00:53:32.030
<v Speaker 0>why I need CRDs,

00:53:32.030 --> 00:53:33.710
<v Speaker 0>etcetera or webhooks

00:53:33.790 --> 00:53:36.075
<v Speaker 0>and a voice back off. I guess you

00:53:36.075 --> 00:53:38.075
<v Speaker 0>would use the classifiers and the resources to

00:53:38.075 --> 00:53:41.115
<v Speaker 0>do that too. Right? Maybe? Yes. Potentially, you

00:53:41.115 --> 00:53:43.115
<v Speaker 1>can do with the classifier exactly. Pretty much

00:53:43.115 --> 00:53:44.635
<v Speaker 1>you can say pretty much that

00:53:46.795 --> 00:53:49.355
<v Speaker 1>when you see that this CRD installed,

00:53:49.670 --> 00:53:52.790
<v Speaker 1>then at this label, which it's causing the

00:53:52.790 --> 00:53:54.310
<v Speaker 1>cluster to be a match for a cluster

00:53:54.310 --> 00:53:57.110
<v Speaker 1>profile, which contains your second set of accounts

00:53:57.110 --> 00:53:58.390
<v Speaker 1>that you want to be deployed, and then

00:53:58.390 --> 00:54:00.550
<v Speaker 1>you can keep, like, piping into that

00:54:00.950 --> 00:54:03.030
<v Speaker 1>so you can have, like, a multistage deployment.

00:54:04.505 --> 00:54:06.425
<v Speaker 1>The other things is, like, if you have

00:54:08.105 --> 00:54:10.425
<v Speaker 1>if all your resources are,

00:54:11.065 --> 00:54:14.265
<v Speaker 1>let's say, in charts or customization file or

00:54:14.265 --> 00:54:17.065
<v Speaker 1>resources, like, instance. If you put if you

00:54:17.065 --> 00:54:17.785
<v Speaker 1>have two

00:54:18.930 --> 00:54:20.770
<v Speaker 1>hand charts that you want to deploy and

00:54:20.770 --> 00:54:21.570
<v Speaker 1>there is

00:54:22.050 --> 00:54:24.450
<v Speaker 1>Sveltos is gonna honor the order that you

00:54:24.450 --> 00:54:26.609
<v Speaker 1>put here. It's gonna first deploy Caverno. And

00:54:26.609 --> 00:54:28.690
<v Speaker 1>if here, like, I have, like, a second

00:54:29.010 --> 00:54:31.250
<v Speaker 1>after Caverno, here, I have, like, a second

00:54:31.250 --> 00:54:33.725
<v Speaker 1>hand chart. So the order in which Sveltos

00:54:33.725 --> 00:54:35.325
<v Speaker 1>is gonna be the it's gonna deploy the

00:54:35.325 --> 00:54:37.725
<v Speaker 1>resources that they first deployed Caverno,

00:54:37.725 --> 00:54:39.085
<v Speaker 1>then it passed to the second one, and

00:54:39.085 --> 00:54:40.205
<v Speaker 1>then it passed to the third one, and

00:54:40.205 --> 00:54:42.925
<v Speaker 1>so on. And same to successfully

00:54:42.925 --> 00:54:46.000
<v Speaker 0>deploy before moving through the list? Yes. Yes.

00:54:46.480 --> 00:54:48.080
<v Speaker 1>They will successfully deploy. Otherwise,

00:54:48.560 --> 00:54:50.160
<v Speaker 1>pretty much like if if you're three, like,

00:54:50.160 --> 00:54:51.520
<v Speaker 1>it's it will pretty much

00:54:52.400 --> 00:54:54.400
<v Speaker 1>first we have to successfully deploy before the

00:54:54.400 --> 00:54:56.720
<v Speaker 1>third one, like, it's it's installed. Otherwise, we'll

00:54:56.720 --> 00:54:57.920
<v Speaker 0>just before

00:54:58.320 --> 00:54:59.120
<v Speaker 0>customization

00:54:59.120 --> 00:54:59.680
<v Speaker 0>refs?

00:55:00.165 --> 00:55:01.205
<v Speaker 1>Oh, no. Essentially

00:55:02.325 --> 00:55:04.565
<v Speaker 1>no. So, essentially, the order is within any

00:55:04.565 --> 00:55:07.925
<v Speaker 1>section. So Right. End charts because pretty much

00:55:07.925 --> 00:55:10.005
<v Speaker 1>the way Sveltos does it, it's that

00:55:10.245 --> 00:55:10.805
<v Speaker 1>to

00:55:11.365 --> 00:55:12.085
<v Speaker 1>be fast,

00:55:12.490 --> 00:55:15.370
<v Speaker 1>what it does, like, it's it it

00:55:15.370 --> 00:55:17.770
<v Speaker 1>it takes, like, the end charts and deploys

00:55:17.770 --> 00:55:21.130
<v Speaker 1>the end charts. Sorry. And then in parallel,

00:55:21.130 --> 00:55:23.130
<v Speaker 1>it takes, like, those objects here and tries

00:55:23.130 --> 00:55:24.810
<v Speaker 1>to deploy this object here. And then it

00:55:24.810 --> 00:55:26.970
<v Speaker 1>takes something else and, you know, the customization

00:55:26.970 --> 00:55:29.335
<v Speaker 1>file and tries to deploy the customization file,

00:55:29.335 --> 00:55:31.335
<v Speaker 1>like, in parallel. So those things do a

00:55:31.335 --> 00:55:34.055
<v Speaker 1>customization for all of my CRDs,

00:55:34.055 --> 00:55:36.215
<v Speaker 0>that would have to be labels because

00:55:36.935 --> 00:55:38.935
<v Speaker 0>Yes. And then everything else that would be

00:55:38.935 --> 00:55:42.535
<v Speaker 0>ordered within helm and customized within the cluster

00:55:42.535 --> 00:55:43.255
<v Speaker 0>profile.

00:55:43.335 --> 00:55:45.800
<v Speaker 0>Okay. Got it. Yes. Absolutely. Yes.

00:55:46.280 --> 00:55:48.040
<v Speaker 1>Yeah. Or you pretty much will use the

00:55:48.040 --> 00:55:50.440
<v Speaker 1>classifier, like, to to put the order there.

00:55:50.440 --> 00:55:51.080
<v Speaker 0>Yeah.

00:55:51.400 --> 00:55:52.600
<v Speaker 0>Got it. Nice.

00:55:53.960 --> 00:55:55.320
<v Speaker 0>Yeah. I think I would have a cluster

00:55:55.320 --> 00:55:56.840
<v Speaker 0>profile for CRDs,

00:55:57.125 --> 00:55:58.005
<v Speaker 0>deploy

00:55:58.005 --> 00:56:00.405
<v Speaker 0>them. I have a classifier that one or

00:56:00.405 --> 00:56:02.484
<v Speaker 0>us for the CRDs and then applies the

00:56:02.484 --> 00:56:04.565
<v Speaker 0>labels that I need for my applications. I

00:56:04.565 --> 00:56:06.805
<v Speaker 0>think that's a pretty nice workflow.

00:56:07.605 --> 00:56:08.244
<v Speaker 0>Yes.

00:56:08.724 --> 00:56:09.365
<v Speaker 0>Thanks.

00:56:10.565 --> 00:56:11.970
<v Speaker 0>Okay. You said there was one more thing

00:56:11.970 --> 00:56:13.650
<v Speaker 0>you wanted to demo? Although we've got a

00:56:13.650 --> 00:56:15.890
<v Speaker 0>comment from Harsh just saying that's super cool.

00:56:15.890 --> 00:56:18.130
<v Speaker 0>So there we go. Oh, thank you. Thanks.

00:56:18.130 --> 00:56:19.090
<v Speaker 1>Thanks. Thank you.

00:56:19.890 --> 00:56:21.170
<v Speaker 1>Glad to hear that. Thanks.

00:56:22.545 --> 00:56:25.025
<v Speaker 1>Yeah. The if there are, like, more minutes,

00:56:25.025 --> 00:56:27.025
<v Speaker 1>I wanna show, like, the event

00:56:27.424 --> 00:56:28.865
<v Speaker 1>driven framework. So

00:56:29.585 --> 00:56:31.984
<v Speaker 1>as I mentioned, pretty much, like, Sveltos has

00:56:31.984 --> 00:56:33.984
<v Speaker 1>the ability to also deploy add ons in

00:56:33.984 --> 00:56:36.450
<v Speaker 1>response to events. So for instance here, like,

00:56:36.450 --> 00:56:37.890
<v Speaker 1>I'm gonna go, like, super fast on this

00:56:37.890 --> 00:56:39.490
<v Speaker 1>computer. Like I said, there are, like, only

00:56:39.490 --> 00:56:42.130
<v Speaker 1>few minutes left. But, essentially, there is a

00:56:42.130 --> 00:56:44.530
<v Speaker 1>concept of event source. So in this case,

00:56:44.530 --> 00:56:45.970
<v Speaker 1>what I'm saying is, like, it's

00:56:46.930 --> 00:56:48.930
<v Speaker 1>it's if there is service

00:56:49.330 --> 00:56:52.655
<v Speaker 1>with this label here, Sveltos functional verification,

00:56:52.895 --> 00:56:55.695
<v Speaker 1>this event, this is an event. Right? And

00:56:55.695 --> 00:56:57.775
<v Speaker 1>now I have the second CRB which says,

00:56:57.775 --> 00:56:58.175
<v Speaker 1>like,

00:56:58.655 --> 00:57:01.375
<v Speaker 1>look for this event here. This is like

00:57:01.455 --> 00:57:03.615
<v Speaker 1>this is referencing this event here. So it's

00:57:03.615 --> 00:57:05.640
<v Speaker 1>saying, like, look for this event in all

00:57:05.640 --> 00:57:07.640
<v Speaker 1>the cluster which have this level here.

00:57:08.119 --> 00:57:09.240
<v Speaker 1>And if

00:57:09.559 --> 00:57:11.480
<v Speaker 1>you see this event happening in any of

00:57:11.480 --> 00:57:13.559
<v Speaker 1>those clusters, I want you to deploy the

00:57:13.559 --> 00:57:15.480
<v Speaker 1>content of this config map here. And the

00:57:15.480 --> 00:57:17.640
<v Speaker 1>content of the config map is a network

00:57:17.640 --> 00:57:19.559
<v Speaker 1>policy, right, which is

00:57:20.005 --> 00:57:23.125
<v Speaker 1>using some information coming from, you know, the

00:57:23.125 --> 00:57:23.925
<v Speaker 1>service,

00:57:23.925 --> 00:57:24.645
<v Speaker 1>which is

00:57:25.445 --> 00:57:26.565
<v Speaker 1>matching event.

00:57:27.685 --> 00:57:30.085
<v Speaker 1>So I will deploy

00:57:30.085 --> 00:57:32.165
<v Speaker 1>this going to the managed cluster.

00:57:33.420 --> 00:57:35.340
<v Speaker 1>I'm deploying this into the managed cluster.

00:57:35.500 --> 00:57:37.260
<v Speaker 1>Now if, again, if I look at the

00:57:37.260 --> 00:57:38.300
<v Speaker 1>add ons,

00:57:38.380 --> 00:57:40.460
<v Speaker 1>nothing is changing because so far, too much,

00:57:40.460 --> 00:57:43.020
<v Speaker 1>I have, like, no such service deployed anywhere.

00:57:43.260 --> 00:57:45.740
<v Speaker 1>But now I do have

00:57:47.125 --> 00:57:49.525
<v Speaker 1>okay. Yes. I do have a a service

00:57:49.525 --> 00:57:51.365
<v Speaker 1>example. You know, it's

00:57:51.765 --> 00:57:54.005
<v Speaker 1>very stupid example, but the important part is

00:57:54.005 --> 00:57:55.525
<v Speaker 1>that this is a service which is has

00:57:55.525 --> 00:57:57.445
<v Speaker 1>the right label, so it's matching the event

00:57:57.445 --> 00:57:58.085
<v Speaker 1>that I defined.

00:57:58.590 --> 00:58:00.910
<v Speaker 1>So for instance, I can deploy this one

00:58:00.910 --> 00:58:03.390
<v Speaker 1>to the oh, no. Cluster two. I'll just

00:58:03.390 --> 00:58:04.910
<v Speaker 1>deploy it to cluster two.

00:58:05.150 --> 00:58:05.950
<v Speaker 1>Once

00:58:05.950 --> 00:58:08.190
<v Speaker 1>again, nothing is there yet. It's like there's

00:58:08.190 --> 00:58:10.750
<v Speaker 1>nothing. So now I'm going to deploy this

00:58:10.750 --> 00:58:12.910
<v Speaker 1>one to cluster two. So to config.

00:58:13.315 --> 00:58:14.275
<v Speaker 1>Git config.

00:58:17.475 --> 00:58:17.875
<v Speaker 0>Git

00:58:24.035 --> 00:58:24.755
<v Speaker 1>git

00:58:26.780 --> 00:58:29.180
<v Speaker 1>Config. K. I'm gonna go let you keep

00:58:29.180 --> 00:58:32.619
<v Speaker 1>a dollar tie of this example service. So

00:58:32.619 --> 00:58:35.340
<v Speaker 1>I'm deploying this example service into the

00:58:29.075 --> 00:58:29.315
<v Speaker 1>config.

00:58:36.300 --> 00:58:37.340
<v Speaker 1>cluster two.

00:58:37.580 --> 00:58:41.420
<v Speaker 1>And now I what I expect is that

00:58:42.715 --> 00:58:46.075
<v Speaker 1>Sveltos should detect that this event has up

00:58:46.474 --> 00:58:48.315
<v Speaker 1>and, like, just in this cluster here and

00:58:48.315 --> 00:58:50.474
<v Speaker 1>should deploy, a network policy in this cluster.

00:58:50.474 --> 00:58:52.875
<v Speaker 1>So just gonna give it

00:58:54.099 --> 00:58:55.220
<v Speaker 1>sometimes to

00:58:55.460 --> 00:58:57.380
<v Speaker 0>So how is the case a little low.

00:58:57.460 --> 00:59:00.740
<v Speaker 0>Event add on different from a deployed resource

00:59:00.740 --> 00:59:01.620
<v Speaker 0>classifier?

00:59:01.780 --> 00:59:03.220
<v Speaker 0>Like, how what's how do you know when

00:59:03.220 --> 00:59:04.580
<v Speaker 0>to use either one?

00:59:05.780 --> 00:59:06.580
<v Speaker 1>It's

00:59:06.740 --> 00:59:07.700
<v Speaker 1>it's it's

00:59:08.265 --> 00:59:09.305
<v Speaker 1>I would say, like, it's

00:59:09.865 --> 00:59:12.345
<v Speaker 1>the the only difference, it's whether

00:59:12.345 --> 00:59:13.545
<v Speaker 1>you want to

00:59:13.865 --> 00:59:16.425
<v Speaker 1>I would say that you use the classifier

00:59:16.585 --> 00:59:18.744
<v Speaker 1>when you want Sveltos to manage the labels

00:59:18.744 --> 00:59:19.465
<v Speaker 1>for you.

00:59:20.105 --> 00:59:24.025
<v Speaker 1>And you use this event mechanism when you

00:59:23.340 --> 00:59:26.060
<v Speaker 1>don't want Sveltos to touch the cluster labels,

00:59:26.540 --> 00:59:28.780
<v Speaker 1>but you want Sveltos to see deploy your

00:59:28.780 --> 00:59:30.220
<v Speaker 1>own in response to events.

00:59:30.540 --> 00:59:32.300
<v Speaker 1>So because for instance, if you look here,

00:59:32.300 --> 00:59:32.780
<v Speaker 1>right,

00:59:33.180 --> 00:59:34.060
<v Speaker 1>at the

00:59:34.860 --> 00:59:37.905
<v Speaker 1>event based alone. Right? I'm not telling Sveltos

00:59:37.905 --> 00:59:40.545
<v Speaker 1>to add any labels. I'm saying, like, look

00:59:40.545 --> 00:59:42.945
<v Speaker 1>at all the cluster which add this label

00:59:42.945 --> 00:59:43.505
<v Speaker 1>here,

00:59:43.905 --> 00:59:45.585
<v Speaker 1>environment functional verification.

00:59:45.985 --> 00:59:47.985
<v Speaker 1>And if you see these events, then deploy

00:59:47.985 --> 00:59:50.305
<v Speaker 1>those around here. So the difference is

00:59:50.720 --> 00:59:54.000
<v Speaker 1>purely whether you want Sveltos to manage the

00:59:54.000 --> 00:59:57.039
<v Speaker 1>cluster labels for you or you simply want

00:59:57.039 --> 00:59:58.720
<v Speaker 1>Sveltos to react to events.

01:00:00.319 --> 01:00:01.599
<v Speaker 1>That is pretty much what will say the

01:00:01.599 --> 01:00:04.240
<v Speaker 1>only difference. The outcome is the same. Adults

01:00:04.240 --> 01:00:06.400
<v Speaker 1>are deployed in response to

01:00:07.095 --> 01:00:09.015
<v Speaker 1>cluster runtime state changing.

01:00:09.255 --> 01:00:10.535
<v Speaker 1>Okay. Got it.

01:00:11.015 --> 01:00:13.495
<v Speaker 1>So if we look here, yes. Now we

01:00:13.495 --> 01:00:15.895
<v Speaker 1>see that pretty much there is a network

01:00:15.895 --> 01:00:17.895
<v Speaker 1>policy which has been installed just like in

01:00:17.895 --> 01:00:19.655
<v Speaker 1>this cluster here and nowhere else.

01:00:20.220 --> 01:00:22.380
<v Speaker 1>Because, you know, Sveltos detected that there is

01:00:22.540 --> 01:00:23.980
<v Speaker 1>the this event has happened, like, in this

01:00:23.980 --> 01:00:26.140
<v Speaker 1>cluster, and so it's gonna deploy the onset

01:00:26.540 --> 01:00:28.460
<v Speaker 1>we told Sveltos to to deploy in the

01:00:28.460 --> 01:00:29.100
<v Speaker 1>cluster.

01:00:29.500 --> 01:00:31.260
<v Speaker 0>What happens if you delete the surface?

01:00:33.245 --> 01:00:36.045
<v Speaker 1>It should delete this add on here. So

01:00:36.045 --> 01:00:37.165
<v Speaker 1>we can do that.

01:00:38.525 --> 01:00:40.125
<v Speaker 1>So we can

01:00:41.725 --> 01:00:44.045
<v Speaker 1>apply it and then delete.

01:00:44.205 --> 01:00:45.885
<v Speaker 0>No pressure. But the service

01:00:46.630 --> 01:00:48.230
<v Speaker 1>the service has been deleted,

01:00:48.310 --> 01:00:49.110
<v Speaker 1>and, hopefully,

01:00:51.030 --> 01:00:53.670
<v Speaker 1>we should see that, yes, my Sveltos detected,

01:00:53.670 --> 01:00:55.430
<v Speaker 1>but it's not too much anymore, and so

01:00:55.430 --> 01:00:57.510
<v Speaker 1>I removed, like, the network policy from the

01:00:57.510 --> 01:00:57.910
<v Speaker 1>cluster.

01:00:58.545 --> 01:01:00.625
<v Speaker 0>Yeah. So behind the scenes, that event add

01:01:00.625 --> 01:01:02.865
<v Speaker 0>on detected the service, and it looks like

01:01:02.865 --> 01:01:05.424
<v Speaker 0>it created a class a dynamic cluster profile.

01:01:05.424 --> 01:01:07.825
<v Speaker 0>Is that right? Yes. Yes. Absolutely. Yes. You're

01:01:07.825 --> 01:01:08.944
<v Speaker 1>right. When pretty much like

01:01:10.065 --> 01:01:11.984
<v Speaker 1>it created, like, a cluster profile with the

01:01:11.984 --> 01:01:14.230
<v Speaker 1>list of add ons that you listed in

01:01:14.230 --> 01:01:16.470
<v Speaker 1>the event based add on, and then you

01:01:16.470 --> 01:01:17.990
<v Speaker 1>deploy those ones here.

01:01:18.390 --> 01:01:20.150
<v Speaker 1>Because you already know pretty much, like, in

01:01:20.150 --> 01:01:22.470
<v Speaker 1>the the the cluster work to deploy.

01:01:23.190 --> 01:01:24.790
<v Speaker 1>But it did deploy just in that cluster.

01:01:24.790 --> 01:01:26.870
<v Speaker 1>So it cleared, like, a cluster profile just

01:01:26.870 --> 01:01:27.910
<v Speaker 1>for that cluster there.

01:01:29.785 --> 01:01:31.305
<v Speaker 0>Very cool. I like that.

01:01:32.025 --> 01:01:32.665
<v Speaker 1>Thanks.

01:01:33.145 --> 01:01:34.105
<v Speaker 1>Yeah. That was

01:01:35.385 --> 01:01:37.385
<v Speaker 1>it for the demo. I'll

01:01:37.785 --> 01:01:39.545
<v Speaker 1>stop sharing so I can

01:01:40.105 --> 01:01:41.305
<v Speaker 1>see your face again.

01:01:42.720 --> 01:01:43.440
<v Speaker 0>Okay.

01:01:43.760 --> 01:01:45.920
<v Speaker 0>Harsh asked the final question and was just

01:01:45.920 --> 01:01:46.720
<v Speaker 0>curious

01:01:47.200 --> 01:01:49.760
<v Speaker 0>if we have multiple cluster profiles to those

01:01:49.760 --> 01:01:51.040
<v Speaker 0>run-in parallel

01:01:51.600 --> 01:01:53.760
<v Speaker 0>if the labels exist. They do run-in they

01:01:53.760 --> 01:01:55.760
<v Speaker 1>do run-in parallel, but Sveltos is an internal

01:01:55.760 --> 01:01:58.160
<v Speaker 1>mechanism because if you have multiple cluster profile,

01:01:59.035 --> 01:02:01.115
<v Speaker 1>If you have no misconfiguration, that's fine. They

01:02:01.115 --> 01:02:02.715
<v Speaker 1>will done in parallel. They will deploy all

01:02:02.715 --> 01:02:04.555
<v Speaker 1>things in parallel. All good.

01:02:05.035 --> 01:02:06.715
<v Speaker 1>If there is a misconfiguration,

01:02:06.715 --> 01:02:07.515
<v Speaker 1>for instance,

01:02:07.915 --> 01:02:09.595
<v Speaker 1>you have a cluster profile that says, like,

01:02:09.595 --> 01:02:10.315
<v Speaker 1>deploy

01:02:10.395 --> 01:02:11.915
<v Speaker 1>Elm Caverno,

01:02:11.915 --> 01:02:12.555
<v Speaker 1>Elm version

01:02:13.280 --> 01:02:15.200
<v Speaker 1>three point zero point one in this cluster,

01:02:15.200 --> 01:02:16.160
<v Speaker 1>in this namespace.

01:02:16.400 --> 01:02:18.079
<v Speaker 1>And you have another cluster profile that says

01:02:18.079 --> 01:02:19.920
<v Speaker 1>in the same namespace, in the same cluster

01:02:19.920 --> 01:02:21.680
<v Speaker 1>deploy Caverno version

01:02:21.839 --> 01:02:23.280
<v Speaker 1>2.7.

01:02:23.280 --> 01:02:24.960
<v Speaker 1>Clearly, that is a misconfiguration, right, because you

01:02:24.960 --> 01:02:26.400
<v Speaker 1>can have only one, right, in the very

01:02:26.400 --> 01:02:29.115
<v Speaker 1>same namespace. And so what Sveltos does is

01:02:29.115 --> 01:02:31.035
<v Speaker 1>the text that that is a misconfiguration.

01:02:31.115 --> 01:02:32.715
<v Speaker 1>So the first cluster profile

01:02:32.875 --> 01:02:35.835
<v Speaker 1>can go and deploy the cavernium charts. And

01:02:35.835 --> 01:02:37.675
<v Speaker 1>on the second cluster profile, you will have,

01:02:37.675 --> 01:02:38.155
<v Speaker 1>like,

01:02:38.555 --> 01:02:39.835
<v Speaker 1>an error message saying,

01:02:40.599 --> 01:02:43.480
<v Speaker 1>these other cluster profiles managing

01:02:43.480 --> 01:02:46.040
<v Speaker 1>this cavernal chart. So you

01:02:46.359 --> 01:02:48.680
<v Speaker 1>wanna make sure. So it's actually pointing you

01:02:48.680 --> 01:02:50.839
<v Speaker 1>to where the misconfiguration is, where the conflict

01:02:50.839 --> 01:02:52.359
<v Speaker 1>is. So it gives you the right information

01:02:52.359 --> 01:02:55.240
<v Speaker 1>so you can easily fix the configuration.

01:02:56.484 --> 01:02:58.165
<v Speaker 1>Cool. But they do run-in parallel.

01:03:00.005 --> 01:03:02.484
<v Speaker 0>Nice. Yeah. It's it's a really nice project.

01:03:02.484 --> 01:03:04.244
<v Speaker 0>So thank you for coming on and sharing

01:03:04.244 --> 01:03:05.285
<v Speaker 0>it. I've kinda

01:03:05.685 --> 01:03:07.445
<v Speaker 0>mentally went through a bit of a journey.

01:03:07.445 --> 01:03:08.725
<v Speaker 0>At the start, I thought,

01:03:09.279 --> 01:03:10.960
<v Speaker 0>you know, this is and they get up

01:03:10.960 --> 01:03:13.440
<v Speaker 0>space. It competes with flux and Argo, but

01:03:13.440 --> 01:03:15.680
<v Speaker 0>I've kind of finished thinking that's not where

01:03:15.680 --> 01:03:18.079
<v Speaker 0>it is at all. It's a completely different

01:03:18.079 --> 01:03:18.800
<v Speaker 0>layer.

01:03:19.440 --> 01:03:21.039
<v Speaker 0>I actually see a world where I could

01:03:21.039 --> 01:03:24.224
<v Speaker 0>have Sveltos doing the classifiers,

01:03:24.224 --> 01:03:26.305
<v Speaker 0>labeling clusters and then as part of the

01:03:26.305 --> 01:03:27.985
<v Speaker 0>cluster profiles deploying,

01:03:28.305 --> 01:03:28.945
<v Speaker 0>you know,

01:03:29.265 --> 01:03:32.625
<v Speaker 0>flux resources or Argo CD resources to other

01:03:32.625 --> 01:03:34.705
<v Speaker 0>clusters as well and doing a handoff to

01:03:34.705 --> 01:03:36.550
<v Speaker 0>a certain way. And I think the really

01:03:36.550 --> 01:03:38.950
<v Speaker 0>neat thing about Sveltos is that dynamic nature,

01:03:38.950 --> 01:03:41.349
<v Speaker 0>the classifiers, the event based add ons, even

01:03:41.349 --> 01:03:42.710
<v Speaker 0>the ability to inject a little bit of

01:03:42.710 --> 01:03:44.230
<v Speaker 0>Lua. I love that as well. Like, I'm

01:03:44.230 --> 01:03:46.069
<v Speaker 0>a huge Lua fan. So, like, all these

01:03:46.069 --> 01:03:48.710
<v Speaker 0>things working together That's great. Yeah. Just give

01:03:48.710 --> 01:03:49.990
<v Speaker 0>you this really nice

01:03:50.895 --> 01:03:53.215
<v Speaker 0>little dynamic run time on top of the

01:03:53.215 --> 01:03:55.055
<v Speaker 0>fleet or Kubernetes clusters.

01:03:55.055 --> 01:03:56.655
<v Speaker 0>Something I haven't seen like, I don't know

01:03:56.655 --> 01:03:58.815
<v Speaker 0>if you remember the the gate project

01:03:58.815 --> 01:04:00.815
<v Speaker 0>from like five, six years ago.

01:04:01.135 --> 01:04:02.735
<v Speaker 0>It came out of Microsoft and it was

01:04:02.735 --> 01:04:06.175
<v Speaker 0>like a event based run time JavaScript framework

01:04:05.910 --> 01:04:08.230
<v Speaker 0>to handle and react to events within the

01:04:08.230 --> 01:04:10.630
<v Speaker 0>Kubernetes cluster. And Sveltos is bringing the best

01:04:10.630 --> 01:04:12.710
<v Speaker 0>bits of that back out in a really

01:04:12.710 --> 01:04:14.950
<v Speaker 0>neat way. So yeah. Thank you. Thank you.

01:04:14.950 --> 01:04:17.109
<v Speaker 1>No. Thanks. Yeah. I mean, I like as

01:04:17.109 --> 01:04:18.630
<v Speaker 1>I mentioned, like, I've been working, like, on

01:04:18.630 --> 01:04:20.869
<v Speaker 1>distributed systems. So when I start with Sveltos,

01:04:20.869 --> 01:04:21.670
<v Speaker 1>the idea was

01:04:22.365 --> 01:04:24.365
<v Speaker 1>I've seen, like, the set of problems, like,

01:04:24.365 --> 01:04:26.045
<v Speaker 1>in a different context, you know, like, a

01:04:26.045 --> 01:04:27.325
<v Speaker 1>a data center.

01:04:27.565 --> 01:04:30.125
<v Speaker 1>But but some of those problems here, like,

01:04:30.125 --> 01:04:31.245
<v Speaker 1>can be easily

01:04:31.485 --> 01:04:34.365
<v Speaker 1>applied to Kubernetes fleet of clusters if I

01:04:34.365 --> 01:04:36.445
<v Speaker 1>say that the controller that sends the controller

01:04:36.445 --> 01:04:38.870
<v Speaker 1>is the management cluster and the all these

01:04:38.870 --> 01:04:41.430
<v Speaker 1>switches are the separate, like, Kubernetes clusters here.

01:04:41.430 --> 01:04:43.030
<v Speaker 1>So, like, some of those problems here pretty

01:04:43.030 --> 01:04:45.270
<v Speaker 1>much can be brought into this context from

01:04:45.350 --> 01:04:48.070
<v Speaker 1>different context and then soft here. So

01:04:49.030 --> 01:04:50.870
<v Speaker 1>and it has, like, other features, like, also,

01:04:50.870 --> 01:04:53.665
<v Speaker 1>like, supports, like, multitenancy because sometimes, you know,

01:04:53.665 --> 01:04:55.425
<v Speaker 1>if you have a fleet of but in

01:04:55.425 --> 01:04:56.305
<v Speaker 1>these clusters,

01:04:56.545 --> 01:04:58.705
<v Speaker 1>sometimes you might wanna say it's like, you

01:04:59.025 --> 01:05:01.505
<v Speaker 1>can manage all the clusters which are with

01:05:01.505 --> 01:05:03.665
<v Speaker 1>these labels, and I can manage, a different

01:05:03.665 --> 01:05:05.540
<v Speaker 1>set of clusters. And so at that point,

01:05:05.540 --> 01:05:06.980
<v Speaker 1>there, pretty much it has a way to

01:05:06.980 --> 01:05:09.460
<v Speaker 1>say is, like, if I'm configuring something, it

01:05:09.460 --> 01:05:12.260
<v Speaker 1>verifies that I'm allowed to deploy those accounts

01:05:12.260 --> 01:05:15.220
<v Speaker 1>in those clusters, whether, like, US platform admin

01:05:15.220 --> 01:05:17.380
<v Speaker 1>has given me as a parent admin permission

01:05:17.380 --> 01:05:19.795
<v Speaker 1>to do those things or not. So Sveltos

01:05:19.795 --> 01:05:21.235
<v Speaker 1>like supports it as well.

01:05:21.795 --> 01:05:24.115
<v Speaker 0>Cool. I think we have two more questions,

01:05:24.115 --> 01:05:25.715
<v Speaker 0>one from Harsh and one from me. So

01:05:25.715 --> 01:05:28.595
<v Speaker 0>I'll throw Harsh's up first. How lightweight can

01:05:28.595 --> 01:05:30.515
<v Speaker 0>the management cluster be? Would it work on

01:05:30.515 --> 01:05:31.235
<v Speaker 0>any distribution?

01:05:31.930 --> 01:05:33.850
<v Speaker 0>Connect a bunch of operators to it without

01:05:33.850 --> 01:05:36.010
<v Speaker 0>worker nodes. So, like, can they run this

01:05:36.010 --> 01:05:38.970
<v Speaker 0>on just a single node control plane setup?

01:05:40.010 --> 01:05:42.490
<v Speaker 1>So let me see how many, like, nodes

01:05:42.490 --> 01:05:44.970
<v Speaker 1>I do work here. In the management cluster,

01:05:44.970 --> 01:05:46.010
<v Speaker 1>in this demo

01:05:46.175 --> 01:05:48.895
<v Speaker 1>here, I was doing, like, three clusters, and

01:05:48.895 --> 01:05:50.175
<v Speaker 1>I had only one

01:05:50.415 --> 01:05:52.975
<v Speaker 1>worker node and one control plane nodes, which

01:05:52.975 --> 01:05:54.815
<v Speaker 1>is running on a kind local. So, like,

01:05:54.815 --> 01:05:56.895
<v Speaker 1>it's even, like, limited the amount of CPU

01:05:56.895 --> 01:05:58.494
<v Speaker 1>and memory that you can take because otherwise,

01:05:58.494 --> 01:05:59.935
<v Speaker 1>was like nothing else would work on my

01:05:59.935 --> 01:06:00.415
<v Speaker 1>laptop. So

01:06:01.460 --> 01:06:02.020
<v Speaker 1>it should

01:06:02.500 --> 01:06:04.660
<v Speaker 1>honestly, like, again, I haven't

01:06:05.460 --> 01:06:07.540
<v Speaker 1>tested this scale with

01:06:07.700 --> 01:06:09.700
<v Speaker 1>more than tens of clusters.

01:06:09.859 --> 01:06:11.380
<v Speaker 1>So I don't know if you go, like,

01:06:11.380 --> 01:06:13.700
<v Speaker 1>into the hundreds what the problem would be.

01:06:13.875 --> 01:06:16.035
<v Speaker 1>Ideally, the design internal is done in a

01:06:16.035 --> 01:06:18.355
<v Speaker 1>way that eliminates the amount of operations that

01:06:18.355 --> 01:06:19.875
<v Speaker 1>it does in parallel, so it doesn't require,

01:06:19.875 --> 01:06:21.235
<v Speaker 1>like, too much operation. For instance, you can

01:06:21.235 --> 01:06:21.955
<v Speaker 1>configure, like

01:06:22.595 --> 01:06:24.035
<v Speaker 1>it has this concept of

01:06:24.435 --> 01:06:26.595
<v Speaker 1>a long queue job. Deploying an advance is

01:06:26.595 --> 01:06:28.580
<v Speaker 1>a long queue job. Right? So you can

01:06:28.580 --> 01:06:31.620
<v Speaker 1>tell Sveltos the maximum number of long queue

01:06:31.620 --> 01:06:33.620
<v Speaker 1>operation that you can have in parallel. So

01:06:33.620 --> 01:06:35.460
<v Speaker 1>if you have, like, 100 clusters that you're

01:06:35.460 --> 01:06:37.300
<v Speaker 1>managing and you're managing, like, one of configuration,

01:06:37.300 --> 01:06:39.060
<v Speaker 1>pretty much like if you say it's, like,

01:06:39.060 --> 01:06:41.140
<v Speaker 1>10 long queue operations can go in parallel,

01:06:41.140 --> 01:06:42.605
<v Speaker 1>that's what Sveltos gonna do. Like, it's gonna

01:06:42.605 --> 01:06:43.964
<v Speaker 1>run 10, and as soon as one is

01:06:43.964 --> 01:06:45.244
<v Speaker 1>done, it was gonna take the next one

01:06:45.244 --> 01:06:46.125
<v Speaker 1>and do it.

01:06:46.684 --> 01:06:47.244
<v Speaker 1>So

01:06:47.645 --> 01:06:50.924
<v Speaker 1>it potentially has the way, like, of scaling

01:06:50.924 --> 01:06:51.885
<v Speaker 1>well because

01:06:52.765 --> 01:06:55.670
<v Speaker 1>but even Tesla, like if someone is is,

01:06:55.670 --> 01:06:56.150
<v Speaker 1>like,

01:06:56.710 --> 01:06:58.470
<v Speaker 1>hundreds of clusters and want to try, like,

01:06:58.470 --> 01:07:00.869
<v Speaker 1>a gladly get any bug and fix it

01:07:00.869 --> 01:07:02.789
<v Speaker 1>and improve it. But I don't have, like,

01:07:02.789 --> 01:07:05.109
<v Speaker 1>that many clusters to to try. Alright. Awesome.

01:07:05.510 --> 01:07:07.029
<v Speaker 0>I hope that answers your question, Harsh.

01:07:07.704 --> 01:07:09.464
<v Speaker 0>So let's finish up with why don't you

01:07:09.464 --> 01:07:12.025
<v Speaker 0>tell us what's coming next for the the

01:07:12.025 --> 01:07:14.265
<v Speaker 0>project? And if you wanna share, where did

01:07:14.265 --> 01:07:15.385
<v Speaker 0>the name come from?

01:07:16.825 --> 01:07:18.425
<v Speaker 1>The name come from because

01:07:18.905 --> 01:07:20.025
<v Speaker 1>I was

01:07:20.820 --> 01:07:24.660
<v Speaker 1>discussing with another guy, which is

01:07:26.420 --> 01:07:28.580
<v Speaker 1>and he mentioned pretty much, like, he loves

01:07:29.060 --> 01:07:30.260
<v Speaker 1>boats, and

01:07:31.060 --> 01:07:33.460
<v Speaker 1>he told me that Sveltos

01:07:33.460 --> 01:07:35.060
<v Speaker 1>in ancient Greek

01:07:35.255 --> 01:07:36.055
<v Speaker 1>means

01:07:36.855 --> 01:07:37.735
<v Speaker 1>a fleet,

01:07:37.975 --> 01:07:40.135
<v Speaker 1>and that's pretty much, like, why I took,

01:07:40.135 --> 01:07:42.215
<v Speaker 1>like, the project Sveltos. It's like, oh, yeah.

01:07:42.215 --> 01:07:44.615
<v Speaker 1>Managing, a fleet of clusters. It means, like,

01:07:44.615 --> 01:07:45.655
<v Speaker 1>fleet at least

01:07:47.015 --> 01:07:49.570
<v Speaker 1>unless someone I I trusted this guy, so

01:07:49.570 --> 01:07:51.170
<v Speaker 1>I hope that I'm not

01:07:52.290 --> 01:07:54.050
<v Speaker 1>it's the right information or not.

01:07:54.930 --> 01:07:57.090
<v Speaker 1>With respect to the set of features,

01:07:57.250 --> 01:07:58.530
<v Speaker 1>I do have, like,

01:07:59.010 --> 01:08:00.450
<v Speaker 1>list I can tell you, like, the one

01:08:00.450 --> 01:08:03.205
<v Speaker 1>that I'm currently working on. Essentially, I want

01:08:03.205 --> 01:08:04.885
<v Speaker 1>Sveltos to also

01:08:04.885 --> 01:08:06.325
<v Speaker 1>take care of

01:08:06.885 --> 01:08:09.205
<v Speaker 1>let's say that you are deploying a deployment

01:08:09.205 --> 01:08:11.605
<v Speaker 1>or a stateful site with Sveltos,

01:08:11.685 --> 01:08:12.485
<v Speaker 1>and it's

01:08:13.525 --> 01:08:16.300
<v Speaker 1>mounting a config map or a secret, which

01:08:16.300 --> 01:08:18.939
<v Speaker 1>is also might also be deployed or not

01:08:18.939 --> 01:08:20.859
<v Speaker 1>by Sveltos. What I want you what I

01:08:20.859 --> 01:08:22.699
<v Speaker 1>want Sveltos to do is to detect when

01:08:22.699 --> 01:08:24.619
<v Speaker 1>the config map, it's changed

01:08:25.260 --> 01:08:25.979
<v Speaker 1>and

01:08:26.060 --> 01:08:26.859
<v Speaker 1>reload

01:08:27.179 --> 01:08:30.140
<v Speaker 1>the trigger a rolling upgrade of the deployment.

01:08:30.365 --> 01:08:32.045
<v Speaker 1>This is actually a feedback that I got,

01:08:32.045 --> 01:08:33.725
<v Speaker 1>like, from the team.

01:08:34.365 --> 01:08:35.005
<v Speaker 1>So,

01:08:35.564 --> 01:08:37.564
<v Speaker 1>you know, it's a thank to them,

01:08:38.045 --> 01:08:39.965
<v Speaker 1>Dario and team.

01:08:40.685 --> 01:08:42.285
<v Speaker 1>And it made a lot of sense, so

01:08:42.285 --> 01:08:43.805
<v Speaker 1>that's the one I'm working on pretty much.

01:08:43.805 --> 01:08:45.725
<v Speaker 1>Like, so you don't have to worry about

01:08:46.779 --> 01:08:49.260
<v Speaker 1>if you have a a certificate in a

01:08:49.260 --> 01:08:50.939
<v Speaker 1>config map and a deployment which is mounting

01:08:50.939 --> 01:08:52.059
<v Speaker 1>that certificate

01:08:52.140 --> 01:08:54.300
<v Speaker 1>and you rotate that certificate. So

01:08:55.100 --> 01:08:57.499
<v Speaker 1>Sveltos will be able to automatically

01:08:57.819 --> 01:09:00.540
<v Speaker 1>trigger a rolling update upgrade of your deployment

01:09:00.540 --> 01:09:02.415
<v Speaker 1>as soon as this the text that the

01:09:02.415 --> 01:09:04.415
<v Speaker 1>config map is upgraded in the managed cluster.

01:09:04.415 --> 01:09:05.455
<v Speaker 1>So you don't have to worry about that

01:09:05.455 --> 01:09:07.054
<v Speaker 1>as well. Because I I think, like, all

01:09:07.054 --> 01:09:09.694
<v Speaker 1>those problems here are every time we have

01:09:09.694 --> 01:09:11.534
<v Speaker 1>to ask the admin to

01:09:11.935 --> 01:09:14.810
<v Speaker 1>do something in response to another event, it's

01:09:14.810 --> 01:09:16.890
<v Speaker 1>when it becomes a real problem because, like,

01:09:17.050 --> 01:09:17.770
<v Speaker 1>at least

01:09:18.090 --> 01:09:19.609
<v Speaker 1>I have, like, a

01:09:20.810 --> 01:09:23.210
<v Speaker 1>short span attention, and I

01:09:24.170 --> 01:09:25.850
<v Speaker 1>I will pretty much, like, mess it up,

01:09:25.850 --> 01:09:28.090
<v Speaker 1>like, unless there is

01:09:28.734 --> 01:09:31.135
<v Speaker 1>Sveltos or something else behind the scene that

01:09:31.135 --> 01:09:32.175
<v Speaker 1>takes care of

01:09:33.135 --> 01:09:35.694
<v Speaker 0>Okay. That for me. Alright. We had a

01:09:35.694 --> 01:09:37.535
<v Speaker 0>question sneaking at the end there that'll throw

01:09:37.535 --> 01:09:38.895
<v Speaker 0>up in the screen. And I'm really sorry.

01:09:38.895 --> 01:09:40.175
<v Speaker 0>I don't wanna try and pronounce that name

01:09:40.175 --> 01:09:41.854
<v Speaker 0>because I'll I'll make a mess of it.

01:09:41.854 --> 01:09:44.130
<v Speaker 0>But the question is, can a cluster profile

01:09:44.130 --> 01:09:45.649
<v Speaker 0>use more than one helm chart and how

01:09:45.649 --> 01:09:47.410
<v Speaker 0>does Sveltos behave in the case that it

01:09:47.410 --> 01:09:48.930
<v Speaker 0>fails to deploy one? Does it roll back

01:09:48.930 --> 01:09:50.930
<v Speaker 0>all the changes? We kinda covered this a

01:09:50.930 --> 01:09:52.210
<v Speaker 0>little bit, but maybe you could go into

01:09:52.210 --> 01:09:53.649
<v Speaker 0>it in a bit more detail.

01:09:53.890 --> 01:09:55.810
<v Speaker 1>So, yeah, I see, like, his name is

01:09:55.810 --> 01:09:57.969
<v Speaker 1>Julio. Julio. He can yeah.

01:09:58.495 --> 01:09:59.614
<v Speaker 1>He can deploy

01:10:00.335 --> 01:10:03.054
<v Speaker 1>he can reference more than one end chart.

01:10:03.775 --> 01:10:04.335
<v Speaker 1>And

01:10:05.215 --> 01:10:06.175
<v Speaker 1>the order,

01:10:06.335 --> 01:10:08.415
<v Speaker 1>it's sequential. So if you have, like, three

01:10:08.415 --> 01:10:10.575
<v Speaker 1>end charts, we'll deploy the first. And only

01:10:10.575 --> 01:10:12.335
<v Speaker 1>if the first is successfully deployed, it will

01:10:12.335 --> 01:10:13.695
<v Speaker 1>deploy the second. And only if the second

01:10:13.695 --> 01:10:15.340
<v Speaker 1>is successfully deployed, it will go on the

01:10:15.340 --> 01:10:17.980
<v Speaker 1>third one. Let's say that I deployed the

01:10:17.980 --> 01:10:19.980
<v Speaker 1>first one and the second one failed.

01:10:20.140 --> 01:10:22.620
<v Speaker 1>No. It's gonna it's not going to roll

01:10:22.620 --> 01:10:24.699
<v Speaker 1>back. It it will keep

01:10:25.500 --> 01:10:26.780
<v Speaker 1>retrying,

01:10:28.140 --> 01:10:30.244
<v Speaker 1>trying to deploy the second one. So it

01:10:30.244 --> 01:10:32.885
<v Speaker 1>will deport what the error is. So if

01:10:33.204 --> 01:10:35.125
<v Speaker 1>any error pretty much that he sees, like,

01:10:35.125 --> 01:10:37.925
<v Speaker 1>it will deport back in the cluster summary

01:10:37.925 --> 01:10:39.925
<v Speaker 1>so you know exactly what it is spelling,

01:10:39.925 --> 01:10:41.204
<v Speaker 1>but it won't roll back. So it will

01:10:41.204 --> 01:10:43.364
<v Speaker 1>be, like, up to the customers. It's like,

01:10:43.890 --> 01:10:45.250
<v Speaker 1>okay. First

01:10:45.490 --> 01:10:45.969
<v Speaker 1>one

01:10:46.530 --> 01:10:49.170
<v Speaker 1>succeeded. Second, didn't succeed. So I'll just delete

01:10:49.170 --> 01:10:51.010
<v Speaker 1>the cluster profile, which will be drawn on

01:10:51.010 --> 01:10:52.850
<v Speaker 1>the deployed ones.

01:10:53.810 --> 01:10:55.570
<v Speaker 1>Because the idea is that it's they keep

01:10:55.570 --> 01:10:57.570
<v Speaker 1>retrying stuff. You know? The error may be

01:10:57.570 --> 01:10:58.770
<v Speaker 1>temporary, and

01:10:59.725 --> 01:11:01.965
<v Speaker 1>it will report the error on them. If

01:11:01.965 --> 01:11:04.205
<v Speaker 1>we can move forward, we move forward. Yeah.

01:11:04.205 --> 01:11:07.965
<v Speaker 0>It's Kubernetes. Everything's eventually consistent. So Yes. Absolutely.

01:11:09.325 --> 01:11:11.325
<v Speaker 0>Alright. Well, thank you for taking time out

01:11:11.325 --> 01:11:13.179
<v Speaker 0>of your day to to join us, preparing

01:11:13.179 --> 01:11:14.940
<v Speaker 0>that demo, going over the slides, all of

01:11:14.940 --> 01:11:16.699
<v Speaker 0>that was was fantastic. It was great to

01:11:16.699 --> 01:11:18.940
<v Speaker 0>see the project. I definitely have some use

01:11:18.940 --> 01:11:20.380
<v Speaker 0>cases that I'm gonna have to kick the

01:11:20.380 --> 01:11:22.139
<v Speaker 0>tires on it and play with. So, yeah.

01:11:22.139 --> 01:11:23.579
<v Speaker 0>Thank you for your time today. Thank

01:11:24.059 --> 01:11:25.739
<v Speaker 1>you. Thank you for having me here. Thanks.

01:11:25.739 --> 01:11:27.500
<v Speaker 0>Alright. Thank you everyone for watching. We'll see

01:11:27.500 --> 01:11:29.014
<v Speaker 0>you all next time. Have a great week

01:11:29.014 --> 01:11:30.294
<v Speaker 0>and a good weekend.

01:11:30.375 --> 01:11:30.935
<v Speaker 0>Adios.
