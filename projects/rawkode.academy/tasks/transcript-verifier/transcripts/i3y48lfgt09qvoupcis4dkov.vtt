WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: edf499ec-060c-4ca4-845b-2b9ebf1ca9ed
Created: 2025-04-29T17:26:55.206Z
Duration: 3333.8232
Channels: 1

00:00:54.730 --> 00:00:57.769
<v Speaker 0>Hello, and welcome to today's episode of Rawkode

00:00:57.769 --> 00:00:59.769
<v Speaker 0>Live at the Rawkode Academy.

00:00:59.769 --> 00:01:02.089
<v Speaker 0>I am, of course, your host, Rawkode.

00:01:02.570 --> 00:01:04.650
<v Speaker 0>Today, we are taking a look at Crossplane.

00:01:04.650 --> 00:01:06.250
<v Speaker 0>But before we do that, there's a little

00:01:06.250 --> 00:01:06.970
<v Speaker 0>bit of housekeeping.

00:01:07.475 --> 00:01:09.875
<v Speaker 0>First, please remember to subscribe to the channel,

00:01:09.875 --> 00:01:12.034
<v Speaker 0>click the bell, get notifications for all new

00:01:12.034 --> 00:01:12.835
<v Speaker 0>episodes,

00:01:13.155 --> 00:01:15.314
<v Speaker 0>and remember to thumb the video, share it,

00:01:15.314 --> 00:01:16.674
<v Speaker 0>comment, get involved.

00:01:17.155 --> 00:01:18.914
<v Speaker 0>If you wanna support the channel, there are

00:01:18.914 --> 00:01:21.634
<v Speaker 0>various membership options available. You can check them

00:01:21.634 --> 00:01:23.470
<v Speaker 0>out on the YouTube page where we have

00:01:23.470 --> 00:01:25.630
<v Speaker 0>some live courses currently in flight looking at

00:01:25.630 --> 00:01:26.830
<v Speaker 0>InfluxDB.

00:01:27.630 --> 00:01:29.790
<v Speaker 0>Also, we have a rather active Discord server

00:01:29.790 --> 00:01:31.470
<v Speaker 0>available at Rawkode.chat.

00:01:31.470 --> 00:01:33.150
<v Speaker 0>There's nearly 600 of us on there now

00:01:33.150 --> 00:01:36.270
<v Speaker 0>talking all things cloud native, Kubernetes, EBPF, and

00:01:36.270 --> 00:01:38.674
<v Speaker 0>everything in between. So come say hello and

00:01:38.674 --> 00:01:39.954
<v Speaker 0>I look forward to meeting you.

00:01:41.314 --> 00:01:43.475
<v Speaker 0>Today's session is about Crossplane.

00:01:43.475 --> 00:01:45.954
<v Speaker 0>And I am fortunate to be joined by

00:01:45.954 --> 00:01:48.594
<v Speaker 0>a developer advocate at Upbound, the maintainers of

00:01:48.594 --> 00:01:49.874
<v Speaker 0>the Crossplane project,

00:01:50.835 --> 00:01:53.500
<v Speaker 0>Victor Farsek. Hey, man. How are you? Oh,

00:01:53.500 --> 00:01:55.660
<v Speaker 1>very good. Thank you for caring me. No.

00:01:55.660 --> 00:01:57.820
<v Speaker 0>It's it's it's my pleasure. It's it's really

00:01:57.820 --> 00:01:59.580
<v Speaker 0>nice to be get to do something together.

00:01:59.580 --> 00:02:02.300
<v Speaker 0>I've enjoyed your your DevOps channel onto YouTube

00:02:02.300 --> 00:02:03.740
<v Speaker 0>for a while, so it's nice to have

00:02:03.740 --> 00:02:05.420
<v Speaker 0>you come over here and join us and

00:02:05.420 --> 00:02:06.140
<v Speaker 0>say hello.

00:02:07.784 --> 00:02:10.104
<v Speaker 0>For anyone that's not familiar, could you do

00:02:10.104 --> 00:02:11.864
<v Speaker 0>yourself a little bit of an introduction and

00:02:11.864 --> 00:02:12.825
<v Speaker 0>tell us who you are?

00:02:13.545 --> 00:02:16.585
<v Speaker 1>Sure. So my name is Victor Farcic.

00:02:16.905 --> 00:02:18.985
<v Speaker 1>I currently work in Upbound,

00:02:20.310 --> 00:02:22.310
<v Speaker 1>company behind Crossplane

00:02:22.310 --> 00:02:24.870
<v Speaker 1>or the main contributor to Crossplane,

00:02:25.190 --> 00:02:27.910
<v Speaker 1>and I'm a developer advocate. Now in the

00:02:27.910 --> 00:02:30.630
<v Speaker 1>past, I did basically everything because

00:02:30.950 --> 00:02:33.670
<v Speaker 1>my career can be qualified as Victor gets

00:02:33.670 --> 00:02:35.665
<v Speaker 1>bored within a year, and then it changes

00:02:35.665 --> 00:02:36.705
<v Speaker 1>what he does.

00:02:37.265 --> 00:02:39.105
<v Speaker 1>And that change is either

00:02:39.425 --> 00:02:41.905
<v Speaker 1>within a company, and then it ultimately I

00:02:41.905 --> 00:02:42.465
<v Speaker 1>I

00:02:43.585 --> 00:02:45.985
<v Speaker 1>reach a point where the the the there

00:02:45.985 --> 00:02:47.425
<v Speaker 1>were no there are no more things to

00:02:47.425 --> 00:02:48.865
<v Speaker 1>do in a company than I changed the

00:02:48.865 --> 00:02:49.105
<v Speaker 1>company.

00:02:49.860 --> 00:02:52.100
<v Speaker 1>Right? So I've been tech lead, programmer, I

00:02:52.100 --> 00:02:53.300
<v Speaker 1>mean, developer,

00:02:54.020 --> 00:02:54.900
<v Speaker 1>tester,

00:02:54.900 --> 00:02:55.700
<v Speaker 1>lead,

00:02:55.940 --> 00:02:58.100
<v Speaker 1>product something, whatever, everything,

00:02:58.100 --> 00:02:58.660
<v Speaker 1>basically.

00:02:59.300 --> 00:03:00.260
<v Speaker 1>Nice. And

00:03:01.060 --> 00:03:03.540
<v Speaker 1>now I I've been outbound mostly because

00:03:04.695 --> 00:03:07.255
<v Speaker 1>I've been following and using Crossplane for

00:03:07.495 --> 00:03:09.175
<v Speaker 1>at least a year before

00:03:09.255 --> 00:03:10.695
<v Speaker 1>I joined. And then

00:03:11.495 --> 00:03:14.215
<v Speaker 1>I innovate, told about guys kind of like,

00:03:14.215 --> 00:03:16.135
<v Speaker 1>you should employ me. I like this product.

00:03:17.870 --> 00:03:19.390
<v Speaker 0>I think that's great that you found a

00:03:19.390 --> 00:03:20.990
<v Speaker 0>product that you liked and then just was

00:03:20.990 --> 00:03:22.590
<v Speaker 0>like, yeah. I should go work there. Like,

00:03:22.590 --> 00:03:24.110
<v Speaker 0>that I mean, that's how you take your

00:03:24.110 --> 00:03:26.110
<v Speaker 0>your interest and your passion and apply it

00:03:26.110 --> 00:03:28.590
<v Speaker 0>in a really great way. So nice work.

00:03:29.390 --> 00:03:31.775
<v Speaker 0>Thank you. We got a hello from Russell

00:03:31.775 --> 00:03:34.255
<v Speaker 0>who is loving your energy. So thanks you

00:03:34.255 --> 00:03:36.415
<v Speaker 0>for that. Thank you, Russell. And Thomas Lav

00:03:36.415 --> 00:03:38.415
<v Speaker 0>from Croatia says, I

00:03:39.135 --> 00:03:39.775
<v Speaker 0>guess.

00:03:40.095 --> 00:03:41.775
<v Speaker 1>Oh, Thomas Lavie.

00:03:42.815 --> 00:03:43.775
<v Speaker 0>There we go. Nice.

00:03:44.920 --> 00:03:46.200
<v Speaker 0>Alright. So

00:03:46.360 --> 00:03:47.160
<v Speaker 0>why don't

00:03:48.040 --> 00:03:49.480
<v Speaker 0>we we mentioned this to you, so now

00:03:49.480 --> 00:03:51.160
<v Speaker 0>everyone knows exactly who you are. But maybe

00:03:51.160 --> 00:03:53.160
<v Speaker 0>people are not familiar with Crossplane.

00:03:53.720 --> 00:03:55.560
<v Speaker 0>You wanna give us what what's the elevator

00:03:55.560 --> 00:03:57.080
<v Speaker 0>pitch? What what is Crossplane?

00:03:58.325 --> 00:03:59.364
<v Speaker 1>Controlplane

00:03:59.364 --> 00:04:00.325
<v Speaker 1>for everything.

00:04:00.724 --> 00:04:02.885
<v Speaker 1>I'm not sure whether that's official picture or

00:04:02.885 --> 00:04:04.805
<v Speaker 1>whether that's on the website, but that's how

00:04:04.805 --> 00:04:06.725
<v Speaker 1>I would explain it. Right?

00:04:06.965 --> 00:04:07.525
<v Speaker 1>And

00:04:07.924 --> 00:04:08.485
<v Speaker 1>so

00:04:08.885 --> 00:04:11.100
<v Speaker 1>think of it this way. Right? When we

00:04:11.100 --> 00:04:12.300
<v Speaker 1>manage infrastructure

00:04:12.300 --> 00:04:13.260
<v Speaker 1>services

00:04:13.260 --> 00:04:14.380
<v Speaker 1>and whatnot,

00:04:14.380 --> 00:04:17.420
<v Speaker 1>we are all almost always using CLIs, right,

00:04:17.420 --> 00:04:18.779
<v Speaker 1>directly or indirectly.

00:04:18.940 --> 00:04:21.740
<v Speaker 1>You without naming products, you execute some command

00:04:21.740 --> 00:04:24.540
<v Speaker 1>in some CLI, and that CLI talks with

00:04:24.540 --> 00:04:25.100
<v Speaker 1>an API,

00:04:25.855 --> 00:04:27.295
<v Speaker 1>which can be AWS,

00:04:27.295 --> 00:04:28.495
<v Speaker 1>Azure, Google,

00:04:29.615 --> 00:04:32.175
<v Speaker 1>Alibaba, Kubernetes, whatever it is. Right?

00:04:32.815 --> 00:04:35.695
<v Speaker 1>And what people do not really, I I

00:04:35.695 --> 00:04:38.415
<v Speaker 1>I believe, comprehend completely is that behind that

00:04:38.415 --> 00:04:40.990
<v Speaker 1>API, there is always a cross play. Sorry.

00:04:40.990 --> 00:04:42.669
<v Speaker 1>There is always a control play.

00:04:44.189 --> 00:04:47.229
<v Speaker 1>Now everybody knows control play. That's Kubernetes. Right?

00:04:47.229 --> 00:04:49.150
<v Speaker 1>We know control play from there. But there

00:04:49.150 --> 00:04:50.990
<v Speaker 1>is a control play behind the API in

00:04:50.990 --> 00:04:53.150
<v Speaker 1>AWS. There is a control play behind

00:04:53.444 --> 00:04:55.525
<v Speaker 1>literally any any

00:04:55.525 --> 00:04:57.764
<v Speaker 1>cloud vendor, right, at least those that I

00:04:57.764 --> 00:04:58.324
<v Speaker 1>know.

00:04:58.805 --> 00:05:00.884
<v Speaker 1>Now what we are trying to do is

00:05:00.884 --> 00:05:02.805
<v Speaker 1>create a control plane

00:05:03.604 --> 00:05:05.365
<v Speaker 1>to manage all those control planes.

00:05:06.590 --> 00:05:09.310
<v Speaker 1>So because we feel that there is a

00:05:09.310 --> 00:05:11.790
<v Speaker 1>strong need for those things to be open

00:05:11.790 --> 00:05:12.510
<v Speaker 1>source,

00:05:12.750 --> 00:05:14.830
<v Speaker 1>and there is a lot of confusion

00:05:14.830 --> 00:05:17.470
<v Speaker 1>about not confusion, but complications. Right? I need

00:05:17.470 --> 00:05:19.070
<v Speaker 1>to do something in Kubernetes. I need to

00:05:19.070 --> 00:05:20.910
<v Speaker 1>do something in AWS, and then I need

00:05:20.910 --> 00:05:22.945
<v Speaker 1>to jump into Azure and then maybe some

00:05:22.945 --> 00:05:24.705
<v Speaker 1>on prem and so on and so forth.

00:05:26.065 --> 00:05:27.505
<v Speaker 1>And the major difference

00:05:27.745 --> 00:05:30.465
<v Speaker 1>why control plane is important

00:05:30.465 --> 00:05:31.185
<v Speaker 1>for

00:05:31.265 --> 00:05:31.745
<v Speaker 1>everything

00:05:33.520 --> 00:05:35.919
<v Speaker 1>be seen in Kubernetes. Right? We we are

00:05:36.159 --> 00:05:38.879
<v Speaker 1>we are moving away from the idea that

00:05:38.879 --> 00:05:42.400
<v Speaker 1>I should execute a command to create something.

00:05:42.639 --> 00:05:44.719
<v Speaker 1>It doesn't matter which tool they're using, right,

00:05:44.719 --> 00:05:46.719
<v Speaker 1>or to update something and so on and

00:05:46.719 --> 00:05:49.795
<v Speaker 1>so forth. We are now deeply into the

00:05:50.035 --> 00:05:52.515
<v Speaker 1>era where all those things are managed by

00:05:52.515 --> 00:05:55.635
<v Speaker 1>control planes because they're doing more than responding

00:05:55.635 --> 00:05:58.915
<v Speaker 1>to commands, like, something. Right? It's more like

00:05:58.915 --> 00:05:59.315
<v Speaker 1>continuously

00:05:59.955 --> 00:06:03.129
<v Speaker 1>monitoring the state of the the actual state

00:06:03.129 --> 00:06:06.410
<v Speaker 1>of something, comparing it with the currents with

00:06:06.410 --> 00:06:08.490
<v Speaker 1>the desired state, and making sure that all

00:06:08.490 --> 00:06:10.889
<v Speaker 1>those things are happening all the time. Independently

00:06:10.889 --> 00:06:13.210
<v Speaker 1>of which order we put things,

00:06:14.090 --> 00:06:16.250
<v Speaker 1>how we define as long as we define

00:06:16.250 --> 00:06:19.065
<v Speaker 1>the desired state, planes are managing those desired

00:06:19.065 --> 00:06:21.865
<v Speaker 1>states. Right? And that's simply that's happening already

00:06:21.865 --> 00:06:22.665
<v Speaker 1>right now.

00:06:23.384 --> 00:06:25.544
<v Speaker 1>Whether you know it or no, it's just

00:06:25.544 --> 00:06:28.025
<v Speaker 1>that we are trying to kind of create

00:06:28.025 --> 00:06:29.305
<v Speaker 1>an open standard

00:06:30.580 --> 00:06:31.220
<v Speaker 1>for

00:06:31.699 --> 00:06:33.620
<v Speaker 1>control plane that will manage

00:06:34.340 --> 00:06:36.580
<v Speaker 1>everything, give or take. Right?

00:06:38.020 --> 00:06:38.820
<v Speaker 0>Nice.

00:06:39.539 --> 00:06:40.100
<v Speaker 0>So

00:06:40.900 --> 00:06:42.740
<v Speaker 0>I guess, you know, a lot of people

00:06:43.555 --> 00:06:44.755
<v Speaker 0>now they know who you are, they know

00:06:44.755 --> 00:06:46.595
<v Speaker 0>what Crossplane is, but they may wanna compare

00:06:46.595 --> 00:06:48.275
<v Speaker 0>it to other tools that are on the

00:06:48.275 --> 00:06:50.595
<v Speaker 0>market. Is it fair to say that Crossplane

00:06:50.595 --> 00:06:52.435
<v Speaker 0>fits in that same space as

00:06:52.755 --> 00:06:54.355
<v Speaker 0>Terraform, Pulumi?

00:06:54.355 --> 00:06:56.355
<v Speaker 0>Is it different enough from them that you

00:06:56.355 --> 00:06:57.715
<v Speaker 0>think it comes into a new space? And

00:06:57.715 --> 00:06:59.580
<v Speaker 0>what would some of those differences be?

00:07:00.540 --> 00:07:01.100
<v Speaker 1>So

00:07:02.300 --> 00:07:04.300
<v Speaker 1>to begin with, currently, it is in the

00:07:04.300 --> 00:07:07.900
<v Speaker 1>same space as our, let's say, entry point

00:07:07.900 --> 00:07:09.980
<v Speaker 1>pitch head for Crossplane is

00:07:10.555 --> 00:07:11.835
<v Speaker 1>is infrastructure,

00:07:11.835 --> 00:07:15.275
<v Speaker 1>but we are definitely not aiming infrastructure

00:07:15.275 --> 00:07:16.395
<v Speaker 1>being the

00:07:16.635 --> 00:07:19.514
<v Speaker 1>the only thing that Crossplane manages, and and

00:07:19.514 --> 00:07:20.235
<v Speaker 1>it's not.

00:07:21.355 --> 00:07:22.955
<v Speaker 1>So the scope is different.

00:07:23.629 --> 00:07:25.150
<v Speaker 1>And on top of that, it's

00:07:26.669 --> 00:07:29.310
<v Speaker 1>the API is different as well because

00:07:29.389 --> 00:07:31.470
<v Speaker 1>one of the things that are very important

00:07:31.470 --> 00:07:33.310
<v Speaker 1>to us is that

00:07:33.470 --> 00:07:35.789
<v Speaker 1>there is a single API to manage

00:07:36.365 --> 00:07:38.445
<v Speaker 1>things. And when I say single API, I'm

00:07:38.445 --> 00:07:40.525
<v Speaker 1>not now talking about Crossplane. I'm talking about

00:07:40.525 --> 00:07:43.885
<v Speaker 1>Kubernetes API. Yeah. I believe that Kubernetes

00:07:44.685 --> 00:07:46.845
<v Speaker 1>but people ask me kind of, what is

00:07:46.845 --> 00:07:49.245
<v Speaker 1>the main advantage of Kubernetes? Usually, people think,

00:07:49.245 --> 00:07:51.710
<v Speaker 1>hey. It can run containers. Right? To me,

00:07:51.710 --> 00:07:54.270
<v Speaker 1>the main advantage is the scheduler and the

00:07:54.270 --> 00:07:56.110
<v Speaker 1>API that sits in front of it. Right?

00:07:56.110 --> 00:07:57.710
<v Speaker 1>That I can define things,

00:07:58.270 --> 00:07:59.630
<v Speaker 1>the state of things,

00:07:59.949 --> 00:08:02.750
<v Speaker 1>and Kubernetes can make sure that those things

00:08:02.750 --> 00:08:04.669
<v Speaker 1>are happening. And that's not only applying to

00:08:04.669 --> 00:08:07.875
<v Speaker 1>our to applications, but to everything. Even though

00:08:07.875 --> 00:08:08.995
<v Speaker 1>applications are

00:08:09.235 --> 00:08:12.435
<v Speaker 1>beachhead for just like beachhead for

00:08:13.075 --> 00:08:14.675
<v Speaker 1>Crossplane is infrastructure,

00:08:14.755 --> 00:08:16.435
<v Speaker 1>but not the end goal, I think that

00:08:16.435 --> 00:08:18.835
<v Speaker 1>the same holds true for Kubernetes and its

00:08:18.835 --> 00:08:19.555
<v Speaker 1>API.

00:08:19.875 --> 00:08:21.875
<v Speaker 1>Applications are only the first step

00:08:22.750 --> 00:08:26.030
<v Speaker 1>towards total domination of Kubernetes API. Right?

00:08:27.230 --> 00:08:27.950
<v Speaker 1>And

00:08:28.910 --> 00:08:32.510
<v Speaker 1>those another difference is the the control plane,

00:08:32.510 --> 00:08:34.190
<v Speaker 1>the scheduler that I was talking about.

00:08:35.404 --> 00:08:36.445
<v Speaker 1>When

00:08:36.445 --> 00:08:37.885
<v Speaker 1>you use other tools

00:08:38.284 --> 00:08:40.044
<v Speaker 1>or most of the other tools,

00:08:40.524 --> 00:08:43.325
<v Speaker 1>you execute some command and something happens Yep.

00:08:43.885 --> 00:08:46.285
<v Speaker 1>Somewhere in the cluster or in your infrastructure

00:08:46.285 --> 00:08:47.325
<v Speaker 1>or whatever you're managing.

00:08:47.850 --> 00:08:49.850
<v Speaker 1>In our case, there is a

00:08:50.170 --> 00:08:51.130
<v Speaker 1>scheduler

00:08:51.130 --> 00:08:54.410
<v Speaker 1>with the control plane, with reco continuous reconciliation,

00:08:54.410 --> 00:08:56.329
<v Speaker 1>drift detection, and all the things that you

00:08:56.329 --> 00:08:59.290
<v Speaker 1>expect from Kubernetes applications. So they just apply

00:08:59.290 --> 00:09:01.209
<v Speaker 1>to everything else. Right?

00:09:01.955 --> 00:09:03.875
<v Speaker 1>So the in my head, at least, there

00:09:03.875 --> 00:09:06.195
<v Speaker 1>is a huge difference between I want this

00:09:06.195 --> 00:09:07.395
<v Speaker 1>to happen now,

00:09:07.795 --> 00:09:09.315
<v Speaker 1>and I want this to

00:09:09.795 --> 00:09:12.515
<v Speaker 1>continue existing and being in certain state

00:09:12.675 --> 00:09:15.155
<v Speaker 1>forever and ever or or at least until

00:09:15.155 --> 00:09:16.355
<v Speaker 1>I change my desire.

00:09:17.529 --> 00:09:18.170
<v Speaker 1>Right?

00:09:18.890 --> 00:09:20.570
<v Speaker 0>Yeah. I think that's really important,

00:09:21.050 --> 00:09:23.210
<v Speaker 0>You know, if we talk about those Terraform

00:09:23.210 --> 00:09:25.529
<v Speaker 0>workflows right now, you know, Terraform only runs

00:09:25.529 --> 00:09:27.690
<v Speaker 0>when the user asks it to, when the

00:09:27.690 --> 00:09:30.330
<v Speaker 0>HCL has changed. Like, if I use Terraform

00:09:30.330 --> 00:09:33.370
<v Speaker 0>to spin up an s three bucket and

00:09:32.255 --> 00:09:33.855
<v Speaker 0>it finishes and then I go delete the

00:09:33.855 --> 00:09:35.375
<v Speaker 0>S3 bucket, I don't have an S3 bucket

00:09:35.375 --> 00:09:36.015
<v Speaker 0>anymore.

00:09:36.735 --> 00:09:38.255
<v Speaker 0>Is the Crossplane?

00:09:38.654 --> 00:09:41.615
<v Speaker 0>Have in fact, because it runs on Kubernetes,

00:09:41.615 --> 00:09:43.774
<v Speaker 0>it has that continuous reconciliation.

00:09:44.420 --> 00:09:47.300
<v Speaker 0>It's gonna detect the bucket disappeared and then

00:09:47.300 --> 00:09:49.300
<v Speaker 0>recreate it for me. And I think that's

00:09:49.300 --> 00:09:51.540
<v Speaker 0>almost a superpower to a certain degree. Like,

00:09:51.540 --> 00:09:53.380
<v Speaker 0>that's that's what I want for my infrastructure.

00:09:53.380 --> 00:09:55.940
<v Speaker 0>Right? I mean, everyone must want that.

00:09:56.420 --> 00:09:59.140
<v Speaker 1>Correct. I mean, think of it like

00:09:59.985 --> 00:10:02.065
<v Speaker 1>you can reframe it saying that what I

00:10:02.305 --> 00:10:04.625
<v Speaker 1>what I'm doing with my applications, want that

00:10:04.625 --> 00:10:05.665
<v Speaker 1>for infrastructure.

00:10:05.904 --> 00:10:07.825
<v Speaker 1>And what we're doing with applications I mean,

00:10:07.825 --> 00:10:09.904
<v Speaker 1>not everybody, but we are all moving into

00:10:09.904 --> 00:10:13.320
<v Speaker 1>into Kubernetes domain for, if not all workloads,

00:10:13.320 --> 00:10:15.080
<v Speaker 1>but for some. Right? And

00:10:15.400 --> 00:10:17.480
<v Speaker 1>the same example that you said would be,

00:10:17.480 --> 00:10:20.360
<v Speaker 1>hey. If I delete two pods of my

00:10:20.360 --> 00:10:21.960
<v Speaker 1>deployment in Kubernetes,

00:10:21.960 --> 00:10:24.600
<v Speaker 1>those two pods will be recreated because the

00:10:24.600 --> 00:10:27.240
<v Speaker 1>desired state is to have whatever the number

00:10:27.240 --> 00:10:29.845
<v Speaker 1>is. And we are just applying the same

00:10:29.845 --> 00:10:31.845
<v Speaker 1>logic on infrastructure and services.

00:10:32.885 --> 00:10:33.765
<v Speaker 0>Awesome.

00:10:34.005 --> 00:10:36.485
<v Speaker 0>We got a comment from Tim Martin there

00:10:36.485 --> 00:10:37.205
<v Speaker 0>saying

00:10:37.605 --> 00:10:40.245
<v Speaker 0>two of his YouTube Kubernetes favorites on the

00:10:40.245 --> 00:10:40.725
<v Speaker 0>same stream.

00:10:41.280 --> 00:10:43.520
<v Speaker 0>Sorry. We are crossing streams. I hope that's

00:10:43.520 --> 00:10:44.720
<v Speaker 0>alright. I don't I don't think we're gonna

00:10:44.720 --> 00:10:47.280
<v Speaker 0>cause, like, a a time space continuum problem

00:10:47.280 --> 00:10:48.240
<v Speaker 0>or anything.

00:10:48.560 --> 00:10:49.680
<v Speaker 0>Let's see.

00:10:50.480 --> 00:10:52.720
<v Speaker 1>It's still time. Thanks for the kind words,

00:10:52.720 --> 00:10:55.985
<v Speaker 0>Ty. We really appreciate it. Thank you. Alright.

00:10:56.305 --> 00:10:58.545
<v Speaker 0>Shall we show people a little bit of

00:10:58.545 --> 00:10:59.585
<v Speaker 0>a Crossplane?

00:11:00.225 --> 00:11:02.385
<v Speaker 0>Sure. Are we ready for this? Yeah. Yeah.

00:11:02.625 --> 00:11:04.945
<v Speaker 1>I am. Let me move the browser so

00:11:04.945 --> 00:11:05.985
<v Speaker 1>that you don't see

00:11:07.185 --> 00:11:10.370
<v Speaker 1>infinite can you see me now? Let me

00:11:10.370 --> 00:11:12.450
<v Speaker 0>pop this over to my other scene.

00:11:14.050 --> 00:11:16.450
<v Speaker 0>Awesome. Your terminal is now visible. You are

00:11:16.450 --> 00:11:17.730
<v Speaker 0>live. Take it away.

00:11:18.290 --> 00:11:19.490
<v Speaker 1>Okay. So

00:11:20.370 --> 00:11:22.610
<v Speaker 1>let's say that I have this definition,

00:11:23.214 --> 00:11:25.455
<v Speaker 1>GKE YAML. Right? I'm going to start simple,

00:11:25.455 --> 00:11:27.455
<v Speaker 1>and then I'm going to complicate things later

00:11:27.455 --> 00:11:30.015
<v Speaker 1>on. Now what this does

00:11:30.415 --> 00:11:31.695
<v Speaker 1>is basically

00:11:32.175 --> 00:11:34.415
<v Speaker 1>uses Kubernetes manifest with

00:11:34.815 --> 00:11:38.220
<v Speaker 1>custom resources to create something called GKE cluster

00:11:38.220 --> 00:11:40.220
<v Speaker 1>and something called node pool. You can probably

00:11:40.220 --> 00:11:43.500
<v Speaker 1>guess from the names what those things are,

00:11:43.740 --> 00:11:45.900
<v Speaker 1>and it specifies some properties like, hey. It

00:11:45.900 --> 00:11:47.900
<v Speaker 1>should run-in US East 1. It should have

00:11:47.900 --> 00:11:49.660
<v Speaker 1>the latest version of the cluster.

00:11:50.334 --> 00:11:53.214
<v Speaker 1>And locations for the node pool are those

00:11:53.455 --> 00:11:56.335
<v Speaker 1>and some other parameters. Right? So this is

00:11:57.055 --> 00:11:59.615
<v Speaker 1>this is similar to what you would do

00:11:59.615 --> 00:12:01.535
<v Speaker 1>with other tools, just that we are here

00:12:01.535 --> 00:12:04.255
<v Speaker 1>talking about YAML, and I'm not not using,

00:12:04.255 --> 00:12:06.000
<v Speaker 1>I don't know, like, Pulumi, it would be

00:12:06.000 --> 00:12:07.120
<v Speaker 1>Go, JavaScript,

00:12:07.120 --> 00:12:09.600
<v Speaker 1>or TerraForm would be RCL. So so far,

00:12:09.600 --> 00:12:11.920
<v Speaker 1>this is more or less this is just

00:12:12.240 --> 00:12:14.320
<v Speaker 1>looks like a different format

00:12:14.320 --> 00:12:16.640
<v Speaker 1>of something that is very similar to other

00:12:16.640 --> 00:12:19.855
<v Speaker 1>tools. Right? The major difference is that I

00:12:19.855 --> 00:12:22.255
<v Speaker 1>can do something like I mean, there are

00:12:22.255 --> 00:12:24.175
<v Speaker 1>many, the major differences. But to begin with,

00:12:24.175 --> 00:12:26.895
<v Speaker 1>this is all Kubernetes. It's Kubernetes API.

00:12:26.895 --> 00:12:29.295
<v Speaker 1>So I can do something like apply

00:12:29.775 --> 00:12:32.575
<v Speaker 1>dash dash file name, JK. Right?

00:12:33.490 --> 00:12:36.050
<v Speaker 1>Now I already applied this before I joined

00:12:36.050 --> 00:12:37.890
<v Speaker 1>the session, only so that you don't wait

00:12:37.890 --> 00:12:38.690
<v Speaker 1>for long.

00:12:39.090 --> 00:12:40.770
<v Speaker 1>But, basically, you need to trust me. I

00:12:40.770 --> 00:12:42.370
<v Speaker 1>applied exactly the same

00:12:42.610 --> 00:12:43.650
<v Speaker 1>same command.

00:12:43.890 --> 00:12:45.490
<v Speaker 1>And then from there on, I can manage

00:12:45.490 --> 00:12:47.010
<v Speaker 1>this as

00:12:47.315 --> 00:12:50.195
<v Speaker 1>as if it's a normal Kubernetes resource because,

00:12:50.195 --> 00:12:52.195
<v Speaker 1>actually, it is a normal Kubernetes resource. I

00:12:52.195 --> 00:12:54.435
<v Speaker 1>can say, cube capital gets managed,

00:12:54.595 --> 00:12:55.555
<v Speaker 1>which is a

00:12:57.315 --> 00:12:59.875
<v Speaker 1>catch it all crossplane type of resource, and

00:12:59.875 --> 00:13:01.714
<v Speaker 1>I can see my resource is running.

00:13:02.570 --> 00:13:04.570
<v Speaker 1>You see that, actually, I prepared it last

00:13:04.570 --> 00:13:05.130
<v Speaker 1>night.

00:13:06.170 --> 00:13:08.330
<v Speaker 1>The status is you can describe. You can

00:13:08.330 --> 00:13:12.010
<v Speaker 1>do logs. You can plug it into whatever

00:13:12.010 --> 00:13:15.210
<v Speaker 1>you're using for Kubernetes today, which is another

00:13:15.210 --> 00:13:17.690
<v Speaker 1>huge thing that I didn't mention before. Because

00:13:18.384 --> 00:13:19.665
<v Speaker 1>you think about it,

00:13:20.384 --> 00:13:21.825
<v Speaker 1>apart from obvious

00:13:22.865 --> 00:13:24.464
<v Speaker 1>advantages of Kubernetes,

00:13:24.545 --> 00:13:26.464
<v Speaker 1>there is the ecosystem that was,

00:13:26.865 --> 00:13:29.584
<v Speaker 1>I believe, never seen before. We at least

00:13:29.584 --> 00:13:32.225
<v Speaker 1>in my career, I haven't seen any other

00:13:32.225 --> 00:13:34.620
<v Speaker 1>platform, if you wanna call it, have such

00:13:34.620 --> 00:13:35.740
<v Speaker 1>a big ecosystem.

00:13:35.820 --> 00:13:38.140
<v Speaker 1>So I could I could now manage my

00:13:38.940 --> 00:13:41.100
<v Speaker 1>just as a as a slight differences compared

00:13:41.100 --> 00:13:44.300
<v Speaker 1>to other tools, I could manage my resources

00:13:44.300 --> 00:13:46.220
<v Speaker 1>with Argo CD or Flux if I like

00:13:46.220 --> 00:13:48.195
<v Speaker 1>GitOps. Right? I cannot do that with the

00:13:48.195 --> 00:13:51.635
<v Speaker 1>other tools unless they move into Kubernetes area.

00:13:51.795 --> 00:13:55.235
<v Speaker 1>I can get metrics from into Prometheus.

00:13:55.235 --> 00:13:56.915
<v Speaker 1>I can do logging in the way how

00:13:56.915 --> 00:13:59.475
<v Speaker 1>I'm doing logging in general and do all

00:13:59.475 --> 00:14:01.475
<v Speaker 1>the stuff that you normally do with Kubernetes.

00:14:03.610 --> 00:14:06.250
<v Speaker 1>And as a result, I have here a

00:14:06.250 --> 00:14:07.450
<v Speaker 1>short of command.

00:14:07.850 --> 00:14:10.410
<v Speaker 1>You can see if I put it on

00:14:10.410 --> 00:14:12.650
<v Speaker 1>the different screen, you can see that my

00:14:12.650 --> 00:14:14.170
<v Speaker 1>cluster was created.

00:14:14.490 --> 00:14:15.930
<v Speaker 1>There are three nodes, CPUs,

00:14:17.225 --> 00:14:18.825
<v Speaker 1>and all the stuff. Right? This is a

00:14:18.825 --> 00:14:20.505
<v Speaker 1>cluster now running in Google.

00:14:21.545 --> 00:14:22.105
<v Speaker 1>Now

00:14:22.425 --> 00:14:23.785
<v Speaker 1>one thing that is

00:14:24.185 --> 00:14:27.144
<v Speaker 1>very important for us, and that's what we

00:14:27.144 --> 00:14:28.024
<v Speaker 1>call composites.

00:14:28.840 --> 00:14:30.840
<v Speaker 1>So composites allow you to

00:14:31.320 --> 00:14:33.240
<v Speaker 1>compose infrastructure

00:14:33.480 --> 00:14:36.840
<v Speaker 1>in a not not infrastructure. Compose everything. Infrastructure

00:14:36.840 --> 00:14:38.440
<v Speaker 1>services applications

00:14:38.680 --> 00:14:40.200
<v Speaker 1>in a way that they're

00:14:40.520 --> 00:14:43.985
<v Speaker 1>much easier to manage, easier to digest, and

00:14:43.985 --> 00:14:46.065
<v Speaker 1>so on and so forth. Because

00:14:46.625 --> 00:14:48.865
<v Speaker 1>this is this was the simplest example that

00:14:48.865 --> 00:14:51.025
<v Speaker 1>I could come up with.

00:14:51.585 --> 00:14:53.825
<v Speaker 1>And this is kind of like, okay. Kind

00:14:53.825 --> 00:14:56.980
<v Speaker 1>of an average person can understand this. Somebody

00:14:56.980 --> 00:14:58.899
<v Speaker 1>who is not a Kubernetes ninja or not

00:14:58.899 --> 00:15:02.260
<v Speaker 1>not proficient with the Google Cloud can understand

00:15:02.260 --> 00:15:04.260
<v Speaker 1>this more or less. But let's say that

00:15:04.260 --> 00:15:06.420
<v Speaker 1>I have that I want to create a

00:15:06.420 --> 00:15:07.380
<v Speaker 1>cluster in

00:15:08.125 --> 00:15:09.005
<v Speaker 1>AWS.

00:15:09.404 --> 00:15:11.005
<v Speaker 1>What would I need to do? And imagine

00:15:11.005 --> 00:15:12.605
<v Speaker 1>that I'm a developer. Right? I would need

00:15:12.605 --> 00:15:14.285
<v Speaker 1>to create an EKS cluster. I would need

00:15:14.285 --> 00:15:15.964
<v Speaker 1>a node pool. I would need a VPC

00:15:15.964 --> 00:15:18.365
<v Speaker 1>or a couple of VPCs, subnets,

00:15:18.524 --> 00:15:19.565
<v Speaker 1>Internet gateway,

00:15:20.590 --> 00:15:22.270
<v Speaker 1>and a bunch of other things. Right? It

00:15:22.270 --> 00:15:24.190
<v Speaker 1>gets complex very, very easily.

00:15:25.230 --> 00:15:27.710
<v Speaker 1>Now alternative, and this is where composites come

00:15:27.710 --> 00:15:28.670
<v Speaker 1>into play,

00:15:29.070 --> 00:15:31.230
<v Speaker 1>I can do something like this. I can

00:15:31.230 --> 00:15:34.445
<v Speaker 1>say, hey. How about you create your cluster

00:15:34.445 --> 00:15:36.845
<v Speaker 1>using something like this definition?

00:15:37.404 --> 00:15:39.485
<v Speaker 1>And now the name of the this resource

00:15:39.485 --> 00:15:42.205
<v Speaker 1>is, in this case, composite Kubernetes cluster. This

00:15:42.205 --> 00:15:43.565
<v Speaker 1>is completely custom.

00:15:43.725 --> 00:15:46.829
<v Speaker 1>This is imagine a situation where an operator

00:15:46.829 --> 00:15:48.990
<v Speaker 1>or SRE or whatever the role is in

00:15:48.990 --> 00:15:51.470
<v Speaker 1>my company said, okay. I will create the

00:15:51.470 --> 00:15:53.950
<v Speaker 1>composition. I will create the I will manage

00:15:53.950 --> 00:15:55.710
<v Speaker 1>the complexity of all that,

00:15:55.950 --> 00:15:58.110
<v Speaker 1>and I will create a completely new resource

00:15:58.110 --> 00:16:01.390
<v Speaker 1>type in Kubernetes just for everybody else.

00:16:02.625 --> 00:16:04.545
<v Speaker 1>And this one says, okay. I'm going to

00:16:04.545 --> 00:16:07.745
<v Speaker 1>reference something called cluster Google. Now for now,

00:16:07.745 --> 00:16:09.825
<v Speaker 1>imagine that I'm a developer. Right? I do

00:16:09.825 --> 00:16:12.465
<v Speaker 1>not know all the details about everything.

00:16:13.105 --> 00:16:15.985
<v Speaker 1>So I can select, hey. I'm going to

00:16:15.230 --> 00:16:18.190
<v Speaker 1>reference something called cluster Google. It could be

00:16:18.270 --> 00:16:19.070
<v Speaker 1>cluster

00:16:21.230 --> 00:16:23.790
<v Speaker 1>AWS. Actually, let me change it. Why not?

00:16:24.670 --> 00:16:25.550
<v Speaker 1>Let's

00:16:25.550 --> 00:16:26.430
<v Speaker 1>do this.

00:16:26.670 --> 00:16:28.590
<v Speaker 1>I'm a developer and say, hey. I will

00:16:28.590 --> 00:16:30.430
<v Speaker 1>actually I want to run my cluster in

00:16:30.430 --> 00:16:30.990
<v Speaker 1>AWS.

00:16:31.365 --> 00:16:32.085
<v Speaker 1>Cool.

00:16:32.805 --> 00:16:34.005
<v Speaker 1>I want to have

00:16:34.325 --> 00:16:35.365
<v Speaker 1>small nodes.

00:16:36.245 --> 00:16:38.645
<v Speaker 1>I do not know really whether that's t

00:16:38.645 --> 00:16:42.245
<v Speaker 1>two something or t two t three something

00:16:42.245 --> 00:16:44.725
<v Speaker 1>or whatever are the older variations in

00:16:45.100 --> 00:16:46.300
<v Speaker 1>in AWS,

00:16:46.380 --> 00:16:49.260
<v Speaker 1>I want to be as simple as small,

00:16:49.260 --> 00:16:52.220
<v Speaker 1>medium, large. Right? I want a specific version,

00:16:52.220 --> 00:16:53.740
<v Speaker 1>or I don't want to

00:16:53.980 --> 00:16:55.740
<v Speaker 1>specify anything because

00:16:55.900 --> 00:16:58.220
<v Speaker 1>I trust that whatever is the default makes

00:16:58.220 --> 00:17:00.365
<v Speaker 1>sense, the number of nodes, and a few

00:17:00.365 --> 00:17:01.565
<v Speaker 1>other options. Right?

00:17:02.285 --> 00:17:02.845
<v Speaker 1>Now

00:17:04.605 --> 00:17:07.005
<v Speaker 1>this is something that can be digested by

00:17:07.005 --> 00:17:08.604
<v Speaker 1>everybody potentially.

00:17:08.845 --> 00:17:11.839
<v Speaker 1>And what what the final outcome is does

00:17:11.839 --> 00:17:13.760
<v Speaker 1>not depend on me, does not depend on

00:17:13.760 --> 00:17:17.039
<v Speaker 1>Crossplane. It depends on people in a company

00:17:17.200 --> 00:17:17.919
<v Speaker 1>who

00:17:18.560 --> 00:17:20.480
<v Speaker 1>wants to provide services

00:17:20.480 --> 00:17:22.640
<v Speaker 1>to others. So think of this as shift

00:17:22.640 --> 00:17:24.960
<v Speaker 1>left, and I will show you later how

00:17:25.040 --> 00:17:26.720
<v Speaker 1>how all this

00:17:26.885 --> 00:17:29.285
<v Speaker 1>how what is happening in the background for

00:17:29.285 --> 00:17:31.685
<v Speaker 1>something to be as simple as that. Right?

00:17:32.805 --> 00:17:34.885
<v Speaker 1>So I'm going to save this change,

00:17:35.365 --> 00:17:37.125
<v Speaker 1>and I'm going to do now I'm still

00:17:37.125 --> 00:17:39.685
<v Speaker 1>a developer. I'm going to do kubectl apply

00:17:39.685 --> 00:17:41.045
<v Speaker 1>dash dash file name,

00:17:41.550 --> 00:17:44.110
<v Speaker 1>and the file is called cluster YAML,

00:17:44.430 --> 00:17:47.070
<v Speaker 1>and that was created. Right? And now I

00:17:47.070 --> 00:17:50.510
<v Speaker 1>can do something like kubectl get managed,

00:17:51.870 --> 00:17:53.070
<v Speaker 1>and I should see

00:17:54.065 --> 00:17:55.504
<v Speaker 1>stuff happening.

00:17:55.985 --> 00:17:58.145
<v Speaker 1>Actually, I should not watch because there's too

00:17:58.145 --> 00:18:00.705
<v Speaker 1>much output to fit on my screen. So

00:18:00.705 --> 00:18:01.825
<v Speaker 1>let's do this.

00:18:05.425 --> 00:18:08.225
<v Speaker 1>Now behind those 20 lines of YAML,

00:18:08.779 --> 00:18:10.219
<v Speaker 1>I got two

00:18:10.220 --> 00:18:11.499
<v Speaker 1>IAM roles.

00:18:11.659 --> 00:18:14.059
<v Speaker 1>I got one, two, three, four, five

00:18:15.500 --> 00:18:16.539
<v Speaker 1>policy

00:18:16.539 --> 00:18:17.499
<v Speaker 1>attachments,

00:18:17.740 --> 00:18:20.139
<v Speaker 1>a node group, a cluster,

00:18:20.220 --> 00:18:21.419
<v Speaker 1>a route table,

00:18:22.054 --> 00:18:23.095
<v Speaker 1>subnets,

00:18:23.095 --> 00:18:26.134
<v Speaker 1>security groups, Internet gateways, VPC,

00:18:26.775 --> 00:18:29.255
<v Speaker 1>node, and the okay. Those two are Google

00:18:29.255 --> 00:18:31.415
<v Speaker 1>from before, so I'm going to ignore those.

00:18:31.415 --> 00:18:33.895
<v Speaker 1>Right? So those are all the things that

00:18:33.895 --> 00:18:36.934
<v Speaker 1>I should have created if I wanted to

00:18:36.934 --> 00:18:37.255
<v Speaker 1>manage,

00:18:38.429 --> 00:18:41.950
<v Speaker 1>in this case, CKS cluster in AWS.

00:18:41.950 --> 00:18:43.630
<v Speaker 1>And I still did not go crazy. Right?

00:18:43.630 --> 00:18:46.029
<v Speaker 1>Things get more complicated than that in a

00:18:46.029 --> 00:18:47.229
<v Speaker 1>real world situation.

00:18:48.190 --> 00:18:50.590
<v Speaker 1>Now the bakehow all that happened

00:18:50.590 --> 00:18:51.950
<v Speaker 1>is that somebody before

00:18:52.505 --> 00:18:54.505
<v Speaker 1>created something like this,

00:18:54.665 --> 00:18:56.025
<v Speaker 1>definition YAML.

00:18:56.265 --> 00:18:59.705
<v Speaker 1>So that's somebody. Call it SRE. Right? Defined

00:18:59.705 --> 00:19:02.505
<v Speaker 1>a completely new resource type for me, and

00:19:02.505 --> 00:19:05.305
<v Speaker 1>it's call it's calling that resource type we

00:19:05.305 --> 00:19:07.785
<v Speaker 1>call it composite resource definition or XRD.

00:19:08.530 --> 00:19:09.970
<v Speaker 1>And the name of this

00:19:10.450 --> 00:19:13.490
<v Speaker 1>new resource is going to be composite cluster

00:19:13.730 --> 00:19:16.130
<v Speaker 1>composite Kubernetes cluster. That's the same name that

00:19:16.130 --> 00:19:17.010
<v Speaker 1>I used

00:19:17.250 --> 00:19:19.490
<v Speaker 1>previously in a definition when I was pretending

00:19:19.490 --> 00:19:21.330
<v Speaker 1>to be a developer. Right?

00:19:21.650 --> 00:19:23.010
<v Speaker 1>And there are some

00:19:23.355 --> 00:19:26.955
<v Speaker 1>some parameters defined, like version, note size, min

00:19:26.955 --> 00:19:29.355
<v Speaker 1>note count. Those are the same parameters that

00:19:29.355 --> 00:19:33.275
<v Speaker 1>I used before. Right? So somebody creates a

00:19:33.275 --> 00:19:36.715
<v Speaker 1>completely new definition of a resource

00:19:36.794 --> 00:19:37.755
<v Speaker 1>that explains

00:19:38.760 --> 00:19:40.840
<v Speaker 1>what are the things that

00:19:41.400 --> 00:19:42.919
<v Speaker 1>teams in a company

00:19:43.240 --> 00:19:45.000
<v Speaker 1>care about and what are the things that

00:19:45.000 --> 00:19:47.480
<v Speaker 1>they want to manage, like version, node size,

00:19:47.480 --> 00:19:49.720
<v Speaker 1>minimum number of nodes, whatever those things are.

00:19:50.434 --> 00:19:52.434
<v Speaker 1>And we are going to expose that to

00:19:52.434 --> 00:19:55.075
<v Speaker 1>them. And and and by doing that, we

00:19:55.075 --> 00:19:57.475
<v Speaker 1>are going to shift left. We are going

00:19:57.475 --> 00:19:59.475
<v Speaker 1>to make those teams autonomous so they can

00:19:59.475 --> 00:20:02.995
<v Speaker 1>manage their own stuff themselves without opening issues

00:20:02.995 --> 00:20:05.794
<v Speaker 1>in Jira and sending it to some other

00:20:05.794 --> 00:20:05.955
<v Speaker 1>people.

00:20:06.649 --> 00:20:08.729
<v Speaker 1>So making people self sufficient

00:20:08.970 --> 00:20:11.369
<v Speaker 1>by exposing them to the level of

00:20:12.490 --> 00:20:14.409
<v Speaker 1>requirements or obstructions

00:20:14.409 --> 00:20:17.049
<v Speaker 1>that they're comfortable with. Right? Some other team

00:20:17.049 --> 00:20:20.635
<v Speaker 1>might need 57 parameters. Right? It's it's whatever

00:20:20.635 --> 00:20:22.635
<v Speaker 1>you choose choose it to be.

00:20:23.115 --> 00:20:25.515
<v Speaker 1>So this is a definition

00:20:25.675 --> 00:20:27.595
<v Speaker 1>of custom resource

00:20:28.715 --> 00:20:31.995
<v Speaker 1>custom what is it? Custom composite resource definition

00:20:32.470 --> 00:20:34.710
<v Speaker 1>that will that became later on when I

00:20:34.710 --> 00:20:36.950
<v Speaker 1>applied it to the cluster to the control

00:20:36.950 --> 00:20:40.470
<v Speaker 1>plane cluster became the custom resource that I

00:20:40.470 --> 00:20:41.830
<v Speaker 1>used before.

00:20:41.830 --> 00:20:43.830
<v Speaker 1>And now comes the madness. Right?

00:20:44.710 --> 00:20:46.870
<v Speaker 1>Or different I'm going to show you different

00:20:46.870 --> 00:20:48.150
<v Speaker 1>levels of madness. Right?

00:20:49.245 --> 00:20:50.125
<v Speaker 1>Implementation

00:20:50.125 --> 00:20:52.365
<v Speaker 1>of that interface that I just showed you

00:20:52.365 --> 00:20:53.645
<v Speaker 1>for Azure

00:20:53.645 --> 00:20:55.165
<v Speaker 1>would be this.

00:20:55.805 --> 00:20:57.565
<v Speaker 1>Relatively small, straightforward.

00:20:58.445 --> 00:21:01.485
<v Speaker 1>You human cannot comprehend it because in Azure,

00:21:01.830 --> 00:21:04.309
<v Speaker 1>all you need is an EKS cluster. And

00:21:04.309 --> 00:21:07.190
<v Speaker 1>I'm talking minimum because Azure can become extremely

00:21:07.190 --> 00:21:09.589
<v Speaker 1>complex, but I'm really talking about the minimum.

00:21:10.870 --> 00:21:11.830
<v Speaker 1>If it's

00:21:12.710 --> 00:21:14.070
<v Speaker 1>where did I put it? GCP,

00:21:15.095 --> 00:21:17.575
<v Speaker 1>like the one that I used before I

00:21:17.655 --> 00:21:19.414
<v Speaker 1>started the this session,

00:21:19.655 --> 00:21:21.174
<v Speaker 1>slightly more complicated.

00:21:22.455 --> 00:21:23.975
<v Speaker 1>Those are all the things you need to

00:21:23.975 --> 00:21:25.975
<v Speaker 1>define no matter which tool you're you're using

00:21:25.975 --> 00:21:28.375
<v Speaker 1>more or less. And now comes, let's say,

00:21:28.375 --> 00:21:29.015
<v Speaker 1>AWS.

00:21:29.800 --> 00:21:32.840
<v Speaker 1>The simplest possible I could imagine for AWS.

00:21:33.560 --> 00:21:35.880
<v Speaker 1>Now let me go to the beginning

00:21:36.040 --> 00:21:38.280
<v Speaker 1>and show you what I had to do.

00:21:38.360 --> 00:21:39.640
<v Speaker 0>I don't think we have enough time for

00:21:39.640 --> 00:21:40.200
<v Speaker 0>that, I'm afraid.

00:21:41.495 --> 00:21:42.775
<v Speaker 0>We don't have enough time to go to

00:21:42.775 --> 00:21:44.535
<v Speaker 0>the beginning of that. Exactly.

00:21:44.615 --> 00:21:47.815
<v Speaker 1>Leakers, cluster, so on. It's a lot of

00:21:47.815 --> 00:21:48.615
<v Speaker 1>stuff. Right?

00:21:49.015 --> 00:21:50.934
<v Speaker 1>Now what is happening here is

00:21:51.815 --> 00:21:53.335
<v Speaker 1>this is partly

00:21:53.850 --> 00:21:56.169
<v Speaker 1>what you would normally see in other tools.

00:21:56.169 --> 00:21:58.330
<v Speaker 1>Like, hey. There are some parameters that you

00:21:58.330 --> 00:22:00.169
<v Speaker 1>need to supply when you create an EKS

00:22:00.169 --> 00:22:02.970
<v Speaker 1>cluster and version and whatever you need. Right?

00:22:03.130 --> 00:22:04.730
<v Speaker 1>And then there are patches.

00:22:05.130 --> 00:22:07.985
<v Speaker 1>Those are the things that typically would get

00:22:07.985 --> 00:22:08.865
<v Speaker 1>translated

00:22:08.865 --> 00:22:12.145
<v Speaker 1>in from what user specified in that YAML

00:22:12.145 --> 00:22:14.065
<v Speaker 1>that I started with

00:22:14.784 --> 00:22:15.585
<v Speaker 1>into

00:22:16.705 --> 00:22:19.505
<v Speaker 1>into what is propagated later on to this

00:22:19.505 --> 00:22:21.345
<v Speaker 1>resource type. Like, for example, if you look

00:22:21.345 --> 00:22:24.270
<v Speaker 1>at if you remember, I used node size

00:22:24.270 --> 00:22:26.750
<v Speaker 1>and I said small. Right? And here, I

00:22:26.750 --> 00:22:29.390
<v Speaker 1>am translating small to t two t t

00:22:29.390 --> 00:22:32.030
<v Speaker 1>three small and medium to something else and

00:22:32.030 --> 00:22:33.470
<v Speaker 1>so on and so forth. Right? It's nice

00:22:33.470 --> 00:22:34.910
<v Speaker 0>that you showed that. We actually got a

00:22:34.910 --> 00:22:36.910
<v Speaker 0>comment from Russell in the chat asking how

00:22:36.910 --> 00:22:39.765
<v Speaker 0>those sizes were mapped or configurable. So Yeah.

00:22:39.765 --> 00:22:41.845
<v Speaker 0>There you go. And you are kind of

00:22:41.845 --> 00:22:43.845
<v Speaker 1>in control. Right? This is not something that

00:22:43.845 --> 00:22:47.605
<v Speaker 1>is opinionated vendor specific. Like, we decided that

00:22:47.605 --> 00:22:51.125
<v Speaker 1>whenever people when I say we, outbound decided

00:22:50.760 --> 00:22:53.080
<v Speaker 1>whenever people want small nodes, it will be

00:22:53.080 --> 00:22:54.279
<v Speaker 1>t three

00:22:54.680 --> 00:22:57.480
<v Speaker 1>small. Right? This you are in complete control.

00:22:57.480 --> 00:23:00.360
<v Speaker 1>You as a person, necessarily, let's say, you're

00:23:00.360 --> 00:23:01.559
<v Speaker 1>defining those things

00:23:02.520 --> 00:23:04.200
<v Speaker 1>and so on and so forth. So all

00:23:04.200 --> 00:23:05.720
<v Speaker 1>those are defined.

00:23:06.505 --> 00:23:09.225
<v Speaker 1>There are some patches that overwrite values depending

00:23:09.225 --> 00:23:11.705
<v Speaker 1>on user input, and they're all grouped together

00:23:12.184 --> 00:23:15.705
<v Speaker 1>and end up being something like

00:23:16.345 --> 00:23:18.105
<v Speaker 1>what they showed initially,

00:23:18.105 --> 00:23:19.705
<v Speaker 1>which I believe was this file. Right?

00:23:20.700 --> 00:23:23.020
<v Speaker 1>So all what I showed you, the all

00:23:23.020 --> 00:23:25.580
<v Speaker 1>those hundreds of lines and something

00:23:25.740 --> 00:23:27.659
<v Speaker 1>from an end user perspective,

00:23:28.140 --> 00:23:29.019
<v Speaker 1>that's what

00:23:29.260 --> 00:23:31.740
<v Speaker 1>you get. Right? And I'm still using very

00:23:31.740 --> 00:23:34.540
<v Speaker 1>simple examples. Normally, I would add over there

00:23:34.540 --> 00:23:35.340
<v Speaker 1>maybe to

00:23:35.845 --> 00:23:37.604
<v Speaker 1>in that cluster, to maybe

00:23:38.164 --> 00:23:40.404
<v Speaker 1>if it's, let's say, EKS cluster, maybe I

00:23:40.404 --> 00:23:42.325
<v Speaker 1>would install some applications,

00:23:42.325 --> 00:23:44.565
<v Speaker 1>like system level applications, maybe from mid use,

00:23:44.565 --> 00:23:46.884
<v Speaker 1>who would be running there, maybe ArgoCity,

00:23:47.284 --> 00:23:49.445
<v Speaker 1>maybe additional stuff. Right? So it can get

00:23:49.445 --> 00:23:51.830
<v Speaker 1>much more complicated than that. But from end

00:23:51.830 --> 00:23:52.950
<v Speaker 1>user perspective,

00:23:53.350 --> 00:23:56.070
<v Speaker 1>the interface is whatever you define it to

00:23:56.070 --> 00:23:58.470
<v Speaker 1>be. Right? And that's what we call compositions.

00:23:58.550 --> 00:24:00.470
<v Speaker 1>And even if somebody doesn't know what

00:24:00.870 --> 00:24:03.905
<v Speaker 1>that interface is and let's say that whomever

00:24:03.905 --> 00:24:06.544
<v Speaker 1>created all that stuff did not document it.

00:24:06.544 --> 00:24:08.705
<v Speaker 1>You know? No Wiki files, no readmess, and

00:24:08.705 --> 00:24:10.705
<v Speaker 1>stuff like that. You can always do something

00:24:10.705 --> 00:24:12.065
<v Speaker 1>like this. Explain

00:24:12.145 --> 00:24:14.465
<v Speaker 1>composite Kubernetes

00:24:14.544 --> 00:24:15.504
<v Speaker 1>cluster

00:24:15.825 --> 00:24:17.505
<v Speaker 1>and recursive.

00:24:18.520 --> 00:24:21.400
<v Speaker 1>Now this requires slight understanding of Kubernetes, but

00:24:21.400 --> 00:24:22.919
<v Speaker 1>not really out of this world.

00:24:23.240 --> 00:24:25.080
<v Speaker 1>And you know okay. So this is actually

00:24:25.080 --> 00:24:27.880
<v Speaker 1>what my specification is. Those are the parameters,

00:24:27.880 --> 00:24:30.440
<v Speaker 1>bin node count, node size, version, whatever somebody

00:24:30.440 --> 00:24:31.240
<v Speaker 1>defined.

00:24:31.480 --> 00:24:33.640
<v Speaker 1>Off you go. Create your own manifest.

00:24:36.645 --> 00:24:38.325
<v Speaker 1>Be in full control of the things that

00:24:38.325 --> 00:24:40.725
<v Speaker 1>matter to you and leave the things you

00:24:40.725 --> 00:24:43.445
<v Speaker 1>don't care about but are still important,

00:24:43.845 --> 00:24:44.325
<v Speaker 1>like,

00:24:45.285 --> 00:24:46.245
<v Speaker 1>somebody else.

00:24:46.645 --> 00:24:47.925
<v Speaker 1>Right? So it's

00:24:48.500 --> 00:24:50.820
<v Speaker 1>separation of concerns and shift left in a

00:24:50.820 --> 00:24:51.940
<v Speaker 1>way at the same time.

00:24:52.580 --> 00:24:54.900
<v Speaker 0>Yeah. It's nice. It's like, you know, tools

00:24:54.900 --> 00:24:57.460
<v Speaker 0>like Terraform allow you to directly access the

00:24:57.460 --> 00:25:00.020
<v Speaker 0>API to spin up devices or clusters or

00:25:00.020 --> 00:25:03.894
<v Speaker 0>node builds, etcetera. But composite resources actually allow

00:25:03.894 --> 00:25:06.934
<v Speaker 0>you to build platforms within these resources and

00:25:06.934 --> 00:25:10.054
<v Speaker 0>distribute them and share them across your organization.

00:25:10.774 --> 00:25:12.695
<v Speaker 1>Correct. Correct. So if

00:25:13.095 --> 00:25:14.934
<v Speaker 1>I would simplify it greatly, you would think

00:25:14.934 --> 00:25:17.640
<v Speaker 1>of it as being equivalent of, Somebody creates

00:25:17.640 --> 00:25:19.560
<v Speaker 1>a Helm chart, and then everybody else can

00:25:19.560 --> 00:25:20.360
<v Speaker 1>modify

00:25:20.680 --> 00:25:22.360
<v Speaker 1>Helm values.

00:25:23.160 --> 00:25:24.040
<v Speaker 1>But that

00:25:24.200 --> 00:25:26.120
<v Speaker 1>that would be only partly true because we

00:25:26.120 --> 00:25:28.040
<v Speaker 1>are not talking about some properties file. We

00:25:28.040 --> 00:25:31.080
<v Speaker 1>are talking about Crossplane creating completely

00:25:31.080 --> 00:25:31.400
<v Speaker 1>new

00:25:32.315 --> 00:25:33.754
<v Speaker 1>custom resources

00:25:34.554 --> 00:25:36.554
<v Speaker 1>that can be used by anybody else.

00:25:37.355 --> 00:25:37.994
<v Speaker 0>Yeah.

00:25:38.155 --> 00:25:40.155
<v Speaker 0>We have a a question in the chat

00:25:40.155 --> 00:25:43.035
<v Speaker 0>from Thomas Lav, which aligns directly with my

00:25:43.035 --> 00:25:46.315
<v Speaker 0>interests. So Thomas Lav asks, what about bare

00:25:46.315 --> 00:25:49.399
<v Speaker 0>metal or on premise clusters? Crossplane support that?

00:25:49.960 --> 00:25:50.519
<v Speaker 0>So

00:25:53.080 --> 00:25:55.240
<v Speaker 1>I'm not sure about bare metal. I would

00:25:55.240 --> 00:25:56.760
<v Speaker 1>need to check the

00:25:57.720 --> 00:25:59.240
<v Speaker 1>check it. I could check it later and

00:25:59.240 --> 00:26:01.415
<v Speaker 1>get back to you specifically for that question

00:26:01.415 --> 00:26:02.135
<v Speaker 1>because

00:26:02.375 --> 00:26:04.054
<v Speaker 1>if the Google Crossplane

00:26:04.055 --> 00:26:06.935
<v Speaker 1>contribute contribute, I think, you will see all

00:26:06.935 --> 00:26:09.815
<v Speaker 1>the contributions. Right? So it really depends on

00:26:09.815 --> 00:26:10.455
<v Speaker 1>the community.

00:26:12.289 --> 00:26:15.010
<v Speaker 1>And if it doesn't support, then it's just

00:26:15.010 --> 00:26:17.730
<v Speaker 1>one pull request away from supporting it. Right?

00:26:17.730 --> 00:26:20.370
<v Speaker 0>So there there is an Equinix metal provider

00:26:20.370 --> 00:26:21.490
<v Speaker 0>for Crossplane,

00:26:21.490 --> 00:26:23.090
<v Speaker 0>so you can spin up devices.

00:26:23.169 --> 00:26:25.010
<v Speaker 0>And, actually, the focus of my work for

00:26:25.010 --> 00:26:25.330
<v Speaker 0>the last

00:26:25.985 --> 00:26:28.625
<v Speaker 0>six months has been provisioning Kubernetes clusters through

00:26:28.625 --> 00:26:30.145
<v Speaker 0>user data alone.

00:26:30.465 --> 00:26:32.865
<v Speaker 0>So while there's nothing directing Crossplane

00:26:33.105 --> 00:26:35.905
<v Speaker 0>provider now, in theory, you could do something

00:26:35.905 --> 00:26:36.945
<v Speaker 0>like this. So

00:26:37.425 --> 00:26:38.865
<v Speaker 1>I mean, as long as there is an

00:26:38.865 --> 00:26:42.259
<v Speaker 1>API that Crossplane can talk to, then yes.

00:26:42.820 --> 00:26:43.460
<v Speaker 1>Right?

00:26:44.820 --> 00:26:46.740
<v Speaker 0>Alright. Awesome. Thank you for that. And I

00:26:46.740 --> 00:26:48.419
<v Speaker 0>I think maybe one of your colleagues has

00:26:48.419 --> 00:26:50.740
<v Speaker 0>joined us in the chat. Grant has been

00:26:50.740 --> 00:26:53.539
<v Speaker 0>kindly answering questions as we as we run

00:26:53.539 --> 00:26:54.100
<v Speaker 0>along

00:26:54.340 --> 00:26:54.979
<v Speaker 0>at.

00:26:55.299 --> 00:26:55.620
<v Speaker 0>So

00:26:56.355 --> 00:26:57.315
<v Speaker 1>Thank you.

00:26:59.235 --> 00:27:01.875
<v Speaker 0>Alright. Awesome. So that's good to see. I

00:27:01.875 --> 00:27:04.514
<v Speaker 0>like the way those composite resources are relatively,

00:27:04.995 --> 00:27:07.395
<v Speaker 0>you know, not easy, but, you know, writing

00:27:07.395 --> 00:27:08.755
<v Speaker 0>the ammo is something that we're all getting

00:27:08.755 --> 00:27:10.674
<v Speaker 0>very comfortable with these days. And they've been

00:27:10.674 --> 00:27:12.890
<v Speaker 0>able to define them that way as a

00:27:12.890 --> 00:27:15.529
<v Speaker 0>combination of other resources within Crossplane.

00:27:16.890 --> 00:27:18.809
<v Speaker 0>Once it's done once, you just reuse that

00:27:18.809 --> 00:27:20.490
<v Speaker 0>as much as possible, and you've you've got

00:27:20.490 --> 00:27:21.609
<v Speaker 0>this kind of platform

00:27:22.090 --> 00:27:24.090
<v Speaker 0>provider, which is which is pretty sweet.

00:27:25.165 --> 00:27:27.565
<v Speaker 1>Exactly. It allows you to build your own

00:27:28.605 --> 00:27:29.565
<v Speaker 1>interfaces,

00:27:29.565 --> 00:27:31.325
<v Speaker 1>right, that fits exactly

00:27:31.565 --> 00:27:34.045
<v Speaker 1>Yeah. Your needs. Because every every organization does

00:27:34.045 --> 00:27:36.525
<v Speaker 0>this stuff their own little unique way and

00:27:36.525 --> 00:27:37.965
<v Speaker 0>being able to codify that in a way

00:27:37.965 --> 00:27:39.965
<v Speaker 0>that is reusable is something that is often

00:27:39.965 --> 00:27:40.285
<v Speaker 0>lost.

00:27:41.300 --> 00:27:42.580
<v Speaker 0>It's something I've seen in the past. It's

00:27:42.580 --> 00:27:44.500
<v Speaker 0>just that each team ends up doing their

00:27:44.500 --> 00:27:45.620
<v Speaker 0>own implementation,

00:27:45.620 --> 00:27:47.460
<v Speaker 0>their own way, and there's all these different

00:27:47.460 --> 00:27:50.179
<v Speaker 0>variances. And then eventually, someone wants to do

00:27:50.179 --> 00:27:51.620
<v Speaker 0>a security audit. You're like, why are all

00:27:51.620 --> 00:27:53.380
<v Speaker 0>these things different? And, like, being able to

00:27:53.380 --> 00:27:55.460
<v Speaker 0>codify it in this way removes that whole

00:27:55.460 --> 00:27:57.845
<v Speaker 0>class of problem, which I think a lot

00:27:57.845 --> 00:27:58.644
<v Speaker 0>of people need.

00:27:59.605 --> 00:28:02.404
<v Speaker 1>Yes. Especially when you when you run at

00:28:02.404 --> 00:28:03.124
<v Speaker 1>scale.

00:28:04.245 --> 00:28:05.924
<v Speaker 1>I can't tell you how many times I've

00:28:05.924 --> 00:28:09.140
<v Speaker 1>seen, you know, whichever tool is used, hundreds

00:28:09.140 --> 00:28:11.140
<v Speaker 1>so and hundreds of files that are doing

00:28:11.140 --> 00:28:13.380
<v Speaker 1>exactly the same, but simply because there is

00:28:13.380 --> 00:28:14.580
<v Speaker 1>a small variation

00:28:14.820 --> 00:28:17.059
<v Speaker 1>or simply because the teams do not communicate

00:28:17.059 --> 00:28:18.419
<v Speaker 1>with each other and so on and so

00:28:18.419 --> 00:28:20.419
<v Speaker 1>forth. Right? So you want to codify

00:28:20.805 --> 00:28:22.965
<v Speaker 1>what you explained actually fits the bill very

00:28:22.965 --> 00:28:24.965
<v Speaker 1>well. You want to codify all your

00:28:25.605 --> 00:28:28.005
<v Speaker 1>knowledge in a way and expose it to

00:28:28.005 --> 00:28:30.485
<v Speaker 1>an interface that contains things that matter and

00:28:30.485 --> 00:28:31.205
<v Speaker 1>are

00:28:31.525 --> 00:28:32.165
<v Speaker 1>not

00:28:32.485 --> 00:28:34.005
<v Speaker 1>repeatable all over and over again.

00:28:35.300 --> 00:28:35.940
<v Speaker 0>Exactly.

00:28:36.260 --> 00:28:38.580
<v Speaker 0>Alright. We've got a couple more comments and

00:28:38.580 --> 00:28:39.220
<v Speaker 0>questions.

00:28:39.860 --> 00:28:42.900
<v Speaker 0>So Ty says a Crossplane with Talos or

00:28:42.900 --> 00:28:45.620
<v Speaker 0>Sudero would be pretty sweet. I agree. Big

00:28:45.620 --> 00:28:47.780
<v Speaker 0>fan of Talos and Sudero, and that would

00:28:47.780 --> 00:28:48.580
<v Speaker 0>be a nice integration.

00:28:49.174 --> 00:28:52.134
<v Speaker 0>Yeah. We have a question from Andreas.

00:28:52.534 --> 00:28:53.975
<v Speaker 0>Is there a way to define a more

00:28:53.975 --> 00:28:56.934
<v Speaker 0>specific validations than just the data type? How

00:28:56.934 --> 00:28:59.095
<v Speaker 0>does it feel if you mistype small

00:28:59.095 --> 00:29:00.775
<v Speaker 0>after multiple field validations?

00:29:02.450 --> 00:29:04.370
<v Speaker 1>If you mistype small, then

00:29:04.850 --> 00:29:05.570
<v Speaker 1>that

00:29:07.170 --> 00:29:10.290
<v Speaker 1>then you would see that resource not being

00:29:10.290 --> 00:29:12.210
<v Speaker 1>created, and you would

00:29:12.610 --> 00:29:14.995
<v Speaker 1>have to go to the resource to describe

00:29:14.995 --> 00:29:16.434
<v Speaker 1>the resource, you know, and see in the

00:29:16.434 --> 00:29:16.835
<v Speaker 1>events,

00:29:17.235 --> 00:29:19.634
<v Speaker 1>like, basically, with any Kubernetes resource.

00:29:19.955 --> 00:29:22.674
<v Speaker 1>So we we are this might be important,

00:29:22.674 --> 00:29:25.475
<v Speaker 1>actually, to mention. We are intentionally not trying

00:29:25.475 --> 00:29:26.034
<v Speaker 1>to

00:29:28.115 --> 00:29:29.794
<v Speaker 1>build things that

00:29:30.400 --> 00:29:34.720
<v Speaker 1>exist in Kubernetes ecosystem. Right? Like, validations

00:29:34.720 --> 00:29:37.919
<v Speaker 1>are just we are just following what how

00:29:38.320 --> 00:29:41.360
<v Speaker 1>all the other Kubernetes resources are working, like

00:29:41.440 --> 00:29:44.320
<v Speaker 1>or same thing for logging or for metrics.

00:29:44.835 --> 00:29:47.635
<v Speaker 1>Or another popular question, which I don't know

00:29:47.635 --> 00:29:50.034
<v Speaker 1>whether it popped up there, but usually pops

00:29:50.034 --> 00:29:52.434
<v Speaker 1>up. Hey. Can you have conditionals? You know,

00:29:52.434 --> 00:29:54.835
<v Speaker 1>if else statements. And, again, we are really

00:29:54.835 --> 00:29:56.674
<v Speaker 1>trying to avoid those things because

00:29:57.150 --> 00:29:59.710
<v Speaker 1>there is this part of the ecosystem. Like,

00:29:59.710 --> 00:30:01.390
<v Speaker 1>hey. You need conditional. It's excellent. Kind of

00:30:01.390 --> 00:30:03.230
<v Speaker 1>like there is Helm. Right? Helm can do

00:30:03.230 --> 00:30:06.110
<v Speaker 1>those things. Can can can can template it.

00:30:06.430 --> 00:30:06.990
<v Speaker 1>And

00:30:07.950 --> 00:30:10.030
<v Speaker 1>so so we are really kind of trying

00:30:10.030 --> 00:30:12.505
<v Speaker 1>to avoid anything that is is not really,

00:30:12.505 --> 00:30:14.745
<v Speaker 1>really specific and nonexistent,

00:30:15.545 --> 00:30:17.705
<v Speaker 1>if that makes sense. It does make sense.

00:30:17.705 --> 00:30:20.025
<v Speaker 0>Yes. Andreas, if you wanna add anything to

00:30:20.025 --> 00:30:21.465
<v Speaker 0>that, feel free to drop back into the

00:30:21.465 --> 00:30:22.905
<v Speaker 0>comments, but I hope the answer helps.

00:30:25.440 --> 00:30:27.440
<v Speaker 0>So I quite I quite like that.

00:30:27.760 --> 00:30:29.919
<v Speaker 0>Obviously, the AWS one is is is rather

00:30:29.919 --> 00:30:33.679
<v Speaker 0>massive because although ETS is a managed service,

00:30:33.679 --> 00:30:36.320
<v Speaker 0>it is very far from from managed without

00:30:36.320 --> 00:30:37.599
<v Speaker 0>tools like ETS

00:30:38.080 --> 00:30:38.799
<v Speaker 0>control

00:30:39.525 --> 00:30:42.804
<v Speaker 0>or something like a composite resource with Crossplane.

00:30:42.885 --> 00:30:44.725
<v Speaker 0>But I love the simplicity of the Azure

00:30:44.725 --> 00:30:46.565
<v Speaker 0>one and the the Google one as well.

00:30:46.565 --> 00:30:48.565
<v Speaker 0>Like, they're so easy for people just to

00:30:48.565 --> 00:30:50.005
<v Speaker 0>be able to play around with.

00:30:50.565 --> 00:30:53.285
<v Speaker 1>Yes. I mean, give or take. Right? Even

00:30:53.445 --> 00:30:55.390
<v Speaker 1>the simplest one like Google

00:30:55.390 --> 00:30:58.590
<v Speaker 1>becomes complicated over time because it's not really,

00:30:58.590 --> 00:31:00.190
<v Speaker 1>hey. I need a cluster. No. I really

00:31:00.190 --> 00:31:01.309
<v Speaker 1>need a cluster,

00:31:01.550 --> 00:31:04.350
<v Speaker 1>and I need I'm inventing now a database,

00:31:04.430 --> 00:31:06.910
<v Speaker 1>and that cluster cannot be just JKE. It

00:31:06.910 --> 00:31:08.750
<v Speaker 1>needs to run something inside.

00:31:08.990 --> 00:31:11.645
<v Speaker 1>So it's it's always more than a single

00:31:11.645 --> 00:31:12.365
<v Speaker 1>resource.

00:31:12.685 --> 00:31:13.325
<v Speaker 1>Now

00:31:13.725 --> 00:31:14.205
<v Speaker 1>they can

00:31:15.405 --> 00:31:17.085
<v Speaker 1>what I'm trying to say is that it

00:31:17.085 --> 00:31:19.965
<v Speaker 1>almost always gets complex. Now the levels of

00:31:19.965 --> 00:31:23.485
<v Speaker 1>complexity depending on providers differ greatly. Right? Mhmm.

00:31:23.485 --> 00:31:23.805
<v Speaker 0>And,

00:31:25.020 --> 00:31:27.340
<v Speaker 1>yes, some are some are easier than others.

00:31:27.660 --> 00:31:28.220
<v Speaker 0>Alright.

00:31:28.940 --> 00:31:31.260
<v Speaker 0>Can can we do something funny

00:31:31.340 --> 00:31:32.940
<v Speaker 0>or crazy depending on how you would look

00:31:32.940 --> 00:31:35.500
<v Speaker 0>at it? Like, you've you've actually provisioned an

00:31:35.500 --> 00:31:38.365
<v Speaker 0>EKS cluster there. Is that correct? Mhmm. Yes.

00:31:38.365 --> 00:31:40.445
<v Speaker 1>I can let me let me double check.

00:31:40.445 --> 00:31:41.884
<v Speaker 1>Maybe I didn't yet.

00:31:42.525 --> 00:31:44.605
<v Speaker 1>Because another interesting thing about

00:31:45.565 --> 00:31:47.804
<v Speaker 1>AWS is the speed with which things are

00:31:47.804 --> 00:31:48.445
<v Speaker 1>happening.

00:31:48.605 --> 00:31:49.804
<v Speaker 0>The lack of speed, you mean?

00:31:50.809 --> 00:31:51.850
<v Speaker 1>You said it.

00:31:52.490 --> 00:31:54.090
<v Speaker 0>Yeah. I don't I don't mind being biased

00:31:54.090 --> 00:31:56.649
<v Speaker 0>on your stream. Pushing it towards saying it.

00:31:58.890 --> 00:32:00.809
<v Speaker 0>I think the median time for an ETS

00:32:00.809 --> 00:32:03.130
<v Speaker 0>cluster is around twenty to twenty five minutes.

00:32:03.130 --> 00:32:04.490
<v Speaker 0>It is. So

00:32:05.025 --> 00:32:07.185
<v Speaker 1>cluster is still not up and running, and

00:32:07.185 --> 00:32:09.825
<v Speaker 1>the node group did not start because it

00:32:09.825 --> 00:32:12.305
<v Speaker 1>needs to wait for the cluster to be

00:32:12.305 --> 00:32:14.785
<v Speaker 1>created. And this is another thing that I

00:32:14.785 --> 00:32:16.945
<v Speaker 1>think makes a difference between using a control

00:32:16.945 --> 00:32:19.930
<v Speaker 1>plane than, let's say, simple CLI. Right? I

00:32:19.930 --> 00:32:22.730
<v Speaker 1>do not have to specify dependencies.

00:32:22.730 --> 00:32:24.650
<v Speaker 1>Normally, I would need to say, hey. Node

00:32:24.650 --> 00:32:26.490
<v Speaker 1>group depends on cluster

00:32:26.730 --> 00:32:28.730
<v Speaker 1>because you cannot create a node group until

00:32:28.730 --> 00:32:31.370
<v Speaker 1>cluster is there, and that can also get

00:32:31.370 --> 00:32:33.210
<v Speaker 1>messy. In this case, we do not I

00:32:33.210 --> 00:32:36.065
<v Speaker 1>did not specify any dependencies because simply control

00:32:36.065 --> 00:32:38.225
<v Speaker 1>plane's job is to figure out what to

00:32:38.225 --> 00:32:40.705
<v Speaker 1>do and repeat if it cannot be done

00:32:40.705 --> 00:32:43.265
<v Speaker 1>and all that stuff. Right? Mhmm. But, yeah,

00:32:43.265 --> 00:32:45.105
<v Speaker 1>you will need to if it's something funny,

00:32:45.105 --> 00:32:47.105
<v Speaker 1>you would need to wait until AWS is

00:32:47.105 --> 00:32:50.180
<v Speaker 1>created, or you can tell me whether that's

00:32:50.180 --> 00:32:51.860
<v Speaker 1>something funny can be done in

00:32:52.340 --> 00:32:53.059
<v Speaker 0>Yeah. We yeah.

00:32:53.620 --> 00:32:56.100
<v Speaker 0>Well, no. What I'm thinking is, right, we've

00:32:56.260 --> 00:32:58.180
<v Speaker 0>we've got a couple of subnets there. Right?

00:32:58.180 --> 00:33:00.500
<v Speaker 0>So and they all say true true for

00:33:00.500 --> 00:33:02.405
<v Speaker 0>ready and synced. Now I I just wanna

00:33:02.405 --> 00:33:04.645
<v Speaker 0>show people what my favorite thing about Crossplane

00:33:04.645 --> 00:33:06.565
<v Speaker 0>is the continual reconciliation.

00:33:06.725 --> 00:33:08.405
<v Speaker 0>Like, can we just go delete a subnet

00:33:08.405 --> 00:33:09.684
<v Speaker 0>from the UI? Of course.

00:33:10.085 --> 00:33:11.765
<v Speaker 1>Of course. Let's do that.

00:33:13.820 --> 00:33:16.860
<v Speaker 1>Let me this is my account.

00:33:19.179 --> 00:33:20.139
<v Speaker 1>Submits.

00:33:22.860 --> 00:33:23.740
<v Speaker 1>Okay.

00:33:25.260 --> 00:33:26.140
<v Speaker 1>Here we are.

00:33:29.075 --> 00:33:33.075
<v Speaker 1>I think that let me double check. OBF

00:33:33.075 --> 00:33:35.075
<v Speaker 1>is one of them. Yes. Do you wanna

00:33:35.075 --> 00:33:36.035
<v Speaker 1>choose or

00:33:36.515 --> 00:33:38.035
<v Speaker 1>number? One to three.

00:33:38.515 --> 00:33:39.315
<v Speaker 0>Two.

00:33:39.555 --> 00:33:42.195
<v Speaker 1>There we go. Okay. This one goes out.

00:33:44.610 --> 00:33:46.370
<v Speaker 0>Bye bye, Submit. Yeah.

00:33:46.770 --> 00:33:48.850
<v Speaker 1>No. It cannot be deleted because Oh, I

00:33:48.850 --> 00:33:50.450
<v Speaker 0>just got a reference back. Okay.

00:33:51.410 --> 00:33:53.730
<v Speaker 1>Let's let's do this simpler because I I

00:33:53.730 --> 00:33:54.930
<v Speaker 1>don't wanna go into

00:33:56.130 --> 00:33:58.050
<v Speaker 1>AWS badness of

00:33:58.535 --> 00:34:00.615
<v Speaker 1>dependencies. You know, you cannot delete this because

00:34:00.615 --> 00:34:02.375
<v Speaker 1>it depends on that, and that depends on

00:34:02.375 --> 00:34:04.455
<v Speaker 1>something else. Let's do this.

00:34:04.615 --> 00:34:05.894
<v Speaker 1>Let's go here

00:34:06.855 --> 00:34:09.655
<v Speaker 1>and delete the node group. How does that

00:34:09.655 --> 00:34:10.215
<v Speaker 1>sound?

00:34:10.775 --> 00:34:11.574
<v Speaker 0>Yeah.

00:34:11.574 --> 00:34:12.375
<v Speaker 0>Go for

00:34:14.140 --> 00:34:16.700
<v Speaker 1>If I I hardly ever use the

00:34:17.020 --> 00:34:17.739
<v Speaker 1>console.

00:34:17.820 --> 00:34:19.580
<v Speaker 1>I don't know how how you do stuff

00:34:19.580 --> 00:34:20.220
<v Speaker 1>in

00:34:21.739 --> 00:34:23.820
<v Speaker 1>from from web UI. Here.

00:34:24.620 --> 00:34:25.100
<v Speaker 1>Delete.

00:34:26.755 --> 00:34:28.114
<v Speaker 1>What do I need to do?

00:34:28.755 --> 00:34:29.635
<v Speaker 1>Team.

00:34:30.275 --> 00:34:31.074
<v Speaker 1>Okay.

00:34:33.554 --> 00:34:34.275
<v Speaker 1>Okay.

00:34:34.355 --> 00:34:36.995
<v Speaker 1>It will be deleted eventually, and then

00:34:37.955 --> 00:34:39.715
<v Speaker 1>give it a minute or something like that.

00:34:39.715 --> 00:34:41.395
<v Speaker 1>And if I didn't mess it up,

00:34:42.730 --> 00:34:44.010
<v Speaker 1>it should reappear.

00:34:44.250 --> 00:34:47.130
<v Speaker 0>So does that mean that on your CLI,

00:34:47.130 --> 00:34:50.330
<v Speaker 0>you could run kubectl get node groups?

00:34:51.290 --> 00:34:52.170
<v Speaker 1>Oh, yeah.

00:34:52.570 --> 00:34:54.330
<v Speaker 1>Yeah. Kubectl

00:34:54.485 --> 00:34:55.844
<v Speaker 1>get node

00:34:55.844 --> 00:34:57.125
<v Speaker 1>node groups. Right?

00:34:58.485 --> 00:35:00.725
<v Speaker 1>And right now, it's synced.

00:35:01.045 --> 00:35:04.005
<v Speaker 1>Soon, it will detect when when it's deleted.

00:35:04.405 --> 00:35:06.485
<v Speaker 1>I I will actually put it watch it.

00:35:06.485 --> 00:35:07.605
<v Speaker 1>Right? Get

00:35:08.085 --> 00:35:09.285
<v Speaker 1>node groups.

00:35:11.660 --> 00:35:14.779
<v Speaker 1>At one moment, it will change sync to

00:35:14.779 --> 00:35:15.980
<v Speaker 1>false and

00:35:16.619 --> 00:35:18.859
<v Speaker 1>sorry. It will change ready to false,

00:35:19.980 --> 00:35:20.540
<v Speaker 1>and

00:35:20.940 --> 00:35:23.500
<v Speaker 1>then it will change ready to true again.

00:35:23.980 --> 00:35:25.339
<v Speaker 0>Yeah. So that's

00:35:26.335 --> 00:35:28.975
<v Speaker 0>Crossplane as what it's just checking that every

00:35:28.975 --> 00:35:31.055
<v Speaker 0>one minute, four minutes, something like that. There's

00:35:31.055 --> 00:35:32.895
<v Speaker 0>some interval, right, of the factory There is

00:35:33.535 --> 00:35:35.615
<v Speaker 1>I think and it don't take me that's

00:35:35.695 --> 00:35:37.615
<v Speaker 1>don't take this as pretty in stone. I

00:35:37.615 --> 00:35:39.215
<v Speaker 1>think that the default interval

00:35:39.215 --> 00:35:41.620
<v Speaker 1>is three minutes or something like that just

00:35:41.620 --> 00:35:42.740
<v Speaker 1>not to bomb

00:35:43.460 --> 00:35:45.220
<v Speaker 1>providers with requests.

00:35:45.700 --> 00:35:46.260
<v Speaker 1>And

00:35:46.900 --> 00:35:48.420
<v Speaker 1>and it can be changed. Right? You can

00:35:48.420 --> 00:35:51.300
<v Speaker 1>configure what that interval is. That's hey. Look

00:35:51.300 --> 00:35:53.460
<v Speaker 1>at this. Ready false Yep. While talking.

00:35:55.225 --> 00:35:56.105
<v Speaker 1>And then

00:35:57.145 --> 00:35:59.705
<v Speaker 1>periodically checks things and make sure that everything

00:35:59.705 --> 00:36:02.425
<v Speaker 1>is synchronized and all the chess. Let's see

00:36:02.425 --> 00:36:04.665
<v Speaker 1>what's happening here. It's still deleting.

00:36:07.305 --> 00:36:09.890
<v Speaker 1>Man, you cannot even oh, no. There we

00:36:09.890 --> 00:36:11.730
<v Speaker 1>are. It's ready.

00:36:15.090 --> 00:36:15.810
<v Speaker 0>Nice.

00:36:15.890 --> 00:36:18.050
<v Speaker 0>That's oh, that that's the node inside the

00:36:18.050 --> 00:36:18.850
<v Speaker 0>node group.

00:36:19.410 --> 00:36:20.370
<v Speaker 1>This

00:36:20.370 --> 00:36:20.930
<v Speaker 1>is

00:36:21.490 --> 00:36:24.290
<v Speaker 1>okay. I'm definitely confused with configuration.

00:36:25.205 --> 00:36:27.365
<v Speaker 1>As I said, I'm not using web UIs.

00:36:27.365 --> 00:36:30.165
<v Speaker 1>Deleting still might be That we'll need to

00:36:30.165 --> 00:36:31.925
<v Speaker 0>wait for AWS to catch up for that

00:36:31.925 --> 00:36:34.005
<v Speaker 0>to to to disappear, and then Crossplane can

00:36:34.005 --> 00:36:35.125
<v Speaker 0>maybe go and try and create a new

00:36:35.125 --> 00:36:36.725
<v Speaker 0>one with the same name. So who knows

00:36:36.725 --> 00:36:38.450
<v Speaker 0>how long that's gonna take? But

00:36:39.089 --> 00:36:41.009
<v Speaker 0>alright. Cool. Yeah. It's just nice. Like, the

00:36:41.009 --> 00:36:42.529
<v Speaker 0>fact that it even noticed that it wasn't

00:36:42.529 --> 00:36:43.890
<v Speaker 0>ready and the fact that it's gonna be

00:36:43.890 --> 00:36:45.809
<v Speaker 0>able to resync and recreate that, I just

00:36:45.809 --> 00:36:47.890
<v Speaker 0>think it's a really cool property of Crossplane

00:36:47.890 --> 00:36:49.650
<v Speaker 0>that we we haven't seen

00:36:49.890 --> 00:36:51.730
<v Speaker 0>in this type of tool to date until

00:36:51.730 --> 00:36:54.415
<v Speaker 0>really Crossplane came along. So just taking it

00:36:54.575 --> 00:36:56.655
<v Speaker 0>sorry. On you go. Yeah. Sorry.

00:36:57.295 --> 00:37:00.015
<v Speaker 1>That specific thing, actually, I don't know how

00:37:00.015 --> 00:37:02.095
<v Speaker 1>far back you go. Right? But we had

00:37:02.095 --> 00:37:03.535
<v Speaker 1>it with Chef and Puppet

00:37:04.655 --> 00:37:07.855
<v Speaker 1>in a different way. Right? It didn't use

00:37:06.660 --> 00:37:08.980
<v Speaker 1>Kubernetes scheduler and all this stuff, and I'm

00:37:08.980 --> 00:37:11.059
<v Speaker 1>not now glorifying Chef and Puppet because that

00:37:11.059 --> 00:37:12.500
<v Speaker 1>would be the last thing I would do.

00:37:12.819 --> 00:37:15.940
<v Speaker 1>But some sort of reconciliation loop existed, and

00:37:15.940 --> 00:37:17.380
<v Speaker 1>after that, it was lost.

00:37:17.700 --> 00:37:19.220
<v Speaker 1>And now we have it again.

00:37:20.145 --> 00:37:22.625
<v Speaker 0>Well, I mean, I preferred SaltStack's take on

00:37:22.625 --> 00:37:24.945
<v Speaker 0>it with its high state and its minion

00:37:24.945 --> 00:37:27.425
<v Speaker 0>based check ins. But, yeah, you're right. Salt,

00:37:27.425 --> 00:37:29.905
<v Speaker 0>Chef, and Puppet did have agent based setups

00:37:29.905 --> 00:37:32.145
<v Speaker 0>as well, which would, on an interval,

00:37:32.385 --> 00:37:35.025
<v Speaker 0>rerun their their recipes and their manifests.

00:37:36.210 --> 00:37:37.010
<v Speaker 1>Exactly.

00:37:37.250 --> 00:37:38.370
<v Speaker 0>Yeah. You're right.

00:37:39.330 --> 00:37:40.369
<v Speaker 0>I was I mean, I was just trying

00:37:40.369 --> 00:37:41.490
<v Speaker 0>to be nice to Crossplane, but I take

00:37:41.490 --> 00:37:43.170
<v Speaker 0>it back. It's crap. I don't like it.

00:37:43.810 --> 00:37:44.530
<v Speaker 0>Okay.

00:37:45.810 --> 00:37:47.810
<v Speaker 0>So, I mean, we don't need to sit

00:37:47.810 --> 00:37:49.330
<v Speaker 0>and watch for that, Deline. Maybe we can

00:37:49.330 --> 00:37:51.464
<v Speaker 0>check on it a little bit. Was there

00:37:51.464 --> 00:37:52.904
<v Speaker 0>anything else you wanted to show us, or

00:37:52.904 --> 00:37:54.265
<v Speaker 0>do want me just to keep throwing random

00:37:54.265 --> 00:37:56.664
<v Speaker 0>stuff at you? Go random stuff. I like

00:37:56.664 --> 00:37:58.425
<v Speaker 1>that more than me having

00:37:58.505 --> 00:38:00.664
<v Speaker 1>prepared. I mean, I have random money if

00:38:00.585 --> 00:38:03.065
<v Speaker 1>can show and run. Right? But, hey, if

00:38:03.065 --> 00:38:05.289
<v Speaker 1>you have random questions, even better. Oh, yeah.

00:38:05.289 --> 00:38:07.130
<v Speaker 0>So let's, you know, put this on of

00:38:07.130 --> 00:38:09.210
<v Speaker 0>the lens. I mean and I am relatively

00:38:09.210 --> 00:38:11.289
<v Speaker 0>new to Crossplane, I've got this lens anyway.

00:38:11.289 --> 00:38:13.210
<v Speaker 0>But if I wanna get started, how do

00:38:13.210 --> 00:38:15.450
<v Speaker 0>I work out what providers are available? How

00:38:15.450 --> 00:38:16.490
<v Speaker 0>do I work out,

00:38:17.529 --> 00:38:19.210
<v Speaker 0>you know, what I can actually do with

00:38:19.210 --> 00:38:19.690
<v Speaker 0>Crossplane?

00:38:20.585 --> 00:38:21.224
<v Speaker 1>So

00:38:21.545 --> 00:38:22.905
<v Speaker 1>no. No. That's

00:38:23.704 --> 00:38:24.825
<v Speaker 1>wrong address.

00:38:24.904 --> 00:38:26.825
<v Speaker 1>Crossplane IO. Okay.

00:38:27.704 --> 00:38:29.545
<v Speaker 1>So getting started

00:38:30.904 --> 00:38:32.904
<v Speaker 1>is where you would usually go

00:38:33.530 --> 00:38:34.730
<v Speaker 1>and follow

00:38:35.609 --> 00:38:36.970
<v Speaker 1>follow the instructions.

00:38:39.210 --> 00:38:41.770
<v Speaker 1>It has I'll be honest. There are things

00:38:41.770 --> 00:38:43.530
<v Speaker 1>to be improved there, but it's a good

00:38:43.530 --> 00:38:44.410
<v Speaker 1>starting point.

00:38:45.050 --> 00:38:48.405
<v Speaker 1>And regarding providers, there are two, let's say,

00:38:48.405 --> 00:38:49.685
<v Speaker 1>types of providers.

00:38:50.245 --> 00:38:52.005
<v Speaker 1>Those that you see actually, let me make

00:38:52.005 --> 00:38:52.805
<v Speaker 1>this bigger.

00:38:53.125 --> 00:38:54.885
<v Speaker 1>Those that you and

00:38:55.045 --> 00:38:56.085
<v Speaker 1>let me

00:38:56.325 --> 00:38:57.045
<v Speaker 1>do

00:38:58.325 --> 00:38:59.045
<v Speaker 1>this.

00:39:00.325 --> 00:39:00.725
<v Speaker 1>Okay.

00:39:01.250 --> 00:39:03.250
<v Speaker 1>Those over here, right,

00:39:04.450 --> 00:39:07.010
<v Speaker 1>are the providers that are official.

00:39:08.130 --> 00:39:08.770
<v Speaker 1>And

00:39:09.329 --> 00:39:11.890
<v Speaker 1>then there are providers that are not official.

00:39:11.890 --> 00:39:12.369
<v Speaker 1>Like,

00:39:12.930 --> 00:39:14.450
<v Speaker 1>when I when I say official, it's kind

00:39:14.450 --> 00:39:17.335
<v Speaker 1>of strange. But let's say, providers that are

00:39:17.894 --> 00:39:20.055
<v Speaker 1>exist for a while, that are proven to

00:39:20.055 --> 00:39:22.615
<v Speaker 1>be working, that passed all the tests and

00:39:22.615 --> 00:39:24.775
<v Speaker 1>and everything that we expect them to do,

00:39:24.775 --> 00:39:27.015
<v Speaker 1>which does not make them perfect.

00:39:27.335 --> 00:39:28.454
<v Speaker 1>And then there is

00:39:29.280 --> 00:39:31.040
<v Speaker 1>what did I want to do now?

00:39:33.520 --> 00:39:35.600
<v Speaker 1>My keyboard is going crazy.

00:39:35.920 --> 00:39:37.040
<v Speaker 1>Crossplane

00:39:37.040 --> 00:39:38.000
<v Speaker 1>contrib,

00:39:38.960 --> 00:39:42.535
<v Speaker 1>which is where everybody else can contribute.

00:39:42.535 --> 00:39:45.495
<v Speaker 1>And, eventually, things from here will go go

00:39:45.495 --> 00:39:47.095
<v Speaker 1>to the docs.

00:39:47.495 --> 00:39:49.095
<v Speaker 1>Like, we recently

00:39:50.695 --> 00:39:52.695
<v Speaker 1>worked with Civo folks

00:39:52.695 --> 00:39:54.455
<v Speaker 1>and got a Civo provider, right,

00:39:56.770 --> 00:39:58.530
<v Speaker 1>And so on and so forth. Like,

00:39:58.930 --> 00:40:01.250
<v Speaker 1>I'm working right now on some materials that

00:40:01.250 --> 00:40:03.250
<v Speaker 1>I will probably publish

00:40:03.250 --> 00:40:05.250
<v Speaker 1>in in a few days, but I use

00:40:05.250 --> 00:40:07.569
<v Speaker 1>this one, provide us SQL that allows you

00:40:07.569 --> 00:40:09.675
<v Speaker 1>to do something with your databases no matter

00:40:09.675 --> 00:40:11.675
<v Speaker 1>where the where they're running. So there is

00:40:11.675 --> 00:40:14.235
<v Speaker 1>a decent number of providers

00:40:14.235 --> 00:40:16.235
<v Speaker 1>outside of the official docs

00:40:17.275 --> 00:40:19.595
<v Speaker 1>waiting to go into the docs.

00:40:21.355 --> 00:40:22.075
<v Speaker 0>Thanks.

00:40:22.955 --> 00:40:23.595
<v Speaker 0>So

00:40:24.240 --> 00:40:26.560
<v Speaker 0>there's also a I mean, you work for

00:40:26.560 --> 00:40:28.480
<v Speaker 0>a company called Upbound, and they've they have

00:40:28.480 --> 00:40:30.720
<v Speaker 0>a SaaS offering that allows people to try

00:40:30.720 --> 00:40:32.640
<v Speaker 0>this out relatively easily.

00:40:32.800 --> 00:40:35.280
<v Speaker 0>Is that Correct. Yeah. Wanna share a little

00:40:35.280 --> 00:40:36.160
<v Speaker 0>bit about that?

00:40:36.640 --> 00:40:39.520
<v Speaker 1>So, yeah, if you go to Upbound Cloud,

00:40:40.385 --> 00:40:41.345
<v Speaker 1>you have

00:40:41.984 --> 00:40:44.305
<v Speaker 1>you have basically a web UI that allows

00:40:44.305 --> 00:40:45.505
<v Speaker 1>you to do stuff.

00:40:47.505 --> 00:40:49.585
<v Speaker 1>And let me switch to the one that

00:40:49.585 --> 00:40:50.945
<v Speaker 1>I'm using today.

00:40:51.665 --> 00:40:53.905
<v Speaker 0>Oh, so you're you're using outbound cloud today.

00:40:54.290 --> 00:40:57.250
<v Speaker 0>Right? Yes. Yes. I I I did everything

00:40:57.250 --> 00:40:58.530
<v Speaker 1>from the CLI.

00:40:59.089 --> 00:41:01.490
<v Speaker 1>There we are. Right? And this is the

00:41:02.210 --> 00:41:02.850
<v Speaker 1>oh,

00:41:04.290 --> 00:41:04.690
<v Speaker 1>come on.

00:41:06.625 --> 00:41:09.105
<v Speaker 1>It will happen. Right? You can't,

00:41:09.265 --> 00:41:11.105
<v Speaker 1>you know, you can browse things.

00:41:12.465 --> 00:41:13.985
<v Speaker 1>I don't know why it's so slow. It's

00:41:13.985 --> 00:41:14.785
<v Speaker 1>embarrassing.

00:41:15.505 --> 00:41:17.345
<v Speaker 1>There we are. Right? Look. I don't know.

00:41:17.345 --> 00:41:19.025
<v Speaker 1>What did they do? We get something. You

00:41:19.025 --> 00:41:21.260
<v Speaker 1>can see the resources that are of certain

00:41:21.260 --> 00:41:22.540
<v Speaker 1>name or certain

00:41:23.100 --> 00:41:24.140
<v Speaker 1>phrases.

00:41:26.140 --> 00:41:28.300
<v Speaker 1>You can consult them. You can see that

00:41:28.300 --> 00:41:30.060
<v Speaker 1>all the providers that

00:41:30.460 --> 00:41:33.100
<v Speaker 1>are having like, for example, for AWS, those

00:41:33.100 --> 00:41:33.820
<v Speaker 1>are all the

00:41:34.365 --> 00:41:36.845
<v Speaker 1>types of resources or providers that we can

00:41:36.845 --> 00:41:37.405
<v Speaker 1>use.

00:41:37.645 --> 00:41:39.565
<v Speaker 1>Actually, the list is bigger because some of

00:41:39.565 --> 00:41:42.045
<v Speaker 1>them have, like, multiple

00:41:42.605 --> 00:41:43.805
<v Speaker 1>things inside.

00:41:44.045 --> 00:41:46.925
<v Speaker 1>Like, Elastic Compute has seven resources in total.

00:41:48.690 --> 00:41:50.609
<v Speaker 1>And then repositories

00:41:50.609 --> 00:41:53.650
<v Speaker 1>where you can package your configurations and your

00:41:53.650 --> 00:41:55.730
<v Speaker 1>code into a container, push them there, and

00:41:55.730 --> 00:41:57.569
<v Speaker 1>make it even simpler to use, you know,

00:41:57.569 --> 00:41:58.690
<v Speaker 1>users, teams,

00:42:00.290 --> 00:42:01.170
<v Speaker 1>security,

00:42:01.170 --> 00:42:04.210
<v Speaker 1>and all the things that usually enterprise

00:42:03.645 --> 00:42:06.285
<v Speaker 1>companies are looking for looking for.

00:42:07.485 --> 00:42:10.365
<v Speaker 1>And we are soon to release a version

00:42:10.365 --> 00:42:11.565
<v Speaker 1>of this that is

00:42:12.685 --> 00:42:13.885
<v Speaker 1>self hosted.

00:42:14.125 --> 00:42:16.845
<v Speaker 1>Actually, actually, there are three ways. Like, when

00:42:16.845 --> 00:42:18.205
<v Speaker 1>you create a new control plane,

00:42:18.720 --> 00:42:20.640
<v Speaker 1>you can have it oh, that was too

00:42:20.640 --> 00:42:22.400
<v Speaker 1>fast. I clicked too soon.

00:42:22.560 --> 00:42:24.720
<v Speaker 1>Right? You can have a control plane hosted

00:42:24.720 --> 00:42:26.960
<v Speaker 1>by us. You can have a control plane

00:42:26.960 --> 00:42:28.240
<v Speaker 1>self hosted.

00:42:29.119 --> 00:42:30.480
<v Speaker 1>That's Crossplane itself.

00:42:31.345 --> 00:42:33.825
<v Speaker 1>And the third option will be what you

00:42:33.825 --> 00:42:36.385
<v Speaker 1>see on the screen, the let's say, cloud

00:42:36.385 --> 00:42:38.225
<v Speaker 1>to be self hosted as well.

00:42:39.425 --> 00:42:41.745
<v Speaker 1>It is this is the hosted version is,

00:42:41.745 --> 00:42:44.145
<v Speaker 1>I think, especially helpful if you wanna just

00:42:44.305 --> 00:42:46.119
<v Speaker 1>if you just want to start and you

00:42:46.119 --> 00:42:48.119
<v Speaker 1>don't want to set up Kubernetes cluster with

00:42:48.119 --> 00:42:50.040
<v Speaker 1>Crossplane there, you just want to play around

00:42:50.040 --> 00:42:50.680
<v Speaker 1>fast,

00:42:50.920 --> 00:42:53.720
<v Speaker 1>hosted version is is brilliant. It just gives

00:42:53.720 --> 00:42:54.280
<v Speaker 1>you

00:42:54.920 --> 00:42:55.800
<v Speaker 1>instructions.

00:42:55.800 --> 00:42:58.040
<v Speaker 1>You get distraction. Actually, let's do it. Right?

00:42:59.505 --> 00:43:00.545
<v Speaker 1>Test one.

00:43:01.984 --> 00:43:03.105
<v Speaker 1>I understand.

00:43:03.105 --> 00:43:04.545
<v Speaker 1>Create control plane.

00:43:05.345 --> 00:43:08.385
<v Speaker 1>And now this takes a few seconds,

00:43:09.184 --> 00:43:10.944
<v Speaker 1>and you get the control plane only for

00:43:10.944 --> 00:43:12.880
<v Speaker 1>you in a way. Right? And all you

00:43:12.880 --> 00:43:14.560
<v Speaker 1>have to do is execute the command to

00:43:14.560 --> 00:43:16.240
<v Speaker 1>connect your KubeCuttle

00:43:16.240 --> 00:43:18.160
<v Speaker 1>with control plane.

00:43:18.480 --> 00:43:20.560
<v Speaker 0>Why do the control planes have a scheduled

00:43:20.560 --> 00:43:21.360
<v Speaker 0>deletion?

00:43:22.960 --> 00:43:23.680
<v Speaker 1>Because

00:43:24.400 --> 00:43:27.015
<v Speaker 1>we think of them more as a temporary

00:43:27.015 --> 00:43:28.775
<v Speaker 1>solution for free usage.

00:43:28.935 --> 00:43:30.535
<v Speaker 1>If you want to make it permanent, then

00:43:30.535 --> 00:43:32.375
<v Speaker 1>you speak without sales guys.

00:43:33.575 --> 00:43:35.895
<v Speaker 0>I got it. Okay. There you go.

00:43:36.215 --> 00:43:38.695
<v Speaker 0>Still fourteen days usage to kick the tires

00:43:38.695 --> 00:43:40.850
<v Speaker 0>across, play and play with the providers, start

00:43:40.850 --> 00:43:43.010
<v Speaker 0>building out your composite resources. That's that's enough

00:43:43.010 --> 00:43:44.050
<v Speaker 0>time to get a feel for it and

00:43:44.050 --> 00:43:45.330
<v Speaker 0>see if it's right for for you and

00:43:45.330 --> 00:43:46.290
<v Speaker 0>your organization.

00:43:47.410 --> 00:43:49.890
<v Speaker 1>There's another important thing we're really trying.

00:43:50.450 --> 00:43:51.570
<v Speaker 1>Nothing really

00:43:52.370 --> 00:43:55.170
<v Speaker 1>we are not keeping anything from Crossplane proprietary.

00:43:55.170 --> 00:43:57.224
<v Speaker 1>Right? We have we have things on top

00:43:57.224 --> 00:43:59.224
<v Speaker 1>of it like this cloud,

00:43:59.545 --> 00:44:01.704
<v Speaker 1>web UI, stuff like that, but Crossplane itself,

00:44:01.704 --> 00:44:02.664
<v Speaker 1>that's completely

00:44:02.744 --> 00:44:05.065
<v Speaker 1>so you you can go for free from

00:44:05.065 --> 00:44:07.464
<v Speaker 1>day one without really suffering at all.

00:44:08.184 --> 00:44:08.505
<v Speaker 0>Alright.

00:44:09.180 --> 00:44:11.420
<v Speaker 0>Okay. If you're watching and you have any

00:44:11.420 --> 00:44:12.140
<v Speaker 0>questions,

00:44:12.220 --> 00:44:14.220
<v Speaker 0>then please drop them into the comment section

00:44:14.220 --> 00:44:15.420
<v Speaker 0>and we'll do our best to answer them

00:44:15.420 --> 00:44:16.540
<v Speaker 0>before we finish.

00:44:17.339 --> 00:44:19.099
<v Speaker 0>So I guess we've got two things. Right?

00:44:19.099 --> 00:44:20.780
<v Speaker 0>We're gonna wait for this oh, there we

00:44:20.780 --> 00:44:22.059
<v Speaker 0>go. It's already ready, so never mind.

00:44:23.615 --> 00:44:26.015
<v Speaker 0>We now have our own control Crossplane control

00:44:26.015 --> 00:44:27.295
<v Speaker 0>plane that we can use.

00:44:28.015 --> 00:44:30.095
<v Speaker 0>And that just I I'm assuming that just

00:44:30.095 --> 00:44:31.454
<v Speaker 0>gives you a KubeConfig,

00:44:31.454 --> 00:44:33.055
<v Speaker 0>right, or something like It goes to your

00:44:33.055 --> 00:44:35.135
<v Speaker 1>KubeConfig. That's that's the whole gist.

00:44:35.570 --> 00:44:37.650
<v Speaker 1>We just need to connect your KubeConfig with

00:44:37.650 --> 00:44:38.290
<v Speaker 1>this.

00:44:38.450 --> 00:44:39.250
<v Speaker 1>This is

00:44:39.970 --> 00:44:41.810
<v Speaker 1>behind the scenes, this is a

00:44:42.050 --> 00:44:45.570
<v Speaker 1>virtual Kubernetes cluster in our Kubernetes cluster. So

00:44:45.570 --> 00:44:48.770
<v Speaker 1>we are stacking clusters on top of clusters

00:44:48.850 --> 00:44:49.970
<v Speaker 1>for every user.

00:44:50.735 --> 00:44:52.335
<v Speaker 0>I see. I I don't know if you

00:44:52.335 --> 00:44:54.095
<v Speaker 0>can go into implementation details, but I'm curious

00:44:54.095 --> 00:44:55.935
<v Speaker 0>if it uses vCluster, which is a pretty

00:44:55.935 --> 00:44:57.215
<v Speaker 0>cool tool in this space.

00:44:57.615 --> 00:44:59.535
<v Speaker 1>No. We are not for a couple of

00:44:59.535 --> 00:45:00.175
<v Speaker 1>reasons.

00:45:00.735 --> 00:45:03.295
<v Speaker 1>Actually, I'll to begin with, I love vCluster.

00:45:03.295 --> 00:45:04.575
<v Speaker 1>I think it's absolutely brilliant.

00:45:05.890 --> 00:45:07.250
<v Speaker 1>But we started

00:45:07.250 --> 00:45:10.050
<v Speaker 1>before vCluster with this or when vCluster was

00:45:10.050 --> 00:45:12.130
<v Speaker 1>not a thing or popular or whatnot. So

00:45:12.130 --> 00:45:12.930
<v Speaker 1>we have

00:45:13.570 --> 00:45:16.210
<v Speaker 1>we have investment in in when we started,

00:45:16.210 --> 00:45:18.770
<v Speaker 1>I think that there was no real solution

00:45:18.770 --> 00:45:20.050
<v Speaker 1>like vCluster.

00:45:20.369 --> 00:45:21.170
<v Speaker 1>And

00:45:21.625 --> 00:45:24.105
<v Speaker 1>the guys working on it have some security

00:45:24.105 --> 00:45:25.785
<v Speaker 1>concerns about vCluster.

00:45:25.785 --> 00:45:28.025
<v Speaker 1>Actually, not security concern. The bigger thing is

00:45:28.025 --> 00:45:28.585
<v Speaker 1>that

00:45:29.065 --> 00:45:32.025
<v Speaker 1>now that we built our own solution, let's

00:45:32.025 --> 00:45:33.705
<v Speaker 1>say, it is optimized

00:45:33.705 --> 00:45:36.345
<v Speaker 1>for exactly what it does. Right? While vCluster

00:45:36.345 --> 00:45:37.145
<v Speaker 1>is more generic.

00:45:38.070 --> 00:45:40.390
<v Speaker 1>Like, in that virtual cluster, we are not

00:45:40.390 --> 00:45:43.190
<v Speaker 1>packaging the whole Kubernetes interface and everything, but

00:45:43.190 --> 00:45:45.030
<v Speaker 1>only the things that Crossplane

00:45:45.030 --> 00:45:45.670
<v Speaker 1>needs.

00:45:45.990 --> 00:45:48.230
<v Speaker 1>It's highly optimized custom solution.

00:45:48.550 --> 00:45:50.230
<v Speaker 1>But big cluster is awesome. I love it.

00:45:51.665 --> 00:45:52.385
<v Speaker 0>Alright.

00:45:52.865 --> 00:45:54.865
<v Speaker 0>Let's let's check on the status of our

00:45:54.865 --> 00:45:57.265
<v Speaker 0>delete node group. I'm curious about that. Wonder

00:45:57.265 --> 00:45:59.025
<v Speaker 0>if Amazon's caught up yet.

00:45:59.345 --> 00:45:59.985
<v Speaker 0>No.

00:46:00.385 --> 00:46:01.984
<v Speaker 0>Come on, Adam. No. No. I I need

00:46:01.984 --> 00:46:03.825
<v Speaker 1>to refresh. I'm never sure which parts of

00:46:03.825 --> 00:46:06.545
<v Speaker 1>the screen are refreshed automatically and which

00:46:07.980 --> 00:46:08.700
<v Speaker 1>okay.

00:46:09.020 --> 00:46:10.380
<v Speaker 1>I I'm not sure. Tell me if I'm

00:46:10.380 --> 00:46:11.660
<v Speaker 1>on a wrong screen, but I think that

00:46:11.660 --> 00:46:12.780
<v Speaker 1>I'm on the right screen. You're on the

00:46:12.780 --> 00:46:14.860
<v Speaker 0>right screen. Yes. That has been recreated to

00:46:14.860 --> 00:46:15.820
<v Speaker 0>our node group.

00:46:16.220 --> 00:46:17.420
<v Speaker 1>Active.

00:46:17.660 --> 00:46:20.300
<v Speaker 1>It was deleting. So there are two possible

00:46:20.300 --> 00:46:20.700
<v Speaker 1>explanations.

00:46:21.234 --> 00:46:22.755
<v Speaker 1>Either AWS

00:46:22.835 --> 00:46:24.515
<v Speaker 1>gave up on deleting

00:46:25.875 --> 00:46:27.635
<v Speaker 1>and said, I cannot do it, and I'm

00:46:27.635 --> 00:46:29.075
<v Speaker 1>gonna make it active again.

00:46:29.474 --> 00:46:30.755
<v Speaker 1>Or Crossplane

00:46:30.755 --> 00:46:33.635
<v Speaker 1>detected that the there is a drift and

00:46:33.635 --> 00:46:34.675
<v Speaker 1>corrected the drift.

00:46:36.400 --> 00:46:38.560
<v Speaker 0>Nice. What is our It's the latter. What

00:46:38.560 --> 00:46:40.480
<v Speaker 0>does our get node groups show?

00:46:41.760 --> 00:46:44.320
<v Speaker 1>Get node groups, here we are. Yes. Sure.

00:46:44.320 --> 00:46:44.880
<v Speaker 0>Okay.

00:46:45.280 --> 00:46:48.000
<v Speaker 0>Alright. I fixed it. That's pretty cool. Yeah.

00:46:48.160 --> 00:46:49.920
<v Speaker 0>And in fact, you can I think the

00:46:50.775 --> 00:46:52.855
<v Speaker 0>the node group name changed? Right?

00:46:53.734 --> 00:46:55.734
<v Speaker 1>I I was I I did not really

00:46:55.734 --> 00:46:57.655
<v Speaker 1>pay attention, to be honest. And even if

00:46:57.655 --> 00:47:00.214
<v Speaker 1>it did, my brain cannot remember those random

00:47:00.214 --> 00:47:02.135
<v Speaker 1>strings for more than two seconds. Yeah.

00:47:03.270 --> 00:47:04.950
<v Speaker 0>We got a a comment and a chat

00:47:04.950 --> 00:47:07.030
<v Speaker 0>from Ty who says that you have some

00:47:07.030 --> 00:47:09.590
<v Speaker 0>great videos on vCluster and others. So, yeah,

00:47:09.590 --> 00:47:12.150
<v Speaker 0>I definitely encourage people to check out Victor's

00:47:12.150 --> 00:47:14.150
<v Speaker 0>channel. I will put a link into the

00:47:14.150 --> 00:47:15.430
<v Speaker 0>show notes so you can check that out.

00:47:16.205 --> 00:47:17.245
<v Speaker 1>Oh, thank you.

00:47:17.645 --> 00:47:20.125
<v Speaker 0>Alright. We have a question from Andres.

00:47:20.205 --> 00:47:22.045
<v Speaker 0>How do you manage credentials

00:47:22.045 --> 00:47:23.405
<v Speaker 0>for the providers,

00:47:23.405 --> 00:47:25.725
<v Speaker 0>and how can you restrict usage

00:47:25.805 --> 00:47:28.045
<v Speaker 0>inside of the control plane? So, like, if

00:47:28.045 --> 00:47:29.965
<v Speaker 0>there if I don't want everyone to be

00:47:29.965 --> 00:47:31.880
<v Speaker 0>able to spin up a JKE cluster, how

00:47:31.880 --> 00:47:34.040
<v Speaker 0>would that work? So that that's another kind

00:47:34.040 --> 00:47:35.400
<v Speaker 1>of like you know, there there are so

00:47:35.400 --> 00:47:38.520
<v Speaker 1>many differences or advantages depending on how you

00:47:38.520 --> 00:47:39.240
<v Speaker 1>look at it.

00:47:40.600 --> 00:47:43.240
<v Speaker 1>So in in in traditional solutions, right,

00:47:43.815 --> 00:47:46.135
<v Speaker 1>I mean, that's that's a wrong word, traditional.

00:47:46.135 --> 00:47:48.295
<v Speaker 1>Okay. Another solution. Let's not let's just say

00:47:48.295 --> 00:47:49.095
<v Speaker 1>traditional.

00:47:49.974 --> 00:47:52.454
<v Speaker 1>When you interact with, let's say, AWS through,

00:47:52.454 --> 00:47:53.734
<v Speaker 1>let's say, CLI, you

00:47:54.295 --> 00:47:57.095
<v Speaker 1>the user that is using that CLI needs

00:47:57.095 --> 00:47:59.549
<v Speaker 1>to have access to whatever will be done

00:47:59.549 --> 00:48:00.910
<v Speaker 1>in AWS.

00:48:00.910 --> 00:48:02.750
<v Speaker 1>Right? So you need to have permissions. If

00:48:02.750 --> 00:48:04.430
<v Speaker 1>you want to create a EKS cluster, you

00:48:04.430 --> 00:48:06.029
<v Speaker 1>need to have permissions for that. Your user

00:48:06.029 --> 00:48:07.710
<v Speaker 1>needs to be privileged and what's not.

00:48:08.430 --> 00:48:09.630
<v Speaker 1>Now in our case,

00:48:10.990 --> 00:48:12.190
<v Speaker 1>Crossplane itself

00:48:13.005 --> 00:48:16.525
<v Speaker 1>is, let's say, privileged user of your provider.

00:48:16.765 --> 00:48:20.605
<v Speaker 1>You as a human running kubectl commands,

00:48:21.164 --> 00:48:23.325
<v Speaker 1>you are claiming

00:48:23.325 --> 00:48:25.405
<v Speaker 1>certain resources in certain namespace,

00:48:26.100 --> 00:48:28.340
<v Speaker 1>or you don't have to. Depends really how

00:48:28.340 --> 00:48:30.100
<v Speaker 1>you configure it. So think of it as

00:48:31.620 --> 00:48:33.700
<v Speaker 1>yeah. Let's let's say when you claim volumes

00:48:33.700 --> 00:48:34.980
<v Speaker 1>in Kubernetes. Right?

00:48:35.300 --> 00:48:36.180
<v Speaker 1>Kubernetes

00:48:36.180 --> 00:48:38.900
<v Speaker 1>has information and out in can authenticate to

00:48:38.900 --> 00:48:40.580
<v Speaker 1>create a volume like

00:48:40.820 --> 00:48:44.305
<v Speaker 1>EFS or VBS or whatever it is. You

00:48:44.305 --> 00:48:45.265
<v Speaker 1>as a user,

00:48:45.664 --> 00:48:47.825
<v Speaker 1>an admin of that cluster gave you permission

00:48:47.825 --> 00:48:50.545
<v Speaker 1>to create certain volumes in certain namespaces.

00:48:51.184 --> 00:48:53.505
<v Speaker 1>Right? So you need to claim them. So

00:48:54.144 --> 00:48:55.585
<v Speaker 1>there are those two distinctions.

00:48:56.349 --> 00:48:57.869
<v Speaker 1>What you as a what you as a

00:48:57.869 --> 00:49:00.589
<v Speaker 1>person do, you're interacting with Kubernetes, and you

00:49:00.589 --> 00:49:03.630
<v Speaker 1>have permissions to create certain Kubernetes resources in

00:49:03.630 --> 00:49:04.830
<v Speaker 1>certain namespace.

00:49:04.910 --> 00:49:06.750
<v Speaker 1>So I could I'm not going to do

00:49:06.750 --> 00:49:09.070
<v Speaker 1>that now, but I could go and say,

00:49:09.070 --> 00:49:09.310
<v Speaker 1>hey.

00:49:10.035 --> 00:49:12.115
<v Speaker 1>There is a namespace Rawkode.

00:49:12.434 --> 00:49:13.714
<v Speaker 1>And in Rawkode,

00:49:13.714 --> 00:49:16.915
<v Speaker 1>you can create, let's say, resources GKE cluster,

00:49:17.234 --> 00:49:19.155
<v Speaker 1>but you I will never give you permissions

00:49:19.155 --> 00:49:21.075
<v Speaker 1>to create EKS cluster, right,

00:49:22.290 --> 00:49:25.010
<v Speaker 1>because I don't trust you with with AWS.

00:49:25.010 --> 00:49:26.770
<v Speaker 1>You've been too negative towards it.

00:49:27.890 --> 00:49:28.850
<v Speaker 1>And

00:49:29.890 --> 00:49:31.570
<v Speaker 1>on top of that and this is now

00:49:31.570 --> 00:49:32.930
<v Speaker 1>plugging back into

00:49:33.250 --> 00:49:36.130
<v Speaker 1>the whole idea of leveraging Kubernetes ecosystem.

00:49:36.665 --> 00:49:37.945
<v Speaker 1>You can combine

00:49:38.265 --> 00:49:42.025
<v Speaker 1>whichever RBAC you're using in in Kubernetes itself,

00:49:42.025 --> 00:49:45.065
<v Speaker 1>let's say, with policies like or whatever

00:49:45.065 --> 00:49:46.025
<v Speaker 1>you're using,

00:49:46.585 --> 00:49:48.105
<v Speaker 1>and further define

00:49:48.105 --> 00:49:49.385
<v Speaker 1>things like, hey.

00:49:49.865 --> 00:49:50.585
<v Speaker 1>Joe can

00:49:51.849 --> 00:49:53.849
<v Speaker 1>everybody in this day's space that can create

00:49:53.849 --> 00:49:56.810
<v Speaker 1>TKS cluster, but Joe can only do up

00:49:56.810 --> 00:49:57.930
<v Speaker 1>to three nodes.

00:49:58.570 --> 00:50:00.810
<v Speaker 1>And I don't know. Somebody else can create

00:50:00.810 --> 00:50:01.530
<v Speaker 1>after five

00:50:02.890 --> 00:50:04.730
<v Speaker 1>to five nodes. So whatever the rules are.

00:50:04.730 --> 00:50:04.890
<v Speaker 1>Right?

00:50:06.115 --> 00:50:08.595
<v Speaker 1>So if you combine Kubernetes

00:50:08.675 --> 00:50:10.115
<v Speaker 1>RBAC and

00:50:10.755 --> 00:50:13.715
<v Speaker 1>policy management with whichever tool you're using, I

00:50:13.715 --> 00:50:16.515
<v Speaker 1>would say that you're getting a level of

00:50:16.995 --> 00:50:19.635
<v Speaker 1>both simplicity for the end user, but also

00:50:19.635 --> 00:50:22.570
<v Speaker 1>control for others that is really not there

00:50:22.570 --> 00:50:23.370
<v Speaker 1>with

00:50:23.849 --> 00:50:26.810
<v Speaker 1>almost anything else that is not Kubernetes

00:50:27.369 --> 00:50:28.170
<v Speaker 1>friendly,

00:50:28.170 --> 00:50:29.290
<v Speaker 1>native, let's say.

00:50:30.330 --> 00:50:32.330
<v Speaker 0>Yeah. That makes a lot of sense. You

00:50:32.330 --> 00:50:34.890
<v Speaker 0>know, Crossplane is using the Kubernetes API. So

00:50:34.890 --> 00:50:37.130
<v Speaker 0>all of these things should be implemented using

00:50:37.130 --> 00:50:38.545
<v Speaker 0>the Kubernetes API.

00:50:38.625 --> 00:50:39.985
<v Speaker 0>Definitely. Yeah. You're

00:50:40.545 --> 00:50:42.385
<v Speaker 1>it's it's more like kind of you need

00:50:42.385 --> 00:50:44.385
<v Speaker 1>to think about it differently. Right? You're not

00:50:44.545 --> 00:50:47.345
<v Speaker 1>the question is not about the credentials in

00:50:47.345 --> 00:50:49.265
<v Speaker 1>AWS or whatever you're running.

00:50:49.505 --> 00:50:52.569
<v Speaker 1>The it's about credentials to create or modify

00:50:52.569 --> 00:50:55.050
<v Speaker 1>or delete specific Kubernetes resources.

00:50:55.609 --> 00:50:58.569
<v Speaker 1>For majority of users, there is only Kubernetes

00:50:58.569 --> 00:51:00.010
<v Speaker 1>API. Nothing else.

00:51:00.410 --> 00:51:02.490
<v Speaker 0>Alright. I hope that helps, Andreas.

00:51:02.730 --> 00:51:04.170
<v Speaker 0>And if you have anything else, drop it

00:51:04.170 --> 00:51:04.810
<v Speaker 0>into the comments.

00:51:06.045 --> 00:51:08.285
<v Speaker 0>Alright, Victor. Is there anything else you would

00:51:08.285 --> 00:51:09.885
<v Speaker 0>like to show us before we start wrapping

00:51:09.885 --> 00:51:10.925
<v Speaker 0>this up for today?

00:51:11.565 --> 00:51:12.365
<v Speaker 1>No.

00:51:12.365 --> 00:51:13.885
<v Speaker 1>If I got Razor, I will I will

00:51:13.885 --> 00:51:15.165
<v Speaker 1>will I will stay here for a couple

00:51:15.165 --> 00:51:16.444
<v Speaker 1>of hours, and I think that we have

00:51:16.444 --> 00:51:18.890
<v Speaker 1>a limit. Yeah. I think, you know, we

00:51:18.890 --> 00:51:20.490
<v Speaker 0>we pushed our luck deleting the node group

00:51:20.490 --> 00:51:22.250
<v Speaker 0>and seeing that coming back. So let's let's

00:51:22.250 --> 00:51:25.210
<v Speaker 0>let's take that as a success. And Yeah.

00:51:25.210 --> 00:51:27.290
<v Speaker 1>Kind of as as a parting gift. Right?

00:51:27.290 --> 00:51:29.370
<v Speaker 1>Just kind of as a parting gift,

00:51:29.690 --> 00:51:31.130
<v Speaker 1>I will delete the whole cluster.

00:51:32.545 --> 00:51:33.425
<v Speaker 1>And then

00:51:34.305 --> 00:51:36.065
<v Speaker 1>we'll see whether it will come back come

00:51:36.065 --> 00:51:38.065
<v Speaker 1>back by the time we wrap up. Do

00:51:38.065 --> 00:51:39.505
<v Speaker 0>you think it's gonna delete by the time

00:51:39.505 --> 00:51:40.385
<v Speaker 0>we wrap up?

00:51:41.585 --> 00:51:44.305
<v Speaker 1>Let's see. You know, usually, those are the

00:51:44.305 --> 00:51:45.745
<v Speaker 1>moments when I go and watch something on

00:51:45.745 --> 00:51:48.130
<v Speaker 1>Netflix, so I never really paid attention. Alright.

00:51:48.130 --> 00:51:51.810
<v Speaker 1>I cannot because node group is attached. That's

00:51:51.810 --> 00:51:53.810
<v Speaker 0>alright. I trust you that it works. I

00:51:53.810 --> 00:51:55.090
<v Speaker 0>I think we've seen what we wanted to

00:51:55.090 --> 00:51:57.090
<v Speaker 0>see with the node group. You know? I

00:51:57.090 --> 00:51:59.410
<v Speaker 0>think the the one takeaway for everyone watching

00:51:59.410 --> 00:52:01.570
<v Speaker 0>here is that, one, your interest in Crossplane

00:52:01.570 --> 00:52:04.484
<v Speaker 0>should definitely be peaked. And secondly, the continuous

00:52:04.484 --> 00:52:05.525
<v Speaker 0>reconciliation

00:52:05.525 --> 00:52:08.484
<v Speaker 0>and working with the Kubernetes API, which hopefully

00:52:08.484 --> 00:52:10.565
<v Speaker 0>you're already familiar with, brings a lot of

00:52:10.565 --> 00:52:12.645
<v Speaker 0>superpowers to your infrastructure. I think it's just

00:52:12.645 --> 00:52:13.525
<v Speaker 0>a fantastic,

00:52:13.684 --> 00:52:14.805
<v Speaker 0>fantastic product.

00:52:15.204 --> 00:52:17.365
<v Speaker 0>I'm gonna pop back over to our big

00:52:17.365 --> 00:52:18.325
<v Speaker 0>face mode. There we go.

00:52:19.100 --> 00:52:21.020
<v Speaker 1>Okay. It was so strange for me looking

00:52:21.020 --> 00:52:23.340
<v Speaker 1>at the blank screen all the time. You

00:52:23.340 --> 00:52:25.100
<v Speaker 1>know? But my terminal is. I would see

00:52:25.100 --> 00:52:28.300
<v Speaker 1>your face, man. This is better. Yeah. Definitely.

00:52:28.780 --> 00:52:30.780
<v Speaker 0>So, you know, just as we as we

00:52:30.780 --> 00:52:32.460
<v Speaker 0>kinda wrap up, is there anything that you

00:52:32.460 --> 00:52:34.140
<v Speaker 0>can share? Like, what are what are Crossplane

00:52:34.140 --> 00:52:35.665
<v Speaker 0>excited by right now? What are they what

00:52:35.665 --> 00:52:37.825
<v Speaker 0>are you guys working on? What's coming soon?

00:52:38.385 --> 00:52:40.545
<v Speaker 0>What challenges are you gonna solve next? Like,

00:52:40.545 --> 00:52:41.025
<v Speaker 0>just

00:52:41.825 --> 00:52:44.305
<v Speaker 1>Yeah. So the the major

00:52:44.545 --> 00:52:46.865
<v Speaker 1>effort, let's say, or push right now

00:52:47.744 --> 00:52:49.665
<v Speaker 1>is towards provider coverage.

00:52:51.210 --> 00:52:53.770
<v Speaker 1>We need to get close to %

00:52:53.770 --> 00:52:54.970
<v Speaker 1>for all the

00:52:55.770 --> 00:52:59.130
<v Speaker 1>all the major use cases. Right? So that's

00:52:59.130 --> 00:53:00.970
<v Speaker 1>kind of that's not really exciting. It's just

00:53:00.970 --> 00:53:02.730
<v Speaker 1>simply the first queue that needs to be

00:53:02.730 --> 00:53:04.685
<v Speaker 1>done. And there will be some very exciting

00:53:04.685 --> 00:53:07.405
<v Speaker 1>news about that very soon. I cannot say

00:53:07.405 --> 00:53:08.525
<v Speaker 1>the dates, you know,

00:53:08.845 --> 00:53:09.885
<v Speaker 1>otherwise.

00:53:10.045 --> 00:53:11.965
<v Speaker 1>Grant, the one that was in comments, he

00:53:12.125 --> 00:53:13.485
<v Speaker 1>he's listening on this.

00:53:13.805 --> 00:53:15.805
<v Speaker 1>He's he's the one above me. He's he's

00:53:15.805 --> 00:53:16.925
<v Speaker 1>going to do something bad.

00:53:19.050 --> 00:53:19.690
<v Speaker 1>And

00:53:20.570 --> 00:53:23.690
<v Speaker 1>so most most of the off effort right

00:53:23.690 --> 00:53:24.890
<v Speaker 1>now is in debt.

00:53:25.130 --> 00:53:26.810
<v Speaker 1>And then in

00:53:27.690 --> 00:53:29.770
<v Speaker 1>soon for next quarter, we are going to

00:53:29.770 --> 00:53:32.650
<v Speaker 1>have some very exciting exciting announcements,

00:53:32.650 --> 00:53:34.545
<v Speaker 1>but I don't wanna share it yet. So

00:53:34.545 --> 00:53:36.785
<v Speaker 1>boring stuff. Provide the coverage.

00:53:37.105 --> 00:53:39.345
<v Speaker 0>Boring stuff. Alright. Okay.

00:53:39.505 --> 00:53:41.665
<v Speaker 0>Well, yeah, that that that's cool. It's nice

00:53:41.665 --> 00:53:43.905
<v Speaker 0>that, you know, the provider ecosystem has been

00:53:43.905 --> 00:53:45.984
<v Speaker 0>expanded on and elaborated on. I think it's

00:53:45.984 --> 00:53:47.105
<v Speaker 0>just gonna open up a lot more doors

00:53:47.105 --> 00:53:48.465
<v Speaker 0>to people that wanna use Crossplane.

00:53:49.920 --> 00:53:52.079
<v Speaker 0>We got a thank you from Russell in

00:53:52.079 --> 00:53:52.880
<v Speaker 0>the chat.

00:53:53.119 --> 00:53:54.800
<v Speaker 1>Thank you, Russell. Yeah.

00:53:56.320 --> 00:53:58.800
<v Speaker 0>Alright. Well, we have no more questions. We

00:53:58.800 --> 00:54:00.240
<v Speaker 0>got we got a few more. Thanks. People

00:54:00.240 --> 00:54:01.440
<v Speaker 0>are telling us to leave now. I think

00:54:01.440 --> 00:54:02.720
<v Speaker 0>that's what that means when they start saying

00:54:02.720 --> 00:54:03.119
<v Speaker 0>thank you.

00:54:04.295 --> 00:54:06.295
<v Speaker 0>Victor, thank you so much for joining me

00:54:06.295 --> 00:54:06.935
<v Speaker 0>today.

00:54:07.335 --> 00:54:09.815
<v Speaker 0>Really cool demos to see composite resources

00:54:09.895 --> 00:54:10.695
<v Speaker 0>providing

00:54:10.775 --> 00:54:13.895
<v Speaker 0>essentially an abstraction or a platform that doesn't

00:54:13.895 --> 00:54:16.375
<v Speaker 0>really matter what the underlying infrastructure is. And

00:54:16.375 --> 00:54:17.735
<v Speaker 0>I think that's a really cool thing for

00:54:17.735 --> 00:54:19.750
<v Speaker 0>people to take away, that you can build

00:54:19.750 --> 00:54:20.950
<v Speaker 0>these schematics

00:54:20.950 --> 00:54:23.430
<v Speaker 0>for what a platform means in your organization

00:54:23.430 --> 00:54:26.150
<v Speaker 0>and use that Kubernetes API to show them.

00:54:26.869 --> 00:54:28.070
<v Speaker 0>Very, very cool Yeah.

00:54:29.269 --> 00:54:29.670
<v Speaker 0>All right.

00:54:30.735 --> 00:54:33.455
<v Speaker 0>And if any any last words before before

00:54:33.455 --> 00:54:34.415
<v Speaker 0>I push the button?

00:54:35.055 --> 00:54:37.135
<v Speaker 1>Try it out. And if you get confused,

00:54:37.135 --> 00:54:39.695
<v Speaker 1>then ping me on Twitter or LinkedIn or

00:54:39.695 --> 00:54:42.335
<v Speaker 1>whatever. Find me somewhere. Yeah. Find me somewhere.

00:54:42.335 --> 00:54:44.015
<v Speaker 0>Get the help you need. Slack somewhere in

00:54:44.015 --> 00:54:46.670
<v Speaker 1>Kubernetes or CNCF. Google me, and I'll help

00:54:46.670 --> 00:54:49.230
<v Speaker 1>you out. Alright. Well, thank you again, Victor.

00:54:49.230 --> 00:54:50.430
<v Speaker 0>Have a wonderful day, and I'll speak to

00:54:50.430 --> 00:54:51.950
<v Speaker 0>you again soon. Have a good one. Bye.
