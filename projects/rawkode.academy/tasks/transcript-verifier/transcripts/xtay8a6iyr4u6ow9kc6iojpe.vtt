WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: c3dfef99-4c91-4894-bbdc-e5bcb9340ce3
Created: 2025-04-29T20:37:02.589Z
Duration: 5010.0366
Channels: 1

00:01:15.395 --> 00:01:18.354
<v Speaker 0>Hello, and welcome to today's episode of Rawkode

00:01:18.354 --> 00:01:20.915
<v Speaker 0>Live. I am your host, Rawkode.

00:01:21.630 --> 00:01:23.550
<v Speaker 0>Before we begin, I just wanna take a

00:01:23.550 --> 00:01:25.390
<v Speaker 0>quick moment to say thank you to Equinix

00:01:25.390 --> 00:01:27.150
<v Speaker 0>Metals. They are my employer. They are a

00:01:27.150 --> 00:01:29.310
<v Speaker 0>bare metal cloud, and they give me the

00:01:29.310 --> 00:01:31.710
<v Speaker 0>time and resources to invest in the show

00:01:31.710 --> 00:01:33.470
<v Speaker 0>and produce content that we can all learn

00:01:33.470 --> 00:01:34.030
<v Speaker 0>from together.

00:01:34.855 --> 00:01:37.415
<v Speaker 0>If you wanna check out Equinix Medal, please

00:01:37.415 --> 00:01:40.455
<v Speaker 0>use this at Rawkode dash live coupon. This

00:01:40.455 --> 00:01:43.095
<v Speaker 0>will get you $50 of compute. That is

00:01:43.095 --> 00:01:46.295
<v Speaker 0>roughly one hundred hours on our smallest instance.

00:01:46.870 --> 00:01:48.550
<v Speaker 0>Certainly enough for you to have some fun

00:01:48.550 --> 00:01:50.630
<v Speaker 0>and play with. Now today,

00:01:50.710 --> 00:01:53.350
<v Speaker 0>I am joined by my friend,

00:01:54.070 --> 00:01:55.270
<v Speaker 0>Kieran McNulty.

00:01:55.670 --> 00:01:57.750
<v Speaker 0>Welcome back, Kieran. It's always a pleasure to

00:01:57.750 --> 00:01:58.710
<v Speaker 0>have Hi, David.

00:02:00.550 --> 00:02:01.270
<v Speaker 0>So

00:02:02.015 --> 00:02:03.854
<v Speaker 0>I can hear you, though your video has

00:02:03.854 --> 00:02:05.215
<v Speaker 0>frozen

00:02:05.854 --> 00:02:07.935
<v Speaker 0>on you. Although, I think it's coming back.

00:02:07.935 --> 00:02:08.335
<v Speaker 0>So

00:02:09.614 --> 00:02:12.575
<v Speaker 0>you can you hear me okay? Yeah. Alright.

00:02:12.575 --> 00:02:13.135
<v Speaker 0>Okay.

00:02:13.614 --> 00:02:16.175
<v Speaker 1>I can. I'm just gonna prioritize my laptop,

00:02:16.575 --> 00:02:17.215
<v Speaker 1>my network.

00:02:19.910 --> 00:02:21.270
<v Speaker 0>Someone got Netflix on.

00:02:22.470 --> 00:02:23.110
<v Speaker 0>Yes.

00:02:24.150 --> 00:02:25.750
<v Speaker 0>Alright. I'll give a little bit of context

00:02:25.750 --> 00:02:27.830
<v Speaker 0>just now while you get that sorted. This

00:02:27.830 --> 00:02:29.670
<v Speaker 0>is it's turning into a bit of a

00:02:29.670 --> 00:02:32.150
<v Speaker 0>series. We're taking a look at behavior driven

00:02:32.150 --> 00:02:33.350
<v Speaker 0>development through

00:02:33.605 --> 00:02:36.165
<v Speaker 0>multiple episodes and real world application.

00:02:36.245 --> 00:02:38.405
<v Speaker 0>I have been building out or, you know,

00:02:38.405 --> 00:02:40.004
<v Speaker 0>failing to build out, but being guided by

00:02:40.004 --> 00:02:43.125
<v Speaker 0>Kieran, a get library called get sync, retina

00:02:43.125 --> 00:02:45.845
<v Speaker 0>rust that aims to provide the backbone of

00:02:46.004 --> 00:02:49.045
<v Speaker 0>get up stale operators or event driven applications.

00:02:50.450 --> 00:02:51.170
<v Speaker 0>We

00:02:51.570 --> 00:02:52.690
<v Speaker 0>kind of started

00:02:52.850 --> 00:02:54.850
<v Speaker 0>by an example

00:02:54.850 --> 00:02:56.210
<v Speaker 0>mapping session,

00:02:56.370 --> 00:02:58.610
<v Speaker 0>which was roughly two weeks ago now. We

00:02:58.610 --> 00:03:00.610
<v Speaker 0>used a middle board and in real time,

00:03:00.610 --> 00:03:02.610
<v Speaker 0>we kinda tried to discuss the application,

00:03:03.685 --> 00:03:05.205
<v Speaker 0>flesh out those requirements,

00:03:06.165 --> 00:03:09.365
<v Speaker 0>loads of stackies to add colors, very nice

00:03:09.365 --> 00:03:11.365
<v Speaker 0>guidance from keeping on how that all works.

00:03:11.365 --> 00:03:13.525
<v Speaker 0>And then we could look very briefly at,

00:03:13.525 --> 00:03:14.085
<v Speaker 0>well,

00:03:14.405 --> 00:03:16.005
<v Speaker 0>how do we store this in a get

00:03:16.005 --> 00:03:18.469
<v Speaker 0>repository? How do we how do we use

00:03:18.469 --> 00:03:21.430
<v Speaker 0>GERKIN to write scenarios and kinda give other

00:03:21.430 --> 00:03:23.750
<v Speaker 0>people, not just my own understanding of the

00:03:23.750 --> 00:03:25.430
<v Speaker 0>application, but share that with other people.

00:03:26.150 --> 00:03:28.310
<v Speaker 0>And I think we wrote half a scenario,

00:03:28.469 --> 00:03:29.829
<v Speaker 0>and then you told me to go in,

00:03:29.829 --> 00:03:32.069
<v Speaker 0>do my homework, and and do more, and

00:03:32.069 --> 00:03:32.469
<v Speaker 0>I didn't.

00:03:33.275 --> 00:03:34.715
<v Speaker 0>And then we thought, well, why don't we

00:03:34.715 --> 00:03:37.355
<v Speaker 0>just continue the series? Let's do this live.

00:03:37.515 --> 00:03:39.035
<v Speaker 0>You know, it's always a pleasure to have

00:03:39.035 --> 00:03:41.675
<v Speaker 0>your guidance because I really do. I'm really

00:03:41.675 --> 00:03:42.795
<v Speaker 0>terrible at this. So

00:03:43.595 --> 00:03:45.750
<v Speaker 1>No. No. No. Yeah. So the thing we

00:03:45.750 --> 00:03:47.030
<v Speaker 1>did last time

00:03:47.349 --> 00:03:50.069
<v Speaker 1>was is broadly speaking in this area of

00:03:50.069 --> 00:03:50.790
<v Speaker 1>discovery,

00:03:51.109 --> 00:03:52.390
<v Speaker 1>deliberate discovery.

00:03:52.469 --> 00:03:54.390
<v Speaker 1>So we sort of took time to

00:03:56.945 --> 00:03:58.785
<v Speaker 1>I I didn't know anything and you knew

00:03:58.785 --> 00:03:59.905
<v Speaker 1>a

00:04:00.865 --> 00:04:01.425
<v Speaker 1>lot.

00:04:01.825 --> 00:04:04.065
<v Speaker 1>And then maybe we added a bit during

00:04:04.065 --> 00:04:05.345
<v Speaker 1>that conversation. And I think if we'd had

00:04:05.345 --> 00:04:06.145
<v Speaker 1>more people,

00:04:06.465 --> 00:04:07.905
<v Speaker 1>we'd have had more sort of

00:04:08.465 --> 00:04:10.625
<v Speaker 1>insightful questions that that helped us flesh it

00:04:10.625 --> 00:04:12.570
<v Speaker 1>out a bit. And we came out of

00:04:12.570 --> 00:04:14.330
<v Speaker 1>that with a kind of shared understanding of

00:04:14.330 --> 00:04:16.089
<v Speaker 1>what it should do,

00:04:16.890 --> 00:04:19.210
<v Speaker 1>what we've decided that it should do. Yep.

00:04:19.290 --> 00:04:20.810
<v Speaker 1>Because we don't wanna make it too, like,

00:04:21.610 --> 00:04:22.890
<v Speaker 1>spec y, too

00:04:23.610 --> 00:04:24.330
<v Speaker 1>contract y.

00:04:25.355 --> 00:04:27.435
<v Speaker 1>But, you know, we we'd have done that

00:04:27.435 --> 00:04:29.435
<v Speaker 1>quite soon before we're gonna build it, and

00:04:29.435 --> 00:04:31.755
<v Speaker 1>we kept all understanding what we just agreed.

00:04:33.035 --> 00:04:35.195
<v Speaker 1>And I think what what we might find

00:04:35.195 --> 00:04:36.635
<v Speaker 1>is because it's been two weeks, we'll have

00:04:36.635 --> 00:04:37.435
<v Speaker 1>kind of forgotten

00:04:37.980 --> 00:04:39.820
<v Speaker 1>the context. So I guess we're gonna look

00:04:39.820 --> 00:04:42.060
<v Speaker 1>at the mirror board. We might not quite

00:04:42.060 --> 00:04:43.980
<v Speaker 1>remember what some of it means, you know,

00:04:44.300 --> 00:04:46.060
<v Speaker 1>because it's kind of scrappy notes.

00:04:46.620 --> 00:04:49.340
<v Speaker 1>So the idea is that shortly after that,

00:04:49.740 --> 00:04:53.100
<v Speaker 1>someone would capture that that conversation, and that's

00:04:53.100 --> 00:04:55.825
<v Speaker 1>where the kind of second step of

00:04:57.025 --> 00:04:59.105
<v Speaker 1>so formulation comes in where

00:04:59.585 --> 00:05:01.585
<v Speaker 1>someone you you're trying to slow the meeting

00:05:01.585 --> 00:05:03.505
<v Speaker 1>down by capturing everything in the meeting. If

00:05:03.505 --> 00:05:04.705
<v Speaker 1>you've ever tried to do that in a

00:05:04.705 --> 00:05:06.065
<v Speaker 1>meeting, you know it's absolutely

00:05:06.545 --> 00:05:07.105
<v Speaker 1>painful.

00:05:07.990 --> 00:05:09.990
<v Speaker 1>Everyone stop talking while I type this.

00:05:10.550 --> 00:05:11.910
<v Speaker 1>So you can avoid that, but then you

00:05:11.910 --> 00:05:13.430
<v Speaker 1>try and sort of dump it out

00:05:14.870 --> 00:05:15.910
<v Speaker 1>shortly after.

00:05:18.389 --> 00:05:19.765
<v Speaker 1>And then share it with everyone and make

00:05:19.765 --> 00:05:21.365
<v Speaker 1>sure you captured it right and maybe get

00:05:21.365 --> 00:05:22.965
<v Speaker 1>some feedback so that that there's a few

00:05:22.965 --> 00:05:24.725
<v Speaker 1>cycles inside that process

00:05:25.765 --> 00:05:27.445
<v Speaker 1>before and and then you take that through

00:05:27.445 --> 00:05:29.685
<v Speaker 1>to development. That's the kind of gist. So

00:05:29.685 --> 00:05:31.605
<v Speaker 1>I guess we're at that step of we're

00:05:31.605 --> 00:05:33.525
<v Speaker 1>gonna try and capture what we talked about

00:05:33.525 --> 00:05:34.005
<v Speaker 1>last time,

00:05:34.800 --> 00:05:36.080
<v Speaker 1>write it down in a way that we

00:05:36.080 --> 00:05:37.600
<v Speaker 1>think is gonna be clear. I remember you

00:05:37.600 --> 00:05:38.800
<v Speaker 1>were one of the reasons you're doing this

00:05:38.800 --> 00:05:40.560
<v Speaker 1>is to have documentation for people in the

00:05:40.560 --> 00:05:41.120
<v Speaker 1>future.

00:05:41.440 --> 00:05:43.200
<v Speaker 1>Yep. So capture it in a way where

00:05:43.200 --> 00:05:44.639
<v Speaker 1>it's gonna be clear for those sort of

00:05:44.639 --> 00:05:45.520
<v Speaker 1>future generations.

00:05:47.384 --> 00:05:49.305
<v Speaker 0>Definitely. I don't want people to run this

00:05:49.305 --> 00:05:52.264
<v Speaker 0>enough any surprises about what is is actually

00:05:52.264 --> 00:05:52.905
<v Speaker 0>happening.

00:05:53.544 --> 00:05:55.465
<v Speaker 0>So I guess we'll get up the middle

00:05:55.465 --> 00:05:57.705
<v Speaker 0>board. Let's run through that briefly, and then

00:05:57.705 --> 00:05:59.465
<v Speaker 0>we'll start putting our scenarios together.

00:06:00.120 --> 00:06:02.840
<v Speaker 0>We have our first comment as well from

00:06:02.840 --> 00:06:05.240
<v Speaker 0>someone I think we both know, Mark. Hey,

00:06:05.240 --> 00:06:06.200
<v Speaker 0>Mark. How's it going?

00:06:08.280 --> 00:06:09.480
<v Speaker 0>Alright. Let's

00:06:10.040 --> 00:06:11.160
<v Speaker 0>pop this up.

00:06:11.400 --> 00:06:13.480
<v Speaker 1>Let's see. Because I am. A little bit.

00:06:15.485 --> 00:06:17.805
<v Speaker 1>Yeah. So the to recap briefly what the

00:06:17.805 --> 00:06:19.724
<v Speaker 1>structure is, we've got and I the blue

00:06:19.724 --> 00:06:21.405
<v Speaker 1>thing is the most important things. They're business

00:06:21.405 --> 00:06:22.044
<v Speaker 1>rule.

00:06:23.645 --> 00:06:25.324
<v Speaker 1>They're things that have to be

00:06:25.645 --> 00:06:28.180
<v Speaker 1>implemented somewhere in the system. So it's really

00:06:28.180 --> 00:06:29.699
<v Speaker 1>important to understand where they are. They they

00:06:29.699 --> 00:06:32.099
<v Speaker 1>kind of they do directly map to this

00:06:32.180 --> 00:06:34.180
<v Speaker 1>the the code you're writing in a way.

00:06:34.259 --> 00:06:35.460
<v Speaker 1>Yeah. They're

00:06:35.699 --> 00:06:37.139
<v Speaker 1>they're build they're like what is

00:06:40.259 --> 00:06:41.539
<v Speaker 0>Oop. I lost you, mate.

00:06:43.905 --> 00:06:45.105
<v Speaker 0>And he's gone.

00:06:45.985 --> 00:06:48.225
<v Speaker 1>I'm still here. Alright.

00:06:48.705 --> 00:06:50.785
<v Speaker 0>Yeah. You threw something for a second there.

00:06:51.665 --> 00:06:52.625
<v Speaker 1>Oh, dear.

00:06:54.465 --> 00:06:56.625
<v Speaker 1>Yes. The the the other things

00:06:57.460 --> 00:06:59.139
<v Speaker 1>and when you're doing example

00:07:02.020 --> 00:07:04.660
<v Speaker 1>use you sort of think of it as

00:07:05.699 --> 00:07:11.620
<v Speaker 0>I'm

00:07:11.620 --> 00:07:12.099
<v Speaker 0>not

00:07:12.634 --> 00:07:14.795
<v Speaker 0>no. You're you're you're in and out, Kieran.

00:07:21.595 --> 00:07:23.675
<v Speaker 0>Your video has has has given up,

00:07:25.000 --> 00:07:27.000
<v Speaker 0>and your audio is Can hear me at

00:07:27.000 --> 00:07:27.560
<v Speaker 1>all?

00:07:28.680 --> 00:07:29.480
<v Speaker 0>Yep.

00:07:29.480 --> 00:07:32.040
<v Speaker 0>I'm just gonna check my connection just in

00:07:32.040 --> 00:07:32.600
<v Speaker 0>case.

00:07:36.120 --> 00:07:37.800
<v Speaker 0>Oh, Mark, if you sent her in the

00:07:37.800 --> 00:07:40.025
<v Speaker 0>comments, if you let me know if it's

00:07:40.025 --> 00:07:41.785
<v Speaker 0>just one of us or both of us.

00:07:48.505 --> 00:07:51.545
<v Speaker 0>My connection looks pretty solid. I've got 500

00:07:51.545 --> 00:07:51.785
<v Speaker 0>meg.

00:07:53.629 --> 00:07:55.789
<v Speaker 0>Alright. You've not frozen on me in the

00:07:55.789 --> 00:07:57.470
<v Speaker 0>last thirty seconds, so we'll continue.

00:07:59.069 --> 00:08:00.190
<v Speaker 1>What I might do

00:08:00.430 --> 00:08:01.229
<v Speaker 1>is

00:08:01.389 --> 00:08:03.310
<v Speaker 1>disconnect briefly and come back. Is that gonna

00:08:03.310 --> 00:08:04.190
<v Speaker 1>break anything?

00:08:04.590 --> 00:08:07.070
<v Speaker 0>No. No. No. You do that. I will

00:08:07.515 --> 00:08:08.715
<v Speaker 0>I'll tell jokes.

00:08:12.075 --> 00:08:15.275
<v Speaker 0>Yeah. Thanks for the comments, Mark and Wolfgang.

00:08:15.595 --> 00:08:17.675
<v Speaker 0>I think it is just Kieran's connection. I'm

00:08:17.675 --> 00:08:18.955
<v Speaker 0>not sure if there are too many Netflix

00:08:18.955 --> 00:08:20.910
<v Speaker 0>sessions going on or it just needs Maybe

00:08:20.910 --> 00:08:22.430
<v Speaker 0>it's the new m one Mac. Maybe the

00:08:22.430 --> 00:08:24.830
<v Speaker 0>networking is not very good on it. Although

00:08:24.830 --> 00:08:26.350
<v Speaker 0>it we'll see.

00:08:27.150 --> 00:08:28.830
<v Speaker 0>So this middle board then

00:08:30.350 --> 00:08:32.510
<v Speaker 0>oh, it's back already. Let's see if that's

00:08:32.510 --> 00:08:34.190
<v Speaker 0>any better. So the middle board,

00:08:35.395 --> 00:08:36.835
<v Speaker 0>the blue stickies

00:08:37.315 --> 00:08:38.355
<v Speaker 0>Our rules.

00:08:39.715 --> 00:08:42.355
<v Speaker 0>Good save. Thanks. Our rules. And then the

00:08:42.355 --> 00:08:43.715
<v Speaker 0>green cards were

00:08:46.275 --> 00:08:48.515
<v Speaker 0>examples of things that we think happen

00:08:48.595 --> 00:08:49.635
<v Speaker 0>within those rules.

00:08:50.350 --> 00:08:52.590
<v Speaker 0>The yellow, I don't remember what that was,

00:08:52.590 --> 00:08:54.350
<v Speaker 0>and the red was questions.

00:08:54.910 --> 00:08:57.870
<v Speaker 1>Yeah. So the important I don't know how

00:08:57.870 --> 00:08:59.470
<v Speaker 1>much you caught before I broke up.

00:08:59.790 --> 00:09:01.630
<v Speaker 1>So the important thing is the business rules.

00:09:01.630 --> 00:09:03.470
<v Speaker 1>They're gonna be implemented in the code.

00:09:04.394 --> 00:09:05.995
<v Speaker 1>So all of this is so everyone understands

00:09:05.995 --> 00:09:07.755
<v Speaker 1>the business rules in a in a way.

00:09:07.995 --> 00:09:10.315
<v Speaker 1>The other thing is called the feature in

00:09:10.315 --> 00:09:11.355
<v Speaker 1>this context,

00:09:11.834 --> 00:09:13.834
<v Speaker 1>but it's really just a way of grouping

00:09:13.834 --> 00:09:16.074
<v Speaker 1>the rules together into something that we're gonna

00:09:16.074 --> 00:09:18.315
<v Speaker 1>deliver as a block. So you could think

00:09:18.315 --> 00:09:20.829
<v Speaker 1>of it as, like, which things which rules

00:09:20.829 --> 00:09:22.430
<v Speaker 1>need to go together for it to be

00:09:22.430 --> 00:09:22.990
<v Speaker 1>worth

00:09:23.790 --> 00:09:25.949
<v Speaker 1>releasing it or saying or counting it as

00:09:25.949 --> 00:09:27.230
<v Speaker 1>done. You know?

00:09:27.630 --> 00:09:29.070
<v Speaker 1>So they might be the things that you

00:09:29.070 --> 00:09:30.350
<v Speaker 1>have in your backlog if you're doing a

00:09:30.350 --> 00:09:32.589
<v Speaker 1>sort of backlog driven development.

00:09:32.995 --> 00:09:35.795
<v Speaker 1>You might think, one this first rule, repositories

00:09:35.795 --> 00:09:37.315
<v Speaker 1>are cloned if not already.

00:09:37.635 --> 00:09:39.715
<v Speaker 1>We wouldn't want that if we haven't implemented

00:09:39.715 --> 00:09:40.995
<v Speaker 1>the other rules as well.

00:09:41.795 --> 00:09:43.395
<v Speaker 1>So the rules become a nice way to

00:09:43.395 --> 00:09:45.155
<v Speaker 1>break down your chunk down your work.

00:09:46.580 --> 00:09:48.980
<v Speaker 1>Mike Cohen has some acronym SPIDER

00:09:49.780 --> 00:09:51.060
<v Speaker 1>without an e

00:09:51.380 --> 00:09:53.620
<v Speaker 1>of of different ways of breaking down

00:09:54.500 --> 00:09:55.060
<v Speaker 1>big

00:09:55.460 --> 00:09:57.540
<v Speaker 1>or he says user stories because it's Mike

00:09:57.540 --> 00:09:59.905
<v Speaker 1>Cohen. Breaking down user stories into smaller ones,

00:09:59.905 --> 00:10:01.345
<v Speaker 1>and the r is rules.

00:10:01.585 --> 00:10:03.345
<v Speaker 1>So are there some of the business tools

00:10:03.345 --> 00:10:05.745
<v Speaker 1>we can implement first without the rest is

00:10:05.745 --> 00:10:06.945
<v Speaker 1>a nice way of doing it.

00:10:07.825 --> 00:10:09.345
<v Speaker 1>Okay. The others are

00:10:09.985 --> 00:10:10.865
<v Speaker 1>other stuff.

00:10:11.265 --> 00:10:12.225
<v Speaker 1>Spike path,

00:10:14.630 --> 00:10:16.230
<v Speaker 1>identity and data.

00:10:16.870 --> 00:10:18.550
<v Speaker 1>But like, one of the strategies for chunking

00:10:18.550 --> 00:10:19.670
<v Speaker 1>stuff down is to break it up by

00:10:19.670 --> 00:10:21.830
<v Speaker 1>rules. It's nice if you can say, actually

00:10:21.830 --> 00:10:23.030
<v Speaker 1>you could do these first.

00:10:24.550 --> 00:10:26.070
<v Speaker 1>And actually, maybe some of the rules could

00:10:26.070 --> 00:10:27.865
<v Speaker 1>be, this is going a bit deep. The

00:10:27.865 --> 00:10:29.945
<v Speaker 1>rules can maybe relate to feature toggles. So

00:10:29.945 --> 00:10:32.105
<v Speaker 1>say, maybe the rules could be feature toggled.

00:10:33.225 --> 00:10:35.865
<v Speaker 1>But anyway, so Yeah. To say that we've

00:10:35.865 --> 00:10:37.785
<v Speaker 1>done initial cloning of the repo and ticket

00:10:37.785 --> 00:10:39.225
<v Speaker 1>is done on our list of to do,

00:10:39.710 --> 00:10:42.030
<v Speaker 1>those three business rules are gonna be implemented.

00:10:43.550 --> 00:10:45.630
<v Speaker 1>And the way we know they're implemented is

00:10:45.630 --> 00:10:47.070
<v Speaker 1>for each rule, we came up with an

00:10:47.070 --> 00:10:47.790
<v Speaker 1>example.

00:10:48.190 --> 00:10:49.470
<v Speaker 1>At least one example.

00:10:50.430 --> 00:10:52.030
<v Speaker 1>And in third case, we had three different

00:10:52.030 --> 00:10:54.830
<v Speaker 1>examples of ways it might work. Yep.

00:10:55.945 --> 00:10:58.265
<v Speaker 1>So the examples there so that as a

00:10:58.265 --> 00:11:00.425
<v Speaker 1>developer, I can sort of say I can

00:11:00.425 --> 00:11:01.625
<v Speaker 1>I can read the example and it gives

00:11:01.625 --> 00:11:03.625
<v Speaker 1>me a better understanding of the business rule?

00:11:04.985 --> 00:11:05.945
<v Speaker 1>But also,

00:11:06.185 --> 00:11:08.185
<v Speaker 1>you know, we on the third one, we

00:11:08.185 --> 00:11:09.865
<v Speaker 1>need these three different cases to all be

00:11:09.865 --> 00:11:12.089
<v Speaker 1>true. And naturally, that'll help us test it

00:11:12.089 --> 00:11:12.649
<v Speaker 1>later.

00:11:13.449 --> 00:11:15.129
<v Speaker 1>So it helps us understand the rule, and

00:11:15.129 --> 00:11:16.970
<v Speaker 1>it helps us test the rule. But they're

00:11:16.970 --> 00:11:18.410
<v Speaker 1>only really there for the rule

00:11:19.129 --> 00:11:21.209
<v Speaker 1>to make sure the rule gets implemented. The

00:11:21.209 --> 00:11:22.810
<v Speaker 1>end game is the rule is implemented by

00:11:22.810 --> 00:11:23.209
<v Speaker 1>the software.

00:11:23.774 --> 00:11:24.415
<v Speaker 0>Okay.

00:11:24.975 --> 00:11:28.095
<v Speaker 0>That makes sense. So we identified three features.

00:11:29.615 --> 00:11:32.975
<v Speaker 0>The is there a semantic or heuristic that

00:11:32.975 --> 00:11:35.454
<v Speaker 0>says that this is one feature fail or

00:11:35.454 --> 00:11:38.150
<v Speaker 0>one scenario or multiple scenarios? Like, how how

00:11:38.150 --> 00:11:40.070
<v Speaker 0>do we then translate this to to the

00:11:40.070 --> 00:11:40.870
<v Speaker 0>language

00:11:40.870 --> 00:11:43.030
<v Speaker 0>then? I'd put it in one feature file

00:11:43.030 --> 00:11:45.590
<v Speaker 1>per feature Perfect. Sure. Initially.

00:11:47.670 --> 00:11:49.830
<v Speaker 1>But if if if it's sort of so

00:11:49.830 --> 00:11:50.790
<v Speaker 1>sometimes

00:11:50.645 --> 00:11:52.405
<v Speaker 1>later in a project, you're working on something

00:11:52.405 --> 00:11:54.645
<v Speaker 1>that's more like modifying the existing rules.

00:11:55.045 --> 00:11:57.605
<v Speaker 1>You might instead edit an existing feature file.

00:11:58.965 --> 00:11:59.925
<v Speaker 0>If that's So

00:12:00.565 --> 00:12:02.085
<v Speaker 0>because the first step for us would be

00:12:02.085 --> 00:12:04.965
<v Speaker 0>then to work on our initial clone feature

00:12:04.965 --> 00:12:07.480
<v Speaker 0>and then try to take these rules and

00:12:07.480 --> 00:12:08.280
<v Speaker 0>examples

00:12:09.160 --> 00:12:11.640
<v Speaker 0>and flash them out as full scenarios that

00:12:11.640 --> 00:12:13.400
<v Speaker 0>we can then use for documentation

00:12:13.400 --> 00:12:14.520
<v Speaker 0>and for testing.

00:12:15.560 --> 00:12:17.000
<v Speaker 1>And if you're right if you're doing this

00:12:17.000 --> 00:12:17.880
<v Speaker 1>first

00:12:18.295 --> 00:12:20.055
<v Speaker 1>and for deciding what order you're gonna do

00:12:20.055 --> 00:12:21.735
<v Speaker 1>things in. So it's to guide your own

00:12:21.735 --> 00:12:23.095
<v Speaker 1>workflow. So I'm

00:12:23.815 --> 00:12:26.535
<v Speaker 1>if if I'm working on this project, I

00:12:26.535 --> 00:12:28.055
<v Speaker 1>would think which feature am I gonna work

00:12:28.055 --> 00:12:29.735
<v Speaker 1>on next. Maybe it's this one.

00:12:30.730 --> 00:12:32.330
<v Speaker 1>As I'm working through it, maybe I'll think,

00:12:32.330 --> 00:12:33.850
<v Speaker 1>oh, okay. My first thing I need to

00:12:33.850 --> 00:12:35.610
<v Speaker 1>do is I need to implement repositories are

00:12:35.610 --> 00:12:36.890
<v Speaker 1>cloned if not already.

00:12:37.370 --> 00:12:39.050
<v Speaker 1>I'd get that going, you know, do that

00:12:39.050 --> 00:12:40.890
<v Speaker 1>sort of test driven thing. Yep. But let's

00:12:40.890 --> 00:12:41.770
<v Speaker 1>write the feature.

00:12:42.410 --> 00:12:43.850
<v Speaker 1>We'll write a feature file and then see

00:12:43.850 --> 00:12:44.410
<v Speaker 1>how it goes.

00:12:45.925 --> 00:12:47.444
<v Speaker 0>Alright. So You know, there's this thing about

00:12:47.444 --> 00:12:48.725
<v Speaker 1>writing tests first.

00:12:50.644 --> 00:12:52.565
<v Speaker 1>It's popular with the kids.

00:12:53.285 --> 00:12:54.084
<v Speaker 0>And

00:12:54.165 --> 00:12:55.764
<v Speaker 0>not with me. I've never been very good

00:12:55.764 --> 00:12:57.204
<v Speaker 0>with that. But I will I I will

00:12:57.204 --> 00:12:59.045
<v Speaker 0>try to fix my my bad habits.

00:12:59.660 --> 00:13:00.300
<v Speaker 0>So

00:13:00.780 --> 00:13:02.860
<v Speaker 1>What what one of the points of BDD

00:13:03.100 --> 00:13:05.260
<v Speaker 1>so so TDD exists, and

00:13:06.300 --> 00:13:08.380
<v Speaker 1>people tend to apply TDD at a low

00:13:08.380 --> 00:13:08.940
<v Speaker 1>level

00:13:09.260 --> 00:13:11.020
<v Speaker 1>when they're trying to work out an algorithm

00:13:11.020 --> 00:13:11.580
<v Speaker 1>or something.

00:13:13.185 --> 00:13:15.185
<v Speaker 1>One of the reasons for BDD

00:13:15.665 --> 00:13:18.705
<v Speaker 1>is to sort of encourage applying that pattern

00:13:18.705 --> 00:13:20.545
<v Speaker 1>at higher levels. This this higher level is

00:13:20.545 --> 00:13:22.785
<v Speaker 1>of a feature. So let's let's design the

00:13:22.785 --> 00:13:25.825
<v Speaker 1>feature first in a in an automatable way,

00:13:26.465 --> 00:13:27.665
<v Speaker 1>and then we'll write the code,

00:13:28.540 --> 00:13:31.020
<v Speaker 1>which is kind of TDD, but it's just

00:13:31.020 --> 00:13:32.540
<v Speaker 1>sort of phrasing it differently to make it

00:13:32.540 --> 00:13:34.060
<v Speaker 1>more likely that people do it.

00:13:35.500 --> 00:13:37.100
<v Speaker 1>And this is what we wrote last time.

00:13:37.100 --> 00:13:37.660
<v Speaker 1>Right?

00:13:38.940 --> 00:13:39.900
<v Speaker 0>It is.

00:13:40.220 --> 00:13:40.700
<v Speaker 0>Yes.

00:13:42.055 --> 00:13:44.055
<v Speaker 1>So we we slightly reworked this is a

00:13:44.055 --> 00:13:45.975
<v Speaker 1>good example. We slightly reworked some things from

00:13:45.975 --> 00:13:48.375
<v Speaker 1>the example map, and that's perfectly fine.

00:13:49.015 --> 00:13:50.695
<v Speaker 1>If you were if you're in the session

00:13:51.655 --> 00:13:53.335
<v Speaker 1>and you think of a better name,

00:13:53.815 --> 00:13:55.415
<v Speaker 1>it's it's fine to,

00:13:56.055 --> 00:13:57.800
<v Speaker 1>you know, editorialize a bit. It's kinda what

00:13:57.800 --> 00:13:59.399
<v Speaker 1>you meant to be doing is clarifying.

00:14:01.160 --> 00:14:03.240
<v Speaker 1>And then you would share this with well,

00:14:03.240 --> 00:14:04.920
<v Speaker 1>you're sharing it with me now live.

00:14:05.639 --> 00:14:07.160
<v Speaker 1>But you might you might do this writing

00:14:07.160 --> 00:14:09.675
<v Speaker 1>down outside of your repository. You might do

00:14:09.675 --> 00:14:11.915
<v Speaker 1>it in it's good to match the communication

00:14:11.915 --> 00:14:13.595
<v Speaker 1>methods that people are happy with. So it

00:14:13.595 --> 00:14:14.955
<v Speaker 1>could be a Google doc.

00:14:15.595 --> 00:14:16.875
<v Speaker 1>It could be in a field on a

00:14:17.675 --> 00:14:19.515
<v Speaker 1>like, some field on a Jira ticket.

00:14:19.915 --> 00:14:21.995
<v Speaker 1>Yep. It could be you paste it into

00:14:21.995 --> 00:14:23.355
<v Speaker 1>Slack and say, what do you guys think?

00:14:24.839 --> 00:14:26.520
<v Speaker 1>You sort of do it informally because you

00:14:26.520 --> 00:14:29.560
<v Speaker 1>wanna you're expecting people to say in some

00:14:29.560 --> 00:14:32.279
<v Speaker 1>places that's not really what we talked about

00:14:32.279 --> 00:14:34.279
<v Speaker 1>or tweak it a bit. But let's do

00:14:34.279 --> 00:14:35.000
<v Speaker 1>it the Git repo.

00:14:36.605 --> 00:14:38.285
<v Speaker 1>So you've got the the feature title. You've

00:14:38.285 --> 00:14:40.125
<v Speaker 1>got a bit of explanatory text that is

00:14:40.125 --> 00:14:42.365
<v Speaker 1>just for readers. It's not for the computer.

00:14:43.404 --> 00:14:45.245
<v Speaker 0>Yep. We've identified a rule.

00:14:45.725 --> 00:14:47.005
<v Speaker 1>We've got one example.

00:14:47.565 --> 00:14:49.485
<v Speaker 1>So what's the rule? If the directory doesn't

00:14:49.485 --> 00:14:51.165
<v Speaker 1>exist, the repository can be cloned.

00:14:52.230 --> 00:14:54.070
<v Speaker 1>So given I've got no local directory, when

00:14:54.070 --> 00:14:55.510
<v Speaker 1>I sync a Git repository, then the Git

00:14:55.510 --> 00:14:56.710
<v Speaker 1>repository is cloned.

00:14:59.590 --> 00:15:00.630
<v Speaker 1>What do you think of that one?

00:15:04.725 --> 00:15:06.245
<v Speaker 0>I'm not sure because I I don't even

00:15:06.245 --> 00:15:08.084
<v Speaker 0>remember who wrote that, if it was you

00:15:08.084 --> 00:15:09.685
<v Speaker 0>or me or a collaboration.

00:15:10.165 --> 00:15:11.764
<v Speaker 0>To me, it makes sense.

00:15:12.805 --> 00:15:14.165
<v Speaker 0>I mean, one of the things I struggle

00:15:14.165 --> 00:15:16.404
<v Speaker 0>with when it comes to ratings scenarios is

00:15:16.404 --> 00:15:17.685
<v Speaker 0>trying to understand

00:15:18.324 --> 00:15:19.285
<v Speaker 0>the the subject.

00:15:20.000 --> 00:15:21.920
<v Speaker 0>Like, you know, I think because

00:15:24.800 --> 00:15:26.960
<v Speaker 0>yeah. I I I know there's, like I

00:15:26.960 --> 00:15:28.880
<v Speaker 0>don't know if the rules are are guidelines,

00:15:28.880 --> 00:15:30.480
<v Speaker 0>but, you know, avoid avoid the term of

00:15:30.480 --> 00:15:31.280
<v Speaker 0>the user

00:15:31.600 --> 00:15:32.240
<v Speaker 0>and such.

00:15:32.915 --> 00:15:33.555
<v Speaker 0>Yeah.

00:15:34.115 --> 00:15:36.035
<v Speaker 0>And here we're using I.

00:15:36.514 --> 00:15:38.355
<v Speaker 0>I mean, is that is that that the

00:15:38.355 --> 00:15:39.074
<v Speaker 1>same? Yeah.

00:15:39.555 --> 00:15:40.995
<v Speaker 1>It's fine. You could switch it to the

00:15:40.995 --> 00:15:42.514
<v Speaker 1>passive voice if you want to.

00:15:43.394 --> 00:15:44.035
<v Speaker 0>Okay.

00:15:44.915 --> 00:15:47.290
<v Speaker 1>Given there is no local directory when the

00:15:47.290 --> 00:15:48.890
<v Speaker 1>Git repository is synced.

00:15:49.450 --> 00:15:52.090
<v Speaker 0>K. So, I mean, just try to There's

00:15:52.090 --> 00:15:54.970
<v Speaker 1>two stylistic things. One is being eye centric,

00:15:56.570 --> 00:15:58.170
<v Speaker 1>which some people really like.

00:15:59.290 --> 00:15:59.610
<v Speaker 1>Being

00:16:00.170 --> 00:16:00.570
<v Speaker 1>saying,

00:16:01.595 --> 00:16:02.795
<v Speaker 1>you can also do a sort of third

00:16:02.795 --> 00:16:05.035
<v Speaker 1>person thing where you say, when Bob syncs

00:16:05.035 --> 00:16:06.635
<v Speaker 1>his Git repository.

00:16:07.755 --> 00:16:09.355
<v Speaker 1>And then that's useful if you've got some

00:16:09.355 --> 00:16:11.995
<v Speaker 1>concept of, you know, different user personas or

00:16:12.395 --> 00:16:14.395
<v Speaker 1>maybe different types of users, like you're trying

00:16:14.395 --> 00:16:16.180
<v Speaker 1>to cater for people who are really familiar

00:16:16.180 --> 00:16:17.620
<v Speaker 1>with the system, but also you want to

00:16:17.620 --> 00:16:18.340
<v Speaker 1>think about,

00:16:19.220 --> 00:16:20.020
<v Speaker 1>you know,

00:16:20.820 --> 00:16:23.300
<v Speaker 1>James who is not tech savvy at all

00:16:23.300 --> 00:16:24.900
<v Speaker 1>and has different challenges

00:16:25.380 --> 00:16:26.980
<v Speaker 1>or people who are really familiar with it.

00:16:26.980 --> 00:16:28.100
<v Speaker 1>So if you've done that kind of user

00:16:28.100 --> 00:16:28.580
<v Speaker 1>scenario

00:16:29.834 --> 00:16:32.475
<v Speaker 1>thing that usability people like to do sometimes,

00:16:33.995 --> 00:16:36.475
<v Speaker 1>you know, returning users, new users, you could

00:16:36.475 --> 00:16:38.314
<v Speaker 1>have names and, you know, flesh all that

00:16:38.314 --> 00:16:38.875
<v Speaker 1>out.

00:16:39.194 --> 00:16:40.954
<v Speaker 1>Some people do I because, again, it makes

00:16:40.954 --> 00:16:42.154
<v Speaker 1>it feel a bit more immediate,

00:16:44.280 --> 00:16:45.560
<v Speaker 1>Whereas the passive

00:16:46.040 --> 00:16:48.520
<v Speaker 0>voice like a plural, like, Kevin, we have

00:16:48.520 --> 00:16:51.240
<v Speaker 0>no local directory when we sync.

00:16:52.120 --> 00:16:53.080
<v Speaker 1>Yeah. I mean,

00:16:53.960 --> 00:16:56.675
<v Speaker 1>There isn't a right or wrong. It's it's

00:16:56.835 --> 00:16:58.515
<v Speaker 1>I'd match what I would try and do

00:16:58.515 --> 00:16:59.875
<v Speaker 1>is match what people

00:17:00.275 --> 00:17:03.155
<v Speaker 1>would how were people talking about it in

00:17:03.875 --> 00:17:04.595
<v Speaker 1>the

00:17:04.915 --> 00:17:06.194
<v Speaker 1>in the in the

00:17:06.755 --> 00:17:08.515
<v Speaker 1>the session. So Okay. People in the session,

00:17:08.515 --> 00:17:10.540
<v Speaker 1>were they saying, when I go here, I

00:17:10.540 --> 00:17:11.740
<v Speaker 1>should be able to do this? Or were

00:17:11.740 --> 00:17:14.220
<v Speaker 1>they saying, when when they, the customers, come

00:17:14.220 --> 00:17:15.099
<v Speaker 1>to our site?

00:17:15.340 --> 00:17:16.540
<v Speaker 1>I'll try and match that.

00:17:16.860 --> 00:17:17.980
<v Speaker 1>It's probably the best.

00:17:18.460 --> 00:17:21.340
<v Speaker 0>Okay. Let's stick with I for this afternoon's

00:17:21.340 --> 00:17:23.724
<v Speaker 0>session. We also have a quick question from

00:17:23.724 --> 00:17:27.164
<v Speaker 0>Wolfgang who is asking rules and examples aren't

00:17:27.164 --> 00:17:28.364
<v Speaker 0>still the same. Yeah.

00:17:29.804 --> 00:17:32.365
<v Speaker 1>So this can happen when the you've only

00:17:32.365 --> 00:17:33.244
<v Speaker 1>got one example.

00:17:34.445 --> 00:17:36.570
<v Speaker 1>And that there's two type that one of

00:17:36.570 --> 00:17:38.489
<v Speaker 1>one of the hard things when you're writing

00:17:40.410 --> 00:17:42.409
<v Speaker 1>when you're writing a scenario is

00:17:43.370 --> 00:17:44.890
<v Speaker 1>how much detail do I need to put

00:17:44.890 --> 00:17:45.609
<v Speaker 1>in there.

00:17:47.530 --> 00:17:48.249
<v Speaker 1>So

00:17:48.570 --> 00:17:51.315
<v Speaker 1>using rules is quite important for this, to

00:17:51.315 --> 00:17:52.995
<v Speaker 1>help this. It's one of the reasons that

00:17:52.995 --> 00:17:55.874
<v Speaker 1>rules have been adopted quite a lot is

00:17:57.394 --> 00:18:00.514
<v Speaker 1>one reason for adding specifics into a scenario

00:18:00.514 --> 00:18:02.514
<v Speaker 1>is gonna be because it's relevant to the

00:18:02.514 --> 00:18:02.755
<v Speaker 1>rule.

00:18:04.850 --> 00:18:07.570
<v Speaker 1>So what's the rule about? It's about directories

00:18:08.370 --> 00:18:10.849
<v Speaker 1>and what directory existing or not means.

00:18:11.809 --> 00:18:12.529
<v Speaker 0>Mhmm.

00:18:14.850 --> 00:18:17.409
<v Speaker 1>So any detail that's about that can lead

00:18:17.409 --> 00:18:19.075
<v Speaker 1>to some questions. Right? So what does directory

00:18:19.075 --> 00:18:20.195
<v Speaker 1>existing mean?

00:18:24.995 --> 00:18:26.995
<v Speaker 1>Could it what happens if sometimes it leads

00:18:26.995 --> 00:18:28.914
<v Speaker 1>to questions. What happens if it exists but

00:18:28.914 --> 00:18:30.354
<v Speaker 1>is owned by someone else?

00:18:31.075 --> 00:18:32.674
<v Speaker 1>What happens if it exists

00:18:32.914 --> 00:18:34.810
<v Speaker 1>with a different case?

00:18:37.530 --> 00:18:38.570
<v Speaker 1>What happens

00:18:39.450 --> 00:18:41.130
<v Speaker 0>Yeah. We never really get into a lot

00:18:41.130 --> 00:18:43.610
<v Speaker 0>of we never really for

00:18:43.610 --> 00:18:45.770
<v Speaker 1>me, because of my user permissions,

00:18:46.490 --> 00:18:48.010
<v Speaker 1>but I can't create a directory with that

00:18:48.010 --> 00:18:48.650
<v Speaker 1>name

00:18:50.265 --> 00:18:52.265
<v Speaker 1>because there is one in the file system.

00:18:54.825 --> 00:18:56.585
<v Speaker 1>All of these might be technical things.

00:18:57.945 --> 00:18:59.625
<v Speaker 1>But so so one reason is to explain

00:18:59.625 --> 00:19:00.905
<v Speaker 1>the rule. I think

00:19:02.320 --> 00:19:03.760
<v Speaker 1>we could put the name of the directory

00:19:03.760 --> 00:19:05.520
<v Speaker 1>in there to make it clearer,

00:19:05.760 --> 00:19:07.440
<v Speaker 1>to make it more like an example.

00:19:09.520 --> 00:19:11.440
<v Speaker 0>Okay. It not be part of the Even

00:19:11.440 --> 00:19:13.920
<v Speaker 1>I have no directory called

00:19:14.995 --> 00:19:15.874
<v Speaker 1>something

00:19:16.515 --> 00:19:17.554
<v Speaker 1>when I sync the

00:19:19.075 --> 00:19:20.994
<v Speaker 1>yes. So, actually, that's a good question.

00:19:22.115 --> 00:19:24.755
<v Speaker 1>In Git, what determines the name of the

00:19:24.755 --> 00:19:26.434
<v Speaker 1>in your system? Is it always gonna use

00:19:26.434 --> 00:19:28.034
<v Speaker 1>the name of the repository as the folder

00:19:28.034 --> 00:19:28.355
<v Speaker 1>name?

00:19:32.810 --> 00:19:34.970
<v Speaker 0>Not quite. Did we touch about that on

00:19:34.970 --> 00:19:36.090
<v Speaker 0>the config?

00:19:37.610 --> 00:19:39.130
<v Speaker 0>No. I don't think we did.

00:19:40.250 --> 00:19:41.690
<v Speaker 0>Think we spoke about it last time, but

00:19:41.690 --> 00:19:43.450
<v Speaker 0>what we said was there there is the

00:19:43.450 --> 00:19:46.085
<v Speaker 0>concept of configuring get synced to tell it,

00:19:46.085 --> 00:19:46.965
<v Speaker 0>you know, where

00:19:47.445 --> 00:19:49.285
<v Speaker 0>the cache directory is gonna be to store

00:19:49.285 --> 00:19:50.645
<v Speaker 0>these repositories

00:19:50.645 --> 00:19:52.405
<v Speaker 0>and stuff like that. But we'd never

00:19:53.205 --> 00:19:55.685
<v Speaker 0>we what what I said was that functionality,

00:19:55.685 --> 00:19:57.045
<v Speaker 0>I don't mind being just

00:19:57.490 --> 00:19:59.809
<v Speaker 0>hard coded as sensible defaults for now and

00:19:59.809 --> 00:20:01.330
<v Speaker 0>bring configuration later.

00:20:01.409 --> 00:20:03.809
<v Speaker 0>So we haven't really said it's gonna clone

00:20:03.809 --> 00:20:05.809
<v Speaker 0>to this. But, yeah, I think realistically, it's

00:20:05.809 --> 00:20:07.809
<v Speaker 0>gonna be the name of the project.

00:20:08.690 --> 00:20:10.825
<v Speaker 1>Okay. So let's put a let's give an

00:20:10.825 --> 00:20:12.664
<v Speaker 1>example of a project name that makes it

00:20:12.825 --> 00:20:14.985
<v Speaker 1>so one reason is to make it explain

00:20:14.985 --> 00:20:16.904
<v Speaker 1>the rule better. The other reason for extra

00:20:16.904 --> 00:20:19.625
<v Speaker 1>detail is to make someone reading it understand

00:20:19.625 --> 00:20:21.304
<v Speaker 1>the domain we're operating in a bit more.

00:20:22.580 --> 00:20:23.299
<v Speaker 0>Project a okay? Or Yeah.

00:20:26.500 --> 00:20:28.020
<v Speaker 1>You you want it to be

00:20:30.100 --> 00:20:31.620
<v Speaker 1>you don't want to be too silly. Like,

00:20:31.620 --> 00:20:33.220
<v Speaker 1>if you if you make it too

00:20:34.260 --> 00:20:34.980
<v Speaker 1>abstract,

00:20:35.300 --> 00:20:36.500
<v Speaker 1>if everything's foo and bar,

00:20:37.005 --> 00:20:38.925
<v Speaker 1>it's harder to read and it's less real

00:20:38.925 --> 00:20:40.525
<v Speaker 1>to people. They don't think about their real

00:20:40.525 --> 00:20:41.245
<v Speaker 1>projects.

00:20:41.805 --> 00:20:43.804
<v Speaker 1>The project a is fine. Yeah.

00:20:44.045 --> 00:20:45.965
<v Speaker 0>Repository a b c, I think, makes more

00:20:45.965 --> 00:20:47.725
<v Speaker 0>sense than project because we're we're dealing with

00:20:47.725 --> 00:20:49.965
<v Speaker 0>get here, not not something else.

00:20:50.970 --> 00:20:53.529
<v Speaker 1>Yeah. And then so that's the context.

00:20:55.770 --> 00:20:58.090
<v Speaker 1>The action is when I sync a GET

00:20:58.090 --> 00:20:58.889
<v Speaker 1>repository,

00:20:59.050 --> 00:21:00.490
<v Speaker 1>you could either say, what is the name

00:21:00.490 --> 00:21:01.290
<v Speaker 1>of the GET repository?

00:21:02.905 --> 00:21:04.585
<v Speaker 1>Or you could say a Git repository that

00:21:04.585 --> 00:21:07.145
<v Speaker 1>would be cladding to repo a b c.

00:21:07.865 --> 00:21:10.185
<v Speaker 1>If you want to sort of defer that

00:21:10.185 --> 00:21:12.345
<v Speaker 1>config those config rules for somewhere else.

00:21:12.505 --> 00:21:14.185
<v Speaker 0>It's something like that? Yeah. If you're happy

00:21:14.185 --> 00:21:14.905
<v Speaker 1>for that, that's fine.

00:21:21.810 --> 00:21:23.250
<v Speaker 0>Or should that be a should I just

00:21:23.250 --> 00:21:25.970
<v Speaker 0>use a real repository rather than Yeah. Why

00:21:25.970 --> 00:21:27.570
<v Speaker 0>not? Like, I guess It makes it real,

00:21:27.570 --> 00:21:29.970
<v Speaker 1>isn't it? It can clone itself. So, actually,

00:21:29.970 --> 00:21:31.169
<v Speaker 0>let's just do that.

00:21:31.490 --> 00:21:32.530
<v Speaker 1>That's an organization.

00:21:35.075 --> 00:21:35.715
<v Speaker 0>Get

00:21:36.674 --> 00:21:38.595
<v Speaker 0>When I click when I click on the

00:21:38.595 --> 00:21:41.554
<v Speaker 0>get sync repository, we actually just clone ourselves

00:21:41.554 --> 00:21:43.794
<v Speaker 0>as part of the test case. Into get

00:21:43.794 --> 00:21:44.595
<v Speaker 1>sync output.

00:21:45.490 --> 00:21:47.330
<v Speaker 1>So try and have the steps at a

00:21:47.330 --> 00:21:49.809
<v Speaker 1>similar level of abstraction.

00:21:49.890 --> 00:21:51.809
<v Speaker 1>We or I would say This is supposed

00:21:51.809 --> 00:21:54.210
<v Speaker 1>be sync during the sync. Right? I mean,

00:21:54.370 --> 00:21:54.770
<v Speaker 0>sync is

00:21:56.130 --> 00:21:58.625
<v Speaker 1>Yeah. Then the repository is cloned. And I

00:21:58.625 --> 00:22:00.865
<v Speaker 1>would say either, I would say, into git

00:22:00.865 --> 00:22:01.505
<v Speaker 1>sync

00:22:02.625 --> 00:22:03.825
<v Speaker 1>or I would say

00:22:04.545 --> 00:22:05.825
<v Speaker 1>that directory.

00:22:08.545 --> 00:22:10.785
<v Speaker 1>Just depending on whether there's too many

00:22:11.105 --> 00:22:12.065
<v Speaker 1>too much repetition.

00:22:14.930 --> 00:22:15.810
<v Speaker 0>Let's do that.

00:22:17.970 --> 00:22:19.490
<v Speaker 1>Where's the temp come from?

00:22:19.730 --> 00:22:21.330
<v Speaker 0>I was just making that up.

00:22:22.850 --> 00:22:24.770
<v Speaker 0>Alright. Okay. So we're just gonna You could

00:22:24.770 --> 00:22:25.890
<v Speaker 1>put it in there, but I'd I'd put

00:22:25.890 --> 00:22:26.690
<v Speaker 1>something like

00:22:27.415 --> 00:22:29.414
<v Speaker 1>given my sync folder is temp.

00:22:29.575 --> 00:22:31.175
<v Speaker 0>But we we don't have a sync folder

00:22:31.175 --> 00:22:32.375
<v Speaker 0>yet. So

00:22:33.815 --> 00:22:35.175
<v Speaker 0>yeah. We we we would just clone it

00:22:35.175 --> 00:22:36.695
<v Speaker 0>to the current working directory. How do how

00:22:36.695 --> 00:22:37.975
<v Speaker 0>do we use that as an example? The

00:22:37.975 --> 00:22:41.335
<v Speaker 0>repository is cloned into What? The current working

00:22:41.495 --> 00:22:42.855
<v Speaker 0>directory as,

00:22:43.950 --> 00:22:44.749
<v Speaker 0>I think.

00:22:45.390 --> 00:22:47.070
<v Speaker 1>Okay. So does that mean you should mention

00:22:47.070 --> 00:22:49.950
<v Speaker 1>the current working directory in the given?

00:22:55.710 --> 00:22:57.710
<v Speaker 0>So given I

00:22:58.465 --> 00:22:59.024
<v Speaker 0>am in

00:23:00.465 --> 00:23:02.304
<v Speaker 0>in that end seems a bit funny, but

00:23:02.544 --> 00:23:04.464
<v Speaker 0>and the slash temp

00:23:06.465 --> 00:23:07.504
<v Speaker 0>directory,

00:23:08.465 --> 00:23:09.744
<v Speaker 0>and I have

00:23:10.065 --> 00:23:11.744
<v Speaker 0>what do I call get synced?

00:23:12.945 --> 00:23:13.664
<v Speaker 0>Is that what you mean?

00:23:15.800 --> 00:23:17.080
<v Speaker 1>Yeah. But now it feels a bit too

00:23:17.080 --> 00:23:19.960
<v Speaker 1>detailed, doesn't it? Because the temp the

00:23:19.960 --> 00:23:22.120
<v Speaker 1>the temp location isn't really

00:23:22.360 --> 00:23:23.240
<v Speaker 1>relevant.

00:23:25.000 --> 00:23:26.520
<v Speaker 0>K. So given Given

00:23:27.080 --> 00:23:30.105
<v Speaker 1>I have no directory called git sync in

00:23:30.105 --> 00:23:31.545
<v Speaker 1>the current working directory.

00:23:33.465 --> 00:23:34.825
<v Speaker 0>So given

00:23:35.545 --> 00:23:38.665
<v Speaker 0>I have no directory called git sync and

00:23:43.770 --> 00:23:45.610
<v Speaker 1>Is it the current working directory?

00:23:46.650 --> 00:23:47.850
<v Speaker 1>Would

00:23:47.850 --> 00:23:49.130
<v Speaker 1>would a reasonable

00:23:49.290 --> 00:23:50.090
<v Speaker 1>reader

00:23:50.090 --> 00:23:53.130
<v Speaker 1>assume we're talking about the current working directory?

00:23:54.170 --> 00:23:55.690
<v Speaker 0>I don't know. We don't have a reasonable

00:23:55.690 --> 00:23:56.090
<v Speaker 1>reader.

00:23:56.635 --> 00:23:59.274
<v Speaker 1>A reasonable future person joining the project.

00:24:01.835 --> 00:24:03.275
<v Speaker 0>I think we spoke about this last time

00:24:03.275 --> 00:24:05.434
<v Speaker 0>as well where I I was trying to

00:24:05.434 --> 00:24:07.515
<v Speaker 0>avoid bringing this up as long as possible,

00:24:07.515 --> 00:24:09.115
<v Speaker 0>but it runs as a library and it

00:24:09.115 --> 00:24:10.874
<v Speaker 0>runs as a command line application.

00:24:10.955 --> 00:24:13.355
<v Speaker 0>And I was trying to keep the

00:24:12.760 --> 00:24:14.119
<v Speaker 0>the for both?

00:24:15.720 --> 00:24:17.960
<v Speaker 0>No. They kept the library version of it

00:24:17.960 --> 00:24:20.520
<v Speaker 0>would require you to configure the the the

00:24:20.520 --> 00:24:22.600
<v Speaker 0>clone directory. So let's take in that current

00:24:22.600 --> 00:24:25.159
<v Speaker 1>let's take that current working directory concept out.

00:24:25.160 --> 00:24:25.559
<v Speaker 1>Okay.

00:24:28.095 --> 00:24:29.774
<v Speaker 1>It's not relevant to the rule,

00:24:30.735 --> 00:24:32.335
<v Speaker 1>and it's narrowing our options.

00:24:32.895 --> 00:24:34.174
<v Speaker 1>You could have something like

00:24:35.855 --> 00:24:37.534
<v Speaker 1>I don't suggest you change this, but you

00:24:37.534 --> 00:24:38.734
<v Speaker 1>could have something like, given

00:24:39.215 --> 00:24:41.774
<v Speaker 1>look at the background. Given the clone directory

00:24:41.934 --> 00:24:43.294
<v Speaker 1>is configured to be,

00:24:44.680 --> 00:24:46.760
<v Speaker 1>And then write everything with that included.

00:24:47.160 --> 00:24:49.160
<v Speaker 1>But it's it's a bit of extra stuff.

00:24:49.960 --> 00:24:51.480
<v Speaker 1>I think if I read this, if I've

00:24:51.480 --> 00:24:53.080
<v Speaker 1>got no direct to call git sync, I'm

00:24:53.080 --> 00:24:55.720
<v Speaker 1>kind of imagining there's a there's a folder.

00:24:56.440 --> 00:24:57.960
<v Speaker 1>There's like a target folder.

00:24:58.280 --> 00:25:00.040
<v Speaker 0>Is this something

00:25:00.065 --> 00:25:02.625
<v Speaker 0>we would just, like, context to set up

00:25:02.625 --> 00:25:03.504
<v Speaker 0>multiples

00:25:03.585 --> 00:25:05.905
<v Speaker 0>features or scenarios and say, hey. We are

00:25:05.905 --> 00:25:07.825
<v Speaker 0>assuming your code directory is

00:25:08.065 --> 00:25:09.985
<v Speaker 0>is set up as this.

00:25:10.145 --> 00:25:13.049
<v Speaker 0>This feature isn't available yet, so it's hard

00:25:13.049 --> 00:25:14.490
<v Speaker 0>for you to use slash tab. Like, could

00:25:14.570 --> 00:25:16.250
<v Speaker 0>would we just add that as a better

00:25:16.250 --> 00:25:17.289
<v Speaker 0>blurb somewhere?

00:25:19.130 --> 00:25:21.690
<v Speaker 1>Yeah. I wouldn't bother. No. Okay. Because it's

00:25:21.690 --> 00:25:23.130
<v Speaker 1>not about that rule. Like, maybe when we're

00:25:23.130 --> 00:25:24.169
<v Speaker 1>writing this stuff about

00:25:24.775 --> 00:25:26.615
<v Speaker 1>conf when we're

00:25:26.855 --> 00:25:29.975
<v Speaker 1>talking about configuration and how syncs map to,

00:25:29.975 --> 00:25:32.215
<v Speaker 1>which folder things get synced to, we probably

00:25:32.215 --> 00:25:33.894
<v Speaker 1>will want to include all that detail.

00:25:34.615 --> 00:25:36.775
<v Speaker 1>But for for the purpose of this, we

00:25:36.775 --> 00:25:37.975
<v Speaker 1>we don't because

00:25:38.295 --> 00:25:39.575
<v Speaker 1>all all we're really

00:25:39.919 --> 00:25:41.360
<v Speaker 1>you know, what's the rule gonna be? It's

00:25:41.360 --> 00:25:42.879
<v Speaker 1>gonna be an if statement

00:25:44.720 --> 00:25:45.759
<v Speaker 1>that that

00:25:46.000 --> 00:25:49.119
<v Speaker 1>lists some files and then fails outright. So

00:25:49.600 --> 00:25:51.520
<v Speaker 1>to understand this rule, I think we've got

00:25:51.520 --> 00:25:52.159
<v Speaker 1>enough.

00:25:52.720 --> 00:25:54.400
<v Speaker 0>Okay. So that means we just move on

00:25:54.400 --> 00:25:55.200
<v Speaker 0>to rule two?

00:25:57.245 --> 00:25:57.884
<v Speaker 1>Yeah.

00:25:59.804 --> 00:26:01.165
<v Speaker 0>I mean, I don't wanna put words in

00:26:01.165 --> 00:26:03.085
<v Speaker 0>your mind. Would would you do something else?

00:26:03.085 --> 00:26:04.845
<v Speaker 0>Okay. So Is we're never gonna get to

00:26:04.845 --> 00:26:06.284
<v Speaker 1>perfection as well, are we?

00:26:06.605 --> 00:26:08.365
<v Speaker 1>And these are living documents. They're gonna change

00:26:08.365 --> 00:26:09.965
<v Speaker 1>over time. Isn't that why you're here?

00:26:12.540 --> 00:26:14.380
<v Speaker 1>As we implement things and as as we

00:26:14.380 --> 00:26:16.300
<v Speaker 1>implement the tests, as we implement new features,

00:26:16.300 --> 00:26:17.820
<v Speaker 1>we're gonna modify these.

00:26:18.700 --> 00:26:20.540
<v Speaker 1>It's, like, quite common I think that quite

00:26:20.540 --> 00:26:23.100
<v Speaker 1>common that happens is, like, you don't mention

00:26:23.340 --> 00:26:24.860
<v Speaker 1>the folder that this is all happening in

00:26:24.860 --> 00:26:25.740
<v Speaker 1>like we've done. Right?

00:26:26.465 --> 00:26:28.145
<v Speaker 1>And then later, you realize there is a

00:26:28.145 --> 00:26:30.625
<v Speaker 1>rule that's really specific about which folder it's

00:26:30.625 --> 00:26:31.665
<v Speaker 1>in, and you have to go and add

00:26:31.665 --> 00:26:34.544
<v Speaker 1>add givens to the the other features.

00:26:35.425 --> 00:26:36.385
<v Speaker 1>But you don't

00:26:36.625 --> 00:26:38.465
<v Speaker 1>you don't you can't include all of the

00:26:38.465 --> 00:26:41.080
<v Speaker 1>detail that's needed to execute it in every

00:26:41.080 --> 00:26:41.799
<v Speaker 1>scenario.

00:26:42.200 --> 00:26:43.480
<v Speaker 1>So you've got to pick and choose which

00:26:43.480 --> 00:26:45.159
<v Speaker 1>bits are gonna be written here in the

00:26:45.159 --> 00:26:47.799
<v Speaker 1>Gherkin and which bits are gonna be implementation

00:26:47.799 --> 00:26:50.039
<v Speaker 1>details of the test I'm gonna hard code

00:26:50.039 --> 00:26:50.919
<v Speaker 1>in the test.

00:26:52.039 --> 00:26:53.480
<v Speaker 1>And and the important thing is which bits

00:26:53.480 --> 00:26:54.679
<v Speaker 1>do you think someone should read.

00:26:55.665 --> 00:26:57.265
<v Speaker 1>Like, to automate it, we're gonna have to

00:26:57.265 --> 00:26:58.545
<v Speaker 1>get the system into the state where it

00:26:58.545 --> 00:27:00.945
<v Speaker 1>knows which folder it's syncing into

00:27:01.425 --> 00:27:03.345
<v Speaker 1>and it knows what the what the direct

00:27:03.425 --> 00:27:05.185
<v Speaker 1>it's able to list that directory and stuff

00:27:05.185 --> 00:27:05.825
<v Speaker 1>like that.

00:27:06.225 --> 00:27:07.585
<v Speaker 1>But is that gonna be in the test

00:27:07.585 --> 00:27:09.425
<v Speaker 1>implementation, or is it gonna be visible to

00:27:09.425 --> 00:27:09.905
<v Speaker 1>human

00:27:10.225 --> 00:27:10.625
<v Speaker 1>readers?

00:27:11.330 --> 00:27:13.890
<v Speaker 1>It depends whether it's useful for them to

00:27:13.890 --> 00:27:15.010
<v Speaker 1>understand the rule.

00:27:15.810 --> 00:27:18.210
<v Speaker 0>Alright. Okay. And it depends whether it's important

00:27:18.210 --> 00:27:19.730
<v Speaker 1>for them, yeah, for the rule to be

00:27:19.730 --> 00:27:20.690
<v Speaker 1>validatable.

00:27:21.090 --> 00:27:23.730
<v Speaker 1>So all of the detail that you need

00:27:23.730 --> 00:27:25.410
<v Speaker 1>to understand the rule should be in the

00:27:25.410 --> 00:27:25.890
<v Speaker 1>scenario.

00:27:29.055 --> 00:27:31.615
<v Speaker 1>Okay. So the the bit that's slightly missing

00:27:31.615 --> 00:27:32.255
<v Speaker 1>for me

00:27:33.455 --> 00:27:35.375
<v Speaker 1>Uh-huh. But but it might not be missing

00:27:35.375 --> 00:27:36.735
<v Speaker 1>for most people is

00:27:37.615 --> 00:27:39.535
<v Speaker 1>in that in that previous one. Is it

00:27:39.535 --> 00:27:41.535
<v Speaker 1>obvious that it is taking the last part

00:27:41.535 --> 00:27:43.679
<v Speaker 1>of the folder name, and is that a

00:27:43.679 --> 00:27:44.960
<v Speaker 1>standard git behavior?

00:27:45.520 --> 00:27:47.120
<v Speaker 1>I think it's a standard git behavior, isn't

00:27:47.120 --> 00:27:48.960
<v Speaker 1>it? It is. If you do a git

00:27:48.960 --> 00:27:49.600
<v Speaker 0>clone

00:27:49.760 --> 00:27:51.520
<v Speaker 0>x y z, it's gonna create an x

00:27:51.520 --> 00:27:52.720
<v Speaker 0>y z directory.

00:27:53.200 --> 00:27:55.519
<v Speaker 0>I'm trying trying to do as much

00:27:56.000 --> 00:27:57.600
<v Speaker 0>extensible get defaults as possible.

00:27:58.225 --> 00:27:59.745
<v Speaker 1>And that's not a rule of our system,

00:27:59.745 --> 00:28:01.825
<v Speaker 1>so let's not worry about it. Alright. So

00:28:01.825 --> 00:28:03.904
<v Speaker 0>our second rule is if the target directory

00:28:03.904 --> 00:28:04.704
<v Speaker 0>exists

00:28:04.784 --> 00:28:08.784
<v Speaker 0>and is not a get repository,

00:28:11.745 --> 00:28:12.784
<v Speaker 0>then we exit

00:28:13.105 --> 00:28:13.904
<v Speaker 0>we enter

00:28:14.200 --> 00:28:16.520
<v Speaker 0>and exit with non zero code.

00:28:16.680 --> 00:28:19.000
<v Speaker 0>So the rule is if the target directory

00:28:21.640 --> 00:28:23.240
<v Speaker 0>yeah. If the target directory says this is

00:28:23.240 --> 00:28:24.360
<v Speaker 0>not a Git repository.

00:28:25.480 --> 00:28:26.200
<v Speaker 0>Mhmm.

00:28:26.760 --> 00:28:27.160
<v Speaker 1>Yeah.

00:28:28.005 --> 00:28:29.845
<v Speaker 1>So there's a folder at that location that

00:28:29.845 --> 00:28:31.525
<v Speaker 1>is not a git repository. Given I have

00:28:31.525 --> 00:28:33.205
<v Speaker 1>a directory called git sync that is not

00:28:33.205 --> 00:28:34.164
<v Speaker 1>a git repository.

00:28:36.165 --> 00:28:38.085
<v Speaker 0>K. Her example

00:28:38.085 --> 00:28:39.045
<v Speaker 0>is

00:28:41.360 --> 00:28:41.760
<v Speaker 0>this

00:28:42.320 --> 00:28:43.919
<v Speaker 0>kind of the same one one map that

00:28:43.919 --> 00:28:45.120
<v Speaker 0>you said that would happen that we have

00:28:45.120 --> 00:28:47.039
<v Speaker 0>a a rule with a single example. So

00:28:48.000 --> 00:28:48.799
<v Speaker 1>Yeah.

00:28:49.360 --> 00:28:51.279
<v Speaker 1>I wonder if you can think of is

00:28:51.279 --> 00:28:52.799
<v Speaker 1>there any situation where

00:28:55.935 --> 00:28:56.735
<v Speaker 1>no.

00:28:58.095 --> 00:28:59.695
<v Speaker 1>There's not a situation where it would sync

00:28:59.695 --> 00:29:00.975
<v Speaker 1>into the folder anyway.

00:29:01.215 --> 00:29:03.215
<v Speaker 0>Not if it's not a GET repository.

00:29:03.215 --> 00:29:05.295
<v Speaker 0>Like, that's our like, we we don't wanna

00:29:05.295 --> 00:29:06.975
<v Speaker 0>touch that. It's not managed by us. Let's

00:29:06.975 --> 00:29:08.415
<v Speaker 0>just leave it. It's

00:29:08.560 --> 00:29:10.560
<v Speaker 0>Scott. You you can move your not implemented

00:29:10.560 --> 00:29:12.080
<v Speaker 1>tag up to the feature if you want

00:29:12.080 --> 00:29:12.880
<v Speaker 1>to just for

00:29:18.720 --> 00:29:20.400
<v Speaker 0>So I'm a go I'll I'll just try

00:29:20.400 --> 00:29:22.005
<v Speaker 0>and take this up, and then let's, I

00:29:22.005 --> 00:29:25.205
<v Speaker 0>guess, review it and see. So I have

00:29:25.205 --> 00:29:27.044
<v Speaker 0>a that right It's worth it.

00:29:27.765 --> 00:29:29.605
<v Speaker 1>While while you're typing, it's worth mentioning that

00:29:29.605 --> 00:29:32.005
<v Speaker 1>underneath the rule and underneath the example, you

00:29:32.005 --> 00:29:32.965
<v Speaker 1>can put free text.

00:29:34.500 --> 00:29:36.260
<v Speaker 1>So between the the rule and the example

00:29:36.260 --> 00:29:38.340
<v Speaker 1>keyword and between example and given,

00:29:38.580 --> 00:29:41.059
<v Speaker 1>you can put some paragraphs of explanatory stuff

00:29:41.460 --> 00:29:42.660
<v Speaker 1>if it's useful.

00:29:43.140 --> 00:29:44.900
<v Speaker 1>So, you know, you can flesh these things

00:29:44.900 --> 00:29:45.620
<v Speaker 1>out quite a lot.

00:29:49.304 --> 00:29:51.784
<v Speaker 1>Yeah. So what's the non CLI specific bit

00:29:51.784 --> 00:29:53.224
<v Speaker 1>of that of the then?

00:29:53.784 --> 00:29:54.985
<v Speaker 0>If you're talking about the library

00:29:56.184 --> 00:29:57.784
<v Speaker 0>Well, I was about to type then I

00:29:57.784 --> 00:29:59.464
<v Speaker 0>crashed and I'm like, well

00:30:00.184 --> 00:30:01.304
<v Speaker 1>What does the library do?

00:30:03.610 --> 00:30:06.729
<v Speaker 0>It would return an header object or type.

00:30:08.090 --> 00:30:10.010
<v Speaker 1>Alrighty. So

00:30:10.010 --> 00:30:12.490
<v Speaker 1>then I then the repository should not be

00:30:12.490 --> 00:30:13.210
<v Speaker 1>synced.

00:30:15.049 --> 00:30:16.169
<v Speaker 1>It'll be cloned.

00:30:16.490 --> 00:30:16.970
<v Speaker 0>Then

00:30:21.335 --> 00:30:23.414
<v Speaker 0>it should be cloned.

00:30:25.575 --> 00:30:27.735
<v Speaker 0>Makes sense? Yeah. And you could put

00:30:28.375 --> 00:30:30.535
<v Speaker 1>so there's there's a user interface thing creeping

00:30:30.535 --> 00:30:30.775
<v Speaker 1>in.

00:30:31.940 --> 00:30:33.220
<v Speaker 1>You could put

00:30:33.460 --> 00:30:35.220
<v Speaker 1>and an error reported

00:30:35.220 --> 00:30:37.380
<v Speaker 1>or something like something generic like that.

00:30:37.860 --> 00:30:38.900
<v Speaker 1>If it's, like,

00:30:41.940 --> 00:30:43.300
<v Speaker 1>if it's important

00:30:43.300 --> 00:30:44.100
<v Speaker 1>business

00:30:44.260 --> 00:30:45.835
<v Speaker 1>if it's important to the business rule that

00:30:45.835 --> 00:30:47.595
<v Speaker 1>an error is reported rather than the error

00:30:47.595 --> 00:30:48.875
<v Speaker 1>just being a nice thing to do for

00:30:48.875 --> 00:30:49.595
<v Speaker 1>users.

00:30:50.955 --> 00:30:54.235
<v Speaker 1>So the distinction there is, did someone who

00:30:54.235 --> 00:30:56.315
<v Speaker 1>cares about the business say, we need and

00:30:56.315 --> 00:30:57.995
<v Speaker 1>then we need to definitely know it didn't

00:30:57.995 --> 00:30:58.235
<v Speaker 1>work.

00:30:59.490 --> 00:31:00.930
<v Speaker 1>Or is that just a nice thing we're

00:31:00.930 --> 00:31:03.330
<v Speaker 1>gonna do because we're nice to people and

00:31:03.330 --> 00:31:04.929
<v Speaker 1>print out nice error messages?

00:31:06.770 --> 00:31:08.450
<v Speaker 0>Yeah. I I I think what I want

00:31:08.450 --> 00:31:10.450
<v Speaker 0>peep like, if I try to put on

00:31:10.450 --> 00:31:12.610
<v Speaker 0>my I'm about to consume this library or

00:31:12.610 --> 00:31:15.385
<v Speaker 0>CLI application as an external user, The most

00:31:15.385 --> 00:31:17.465
<v Speaker 0>important for me to get back out of

00:31:17.465 --> 00:31:19.705
<v Speaker 0>this file would just be that I know

00:31:19.705 --> 00:31:22.345
<v Speaker 0>that directory is not gonna be mutated, modified,

00:31:22.345 --> 00:31:23.784
<v Speaker 0>blown away. Yeah.

00:31:24.665 --> 00:31:26.905
<v Speaker 0>I don't know if that then covers that

00:31:26.905 --> 00:31:29.705
<v Speaker 0>enough. That's a common mistake. Right? Is that

00:31:30.460 --> 00:31:31.740
<v Speaker 1>so a

00:31:32.060 --> 00:31:34.300
<v Speaker 1>feedback thing in in bad examples is, like,

00:31:34.300 --> 00:31:35.820
<v Speaker 1>people would just put then I should get

00:31:35.820 --> 00:31:36.700
<v Speaker 1>an error message.

00:31:37.820 --> 00:31:39.100
<v Speaker 1>And they won't capture.

00:31:39.580 --> 00:31:41.660
<v Speaker 1>The directory should have been

00:31:42.460 --> 00:31:43.500
<v Speaker 1>cloned over.

00:31:43.820 --> 00:31:45.655
<v Speaker 1>My data should have been preserved. They sort

00:31:45.655 --> 00:31:47.415
<v Speaker 1>of missed the the actual side effects and

00:31:47.415 --> 00:31:49.095
<v Speaker 1>they focus on the UI, is, like, getting

00:31:49.095 --> 00:31:50.455
<v Speaker 1>that getting error message.

00:31:50.855 --> 00:31:52.455
<v Speaker 0>So should I maybe be a bit more

00:31:52.455 --> 00:31:54.055
<v Speaker 0>explicit here? And it's it's not that we

00:31:54.055 --> 00:31:56.375
<v Speaker 0>don't clone anything. It's that that existing directory

00:31:56.375 --> 00:31:58.375
<v Speaker 0>is left untouched or

00:31:59.175 --> 00:31:59.655
<v Speaker 0>something.

00:32:01.809 --> 00:32:04.450
<v Speaker 1>Yeah. If you think that's important, I'd

00:32:04.450 --> 00:32:05.330
<v Speaker 1>base it on

00:32:05.730 --> 00:32:08.210
<v Speaker 1>understanding the business domain, whether that's an important

00:32:08.210 --> 00:32:09.809
<v Speaker 1>part of the rule.

00:32:10.210 --> 00:32:11.090
<v Speaker 0>Then?

00:32:12.049 --> 00:32:13.330
<v Speaker 1>Like, it might be you've had a history

00:32:13.330 --> 00:32:14.690
<v Speaker 1>of this application

00:32:16.165 --> 00:32:18.325
<v Speaker 1>destroying your existing data, and everyone mentions it

00:32:18.325 --> 00:32:20.165
<v Speaker 1>in every scenario that and all the data

00:32:20.165 --> 00:32:21.284
<v Speaker 1>should be preserved.

00:32:22.405 --> 00:32:24.885
<v Speaker 1>Because these are for people, it's always contextual

00:32:25.045 --> 00:32:26.164
<v Speaker 1>with the audience.

00:32:27.525 --> 00:32:30.085
<v Speaker 1>Yeah. So the important thing in the given

00:32:29.790 --> 00:32:31.950
<v Speaker 1>is that the directory called GitSync,

00:32:32.910 --> 00:32:34.830
<v Speaker 1>which is not a Git repository.

00:32:35.630 --> 00:32:36.750
<v Speaker 1>So you can either put that in the

00:32:36.830 --> 00:32:38.510
<v Speaker 1>in one line or you can put, like,

00:32:38.510 --> 00:32:39.470
<v Speaker 1>a new line in and.

00:32:42.525 --> 00:32:43.325
<v Speaker 0>K.

00:32:43.485 --> 00:32:45.965
<v Speaker 1>I put either it or git sync

00:32:46.285 --> 00:32:47.805
<v Speaker 1>between and and is.

00:32:55.010 --> 00:32:56.369
<v Speaker 0>And the final one then,

00:32:56.610 --> 00:32:58.129
<v Speaker 0>it is a directory.

00:32:58.769 --> 00:33:00.129
<v Speaker 0>Is a get repository.

00:33:00.450 --> 00:33:02.289
<v Speaker 0>Multiple examples. So

00:33:02.529 --> 00:33:04.049
<v Speaker 0>Mhmm. Let's see how we go on with

00:33:04.049 --> 00:33:04.690
<v Speaker 0>this one.

00:33:05.090 --> 00:33:06.529
<v Speaker 1>So as we now we're

00:33:07.889 --> 00:33:08.850
<v Speaker 1>now we've got a few.

00:33:09.775 --> 00:33:11.375
<v Speaker 1>If there's a step

00:33:11.535 --> 00:33:13.535
<v Speaker 1>that is really similar to a previous step

00:33:13.535 --> 00:33:14.975
<v Speaker 1>and it's just like a couple of words

00:33:14.975 --> 00:33:15.615
<v Speaker 1>different,

00:33:16.015 --> 00:33:17.935
<v Speaker 1>just use the wording from the original step

00:33:17.935 --> 00:33:20.255
<v Speaker 1>or change the change the previous step

00:33:22.470 --> 00:33:24.470
<v Speaker 1>Just for the automation. If the if the

00:33:24.470 --> 00:33:26.070
<v Speaker 1>same thing said two ways and it means

00:33:26.070 --> 00:33:27.269
<v Speaker 1>something slightly different,

00:33:27.910 --> 00:33:29.830
<v Speaker 1>even if it's the same underlying step, I

00:33:29.830 --> 00:33:31.350
<v Speaker 1>wouldn't there.

00:33:32.150 --> 00:33:33.269
<v Speaker 1>You see what I mean?

00:33:33.990 --> 00:33:35.475
<v Speaker 1>I don't know if that makes sense.

00:33:37.475 --> 00:33:38.195
<v Speaker 0>Okay.

00:33:40.115 --> 00:33:40.995
<v Speaker 0>But

00:33:41.795 --> 00:33:44.515
<v Speaker 1>something is wrong. It doesn't match the remote.

00:33:46.595 --> 00:33:48.675
<v Speaker 0>So something is not captured in our middle

00:33:48.675 --> 00:33:49.075
<v Speaker 0>board.

00:33:49.660 --> 00:33:50.380
<v Speaker 0>Mhmm.

00:33:50.780 --> 00:33:52.700
<v Speaker 0>Okay. No. We do capture here.

00:33:53.100 --> 00:33:55.420
<v Speaker 0>It's just our rule here is, like, if

00:33:55.420 --> 00:33:57.500
<v Speaker 0>the directory is get doesn't match the remote

00:33:57.500 --> 00:33:58.940
<v Speaker 0>dot colon, but then we actually have an

00:33:58.940 --> 00:34:00.700
<v Speaker 0>example where we we did it at colon.

00:34:00.700 --> 00:34:02.620
<v Speaker 0>So, like, the rule was probably just

00:34:04.985 --> 00:34:06.425
<v Speaker 0>I don't know if it's a rule or

00:34:06.425 --> 00:34:08.585
<v Speaker 0>or what, but this is basically it's just

00:34:08.585 --> 00:34:09.545
<v Speaker 0>saying that we have a directory and it's

00:34:09.545 --> 00:34:11.065
<v Speaker 0>a Git repository, then there's a few things

00:34:11.065 --> 00:34:12.345
<v Speaker 0>that can happen.

00:34:12.985 --> 00:34:15.545
<v Speaker 0>Mhmm. A rule specifically is does that mean

00:34:15.545 --> 00:34:16.505
<v Speaker 0>we got something wrong?

00:34:18.420 --> 00:34:20.500
<v Speaker 1>The rule is don't clone it if it's

00:34:22.260 --> 00:34:23.300
<v Speaker 0>But we do yeah.

00:34:23.699 --> 00:34:25.540
<v Speaker 0>Like, oh, the origin points to the right

00:34:25.540 --> 00:34:26.980
<v Speaker 0>URL, so we assume it's the right one

00:34:26.980 --> 00:34:28.260
<v Speaker 0>and we start reconciling.

00:34:28.339 --> 00:34:30.739
<v Speaker 1>Yeah. Often, if there's a rule, like, you

00:34:31.060 --> 00:34:33.405
<v Speaker 1>can only do x if y, you'll have

00:34:33.405 --> 00:34:35.645
<v Speaker 1>an example where you can do an example

00:34:35.645 --> 00:34:36.605
<v Speaker 1>where you can't do.

00:34:37.085 --> 00:34:38.525
<v Speaker 1>There'll be a happy and a sad. In

00:34:38.525 --> 00:34:39.804
<v Speaker 1>this case, we've got two sads and a

00:34:39.804 --> 00:34:40.365
<v Speaker 1>happy.

00:34:41.645 --> 00:34:43.085
<v Speaker 0>Okay. So what does that mean for a

00:34:43.085 --> 00:34:44.765
<v Speaker 0>rule here? Because I I that means I

00:34:44.765 --> 00:34:46.285
<v Speaker 0>probably shouldn't be saying that

00:34:48.030 --> 00:34:49.710
<v Speaker 0>we don't call in in the rule. So

00:34:49.710 --> 00:34:50.190
<v Speaker 0>as

00:34:50.590 --> 00:34:52.430
<v Speaker 0>this isn't a rule anymore, is it?

00:34:53.070 --> 00:34:54.270
<v Speaker 1>It is because there's an if at the

00:34:54.270 --> 00:34:55.950
<v Speaker 1>start. So we don't if

00:34:56.190 --> 00:34:59.390
<v Speaker 1>x, then we don't y. Right. Okay. You

00:34:59.390 --> 00:35:00.990
<v Speaker 1>can still have an example where we do.

00:35:03.015 --> 00:35:05.815
<v Speaker 1>You can rephrase it. I I this.

00:35:11.335 --> 00:35:12.615
<v Speaker 1>Do not clone it. And then you still

00:35:12.615 --> 00:35:15.815
<v Speaker 1>need the rule should be like an algorithm.

00:35:15.815 --> 00:35:17.015
<v Speaker 1>So you put f at the start because

00:35:17.015 --> 00:35:17.575
<v Speaker 1>you're a developer.

00:35:21.470 --> 00:35:22.350
<v Speaker 1>Uh-huh.

00:35:23.870 --> 00:35:25.150
<v Speaker 1>Some people I think

00:35:25.710 --> 00:35:28.030
<v Speaker 1>non developers often will put the thing first

00:35:28.030 --> 00:35:29.230
<v Speaker 1>and then say if.

00:35:29.630 --> 00:35:31.070
<v Speaker 1>Just match what someone said.

00:35:32.904 --> 00:35:33.545
<v Speaker 0>So

00:35:33.944 --> 00:35:34.744
<v Speaker 0>well, let's

00:35:35.145 --> 00:35:36.345
<v Speaker 0>I I just wanna make sure I get

00:35:36.345 --> 00:35:38.184
<v Speaker 0>it. I I don't know if I'm complaining

00:35:38.184 --> 00:35:40.505
<v Speaker 0>about semantics. They're not really important. Right? But

00:35:40.585 --> 00:35:42.345
<v Speaker 0>the rule here is if the target directory

00:35:42.345 --> 00:35:44.184
<v Speaker 0>doesn't exist, and then we have an example

00:35:44.184 --> 00:35:45.970
<v Speaker 0>of what happens. And then here,

00:35:46.130 --> 00:35:48.210
<v Speaker 0>we probably shouldn't say there's errors. Instead, we

00:35:48.210 --> 00:35:50.210
<v Speaker 0>should just send if the target directory exists

00:35:50.210 --> 00:35:52.050
<v Speaker 0>and it's not a GET repository. And then

00:35:52.050 --> 00:35:53.330
<v Speaker 0>down here, we're saying, okay. If it does

00:35:53.330 --> 00:35:54.930
<v Speaker 0>exist, then it has a GET repository. And

00:35:54.930 --> 00:35:56.130
<v Speaker 0>then we have other examples.

00:35:57.730 --> 00:35:59.090
<v Speaker 1>Yeah. But you don't have the rules.

00:36:01.244 --> 00:36:02.925
<v Speaker 1>If the target directory exists and it's a

00:36:02.925 --> 00:36:03.885
<v Speaker 1>Git repository,

00:36:04.125 --> 00:36:05.245
<v Speaker 1>what's the rule?

00:36:05.964 --> 00:36:08.285
<v Speaker 0>Well, that's what I was saying. Should. Here.

00:36:08.685 --> 00:36:10.365
<v Speaker 0>There's there's no rule anymore.

00:36:11.165 --> 00:36:12.365
<v Speaker 1>Yeah. It needs to be a rule.

00:36:15.519 --> 00:36:16.240
<v Speaker 0>Okay.

00:36:18.960 --> 00:36:21.359
<v Speaker 0>So as the target directory doesn't

00:36:21.359 --> 00:36:23.760
<v Speaker 0>exist Exist, we can clone.

00:36:26.319 --> 00:36:27.440
<v Speaker 0>Okay. Clone.

00:36:29.225 --> 00:36:31.065
<v Speaker 1>Maybe a bit too example. Hang on. So

00:36:31.065 --> 00:36:32.105
<v Speaker 1>what is the rule?

00:36:34.265 --> 00:36:36.505
<v Speaker 1>Maybe we can collapse them a bit. Alright.

00:36:36.505 --> 00:36:37.785
<v Speaker 1>I think I split them out in the

00:36:37.785 --> 00:36:38.425
<v Speaker 1>example mapping.

00:36:46.880 --> 00:36:48.720
<v Speaker 1>So that first one that first example is

00:36:48.720 --> 00:36:50.640
<v Speaker 1>the the sort of happy path, isn't it?

00:36:51.200 --> 00:36:52.240
<v Speaker 1>The happiest path.

00:36:55.495 --> 00:36:56.455
<v Speaker 0>Yeah. So

00:36:56.695 --> 00:36:59.015
<v Speaker 0>if if if there's no local state, then

00:36:59.015 --> 00:37:01.655
<v Speaker 0>we just we clone it, we're off. That's

00:37:01.655 --> 00:37:04.135
<v Speaker 0>it. Reconciliation starts. There's nothing to worry about.

00:37:05.575 --> 00:37:06.855
<v Speaker 0>So is that is that not in a

00:37:06.855 --> 00:37:08.615
<v Speaker 0>rule? Is this just an example of this

00:37:08.615 --> 00:37:08.935
<v Speaker 0>feature?

00:37:09.570 --> 00:37:10.610
<v Speaker 1>Yeah. Maybe.

00:37:11.490 --> 00:37:13.410
<v Speaker 1>Just take the rule out for a moment.

00:37:13.810 --> 00:37:15.250
<v Speaker 1>Maybe someone in the chat can suggest what

00:37:15.250 --> 00:37:16.130
<v Speaker 1>the rule is there.

00:37:16.770 --> 00:37:19.330
<v Speaker 1>The rule is it okay. The rule is

00:37:21.170 --> 00:37:22.690
<v Speaker 1>it clones it into the right place.

00:37:25.355 --> 00:37:27.115
<v Speaker 0>But is that not just an example? Do

00:37:27.115 --> 00:37:29.115
<v Speaker 0>do we need an explicit rule there?

00:37:29.515 --> 00:37:31.035
<v Speaker 0>I guess I'm back to this.

00:37:31.835 --> 00:37:33.195
<v Speaker 0>Maybe this is the same kind of question

00:37:33.195 --> 00:37:34.954
<v Speaker 0>that Wolfgang asked earlier. I'm not sure.

00:37:36.620 --> 00:37:39.340
<v Speaker 0>When the rules and examples map directly like

00:37:39.340 --> 00:37:41.020
<v Speaker 0>that. It should be not just to met

00:37:41.020 --> 00:37:43.020
<v Speaker 0>the rule. And then when we have multiple

00:37:43.020 --> 00:37:45.020
<v Speaker 0>examples, then maybe the rule can be enforced

00:37:45.020 --> 00:37:47.660
<v Speaker 0>and we structure the the scenarios a little

00:37:47.660 --> 00:37:48.140
<v Speaker 0>bit differently.

00:37:51.085 --> 00:37:52.684
<v Speaker 1>Yeah. I've been trying recently not to omit

00:37:52.684 --> 00:37:54.285
<v Speaker 1>the rule. I wonder if the rule is

00:37:54.285 --> 00:37:55.005
<v Speaker 1>something

00:37:55.164 --> 00:37:56.925
<v Speaker 1>for that first one, it's something like

00:38:00.365 --> 00:38:02.300
<v Speaker 1>it gets cloned into the right place.

00:38:03.020 --> 00:38:05.100
<v Speaker 0>It works. Like, oh, your software can work.

00:38:05.100 --> 00:38:06.300
<v Speaker 0>That mean, is that a real

00:38:07.100 --> 00:38:08.060
<v Speaker 0>I don't know.

00:38:08.460 --> 00:38:10.540
<v Speaker 1>If the if the

00:38:12.780 --> 00:38:15.020
<v Speaker 1>if the repository has not been synced,

00:38:15.340 --> 00:38:16.460
<v Speaker 1>we create a new folder.

00:38:24.355 --> 00:38:26.835
<v Speaker 0>Not sure how I feel about that. Okay.

00:38:27.394 --> 00:38:28.755
<v Speaker 1>Is it easy to put the examples for

00:38:28.755 --> 00:38:30.275
<v Speaker 1>this, and then we'll group them into rules?

00:38:30.275 --> 00:38:30.595
<v Speaker 0>Yeah.

00:38:31.470 --> 00:38:33.070
<v Speaker 0>Let's do the examples and then see if

00:38:33.070 --> 00:38:33.390
<v Speaker 0>we can

00:38:34.350 --> 00:38:36.270
<v Speaker 0>and then see if our rules reflect what

00:38:36.270 --> 00:38:37.950
<v Speaker 0>we had in our example. So so the

00:38:37.950 --> 00:38:39.950
<v Speaker 1>first example, happy example is, here's what happens

00:38:39.950 --> 00:38:40.830
<v Speaker 1>when you sync.

00:38:42.670 --> 00:38:43.630
<v Speaker 1>The second example,

00:38:48.515 --> 00:38:50.675
<v Speaker 1>I think these maybe these two

00:38:50.914 --> 00:38:53.394
<v Speaker 1>are about if there's something else on disk

00:38:53.394 --> 00:38:54.755
<v Speaker 1>in a colliding

00:38:54.914 --> 00:38:56.115
<v Speaker 1>folder name,

00:38:57.634 --> 00:38:58.355
<v Speaker 1>we don't clone.

00:39:02.789 --> 00:39:04.549
<v Speaker 0>Alright. Let's get the exam let's see the

00:39:04.549 --> 00:39:07.109
<v Speaker 0>sample center, and then we'll try and we'll

00:39:07.109 --> 00:39:08.710
<v Speaker 0>try and reverse engineer the rule.

00:39:09.510 --> 00:39:11.590
<v Speaker 0>What we're seeing here is a local directory

00:39:12.309 --> 00:39:14.230
<v Speaker 0>as the wrong get repository.

00:39:14.230 --> 00:39:14.789
<v Speaker 0>So

00:39:15.085 --> 00:39:17.325
<v Speaker 0>we have a dot get directory. It has

00:39:17.325 --> 00:39:18.845
<v Speaker 0>an origin configured,

00:39:19.565 --> 00:39:21.325
<v Speaker 0>but the URL does not align with what

00:39:21.325 --> 00:39:23.405
<v Speaker 0>we were expecting. So we have Yeah. I

00:39:23.405 --> 00:39:25.165
<v Speaker 1>like I like the example title you've given

00:39:25.165 --> 00:39:25.805
<v Speaker 1>there

00:39:26.765 --> 00:39:29.060
<v Speaker 1>because the detail is gonna be in the

00:39:29.060 --> 00:39:29.700
<v Speaker 1>steps.

00:39:30.260 --> 00:39:32.580
<v Speaker 1>But but we're illustrating a general case.

00:39:33.060 --> 00:39:35.140
<v Speaker 0>Bet I got something right. So

00:39:35.540 --> 00:39:37.700
<v Speaker 0>we have a directory called git sync, and

00:39:37.700 --> 00:39:39.540
<v Speaker 0>it is a git repository.

00:39:41.955 --> 00:39:44.195
<v Speaker 0>And it has Use the word but there.

00:39:45.075 --> 00:39:46.835
<v Speaker 1>So but is the same as and,

00:39:47.715 --> 00:39:49.235
<v Speaker 1>but I think it reads better.

00:39:49.795 --> 00:39:51.075
<v Speaker 1>No. No. The second one.

00:39:53.369 --> 00:39:56.810
<v Speaker 1>But But it has an

00:39:58.009 --> 00:39:59.849
<v Speaker 0>has a remote

00:40:01.130 --> 00:40:01.930
<v Speaker 0>called

00:40:02.009 --> 00:40:03.130
<v Speaker 0>origin

00:40:04.890 --> 00:40:07.690
<v Speaker 0>that points to a different

00:40:09.625 --> 00:40:10.345
<v Speaker 1>repository.

00:40:11.305 --> 00:40:13.785
<v Speaker 1>Because we're gonna name the repository in the

00:40:13.785 --> 00:40:15.704
<v Speaker 1>when step. Why don't you name the repository

00:40:15.704 --> 00:40:16.744
<v Speaker 1>in this step?

00:40:17.545 --> 00:40:19.704
<v Speaker 1>Why don't you give the explicit URL?

00:40:20.984 --> 00:40:22.265
<v Speaker 0>And it points to

00:40:22.904 --> 00:40:23.384
<v Speaker 0>parity.

00:40:25.349 --> 00:40:25.990
<v Speaker 0>Yeah.

00:40:28.150 --> 00:40:30.390
<v Speaker 0>Let's see. So just a different repository.

00:40:30.390 --> 00:40:31.750
<v Speaker 0>I thought it was maybe to some other

00:40:31.750 --> 00:40:33.829
<v Speaker 0>name. I don't wanna cause any confusion. So

00:40:34.069 --> 00:40:34.390
<v Speaker 0>Mhmm.

00:40:36.405 --> 00:40:38.005
<v Speaker 0>Alright. So we've got our given and the

00:40:38.005 --> 00:40:39.605
<v Speaker 0>but. And then

00:40:39.925 --> 00:40:40.645
<v Speaker 0>when

00:40:41.285 --> 00:40:44.165
<v Speaker 0>I sync the and then but let's just

00:40:44.165 --> 00:40:45.125
<v Speaker 0>copy this.

00:40:49.045 --> 00:40:50.245
<v Speaker 0>Oh, come on, computer.

00:40:53.760 --> 00:40:54.880
<v Speaker 0>Repository,

00:40:55.280 --> 00:40:56.000
<v Speaker 0>then

00:40:56.800 --> 00:40:58.320
<v Speaker 0>the directory

00:40:58.320 --> 00:41:00.640
<v Speaker 0>is left untouched,

00:41:02.560 --> 00:41:03.600
<v Speaker 0>and nothing is going.

00:41:06.615 --> 00:41:08.775
<v Speaker 1>Mhmm. Now they seem the same because they

00:41:08.775 --> 00:41:10.535
<v Speaker 1>got the same outcome. So it's like

00:41:13.255 --> 00:41:15.415
<v Speaker 1>there's something there that isn't a clone of

00:41:15.415 --> 00:41:16.535
<v Speaker 1>the thing we're trying to clone.

00:41:18.700 --> 00:41:20.380
<v Speaker 0>Alright. Let's get the other two, and then

00:41:20.380 --> 00:41:23.180
<v Speaker 0>then we'll Alright. We'll we'll chase the we'll

00:41:23.180 --> 00:41:24.620
<v Speaker 0>we'll try and pull that set a bit

00:41:24.620 --> 00:41:25.100
<v Speaker 0>more.

00:41:25.500 --> 00:41:27.740
<v Speaker 0>So we've got the has origin wrong URL,

00:41:27.740 --> 00:41:30.060
<v Speaker 0>has no origin. Right? So this is pretty

00:41:30.060 --> 00:41:31.100
<v Speaker 0>much gonna be

00:41:31.615 --> 00:41:32.735
<v Speaker 0>can you have a look and look at

00:41:32.735 --> 00:41:34.495
<v Speaker 0>them by names per example, or would it

00:41:34.495 --> 00:41:35.535
<v Speaker 0>be a new example?

00:41:36.495 --> 00:41:39.455
<v Speaker 1>A new example. Even though the example title

00:41:39.455 --> 00:41:40.975
<v Speaker 0>would be the same. Is that okay?

00:41:42.815 --> 00:41:43.615
<v Speaker 1>Why is it the same?

00:41:45.430 --> 00:41:47.350
<v Speaker 0>It's still the wrong get repository,

00:41:47.510 --> 00:41:49.750
<v Speaker 0>or should we be more specific for sorry.

00:41:51.750 --> 00:41:52.390
<v Speaker 1>Yeah.

00:41:52.790 --> 00:41:54.790
<v Speaker 1>Just say it doesn't have a remote. It

00:41:54.790 --> 00:41:55.910
<v Speaker 1>doesn't have an origin remote.

00:41:57.925 --> 00:42:00.405
<v Speaker 0>Okay. There actually is a local

00:42:01.125 --> 00:42:02.245
<v Speaker 0>local.

00:42:05.285 --> 00:42:05.925
<v Speaker 0>Okay.

00:42:06.484 --> 00:42:09.045
<v Speaker 0>Let's I'll fix this first. So we have

00:42:09.045 --> 00:42:10.964
<v Speaker 0>a the retro call gets sent as a

00:42:10.964 --> 00:42:11.925
<v Speaker 0>git repository,

00:42:12.165 --> 00:42:12.325
<v Speaker 0>but

00:42:13.070 --> 00:42:17.310
<v Speaker 0>it has no remote call It did. Origin.

00:42:20.670 --> 00:42:21.310
<v Speaker 1>Yep.

00:42:22.030 --> 00:42:24.430
<v Speaker 1>So the example is local directory

00:42:24.830 --> 00:42:27.070
<v Speaker 1>with raw with no origin remote.

00:42:28.934 --> 00:42:31.095
<v Speaker 1>You don't have an Example title isn't mandatory,

00:42:31.095 --> 00:42:31.815
<v Speaker 1>by the way.

00:42:32.535 --> 00:42:33.575
<v Speaker 0>Alright. Okay.

00:42:34.375 --> 00:42:36.615
<v Speaker 0>Would I keep calling this local directory or

00:42:36.615 --> 00:42:37.815
<v Speaker 0>would I say local

00:42:37.974 --> 00:42:38.694
<v Speaker 0>get

00:42:39.430 --> 00:42:40.310
<v Speaker 0>repository

00:42:40.310 --> 00:42:43.190
<v Speaker 0>has no like, does that make it more

00:42:43.190 --> 00:42:44.550
<v Speaker 0>correct? The local

00:42:44.870 --> 00:42:46.390
<v Speaker 0>GET repository

00:42:46.710 --> 00:42:49.510
<v Speaker 0>has no remote Local clone, local checkout.

00:42:50.230 --> 00:42:51.030
<v Speaker 0>Yeah. Local

00:42:51.605 --> 00:42:53.685
<v Speaker 0>local clone. Yeah. That makes sense to me.

00:42:56.484 --> 00:42:58.645
<v Speaker 0>Local clone has no remote And then local

00:42:58.964 --> 00:43:00.965
<v Speaker 1>yes. This is clone in the one above.

00:43:01.365 --> 00:43:03.125
<v Speaker 0>Yeah. So local clone

00:43:03.204 --> 00:43:05.045
<v Speaker 0>has incorrect

00:43:05.605 --> 00:43:07.600
<v Speaker 0>remote for origin.

00:43:07.600 --> 00:43:08.400
<v Speaker 0>And remote

00:43:08.720 --> 00:43:10.320
<v Speaker 0>incorrect URL for

00:43:11.520 --> 00:43:12.480
<v Speaker 0>origin.

00:43:13.840 --> 00:43:14.640
<v Speaker 1>Yeah. Yeah.

00:43:16.800 --> 00:43:18.720
<v Speaker 0>Okay. Yeah. That that So I think they

00:43:18.720 --> 00:43:20.400
<v Speaker 1>grouped together now, don't they? So

00:43:20.945 --> 00:43:22.545
<v Speaker 1>You wanna keep going. Let's keep going. Let's

00:43:22.545 --> 00:43:24.385
<v Speaker 1>keep going. Well, the last one is that

00:43:24.385 --> 00:43:27.025
<v Speaker 0>it works, the happy path. So do we

00:43:27.825 --> 00:43:29.665
<v Speaker 0>I think you're right and that we've said,

00:43:29.665 --> 00:43:31.345
<v Speaker 0>okay. These are very, very similar. This is

00:43:31.345 --> 00:43:32.705
<v Speaker 1>the rule. It's a different happy path.

00:43:34.980 --> 00:43:36.740
<v Speaker 1>It's a different happy path. Right? It's a

00:43:36.740 --> 00:43:38.500
<v Speaker 1>happy path where there is a local checkout,

00:43:38.500 --> 00:43:39.700
<v Speaker 1>and we're gonna skip.

00:43:40.500 --> 00:43:42.660
<v Speaker 1>So it's a different outcome. Different context and

00:43:42.660 --> 00:43:43.620
<v Speaker 1>a different outcome.

00:43:44.020 --> 00:43:47.380
<v Speaker 0>So local colon is the correct

00:43:47.755 --> 00:43:48.715
<v Speaker 0>is

00:43:51.675 --> 00:43:53.275
<v Speaker 0>has the correct

00:43:53.275 --> 00:43:54.875
<v Speaker 0>origin remote.

00:43:55.755 --> 00:43:58.795
<v Speaker 0>But given I'm just gonna Yeah. So maybe

00:43:58.795 --> 00:44:00.635
<v Speaker 1>it's not a happy path. It's that with

00:44:03.200 --> 00:44:04.880
<v Speaker 0>Okay. I'm gonna have this directory as a

00:44:04.880 --> 00:44:05.920
<v Speaker 0>good repository,

00:44:06.080 --> 00:44:06.640
<v Speaker 0>and

00:44:07.920 --> 00:44:08.960
<v Speaker 0>it has

00:44:10.560 --> 00:44:11.760
<v Speaker 0>remote.

00:44:13.200 --> 00:44:15.360
<v Speaker 1>Hold on. Is it also completing from the

00:44:15.360 --> 00:44:15.760
<v Speaker 1>other thing?

00:44:18.815 --> 00:44:21.055
<v Speaker 0>With this being on the end, the Depending

00:44:21.055 --> 00:44:22.015
<v Speaker 1>on your idea.

00:44:23.055 --> 00:44:23.775
<v Speaker 1>Well,

00:44:25.055 --> 00:44:26.735
<v Speaker 1>if you look at line 34,

00:44:28.015 --> 00:44:29.695
<v Speaker 1>we've already phrased this a different way.

00:44:33.640 --> 00:44:34.360
<v Speaker 1>Like,

00:44:34.520 --> 00:44:35.800
<v Speaker 1>that structure

00:44:35.800 --> 00:44:37.560
<v Speaker 1>is something we can use again

00:44:37.720 --> 00:44:40.040
<v Speaker 1>to be consistent with how we Yeah. To

00:44:40.040 --> 00:44:40.840
<v Speaker 0>change the repository.

00:44:41.640 --> 00:44:43.400
<v Speaker 0>Because I don't call origin points there. Yeah.

00:44:43.400 --> 00:44:43.880
<v Speaker 0>You're right.

00:44:44.835 --> 00:44:47.235
<v Speaker 0>So then when I sync those repository

00:44:49.155 --> 00:44:51.715
<v Speaker 1>and You need to change the URL on

00:44:51.715 --> 00:44:52.355
<v Speaker 1>on

00:44:52.595 --> 00:44:53.555
<v Speaker 1>the built.

00:44:54.355 --> 00:44:55.235
<v Speaker 0>Right. Thank you.

00:44:56.410 --> 00:44:58.810
<v Speaker 0>Then it colon repository.

00:45:01.610 --> 00:45:02.730
<v Speaker 0>No. No. No. It doesn't used

00:45:03.050 --> 00:45:04.970
<v Speaker 0>up here. No. No. It doesn't.

00:45:06.090 --> 00:45:07.290
<v Speaker 1>It doesn't come in repository.

00:45:08.664 --> 00:45:10.825
<v Speaker 0>Don't tell me how my software works. Right?

00:45:11.065 --> 00:45:12.345
<v Speaker 0>Okay. You're right. It

00:45:13.385 --> 00:45:14.505
<v Speaker 0>then it

00:45:18.184 --> 00:45:19.865
<v Speaker 0>reconciles. I don't know what that means yet.

00:45:23.000 --> 00:45:25.080
<v Speaker 1>Okay. And the but in this one is

00:45:25.080 --> 00:45:27.320
<v Speaker 1>an and because it's not it's not surprising.

00:45:28.040 --> 00:45:29.400
<v Speaker 1>So I tend to use but when it's

00:45:29.400 --> 00:45:31.320
<v Speaker 1>like, here's the thing that's gone wrong.

00:45:32.840 --> 00:45:34.360
<v Speaker 0>Yeah. Highlight. Is

00:45:35.080 --> 00:45:35.960
<v Speaker 1>this this but?

00:45:38.795 --> 00:45:39.675
<v Speaker 1>Now

00:45:39.994 --> 00:45:41.355
<v Speaker 1>let's refactor. Does

00:45:41.835 --> 00:45:43.115
<v Speaker 1>we do we need to say

00:45:43.355 --> 00:45:45.275
<v Speaker 1>it's a Git repository if it has a

00:45:45.275 --> 00:45:45.994
<v Speaker 1>remote

00:45:48.714 --> 00:45:49.994
<v Speaker 1>for a reasonable reader?

00:45:54.260 --> 00:45:56.500
<v Speaker 0>So for me Could we skip it? Maybe

00:45:56.500 --> 00:45:58.100
<v Speaker 0>this is the mistake I'm making.

00:45:58.820 --> 00:45:59.540
<v Speaker 0>But

00:45:59.780 --> 00:46:01.940
<v Speaker 0>Zest to me is something

00:46:02.580 --> 00:46:05.714
<v Speaker 0>I implement as a step and the codes

00:46:05.714 --> 00:46:07.555
<v Speaker 0>test they say that says I need to

00:46:07.555 --> 00:46:08.835
<v Speaker 0>create this I need to make this a

00:46:08.835 --> 00:46:10.515
<v Speaker 0>Git repository. Yeah. Yeah.

00:46:11.795 --> 00:46:13.234
<v Speaker 1>But you could always do it manually when

00:46:13.234 --> 00:46:14.835
<v Speaker 1>you're setting up the origin, couldn't you?

00:46:15.954 --> 00:46:16.194
<v Speaker 1>You know?

00:46:17.810 --> 00:46:20.370
<v Speaker 0>K. So does that mean first we move

00:46:20.370 --> 00:46:22.610
<v Speaker 0>move So so decide on readability

00:46:22.610 --> 00:46:23.410
<v Speaker 1>first.

00:46:24.690 --> 00:46:26.930
<v Speaker 0>Local clone called get synced. That's the language

00:46:26.930 --> 00:46:27.890
<v Speaker 0>we used earlier.

00:46:30.174 --> 00:46:31.455
<v Speaker 1>That's nice, isn't it?

00:46:32.894 --> 00:46:33.855
<v Speaker 0>Here.

00:46:34.575 --> 00:46:35.455
<v Speaker 0>Have a

00:46:35.694 --> 00:46:37.855
<v Speaker 0>local colon. Call get sync.

00:46:39.615 --> 00:46:41.855
<v Speaker 1>It explained if it's the wrong one? A

00:46:41.855 --> 00:46:44.095
<v Speaker 0>directory and a local colon. So

00:46:45.869 --> 00:46:47.950
<v Speaker 1>Which makes it kinda makes sense.

00:46:48.990 --> 00:46:50.109
<v Speaker 0>I I think kinda get

00:46:51.470 --> 00:46:52.109
<v Speaker 1>I

00:46:53.390 --> 00:46:56.349
<v Speaker 0>I I like local clone. I think that's

00:46:56.349 --> 00:46:57.869
<v Speaker 0>in most of the examples that we have

00:46:57.869 --> 00:46:59.664
<v Speaker 0>here. It makes sense to me. I know

00:46:59.664 --> 00:47:00.944
<v Speaker 0>that it's a get repository. I know that

00:47:00.944 --> 00:47:02.305
<v Speaker 0>I have an orange I have a remote,

00:47:02.305 --> 00:47:04.704
<v Speaker 0>and I can inspect it. So yeah. I

00:47:04.704 --> 00:47:06.464
<v Speaker 0>think that language works well.

00:47:06.865 --> 00:47:08.224
<v Speaker 1>So so just when we got to that

00:47:08.224 --> 00:47:09.105
<v Speaker 1>last example,

00:47:09.984 --> 00:47:13.184
<v Speaker 1>it's like and the system carries on to

00:47:13.184 --> 00:47:13.904
<v Speaker 1>the next step

00:47:14.430 --> 00:47:15.630
<v Speaker 1>to reconciliation.

00:47:15.630 --> 00:47:16.270
<v Speaker 1>Right?

00:47:16.670 --> 00:47:18.829
<v Speaker 1>Which which made me realize we haven't really

00:47:18.829 --> 00:47:20.829
<v Speaker 1>captured in the previous ones that we bail

00:47:20.829 --> 00:47:21.470
<v Speaker 1>out.

00:47:23.710 --> 00:47:24.190
<v Speaker 0>Where

00:47:25.710 --> 00:47:27.790
<v Speaker 1>we said nothing is is left untouched and

00:47:27.790 --> 00:47:29.309
<v Speaker 1>nothing is cloned, we need to sort of

00:47:29.309 --> 00:47:29.950
<v Speaker 1>say

00:47:31.815 --> 00:47:33.095
<v Speaker 1>we stop.

00:47:34.855 --> 00:47:37.735
<v Speaker 1>And and and the the clone fails or,

00:47:37.735 --> 00:47:40.375
<v Speaker 1>you know, some what whatever you think sounds

00:47:40.375 --> 00:47:42.295
<v Speaker 1>best that makes it clear that it doesn't

00:47:42.295 --> 00:47:44.055
<v Speaker 1>then proceed to start reconciling that.

00:47:46.750 --> 00:47:47.950
<v Speaker 0>I mean, we don't

00:47:48.109 --> 00:47:50.670
<v Speaker 0>do anything here except say it's cloned. We

00:47:50.670 --> 00:47:52.190
<v Speaker 0>don't really mention.

00:47:52.670 --> 00:47:53.310
<v Speaker 0>So

00:47:57.105 --> 00:47:59.345
<v Speaker 0>Maybe maybe that's not important.

00:47:59.585 --> 00:48:01.185
<v Speaker 0>Maybe it's just the director is left on

00:48:01.185 --> 00:48:01.745
<v Speaker 0>top.

00:48:03.825 --> 00:48:05.505
<v Speaker 1>Yeah. I feel like we need something that

00:48:05.505 --> 00:48:07.585
<v Speaker 1>captures the fact that it's not an exception,

00:48:07.585 --> 00:48:09.025
<v Speaker 1>is it? But if it's an error comes

00:48:09.025 --> 00:48:10.145
<v Speaker 1>back

00:48:11.520 --> 00:48:13.440
<v Speaker 1>or the CLI, you know, exits.

00:48:16.640 --> 00:48:18.800
<v Speaker 0>Yeah. I mean, that's one of those weird

00:48:18.800 --> 00:48:20.560
<v Speaker 0>system y things. I never know how to

00:48:20.560 --> 00:48:22.240
<v Speaker 0>create a phrase

00:48:22.320 --> 00:48:24.240
<v Speaker 0>when it comes to these scenarios.

00:48:25.200 --> 00:48:27.425
<v Speaker 0>Well, I mean, do you have an idea?

00:48:27.425 --> 00:48:28.545
<v Speaker 0>Are you trying to tease something out of

00:48:28.545 --> 00:48:30.545
<v Speaker 0>me here or no? Okay.

00:48:30.865 --> 00:48:31.185
<v Speaker 0>Then

00:48:31.825 --> 00:48:33.985
<v Speaker 1>And an error happened. And and and an

00:48:33.985 --> 00:48:35.105
<v Speaker 1>error is something

00:48:35.745 --> 00:48:37.905
<v Speaker 1>like that. Do it bad yeah. Keep puts

00:48:37.905 --> 00:48:38.465
<v Speaker 1>me bad in.

00:48:39.130 --> 00:48:39.690
<v Speaker 1>And

00:48:40.170 --> 00:48:41.610
<v Speaker 1>And we'll fix it later.

00:48:43.690 --> 00:48:44.970
<v Speaker 1>The clone fails?

00:48:45.609 --> 00:48:47.370
<v Speaker 1>What's this bit called? Bootstrap?

00:48:47.930 --> 00:48:50.410
<v Speaker 0>Yeah. There we go. Bootstrap. There is.

00:48:55.444 --> 00:48:58.165
<v Speaker 0>I think it's it's header.

00:49:00.884 --> 00:49:01.285
<v Speaker 0>Yep.

00:49:04.100 --> 00:49:06.100
<v Speaker 1>Yeah. And then put that in the places

00:49:06.100 --> 00:49:06.420
<v Speaker 1>that

00:49:12.740 --> 00:49:14.340
<v Speaker 1>it's good to try and take stuff out.

00:49:14.340 --> 00:49:15.860
<v Speaker 1>Take out the nothing is cloned.

00:49:20.315 --> 00:49:21.035
<v Speaker 1>Then

00:49:21.275 --> 00:49:24.155
<v Speaker 1>what's the then? Nothing is cloned, maybe. Bootstrap.

00:49:24.475 --> 00:49:25.275
<v Speaker 0>Complete.

00:49:29.595 --> 00:49:30.955
<v Speaker 0>What we're saying here is that there are

00:49:30.955 --> 00:49:32.635
<v Speaker 0>two states of bootstrapping.

00:49:32.635 --> 00:49:35.035
<v Speaker 0>Either we're gonna complete or we're gonna enter.

00:49:35.035 --> 00:49:37.540
<v Speaker 0>That, to me, is a very definitive, hey.

00:49:37.540 --> 00:49:40.580
<v Speaker 0>I've got a some optional return type here.

00:49:40.900 --> 00:49:42.820
<v Speaker 1>Yeah. Okay. So put that in the

00:49:44.099 --> 00:49:45.380
<v Speaker 1>other happy path as well.

00:49:54.195 --> 00:49:54.915
<v Speaker 1>Yeah.

00:49:56.035 --> 00:49:57.315
<v Speaker 1>And on that last one, let's use the

00:49:57.315 --> 00:49:58.355
<v Speaker 1>word already

00:49:58.355 --> 00:49:59.235
<v Speaker 1>in there

00:49:59.715 --> 00:50:01.075
<v Speaker 1>just for clarity.

00:50:01.075 --> 00:50:02.435
<v Speaker 1>So scroll down again.

00:50:02.994 --> 00:50:04.115
<v Speaker 1>Make you ping around.

00:50:05.790 --> 00:50:06.750
<v Speaker 0>Here?

00:50:08.030 --> 00:50:10.030
<v Speaker 1>And it already has a remote

00:50:10.430 --> 00:50:12.750
<v Speaker 1>on on the yeah. There.

00:50:14.670 --> 00:50:16.110
<v Speaker 1>Something like that. You know?

00:50:16.910 --> 00:50:18.590
<v Speaker 0>But isn't that what we define with the

00:50:18.750 --> 00:50:19.710
<v Speaker 0>I have a local clone.

00:50:20.595 --> 00:50:21.475
<v Speaker 0>Not

00:50:22.355 --> 00:50:24.355
<v Speaker 0>you know, unfair from that. Okay.

00:50:24.835 --> 00:50:26.435
<v Speaker 1>Yeah. Put it in the example title then

00:50:26.435 --> 00:50:27.155
<v Speaker 1>maybe.

00:50:28.595 --> 00:50:31.075
<v Speaker 1>Already local clone already has the correct origin.

00:50:34.900 --> 00:50:35.620
<v Speaker 0>I I don't

00:50:36.820 --> 00:50:38.500
<v Speaker 0>can you try and articulate the value of

00:50:38.500 --> 00:50:41.220
<v Speaker 0>that already? It's over what we have. Yeah.

00:50:41.220 --> 00:50:42.500
<v Speaker 1>If because

00:50:44.180 --> 00:50:47.215
<v Speaker 1>no. Okay. Leave it out. I'm easy. So

00:50:48.494 --> 00:50:49.935
<v Speaker 1>let's see if can put some rules in.

00:50:49.935 --> 00:50:52.575
<v Speaker 1>It seems like there's a rule for the

00:50:53.535 --> 00:50:55.375
<v Speaker 1>second and third the

00:50:55.375 --> 00:50:57.455
<v Speaker 1>second and third ones. These ones. Yeah.

00:50:59.695 --> 00:51:01.775
<v Speaker 0>The rule is if we have a local

00:51:02.700 --> 00:51:03.340
<v Speaker 1>Like

00:51:04.300 --> 00:51:04.780
<v Speaker 1>existing

00:51:05.260 --> 00:51:06.060
<v Speaker 1>local

00:51:06.619 --> 00:51:08.380
<v Speaker 1>clone has to

00:51:09.020 --> 00:51:10.140
<v Speaker 1>have the correct

00:51:12.860 --> 00:51:13.660
<v Speaker 0>the

00:51:15.100 --> 00:51:15.420
<v Speaker 0>or

00:51:16.925 --> 00:51:17.805
<v Speaker 0>isn't

00:51:17.805 --> 00:51:18.525
<v Speaker 0>correct.

00:51:18.925 --> 00:51:20.045
<v Speaker 0>Is that a rule?

00:51:21.085 --> 00:51:23.405
<v Speaker 0>No. It's not a rule yet. Then header.

00:51:23.805 --> 00:51:24.765
<v Speaker 0>Is a rule?

00:51:26.285 --> 00:51:27.565
<v Speaker 1>Yeah. Or you could put it like, if

00:51:27.565 --> 00:51:29.405
<v Speaker 1>we have a local clone, the rim the

00:51:29.405 --> 00:51:30.525
<v Speaker 1>remote has to be correct.

00:51:31.869 --> 00:51:33.390
<v Speaker 0>Oh, okay. Yeah. If we have If you

00:51:33.390 --> 00:51:34.990
<v Speaker 1>already have a local clone, then the remote

00:51:34.990 --> 00:51:37.230
<v Speaker 1>has to be The origin

00:51:37.230 --> 00:51:38.030
<v Speaker 0>remote

00:51:38.030 --> 00:51:39.390
<v Speaker 0>must be

00:51:39.869 --> 00:51:40.830
<v Speaker 0>correct.

00:51:41.470 --> 00:51:42.990
<v Speaker 1>Yeah. Sounds good. Means

00:51:44.045 --> 00:51:46.925
<v Speaker 0>that comes in. And now the indentation here,

00:51:46.925 --> 00:51:49.325
<v Speaker 0>does that does should this example move above

00:51:49.325 --> 00:51:50.445
<v Speaker 0>the rule? Does

00:51:51.085 --> 00:51:54.685
<v Speaker 1>So once you start adding rules, the indentation

00:51:54.685 --> 00:51:55.325
<v Speaker 1>doesn't matter.

00:51:57.080 --> 00:51:58.600
<v Speaker 1>So if you want that to not be

00:51:58.600 --> 00:52:00.120
<v Speaker 1>in the rule, you should move it up.

00:52:00.120 --> 00:52:01.720
<v Speaker 1>But I think maybe it's in the rule.

00:52:05.320 --> 00:52:06.600
<v Speaker 0>Okay. Yeah.

00:52:07.720 --> 00:52:10.225
<v Speaker 1>This is all about local clones.

00:52:10.305 --> 00:52:11.985
<v Speaker 0>Yeah. And this is just the correct clone.

00:52:11.985 --> 00:52:14.145
<v Speaker 0>You're right. Okay. And what so what was

00:52:14.305 --> 00:52:16.465
<v Speaker 1>what are the rule less ones up top?

00:52:17.105 --> 00:52:20.705
<v Speaker 0>No local directory and not a GET repository.

00:52:27.120 --> 00:52:29.040
<v Speaker 1>So the rule is don't clone if

00:52:30.720 --> 00:52:32.800
<v Speaker 1>don't clone if there's a clash with an

00:52:32.800 --> 00:52:34.480
<v Speaker 1>existing non GET directory.

00:52:36.995 --> 00:52:38.355
<v Speaker 0>Do we need a rule for the first

00:52:38.355 --> 00:52:38.915
<v Speaker 0>two?

00:52:39.155 --> 00:52:40.275
<v Speaker 1>You don't have to.

00:52:40.755 --> 00:52:42.595
<v Speaker 1>They're just sort of useful sometimes

00:52:42.915 --> 00:52:44.995
<v Speaker 1>because you got to if you think it's

00:52:44.995 --> 00:52:45.635
<v Speaker 1>obvious,

00:52:45.955 --> 00:52:48.675
<v Speaker 1>you you you you could maybe go on

00:52:48.675 --> 00:52:50.275
<v Speaker 1>the side of leaving out the example title

00:52:50.275 --> 00:52:51.540
<v Speaker 1>and putting the rule title in if you

00:52:51.540 --> 00:52:53.140
<v Speaker 1>wanted to make sure you already have the

00:52:53.140 --> 00:52:54.740
<v Speaker 1>rule always have a rule.

00:52:55.300 --> 00:52:57.780
<v Speaker 0>I think what is kinda making sense to

00:52:57.780 --> 00:52:58.740
<v Speaker 0>me is

00:52:59.060 --> 00:53:00.340
<v Speaker 0>the first two

00:53:01.460 --> 00:53:03.140
<v Speaker 0>well, the first one's what I would expect

00:53:03.140 --> 00:53:04.820
<v Speaker 0>to happen most of the time. The second

00:53:04.820 --> 00:53:06.340
<v Speaker 0>one is a very explicit

00:53:06.785 --> 00:53:09.025
<v Speaker 0>one rule, like, hey. That's a directory. It's

00:53:09.025 --> 00:53:10.385
<v Speaker 0>not gonna be positive. There's no ifs and

00:53:10.385 --> 00:53:12.465
<v Speaker 0>buts there. And then the third one, I

00:53:12.465 --> 00:53:14.465
<v Speaker 0>feel it should have a rule because, yeah,

00:53:14.465 --> 00:53:17.105
<v Speaker 0>they're they're different forks in that code path.

00:53:17.105 --> 00:53:18.465
<v Speaker 0>Like, it's like, hey. We actually need to

00:53:18.465 --> 00:53:19.585
<v Speaker 0>check a whole bunch of things for this

00:53:19.585 --> 00:53:21.980
<v Speaker 0>rule to be true. So So so think

00:53:21.980 --> 00:53:23.819
<v Speaker 1>about it this way. This think about two

00:53:23.819 --> 00:53:25.180
<v Speaker 1>different types of rules.

00:53:26.460 --> 00:53:28.540
<v Speaker 1>Some rules are constraints and things you're not

00:53:28.540 --> 00:53:30.540
<v Speaker 1>allowed to do, and that's what we've got

00:53:30.540 --> 00:53:32.140
<v Speaker 1>so far in our rule. It's like,

00:53:32.859 --> 00:53:35.135
<v Speaker 1>you're not allowed to do. Here's here's something

00:53:35.135 --> 00:53:36.655
<v Speaker 1>that would cause a problem. So we've got

00:53:36.655 --> 00:53:38.255
<v Speaker 1>two examples of the problem and then the

00:53:38.255 --> 00:53:40.335
<v Speaker 1>sort of happy version of how we resolve

00:53:40.335 --> 00:53:42.415
<v Speaker 1>it. Mhmm. But there's another type of rule,

00:53:42.415 --> 00:53:44.415
<v Speaker 1>which is like an enabling thing. What how

00:53:44.415 --> 00:53:45.535
<v Speaker 1>is the thing actually operating?

00:53:46.110 --> 00:53:47.870
<v Speaker 1>So that that first happy path, what are

00:53:47.870 --> 00:53:48.990
<v Speaker 1>the rules behind it?

00:53:49.230 --> 00:53:50.430
<v Speaker 1>Is that we clone

00:53:50.750 --> 00:53:53.310
<v Speaker 1>we'll clone the remote repository to local disk

00:53:58.270 --> 00:53:59.150
<v Speaker 1>if we can.

00:53:59.934 --> 00:54:01.615
<v Speaker 1>So we could write a rule like that.

00:54:02.575 --> 00:54:04.255
<v Speaker 1>We could those two examples could go in

00:54:04.255 --> 00:54:05.295
<v Speaker 1>a rule. It's like,

00:54:06.174 --> 00:54:06.655
<v Speaker 1>well,

00:54:07.135 --> 00:54:08.654
<v Speaker 1>part of the beach trapping is we clone

00:54:08.654 --> 00:54:09.535
<v Speaker 1>the repository.

00:54:10.095 --> 00:54:11.535
<v Speaker 1>What do we have in the mirror board?

00:54:15.619 --> 00:54:17.299
<v Speaker 0>I had an idea there. I'll I'll go

00:54:17.299 --> 00:54:18.660
<v Speaker 0>to the mirror board in a second. So

00:54:18.660 --> 00:54:20.579
<v Speaker 0>if Yeah. Go on. As the

00:54:22.819 --> 00:54:25.220
<v Speaker 0>what if we what's the words I'm looking

00:54:25.220 --> 00:54:25.780
<v Speaker 0>for? I'm failing.

00:54:26.755 --> 00:54:28.915
<v Speaker 0>As a rule to specific here, as a

00:54:28.915 --> 00:54:29.715
<v Speaker 0>rule

00:54:30.595 --> 00:54:31.315
<v Speaker 0>that

00:54:31.555 --> 00:54:34.675
<v Speaker 0>if something exists on the desk, we won't

00:54:34.675 --> 00:54:35.715
<v Speaker 0>destroy it.

00:54:37.315 --> 00:54:39.234
<v Speaker 0>Is that a rule that then captures this

00:54:39.234 --> 00:54:42.210
<v Speaker 0>one too rather than this very specific rule

00:54:42.210 --> 00:54:43.810
<v Speaker 0>about the remote being great?

00:54:45.890 --> 00:54:47.330
<v Speaker 1>Yeah. Yeah. That's a good rule for us

00:54:47.330 --> 00:54:49.330
<v Speaker 1>first two, is that we're gonna preserve any

00:54:49.330 --> 00:54:50.370
<v Speaker 1>colliding

00:54:51.090 --> 00:54:51.730
<v Speaker 1>folders.

00:54:52.385 --> 00:54:53.985
<v Speaker 0>So as a rule,

00:54:54.865 --> 00:54:57.265
<v Speaker 0>I'm gonna put Again, the the rules kind

00:54:57.265 --> 00:54:58.464
<v Speaker 1>of the rules kind of

00:55:02.545 --> 00:55:03.265
<v Speaker 1>the

00:55:03.905 --> 00:55:05.585
<v Speaker 1>the things you call a business rule and

00:55:05.585 --> 00:55:07.105
<v Speaker 1>the things you just write as part of

00:55:07.105 --> 00:55:10.180
<v Speaker 1>the software depend on the the business

00:55:11.460 --> 00:55:12.660
<v Speaker 1>priorities, don't they?

00:55:13.300 --> 00:55:15.060
<v Speaker 1>So you're gonna write this whole system.

00:55:15.300 --> 00:55:17.460
<v Speaker 1>Is it a business priority that it doesn't

00:55:17.460 --> 00:55:20.475
<v Speaker 1>clobber the local data? Maybe it is. You

00:55:20.475 --> 00:55:21.835
<v Speaker 1>only really find that out in the real

00:55:21.835 --> 00:55:23.515
<v Speaker 1>conversations with stakeholders.

00:55:24.155 --> 00:55:26.235
<v Speaker 0>I think that's what what I'm thinking. Was

00:55:26.235 --> 00:55:28.875
<v Speaker 0>like, the reason I want this documented is

00:55:28.875 --> 00:55:30.475
<v Speaker 0>I I don't ever wanna be in a

00:55:30.475 --> 00:55:32.075
<v Speaker 0>position where we just where someone runs us

00:55:32.075 --> 00:55:33.755
<v Speaker 0>and we destroy something they have locally.

00:55:34.210 --> 00:55:36.050
<v Speaker 0>Well, the rule is if there's a local

00:55:36.050 --> 00:55:38.290
<v Speaker 0>directory, we're not we're not gonna touch it.

00:55:38.290 --> 00:55:40.530
<v Speaker 0>We're just gonna leave it unless there it

00:55:40.530 --> 00:55:41.810
<v Speaker 0>fits the criteria

00:55:41.970 --> 00:55:43.170
<v Speaker 0>which we have here.

00:55:43.730 --> 00:55:45.570
<v Speaker 0>Yeah. Maybe there's a Think of the rules

00:55:45.570 --> 00:55:45.970
<v Speaker 1>like

00:55:46.805 --> 00:55:49.445
<v Speaker 1>the rules are kind of like acceptance criteria.

00:55:50.645 --> 00:55:52.165
<v Speaker 1>These are the these are the things that

00:55:52.165 --> 00:55:53.525
<v Speaker 1>if we implement them, the business is gonna

00:55:53.525 --> 00:55:55.765
<v Speaker 1>be happy. Business is you in this case.

00:55:56.965 --> 00:55:58.965
<v Speaker 1>But they're the things that will make the

00:55:58.965 --> 00:56:00.405
<v Speaker 1>system correct if they're implemented.

00:56:00.900 --> 00:56:02.900
<v Speaker 1>There's loads of other stuff. There'll be much

00:56:02.900 --> 00:56:03.540
<v Speaker 1>smaller

00:56:03.700 --> 00:56:05.220
<v Speaker 1>decisions we have to make about how it

00:56:05.220 --> 00:56:05.859
<v Speaker 1>operates.

00:56:06.740 --> 00:56:08.420
<v Speaker 1>But it's like the reason we're writing these

00:56:08.420 --> 00:56:10.180
<v Speaker 1>in this document is these are the ones

00:56:10.180 --> 00:56:12.500
<v Speaker 1>that are at they're at that business tech

00:56:12.500 --> 00:56:14.660
<v Speaker 1>engagement level where non tech people have to

00:56:14.660 --> 00:56:15.859
<v Speaker 1>be able to see what the system does.

00:56:18.494 --> 00:56:19.215
<v Speaker 0>Okay.

00:56:19.615 --> 00:56:22.255
<v Speaker 1>We yeah. If if a local directory exists

00:56:22.335 --> 00:56:24.095
<v Speaker 1>with the colliding name

00:56:25.135 --> 00:56:26.255
<v Speaker 1>or, you know,

00:56:28.655 --> 00:56:30.335
<v Speaker 1>we on the side of

00:56:30.974 --> 00:56:31.535
<v Speaker 1>safety.

00:56:37.270 --> 00:56:38.870
<v Speaker 0>Every local directory

00:56:39.350 --> 00:56:40.150
<v Speaker 0>exists,

00:56:42.310 --> 00:56:43.830
<v Speaker 0>we must

00:56:45.110 --> 00:56:46.950
<v Speaker 0>confirm

00:56:48.095 --> 00:56:50.095
<v Speaker 0>correct configuration or something.

00:56:56.654 --> 00:56:57.855
<v Speaker 1>What

00:56:59.295 --> 00:57:00.414
<v Speaker 1>what I heard you say was that it's

00:57:00.414 --> 00:57:02.575
<v Speaker 1>really important to preserve the existing data.

00:57:04.550 --> 00:57:06.630
<v Speaker 1>Preserve it and show an error.

00:57:06.869 --> 00:57:08.869
<v Speaker 1>But we fail early. You know, one of

00:57:08.869 --> 00:57:09.670
<v Speaker 1>these things.

00:57:12.710 --> 00:57:13.590
<v Speaker 1>We don't proceed.

00:57:18.875 --> 00:57:20.715
<v Speaker 0>Yeah. I think I think there's something there.

00:57:20.715 --> 00:57:22.315
<v Speaker 0>I'm not really sure what, though.

00:57:32.470 --> 00:57:34.070
<v Speaker 0>Let's put this side by side for a

00:57:34.070 --> 00:57:35.190
<v Speaker 0>moment. So

00:57:36.150 --> 00:57:37.670
<v Speaker 0>I think where my head is trying to

00:57:37.670 --> 00:57:39.750
<v Speaker 0>guide me here is that these can both

00:57:39.750 --> 00:57:42.070
<v Speaker 0>be articulated as a single rule with these

00:57:42.070 --> 00:57:44.070
<v Speaker 0>all being examples of how to proceed.

00:57:45.125 --> 00:57:46.805
<v Speaker 0>And what the rule I'm trying to explain

00:57:46.805 --> 00:57:48.245
<v Speaker 0>is, like, okay.

00:57:48.964 --> 00:57:50.805
<v Speaker 0>If we have a local

00:57:53.205 --> 00:57:54.165
<v Speaker 0>colliding

00:57:54.484 --> 00:57:55.365
<v Speaker 0>directory

00:57:56.645 --> 00:57:59.285
<v Speaker 0>and

00:57:58.370 --> 00:57:59.170
<v Speaker 0>additional

00:57:59.170 --> 00:58:01.090
<v Speaker 0>checks must be made before

00:58:01.650 --> 00:58:02.610
<v Speaker 0>writing before

00:58:02.930 --> 00:58:05.170
<v Speaker 0>it's taking control of the the the word

00:58:06.050 --> 00:58:07.090
<v Speaker 0>the thing. So

00:58:07.810 --> 00:58:10.050
<v Speaker 1>If you have a local existing directory,

00:58:10.050 --> 00:58:12.370
<v Speaker 1>it must be a correct Git clone.

00:58:14.335 --> 00:58:15.295
<v Speaker 1>It must already be

00:58:18.175 --> 00:58:18.975
<v Speaker 1>but

00:58:19.295 --> 00:58:20.975
<v Speaker 1>then I I I would probably try and

00:58:20.975 --> 00:58:22.575
<v Speaker 1>break it out into more rules. I think

00:58:22.575 --> 00:58:24.495
<v Speaker 1>your instinct is to collate more than mine

00:58:24.495 --> 00:58:25.055
<v Speaker 1>is.

00:58:26.495 --> 00:58:28.735
<v Speaker 0>Right. Let I guess it's not

00:58:30.710 --> 00:58:32.630
<v Speaker 0>not really that important. Like,

00:58:33.190 --> 00:58:34.790
<v Speaker 0>guess that's just another thing I've got in

00:58:34.790 --> 00:58:36.950
<v Speaker 0>my head. Right? These these these are 11

00:58:36.950 --> 00:58:38.710
<v Speaker 0>documents. These can change over time. In fact,

00:58:38.710 --> 00:58:40.310
<v Speaker 0>the the title of this episode was 11

00:58:40.310 --> 00:58:43.349
<v Speaker 0>documentation with BDD. So, like, I don't need

00:58:43.349 --> 00:58:45.585
<v Speaker 0>to get this right now. I just need

00:58:45.585 --> 00:58:47.425
<v Speaker 0>to have a really good base understanding. And

00:58:47.425 --> 00:58:49.425
<v Speaker 0>then as I actually start to write the

00:58:49.425 --> 00:58:50.945
<v Speaker 0>code, I may start to I

00:58:51.425 --> 00:58:53.265
<v Speaker 0>may start to pull out more of those

00:58:54.385 --> 00:58:55.985
<v Speaker 0>phrases, rules, guidelines,

00:58:56.610 --> 00:58:58.370
<v Speaker 0>and my understanding improves.

00:58:59.330 --> 00:59:01.010
<v Speaker 1>Yeah. And I think the thing

00:59:01.490 --> 00:59:02.930
<v Speaker 1>we may be missing, if you scroll up

00:59:02.930 --> 00:59:04.370
<v Speaker 1>a bit to the top of the feature

00:59:04.690 --> 00:59:05.330
<v Speaker 0>Yep.

00:59:05.730 --> 00:59:08.370
<v Speaker 1>Someone's reading about git repository bootstrapping.

00:59:10.045 --> 00:59:11.565
<v Speaker 1>We maybe need to have a rule there,

00:59:11.565 --> 00:59:13.805
<v Speaker 1>which is like, we clone it to the

00:59:13.805 --> 00:59:16.285
<v Speaker 1>local disk on first bootstrap if this folder

00:59:16.285 --> 00:59:18.365
<v Speaker 1>doesn't exist. Maybe that's the rule that's it

00:59:18.365 --> 00:59:19.245
<v Speaker 1>captures the first.

00:59:22.690 --> 00:59:24.290
<v Speaker 1>Like, there's some you you wanna write that

00:59:24.290 --> 00:59:25.250
<v Speaker 1>down somewhere.

00:59:26.370 --> 00:59:28.130
<v Speaker 1>We're actually we do we do a we

00:59:28.130 --> 00:59:29.170
<v Speaker 1>do a git clone.

00:59:33.170 --> 00:59:34.450
<v Speaker 0>Does that need to be said?

00:59:38.435 --> 00:59:40.035
<v Speaker 0>I mean, the feature is

00:59:40.275 --> 00:59:42.035
<v Speaker 0>I mean, we're calling a bootstrap, but the

00:59:42.035 --> 00:59:43.075
<v Speaker 0>the feature is

00:59:44.435 --> 00:59:44.995
<v Speaker 0>we're gonna

00:59:46.835 --> 00:59:47.475
<v Speaker 1>yeah. We're gonna

00:59:48.755 --> 00:59:49.155
<v Speaker 1>interns joined.

00:59:50.670 --> 00:59:52.670
<v Speaker 1>Your interns joined the company. So read these

00:59:52.670 --> 00:59:54.430
<v Speaker 1>in order. This is the first thing they're

00:59:54.430 --> 00:59:54.910
<v Speaker 1>reading.

00:59:58.829 --> 01:00:00.110
<v Speaker 0>Wording is hard.

01:00:00.510 --> 01:00:00.990
<v Speaker 0>The

01:00:01.310 --> 01:00:02.670
<v Speaker 1>the only reason I'm pushing this in this

01:00:02.670 --> 01:00:05.275
<v Speaker 1>direction is I want the symmetry of everything

01:00:05.275 --> 01:00:07.355
<v Speaker 1>being in a rule, but it's okay if

01:00:07.355 --> 01:00:08.715
<v Speaker 1>I do it. It's not really gonna affect

01:00:08.715 --> 01:00:09.435
<v Speaker 1>anything.

01:00:10.555 --> 01:00:12.715
<v Speaker 1>Because I have seen people,

01:00:13.275 --> 01:00:14.635
<v Speaker 1>like, grappling for rules.

01:00:17.460 --> 01:00:19.300
<v Speaker 0>Okay. So I would would on the side

01:00:19.300 --> 01:00:20.900
<v Speaker 1>of having the having the stuff in the

01:00:20.900 --> 01:00:23.380
<v Speaker 1>rule description and not having an example description.

01:00:29.954 --> 01:00:30.675
<v Speaker 1>Hello?

01:00:31.075 --> 01:00:32.595
<v Speaker 1>What's the thing we actually do? We claim

01:00:32.595 --> 01:00:33.555
<v Speaker 1>the thing.

01:00:35.634 --> 01:00:36.994
<v Speaker 1>We claim the local

01:00:37.394 --> 01:00:39.075
<v Speaker 1>we claim the local repository.

01:00:39.555 --> 01:00:40.755
<v Speaker 0>No. I thought we were kind of in

01:00:40.755 --> 01:00:42.275
<v Speaker 0>a position where if there's one rule and

01:00:42.275 --> 01:00:44.275
<v Speaker 0>one example, then we'll met the rule and

01:00:44.275 --> 01:00:45.690
<v Speaker 0>just go with the example.

01:00:46.250 --> 01:00:48.410
<v Speaker 0>I I thought that was kind of the

01:00:48.970 --> 01:00:51.690
<v Speaker 0>the heuristic we'd adhere to there. But then

01:00:51.690 --> 01:00:53.450
<v Speaker 0>you were saying, well, you want them all

01:00:53.450 --> 01:00:55.210
<v Speaker 0>to have a rule. But

01:00:56.170 --> 01:00:57.610
<v Speaker 0>if the rule and the example are the

01:00:57.610 --> 01:00:59.050
<v Speaker 0>same, should we not just have met the

01:00:59.050 --> 01:00:59.290
<v Speaker 0>rule?

01:01:01.665 --> 01:01:03.105
<v Speaker 0>I mean, that's just still a rule. It's

01:01:03.105 --> 01:01:05.825
<v Speaker 0>just it's just codified as an example. That's

01:01:05.825 --> 01:01:07.345
<v Speaker 0>kinda where my Yes. And why not put

01:01:07.345 --> 01:01:09.985
<v Speaker 1>the rule in? Because they're it's same. What

01:01:09.985 --> 01:01:10.785
<v Speaker 1>is this rule for?

01:01:13.910 --> 01:01:15.270
<v Speaker 1>Just so we've got everything on the rule

01:01:15.270 --> 01:01:17.030
<v Speaker 1>level, because the rules are rules are the

01:01:17.030 --> 01:01:17.910
<v Speaker 1>important thing.

01:01:19.990 --> 01:01:21.750
<v Speaker 1>We're going down the rabbit hole. Let's stop

01:01:21.750 --> 01:01:23.510
<v Speaker 1>let's stop. Okay.

01:01:23.910 --> 01:01:25.830
<v Speaker 1>So we've got I'm happy I'm really happy

01:01:25.830 --> 01:01:28.355
<v Speaker 0>with this. I think this Yeah. Explains

01:01:28.355 --> 01:01:31.155
<v Speaker 0>our bootstrapping process where we either

01:01:31.555 --> 01:01:33.954
<v Speaker 0>you start in with a clean stateless directory

01:01:33.954 --> 01:01:36.275
<v Speaker 0>and we start to clone the get the

01:01:36.275 --> 01:01:38.355
<v Speaker 0>things we take under management of get sync

01:01:38.355 --> 01:01:40.355
<v Speaker 0>and so the directory. And there are rules

01:01:41.660 --> 01:01:43.980
<v Speaker 0>as existing state exists of how we can

01:01:43.980 --> 01:01:46.300
<v Speaker 0>bring that under get sync management. And we've

01:01:46.300 --> 01:01:49.580
<v Speaker 0>codified that we need a more code origin.

01:01:49.580 --> 01:01:51.500
<v Speaker 0>It has to point to the right directory.

01:01:51.820 --> 01:01:54.380
<v Speaker 0>Otherwise, we wanna exit the bootstrap. Like, to

01:01:54.380 --> 01:01:55.980
<v Speaker 0>me, that is that seems

01:01:56.300 --> 01:01:57.260
<v Speaker 0>pretty complete

01:01:57.555 --> 01:02:00.115
<v Speaker 0>in my Mhmm. Yeah. For that bootstrapping.

01:02:00.115 --> 01:02:01.395
<v Speaker 1>The question is, like,

01:02:03.474 --> 01:02:04.755
<v Speaker 1>what would happen next?

01:02:05.555 --> 01:02:06.915
<v Speaker 0>The reconciliation.

01:02:07.635 --> 01:02:09.635
<v Speaker 1>But this is a deliverable. Right? When you

01:02:09.635 --> 01:02:11.474
<v Speaker 1>when you bootstrap a thing, you've got a

01:02:11.474 --> 01:02:12.675
<v Speaker 1>lot you've you're guaranteed

01:02:12.990 --> 01:02:14.590
<v Speaker 1>to either have an error message.

01:02:15.390 --> 01:02:16.830
<v Speaker 0>Yeah. I have a correct term.

01:02:17.070 --> 01:02:19.550
<v Speaker 0>Yeah. I mean, I I that's well, actually,

01:02:19.550 --> 01:02:20.670
<v Speaker 0>I think that's actually

01:02:22.590 --> 01:02:24.190
<v Speaker 0>retroactively

01:02:24.590 --> 01:02:26.510
<v Speaker 0>describes the existing behavior.

01:02:27.125 --> 01:02:28.964
<v Speaker 0>Yeah. You know, we do have Rust code

01:02:28.964 --> 01:02:29.605
<v Speaker 0>here

01:02:30.085 --> 01:02:32.005
<v Speaker 0>that calls our repository.

01:02:32.724 --> 01:02:34.964
<v Speaker 0>You know, there's some authentication I'm gonna omit

01:02:34.964 --> 01:02:35.845
<v Speaker 0>for now.

01:02:36.565 --> 01:02:37.605
<v Speaker 0>But it does

01:02:39.204 --> 01:02:40.724
<v Speaker 0>try to open it, so it checks if

01:02:40.724 --> 01:02:41.365
<v Speaker 0>it exists,

01:02:42.200 --> 01:02:42.760
<v Speaker 0>and

01:02:44.440 --> 01:02:46.760
<v Speaker 0>it checks the remote URL, which is hard

01:02:46.760 --> 01:02:48.920
<v Speaker 0>coded to look for the origin. You know?

01:02:49.880 --> 01:02:51.400
<v Speaker 0>This what Rawkode does right now.

01:02:51.799 --> 01:02:53.640
<v Speaker 1>Go back to the feature for a minute.

01:02:53.640 --> 01:02:55.720
<v Speaker 1>There's something we can talk about. So

01:02:56.920 --> 01:02:58.575
<v Speaker 1>you would we talked a bit last time

01:02:58.575 --> 01:03:00.815
<v Speaker 1>about what what level of the system you'd

01:03:00.815 --> 01:03:01.855
<v Speaker 1>test this at.

01:03:02.255 --> 01:03:04.415
<v Speaker 0>Okay. And you've kinda got a three level

01:03:04.415 --> 01:03:07.535
<v Speaker 1>system that simplify it. You've got

01:03:09.135 --> 01:03:09.935
<v Speaker 1>Git

01:03:10.335 --> 01:03:11.615
<v Speaker 1>provided by someone else.

01:03:13.230 --> 01:03:14.750
<v Speaker 1>You've got your library,

01:03:15.390 --> 01:03:17.150
<v Speaker 1>and you've got a command line application.

01:03:18.830 --> 01:03:20.590
<v Speaker 1>And I think we said last time, you

01:03:20.590 --> 01:03:21.630
<v Speaker 1>wouldn't

01:03:21.630 --> 01:03:22.670
<v Speaker 1>try and

01:03:25.150 --> 01:03:26.990
<v Speaker 1>basically, the way you choose to test it,

01:03:27.695 --> 01:03:29.855
<v Speaker 1>the the the the testing setup you you

01:03:29.855 --> 01:03:32.015
<v Speaker 1>try for your automation is going to constrain

01:03:32.015 --> 01:03:33.935
<v Speaker 1>where the rule gets implemented.

01:03:35.855 --> 01:03:37.215
<v Speaker 1>It's one of reasons I like rules in

01:03:37.215 --> 01:03:37.775
<v Speaker 1>there.

01:03:38.495 --> 01:03:38.815
<v Speaker 1>So

01:03:40.920 --> 01:03:42.440
<v Speaker 1>what's the one rule we've got? Can you

01:03:42.440 --> 01:03:43.720
<v Speaker 1>put it make it visible?

01:03:44.359 --> 01:03:45.640
<v Speaker 1>Scroll up. But yeah.

01:03:46.599 --> 01:03:48.119
<v Speaker 1>If you have a local clone, the origin

01:03:48.119 --> 01:03:49.400
<v Speaker 1>remote must be correct.

01:03:50.520 --> 01:03:52.440
<v Speaker 1>Now some of these examples

01:03:52.440 --> 01:03:54.200
<v Speaker 1>might be implemented in

01:03:54.655 --> 01:03:56.095
<v Speaker 1>Git itself already.

01:03:57.935 --> 01:04:00.975
<v Speaker 1>Your your Git library might error

01:04:01.535 --> 01:04:02.735
<v Speaker 1>when we try and do some of these

01:04:02.735 --> 01:04:03.375
<v Speaker 1>things.

01:04:03.775 --> 01:04:04.415
<v Speaker 0>Mhmm.

01:04:06.335 --> 01:04:07.855
<v Speaker 1>Like, if it already has an origin, you're

01:04:07.855 --> 01:04:09.450
<v Speaker 1>trying to clone into it, it might say,

01:04:09.450 --> 01:04:10.570
<v Speaker 1>what the hell are you doing?

01:04:12.970 --> 01:04:14.650
<v Speaker 1>So if we test your library and get

01:04:14.650 --> 01:04:15.370
<v Speaker 1>together,

01:04:16.410 --> 01:04:18.090
<v Speaker 1>some of it might be implemented already by

01:04:18.090 --> 01:04:19.770
<v Speaker 1>get, and some of it might be implemented

01:04:19.770 --> 01:04:21.690
<v Speaker 1>by your library and sort of pre checks.

01:04:21.770 --> 01:04:23.130
<v Speaker 1>And you're kind of if you're kind of

01:04:23.130 --> 01:04:23.930
<v Speaker 1>fine either way,

01:04:25.345 --> 01:04:27.185
<v Speaker 1>then a good place to test this is

01:04:27.185 --> 01:04:28.705
<v Speaker 1>at the library level.

01:04:29.505 --> 01:04:30.145
<v Speaker 1>Right?

01:04:30.385 --> 01:04:32.465
<v Speaker 1>Yep. Because that means you're you're not opening

01:04:32.465 --> 01:04:34.545
<v Speaker 1>yourself up to the possibility that the rule

01:04:34.545 --> 01:04:36.785
<v Speaker 1>is implemented in the CLI application.

01:04:39.730 --> 01:04:42.369
<v Speaker 1>You guarantee it's either in your library or

01:04:42.369 --> 01:04:43.809
<v Speaker 1>it's a need to get thing that you're

01:04:43.809 --> 01:04:45.490
<v Speaker 1>catching and handling nicely.

01:04:45.650 --> 01:04:47.250
<v Speaker 0>Yeah. I think that's where I want most

01:04:47.250 --> 01:04:49.170
<v Speaker 0>of my testing to happen, not on the

01:04:49.170 --> 01:04:50.930
<v Speaker 0>CLI itself. The CLI is really just a

01:04:50.930 --> 01:04:54.295
<v Speaker 0>wrapper around the library functions. So definitely.

01:04:54.455 --> 01:04:56.375
<v Speaker 1>Yeah. So so just to pause on that

01:04:56.375 --> 01:04:57.735
<v Speaker 1>conversation for a second.

01:04:58.135 --> 01:04:59.575
<v Speaker 1>The bit we've just done, we would then

01:04:59.575 --> 01:05:01.655
<v Speaker 1>share it with the people we've talked to,

01:05:01.655 --> 01:05:02.615
<v Speaker 1>get feedback,

01:05:02.695 --> 01:05:03.815
<v Speaker 1>massage it.

01:05:04.295 --> 01:05:07.015
<v Speaker 1>Now we're at, like, architecture day.

01:05:07.095 --> 01:05:08.135
<v Speaker 1>We're gonna build it now,

01:05:09.180 --> 01:05:10.700
<v Speaker 1>And we're talking about where we're gonna test

01:05:10.700 --> 01:05:11.500
<v Speaker 1>it. So

01:05:11.900 --> 01:05:14.540
<v Speaker 1>this stuff about the origin already existing, we

01:05:14.540 --> 01:05:17.100
<v Speaker 1>don't care. The way we're designing the tests,

01:05:17.580 --> 01:05:19.820
<v Speaker 1>we don't care if your library reads the

01:05:19.820 --> 01:05:20.860
<v Speaker 1>origins,

01:05:20.940 --> 01:05:21.820
<v Speaker 1>checks it's right,

01:05:22.855 --> 01:05:24.615
<v Speaker 1>or if your library just tries to do

01:05:24.615 --> 01:05:26.375
<v Speaker 1>the action and catches an error from Git,

01:05:26.375 --> 01:05:28.935
<v Speaker 1>we're fine either way. Yeah? Mhmm. So that

01:05:28.935 --> 01:05:30.055
<v Speaker 1>gives you some freedom

01:05:32.855 --> 01:05:33.975
<v Speaker 1>to to

01:05:34.295 --> 01:05:36.935
<v Speaker 1>to do it. But we'll know for sure

01:05:36.935 --> 01:05:38.775
<v Speaker 1>that the

01:05:38.190 --> 01:05:40.670
<v Speaker 1>we're not relying on the CLI implementing the

01:05:40.670 --> 01:05:41.310
<v Speaker 1>rule.

01:05:41.550 --> 01:05:43.230
<v Speaker 1>It's it's implemented to the library. That's pretty

01:05:43.230 --> 01:05:44.350
<v Speaker 1>that's pretty strong.

01:05:44.510 --> 01:05:45.869
<v Speaker 1>So I think we should automate all of

01:05:45.869 --> 01:05:47.550
<v Speaker 1>these tests at the library level.

01:05:47.790 --> 01:05:48.430
<v Speaker 1>Mhmm.

01:05:49.710 --> 01:05:50.430
<v Speaker 1>And

01:05:51.915 --> 01:05:52.955
<v Speaker 1>with git

01:05:53.755 --> 01:05:54.875
<v Speaker 1>real git.

01:05:56.955 --> 01:05:58.315
<v Speaker 1>And then we'll have to see how slow

01:05:58.315 --> 01:05:59.355
<v Speaker 1>Flake is.

01:05:59.755 --> 01:06:02.555
<v Speaker 0>So it's using lib git. It just it

01:06:02.555 --> 01:06:04.555
<v Speaker 0>doesn't shell out to, like, the git executable.

01:06:04.990 --> 01:06:06.750
<v Speaker 0>Mhmm. But the get executable is just a

01:06:06.750 --> 01:06:08.750
<v Speaker 0>wrapper around lub get anyway. So it's at

01:06:08.830 --> 01:06:11.390
<v Speaker 0>it should be relatively fast provided

01:06:11.870 --> 01:06:13.630
<v Speaker 0>I mean, it is actually going to clone

01:06:13.630 --> 01:06:14.750
<v Speaker 0>these repositories.

01:06:14.750 --> 01:06:16.190
<v Speaker 0>So Yes. And you might

01:06:16.830 --> 01:06:17.150
<v Speaker 1>so

01:06:18.325 --> 01:06:20.245
<v Speaker 1>you might need to look at that and

01:06:20.245 --> 01:06:22.085
<v Speaker 1>then say, maybe I should change it to

01:06:22.085 --> 01:06:23.765
<v Speaker 1>local git repositories

01:06:23.765 --> 01:06:25.045
<v Speaker 1>on the same box

01:06:25.285 --> 01:06:27.605
<v Speaker 1>if if the network speeds are slow. So

01:06:27.605 --> 01:06:29.125
<v Speaker 1>I'd look at that as you go. Yeah.

01:06:29.125 --> 01:06:31.045
<v Speaker 1>Now in another situation, if you maybe had

01:06:31.045 --> 01:06:32.885
<v Speaker 1>a web app, right, where it has

01:06:33.660 --> 01:06:35.660
<v Speaker 1>a logic layer and some database

01:06:37.579 --> 01:06:38.940
<v Speaker 1>I mentioned this because the because of the

01:06:38.940 --> 01:06:39.580
<v Speaker 1>audience.

01:06:39.900 --> 01:06:42.540
<v Speaker 1>That's a different situation because in that situation,

01:06:42.700 --> 01:06:44.460
<v Speaker 1>you might not be happy if the stuff

01:06:44.460 --> 01:06:45.740
<v Speaker 1>is implemented in the database.

01:06:47.825 --> 01:06:48.865
<v Speaker 1>You may be,

01:06:49.505 --> 01:06:51.265
<v Speaker 1>but you might not be happy if if

01:06:51.265 --> 01:06:54.145
<v Speaker 1>the key business rules are implemented as database

01:06:54.145 --> 01:06:56.944
<v Speaker 1>constraints or triggers because there's this feeling in

01:06:56.944 --> 01:06:58.944
<v Speaker 1>future you might use a different database. Like,

01:06:58.944 --> 01:07:01.660
<v Speaker 1>I don't wanna move from Oracle to Mongo

01:07:01.660 --> 01:07:03.260
<v Speaker 1>and then realize all my business rules are

01:07:03.260 --> 01:07:04.140
<v Speaker 1>in the Oracle.

01:07:04.620 --> 01:07:05.340
<v Speaker 0>Yeah.

01:07:05.660 --> 01:07:07.580
<v Speaker 0>I I want to to know they're in

01:07:07.580 --> 01:07:08.940
<v Speaker 1>that layer. So in that case, you would

01:07:08.940 --> 01:07:11.340
<v Speaker 1>deliberately test it without the real infrastructure

01:07:12.220 --> 01:07:14.940
<v Speaker 1>as the first test. The first rigorous test,

01:07:15.815 --> 01:07:17.815
<v Speaker 1>you test it with a fake database.

01:07:18.295 --> 01:07:19.815
<v Speaker 1>Mhmm. And then you would know that all

01:07:19.815 --> 01:07:22.055
<v Speaker 1>the rules are implemented in your your core

01:07:22.055 --> 01:07:23.015
<v Speaker 1>business layer.

01:07:25.734 --> 01:07:27.575
<v Speaker 1>Whereas you're happy with this being very tied

01:07:27.575 --> 01:07:28.214
<v Speaker 1>to Git. Right?

01:07:29.580 --> 01:07:31.740
<v Speaker 0>Yes. I am very happy with it being

01:07:31.740 --> 01:07:33.260
<v Speaker 0>tied to git. I think I have say

01:07:33.260 --> 01:07:35.500
<v Speaker 0>Otherwise, we'd have for the next five years.

01:07:35.980 --> 01:07:38.140
<v Speaker 1>Yeah. There'd be some, like, abstraction layer of

01:07:38.140 --> 01:07:38.940
<v Speaker 1>VCS

01:07:39.260 --> 01:07:41.020
<v Speaker 1>interface, you know. Yeah. I mean, I could

01:07:41.020 --> 01:07:43.035
<v Speaker 0>call it commit sync and, like, abstract abstract

01:07:43.035 --> 01:07:44.474
<v Speaker 0>that a way to work with CVS or

01:07:44.474 --> 01:07:47.515
<v Speaker 0>an SVN for Mercury or whatever. But, really,

01:07:47.515 --> 01:07:49.355
<v Speaker 0>I'm quite happy to tie this into kit.

01:07:49.355 --> 01:07:49.515
<v Speaker 0>So

01:07:50.315 --> 01:07:51.915
<v Speaker 1>So the only concern you've got you need

01:07:51.915 --> 01:07:53.835
<v Speaker 1>to worry about is performance. So that's the

01:07:53.835 --> 01:07:55.435
<v Speaker 1>only place we might cheat some things.

01:07:55.755 --> 01:07:58.280
<v Speaker 1>So I would test all of these at

01:07:58.280 --> 01:08:00.440
<v Speaker 1>the library level. Now the the first question

01:08:00.440 --> 01:08:02.359
<v Speaker 1>I have is, if all of these are

01:08:02.359 --> 01:08:04.520
<v Speaker 1>validated already at the library level, which ones

01:08:04.520 --> 01:08:06.680
<v Speaker 1>would you then need to rerun through the

01:08:06.680 --> 01:08:08.840
<v Speaker 1>CLI to be happy the CLI works?

01:08:10.040 --> 01:08:11.560
<v Speaker 1>Let's look at them from the top and

01:08:11.560 --> 01:08:11.800
<v Speaker 1>see.

01:08:12.795 --> 01:08:15.275
<v Speaker 1>Let's imagine they're all validated in the library

01:08:15.275 --> 01:08:16.074
<v Speaker 1>already.

01:08:16.154 --> 01:08:16.954
<v Speaker 0>Uh-huh.

01:08:18.074 --> 01:08:19.434
<v Speaker 1>So that first one,

01:08:21.755 --> 01:08:23.755
<v Speaker 1>what would we be testing if we then

01:08:23.755 --> 01:08:25.435
<v Speaker 1>also tested it through the CLI?

01:08:30.750 --> 01:08:31.550
<v Speaker 1>Nothing?

01:08:32.910 --> 01:08:34.670
<v Speaker 1>Well, you're still testing something. You're testing the

01:08:34.670 --> 01:08:36.750
<v Speaker 1>CLI calls the right function on the library.

01:08:40.375 --> 01:08:43.015
<v Speaker 1>That's all you test testing. Right? That's all

01:08:43.015 --> 01:08:45.335
<v Speaker 1>you'd be validating is, like, your CLI

01:08:45.895 --> 01:08:47.895
<v Speaker 1>does in it does the right command to

01:08:47.895 --> 01:08:48.694
<v Speaker 1>the library.

01:08:50.375 --> 01:08:50.695
<v Speaker 0>Yeah.

01:08:51.290 --> 01:08:53.130
<v Speaker 0>I guess. So so that might be one

01:08:53.130 --> 01:08:54.729
<v Speaker 1>we want to test. So you could put

01:08:54.729 --> 01:08:55.929
<v Speaker 1>a tag on that one

01:08:56.569 --> 01:08:58.330
<v Speaker 1>saying we wanna test this happy path through

01:08:58.330 --> 01:08:59.210
<v Speaker 1>the CLI.

01:09:03.130 --> 01:09:03.450
<v Speaker 1>Yeah.

01:09:03.945 --> 01:09:05.545
<v Speaker 1>We can you can you can be a

01:09:05.545 --> 01:09:06.984
<v Speaker 1>bit agnostic and say, like,

01:09:07.465 --> 01:09:09.064
<v Speaker 1>super important that

01:09:10.265 --> 01:09:10.905
<v Speaker 1>UI

01:09:12.104 --> 01:09:13.625
<v Speaker 1>because it then if you want web interface

01:09:13.625 --> 01:09:15.385
<v Speaker 1>as well, maybe we test this one through

01:09:15.385 --> 01:09:16.345
<v Speaker 1>the web interface as well.

01:09:17.110 --> 01:09:18.870
<v Speaker 0>True. I do plan on compiling this to

01:09:18.870 --> 01:09:20.470
<v Speaker 0>WASM and running it in a browser. So

01:09:21.030 --> 01:09:23.030
<v Speaker 1>Yeah. So that so that would that would

01:09:23.030 --> 01:09:25.590
<v Speaker 1>test the the button on the web page.

01:09:26.229 --> 01:09:27.670
<v Speaker 1>When I click it, it calls the right

01:09:27.670 --> 01:09:28.390
<v Speaker 1>thing in the library.

01:09:30.024 --> 01:09:31.865
<v Speaker 1>Okay. So by adding this to the list

01:09:31.865 --> 01:09:33.305
<v Speaker 1>of things we're gonna verify through the full

01:09:33.305 --> 01:09:35.064
<v Speaker 1>stack, we're getting a bit of confidence about

01:09:35.064 --> 01:09:36.904
<v Speaker 1>that. And the second one,

01:09:39.625 --> 01:09:41.545
<v Speaker 1>what what's the interaction between the CLI and

01:09:41.545 --> 01:09:43.465
<v Speaker 1>the library here? It's the same command.

01:09:48.599 --> 01:09:50.519
<v Speaker 1>And then I don't think I follow.

01:09:51.159 --> 01:09:51.800
<v Speaker 0>Okay.

01:09:53.239 --> 01:09:53.959
<v Speaker 1>So

01:09:55.559 --> 01:09:58.280
<v Speaker 1>I'm talking specifically the boundary between your CLI

01:09:58.280 --> 01:10:00.295
<v Speaker 1>layer and your library layer. What's what's the

01:10:00.295 --> 01:10:01.014
<v Speaker 1>interaction?

01:10:01.815 --> 01:10:03.335
<v Speaker 1>And I want us to cover enough tests

01:10:03.335 --> 01:10:05.655
<v Speaker 1>that we validated all the different interactions

01:10:06.055 --> 01:10:07.895
<v Speaker 1>without too much duplication.

01:10:08.215 --> 01:10:10.855
<v Speaker 0>Okay. So the So the only difference

01:10:11.095 --> 01:10:11.895
<v Speaker 0>have

01:10:12.295 --> 01:10:14.310
<v Speaker 0>we talked about what what what changes between

01:10:14.310 --> 01:10:16.550
<v Speaker 0>running get sync of the CLI application rather

01:10:16.550 --> 01:10:18.070
<v Speaker 0>than consuming it as a library in your

01:10:18.070 --> 01:10:19.030
<v Speaker 0>own code,

01:10:20.150 --> 01:10:22.150
<v Speaker 0>really, I think the only thing

01:10:22.550 --> 01:10:24.469
<v Speaker 0>that we would need to test is that

01:10:24.469 --> 01:10:26.869
<v Speaker 0>the CLI is gonna provide configuration.

01:10:28.905 --> 01:10:30.585
<v Speaker 1>Yeah. But it's not part of this feature.

01:10:30.585 --> 01:10:31.225
<v Speaker 0>Yeah.

01:10:31.865 --> 01:10:33.225
<v Speaker 0>Like, I don't think there's anything

01:10:34.265 --> 01:10:36.265
<v Speaker 0>the CLI, in this case, in the simplest

01:10:36.265 --> 01:10:38.265
<v Speaker 0>form is just gonna be a mapping to

01:10:38.265 --> 01:10:40.265
<v Speaker 0>library functions. It's not really gonna do anything

01:10:40.265 --> 01:10:42.185
<v Speaker 0>else. Yeah. It's just like

01:10:44.100 --> 01:10:46.900
<v Speaker 1>control a remote control for the library. Right?

01:10:46.900 --> 01:10:48.980
<v Speaker 0>Yeah. Exactly. So all we need to look,

01:10:48.980 --> 01:10:50.260
<v Speaker 1>which is really common,

01:10:50.820 --> 01:10:52.500
<v Speaker 1>the UI layer is just gonna send some

01:10:52.500 --> 01:10:55.300
<v Speaker 1>commands to the back end and look inspect

01:10:55.300 --> 01:10:57.140
<v Speaker 1>some return values or handle some errors.

01:10:57.815 --> 01:10:58.614
<v Speaker 1>So

01:10:58.775 --> 01:11:00.295
<v Speaker 1>in that first one, we're checking that it

01:11:00.295 --> 01:11:01.655
<v Speaker 1>sends the right command,

01:11:02.215 --> 01:11:04.455
<v Speaker 1>tells the library to do something. And we're

01:11:04.455 --> 01:11:05.895
<v Speaker 1>kind of checking that it's

01:11:06.295 --> 01:11:07.815
<v Speaker 1>well, we're not checking yet, but we're assuming

01:11:07.815 --> 01:11:10.375
<v Speaker 1>it's looking at the return value that says,

01:11:10.375 --> 01:11:12.630
<v Speaker 1>yes. I've done it. Yep. So in the

01:11:12.630 --> 01:11:14.390
<v Speaker 1>second one, local directory is in the Git

01:11:14.390 --> 01:11:16.070
<v Speaker 1>repository. It's the same command,

01:11:16.630 --> 01:11:18.230
<v Speaker 1>but in this case, there's an error.

01:11:18.710 --> 01:11:20.470
<v Speaker 1>So maybe you wanna check that as well.

01:11:20.790 --> 01:11:23.430
<v Speaker 1>The CLI handles errors that come from the

01:11:23.430 --> 01:11:23.990
<v Speaker 1>library

01:11:25.844 --> 01:11:28.085
<v Speaker 0>Okay. And exits with a non zero exit

01:11:28.085 --> 01:11:28.724
<v Speaker 1>code.

01:11:30.324 --> 01:11:31.604
<v Speaker 1>Right? Yep.

01:11:33.284 --> 01:11:35.125
<v Speaker 1>Are there any exam are there any examples

01:11:35.125 --> 01:11:36.085
<v Speaker 1>that do anything different?

01:11:37.100 --> 01:11:37.660
<v Speaker 0>No. They're

01:11:39.020 --> 01:11:41.180
<v Speaker 0>they are all checking that return value as

01:11:41.180 --> 01:11:42.540
<v Speaker 0>a library, really.

01:11:43.340 --> 01:11:45.500
<v Speaker 0>Yeah. But would I check as features CLI

01:11:45.500 --> 01:11:46.219
<v Speaker 0>instead?

01:11:47.420 --> 01:11:48.700
<v Speaker 1>You know, because we don't need to test

01:11:48.700 --> 01:11:50.220
<v Speaker 1>those other ones with the CLI.

01:11:50.655 --> 01:11:52.975
<v Speaker 1>So I think from what you've said, if

01:11:52.975 --> 01:11:56.175
<v Speaker 1>those first two run correctly through the CLI,

01:11:57.535 --> 01:11:59.775
<v Speaker 1>I believe the others will all behave correctly.

01:12:00.735 --> 01:12:03.610
<v Speaker 0>Gotcha. Okay. Given that we've given we've run

01:12:03.610 --> 01:12:05.290
<v Speaker 1>them all given we valid if we validated

01:12:05.290 --> 01:12:06.570
<v Speaker 1>them all at the library,

01:12:07.850 --> 01:12:09.370
<v Speaker 1>we only need to test those two through

01:12:09.370 --> 01:12:10.250
<v Speaker 1>the CLI.

01:12:10.410 --> 01:12:13.370
<v Speaker 1>And this is a really important pattern because

01:12:16.355 --> 01:12:18.114
<v Speaker 1>it's the thing in the web world, you

01:12:18.114 --> 01:12:19.875
<v Speaker 1>know, this is where people test every scenario

01:12:19.875 --> 01:12:21.555
<v Speaker 1>through the web interface. But really, all the

01:12:21.555 --> 01:12:23.315
<v Speaker 1>web interface does is it calls one service

01:12:23.315 --> 01:12:25.155
<v Speaker 1>and it shows the value that comes back

01:12:25.155 --> 01:12:25.715
<v Speaker 1>on the screen.

01:12:27.170 --> 01:12:29.330
<v Speaker 1>So this kind of thinking about what what's

01:12:29.330 --> 01:12:31.489
<v Speaker 1>different in each case really helps us narrow

01:12:31.489 --> 01:12:32.849
<v Speaker 1>down the end to end tests.

01:12:33.570 --> 01:12:36.130
<v Speaker 0>So by tagging these these two CLI, I'm

01:12:36.130 --> 01:12:38.210
<v Speaker 0>confirming that CI knows how to handle a

01:12:38.210 --> 01:12:41.155
<v Speaker 0>successful bootstrap and an error bootstrap. Like, those

01:12:41.155 --> 01:12:43.235
<v Speaker 0>calling those two functions and handling the return

01:12:43.235 --> 01:12:44.915
<v Speaker 0>types. And that's that's kinda what I want

01:12:44.915 --> 01:12:46.755
<v Speaker 0>the confidence with that tag. Right? If I

01:12:46.755 --> 01:12:48.435
<v Speaker 0>understand it right. Yeah. Yeah. And there isn't

01:12:48.435 --> 01:12:50.355
<v Speaker 1>anything else that it does. All the other

01:12:50.355 --> 01:12:52.035
<v Speaker 1>scenarios where it's called it tells it to

01:12:52.035 --> 01:12:53.395
<v Speaker 1>clone something, and it either gets an error

01:12:53.395 --> 01:12:54.755
<v Speaker 1>message or a success message back.

01:12:55.920 --> 01:12:58.159
<v Speaker 1>So running those through CLI

01:12:58.320 --> 01:12:59.119
<v Speaker 1>tests

01:12:59.520 --> 01:13:00.880
<v Speaker 1>aren't gonna be useful.

01:13:02.640 --> 01:13:04.159
<v Speaker 1>So in your Okay.

01:13:05.600 --> 01:13:07.760
<v Speaker 0>Yeah? Yeah. It makes sense. I was I

01:13:07.760 --> 01:13:09.840
<v Speaker 0>was kinda really confused and lost when you

01:13:09.840 --> 01:13:11.255
<v Speaker 0>were talking about the CLI tag, and I

01:13:11.255 --> 01:13:12.775
<v Speaker 0>didn't know where we were going and then

01:13:13.335 --> 01:13:14.775
<v Speaker 1>It's not a magic tag or anything. It's

01:13:14.775 --> 01:13:17.095
<v Speaker 1>just something you've you've come up with. Right?

01:13:17.095 --> 01:13:18.375
<v Speaker 0>It was just that one that where you

01:13:18.375 --> 01:13:19.815
<v Speaker 0>said, no. We don't need to test those

01:13:19.815 --> 01:13:22.295
<v Speaker 0>and that's why. I realized, oh, like, the

01:13:22.295 --> 01:13:23.815
<v Speaker 0>way that we test the mapping works is

01:13:23.815 --> 01:13:25.815
<v Speaker 0>by packing one successful one error and we

01:13:25.815 --> 01:13:27.440
<v Speaker 0>know that it's been handled. That that that

01:13:27.440 --> 01:13:29.040
<v Speaker 0>completely makes sense to me now. I got

01:13:29.040 --> 01:13:30.160
<v Speaker 0>it. Yeah. Good.

01:13:30.560 --> 01:13:32.320
<v Speaker 1>Because because an alternative would be to test

01:13:32.320 --> 01:13:34.240
<v Speaker 1>everything for CLI, not test everything for the

01:13:34.240 --> 01:13:34.880
<v Speaker 1>library.

01:13:35.200 --> 01:13:37.200
<v Speaker 1>That would give you confidence that the library

01:13:37.200 --> 01:13:37.600
<v Speaker 1>works.

01:13:38.765 --> 01:13:39.485
<v Speaker 1>Mhmm.

01:13:40.525 --> 01:13:40.845
<v Speaker 1>It

01:13:41.325 --> 01:13:44.285
<v Speaker 1>you slightly lose some confidence that maybe some

01:13:44.285 --> 01:13:46.205
<v Speaker 1>of this stuff is implemented in the CLI.

01:13:46.205 --> 01:13:46.765
<v Speaker 1>Now

01:13:47.405 --> 01:13:50.765
<v Speaker 1>because your CLI layer is quite thin, that's

01:13:50.765 --> 01:13:52.045
<v Speaker 1>maybe not a concern for you, but you

01:13:52.045 --> 01:13:53.245
<v Speaker 1>can sort of imagine in

01:13:53.580 --> 01:13:55.659
<v Speaker 1>in a more complex app or in a

01:13:55.659 --> 01:13:56.380
<v Speaker 1>website,

01:13:56.540 --> 01:13:58.060
<v Speaker 1>people might put all the logic in their

01:13:58.060 --> 01:13:59.739
<v Speaker 1>controller layer or they might put all the

01:13:59.739 --> 01:14:00.860
<v Speaker 1>logic in the JavaScript.

01:14:01.420 --> 01:14:03.980
<v Speaker 1>So this the practice of testing a lower

01:14:03.980 --> 01:14:05.820
<v Speaker 1>level first really comprehensively

01:14:07.594 --> 01:14:09.994
<v Speaker 1>at your kind of application interface layer,

01:14:11.035 --> 01:14:12.635
<v Speaker 1>application service layer,

01:14:14.475 --> 01:14:17.114
<v Speaker 1>it is really valuable because it it guarantees

01:14:17.195 --> 01:14:19.594
<v Speaker 1>to you that your core

01:14:19.915 --> 01:14:20.635
<v Speaker 1>model

01:14:21.020 --> 01:14:22.540
<v Speaker 1>implements the business rules.

01:14:22.860 --> 01:14:25.100
<v Speaker 1>And that's bulletproof then for for any

01:14:26.300 --> 01:14:27.580
<v Speaker 1>you know, if you write a web UI

01:14:27.580 --> 01:14:29.580
<v Speaker 1>that doesn't actually hand handle the error messages

01:14:29.580 --> 01:14:31.820
<v Speaker 1>that come back, that's fine. It won't be

01:14:31.820 --> 01:14:33.580
<v Speaker 1>a good user experience, but the kind of

01:14:34.275 --> 01:14:35.955
<v Speaker 1>Yeah. The the directory will have been left

01:14:35.955 --> 01:14:36.835
<v Speaker 1>untouched.

01:14:37.875 --> 01:14:39.315
<v Speaker 1>So that kind of thinking about where to

01:14:39.315 --> 01:14:40.675
<v Speaker 1>where to apply tests

01:14:40.835 --> 01:14:42.755
<v Speaker 1>really helps constrain your architecture.

01:14:43.235 --> 01:14:44.515
<v Speaker 0>Yeah. Makes a lot of

01:14:44.755 --> 01:14:46.595
<v Speaker 1>So you would run Cucumber once with a

01:14:46.595 --> 01:14:47.235
<v Speaker 1>world where

01:14:47.680 --> 01:14:49.199
<v Speaker 1>everything's going through the library.

01:14:49.680 --> 01:14:50.800
<v Speaker 0>That will work.

01:14:52.240 --> 01:14:54.480
<v Speaker 1>I've used this Rust one. Sorry.

01:14:56.800 --> 01:14:58.400
<v Speaker 1>And then you'd run it again

01:14:58.800 --> 01:14:59.680
<v Speaker 1>with a different

01:15:00.565 --> 01:15:02.324
<v Speaker 1>set of automation

01:15:03.045 --> 01:15:04.724
<v Speaker 1>with the at just running the ones that

01:15:04.724 --> 01:15:06.244
<v Speaker 1>are tagged at CLI.

01:15:08.085 --> 01:15:10.005
<v Speaker 0>I just wanna I'm gonna see if I

01:15:10.005 --> 01:15:12.164
<v Speaker 0>can just get this to run enough so

01:15:12.164 --> 01:15:13.525
<v Speaker 0>that it tells me it's not implemented.

01:15:14.100 --> 01:15:15.860
<v Speaker 0>I did try to implement some of these

01:15:15.860 --> 01:15:17.300
<v Speaker 0>tests, and I'm just gonna

01:15:18.100 --> 01:15:18.739
<v Speaker 0>Yeah.

01:15:18.980 --> 01:15:20.820
<v Speaker 0>Comment them all out for now.

01:15:22.179 --> 01:15:24.099
<v Speaker 1>So world is the shared state

01:15:24.500 --> 01:15:25.460
<v Speaker 1>between scenarios?

01:15:26.235 --> 01:15:28.875
<v Speaker 0>Yes. So the the this library has I

01:15:28.875 --> 01:15:29.915
<v Speaker 0>mean, I could have called that in if

01:15:29.915 --> 01:15:31.675
<v Speaker 0>I wanted, but that's yeah. It's called world,

01:15:31.675 --> 01:15:33.594
<v Speaker 0>and then we can configure a new world

01:15:33.594 --> 01:15:35.675
<v Speaker 0>with an empty state, and then we define

01:15:35.675 --> 01:15:38.395
<v Speaker 0>the steps using power matching and then attach

01:15:38.395 --> 01:15:39.114
<v Speaker 0>that to functions.

01:15:39.710 --> 01:15:42.190
<v Speaker 0>So I'll comment all over for now, and

01:15:42.190 --> 01:15:44.030
<v Speaker 0>we should just see, I guess,

01:15:44.270 --> 01:15:46.590
<v Speaker 0>a list of scenarios unimplemented.

01:15:51.995 --> 01:15:54.235
<v Speaker 0>The the Rust library actually seems really, really

01:15:54.235 --> 01:15:56.315
<v Speaker 0>good, actually. I've been quite impressed as I've

01:15:56.315 --> 01:15:57.514
<v Speaker 0>been thinking with it.

01:15:58.075 --> 01:15:59.675
<v Speaker 1>The the thing a lot of cucumbers are

01:15:59.675 --> 01:16:02.155
<v Speaker 1>missing is this is a way of running

01:16:03.730 --> 01:16:05.810
<v Speaker 1>the same features at different levels of automation

01:16:05.810 --> 01:16:08.849
<v Speaker 1>as part of one execution. So has that

01:16:09.489 --> 01:16:11.329
<v Speaker 1>and has for a while. But and there's

01:16:11.329 --> 01:16:12.290
<v Speaker 1>some talk of bringing it to the rest

01:16:12.290 --> 01:16:13.730
<v Speaker 1>of Cucumber, but what you tend to have

01:16:13.730 --> 01:16:14.530
<v Speaker 1>to do is

01:16:14.770 --> 01:16:17.570
<v Speaker 1>explicitly run Cucumber twice with different config files,

01:16:18.534 --> 01:16:19.974
<v Speaker 1>different configurations,

01:16:22.454 --> 01:16:24.775
<v Speaker 1>which is alright because you've got the kind

01:16:24.775 --> 01:16:26.695
<v Speaker 1>of fast in memory stuff

01:16:26.775 --> 01:16:28.934
<v Speaker 1>and slower end to end stuff.

01:16:30.135 --> 01:16:30.854
<v Speaker 0>Oh.

01:16:32.215 --> 01:16:35.014
<v Speaker 0>Yeah. I think my

01:16:34.000 --> 01:16:35.360
<v Speaker 0>look at to

01:16:38.880 --> 01:16:41.679
<v Speaker 0>that's another problem with dynamically linking. But

01:16:45.440 --> 01:16:47.040
<v Speaker 0>Let's see if that I mean, this add

01:16:47.040 --> 01:16:48.560
<v Speaker 0>the reinstall flag to that. Yeah.

01:16:51.415 --> 01:16:52.855
<v Speaker 0>Try it one more time.

01:16:54.055 --> 01:16:56.215
<v Speaker 0>And I think so if we were to

01:16:56.215 --> 01:16:56.855
<v Speaker 0>say, like

01:16:58.535 --> 01:17:00.215
<v Speaker 0>yeah. I'll need to fix that. I'll maybe

01:17:00.215 --> 01:17:03.574
<v Speaker 0>stick in a container from just remove remove

01:17:03.574 --> 01:17:05.574
<v Speaker 0>this weird host stuff completely.

01:17:07.250 --> 01:17:08.849
<v Speaker 0>So my next steps then

01:17:09.250 --> 01:17:10.130
<v Speaker 0>would be

01:17:11.010 --> 01:17:12.210
<v Speaker 0>to implement

01:17:13.090 --> 01:17:14.770
<v Speaker 0>well, I've already got the feature. So to

01:17:14.770 --> 01:17:16.050
<v Speaker 0>connect up the testing

01:17:16.610 --> 01:17:18.130
<v Speaker 0>for this to make sure it behaves the

01:17:18.130 --> 01:17:19.650
<v Speaker 0>way that we want, and then we would

01:17:19.650 --> 01:17:21.185
<v Speaker 0>come back and we would write the scenarios

01:17:21.185 --> 01:17:22.145
<v Speaker 0>for the

01:17:23.425 --> 01:17:25.264
<v Speaker 0>for the reconciliation loop.

01:17:25.985 --> 01:17:27.505
<v Speaker 1>Yeah. The sort of

01:17:27.825 --> 01:17:29.425
<v Speaker 1>TDD way of doing it.

01:17:29.905 --> 01:17:31.585
<v Speaker 1>Imagine you haven't written the code.

01:17:32.785 --> 01:17:33.505
<v Speaker 1>You would

01:17:34.740 --> 01:17:36.180
<v Speaker 1>I think, you've got a tag that doesn't

01:17:36.180 --> 01:17:37.700
<v Speaker 1>run the things that aren't implemented. You'd have

01:17:37.700 --> 01:17:39.620
<v Speaker 1>just the first scenario not implemented, and you

01:17:39.620 --> 01:17:41.380
<v Speaker 1>just read what it each step, you'd automate

01:17:41.380 --> 01:17:42.420
<v Speaker 1>step by step.

01:17:42.980 --> 01:17:45.139
<v Speaker 1>That really guides my workflow when I'm

01:17:45.460 --> 01:17:47.300
<v Speaker 1>working on stuff. You know? The first one,

01:17:47.300 --> 01:17:47.940
<v Speaker 1>I'd

01:17:49.405 --> 01:17:51.965
<v Speaker 1>I'd automate the first scenario. It would fail.

01:17:53.085 --> 01:17:54.925
<v Speaker 1>So look at the first scenario again. If

01:17:54.925 --> 01:17:55.885
<v Speaker 1>you pop open the

01:17:57.885 --> 01:17:59.804
<v Speaker 1>so I'd I'd I'd automate this first. Right?

01:17:59.804 --> 01:18:01.885
<v Speaker 1>So the the first step, I would have

01:18:01.885 --> 01:18:04.230
<v Speaker 1>something that checks there's no file called there's

01:18:04.230 --> 01:18:05.670
<v Speaker 1>no directory called git sync in the current

01:18:05.670 --> 01:18:07.510
<v Speaker 1>folder. I do that as a check

01:18:08.070 --> 01:18:09.909
<v Speaker 1>rather than deleting it if it exists.

01:18:11.670 --> 01:18:13.349
<v Speaker 1>So I'd I'd set the current working directly

01:18:13.349 --> 01:18:15.349
<v Speaker 1>to directory to some temp folder.

01:18:15.590 --> 01:18:17.030
<v Speaker 1>I'd check there's no file there.

01:18:20.804 --> 01:18:22.724
<v Speaker 1>I would call

01:18:24.645 --> 01:18:26.645
<v Speaker 1>I'd call the method that doesn't exist yet

01:18:26.645 --> 01:18:28.965
<v Speaker 1>when I sync the blah blah blah repository.

01:18:30.250 --> 01:18:31.929
<v Speaker 1>And then I'd run Cucumber and it would

01:18:31.929 --> 01:18:33.689
<v Speaker 1>tell me there's no method called

01:18:34.090 --> 01:18:35.610
<v Speaker 1>in the library called sync, and I'd go

01:18:35.610 --> 01:18:37.690
<v Speaker 1>and implement it. I was kind of hoping

01:18:37.690 --> 01:18:39.530
<v Speaker 0>I'd be able to show that actually.

01:18:39.849 --> 01:18:42.090
<v Speaker 0>I just I've blown away the target directory,

01:18:42.250 --> 01:18:43.770
<v Speaker 0>so I'll give that a minute and we'll

01:18:43.770 --> 01:18:45.929
<v Speaker 0>we'll see. But yeah. That makes sense. But,

01:18:46.625 --> 01:18:48.864
<v Speaker 1>yeah, I'd basically do TDD until the first

01:18:48.864 --> 01:18:50.625
<v Speaker 1>scenario passes and then I'd maybe think about

01:18:50.625 --> 01:18:52.385
<v Speaker 1>committing and make myself a cup of coffee.

01:18:52.625 --> 01:18:54.305
<v Speaker 0>Yeah. I think we discussed this in the

01:18:54.305 --> 01:18:55.665
<v Speaker 0>last steps towards a couple of weeks ago

01:18:55.665 --> 01:18:56.864
<v Speaker 0>as well. It's like this

01:18:58.190 --> 01:19:00.429
<v Speaker 0>because there's not a lot of business logic

01:19:00.429 --> 01:19:03.150
<v Speaker 0>here, I am relying heavily on get. There's

01:19:03.150 --> 01:19:04.429
<v Speaker 0>not really a lot of unit tests for

01:19:04.429 --> 01:19:06.110
<v Speaker 0>me to write here. This this as an

01:19:06.110 --> 01:19:08.429
<v Speaker 0>integration project that needs to be tested, I

01:19:08.429 --> 01:19:09.230
<v Speaker 0>think, in this way.

01:19:11.005 --> 01:19:12.205
<v Speaker 1>Yeah. I mean, you could go down this

01:19:12.205 --> 01:19:13.244
<v Speaker 1>whole route of having

01:19:14.205 --> 01:19:15.885
<v Speaker 1>value objects for everything.

01:19:18.205 --> 01:19:19.165
<v Speaker 1>And and

01:19:19.885 --> 01:19:22.765
<v Speaker 1>the testing strategy this acceptance testing strategy

01:19:23.960 --> 01:19:25.560
<v Speaker 1>is is from your library down. It checks

01:19:25.560 --> 01:19:28.360
<v Speaker 1>the library, does everything. Doesn't have anything to

01:19:28.360 --> 01:19:30.040
<v Speaker 1>say about the quality of the library.

01:19:30.200 --> 01:19:33.240
<v Speaker 0>Yeah. That's that's always still up to the

01:19:33.240 --> 01:19:35.239
<v Speaker 1>professionalism of the developers because

01:19:35.480 --> 01:19:37.480
<v Speaker 1>below that acceptance test level, we do get

01:19:37.480 --> 01:19:38.200
<v Speaker 1>into the

01:19:38.835 --> 01:19:41.715
<v Speaker 1>the arena of developer tests where developers are

01:19:41.715 --> 01:19:46.435
<v Speaker 1>deciding what tests to write. Mhmm. And that's

01:19:46.435 --> 01:19:47.554
<v Speaker 1>just up to the team.

01:19:48.594 --> 01:19:50.435
<v Speaker 1>The the value of acceptance test is you

01:19:50.435 --> 01:19:52.835
<v Speaker 1>do have some testing that is at that,

01:19:53.220 --> 01:19:55.219
<v Speaker 1>like, business delivered boundary,

01:19:55.940 --> 01:19:57.780
<v Speaker 1>and you you start moving towards

01:19:59.380 --> 01:20:00.660
<v Speaker 1>the the more you do this kind of

01:20:00.660 --> 01:20:02.340
<v Speaker 1>example mapping and then writing things down and

01:20:02.340 --> 01:20:03.780
<v Speaker 1>then automating the test based on it, the

01:20:03.780 --> 01:20:05.460
<v Speaker 1>more trust you get where people

01:20:05.620 --> 01:20:08.305
<v Speaker 1>trust that the things in the document have

01:20:08.305 --> 01:20:09.665
<v Speaker 1>all been checked automatically.

01:20:10.705 --> 01:20:12.945
<v Speaker 1>And and manual testing and acceptance testing can

01:20:12.945 --> 01:20:14.625
<v Speaker 1>focus on the things that we forgot to

01:20:14.625 --> 01:20:15.344
<v Speaker 1>talk about,

01:20:16.065 --> 01:20:17.505
<v Speaker 1>stuff around the borders,

01:20:18.305 --> 01:20:19.905
<v Speaker 1>stuff that you only see when it's real.

01:20:19.905 --> 01:20:20.225
<v Speaker 1>You know?

01:20:22.090 --> 01:20:24.250
<v Speaker 1>So you could you could automate those steps

01:20:24.250 --> 01:20:26.250
<v Speaker 1>against your library, get it working,

01:20:27.290 --> 01:20:29.690
<v Speaker 1>and then you could all you could either

01:20:29.850 --> 01:20:32.170
<v Speaker 1>oh, nice. Yeah. There we go. That's what

01:20:32.170 --> 01:20:32.810
<v Speaker 0>I wanted.

01:20:34.090 --> 01:20:36.114
<v Speaker 1>Yeah. Okay. So the first thing is, well,

01:20:36.114 --> 01:20:37.474
<v Speaker 1>let's do this on the next stream.

01:20:37.795 --> 01:20:39.235
<v Speaker 0>Yeah. Yeah.

01:20:39.474 --> 01:20:40.994
<v Speaker 1>So I'd I'd get the first scenario passing

01:20:40.994 --> 01:20:43.155
<v Speaker 1>with the library. I'd then, depending what time

01:20:43.155 --> 01:20:44.034
<v Speaker 1>of day it is

01:20:44.675 --> 01:20:47.314
<v Speaker 1>and how I feel, I'd then either

01:20:47.715 --> 01:20:49.795
<v Speaker 1>hook it into the CLI and get those

01:20:49.795 --> 01:20:52.639
<v Speaker 1>tests working, or I'd sort of progress through

01:20:52.639 --> 01:20:54.800
<v Speaker 1>all the other scenarios on the library. But

01:20:54.800 --> 01:20:56.400
<v Speaker 1>but hopefully by the end, I've got all

01:20:56.400 --> 01:20:58.000
<v Speaker 1>of these things passing in the library. I've

01:20:58.000 --> 01:20:59.760
<v Speaker 1>got two things passing in the CLI.

01:21:00.000 --> 01:21:02.159
<v Speaker 1>I hit commit. I commit the scenario with

01:21:02.159 --> 01:21:03.520
<v Speaker 1>the tests, with the code.

01:21:05.875 --> 01:21:07.395
<v Speaker 1>Here's or, you know, if I write it

01:21:07.395 --> 01:21:08.755
<v Speaker 1>afterwards, I squash it so it looks like

01:21:08.755 --> 01:21:10.035
<v Speaker 1>I did it in the right order.

01:21:11.475 --> 01:21:12.755
<v Speaker 0>Nice. That's my PR.

01:21:13.475 --> 01:21:14.595
<v Speaker 0>Yep. Awesome.

01:21:15.315 --> 01:21:17.715
<v Speaker 1>Feature done. Happy with that. That was good.

01:21:18.270 --> 01:21:19.469
<v Speaker 1>Good place to end then.

01:21:19.949 --> 01:21:22.590
<v Speaker 0>Yeah. I think if we got another one

01:21:22.590 --> 01:21:24.349
<v Speaker 0>of these scheduled, I'll teach you a little

01:21:24.349 --> 01:21:26.670
<v Speaker 0>bit of Rust and we'll work to implement

01:21:26.670 --> 01:21:28.190
<v Speaker 0>some of this together. That'd be really good

01:21:28.190 --> 01:21:28.669
<v Speaker 0>fun.

01:21:29.630 --> 01:21:31.469
<v Speaker 0>And then we can have we'll hopefully tackle

01:21:31.469 --> 01:21:31.710
<v Speaker 0>the

01:21:34.035 --> 01:21:36.115
<v Speaker 0>Delete all my code. Yeah. And we can

01:21:36.115 --> 01:21:37.555
<v Speaker 1>retreated it. Now you know how it works

01:21:37.555 --> 01:21:38.435
<v Speaker 1>in your head.

01:21:38.995 --> 01:21:42.035
<v Speaker 0>Right. Okay. Yeah. Fine. You don't have to.

01:21:42.675 --> 01:21:44.515
<v Speaker 0>Maybe just comment to all or put it

01:21:44.515 --> 01:21:47.130
<v Speaker 0>into backup dot r s or something. What

01:21:47.130 --> 01:21:49.290
<v Speaker 0>I will do is because we're at a

01:21:49.290 --> 01:21:51.290
<v Speaker 0>pretty good stage now is I will commit

01:21:51.290 --> 01:21:52.170
<v Speaker 0>as impicious.

01:21:52.890 --> 01:21:55.290
<v Speaker 0>We'll speak afterwards. We'll get something else scheduled

01:21:55.290 --> 01:21:58.010
<v Speaker 0>where we Yeah. We actually write the test,

01:21:58.010 --> 01:21:58.969
<v Speaker 0>connect up the steps,

01:21:59.695 --> 01:22:02.815
<v Speaker 0>really handle that libraries to allow and tag

01:22:02.815 --> 01:22:04.094
<v Speaker 0>and what that looks like.

01:22:04.415 --> 01:22:06.735
<v Speaker 0>And I think that's pretty awesome. I'm really

01:22:06.735 --> 01:22:07.855
<v Speaker 0>happy with that. Cool.

01:22:08.335 --> 01:22:09.295
<v Speaker 1>Alright. Great.

01:22:09.614 --> 01:22:12.335
<v Speaker 0>Well, oh, well, I mean, as always, Kevin,

01:22:12.335 --> 01:22:13.935
<v Speaker 0>you've got a lot of knowledge and it's

01:22:13.935 --> 01:22:15.535
<v Speaker 0>great to be able to extract it from

01:22:15.270 --> 01:22:17.110
<v Speaker 0>you and thank you for sharing it with

01:22:17.110 --> 01:22:19.510
<v Speaker 0>me. No worries. If anyone watching wants to

01:22:19.510 --> 01:22:20.230
<v Speaker 1>know more,

01:22:21.830 --> 01:22:22.949
<v Speaker 0>get in touch.

01:22:23.270 --> 01:22:24.790
<v Speaker 0>Yeah. Kieran McNulty on Sorry?

01:22:26.950 --> 01:22:28.630
<v Speaker 1>I'll come and do it at your company.

01:22:29.595 --> 01:22:30.795
<v Speaker 0>Okay. Definitely.

01:22:31.114 --> 01:22:31.755
<v Speaker 0>Yeah.

01:22:32.635 --> 01:22:33.994
<v Speaker 0>Alright. Well,

01:22:34.235 --> 01:22:36.795
<v Speaker 0>thank you again, Kieran. I'll speak to you

01:22:36.795 --> 01:22:38.555
<v Speaker 0>afterwards. We'll get something scheduled. If you enjoyed

01:22:38.555 --> 01:22:40.315
<v Speaker 0>that, you know, drop something in the comments.

01:22:40.315 --> 01:22:42.475
<v Speaker 0>Let us know if there's anything that we

01:22:42.640 --> 01:22:44.239
<v Speaker 0>you want to see us cover from a

01:22:44.239 --> 01:22:46.640
<v Speaker 0>BDD scenario, then obviously, we'll try and do

01:22:46.640 --> 01:22:48.560
<v Speaker 0>something on the next episodes. And of course,

01:22:48.560 --> 01:22:49.760
<v Speaker 0>out to Kieran if he can come and

01:22:49.760 --> 01:22:51.119
<v Speaker 0>help you with your own domain.

01:22:51.520 --> 01:22:52.800
<v Speaker 0>He's a wise man.

01:22:53.120 --> 01:22:54.800
<v Speaker 0>Thanks. Alright. Thanks a lot. I'll speak to

01:22:54.800 --> 01:22:55.840
<v Speaker 0>you again soon. Have a nice day. See

01:22:55.840 --> 01:22:56.640
<v Speaker 1>next time. Bye.
