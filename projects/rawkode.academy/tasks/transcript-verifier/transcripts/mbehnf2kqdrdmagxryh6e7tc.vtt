WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 6d68b50a-600f-4f89-adab-98666db649f7
Created: 2025-04-29T18:47:37.175Z
Duration: 3564.757
Channels: 1

00:01:00.500 --> 00:01:03.140
<v Speaker 0>Hello, and welcome to today's episode of Rawkode

00:01:03.140 --> 00:01:04.739
<v Speaker 0>live. I am your host Rawkode.

00:01:05.155 --> 00:01:07.395
<v Speaker 0>Today, we're taking a look at Okteto. It

00:01:07.395 --> 00:01:10.515
<v Speaker 0>is a Kubernetes development platform to empower your

00:01:10.515 --> 00:01:13.635
<v Speaker 0>developers to innovate faster on cloud native application.

00:01:14.275 --> 00:01:16.355
<v Speaker 0>Now before we move into that, there is

00:01:16.355 --> 00:01:17.635
<v Speaker 0>a little bit of housekeeping.

00:01:18.195 --> 00:01:20.275
<v Speaker 0>If you are not already subscribed to the

00:01:20.275 --> 00:01:23.170
<v Speaker 0>YouTube channel, please do so now. Remember to

00:01:23.170 --> 00:01:24.530
<v Speaker 0>click the bell, and this will get you

00:01:24.530 --> 00:01:27.010
<v Speaker 0>notifications for all new episodes of Rawkode live

00:01:27.010 --> 00:01:29.570
<v Speaker 0>as we explore the vast cloud native landscape

00:01:29.570 --> 00:01:30.290
<v Speaker 0>together.

00:01:30.930 --> 00:01:32.370
<v Speaker 0>Also, if you're not watching live or you

00:01:32.370 --> 00:01:33.935
<v Speaker 0>just to chat, we do have a very

00:01:33.935 --> 00:01:35.695
<v Speaker 0>active Discord server. We have a few hundred

00:01:35.695 --> 00:01:37.455
<v Speaker 0>people in there now talking all things cloud

00:01:37.455 --> 00:01:40.575
<v Speaker 0>native, Kubernetes, and everything in between. So feel

00:01:40.575 --> 00:01:42.415
<v Speaker 0>free to jump in there, say hello, and

00:01:42.415 --> 00:01:43.854
<v Speaker 0>I look forward to seeing you.

00:01:44.494 --> 00:01:46.335
<v Speaker 0>Now in order to take a look at

00:01:46.580 --> 00:01:49.380
<v Speaker 0>Okteto today, I am joined by founder and

00:01:49.380 --> 00:01:52.820
<v Speaker 0>CEO, Ramiro. Hello, Ramiro. How are you today?

00:01:54.020 --> 00:01:56.340
<v Speaker 1>Hey, David. It's good good being here. Thanks

00:01:56.340 --> 00:01:58.420
<v Speaker 1>thanks for the invite. Good good seeing you.

00:01:58.420 --> 00:02:00.580
<v Speaker 0>Yeah. Thank you very much for joining us.

00:02:00.900 --> 00:02:02.340
<v Speaker 0>This

00:02:01.965 --> 00:02:04.045
<v Speaker 0>is a request from a member in our

00:02:04.045 --> 00:02:06.125
<v Speaker 0>Discord community who was like, I really wanna

00:02:06.125 --> 00:02:07.645
<v Speaker 0>see a Rawkode live

00:02:08.845 --> 00:02:09.565
<v Speaker 0>on

00:02:09.724 --> 00:02:11.565
<v Speaker 0>on Okteto. And I was like, alright. Let's

00:02:11.565 --> 00:02:13.724
<v Speaker 0>make this happen. And there we go. And

00:02:13.724 --> 00:02:15.965
<v Speaker 0>here we are today, hopefully showing everybody what's

00:02:15.965 --> 00:02:16.285
<v Speaker 0>happening.

00:02:16.940 --> 00:02:19.099
<v Speaker 0>I do have a comment which does have

00:02:19.099 --> 00:02:21.019
<v Speaker 0>me slightly worried that people suggest that I

00:02:21.019 --> 00:02:22.380
<v Speaker 0>was potentially muted

00:02:22.459 --> 00:02:23.740
<v Speaker 0>during my

00:02:23.819 --> 00:02:25.340
<v Speaker 0>start. I hope not.

00:02:26.379 --> 00:02:27.819
<v Speaker 0>But it's the same waffle that I say

00:02:27.819 --> 00:02:30.140
<v Speaker 0>every time, so you've heard it before. Hopefully.

00:02:30.220 --> 00:02:32.140
<v Speaker 1>Is it you that's muted or me that's

00:02:32.140 --> 00:02:32.379
<v Speaker 1>muted?

00:02:34.405 --> 00:02:36.645
<v Speaker 0>I don't know. We'll we'll just move forward.

00:02:36.645 --> 00:02:39.365
<v Speaker 0>If I was muted, I'm sorry, Russell. Hopefully,

00:02:39.365 --> 00:02:40.565
<v Speaker 0>you can hear me now.

00:02:41.285 --> 00:02:43.205
<v Speaker 0>I'll look into that very future.

00:02:44.325 --> 00:02:46.885
<v Speaker 0>So why don't you give us the the

00:02:46.885 --> 00:02:49.190
<v Speaker 0>all about Ramiro? You wanna tell us about

00:02:50.150 --> 00:02:52.470
<v Speaker 0>oh. We're getting a no voice or screen

00:02:52.470 --> 00:02:53.510
<v Speaker 0>from Sam.

00:02:55.110 --> 00:02:55.510
<v Speaker 0>Oh.

00:03:00.405 --> 00:03:02.885
<v Speaker 0>It looks okay on my end. I will,

00:03:02.885 --> 00:03:04.085
<v Speaker 0>however, check.

00:03:04.325 --> 00:03:05.605
<v Speaker 0>But while we do that, do you wanna

00:03:05.605 --> 00:03:07.525
<v Speaker 0>tell us a little bit about your mural?

00:03:07.525 --> 00:03:09.365
<v Speaker 0>Oh, no. Russell says it was his laptop.

00:03:09.525 --> 00:03:11.364
<v Speaker 0>You all have given me the fear today.

00:03:11.364 --> 00:03:12.245
<v Speaker 0>That's what's happening.

00:03:13.360 --> 00:03:15.600
<v Speaker 1>Just putting us putting us in the spotlight.

00:03:16.959 --> 00:03:19.120
<v Speaker 0>Yeah. I've got the video. I'm now watching

00:03:19.120 --> 00:03:21.120
<v Speaker 0>my own show well, streaming on my own

00:03:21.120 --> 00:03:22.319
<v Speaker 0>show and feel like a bit of a

00:03:22.319 --> 00:03:23.440
<v Speaker 0>dafti, but

00:03:24.560 --> 00:03:25.519
<v Speaker 0>from what I can tell,

00:03:26.205 --> 00:03:28.605
<v Speaker 0>it looks okay. Sorry. Sorry about that, Ramiro.

00:03:28.605 --> 00:03:31.485
<v Speaker 1>Yeah. No worries. Could you tell us a

00:03:31.485 --> 00:03:33.325
<v Speaker 0>little bit about yourself, please? And then we'll

00:03:33.325 --> 00:03:34.765
<v Speaker 0>talk about Okteto after that.

00:03:35.245 --> 00:03:37.245
<v Speaker 1>Yeah. That sounds sounds good. Well, my name

00:03:37.245 --> 00:03:39.965
<v Speaker 1>is Ramiro. I was originally born in Mexico.

00:03:39.965 --> 00:03:41.405
<v Speaker 1>I grew up in in Guadalajara.

00:03:42.160 --> 00:03:44.160
<v Speaker 1>And right after school I went school there

00:03:44.160 --> 00:03:45.520
<v Speaker 1>for for computer science.

00:03:45.840 --> 00:03:48.080
<v Speaker 1>Right after that, I I moved to US.

00:03:48.320 --> 00:03:50.240
<v Speaker 1>I've been living in The US for about,

00:03:50.240 --> 00:03:53.200
<v Speaker 1>oof, eleven, twelve years now. First in Seattle.

00:03:53.775 --> 00:03:55.295
<v Speaker 1>I I used to work at a at

00:03:55.295 --> 00:03:56.975
<v Speaker 1>Microsoft there. I was part of the Azure

00:03:56.975 --> 00:03:58.015
<v Speaker 1>team or

00:03:58.415 --> 00:04:00.255
<v Speaker 1>as it was called back then back then

00:04:00.255 --> 00:04:02.255
<v Speaker 1>dot net services something.

00:04:03.215 --> 00:04:04.495
<v Speaker 1>But ever since then, I've I've been working

00:04:04.495 --> 00:04:05.855
<v Speaker 1>on dev tools, which was one of the

00:04:06.175 --> 00:04:07.695
<v Speaker 1>one of the luckiest things for me was

00:04:07.695 --> 00:04:09.830
<v Speaker 1>I ended up right after school working for

00:04:09.830 --> 00:04:10.470
<v Speaker 1>Azure,

00:04:10.710 --> 00:04:12.630
<v Speaker 1>building, you know, services and dev tools.

00:04:12.790 --> 00:04:15.270
<v Speaker 1>From there, moved to Bay Area, joined a

00:04:15.270 --> 00:04:17.350
<v Speaker 1>startup that a couple of my friends started,

00:04:17.350 --> 00:04:19.750
<v Speaker 1>Elastic Box, a few years ago, kind of

00:04:19.750 --> 00:04:22.695
<v Speaker 1>the DevOps puppet space. And since then, I've

00:04:22.695 --> 00:04:24.455
<v Speaker 1>been working on on different companies and all

00:04:24.455 --> 00:04:26.855
<v Speaker 1>around dev tools. I work in Elasticbox.

00:04:27.095 --> 00:04:28.535
<v Speaker 1>I work for Atlassian where was part of

00:04:28.535 --> 00:04:30.135
<v Speaker 1>the team that was building hip chats and

00:04:30.135 --> 00:04:31.735
<v Speaker 1>a bunch of other internal things.

00:04:31.975 --> 00:04:32.935
<v Speaker 1>And then about

00:04:33.510 --> 00:04:35.670
<v Speaker 1>two and a half years ago, three years,

00:04:36.150 --> 00:04:37.830
<v Speaker 1>I decided to quit my job.

00:04:38.150 --> 00:04:40.310
<v Speaker 1>Two of my closest friends, Pablo and Ramon,

00:04:40.310 --> 00:04:42.310
<v Speaker 1>who were working at Docker and

00:04:43.430 --> 00:04:44.790
<v Speaker 1>Gmail at the time,

00:04:45.270 --> 00:04:46.950
<v Speaker 1>we always had to quit and sort of

00:04:46.950 --> 00:04:49.085
<v Speaker 1>Ted on just because we were we kept

00:04:49.085 --> 00:04:51.005
<v Speaker 1>seeing this all these problems around, you know,

00:04:51.005 --> 00:04:51.965
<v Speaker 1>companies building

00:04:52.285 --> 00:04:54.525
<v Speaker 1>teams building microservices

00:04:54.525 --> 00:04:57.164
<v Speaker 1>on containers, on Kubernetes, and we kept seeing

00:04:57.164 --> 00:04:59.405
<v Speaker 1>that they were having all these awful problems

00:04:59.405 --> 00:05:02.365
<v Speaker 1>around not being very effective and a ton

00:05:02.365 --> 00:05:02.845
<v Speaker 1>of friction.

00:05:03.460 --> 00:05:06.020
<v Speaker 1>And that's how we started Okteto. It was

00:05:06.020 --> 00:05:08.820
<v Speaker 1>first an open source project and slowly

00:05:08.900 --> 00:05:09.620
<v Speaker 1>kinda

00:05:09.780 --> 00:05:11.380
<v Speaker 1>started to take a life of its own,

00:05:11.380 --> 00:05:13.300
<v Speaker 1>and we ended up with a company. Now

00:05:13.300 --> 00:05:15.540
<v Speaker 1>we're, like, busy funded and and building this

00:05:15.540 --> 00:05:16.419
<v Speaker 1>this cool platform.

00:05:17.305 --> 00:05:20.265
<v Speaker 0>Awesome. That's a really great backstory.

00:05:20.665 --> 00:05:23.785
<v Speaker 0>There's something really great about building developer tooling.

00:05:23.785 --> 00:05:25.785
<v Speaker 0>Found I've always been myself slightly,

00:05:25.865 --> 00:05:28.265
<v Speaker 0>you know, pulled towards that. I don't know

00:05:28.265 --> 00:05:29.545
<v Speaker 0>if it's a sector or an industry or

00:05:29.545 --> 00:05:31.180
<v Speaker 0>just tooling in general, but

00:05:31.660 --> 00:05:34.620
<v Speaker 0>it's very rewarding to empower and make developers

00:05:34.620 --> 00:05:36.860
<v Speaker 0>more efficient and happier and just

00:05:37.260 --> 00:05:39.020
<v Speaker 0>get rid of all that toil and pain

00:05:39.020 --> 00:05:40.700
<v Speaker 0>from developing applications.

00:05:40.780 --> 00:05:41.900
<v Speaker 0>Really

00:05:41.900 --> 00:05:44.215
<v Speaker 0>good thing to be working on. So Oh,

00:05:44.215 --> 00:05:45.335
<v Speaker 1>no. %.

00:05:45.335 --> 00:05:46.295
<v Speaker 1>That's always been

00:05:46.694 --> 00:05:47.895
<v Speaker 1>every team I joined

00:05:48.134 --> 00:05:49.335
<v Speaker 1>unintentionally,

00:05:49.335 --> 00:05:51.735
<v Speaker 1>I always been that developer who's always like,

00:05:51.815 --> 00:05:53.574
<v Speaker 1>trying to improve. Like, I remember I joined

00:05:53.574 --> 00:05:55.815
<v Speaker 1>this team with with I won't name them,

00:05:55.815 --> 00:05:56.935
<v Speaker 1>but I joined the team and it was

00:05:56.935 --> 00:05:58.134
<v Speaker 1>like, what? There's there was like, at that

00:05:58.134 --> 00:05:59.590
<v Speaker 1>point, no CI,

00:05:59.830 --> 00:06:01.670
<v Speaker 1>no process. So I was I was spending

00:06:01.670 --> 00:06:03.430
<v Speaker 1>a lot of nights kind of for fun,

00:06:03.430 --> 00:06:05.270
<v Speaker 1>like, setting up, you know, a CI server,

00:06:05.910 --> 00:06:08.150
<v Speaker 1>validation for pull request. It was always about

00:06:08.230 --> 00:06:08.630
<v Speaker 1>I

00:06:09.350 --> 00:06:11.350
<v Speaker 1>just I just enjoyed kinda, building these these

00:06:11.350 --> 00:06:13.405
<v Speaker 1>tools to make make my team more effective,

00:06:13.405 --> 00:06:14.925
<v Speaker 1>have them struggle less, and

00:06:15.325 --> 00:06:17.005
<v Speaker 1>I don't know. It it comes with my

00:06:17.005 --> 00:06:18.445
<v Speaker 1>nature. I've never been able to avoid it.

00:06:18.445 --> 00:06:19.885
<v Speaker 1>Even even when I at some point, I

00:06:19.885 --> 00:06:21.885
<v Speaker 1>was like, I'm done with dev tools. I

00:06:21.885 --> 00:06:23.325
<v Speaker 1>was gonna join Atlassian and went to this

00:06:23.325 --> 00:06:24.125
<v Speaker 1>chat product,

00:06:24.525 --> 00:06:26.285
<v Speaker 1>and I ended up building dev tools behind

00:06:26.285 --> 00:06:28.380
<v Speaker 1>the scenes for my team. So I I

00:06:28.380 --> 00:06:29.740
<v Speaker 1>do like it. I think I think as

00:06:29.740 --> 00:06:31.500
<v Speaker 1>you said, there's there's something really cool about

00:06:31.500 --> 00:06:33.740
<v Speaker 1>being able to empower developers and and really

00:06:33.740 --> 00:06:34.300
<v Speaker 1>help.

00:06:34.540 --> 00:06:36.780
<v Speaker 1>You know, like, good tools really multiply

00:06:36.780 --> 00:06:37.900
<v Speaker 1>a team's effort.

00:06:38.300 --> 00:06:40.300
<v Speaker 1>That is something I've seen. Yeah. And that

00:06:40.300 --> 00:06:42.235
<v Speaker 1>is something that we're trying to to replicate

00:06:42.235 --> 00:06:43.915
<v Speaker 1>with Okteto is is just make people as

00:06:43.915 --> 00:06:44.795
<v Speaker 1>as efficient

00:06:44.955 --> 00:06:46.635
<v Speaker 1>as they can because I I do believe

00:06:46.635 --> 00:06:48.635
<v Speaker 1>that, you know, we can build really cool

00:06:48.635 --> 00:06:50.955
<v Speaker 1>stuff, and and developers have passion to build

00:06:50.955 --> 00:06:53.595
<v Speaker 1>and change the world. So giving them tools

00:06:53.595 --> 00:06:54.955
<v Speaker 1>to make their lives a little bit easier

00:06:54.955 --> 00:06:56.875
<v Speaker 1>so they can focus on their goals and

00:06:56.875 --> 00:06:59.010
<v Speaker 1>not on this low level

00:06:59.170 --> 00:07:00.770
<v Speaker 1>kinda, like, infra

00:07:00.930 --> 00:07:02.450
<v Speaker 1>deployment kinda issues,

00:07:02.770 --> 00:07:03.890
<v Speaker 1>it's super rewarding.

00:07:04.210 --> 00:07:06.050
<v Speaker 0>Yeah. Definitely. I I I think I'm the

00:07:06.050 --> 00:07:08.530
<v Speaker 0>exact same kind of developer as you. Every

00:07:08.530 --> 00:07:10.375
<v Speaker 0>team I've went to is, like, I just

00:07:10.375 --> 00:07:12.535
<v Speaker 0>love finding points of friction and trying to

00:07:12.535 --> 00:07:14.535
<v Speaker 0>automate them away or provide tooling to get

00:07:14.535 --> 00:07:16.215
<v Speaker 0>rid of them and stuff like that. So

00:07:16.215 --> 00:07:18.455
<v Speaker 0>you can tell just by that, I'm very

00:07:18.455 --> 00:07:21.255
<v Speaker 0>excited about looking at something that, you know,

00:07:21.255 --> 00:07:22.455
<v Speaker 0>to the quote from your website, I think

00:07:22.455 --> 00:07:24.695
<v Speaker 0>it's great. Empower developers to innovate and deliver

00:07:24.695 --> 00:07:26.450
<v Speaker 0>cloud native applications faster.

00:07:26.850 --> 00:07:28.610
<v Speaker 0>I would like to do that personally, so

00:07:28.610 --> 00:07:30.450
<v Speaker 0>I'm looking forward to our demo today.

00:07:31.570 --> 00:07:32.850
<v Speaker 0>Okay. Let's

00:07:33.650 --> 00:07:35.250
<v Speaker 0>do you wanna if I ask you what

00:07:35.250 --> 00:07:37.330
<v Speaker 0>Okteto is, do you wanna talk about that,

00:07:37.330 --> 00:07:39.125
<v Speaker 0>or do you wanna dive straight in? Will

00:07:39.125 --> 00:07:40.884
<v Speaker 0>we do both? Let's go. Let's dive straight

00:07:40.884 --> 00:07:42.324
<v Speaker 1>in. I think the best the best way

00:07:42.324 --> 00:07:44.164
<v Speaker 1>to tell you what Okteto is is by

00:07:44.164 --> 00:07:45.285
<v Speaker 1>by you seeing

00:07:45.525 --> 00:07:47.205
<v Speaker 1>what we can do, and and we can

00:07:47.205 --> 00:07:48.645
<v Speaker 1>always just stop in the middle. And if

00:07:48.645 --> 00:07:50.405
<v Speaker 1>anybody has questions, we can ask them answer

00:07:50.405 --> 00:07:52.820
<v Speaker 1>them as we go, I think. Of course.

00:07:52.820 --> 00:07:54.980
<v Speaker 0>Yeah. Definitely, if you are watching just now

00:07:54.980 --> 00:07:57.060
<v Speaker 0>and you want to ask any questions, drop

00:07:57.060 --> 00:07:58.660
<v Speaker 0>them straight into the YouTube chat. We will

00:07:58.660 --> 00:08:00.020
<v Speaker 0>do our best to tackle them as we

00:08:00.020 --> 00:08:01.860
<v Speaker 0>go through our little demo today.

00:08:02.835 --> 00:08:04.915
<v Speaker 0>This is Okteto.com,

00:08:05.315 --> 00:08:07.715
<v Speaker 0>the homepage. There's loads of nice cool things

00:08:07.715 --> 00:08:09.155
<v Speaker 0>here for you to flex through, but we

00:08:09.155 --> 00:08:11.875
<v Speaker 0>are gonna dive straight into the documentation for

00:08:11.875 --> 00:08:12.435
<v Speaker 0>today.

00:08:12.835 --> 00:08:15.074
<v Speaker 0>We will be working through the quick start

00:08:15.074 --> 00:08:17.490
<v Speaker 0>guide, taking a few little segues as we

00:08:17.490 --> 00:08:18.770
<v Speaker 0>go to look at some of the features

00:08:18.770 --> 00:08:21.010
<v Speaker 0>that Okteto provides to you.

00:08:22.370 --> 00:08:22.930
<v Speaker 0>So

00:08:23.890 --> 00:08:25.890
<v Speaker 0>to get started, I am going to register

00:08:26.450 --> 00:08:28.130
<v Speaker 0>for Okteto cloud.

00:08:30.325 --> 00:08:31.845
<v Speaker 0>Log in with GitHub.

00:08:31.925 --> 00:08:33.845
<v Speaker 0>Oh, it popped up over here. That's always

00:08:33.845 --> 00:08:34.485
<v Speaker 0>fun.

00:08:38.325 --> 00:08:39.044
<v Speaker 0>There we go.

00:08:46.660 --> 00:08:49.300
<v Speaker 0>Okay. Ramiro, it is now yours your chance

00:08:49.300 --> 00:08:51.220
<v Speaker 0>to shine. What am I looking at, and

00:08:51.220 --> 00:08:52.420
<v Speaker 0>what is Okteto?

00:08:53.220 --> 00:08:55.300
<v Speaker 1>Right. So that what you're looking at is

00:08:55.300 --> 00:08:57.540
<v Speaker 1>is what we call the developer dashboard.

00:08:57.935 --> 00:09:00.654
<v Speaker 1>When you log in to Okteto, Okteto is

00:09:00.654 --> 00:09:01.295
<v Speaker 1>a

00:09:01.935 --> 00:09:04.895
<v Speaker 1>platform that gives you self-service access to

00:09:05.214 --> 00:09:06.255
<v Speaker 1>Kubernetes.

00:09:06.495 --> 00:09:07.855
<v Speaker 1>One of the first things that we wanted

00:09:07.855 --> 00:09:08.654
<v Speaker 1>to kinda, like,

00:09:09.710 --> 00:09:12.270
<v Speaker 1>build was this management layer on top of

00:09:12.270 --> 00:09:14.670
<v Speaker 1>Kubernetes to automate all the things

00:09:14.910 --> 00:09:17.390
<v Speaker 1>that developers need to do to work. So

00:09:17.390 --> 00:09:19.070
<v Speaker 1>when you log in, the first thing that

00:09:19.070 --> 00:09:21.390
<v Speaker 1>happened is that we already created

00:09:21.470 --> 00:09:24.204
<v Speaker 1>a namespace for you, applied a bunch of,

00:09:24.204 --> 00:09:26.444
<v Speaker 1>like, network policies and and other types of

00:09:26.444 --> 00:09:27.084
<v Speaker 1>policies.

00:09:27.324 --> 00:09:28.925
<v Speaker 1>We create an account for you,

00:09:29.245 --> 00:09:30.764
<v Speaker 1>and we put you in a quota. So

00:09:30.764 --> 00:09:32.125
<v Speaker 1>at this at this point,

00:09:32.524 --> 00:09:34.764
<v Speaker 1>you are ready to start. You could download

00:09:34.764 --> 00:09:37.644
<v Speaker 1>your credentials. You can directly deploy your dev

00:09:37.644 --> 00:09:38.524
<v Speaker 1>environment

00:09:38.500 --> 00:09:39.620
<v Speaker 1>on Okteto.

00:09:39.620 --> 00:09:41.780
<v Speaker 1>And if you follow the the getting inside

00:09:41.780 --> 00:09:43.700
<v Speaker 1>of the guide, that is what's gonna happen.

00:09:43.700 --> 00:09:45.620
<v Speaker 1>And as you deploy applications, you will see

00:09:45.620 --> 00:09:48.100
<v Speaker 1>that this dashboard starts to fill in with

00:09:48.100 --> 00:09:50.660
<v Speaker 1>your apps, your logs, these types of things.

00:09:50.900 --> 00:09:53.365
<v Speaker 1>The idea here is that for, you know,

00:09:53.365 --> 00:09:55.285
<v Speaker 1>80% of your tasks, you're not gonna have

00:09:55.285 --> 00:09:56.805
<v Speaker 1>to go back to the terminal. You could

00:09:56.805 --> 00:09:58.485
<v Speaker 1>just see what's going on with your applications

00:09:58.485 --> 00:10:00.964
<v Speaker 1>and your dev environments right on this dashboard.

00:10:02.005 --> 00:10:04.964
<v Speaker 0>Okay. That sounds cool. So we have to

00:10:04.964 --> 00:10:06.325
<v Speaker 0>get something deployed then. Right?

00:10:06.990 --> 00:10:08.750
<v Speaker 0>Mhmm. I know it's kind of Yeah. That's

00:10:08.750 --> 00:10:10.030
<v Speaker 1>how the whole thing starts. The first thing

00:10:10.030 --> 00:10:13.150
<v Speaker 1>you do is you deploy your dev environment.

00:10:13.790 --> 00:10:15.550
<v Speaker 1>We have a bunch of samples, or you

00:10:15.550 --> 00:10:17.390
<v Speaker 1>can deploy from your own GitHub account.

00:10:18.270 --> 00:10:21.310
<v Speaker 0>Okay. Let's deploy the Okteto movies application.

00:10:21.695 --> 00:10:24.015
<v Speaker 0>No? Yes. That's our sample. So if you

00:10:24.015 --> 00:10:25.375
<v Speaker 1>click on the other tab on the get

00:10:25.375 --> 00:10:26.735
<v Speaker 1>get URL tab

00:10:27.455 --> 00:10:29.615
<v Speaker 1>on the right Yep. That'll give you the

00:10:29.615 --> 00:10:30.975
<v Speaker 1>the shortcuts to the sample.

00:10:31.455 --> 00:10:33.535
<v Speaker 0>Of course. There we go. That's nice.

00:10:34.015 --> 00:10:36.015
<v Speaker 0>Removing friction already. I like that.

00:10:38.019 --> 00:10:39.620
<v Speaker 0>Now I should read the docs. I was

00:10:39.620 --> 00:10:41.380
<v Speaker 0>just gonna click the big deploy button. Go

00:10:41.380 --> 00:10:42.899
<v Speaker 1>ahead and deploy. I I know we're all

00:10:42.899 --> 00:10:44.980
<v Speaker 1>we're all developers. We like to go faster

00:10:44.980 --> 00:10:47.700
<v Speaker 1>things, so deploy. Yeah. I get myself in

00:10:47.700 --> 00:10:48.980
<v Speaker 0>trouble whenever I do that. I mean, I

00:10:48.980 --> 00:10:50.204
<v Speaker 0>don't need the docs. No. No. We'll just

00:10:50.204 --> 00:10:51.885
<v Speaker 0>click this button. We'll do this. We'll oh,

00:10:51.885 --> 00:10:53.725
<v Speaker 0>it's none of nothing works. Sorry. That's that's

00:10:53.805 --> 00:10:55.325
<v Speaker 1>and, honestly, that's what we're trying to accomplish

00:10:55.325 --> 00:10:56.605
<v Speaker 1>here is you should be able to use

00:10:56.605 --> 00:10:59.325
<v Speaker 1>deploy without, like, looking anywhere else. And then

00:10:59.325 --> 00:11:00.765
<v Speaker 1>when you get stuck, you'll find the docs.

00:11:00.765 --> 00:11:03.269
<v Speaker 1>That's that's how I like my tools. Oh,

00:11:03.269 --> 00:11:05.430
<v Speaker 0>definitely. I couldn't agree more. So let me

00:11:05.430 --> 00:11:07.269
<v Speaker 0>try and speculate at what I think is

00:11:07.269 --> 00:11:08.870
<v Speaker 0>happening here, and I guess maybe you can

00:11:08.870 --> 00:11:11.029
<v Speaker 0>correct me if I'm wrong. But looks to

00:11:11.029 --> 00:11:13.190
<v Speaker 0>me like it's CloneDeR repository. Mean, it's telling

00:11:13.190 --> 00:11:14.230
<v Speaker 0>me it's CloneDeR repository.

00:11:15.495 --> 00:11:17.655
<v Speaker 0>That that is a given. We've got an

00:11:17.655 --> 00:11:20.455
<v Speaker 0>Okteto build, which looks very similar to just

00:11:20.455 --> 00:11:23.015
<v Speaker 0>a container image build of some kind with

00:11:23.015 --> 00:11:25.255
<v Speaker 0>a tag and a directory that it's building.

00:11:25.895 --> 00:11:28.295
<v Speaker 0>I'm assuming it's found a Dockerfile and the

00:11:28.295 --> 00:11:30.449
<v Speaker 0>movies directory is built an image, and it

00:11:30.449 --> 00:11:32.850
<v Speaker 0>is just gonna deploy that to this Kubernetes

00:11:32.850 --> 00:11:34.450
<v Speaker 0>cluster that you have provided.

00:11:34.930 --> 00:11:35.890
<v Speaker 0>Is that close?

00:11:36.769 --> 00:11:39.329
<v Speaker 1>Yeah. Yeah. That that's pretty close. So when

00:11:39.329 --> 00:11:41.570
<v Speaker 1>when you create a when you create an

00:11:41.570 --> 00:11:43.575
<v Speaker 1>account on Okteto, some of the other things

00:11:43.575 --> 00:11:45.735
<v Speaker 1>you have access to besides a q a

00:11:45.735 --> 00:11:48.615
<v Speaker 1>cube cluster is that you also have access

00:11:48.615 --> 00:11:50.295
<v Speaker 1>to a remote build service.

00:11:50.455 --> 00:11:52.214
<v Speaker 1>It's a it's a service we're running on

00:11:52.214 --> 00:11:54.935
<v Speaker 1>Okteto cloud. It's powered by BuildKit with some

00:11:54.935 --> 00:11:56.774
<v Speaker 1>changes we made on top of that, and

00:11:56.774 --> 00:11:59.029
<v Speaker 1>also a container registry. And the idea is

00:11:59.029 --> 00:12:01.670
<v Speaker 1>kinda the same, reducing friction. You don't have

00:12:01.670 --> 00:12:03.190
<v Speaker 1>to think about building the image. You don't

00:12:03.190 --> 00:12:04.949
<v Speaker 1>have to think about where you're gonna push

00:12:04.949 --> 00:12:07.190
<v Speaker 1>it. Okteto takes care of all of those

00:12:07.190 --> 00:12:09.110
<v Speaker 1>things. If you look in that repo, you

00:12:09.110 --> 00:12:11.269
<v Speaker 1>see there's an Okteto pipeline file.

00:12:11.589 --> 00:12:12.790
<v Speaker 1>That is a file that you can use

00:12:12.790 --> 00:12:15.185
<v Speaker 1>to tell Okteto how to build and deploy

00:12:15.185 --> 00:12:16.065
<v Speaker 1>your application.

00:12:17.665 --> 00:12:19.585
<v Speaker 1>This case, you'll see we're building. You use

00:12:19.585 --> 00:12:22.705
<v Speaker 1>Okteto build to use the Okteto build service,

00:12:22.945 --> 00:12:26.305
<v Speaker 1>and then just a typical Helm upgrade. In

00:12:26.305 --> 00:12:28.610
<v Speaker 1>this case, we are using the Git commit

00:12:28.610 --> 00:12:31.010
<v Speaker 1>to ensure that we have a unique image.

00:12:31.250 --> 00:12:32.530
<v Speaker 1>And this is one of the patterns you

00:12:32.530 --> 00:12:34.450
<v Speaker 1>see in our samples. It's the idea that

00:12:34.450 --> 00:12:36.610
<v Speaker 1>you deploy, it self contain,

00:12:36.770 --> 00:12:39.410
<v Speaker 1>Okteto builds all the artifacts you need. And

00:12:39.410 --> 00:12:41.330
<v Speaker 1>because you have a shared registry and a

00:12:41.330 --> 00:12:43.225
<v Speaker 1>shared build service, you'll see that a lot

00:12:43.225 --> 00:12:45.144
<v Speaker 1>of these things are way faster than local

00:12:45.144 --> 00:12:46.745
<v Speaker 1>because now you're gonna take advantage of the

00:12:46.745 --> 00:12:48.505
<v Speaker 1>fact that it's running on the cloud.

00:12:48.745 --> 00:12:50.745
<v Speaker 1>And because it's a shared service, you and

00:12:50.745 --> 00:12:52.504
<v Speaker 1>your team are gonna kinda share, like, base

00:12:52.504 --> 00:12:55.464
<v Speaker 1>layers of your containers, certain caches, and things

00:12:55.464 --> 00:12:58.185
<v Speaker 1>like that to make your life easier. You

00:12:57.650 --> 00:12:58.690
<v Speaker 1>click deploy,

00:12:59.090 --> 00:13:00.530
<v Speaker 1>and it builds everything for you.

00:13:00.850 --> 00:13:01.890
<v Speaker 0>Okay. Cool.

00:13:02.450 --> 00:13:04.530
<v Speaker 0>What are the history lines? I'm curious.

00:13:04.930 --> 00:13:07.330
<v Speaker 1>That That's that's interesting. That's part

00:13:08.210 --> 00:13:10.450
<v Speaker 1>of Okteto. Besides Okteto Cloud, and and if

00:13:10.450 --> 00:13:11.970
<v Speaker 1>you walk through the through the demo, you'll

00:13:11.970 --> 00:13:13.490
<v Speaker 1>see it. There's a CLI

00:13:13.755 --> 00:13:16.075
<v Speaker 1>that allows you to develop directly on the

00:13:16.075 --> 00:13:18.395
<v Speaker 1>cluster, and that's what the Okteto Jaml is.

00:13:18.395 --> 00:13:20.395
<v Speaker 1>It's a command that you run locally.

00:13:20.555 --> 00:13:23.115
<v Speaker 1>It will synchronize your code, keep your code

00:13:23.115 --> 00:13:26.875
<v Speaker 1>hot loaded with your container so that dev

00:13:27.480 --> 00:13:29.320
<v Speaker 1>part of the pipeline

00:13:29.400 --> 00:13:30.920
<v Speaker 1>is just a way for you to give

00:13:30.920 --> 00:13:32.680
<v Speaker 1>your team a hint of how to use

00:13:32.680 --> 00:13:35.080
<v Speaker 1>Okteto. If you go back to the UI,

00:13:35.240 --> 00:13:36.840
<v Speaker 1>you'll see there's a button that looks that

00:13:36.840 --> 00:13:37.800
<v Speaker 1>says develop.

00:13:38.280 --> 00:13:40.040
<v Speaker 1>It's that play button on the on the

00:13:40.040 --> 00:13:40.600
<v Speaker 1>left.

00:13:40.920 --> 00:13:42.365
<v Speaker 1>If you click on it, you'll see that

00:13:42.365 --> 00:13:43.805
<v Speaker 1>the the hint pops up.

00:13:44.605 --> 00:13:47.805
<v Speaker 0>So just, yeah, start development? Uh-huh. Yeah. It's

00:13:47.805 --> 00:13:48.685
<v Speaker 1>still one of them.

00:13:49.485 --> 00:13:50.045
<v Speaker 0>Okay.

00:13:50.764 --> 00:13:51.805
<v Speaker 0>Do you want me to correct that now,

00:13:51.805 --> 00:13:53.165
<v Speaker 0>or do you wanna cover anything else on

00:13:53.165 --> 00:13:55.700
<v Speaker 0>this screen? At least, like, the other things

00:13:55.700 --> 00:13:57.700
<v Speaker 1>you see in that screen is when you

00:13:57.700 --> 00:14:00.500
<v Speaker 1>deploy an application, Okteto integrates with cert manager

00:14:00.500 --> 00:14:03.220
<v Speaker 1>to create, like, SSL certificates for your apps,

00:14:03.220 --> 00:14:05.060
<v Speaker 1>and it's gonna give you a public endpoint.

00:14:05.380 --> 00:14:06.740
<v Speaker 1>So, again, you don't have to worry about

00:14:06.740 --> 00:14:08.645
<v Speaker 1>it. The whole idea is you deploy and

00:14:08.645 --> 00:14:10.245
<v Speaker 1>you see your app. This is a live

00:14:10.245 --> 00:14:12.725
<v Speaker 1>link that when you redeploy, it will get

00:14:12.725 --> 00:14:14.005
<v Speaker 1>updated with your code,

00:14:14.645 --> 00:14:16.245
<v Speaker 1>and it's something you can share

00:14:16.565 --> 00:14:18.885
<v Speaker 1>with with anybody. It it works on the

00:14:18.885 --> 00:14:19.525
<v Speaker 1>Internet.

00:14:20.245 --> 00:14:22.085
<v Speaker 1>And, yep, we have this application. It's a

00:14:22.085 --> 00:14:24.885
<v Speaker 1>multi service app used to kinda showcase where

00:14:24.300 --> 00:14:25.740
<v Speaker 1>how Okteto works.

00:14:26.140 --> 00:14:27.500
<v Speaker 1>There's a bit of a bug in that

00:14:27.500 --> 00:14:28.540
<v Speaker 1>app that will

00:14:29.019 --> 00:14:30.620
<v Speaker 1>as part of the of the getting started,

00:14:30.620 --> 00:14:31.899
<v Speaker 1>we'll show you how to fix. Is that

00:14:31.899 --> 00:14:33.420
<v Speaker 0>why I can't watch the equalizer too? Because

00:14:33.420 --> 00:14:34.940
<v Speaker 0>I was getting quite excited there. Are we

00:14:34.940 --> 00:14:35.740
<v Speaker 0>gonna fix it?

00:14:38.060 --> 00:14:38.940
<v Speaker 0>Okay.

00:14:39.260 --> 00:14:41.295
<v Speaker 0>That's that's that's really cool. I love And

00:14:41.295 --> 00:14:42.815
<v Speaker 1>the other thing is if you click on

00:14:42.815 --> 00:14:43.695
<v Speaker 1>the components

00:14:43.935 --> 00:14:46.495
<v Speaker 1>of your application, you see the states and

00:14:46.495 --> 00:14:48.495
<v Speaker 1>you see the logs live from the pod.

00:14:48.735 --> 00:14:50.015
<v Speaker 1>So you don't have to go and run

00:14:50.015 --> 00:14:52.654
<v Speaker 1>Kubectl logs, find the name of the pod,

00:14:52.654 --> 00:14:53.855
<v Speaker 1>and all those things. You can get it

00:14:53.855 --> 00:14:56.230
<v Speaker 1>directly from here. If you if you were

00:14:56.230 --> 00:14:57.750
<v Speaker 1>to have more than one container, you can

00:14:57.750 --> 00:14:58.950
<v Speaker 1>filter by container.

00:14:59.190 --> 00:15:00.390
<v Speaker 1>If you were to have more than one

00:15:00.390 --> 00:15:02.470
<v Speaker 1>pods, you can also filter by pods. And,

00:15:02.470 --> 00:15:05.029
<v Speaker 1>again, it's just about putting the information that

00:15:05.029 --> 00:15:06.149
<v Speaker 1>developers need

00:15:06.630 --> 00:15:08.644
<v Speaker 1>on a dashboard in front of of them

00:15:08.644 --> 00:15:10.084
<v Speaker 1>so they don't have to go digging for

00:15:10.084 --> 00:15:12.485
<v Speaker 1>these things as they are writing their code.

00:15:13.445 --> 00:15:15.045
<v Speaker 0>Nice. I like it.

00:15:15.605 --> 00:15:17.125
<v Speaker 0>You also mentioned I could yeah. There we

00:15:17.125 --> 00:15:19.125
<v Speaker 0>go. I can download the actual KubeConfig if

00:15:19.125 --> 00:15:20.644
<v Speaker 0>I want, and I can just work with

00:15:20.644 --> 00:15:22.245
<v Speaker 0>my development cluster directly.

00:15:23.339 --> 00:15:24.060
<v Speaker 0>Exactly.

00:15:26.700 --> 00:15:29.339
<v Speaker 0>Pretty flexible right at the bat. Okay. That

00:15:29.339 --> 00:15:30.620
<v Speaker 1>is that is part of of of our

00:15:30.620 --> 00:15:33.339
<v Speaker 1>vision there is, you know, dev developers use

00:15:33.339 --> 00:15:35.100
<v Speaker 1>a lot of tools. Every developer has their

00:15:35.100 --> 00:15:35.740
<v Speaker 1>own workflow.

00:15:36.275 --> 00:15:37.795
<v Speaker 1>So for us, it's important to be able

00:15:37.795 --> 00:15:38.915
<v Speaker 1>to integrate with

00:15:39.075 --> 00:15:40.755
<v Speaker 1>everything else on the on the cloud native

00:15:40.755 --> 00:15:42.995
<v Speaker 1>space. Like, you can download the credentials and

00:15:42.995 --> 00:15:44.675
<v Speaker 1>you can use QCTL,

00:15:44.675 --> 00:15:45.555
<v Speaker 1>customize

00:15:45.955 --> 00:15:48.595
<v Speaker 1>anything else you want, helm charts.

00:15:49.260 --> 00:15:51.100
<v Speaker 1>Just we just released an integration with Docker

00:15:51.100 --> 00:15:52.780
<v Speaker 1>Compose. And and the idea is

00:15:53.100 --> 00:15:55.260
<v Speaker 1>we want to empower and extend the developer's

00:15:55.260 --> 00:15:57.420
<v Speaker 1>workflow, but we don't wanna force them in

00:15:57.420 --> 00:15:58.940
<v Speaker 1>a very specific path of, like, you have

00:15:58.940 --> 00:16:01.340
<v Speaker 1>to rewrite your applications to have this or

00:16:01.340 --> 00:16:01.820
<v Speaker 1>that shape.

00:16:02.725 --> 00:16:04.645
<v Speaker 1>So we're trying hard to to do that

00:16:04.645 --> 00:16:07.525
<v Speaker 1>and and giving you access to the Kubernetes

00:16:07.525 --> 00:16:09.525
<v Speaker 1>namespace. It's a it's an important part of

00:16:09.525 --> 00:16:10.005
<v Speaker 1>that.

00:16:10.965 --> 00:16:11.685
<v Speaker 0>Awesome.

00:16:12.085 --> 00:16:13.925
<v Speaker 0>So you said a few minutes ago then

00:16:13.925 --> 00:16:16.005
<v Speaker 0>that I should click on the start development

00:16:16.005 --> 00:16:17.650
<v Speaker 0>on one of these services. Is is that

00:16:17.650 --> 00:16:18.850
<v Speaker 0>still where you wanna go, or should I

00:16:18.850 --> 00:16:20.210
<v Speaker 0>go back to my docs and stop making

00:16:20.210 --> 00:16:20.770
<v Speaker 0>up?

00:16:21.090 --> 00:16:22.370
<v Speaker 1>Go back to the go back to the

00:16:22.370 --> 00:16:24.130
<v Speaker 1>docs and and let's follow those.

00:16:24.530 --> 00:16:25.490
<v Speaker 1>Alright.

00:16:26.450 --> 00:16:28.530
<v Speaker 0>Yes. So we've done this. So we took

00:16:28.530 --> 00:16:30.290
<v Speaker 0>a look at the application. It looks great.

00:16:30.555 --> 00:16:33.274
<v Speaker 0>I have the ability to install the Okteto

00:16:33.274 --> 00:16:34.475
<v Speaker 0>CLI.

00:16:36.154 --> 00:16:37.515
<v Speaker 0>Do you want me to do that?

00:16:37.835 --> 00:16:38.795
<v Speaker 1>Yep.

00:16:39.995 --> 00:16:40.795
<v Speaker 0>Alright.

00:16:41.595 --> 00:16:44.955
<v Speaker 1>Okteto CLI gives you the kinda like the

00:16:44.500 --> 00:16:46.980
<v Speaker 1>computer side like, the terminal side aspect of

00:16:46.980 --> 00:16:47.540
<v Speaker 1>this.

00:16:48.340 --> 00:16:50.900
<v Speaker 1>Run Okteto login to connect

00:16:51.140 --> 00:16:52.420
<v Speaker 1>or main space.

00:16:55.700 --> 00:16:56.660
<v Speaker 0>Yes,

00:16:56.660 --> 00:16:56.900
<v Speaker 0>please.

00:16:59.894 --> 00:17:01.255
<v Speaker 0>Yes. And

00:17:03.255 --> 00:17:05.095
<v Speaker 0>I am logged in. Painless.

00:17:05.095 --> 00:17:05.894
<v Speaker 1>Oh, yeah.

00:17:07.815 --> 00:17:09.015
<v Speaker 0>So that

00:17:09.015 --> 00:17:12.375
<v Speaker 0>has created a context and my local KubeConfig.

00:17:15.910 --> 00:17:18.150
<v Speaker 1>So it's not active just yet, I think.

00:17:18.150 --> 00:17:19.589
<v Speaker 0>Was that gonna be my other

00:17:21.670 --> 00:17:23.910
<v Speaker 1>Yeah. Not yet. So run Okteto run Okteto

00:17:23.910 --> 00:17:24.789
<v Speaker 1>namespace

00:17:26.230 --> 00:17:26.710
<v Speaker 1>first.

00:17:27.265 --> 00:17:28.945
<v Speaker 1>And then one of the things we do

00:17:28.945 --> 00:17:31.184
<v Speaker 1>here, and that's why that command didn't work,

00:17:31.184 --> 00:17:32.625
<v Speaker 1>is that Okteto gives you access to a

00:17:32.625 --> 00:17:35.265
<v Speaker 1>namespace, not the full cluster. And and the

00:17:35.265 --> 00:17:37.424
<v Speaker 1>idea behind this is that as a developer,

00:17:37.665 --> 00:17:40.065
<v Speaker 1>we want you not to care about infrastructure.

00:17:40.065 --> 00:17:40.945
<v Speaker 1>We just want you to care about your

00:17:40.945 --> 00:17:41.345
<v Speaker 1>application.

00:17:41.960 --> 00:17:43.960
<v Speaker 1>So we found, like, the namespace context. The

00:17:43.960 --> 00:17:44.760
<v Speaker 1>namespace

00:17:44.760 --> 00:17:46.600
<v Speaker 1>abstraction is is a good one for that.

00:17:46.600 --> 00:17:48.279
<v Speaker 1>So you just do, like, get pods. Uh-huh.

00:17:50.440 --> 00:17:51.880
<v Speaker 1>And then you have, you know, admin as

00:17:51.880 --> 00:17:53.240
<v Speaker 1>your namespace. You can deploy whatever you want

00:17:53.240 --> 00:17:55.560
<v Speaker 1>there. We apply some policies to make this,

00:17:55.975 --> 00:17:57.654
<v Speaker 1>you know, so you can play well with

00:17:57.654 --> 00:17:59.975
<v Speaker 1>everybody else who's using that that shared infrastructure,

00:17:59.975 --> 00:18:01.735
<v Speaker 1>but you should be able to just run

00:18:01.735 --> 00:18:03.654
<v Speaker 1>your application and anything there.

00:18:04.934 --> 00:18:06.054
<v Speaker 0>Cool. Awesome.

00:18:07.254 --> 00:18:09.495
<v Speaker 0>Okay. So we've run namespace. We've got our

00:18:09.575 --> 00:18:12.080
<v Speaker 0>we've now put down that config with dedicated

00:18:12.080 --> 00:18:13.280
<v Speaker 0>against the service.

00:18:14.000 --> 00:18:16.400
<v Speaker 0>I can now clone the movies repository.

00:18:17.040 --> 00:18:17.679
<v Speaker 0>So

00:18:18.320 --> 00:18:19.520
<v Speaker 0>is this is this

00:18:19.840 --> 00:18:22.000
<v Speaker 0>already a kind of a fork and they're

00:18:22.000 --> 00:18:23.520
<v Speaker 0>getting started guys? Like, there are two different

00:18:23.520 --> 00:18:25.795
<v Speaker 0>ways to get started. Like, assuming if I

00:18:25.795 --> 00:18:28.195
<v Speaker 0>clone this and run these commands locally, I

00:18:28.195 --> 00:18:30.275
<v Speaker 0>can just develop against the cluster. Is that

00:18:30.275 --> 00:18:32.355
<v Speaker 0>different? Mhmm. Maybe I'm making this up now,

00:18:32.355 --> 00:18:33.635
<v Speaker 0>but if what happens if I click to

00:18:33.635 --> 00:18:35.475
<v Speaker 0>start development? Because my my interest is definitely

00:18:35.475 --> 00:18:36.434
<v Speaker 0>peaked now.

00:18:37.155 --> 00:18:38.595
<v Speaker 1>Click on it. That button is is gonna

00:18:38.595 --> 00:18:40.035
<v Speaker 1>show you the the same instructions that the

00:18:40.035 --> 00:18:42.090
<v Speaker 1>getting started will will show you. Okay. It's

00:18:42.090 --> 00:18:43.450
<v Speaker 1>a it's a a way to tell people,

00:18:43.450 --> 00:18:45.610
<v Speaker 1>hey. This is how you use Okteto.

00:18:46.330 --> 00:18:48.010
<v Speaker 1>Because what what happens with Okteto and one

00:18:48.010 --> 00:18:49.690
<v Speaker 1>of the things that we're doing that really

00:18:49.690 --> 00:18:50.649
<v Speaker 1>sets us apart

00:18:50.970 --> 00:18:53.850
<v Speaker 1>is the our our flow is you develop

00:18:54.010 --> 00:18:56.730
<v Speaker 1>you deploy your dev environment on on this

00:18:56.295 --> 00:18:58.855
<v Speaker 1>cluster, so you have an application that's functional.

00:18:59.095 --> 00:19:01.735
<v Speaker 1>And now you use the CLI to start

00:19:01.735 --> 00:19:02.455
<v Speaker 1>developing.

00:19:02.775 --> 00:19:04.935
<v Speaker 1>In this case, this example shows you how

00:19:04.935 --> 00:19:07.335
<v Speaker 1>to develop an API. So you just run

00:19:07.335 --> 00:19:08.455
<v Speaker 1>Okteto up,

00:19:09.740 --> 00:19:10.940
<v Speaker 1>and that will

00:19:11.500 --> 00:19:14.460
<v Speaker 1>transform this application into what we call

00:19:14.700 --> 00:19:15.500
<v Speaker 1>dev

00:19:18.220 --> 00:19:19.500
<v Speaker 1>your dev environment.

00:19:20.060 --> 00:19:21.740
<v Speaker 0>Yeah. That error was just because I was

00:19:21.740 --> 00:19:23.820
<v Speaker 0>using a I already had my config set

00:19:23.820 --> 00:19:25.685
<v Speaker 0>to a relative path, which was never never

00:19:25.685 --> 00:19:26.645
<v Speaker 0>gonna work. So

00:19:29.125 --> 00:19:30.804
<v Speaker 0>that should be fixed now, hopefully.

00:19:33.365 --> 00:19:35.045
<v Speaker 1>Yeah. Yeah. We have to do a lot

00:19:35.045 --> 00:19:36.565
<v Speaker 1>of things on the CLI to to enable

00:19:36.565 --> 00:19:38.245
<v Speaker 1>those sort of things. It's it's not it's

00:19:38.245 --> 00:19:38.485
<v Speaker 1>tricky.

00:19:39.259 --> 00:19:42.539
<v Speaker 1>So what's happening now is you you earlier

00:19:42.539 --> 00:19:43.899
<v Speaker 1>on the on the stream, you showed this

00:19:43.899 --> 00:19:46.220
<v Speaker 1>Okteto dot JAML file. So what's happening now

00:19:46.220 --> 00:19:47.579
<v Speaker 1>is that Okteto is

00:19:47.980 --> 00:19:51.179
<v Speaker 1>using the information on that JAML to transform

00:19:51.605 --> 00:19:55.445
<v Speaker 1>the existing API deployment into your dev environment.

00:19:55.845 --> 00:19:58.485
<v Speaker 1>And transforming means everything from

00:19:59.045 --> 00:20:01.445
<v Speaker 1>relaunching it with a different image. If you

00:20:01.445 --> 00:20:03.125
<v Speaker 1>have a a special container with your dev

00:20:03.125 --> 00:20:03.365
<v Speaker 1>tools,

00:20:04.380 --> 00:20:07.180
<v Speaker 1>getting all your all your code, synchronizing your

00:20:07.180 --> 00:20:07.740
<v Speaker 1>file,

00:20:08.060 --> 00:20:11.100
<v Speaker 1>and forwarding some ports. At this point,

00:20:11.500 --> 00:20:13.660
<v Speaker 1>Okteto open a terminal for you, and you

00:20:13.660 --> 00:20:14.940
<v Speaker 1>are on the dev container.

00:20:16.065 --> 00:20:17.745
<v Speaker 0>Is that what I I did see my

00:20:17.745 --> 00:20:18.864
<v Speaker 0>prompt change,

00:20:18.865 --> 00:20:20.065
<v Speaker 0>and then I rang it Right. That's what

00:20:20.065 --> 00:20:21.745
<v Speaker 1>it changed then. And if you look at

00:20:21.745 --> 00:20:23.985
<v Speaker 1>the at the context and namespace, it's telling

00:20:23.985 --> 00:20:25.585
<v Speaker 1>you where you are. So for instance, just

00:20:25.585 --> 00:20:26.465
<v Speaker 1>dump the environment.

00:20:29.159 --> 00:20:30.279
<v Speaker 1>And you see one of the one of

00:20:30.279 --> 00:20:31.960
<v Speaker 1>the very cool things about this model is

00:20:31.960 --> 00:20:33.960
<v Speaker 1>that you have the same configuration that your

00:20:33.960 --> 00:20:35.399
<v Speaker 1>application has. So you have access to the

00:20:35.399 --> 00:20:36.759
<v Speaker 1>same environment variables.

00:20:36.840 --> 00:20:38.679
<v Speaker 1>This is running with the same identity that

00:20:38.679 --> 00:20:40.840
<v Speaker 1>your application is running. So as you write

00:20:40.840 --> 00:20:41.479
<v Speaker 1>code,

00:20:42.519 --> 00:20:45.115
<v Speaker 1>it's gonna save you that step of writing

00:20:45.115 --> 00:20:46.235
<v Speaker 1>your code locally,

00:20:46.315 --> 00:20:48.155
<v Speaker 1>then push it to Kubernetes, and then test

00:20:48.155 --> 00:20:50.635
<v Speaker 1>it there. And instead, you directly, you know,

00:20:50.635 --> 00:20:52.075
<v Speaker 1>write your code on your ID.

00:20:52.795 --> 00:20:55.915
<v Speaker 1>Okteto will synchronize that to this dev container.

00:20:55.995 --> 00:20:57.915
<v Speaker 1>You can then just run your process there

00:20:58.530 --> 00:20:59.250
<v Speaker 1>and

00:20:59.650 --> 00:21:01.570
<v Speaker 1>test directly in your cluster so that you

00:21:01.570 --> 00:21:03.810
<v Speaker 1>know that your application works with all the

00:21:03.810 --> 00:21:06.290
<v Speaker 1>other pieces that are still there, but they

00:21:06.290 --> 00:21:08.850
<v Speaker 1>are still in what we call production mode,

00:21:08.850 --> 00:21:10.370
<v Speaker 1>which is the same way that your application

00:21:10.370 --> 00:21:10.850
<v Speaker 1>is defined.

00:21:11.445 --> 00:21:14.005
<v Speaker 1>This is just a normal shell terminal. So

00:21:14.005 --> 00:21:16.884
<v Speaker 1>if you run JARN install and JARN start,

00:21:17.044 --> 00:21:18.725
<v Speaker 1>you can just get the the API started

00:21:18.725 --> 00:21:19.044
<v Speaker 1>again.

00:21:26.510 --> 00:21:28.670
<v Speaker 0>Alright. I think it's Well, if you go

00:21:28.670 --> 00:21:30.430
<v Speaker 1>back to the actually, let's do something. Stop

00:21:30.510 --> 00:21:32.830
<v Speaker 1>stop that process. Do a control c,

00:21:33.550 --> 00:21:35.230
<v Speaker 1>and go back go back to the browser

00:21:35.310 --> 00:21:36.430
<v Speaker 1>and and

00:21:36.670 --> 00:21:37.630
<v Speaker 1>hit the application.

00:21:38.775 --> 00:21:39.815
<v Speaker 0>Okay.

00:21:39.815 --> 00:21:42.135
<v Speaker 0>So we wanna hit the front end. We

00:21:42.135 --> 00:21:43.415
<v Speaker 0>wanna click on this link.

00:21:44.535 --> 00:21:46.695
<v Speaker 1>K. You see that now that the API

00:21:46.695 --> 00:21:48.695
<v Speaker 1>is not the application is not loading. That's

00:21:48.695 --> 00:21:50.455
<v Speaker 1>because the API is not running. So now

00:21:50.455 --> 00:21:52.215
<v Speaker 1>go to your dev container and use to

00:21:52.215 --> 00:21:53.095
<v Speaker 1>start the

00:21:54.370 --> 00:21:56.690
<v Speaker 1>but do join dev instead of join start.

00:21:57.090 --> 00:21:59.090
<v Speaker 1>Please join dev. Nope. It's

00:22:00.530 --> 00:22:02.289
<v Speaker 1>open open your ID or

00:22:02.929 --> 00:22:03.809
<v Speaker 1>or yeah. Or that.

00:22:07.845 --> 00:22:09.205
<v Speaker 1>Beam might not be there, and that's on

00:22:09.205 --> 00:22:10.485
<v Speaker 1>purpose because we want you to use your

00:22:10.485 --> 00:22:11.044
<v Speaker 1>ID.

00:22:12.245 --> 00:22:14.085
<v Speaker 1>Oh, Jarmstar. It was Jarmstar.

00:22:16.245 --> 00:22:18.245
<v Speaker 1>There we go. So that will start, in

00:22:18.245 --> 00:22:20.190
<v Speaker 1>this case, the application with NodeMode so so

00:22:20.190 --> 00:22:21.950
<v Speaker 1>that it will hot reload as you make

00:22:21.950 --> 00:22:23.470
<v Speaker 1>changes. So if you go to your ID

00:22:23.470 --> 00:22:25.869
<v Speaker 1>and make a change on the

00:22:26.590 --> 00:22:29.309
<v Speaker 1>on the API code, Okteto will synchronize the

00:22:29.309 --> 00:22:31.629
<v Speaker 1>code, your process will hot reload,

00:22:32.190 --> 00:22:33.389
<v Speaker 1>and you're gonna be able to see the

00:22:33.389 --> 00:22:34.590
<v Speaker 1>changes in real time.

00:22:36.205 --> 00:22:38.124
<v Speaker 0>So modify the code locally,

00:22:38.845 --> 00:22:40.845
<v Speaker 0>and it's gonna be propagated to my dev

00:22:40.845 --> 00:22:43.324
<v Speaker 0>container, which is running on a Kubernetes cluster

00:22:43.325 --> 00:22:44.204
<v Speaker 0>on Okteto.

00:22:45.404 --> 00:22:46.845
<v Speaker 1>Okay. So for instance, the bug I was

00:22:46.845 --> 00:22:48.044
<v Speaker 1>telling you about is if you go to

00:22:48.044 --> 00:22:49.565
<v Speaker 1>the API and go to the go to

00:22:49.565 --> 00:22:51.799
<v Speaker 1>the main file there, I think is the

00:22:52.280 --> 00:22:53.480
<v Speaker 1>server JS,

00:22:55.880 --> 00:22:58.840
<v Speaker 1>and then just navigate through the code and

00:22:58.920 --> 00:23:01.240
<v Speaker 1>find the call to API

00:23:01.720 --> 00:23:02.600
<v Speaker 1>watching,

00:23:03.080 --> 00:23:04.904
<v Speaker 1>which is the next block. Yep.

00:23:05.544 --> 00:23:07.065
<v Speaker 1>So on line 43,

00:23:07.304 --> 00:23:09.544
<v Speaker 1>this application has a bug. I'm gonna

00:23:09.945 --> 00:23:11.705
<v Speaker 1>give you give it away, which is there.

00:23:11.705 --> 00:23:13.705
<v Speaker 1>It's calling the movies collection instead of the

00:23:13.705 --> 00:23:15.785
<v Speaker 1>watching collection. So before you make any changes,

00:23:16.270 --> 00:23:18.030
<v Speaker 1>go to the browser and and reload your

00:23:18.030 --> 00:23:18.749
<v Speaker 1>application

00:23:19.549 --> 00:23:22.110
<v Speaker 1>to kinda get it get our baseline. So

00:23:22.110 --> 00:23:24.670
<v Speaker 1>you will see that both lists, movies and

00:23:24.670 --> 00:23:27.150
<v Speaker 1>continue watching, are the same list and they

00:23:27.150 --> 00:23:29.285
<v Speaker 1>should not be. One should be the movies

00:23:29.285 --> 00:23:30.244
<v Speaker 1>available,

00:23:30.645 --> 00:23:32.725
<v Speaker 1>the other should be the movies that Cindy

00:23:32.725 --> 00:23:33.684
<v Speaker 1>is watching.

00:23:34.245 --> 00:23:35.765
<v Speaker 1>And Cindy is our kinda, like, our our

00:23:35.765 --> 00:23:37.365
<v Speaker 1>persona, our default user.

00:23:38.485 --> 00:23:40.085
<v Speaker 1>That's a funny story, but I'll save that

00:23:40.085 --> 00:23:40.485
<v Speaker 1>for later.

00:23:42.320 --> 00:23:44.400
<v Speaker 0>Okay. So what Okay. What what we're just

00:23:44.400 --> 00:23:46.720
<v Speaker 0>testing is if I update this to be

00:23:46.720 --> 00:23:48.960
<v Speaker 0>the watching collection and hit save as we

00:23:48.960 --> 00:23:49.840
<v Speaker 0>go back Uh-huh.

00:23:50.320 --> 00:23:52.480
<v Speaker 0>We should see that change happen

00:23:52.560 --> 00:23:53.840
<v Speaker 0>at our front end of our application.

00:23:54.424 --> 00:23:56.265
<v Speaker 1>Exactly. So just go back to the go

00:23:56.265 --> 00:23:57.785
<v Speaker 1>back to the front to the browser and

00:23:57.785 --> 00:23:58.504
<v Speaker 1>reload.

00:24:00.424 --> 00:24:02.745
<v Speaker 0>Look at that. And there it is. What

00:24:02.745 --> 00:24:04.025
<v Speaker 0>am I watching? And if you go through

00:24:04.025 --> 00:24:05.465
<v Speaker 1>your terminal, you'll see that

00:24:06.025 --> 00:24:08.480
<v Speaker 1>Node one detected a file chain, reloaded. And

00:24:08.480 --> 00:24:09.840
<v Speaker 1>the cool thing about this is that you're

00:24:09.840 --> 00:24:11.760
<v Speaker 1>testing your changes without having to rebuild your

00:24:11.760 --> 00:24:12.480
<v Speaker 1>containers

00:24:12.640 --> 00:24:14.320
<v Speaker 1>and having to run, you know, a local

00:24:14.320 --> 00:24:16.640
<v Speaker 1>mini cube or any of those things. It's

00:24:16.640 --> 00:24:19.040
<v Speaker 1>just about you focusing on your code, building

00:24:19.040 --> 00:24:19.919
<v Speaker 1>your application,

00:24:20.320 --> 00:24:22.480
<v Speaker 1>and Okteto takes care of all the other

00:24:22.480 --> 00:24:23.680
<v Speaker 1>things underneath.

00:24:26.425 --> 00:24:29.705
<v Speaker 0>Very cool. I I like that. How

00:24:30.505 --> 00:24:32.505
<v Speaker 0>is it syncing the changes from my local

00:24:32.505 --> 00:24:33.304
<v Speaker 0>directory?

00:24:34.425 --> 00:24:36.025
<v Speaker 0>Is that part of the Okteto app?

00:24:37.270 --> 00:24:39.830
<v Speaker 1>Exactly. The Okteto up is doing

00:24:40.310 --> 00:24:42.790
<v Speaker 1>that's, like, three three stages. The first one

00:24:42.790 --> 00:24:44.470
<v Speaker 1>is it's gonna find the deployment.

00:24:44.630 --> 00:24:46.390
<v Speaker 1>And what do you open Okteto.Jamin

00:24:46.390 --> 00:24:49.190
<v Speaker 1>to? Can explain the the different things it's

00:24:49.190 --> 00:24:50.390
<v Speaker 1>doing or maybe this.

00:24:51.225 --> 00:24:54.025
<v Speaker 0>This one or the pipeline? No. Exact. So

00:24:54.025 --> 00:24:55.625
<v Speaker 1>the first thing you have is name.

00:24:55.785 --> 00:24:57.225
<v Speaker 1>That is what's telling

00:24:57.385 --> 00:25:00.505
<v Speaker 1>Okteto which deployment you're gonna target to turn

00:25:00.505 --> 00:25:01.625
<v Speaker 1>into their environment.

00:25:01.945 --> 00:25:03.625
<v Speaker 1>In this case, it's a deployment called API.

00:25:03.780 --> 00:25:06.180
<v Speaker 1>You could also specify a label, selector, and

00:25:06.180 --> 00:25:07.380
<v Speaker 1>more complex things.

00:25:07.700 --> 00:25:09.300
<v Speaker 1>So the first thing that happens is Okteto

00:25:09.300 --> 00:25:10.580
<v Speaker 1>up will find

00:25:11.060 --> 00:25:11.860
<v Speaker 1>will go

00:25:12.340 --> 00:25:14.580
<v Speaker 1>to the cluster and find a deployment named

00:25:14.580 --> 00:25:15.380
<v Speaker 1>API.

00:25:15.700 --> 00:25:16.180
<v Speaker 1>Then

00:25:16.965 --> 00:25:19.365
<v Speaker 1>we have a a mutation webhook that will

00:25:19.365 --> 00:25:22.245
<v Speaker 1>apply certain overrides. In this case, it's just

00:25:22.245 --> 00:25:24.965
<v Speaker 1>a starting command, but you could override environment

00:25:24.965 --> 00:25:26.965
<v Speaker 1>variables, inject more files,

00:25:27.205 --> 00:25:30.690
<v Speaker 1>have extra secrets, like, change your image, anything

00:25:30.690 --> 00:25:31.889
<v Speaker 1>you need to develop.

00:25:32.210 --> 00:25:34.049
<v Speaker 1>So that's the second thing it does. It's

00:25:34.049 --> 00:25:36.129
<v Speaker 1>redeploys your your pot,

00:25:36.289 --> 00:25:38.289
<v Speaker 1>applies this dev overrides,

00:25:38.690 --> 00:25:40.210
<v Speaker 1>and as it boots up,

00:25:40.610 --> 00:25:42.210
<v Speaker 1>then it's gonna do two more things. One

00:25:42.210 --> 00:25:42.770
<v Speaker 1>is

00:25:43.165 --> 00:25:45.565
<v Speaker 1>it's gonna start as a synchronization

00:25:45.565 --> 00:25:46.445
<v Speaker 1>process

00:25:46.525 --> 00:25:47.965
<v Speaker 1>on your local machine,

00:25:48.205 --> 00:25:50.925
<v Speaker 1>and it's gonna inject another synchronization service on

00:25:50.925 --> 00:25:53.005
<v Speaker 1>your container. We use an open source project

00:25:53.005 --> 00:25:54.365
<v Speaker 1>for this called SyncThing,

00:25:54.605 --> 00:25:55.805
<v Speaker 1>and that is what keeps

00:25:56.420 --> 00:25:57.379
<v Speaker 1>the files

00:25:57.620 --> 00:25:59.620
<v Speaker 1>in sync both ways. If you modify a

00:25:59.620 --> 00:26:01.059
<v Speaker 1>file on your local machine,

00:26:01.380 --> 00:26:03.379
<v Speaker 1>it will be synchronized to the container.

00:26:03.780 --> 00:26:05.620
<v Speaker 1>If you change a file on the container,

00:26:05.620 --> 00:26:07.700
<v Speaker 1>it will sync be synchronized back into your

00:26:07.700 --> 00:26:08.260
<v Speaker 1>local machine.

00:26:08.755 --> 00:26:10.675
<v Speaker 1>If you do like a PSOX on either

00:26:10.675 --> 00:26:12.515
<v Speaker 1>your local machine or the container, you will

00:26:12.515 --> 00:26:14.355
<v Speaker 1>see these processes running.

00:26:16.434 --> 00:26:18.355
<v Speaker 0>Well, I mean, I I need to know

00:26:18.355 --> 00:26:19.154
<v Speaker 0>to this.

00:26:20.275 --> 00:26:20.675
<v Speaker 1>Yes.

00:26:22.399 --> 00:26:24.559
<v Speaker 0>So that's an the source directory of the

00:26:24.559 --> 00:26:26.719
<v Speaker 0>API package dot JSON.

00:26:26.720 --> 00:26:27.440
<v Speaker 0>So

00:26:30.240 --> 00:26:31.119
<v Speaker 0>look at that.

00:26:32.000 --> 00:26:33.519
<v Speaker 1>There is. That's pretty cool.

00:26:34.414 --> 00:26:36.174
<v Speaker 1>So that one's pretty useful for instance when

00:26:36.174 --> 00:26:37.855
<v Speaker 1>you do a join install because then it

00:26:37.855 --> 00:26:39.294
<v Speaker 1>synchronize your log file.

00:26:40.174 --> 00:26:41.855
<v Speaker 1>And there's a special file there called dot

00:26:41.855 --> 00:26:44.654
<v Speaker 1>s t ignore where you can configure if

00:26:44.654 --> 00:26:46.174
<v Speaker 1>you don't want things to be changed. Like,

00:26:46.174 --> 00:26:47.934
<v Speaker 1>if you if you want certain files, like,

00:26:47.934 --> 00:26:49.294
<v Speaker 1>you don't want your note modules to be

00:26:49.294 --> 00:26:50.094
<v Speaker 1>synchronized.

00:26:50.174 --> 00:26:51.539
<v Speaker 1>You don't want your dot kit to be

00:26:51.539 --> 00:26:53.380
<v Speaker 1>synchronized, and you can add whatever you need

00:26:53.380 --> 00:26:55.139
<v Speaker 1>there. That's, like, super flexible.

00:26:55.380 --> 00:26:57.140
<v Speaker 1>We create a default based on the on

00:26:57.140 --> 00:26:59.460
<v Speaker 1>the language of your of your repo Mhmm.

00:26:59.539 --> 00:27:00.820
<v Speaker 1>But you can add whatever you want depending

00:27:00.820 --> 00:27:03.059
<v Speaker 1>on your application. You know, 10 files,

00:27:03.460 --> 00:27:05.365
<v Speaker 1>static assets you you only want on your

00:27:05.365 --> 00:27:08.085
<v Speaker 1>container or, you know, test results you only

00:27:08.085 --> 00:27:09.845
<v Speaker 1>want locally, things like that.

00:27:11.765 --> 00:27:12.325
<v Speaker 0>Cool.

00:27:12.645 --> 00:27:14.804
<v Speaker 0>Okay. That makes sense. I I understand that.

00:27:14.804 --> 00:27:16.404
<v Speaker 0>So you said I I can run

00:27:16.725 --> 00:27:20.070
<v Speaker 0>a PS locally or NS over And

00:27:21.990 --> 00:27:24.070
<v Speaker 0>and there's our same thing processes here. And

00:27:24.070 --> 00:27:25.510
<v Speaker 0>again, I guess I just do that locally.

00:27:25.510 --> 00:27:26.710
<v Speaker 0>I'll see the same thing. So there can

00:27:26.710 --> 00:27:28.870
<v Speaker 0>be some of feature. And there's also the

00:27:28.870 --> 00:27:31.429
<v Speaker 1>the update remote, we also start an SSH

00:27:31.429 --> 00:27:33.835
<v Speaker 1>server. So this time that you're seeing

00:27:34.155 --> 00:27:37.595
<v Speaker 1>is actually going over a mix of QCTL

00:27:37.595 --> 00:27:40.075
<v Speaker 1>port forward and an SSH tunnel

00:27:40.635 --> 00:27:42.634
<v Speaker 1>so that you can also forward

00:27:42.955 --> 00:27:44.795
<v Speaker 1>any port you want from local to remote

00:27:44.795 --> 00:27:45.595
<v Speaker 1>or vice versa.

00:27:46.140 --> 00:27:48.540
<v Speaker 1>So for instance, right now, you see that

00:27:48.540 --> 00:27:50.940
<v Speaker 1>Okteto YAML is forwarding port eighty eighty. You

00:27:50.940 --> 00:27:52.780
<v Speaker 1>could go to local host eighty eighty, and

00:27:52.780 --> 00:27:54.299
<v Speaker 1>you're gonna hit the the API.

00:27:56.700 --> 00:27:58.645
<v Speaker 1>What's more fun is that you can also

00:27:58.645 --> 00:28:00.405
<v Speaker 1>use that to forward the port of your

00:28:00.405 --> 00:28:01.284
<v Speaker 1>debugger,

00:28:01.925 --> 00:28:03.765
<v Speaker 1>and then you can do things like debug

00:28:03.765 --> 00:28:04.565
<v Speaker 1>remotely.

00:28:06.325 --> 00:28:07.605
<v Speaker 0>I'm sorry. When should I

00:28:07.925 --> 00:28:10.005
<v Speaker 0>run that? Am I working? The process first.

00:28:10.005 --> 00:28:10.725
<v Speaker 0>Alright. Okay.

00:28:11.890 --> 00:28:13.970
<v Speaker 0>Okay. So sorry. What was the next step?

00:28:13.970 --> 00:28:15.410
<v Speaker 0>I got confused there. I got too excited

00:28:15.410 --> 00:28:17.170
<v Speaker 0>to know what's going on. Go go back

00:28:17.170 --> 00:28:18.370
<v Speaker 1>to the I think where the way you

00:28:18.370 --> 00:28:19.809
<v Speaker 1>run go back to the Versus Code. I

00:28:19.809 --> 00:28:21.970
<v Speaker 1>think that's where we're running the or no.

00:28:21.970 --> 00:28:23.250
<v Speaker 1>It's here, actually. No. Just do the darn

00:28:23.250 --> 00:28:25.835
<v Speaker 1>star there. Yeah. Oh, yeah. I I I

00:28:25.835 --> 00:28:28.154
<v Speaker 0>turned that off. Okay. So we run you

00:28:28.154 --> 00:28:30.394
<v Speaker 0>on start again. Uh-huh. And then open a

00:28:30.394 --> 00:28:31.115
<v Speaker 1>local terminal.

00:28:38.160 --> 00:28:40.880
<v Speaker 0>Okay. That's that's cool. Okay. I like that.

00:28:41.040 --> 00:28:42.480
<v Speaker 1>I think you have to do slash API

00:28:42.480 --> 00:28:44.560
<v Speaker 1>and slash health or something. But, yeah, that

00:28:44.560 --> 00:28:46.640
<v Speaker 1>that enables a little really cool scenarios because

00:28:46.640 --> 00:28:48.960
<v Speaker 1>you can do forward and reverse

00:28:50.320 --> 00:28:51.679
<v Speaker 1>proxy tunnels.

00:28:51.760 --> 00:28:53.280
<v Speaker 1>So you can do, for instance, if you

00:28:53.280 --> 00:28:55.655
<v Speaker 1>have a database running on Kubernetes, you could

00:28:55.655 --> 00:28:57.575
<v Speaker 1>have it piped through Okteto, so you can

00:28:57.575 --> 00:28:59.175
<v Speaker 1>still run your local I don't know, like

00:28:59.175 --> 00:29:00.615
<v Speaker 1>the MongoDB IDE.

00:29:00.615 --> 00:29:02.615
<v Speaker 1>Or if you want to run debugger,

00:29:02.695 --> 00:29:05.175
<v Speaker 1>like this project comes configured to use debugger.

00:29:05.175 --> 00:29:07.335
<v Speaker 1>So you could start the node process on

00:29:07.335 --> 00:29:09.980
<v Speaker 1>a debugger, and then Versus Code debug and

00:29:09.980 --> 00:29:13.019
<v Speaker 1>do step by step debugging on the ID

00:29:13.020 --> 00:29:15.500
<v Speaker 1>with a process that's running on the container.

00:29:15.500 --> 00:29:17.580
<v Speaker 1>And and all of this goes back to

00:29:17.580 --> 00:29:18.779
<v Speaker 1>same idea of

00:29:19.100 --> 00:29:20.860
<v Speaker 1>we wanna make it easy for developers to

00:29:20.860 --> 00:29:23.475
<v Speaker 1>develop the same way they do locally, but

00:29:23.475 --> 00:29:25.394
<v Speaker 1>expand that to, like, an entire

00:29:25.555 --> 00:29:27.795
<v Speaker 1>namespace or an entire cluster in in certain

00:29:27.795 --> 00:29:28.674
<v Speaker 1>scenarios.

00:29:29.235 --> 00:29:29.875
<v Speaker 1>And,

00:29:30.195 --> 00:29:31.795
<v Speaker 1>yeah, and one cool thing about the the

00:29:31.795 --> 00:29:34.275
<v Speaker 1>Okteto CLI is that today, you're using it

00:29:34.275 --> 00:29:35.315
<v Speaker 1>with Okteto cloud,

00:29:35.950 --> 00:29:38.270
<v Speaker 1>but, actually, the CLI works with any Kubernetes

00:29:38.270 --> 00:29:40.110
<v Speaker 1>cluster. If you have your own,

00:29:40.510 --> 00:29:43.150
<v Speaker 1>if you have mini cube, k three s,

00:29:43.710 --> 00:29:45.390
<v Speaker 1>any of those, it just works. As long

00:29:45.390 --> 00:29:46.750
<v Speaker 1>as it's Kubernetes compatible

00:29:46.830 --> 00:29:49.390
<v Speaker 1>and you have a cube config, it will

00:29:49.390 --> 00:29:50.910
<v Speaker 1>just use that. So it's something that you

00:29:50.910 --> 00:29:52.525
<v Speaker 1>can use even if you don't wanna use

00:29:52.525 --> 00:29:54.605
<v Speaker 1>the rest of the of the platform, even

00:29:54.605 --> 00:29:56.205
<v Speaker 1>if you don't wanna use the cloud

00:29:56.525 --> 00:29:58.685
<v Speaker 1>or we also have a self hosted version

00:29:58.685 --> 00:30:00.205
<v Speaker 1>of Okteto cloud that you can install on

00:30:00.205 --> 00:30:01.805
<v Speaker 1>any cluster. If you don't wanna use those

00:30:01.805 --> 00:30:04.285
<v Speaker 1>things, you can still benefit from this flow

00:30:04.285 --> 00:30:07.950
<v Speaker 1>of dev container, sync your code, hover load

00:30:07.950 --> 00:30:10.350
<v Speaker 1>super fast. So that's a that's something that

00:30:10.350 --> 00:30:12.190
<v Speaker 1>a lot of our users really, really like

00:30:12.190 --> 00:30:14.750
<v Speaker 1>as they build things in MinIQ, in p

00:30:14.750 --> 00:30:16.909
<v Speaker 1>three s, or anywhere else.

00:30:17.310 --> 00:30:19.390
<v Speaker 1>I personally believe that people should not be

00:30:19.390 --> 00:30:21.950
<v Speaker 1>running clusters and use, a remote thing, but

00:30:22.485 --> 00:30:24.885
<v Speaker 1>different developers have different workflows. And, you know,

00:30:24.885 --> 00:30:26.644
<v Speaker 1>we all work with what works for us.

00:30:27.684 --> 00:30:29.605
<v Speaker 0>Okay. I just wanna make sure I understood

00:30:29.605 --> 00:30:32.005
<v Speaker 0>that right. I can run Okteto up with

00:30:32.005 --> 00:30:33.845
<v Speaker 0>a cube config pointed to my own cluster,

00:30:34.340 --> 00:30:36.100
<v Speaker 0>and I get all of the same ability

00:30:36.100 --> 00:30:38.580
<v Speaker 0>to develop my application and Versus code and

00:30:38.580 --> 00:30:40.180
<v Speaker 0>do the debugging if I want with the

00:30:40.180 --> 00:30:42.019
<v Speaker 0>shared ports and sync thing.

00:30:42.740 --> 00:30:44.500
<v Speaker 0>But I I won't get any of

00:30:45.140 --> 00:30:46.900
<v Speaker 0>this, the UI. Right? But I I I

00:30:46.980 --> 00:30:48.820
<v Speaker 1>Exactly. You don't want the UI. You don't

00:30:48.820 --> 00:30:49.780
<v Speaker 1>get the build service.

00:30:50.415 --> 00:30:52.335
<v Speaker 1>You don't get the automatic

00:30:52.415 --> 00:30:53.615
<v Speaker 1>ingress creation.

00:30:53.775 --> 00:30:55.375
<v Speaker 1>All those things is what the platform gives

00:30:55.375 --> 00:30:57.855
<v Speaker 1>you. Well, the core dev experience of

00:30:58.255 --> 00:31:01.455
<v Speaker 1>dev environment on Kubernetes, sync my code, port

00:31:01.455 --> 00:31:01.935
<v Speaker 1>forwards,

00:31:02.440 --> 00:31:04.600
<v Speaker 1>terminal to the container, all that works on

00:31:04.600 --> 00:31:05.880
<v Speaker 1>any Kubernetes cluster.

00:31:06.200 --> 00:31:07.400
<v Speaker 0>Okay. But

00:31:07.880 --> 00:31:09.480
<v Speaker 0>I don't use the UI.

00:31:09.880 --> 00:31:12.200
<v Speaker 0>I haven't given you any credit card details.

00:31:12.200 --> 00:31:14.600
<v Speaker 0>I'm assuming there's a a nice flexible free

00:31:14.600 --> 00:31:16.600
<v Speaker 0>tier there for anyone to sign up and

00:31:16.600 --> 00:31:18.804
<v Speaker 0>use. But what what you're using right now

00:31:18.804 --> 00:31:20.004
<v Speaker 1>is the free tier.

00:31:20.965 --> 00:31:23.125
<v Speaker 1>That one will let you create up to,

00:31:23.125 --> 00:31:24.724
<v Speaker 1>I think, three namespaces,

00:31:25.125 --> 00:31:26.485
<v Speaker 1>and you can run up to 10 parts

00:31:26.485 --> 00:31:28.485
<v Speaker 1>per namespace. So it's a it's pretty flexible.

00:31:28.485 --> 00:31:30.509
<v Speaker 1>And, yeah, here is it's enough for you

00:31:30.509 --> 00:31:31.629
<v Speaker 1>to build an application.

00:31:32.110 --> 00:31:34.269
<v Speaker 1>And and what else it has?

00:31:35.230 --> 00:31:36.669
<v Speaker 1>You have us to a build service, to

00:31:36.669 --> 00:31:38.830
<v Speaker 1>the registry. There's also, like, secrets you can

00:31:38.830 --> 00:31:40.429
<v Speaker 1>create if you want to have a,

00:31:40.750 --> 00:31:44.350
<v Speaker 1>like, m bars overwritten during deployment time. And

00:31:44.350 --> 00:31:44.830
<v Speaker 1>then

00:31:45.295 --> 00:31:47.935
<v Speaker 1>the there's a pay tier, which gives you

00:31:47.935 --> 00:31:50.895
<v Speaker 1>more CPU, more memory, and more pods in

00:31:50.895 --> 00:31:52.815
<v Speaker 1>case you have a a bigger application that

00:31:52.895 --> 00:31:54.735
<v Speaker 1>doesn't fit on on this tier.

00:31:55.535 --> 00:31:57.855
<v Speaker 0>It's that that free tier, I think, will

00:31:57.855 --> 00:31:59.510
<v Speaker 0>be great for many small teams or even

00:31:59.510 --> 00:32:01.590
<v Speaker 0>solo developers. So they just don't really want

00:32:01.590 --> 00:32:02.950
<v Speaker 0>to worry about any of this stuff, and

00:32:02.950 --> 00:32:05.270
<v Speaker 0>they can get started super quick. So That

00:32:05.270 --> 00:32:06.549
<v Speaker 1>is that is the yeah. That is the

00:32:06.549 --> 00:32:08.070
<v Speaker 1>idea with with when we were building

00:32:08.470 --> 00:32:10.150
<v Speaker 1>everything has started with the open source project.

00:32:10.150 --> 00:32:11.750
<v Speaker 1>And as we show that to people, the

00:32:11.750 --> 00:32:12.230
<v Speaker 1>CLI,

00:32:12.664 --> 00:32:14.585
<v Speaker 1>one of the first things that a lot

00:32:14.585 --> 00:32:16.024
<v Speaker 1>of our friends told us was,

00:32:16.345 --> 00:32:18.025
<v Speaker 1>this is great, but I don't wanna run

00:32:18.025 --> 00:32:19.385
<v Speaker 1>a cluster. I don't wanna run a dev

00:32:19.385 --> 00:32:21.304
<v Speaker 1>cluster. Or someone who was, like, in IT

00:32:21.304 --> 00:32:22.825
<v Speaker 1>was, I don't wanna give my dev team

00:32:22.825 --> 00:32:24.825
<v Speaker 1>a dev cluster because they're gonna keep, you

00:32:24.825 --> 00:32:27.544
<v Speaker 1>know, harassing me with, like, tickets and things

00:32:27.544 --> 00:32:29.460
<v Speaker 1>to do. And that's where the idea to

00:32:29.460 --> 00:32:30.820
<v Speaker 1>build this came to us. It was like,

00:32:30.820 --> 00:32:33.059
<v Speaker 1>okay. Maybe we can build this other component

00:32:33.300 --> 00:32:36.179
<v Speaker 1>to give you self-service access to a cluster,

00:32:36.340 --> 00:32:38.180
<v Speaker 1>apply all these policies so it can be

00:32:38.180 --> 00:32:39.779
<v Speaker 1>shared among a team

00:32:40.020 --> 00:32:42.020
<v Speaker 1>so I can, like, override your changes and

00:32:42.020 --> 00:32:44.835
<v Speaker 1>things like that. And that's how this other

00:32:44.835 --> 00:32:45.955
<v Speaker 1>product came to be.

00:32:46.515 --> 00:32:48.915
<v Speaker 1>And another thing also is that we also

00:32:48.915 --> 00:32:50.915
<v Speaker 1>have a self hosted version of Okteto Cloud.

00:32:50.915 --> 00:32:52.595
<v Speaker 1>So if you have your own cluster,

00:32:53.155 --> 00:32:55.155
<v Speaker 1>it's only a home install, and it's also

00:32:55.315 --> 00:32:56.755
<v Speaker 1>it's free for teams of up to three

00:32:56.755 --> 00:32:57.475
<v Speaker 1>developers.

00:32:57.715 --> 00:32:59.340
<v Speaker 1>So for small teams who have their own

00:32:59.340 --> 00:33:01.340
<v Speaker 1>clusters, you can just get the same experience

00:33:01.340 --> 00:33:02.380
<v Speaker 1>you saw today

00:33:02.460 --> 00:33:03.020
<v Speaker 1>on

00:33:03.340 --> 00:33:05.180
<v Speaker 1>on your own cluster, which is it's also

00:33:05.180 --> 00:33:06.860
<v Speaker 1>useful if if you need to connect to

00:33:06.860 --> 00:33:09.340
<v Speaker 1>VPCs or running a specialized hardware.

00:33:09.420 --> 00:33:10.700
<v Speaker 1>Yep. We have a lot of users that

00:33:10.700 --> 00:33:13.515
<v Speaker 1>run Okteto on, like, clusters with GPUs, and

00:33:13.515 --> 00:33:15.435
<v Speaker 1>then they do, like they run their machine

00:33:15.435 --> 00:33:17.115
<v Speaker 1>learn machine learning models

00:33:17.355 --> 00:33:19.675
<v Speaker 1>through this kinda, like, remote terminal. And it's

00:33:19.675 --> 00:33:20.635
<v Speaker 1>kinda a very cool

00:33:20.955 --> 00:33:24.155
<v Speaker 1>very cool way to to mix Kubernetes and,

00:33:24.155 --> 00:33:25.595
<v Speaker 1>you know, the power of having the cloud

00:33:25.595 --> 00:33:26.955
<v Speaker 1>with, like, all the CPUs

00:33:27.115 --> 00:33:29.275
<v Speaker 1>and still get this really fast dev cycle.

00:33:30.530 --> 00:33:31.570
<v Speaker 0>Awesome.

00:33:32.210 --> 00:33:34.210
<v Speaker 0>Alright. We kinda went on a little

00:33:34.530 --> 00:33:37.330
<v Speaker 0>tour there. Let's jump back to our docs.

00:33:38.210 --> 00:33:39.730
<v Speaker 0>Let's see if it seems there's anything that

00:33:39.730 --> 00:33:41.250
<v Speaker 0>we've missed, and then we can kinda take

00:33:41.250 --> 00:33:42.530
<v Speaker 0>a look at maybe some of those other

00:33:42.530 --> 00:33:44.644
<v Speaker 0>features that Okteto brings to the table. So

00:33:44.644 --> 00:33:47.284
<v Speaker 0>we did do the Okteto up. There's the

00:33:47.284 --> 00:33:49.605
<v Speaker 0>information about the fail synchronization,

00:33:49.605 --> 00:33:50.964
<v Speaker 0>the container ports.

00:33:51.524 --> 00:33:53.445
<v Speaker 0>We did look at the environment variables. We've

00:33:53.445 --> 00:33:55.044
<v Speaker 0>seen all of that stuff being done. We

00:33:55.044 --> 00:33:57.250
<v Speaker 0>did do this. I think we well done.

00:33:57.250 --> 00:33:58.770
<v Speaker 0>You went through the the getting started guide

00:33:58.770 --> 00:34:00.530
<v Speaker 0>without even having to reference it. That's pretty

00:34:00.530 --> 00:34:01.169
<v Speaker 0>sweet.

00:34:03.010 --> 00:34:04.850
<v Speaker 1>Alright. I have done this demo once or

00:34:04.850 --> 00:34:07.169
<v Speaker 1>twice before. Maybe. Alright.

00:34:08.850 --> 00:34:10.835
<v Speaker 0>Well, let's pick a couple of more things

00:34:10.835 --> 00:34:12.514
<v Speaker 0>from this left hand sidebar that you think

00:34:12.514 --> 00:34:14.435
<v Speaker 0>might be interesting to to talk about. And

00:34:14.435 --> 00:34:15.795
<v Speaker 0>then I know that you've got

00:34:16.355 --> 00:34:17.875
<v Speaker 0>another demo that you would like to do

00:34:17.875 --> 00:34:18.835
<v Speaker 0>for us so we can take a look

00:34:18.835 --> 00:34:19.875
<v Speaker 0>at that after that.

00:34:20.275 --> 00:34:21.875
<v Speaker 1>Right. Well, one thing that you already mentioned

00:34:21.875 --> 00:34:24.114
<v Speaker 1>is the the Kubernetes credentials feature,

00:34:24.320 --> 00:34:26.960
<v Speaker 1>is you can download the the kube config

00:34:27.520 --> 00:34:29.520
<v Speaker 1>through a UI or through a command line,

00:34:29.920 --> 00:34:31.840
<v Speaker 1>and that enables you to use Okteto with

00:34:31.840 --> 00:34:32.800
<v Speaker 1>pretty much any

00:34:33.040 --> 00:34:34.719
<v Speaker 1>whatever your favorite dev tool is.

00:34:35.280 --> 00:34:37.119
<v Speaker 1>Anything that doesn't require you to have access

00:34:37.119 --> 00:34:38.880
<v Speaker 1>to the full cluster, so anything that works

00:34:39.324 --> 00:34:41.804
<v Speaker 1>a namespace level will work with Okteto. So

00:34:41.804 --> 00:34:42.605
<v Speaker 1>Lens,

00:34:43.005 --> 00:34:44.045
<v Speaker 1>k nine's,

00:34:45.085 --> 00:34:46.445
<v Speaker 1>customized helm,

00:34:46.525 --> 00:34:47.485
<v Speaker 1>QCTL,

00:34:47.485 --> 00:34:48.605
<v Speaker 1>any of these things.

00:34:49.165 --> 00:34:50.845
<v Speaker 1>We've partnered with companies like

00:34:51.324 --> 00:34:54.364
<v Speaker 1>Chaos Native, Litmus Chaos, works in Okteto. You

00:34:53.989 --> 00:34:55.989
<v Speaker 1>can run your case experiments there. Things like

00:34:55.989 --> 00:34:57.990
<v Speaker 1>that. That's one that's one thing that's really

00:34:57.990 --> 00:34:58.550
<v Speaker 1>cool.

00:34:58.869 --> 00:35:01.190
<v Speaker 1>The other is the the namespaces feature,

00:35:01.270 --> 00:35:02.789
<v Speaker 1>which is, like, you can create more than

00:35:02.789 --> 00:35:03.750
<v Speaker 1>one namespace.

00:35:04.549 --> 00:35:06.230
<v Speaker 1>You can do it directly from the UI.

00:35:06.375 --> 00:35:08.055
<v Speaker 1>There's a button there, new namespace, and you

00:35:08.055 --> 00:35:09.415
<v Speaker 1>just create more namespaces.

00:35:11.175 --> 00:35:12.855
<v Speaker 1>What I like about that is that Okteto

00:35:12.855 --> 00:35:15.255
<v Speaker 1>manages everything, the namespace creation,

00:35:15.895 --> 00:35:16.455
<v Speaker 1>the

00:35:16.855 --> 00:35:19.175
<v Speaker 1>permissions, all those things are just for you.

00:35:19.175 --> 00:35:21.895
<v Speaker 1>But you can always share namespaces with anybody

00:35:21.895 --> 00:35:22.055
<v Speaker 1>else.

00:35:22.750 --> 00:35:24.830
<v Speaker 1>One of the cool things about training spaces

00:35:24.910 --> 00:35:25.790
<v Speaker 1>is that

00:35:26.350 --> 00:35:28.110
<v Speaker 1>right now, you did Okteto up on the

00:35:28.110 --> 00:35:30.110
<v Speaker 1>API, but you can actually do Okteto up

00:35:30.110 --> 00:35:32.190
<v Speaker 1>on any service. I you could share your

00:35:32.190 --> 00:35:33.230
<v Speaker 1>namespace with me.

00:35:33.550 --> 00:35:35.805
<v Speaker 1>I can then go to Okteto up on

00:35:35.805 --> 00:35:36.685
<v Speaker 1>the front end,

00:35:37.165 --> 00:35:38.765
<v Speaker 1>and then we can be working together,

00:35:39.005 --> 00:35:41.085
<v Speaker 1>maybe working on new API or a new

00:35:41.085 --> 00:35:42.205
<v Speaker 1>version of the application

00:35:42.365 --> 00:35:44.205
<v Speaker 1>without me having to wait for you to

00:35:44.205 --> 00:35:45.965
<v Speaker 1>be done and send me a PR,

00:35:46.045 --> 00:35:48.170
<v Speaker 1>and they have to start the thing myself.

00:35:48.170 --> 00:35:49.930
<v Speaker 1>So even if it was the sharing namespaces

00:35:49.930 --> 00:35:52.250
<v Speaker 1>enables a really cool flow. Or even if

00:35:52.250 --> 00:35:54.569
<v Speaker 1>you just want, hey. I need help. Here.

00:35:54.569 --> 00:35:56.010
<v Speaker 1>Let me share my namespace,

00:35:56.089 --> 00:35:57.369
<v Speaker 1>and then you can see the logs of

00:35:57.369 --> 00:35:58.890
<v Speaker 1>my pods. You can see what I deployed.

00:35:59.335 --> 00:36:01.015
<v Speaker 1>It's a it's a really interesting way to

00:36:01.255 --> 00:36:03.335
<v Speaker 1>especially for teams that are remote Yeah. And

00:36:03.335 --> 00:36:04.935
<v Speaker 1>where it might be hard to get someone

00:36:04.935 --> 00:36:06.535
<v Speaker 1>to kinda, hey. Come over to my desk

00:36:06.615 --> 00:36:08.535
<v Speaker 1>and see what's going on. It's a it's

00:36:08.535 --> 00:36:10.215
<v Speaker 1>a simple way to to kinda get that

00:36:10.215 --> 00:36:12.170
<v Speaker 1>started. So that's that's something that I I

00:36:12.170 --> 00:36:13.850
<v Speaker 1>use a lot personally, and I I like

00:36:13.850 --> 00:36:15.770
<v Speaker 1>it I like it as a as a

00:36:15.770 --> 00:36:17.210
<v Speaker 1>way to, you know, make my team I

00:36:17.210 --> 00:36:18.890
<v Speaker 1>am going back to the same theme of

00:36:18.890 --> 00:36:20.890
<v Speaker 1>making the team more efficient. That's something that's

00:36:20.890 --> 00:36:21.610
<v Speaker 1>really cool.

00:36:21.930 --> 00:36:24.170
<v Speaker 0>Do you develop Okteto on Okteto?

00:36:24.490 --> 00:36:27.125
<v Speaker 1>Yes. We do. Yeah. We

00:36:27.845 --> 00:36:29.525
<v Speaker 1>use it for for everything. Like,

00:36:30.165 --> 00:36:31.525
<v Speaker 1>it's as and it's getting back to what

00:36:31.525 --> 00:36:32.565
<v Speaker 1>you were saying. One of the one of

00:36:32.565 --> 00:36:34.724
<v Speaker 1>the best things for me about building dev

00:36:34.724 --> 00:36:35.365
<v Speaker 1>tools

00:36:35.765 --> 00:36:37.285
<v Speaker 1>is that I'm a developer.

00:36:37.445 --> 00:36:40.020
<v Speaker 1>So it's something that you're building for yourself.

00:36:40.020 --> 00:36:42.180
<v Speaker 1>Like, I use all those features. Like, every

00:36:42.420 --> 00:36:44.740
<v Speaker 1>each of these features came either because we

00:36:44.740 --> 00:36:45.700
<v Speaker 1>had a need

00:36:46.020 --> 00:36:48.500
<v Speaker 1>or someone someone from our community, hey. I

00:36:48.500 --> 00:36:49.860
<v Speaker 1>wanna do this other thing.

00:36:50.515 --> 00:36:52.115
<v Speaker 1>And and that's a really cool way. And

00:36:52.115 --> 00:36:53.475
<v Speaker 1>I I don't know about other

00:36:54.435 --> 00:36:56.355
<v Speaker 1>spaces, but on DevTools, it's a really cool

00:36:56.355 --> 00:36:58.195
<v Speaker 1>thing that I know, hey. This is something

00:36:58.195 --> 00:36:59.795
<v Speaker 1>useful because I would use it. And if

00:36:59.795 --> 00:37:01.475
<v Speaker 1>this is the beginning, that helps a lot

00:37:01.475 --> 00:37:03.800
<v Speaker 1>to kinda keep you keep you focused and

00:37:03.800 --> 00:37:05.880
<v Speaker 1>motivated on on those things. Yeah. I I

00:37:05.880 --> 00:37:07.560
<v Speaker 0>think that's just great advice to get to

00:37:07.560 --> 00:37:09.880
<v Speaker 0>anyone that's thinking of starting a a company

00:37:09.880 --> 00:37:11.560
<v Speaker 0>or building a product. Like, if you're solving

00:37:11.560 --> 00:37:13.480
<v Speaker 0>a problem that you have, there's a good

00:37:13.480 --> 00:37:15.160
<v Speaker 0>chance that, a, you're gonna be invested in

00:37:15.160 --> 00:37:17.855
<v Speaker 0>it emotionally as well and continue to work

00:37:17.855 --> 00:37:19.615
<v Speaker 0>on it even when things get tough. But

00:37:19.615 --> 00:37:20.895
<v Speaker 0>you're also solving a problem that, you know,

00:37:20.895 --> 00:37:23.215
<v Speaker 0>exists and hopefully other people have. And I

00:37:23.215 --> 00:37:25.295
<v Speaker 0>think, yeah, just working in that space, working

00:37:25.775 --> 00:37:27.215
<v Speaker 0>it's really difficult to say, I wanna go

00:37:27.215 --> 00:37:28.575
<v Speaker 0>fix this problem with this person over here

00:37:28.575 --> 00:37:30.350
<v Speaker 0>if you don't have that problem. So, yeah,

00:37:30.350 --> 00:37:32.590
<v Speaker 0>a really good thing. Yeah. It's definitely

00:37:32.830 --> 00:37:34.510
<v Speaker 1>and you you're right on motivation. It and

00:37:34.510 --> 00:37:35.550
<v Speaker 1>it's so much

00:37:36.270 --> 00:37:38.110
<v Speaker 1>easier when a developer comes to me and

00:37:38.110 --> 00:37:39.870
<v Speaker 1>say, hey. I'm trying to deploy this Go

00:37:39.870 --> 00:37:41.150
<v Speaker 1>app, and I have this issue. Like, oh,

00:37:41.150 --> 00:37:42.590
<v Speaker 1>yeah. Right. Let me help you, and we'll

00:37:42.590 --> 00:37:44.355
<v Speaker 1>debug it together. And, yeah, you're right. We're

00:37:44.355 --> 00:37:45.795
<v Speaker 1>missing this feature, and then we'll go and

00:37:45.795 --> 00:37:47.795
<v Speaker 1>implement that. And then we'll go back to

00:37:47.795 --> 00:37:49.395
<v Speaker 1>this developer and show him the feature and

00:37:49.395 --> 00:37:50.595
<v Speaker 1>and should be very excited.

00:37:50.835 --> 00:37:52.515
<v Speaker 1>It's a it's a really nice flow that

00:37:52.515 --> 00:37:54.755
<v Speaker 1>that I like a lot. So it's it's

00:37:54.755 --> 00:37:56.355
<v Speaker 1>part of why why I'm on this business.

00:37:57.530 --> 00:37:58.330
<v Speaker 0>Definitely.

00:37:58.410 --> 00:38:00.570
<v Speaker 1>Another cool thing, if you wanna take a

00:38:00.570 --> 00:38:02.410
<v Speaker 1>dive, is go into the deploy methods

00:38:03.130 --> 00:38:05.290
<v Speaker 1>on the left. Yep.

00:38:05.770 --> 00:38:06.490
<v Speaker 0>Mhmm.

00:38:06.890 --> 00:38:08.570
<v Speaker 1>So that's that's that's something. And then go

00:38:08.570 --> 00:38:08.970
<v Speaker 1>on git.

00:38:09.855 --> 00:38:10.575
<v Speaker 1>Yep.

00:38:11.135 --> 00:38:12.975
<v Speaker 1>So one one thing we didn't cover and

00:38:12.975 --> 00:38:13.935
<v Speaker 1>that's quite

00:38:14.575 --> 00:38:16.815
<v Speaker 1>powerful is that Okteto allows you to deploy

00:38:17.055 --> 00:38:18.655
<v Speaker 1>when you click deploy, you can deploy an

00:38:18.655 --> 00:38:19.375
<v Speaker 1>application

00:38:19.535 --> 00:38:21.775
<v Speaker 1>from a Git repo, which you already showed.

00:38:21.935 --> 00:38:23.295
<v Speaker 1>What you can also deploy, we have a

00:38:23.295 --> 00:38:24.335
<v Speaker 1>catalog of applications

00:38:24.990 --> 00:38:27.310
<v Speaker 1>that's powered by Helm, so you can deploy

00:38:27.310 --> 00:38:29.550
<v Speaker 1>one click deploy applications from Helm

00:38:29.870 --> 00:38:31.310
<v Speaker 1>or just from your terminal.

00:38:31.630 --> 00:38:33.390
<v Speaker 1>When you deploy it from Git, though,

00:38:33.710 --> 00:38:35.070
<v Speaker 1>you have access to a lot of other

00:38:35.070 --> 00:38:37.224
<v Speaker 1>features to customize your deployment. Like, if you

00:38:37.224 --> 00:38:38.745
<v Speaker 1>could click on Okteto pipeline,

00:38:39.065 --> 00:38:40.825
<v Speaker 1>this is it's kinda similar to the way

00:38:40.825 --> 00:38:43.625
<v Speaker 1>CICD works where you can define a script

00:38:43.865 --> 00:38:45.625
<v Speaker 1>on how to deploy your application,

00:38:46.025 --> 00:38:47.305
<v Speaker 1>and, you know, there's a lot of things

00:38:47.305 --> 00:38:47.785
<v Speaker 1>there.

00:38:48.744 --> 00:38:50.425
<v Speaker 1>If you don't have a good pipeline file,

00:38:50.425 --> 00:38:52.740
<v Speaker 1>Okteto will try to guess what your repo

00:38:52.740 --> 00:38:54.260
<v Speaker 1>looks like and deploy it. So if you

00:38:54.260 --> 00:38:55.620
<v Speaker 1>have a ham chart, it will do a

00:38:55.620 --> 00:38:56.740
<v Speaker 1>ham install.

00:38:56.980 --> 00:38:59.220
<v Speaker 1>If you have a k h dot JAML

00:38:59.220 --> 00:39:01.060
<v Speaker 1>file, it will do kubectl apply.

00:39:01.380 --> 00:39:03.220
<v Speaker 1>If you have a Docker Compose file, it

00:39:03.220 --> 00:39:04.340
<v Speaker 1>will do Okteto stacks.

00:39:05.065 --> 00:39:06.505
<v Speaker 1>And if it can't figure it out, it'll

00:39:06.505 --> 00:39:07.545
<v Speaker 1>tell you, hey. I don't know what to

00:39:07.545 --> 00:39:09.545
<v Speaker 1>do. But you can always add this kinda,

00:39:09.545 --> 00:39:12.025
<v Speaker 1>like, magic file, Okteto dash pipeline,

00:39:12.345 --> 00:39:13.785
<v Speaker 1>and you have full control.

00:39:13.945 --> 00:39:16.425
<v Speaker 1>Some of our users do things like provision

00:39:16.425 --> 00:39:19.225
<v Speaker 1>third party services, provision cloud services if they

00:39:19.225 --> 00:39:19.465
<v Speaker 1>need,

00:39:20.480 --> 00:39:21.839
<v Speaker 1>all the way to, you know, like like

00:39:21.839 --> 00:39:24.720
<v Speaker 1>movies, which builds and deploy the app. So

00:39:24.799 --> 00:39:26.160
<v Speaker 1>that's a really cool thing where it opens

00:39:26.160 --> 00:39:28.160
<v Speaker 1>the door to more complex deployments. You know,

00:39:28.160 --> 00:39:29.680
<v Speaker 1>applications have different shapes,

00:39:30.000 --> 00:39:32.240
<v Speaker 1>and sometimes you need to provision other resources.

00:39:32.559 --> 00:39:33.760
<v Speaker 1>So that is a cool way where you

00:39:33.760 --> 00:39:35.280
<v Speaker 1>can extend Okteto to do other things.

00:39:36.665 --> 00:39:38.025
<v Speaker 0>Nice. That was one of the things that

00:39:38.025 --> 00:39:38.585
<v Speaker 0>actually,

00:39:38.905 --> 00:39:40.185
<v Speaker 0>you know, had popped into my head as

00:39:40.185 --> 00:39:41.945
<v Speaker 0>we were playing with the movies example. I

00:39:41.945 --> 00:39:43.465
<v Speaker 0>was like, oh, okay. There's a, like, fatal

00:39:43.465 --> 00:39:45.065
<v Speaker 0>pipeline that can defend all these steps. And

00:39:45.065 --> 00:39:46.665
<v Speaker 0>then when you showed me the the dev

00:39:46.665 --> 00:39:48.345
<v Speaker 0>one, in my head, I was like, well,

00:39:48.345 --> 00:39:50.420
<v Speaker 0>it looks and feels like a Docker Compose

00:39:50.420 --> 00:39:52.020
<v Speaker 0>file, but it's not. But, I mean, I

00:39:52.020 --> 00:39:53.859
<v Speaker 0>could just use a Docker Compose file,

00:39:54.260 --> 00:39:56.579
<v Speaker 0>which, you know, hopefully Teams and and stuff

00:39:56.579 --> 00:39:57.859
<v Speaker 0>like that have been using it for a

00:39:57.859 --> 00:40:00.099
<v Speaker 0>couple of years now. They're not losing that

00:40:00.339 --> 00:40:02.485
<v Speaker 0>configuration. It's it's not going anywhere. They still

00:40:02.485 --> 00:40:04.325
<v Speaker 0>have the flexibility to use that and deploy

00:40:04.325 --> 00:40:05.525
<v Speaker 0>it using Intel.

00:40:05.845 --> 00:40:08.085
<v Speaker 0>And Yeah. That is that is actually one

00:40:08.085 --> 00:40:09.845
<v Speaker 1>feature we just released last week. We kinda

00:40:09.845 --> 00:40:11.925
<v Speaker 1>still release it. We haven't made any announcements.

00:40:12.005 --> 00:40:13.365
<v Speaker 1>And and thanks for bringing it up. It's

00:40:13.365 --> 00:40:15.045
<v Speaker 1>really cool. We took

00:40:15.765 --> 00:40:17.740
<v Speaker 1>the team took the compose, which is now

00:40:17.740 --> 00:40:19.500
<v Speaker 1>open source Yep. For people who don't know

00:40:19.500 --> 00:40:20.060
<v Speaker 1>this,

00:40:20.380 --> 00:40:22.780
<v Speaker 1>and we implemented the entire spec to do

00:40:22.780 --> 00:40:25.340
<v Speaker 1>a translation from compose to Kubernetes.

00:40:25.820 --> 00:40:27.100
<v Speaker 1>Because as you said, a lot of teams

00:40:27.100 --> 00:40:29.420
<v Speaker 1>are still using compose for development, and it's

00:40:29.420 --> 00:40:31.425
<v Speaker 1>great. It's a really easy way to deploy

00:40:31.425 --> 00:40:32.385
<v Speaker 1>your application

00:40:32.545 --> 00:40:34.625
<v Speaker 1>and and just kinda describe it and see

00:40:34.625 --> 00:40:35.025
<v Speaker 1>it.

00:40:35.905 --> 00:40:37.105
<v Speaker 1>And a lot of the peep the teams

00:40:37.105 --> 00:40:38.945
<v Speaker 1>that you were seeing on TETO, they didn't

00:40:38.945 --> 00:40:40.705
<v Speaker 1>like Helm that much or they were not

00:40:40.705 --> 00:40:43.100
<v Speaker 1>as used to Helm than they are to

00:40:43.100 --> 00:40:45.420
<v Speaker 1>Compose. So we ended up implementing this this

00:40:45.420 --> 00:40:46.940
<v Speaker 1>feature. So if you go back to the

00:40:46.940 --> 00:40:48.860
<v Speaker 1>to the to the Okteto UI just just

00:40:48.860 --> 00:40:51.420
<v Speaker 1>real quick to show you a quick demo.

00:40:52.300 --> 00:40:53.340
<v Speaker 1>Click on deploy

00:40:55.595 --> 00:40:57.595
<v Speaker 1>and go to from compose.

00:40:59.115 --> 00:41:00.875
<v Speaker 1>And that is a very simple example, but

00:41:00.875 --> 00:41:03.275
<v Speaker 1>you see that is an actual compose file.

00:41:03.515 --> 00:41:05.755
<v Speaker 0>Mhmm. It's a it's a hello world. You

00:41:05.755 --> 00:41:07.515
<v Speaker 1>can put any compose file you want there.

00:41:07.515 --> 00:41:09.194
<v Speaker 1>You can get, like, the movies app and

00:41:09.194 --> 00:41:11.440
<v Speaker 1>and things, and then just deploy it. And

00:41:11.440 --> 00:41:14.720
<v Speaker 1>Okteto will translate from Compose to Kubernetes,

00:41:14.880 --> 00:41:16.640
<v Speaker 1>create all the things for you. And our

00:41:16.640 --> 00:41:19.200
<v Speaker 1>goal here is that anyone should be able

00:41:19.200 --> 00:41:20.720
<v Speaker 1>to if you have a repo with a

00:41:20.720 --> 00:41:22.080
<v Speaker 1>Docker Compose on it,

00:41:22.640 --> 00:41:24.000
<v Speaker 1>you should be able to click

00:41:25.055 --> 00:41:25.855
<v Speaker 1>deploy,

00:41:25.855 --> 00:41:27.055
<v Speaker 1>put your repo,

00:41:27.615 --> 00:41:28.895
<v Speaker 1>and it would just work.

00:41:29.375 --> 00:41:30.974
<v Speaker 1>If it doesn't work, you know, we have

00:41:30.974 --> 00:41:32.974
<v Speaker 1>a Slack. Go join the Kubernetes Slack. Go

00:41:32.974 --> 00:41:34.815
<v Speaker 1>to the Okteto channel and and talk to

00:41:34.815 --> 00:41:36.414
<v Speaker 1>us, and and we'll we'll work on this

00:41:36.414 --> 00:41:36.734
<v Speaker 1>together.

00:41:37.500 --> 00:41:39.180
<v Speaker 0>Alright. Well, we we did actually get a

00:41:39.180 --> 00:41:40.860
<v Speaker 0>comment from Vignesh

00:41:40.860 --> 00:41:42.380
<v Speaker 0>who told us to give it a try

00:41:42.380 --> 00:41:44.300
<v Speaker 0>with with Docker Compose.

00:41:44.460 --> 00:41:45.980
<v Speaker 0>Are we feeling brave? Are you happy for

00:41:45.980 --> 00:41:47.900
<v Speaker 0>me to pick a Compose file? Yeah. Yeah.

00:41:47.900 --> 00:41:48.860
<v Speaker 1>Yeah. Of course.

00:41:49.580 --> 00:41:51.580
<v Speaker 1>One one that I like to demo is

00:41:51.580 --> 00:41:53.020
<v Speaker 1>if you if you go

00:41:54.345 --> 00:41:56.025
<v Speaker 1>find the Docker movie,

00:41:56.745 --> 00:41:57.945
<v Speaker 1>the voting app.

00:41:58.345 --> 00:41:59.305
<v Speaker 1>Do you know about that? Do you know

00:41:59.385 --> 00:42:01.385
<v Speaker 1>have you seen that demo? Yeah. Couple of

00:42:01.385 --> 00:42:03.465
<v Speaker 0>years ago, remember the movie voting app. So

00:42:03.945 --> 00:42:05.705
<v Speaker 1>But that is the that is a prototypical,

00:42:05.705 --> 00:42:08.349
<v Speaker 1>kinda like Docker Compose demo. So just, you

00:42:08.349 --> 00:42:10.510
<v Speaker 1>know, you go to GitHub. How can I

00:42:10.510 --> 00:42:11.950
<v Speaker 1>send this to you? Do we have a

00:42:11.950 --> 00:42:14.349
<v Speaker 1>chat here? This one here? Well, that one.

00:42:14.349 --> 00:42:16.430
<v Speaker 1>Yeah. You got it. Just just copy the

00:42:16.430 --> 00:42:18.030
<v Speaker 1>URL. Let's let's see if it works.

00:42:20.109 --> 00:42:21.630
<v Speaker 1>Alright. Let's go to URL and go to

00:42:21.630 --> 00:42:23.345
<v Speaker 1>Chero. Uh-huh. And just create a new nice

00:42:23.345 --> 00:42:24.625
<v Speaker 1>business for for fun.

00:42:25.345 --> 00:42:27.744
<v Speaker 0>Just for fun. Okay. Yeah. We will pile

00:42:27.744 --> 00:42:28.625
<v Speaker 1>up on things.

00:42:30.065 --> 00:42:32.865
<v Speaker 0>Okay. We'll call this voting Rawkode.

00:42:34.944 --> 00:42:36.065
<v Speaker 0>I had to apply.

00:42:36.224 --> 00:42:38.145
<v Speaker 0>We're gonna do

00:42:38.720 --> 00:42:40.960
<v Speaker 1>Go from git. Go from git, and then

00:42:40.960 --> 00:42:43.040
<v Speaker 0>just drop in the URL? Uh-huh.

00:42:43.440 --> 00:42:44.400
<v Speaker 0>Okay. So

00:42:45.119 --> 00:42:46.880
<v Speaker 0>this has no Okteto

00:42:46.880 --> 00:42:50.160
<v Speaker 0>pipeline. This is just Nope. A docker compose

00:42:50.160 --> 00:42:52.565
<v Speaker 0>dot We don't we don't own the repo.

00:42:52.565 --> 00:42:53.605
<v Speaker 1>That's that repo is a

00:42:54.885 --> 00:42:56.645
<v Speaker 1>it's part of a docker samples repo, so

00:42:56.645 --> 00:42:57.845
<v Speaker 1>nothing there for us.

00:42:58.325 --> 00:42:59.605
<v Speaker 0>And just hit deploy?

00:43:00.005 --> 00:43:00.484
<v Speaker 1>Uh-huh.

00:43:08.340 --> 00:43:11.540
<v Speaker 0>K. We got a clone detected the Docker

00:43:11.540 --> 00:43:12.340
<v Speaker 0>Compose,

00:43:12.740 --> 00:43:15.060
<v Speaker 0>and it's been an Okteto Stack Deploy.

00:43:16.500 --> 00:43:18.715
<v Speaker 1>Okay. We'll see. I'm a little bit nervous.

00:43:18.715 --> 00:43:19.995
<v Speaker 1>I haven't been with testing.

00:43:20.875 --> 00:43:22.475
<v Speaker 1>Funny one funny thing is that one of

00:43:22.475 --> 00:43:25.435
<v Speaker 1>my cofounders and co maintainers, Pablo, he he

00:43:25.435 --> 00:43:27.035
<v Speaker 1>used to work for this company called Tudum

00:43:27.035 --> 00:43:27.515
<v Speaker 1>that

00:43:28.234 --> 00:43:30.395
<v Speaker 1>Docker acquired, and they were actually the ones

00:43:30.395 --> 00:43:32.395
<v Speaker 1>that creating the voting app samples. It was

00:43:32.395 --> 00:43:34.640
<v Speaker 1>a nice kinda full circle of

00:43:34.960 --> 00:43:36.720
<v Speaker 1>my friend working that in Docker, and then

00:43:36.720 --> 00:43:38.480
<v Speaker 1>with our company, now we're building this this

00:43:38.480 --> 00:43:39.680
<v Speaker 1>compatibility layer.

00:43:40.240 --> 00:43:41.760
<v Speaker 1>But that's the core idea is that is

00:43:41.760 --> 00:43:43.840
<v Speaker 1>we map the we map the resources to

00:43:43.840 --> 00:43:45.360
<v Speaker 1>Kubernetes, you know, with

00:43:46.000 --> 00:43:47.280
<v Speaker 1>the idea that as a developer,

00:43:48.105 --> 00:43:49.465
<v Speaker 1>for a lot of these things, you don't

00:43:49.465 --> 00:43:51.625
<v Speaker 1>care. You just compose good enough. Therefore, you're

00:43:51.625 --> 00:43:54.185
<v Speaker 1>composed. It'll work. You can still use all

00:43:54.185 --> 00:43:56.185
<v Speaker 1>the other tooling we showed today,

00:43:56.345 --> 00:43:58.345
<v Speaker 1>Okteto up, CLI,

00:43:58.665 --> 00:43:59.625
<v Speaker 1>all those things.

00:44:00.185 --> 00:44:01.465
<v Speaker 1>But with the added benefit that you don't

00:44:01.465 --> 00:44:01.945
<v Speaker 1>have to

00:44:02.430 --> 00:44:04.510
<v Speaker 1>keep these two different manifests. Right? If you

00:44:04.510 --> 00:44:06.590
<v Speaker 1>have a Compose, just use Compose

00:44:06.910 --> 00:44:09.230
<v Speaker 1>as you get deeper into Kubernetes

00:44:09.470 --> 00:44:10.990
<v Speaker 1>and you start using Helm,

00:44:11.230 --> 00:44:12.910
<v Speaker 1>then you can migrate to Helm or other

00:44:12.910 --> 00:44:15.150
<v Speaker 1>things. But for a lot of people, Compose

00:44:15.150 --> 00:44:16.670
<v Speaker 1>is a really good format, and it just

00:44:16.670 --> 00:44:18.625
<v Speaker 1>works for them. So it's it's something that

00:44:18.625 --> 00:44:19.265
<v Speaker 1>we're

00:44:19.825 --> 00:44:21.744
<v Speaker 1>very excited that even this is open source.

00:44:21.744 --> 00:44:22.945
<v Speaker 1>It's it's in the CLI.

00:44:23.025 --> 00:44:24.464
<v Speaker 1>So it's something that we're very excited to

00:44:24.464 --> 00:44:25.904
<v Speaker 1>to see if people like, and then maybe

00:44:25.904 --> 00:44:27.025
<v Speaker 1>it's something we can push

00:44:27.424 --> 00:44:29.904
<v Speaker 1>for other other teams or products to also

00:44:29.904 --> 00:44:30.464
<v Speaker 1>start using.

00:44:31.589 --> 00:44:33.589
<v Speaker 0>Yeah. I don't know if the output here

00:44:33.589 --> 00:44:34.630
<v Speaker 0>is, you know

00:44:35.509 --> 00:44:37.349
<v Speaker 0>is is it BuildKit? Because it doesn't look

00:44:37.349 --> 00:44:39.109
<v Speaker 0>like a standard Docker build, so I'm assuming.

00:44:39.109 --> 00:44:40.630
<v Speaker 1>It is it is BuildKit. So we we

00:44:40.630 --> 00:44:41.670
<v Speaker 1>fork BuildKit,

00:44:41.910 --> 00:44:44.150
<v Speaker 1>and we added some extra code to make

00:44:44.150 --> 00:44:45.829
<v Speaker 1>it more multitenant

00:44:46.235 --> 00:44:46.875
<v Speaker 1>friendly.

00:44:47.515 --> 00:44:49.115
<v Speaker 1>But at the core, it's BuildKit. Like

00:44:49.755 --> 00:44:51.675
<v Speaker 1>like every other you know, we build on

00:44:51.675 --> 00:44:53.835
<v Speaker 1>top of open source. Yeah. We're building on

00:44:53.835 --> 00:44:55.755
<v Speaker 1>top of BuildKit, Container Registry.

00:44:56.075 --> 00:44:59.195
<v Speaker 1>We use engine x ingress, cert manager, Kubernetes

00:44:59.195 --> 00:44:59.995
<v Speaker 1>itself,

00:45:00.155 --> 00:45:02.840
<v Speaker 1>mutation web hooks. And using BuildKit is also

00:45:02.840 --> 00:45:04.600
<v Speaker 1>really cool because that allows allowed us to

00:45:04.600 --> 00:45:06.920
<v Speaker 1>be compatible with any Dockerfile. Like, you don't

00:45:06.920 --> 00:45:08.280
<v Speaker 1>have to do anything special.

00:45:08.440 --> 00:45:10.120
<v Speaker 1>You can even take advantage of all the

00:45:10.120 --> 00:45:11.240
<v Speaker 1>cool things that

00:45:11.720 --> 00:45:13.480
<v Speaker 1>BuildKit gives you, caching

00:45:14.535 --> 00:45:16.375
<v Speaker 1>on different front ends, all those things. So

00:45:16.375 --> 00:45:17.974
<v Speaker 1>it's a there you go. It's it's getting

00:45:17.974 --> 00:45:18.455
<v Speaker 1>there.

00:45:19.095 --> 00:45:20.855
<v Speaker 0>Yeah. I I think BuildKit is just one

00:45:20.855 --> 00:45:22.454
<v Speaker 0>of the most exciting things we've had in

00:45:22.454 --> 00:45:24.535
<v Speaker 0>a while from, like, in a container buildy

00:45:24.535 --> 00:45:27.575
<v Speaker 0>docker landscape. It's amazing. It's amazing, and it's

00:45:27.575 --> 00:45:28.295
<v Speaker 1>something that I

00:45:28.720 --> 00:45:30.160
<v Speaker 1>I don't know what I mean, more people

00:45:30.160 --> 00:45:31.680
<v Speaker 1>should be using it. It's really it's really,

00:45:31.680 --> 00:45:34.320
<v Speaker 1>really powerful, and it's it's compatible in a

00:45:34.320 --> 00:45:35.440
<v Speaker 1>Docker file. And

00:45:35.760 --> 00:45:37.920
<v Speaker 0>Yeah. So the cache has experimental flag right

00:45:37.920 --> 00:45:39.440
<v Speaker 0>now. Right? I think you you have with

00:45:39.600 --> 00:45:41.200
<v Speaker 0>at least with the Docker CLI, you have

00:45:41.200 --> 00:45:43.915
<v Speaker 0>to explicitly enable the experimental features to be

00:45:43.915 --> 00:45:45.195
<v Speaker 1>able to have to put a a header.

00:45:45.195 --> 00:45:46.075
<v Speaker 1>Right? But

00:45:46.555 --> 00:45:47.915
<v Speaker 1>definitely something that

00:45:48.635 --> 00:45:50.075
<v Speaker 1>I don't know what the plan there is,

00:45:50.075 --> 00:45:52.555
<v Speaker 1>but it's something that anyone I highly recommend

00:45:52.555 --> 00:45:54.555
<v Speaker 1>looking to it, especially if you're building

00:45:55.150 --> 00:45:57.710
<v Speaker 1>if you're building node images, just caching the

00:45:57.710 --> 00:46:00.430
<v Speaker 1>node modules saves so much time on your

00:46:00.430 --> 00:46:01.070
<v Speaker 1>builds.

00:46:01.310 --> 00:46:01.870
<v Speaker 1>Yeah.

00:46:02.510 --> 00:46:04.590
<v Speaker 1>Or caching the the other the the binary

00:46:04.590 --> 00:46:06.990
<v Speaker 1>the binary the compiled folder on node. Same

00:46:06.990 --> 00:46:08.830
<v Speaker 1>thing on Go. It's it's really cool. There

00:46:08.664 --> 00:46:10.664
<v Speaker 1>we go. Let's see if it works. I

00:46:10.664 --> 00:46:12.825
<v Speaker 1>have all green. There's an endpoint there.

00:46:17.384 --> 00:46:18.025
<v Speaker 1>There we go.

00:46:23.650 --> 00:46:25.890
<v Speaker 0>Cool. And then I'll go back, and there's

00:46:25.890 --> 00:46:28.290
<v Speaker 1>a results service that will show you your

00:46:28.290 --> 00:46:29.010
<v Speaker 1>vote.

00:46:29.170 --> 00:46:30.530
<v Speaker 0>Hold on. Let me click.

00:46:31.090 --> 00:46:32.290
<v Speaker 1>I think I'm gonna vote once.

00:46:36.944 --> 00:46:38.464
<v Speaker 1>One per person. But if anybody were to

00:46:38.464 --> 00:46:40.065
<v Speaker 1>log in, that's a public endpoint. Anybody can

00:46:40.065 --> 00:46:41.505
<v Speaker 1>log in and and see the vote. But

00:46:41.744 --> 00:46:43.744
<v Speaker 0>Damn it. My vote went to cats.

00:46:44.464 --> 00:46:45.984
<v Speaker 0>I'm gonna hold it back then. Okay. A

00:46:45.984 --> 00:46:46.865
<v Speaker 1>cat person, so yes.

00:46:48.849 --> 00:46:50.530
<v Speaker 0>Like cats and dogs, to be fair. I

00:46:50.530 --> 00:46:52.290
<v Speaker 0>I love all animals. I'm actually surrounded by

00:46:52.369 --> 00:46:54.290
<v Speaker 0>I've got chinchillas over here, five of them.

00:46:54.290 --> 00:46:56.369
<v Speaker 0>I've got a free free roaming ferret that

00:46:56.369 --> 00:46:58.690
<v Speaker 0>lives in my office with Oh, wow. Daggers

00:46:58.690 --> 00:46:59.730
<v Speaker 1>in the room.

00:46:59.810 --> 00:47:02.050
<v Speaker 0>All animals are welcome in here.

00:47:02.530 --> 00:47:03.490
<v Speaker 1>That sounds nice.

00:47:04.405 --> 00:47:05.685
<v Speaker 0>Awesome. That

00:47:06.085 --> 00:47:07.685
<v Speaker 0>that was a nice little surprise. I had

00:47:07.685 --> 00:47:09.605
<v Speaker 0>no idea that we could just throw

00:47:10.565 --> 00:47:12.245
<v Speaker 0>Docker compose at that. I mean, I have

00:47:12.245 --> 00:47:14.485
<v Speaker 0>so many just like example repositories that I

00:47:14.485 --> 00:47:16.485
<v Speaker 0>keep on GitHub with Docker compose files and

00:47:16.485 --> 00:47:18.245
<v Speaker 0>and just being able to drop that URL

00:47:18.245 --> 00:47:20.790
<v Speaker 0>in here and have a nice visual representation.

00:47:20.790 --> 00:47:23.430
<v Speaker 0>I think that's so so important for people.

00:47:23.430 --> 00:47:24.870
<v Speaker 0>Like, you know, a lot of people aren't

00:47:24.870 --> 00:47:27.430
<v Speaker 0>indoctrinated into Kubernetes sharing containers. They've not been

00:47:27.430 --> 00:47:28.790
<v Speaker 0>doing this for four years or five years.

00:47:28.790 --> 00:47:30.550
<v Speaker 0>They've been doing it for weeks or months.

00:47:30.550 --> 00:47:32.955
<v Speaker 0>And these UIs these

00:47:33.115 --> 00:47:33.915
<v Speaker 0>GUIs

00:47:34.155 --> 00:47:35.914
<v Speaker 0>are are just there to make that easier

00:47:35.914 --> 00:47:37.434
<v Speaker 0>for these people and get the logs out

00:47:37.434 --> 00:47:39.035
<v Speaker 0>of it and work with it and browse

00:47:39.035 --> 00:47:41.035
<v Speaker 0>the URL without having to worry about put

00:47:41.035 --> 00:47:42.795
<v Speaker 0>forwards in that. I love UIs like this

00:47:42.795 --> 00:47:43.994
<v Speaker 0>that solve real problems. Yeah.

00:47:45.099 --> 00:47:46.780
<v Speaker 1>That is that is for me part like,

00:47:46.780 --> 00:47:48.300
<v Speaker 1>super important is is the

00:47:48.700 --> 00:47:50.619
<v Speaker 1>ease of use, get you get you going

00:47:50.619 --> 00:47:51.260
<v Speaker 1>and,

00:47:51.820 --> 00:47:53.580
<v Speaker 1>like, the best thing for me is when

00:47:53.580 --> 00:47:54.940
<v Speaker 1>people tell us, hey. We're I'm not even

00:47:54.940 --> 00:47:56.859
<v Speaker 1>thinking about, you know, Kubernetes.

00:47:57.315 --> 00:47:59.075
<v Speaker 1>It's a great technology. I'm a big fan.

00:47:59.075 --> 00:48:00.835
<v Speaker 1>I've been involved for, like, many years now.

00:48:01.155 --> 00:48:03.075
<v Speaker 1>But I like it when they become invisible.

00:48:03.075 --> 00:48:04.515
<v Speaker 1>You know? It's like, I don't wanna think

00:48:04.515 --> 00:48:07.395
<v Speaker 1>of Kubernetes. I wanna think of my application.

00:48:07.395 --> 00:48:08.355
<v Speaker 1>We we had a

00:48:08.835 --> 00:48:10.355
<v Speaker 1>one day, we're chatting with Kelsey at Hightower,

00:48:10.355 --> 00:48:11.555
<v Speaker 1>and I was his advice was like, you

00:48:11.555 --> 00:48:13.390
<v Speaker 1>need to make this invisible. Like, People care

00:48:13.390 --> 00:48:14.430
<v Speaker 1>about their apps.

00:48:15.070 --> 00:48:17.950
<v Speaker 1>Kubernetes is great. It solves huge amount of

00:48:17.950 --> 00:48:18.510
<v Speaker 1>problems,

00:48:19.230 --> 00:48:20.910
<v Speaker 1>but what we care about is what our

00:48:20.910 --> 00:48:22.430
<v Speaker 1>apps can do. So that's what we're trying

00:48:22.430 --> 00:48:24.350
<v Speaker 1>to do here is is to speed you

00:48:24.350 --> 00:48:25.630
<v Speaker 1>up so that you can get to the

00:48:25.630 --> 00:48:28.075
<v Speaker 1>app phase of your work as quickly as

00:48:28.075 --> 00:48:30.635
<v Speaker 1>possible and then build forwards

00:48:30.795 --> 00:48:31.835
<v Speaker 1>endpoints.

00:48:32.155 --> 00:48:33.515
<v Speaker 1>Infrastructure itself

00:48:33.995 --> 00:48:35.355
<v Speaker 1>should just be a giving. It would just

00:48:35.355 --> 00:48:36.715
<v Speaker 1>be there for you and just change your

00:48:36.715 --> 00:48:38.795
<v Speaker 1>code, see the results as fast as possible,

00:48:39.115 --> 00:48:39.915
<v Speaker 1>and and be there.

00:48:41.339 --> 00:48:42.140
<v Speaker 0>Awesome.

00:48:43.420 --> 00:48:45.980
<v Speaker 0>We actually have a a comment from Sangam

00:48:45.980 --> 00:48:47.660
<v Speaker 0>who has suggested that you don't even need

00:48:47.660 --> 00:48:49.579
<v Speaker 0>Docker installed Yeah. If you have the That's

00:48:49.579 --> 00:48:51.660
<v Speaker 1>true. CLI. That's a good point, Sangam. That's

00:48:51.660 --> 00:48:53.740
<v Speaker 1>Sangam is our one of our oldest,

00:48:54.525 --> 00:48:56.365
<v Speaker 1>dearest members of the community.

00:48:56.845 --> 00:48:58.365
<v Speaker 1>Yeah. You're right, Sangam.

00:48:58.525 --> 00:48:59.965
<v Speaker 1>With Okteto built,

00:49:00.125 --> 00:49:01.484
<v Speaker 1>because the the build service is running on

00:49:01.484 --> 00:49:02.125
<v Speaker 1>the cloud,

00:49:02.684 --> 00:49:04.045
<v Speaker 1>whether it's on our cloud or if you

00:49:04.045 --> 00:49:06.365
<v Speaker 1>install Okteto on your own cluster, then the

00:49:06.365 --> 00:49:08.204
<v Speaker 1>builds happen remotely. So you don't have to

00:49:08.204 --> 00:49:10.380
<v Speaker 1>run Docker. Like, I I got Mac Mini

00:49:10.380 --> 00:49:12.060
<v Speaker 1>and one of the new ones, m ones.

00:49:12.540 --> 00:49:14.300
<v Speaker 1>I didn't even install Docker on this machine.

00:49:14.300 --> 00:49:15.740
<v Speaker 1>I've been using Okteto build.

00:49:16.140 --> 00:49:18.220
<v Speaker 1>We it's compatible with the CLI and because

00:49:18.220 --> 00:49:19.660
<v Speaker 1>it uses doc it uses built kit, it

00:49:19.660 --> 00:49:22.140
<v Speaker 1>can build anything. So it's a yeah. It's

00:49:22.140 --> 00:49:23.020
<v Speaker 1>another small benefit.

00:49:24.185 --> 00:49:26.185
<v Speaker 1>You're surprised how many people just mentioned that,

00:49:26.185 --> 00:49:27.785
<v Speaker 1>hey. Not having to run so many things

00:49:27.785 --> 00:49:29.065
<v Speaker 1>on my local machine

00:49:29.225 --> 00:49:30.585
<v Speaker 1>makes them so much happier.

00:49:31.065 --> 00:49:32.425
<v Speaker 1>And and, you know, especially if you if

00:49:32.425 --> 00:49:34.105
<v Speaker 1>you're using hardware that is not, like, super

00:49:34.105 --> 00:49:36.025
<v Speaker 1>powerful, like, you know, not everybody in the

00:49:36.025 --> 00:49:38.025
<v Speaker 1>world has, like, a map map and put

00:49:38.025 --> 00:49:40.400
<v Speaker 1>all with, like, you know, god knows how

00:49:40.400 --> 00:49:41.920
<v Speaker 1>many cores at this point. Like, all people

00:49:41.920 --> 00:49:44.080
<v Speaker 1>are working on on more models machines. Yeah.

00:49:44.080 --> 00:49:45.840
<v Speaker 1>So being able to offload a lot of

00:49:45.840 --> 00:49:49.200
<v Speaker 1>that to a cluster makes their life significantly

00:49:49.200 --> 00:49:49.920
<v Speaker 1>better.

00:49:50.560 --> 00:49:51.120
<v Speaker 0>Yeah.

00:49:51.680 --> 00:49:54.080
<v Speaker 0>I I I I'm already fully

00:49:54.635 --> 00:49:56.395
<v Speaker 0>believing in remote

00:49:56.395 --> 00:49:59.515
<v Speaker 0>development server approach. I think I'm done of

00:49:59.515 --> 00:50:01.515
<v Speaker 0>spending eight hours a day listening to the

00:50:01.515 --> 00:50:03.435
<v Speaker 0>fans on my MacBook. I do not want

00:50:03.435 --> 00:50:05.194
<v Speaker 0>to hear my fans anymore. I just want

00:50:05.435 --> 00:50:08.570
<v Speaker 1>Me too. Me too. And my editor to

00:50:08.570 --> 00:50:09.050
<v Speaker 0>run.

00:50:09.370 --> 00:50:11.290
<v Speaker 0>Hopefully nice and quiet and just focus on

00:50:11.290 --> 00:50:12.010
<v Speaker 0>the code

00:50:12.250 --> 00:50:14.730
<v Speaker 0>and just offload all of this computational heavy

00:50:14.730 --> 00:50:16.810
<v Speaker 0>stuff like building the images and node modules

00:50:16.810 --> 00:50:18.250
<v Speaker 0>and I'm

00:50:18.250 --> 00:50:19.610
<v Speaker 0>a Rust developer so I need to say

00:50:19.610 --> 00:50:21.435
<v Speaker 0>I watch Rust build times for fourteen hours

00:50:21.435 --> 00:50:23.275
<v Speaker 0>all the time. Like, you know, there are

00:50:23.275 --> 00:50:24.795
<v Speaker 0>machines that are built to do this really,

00:50:24.795 --> 00:50:27.115
<v Speaker 0>really fast, and they're not my MacBook. They're

00:50:27.115 --> 00:50:29.115
<v Speaker 0>not my local Linux machine. They're they're in

00:50:29.115 --> 00:50:31.995
<v Speaker 0>the cloud, and they're much better suited. So

00:50:32.395 --> 00:50:33.675
<v Speaker 1>Yeah. And then I love that you can

00:50:33.675 --> 00:50:35.035
<v Speaker 1>use to spin them up and where you're

00:50:35.115 --> 00:50:35.835
<v Speaker 1>like, will

00:50:36.510 --> 00:50:39.230
<v Speaker 1>automatically spin down your environments after a few

00:50:39.230 --> 00:50:40.670
<v Speaker 1>hours that they've been idle. And that's I

00:50:40.670 --> 00:50:41.870
<v Speaker 1>love that because it's like, I didn't have

00:50:41.870 --> 00:50:44.270
<v Speaker 1>to think about cleanup. I just launched my,

00:50:44.270 --> 00:50:46.030
<v Speaker 1>like, my my like this. I'm working my

00:50:46.030 --> 00:50:48.030
<v Speaker 1>application. I'm building things. When I'm done, when

00:50:48.030 --> 00:50:50.265
<v Speaker 1>I go do something else, it will spin

00:50:50.265 --> 00:50:52.105
<v Speaker 1>up spin down. I don't have to worry

00:50:52.105 --> 00:50:53.464
<v Speaker 1>about that thing being running all the time.

00:50:53.464 --> 00:50:55.545
<v Speaker 1>I don't have to worry about pulling it

00:50:55.545 --> 00:50:58.265
<v Speaker 1>up. When I'm done, just try, redeploy,

00:50:58.425 --> 00:50:58.985
<v Speaker 1>and

00:50:59.545 --> 00:51:01.865
<v Speaker 1>I'm I'm much happier that way. One less

00:51:01.865 --> 00:51:04.025
<v Speaker 1>thing to worry about. Oh, yeah. I I

00:51:04.025 --> 00:51:05.440
<v Speaker 0>I couldn't agree more.

00:51:06.080 --> 00:51:08.640
<v Speaker 0>Okay. Let's let's let's get back to our

00:51:08.640 --> 00:51:10.160
<v Speaker 0>our demo. I kinda forgot for a second.

00:51:10.160 --> 00:51:11.760
<v Speaker 0>We're actually live streaming. Oh, so so one

00:51:11.760 --> 00:51:13.280
<v Speaker 1>one more thing I wanted to to to

00:51:13.280 --> 00:51:14.800
<v Speaker 1>show you. I can show you. I prepared

00:51:14.800 --> 00:51:16.800
<v Speaker 1>a demo. We have an early I like

00:51:16.800 --> 00:51:19.095
<v Speaker 1>this. We have an integration with GitHub. Right

00:51:19.095 --> 00:51:21.175
<v Speaker 1>now, GitHub actions is actually down. I've been

00:51:21.175 --> 00:51:23.175
<v Speaker 1>looking at the status page. But if you

00:51:23.175 --> 00:51:25.255
<v Speaker 1>go to the docs, I'll I'll show you.

00:51:25.655 --> 00:51:26.935
<v Speaker 1>One of the one of the things we're

00:51:26.935 --> 00:51:28.135
<v Speaker 1>exploring here was,

00:51:28.455 --> 00:51:30.295
<v Speaker 1>now that you have your pipeline and you

00:51:30.295 --> 00:51:32.990
<v Speaker 1>have your dev environment defined in Okteto,

00:51:33.470 --> 00:51:35.470
<v Speaker 1>why you you can also take that

00:51:35.869 --> 00:51:37.630
<v Speaker 1>and use it as part of your PR

00:51:37.630 --> 00:51:39.470
<v Speaker 1>process. So if you click on the preview

00:51:39.470 --> 00:51:40.270
<v Speaker 1>environments

00:51:40.670 --> 00:51:41.790
<v Speaker 1>menu on the left

00:51:44.190 --> 00:51:46.285
<v Speaker 1>and, yeah, just go there. The idea here

00:51:46.285 --> 00:51:47.965
<v Speaker 1>is you're using the same pipeline, the same

00:51:47.965 --> 00:51:50.125
<v Speaker 1>flow as a developer, but now you're gonna

00:51:50.125 --> 00:51:52.925
<v Speaker 1>attach it to any PR. So the idea

00:51:52.925 --> 00:51:55.085
<v Speaker 1>here is I have my code. I send

00:51:55.085 --> 00:51:57.565
<v Speaker 1>a PR. GitHub will run an action. We'll

00:51:57.565 --> 00:52:00.790
<v Speaker 1>create another namespace. We'll deploy my application there.

00:52:01.110 --> 00:52:03.430
<v Speaker 1>We'll send the link to the PR,

00:52:03.590 --> 00:52:06.390
<v Speaker 1>and then anyone in your team, anyone that

00:52:06.390 --> 00:52:07.270
<v Speaker 1>you're working with,

00:52:07.830 --> 00:52:10.550
<v Speaker 1>they can now see the code, but also

00:52:10.550 --> 00:52:12.790
<v Speaker 1>see the application running with your code on

00:52:12.790 --> 00:52:15.005
<v Speaker 1>it. It's something that GitLab

00:52:15.485 --> 00:52:18.205
<v Speaker 1>does and that Heroku kinda pioneered that I

00:52:18.205 --> 00:52:19.805
<v Speaker 1>I really like. So we we brought this

00:52:19.805 --> 00:52:21.405
<v Speaker 1>into Okteto with the idea that now you

00:52:21.405 --> 00:52:23.245
<v Speaker 1>have a dev environment

00:52:23.325 --> 00:52:25.885
<v Speaker 1>and a preview environment with the same configuration,

00:52:26.390 --> 00:52:28.550
<v Speaker 1>no extra work, and and it works really

00:52:28.550 --> 00:52:30.870
<v Speaker 1>well especially with GitHub instant actions.

00:52:30.870 --> 00:52:33.110
<v Speaker 1>If you scroll down, you'll see that the

00:52:33.110 --> 00:52:35.270
<v Speaker 1>action is is very it's quite simple to

00:52:35.270 --> 00:52:39.110
<v Speaker 1>to deploy. It's just log in, create namespace,

00:52:39.190 --> 00:52:40.070
<v Speaker 1>run your pipeline,

00:52:41.825 --> 00:52:44.065
<v Speaker 1>and then get the URL back to the

00:52:44.065 --> 00:52:44.945
<v Speaker 1>to the PR.

00:52:45.265 --> 00:52:47.345
<v Speaker 1>And it's something that we use internally a

00:52:47.345 --> 00:52:49.025
<v Speaker 1>lot. Like, every time we do, like, for

00:52:49.025 --> 00:52:50.305
<v Speaker 1>instance, a change in a website,

00:52:50.545 --> 00:52:52.545
<v Speaker 1>we generate a preview environment, and then everyone

00:52:52.545 --> 00:52:54.704
<v Speaker 1>on the team can look at the website,

00:52:55.020 --> 00:52:57.340
<v Speaker 1>add comments on the text, on the looks,

00:52:57.340 --> 00:52:59.980
<v Speaker 1>on the color, on the wordiness.

00:52:59.980 --> 00:53:01.740
<v Speaker 1>Yep. And that's a cool way to involve

00:53:01.740 --> 00:53:03.500
<v Speaker 1>people on your PRs

00:53:03.580 --> 00:53:05.260
<v Speaker 1>who might not care about the code or

00:53:05.260 --> 00:53:07.660
<v Speaker 1>they might not be experts on the code,

00:53:07.740 --> 00:53:09.020
<v Speaker 1>but they are experts in the results of

00:53:09.020 --> 00:53:11.295
<v Speaker 1>your code. And that's something that we're pushing

00:53:11.295 --> 00:53:13.295
<v Speaker 1>pushing on. It works on GitHub. It works

00:53:13.295 --> 00:53:15.775
<v Speaker 1>on GitLab. We're working on integrations with Bitbucket,

00:53:15.775 --> 00:53:16.815
<v Speaker 1>with CircleCI.

00:53:16.815 --> 00:53:18.255
<v Speaker 1>It's it's just a script, so you can

00:53:18.335 --> 00:53:20.895
<v Speaker 1>Jenkins, it can work everywhere. Mhmm. But on

00:53:20.895 --> 00:53:22.415
<v Speaker 1>on GitHub, the I I really like the

00:53:22.415 --> 00:53:24.280
<v Speaker 1>actions model. It's a it's an easy way

00:53:24.280 --> 00:53:25.960
<v Speaker 1>to integrate, and then everything goes into your

00:53:25.960 --> 00:53:27.640
<v Speaker 1>repo Yep. So that everyone can look at

00:53:27.640 --> 00:53:29.799
<v Speaker 1>it and and just benefit from it. So

00:53:29.799 --> 00:53:31.079
<v Speaker 1>that's another cool thing that we're

00:53:32.839 --> 00:53:35.495
<v Speaker 1>they're kinda encouraging people to to try, see

00:53:35.495 --> 00:53:37.255
<v Speaker 1>if they like it, see if it's beneficial.

00:53:37.655 --> 00:53:39.015
<v Speaker 1>And if it is, please let us know

00:53:39.015 --> 00:53:40.295
<v Speaker 1>so we can build more of that.

00:53:41.255 --> 00:53:42.775
<v Speaker 0>Do you want to try it, or do

00:53:42.775 --> 00:53:44.295
<v Speaker 0>you do you think actions being done just

00:53:44.295 --> 00:53:46.295
<v Speaker 0>means it's not gonna work at all? It's

00:53:46.295 --> 00:53:47.815
<v Speaker 1>not gonna work right now because I think

00:53:47.815 --> 00:53:49.735
<v Speaker 1>GitHub actions yeah. It's still on green on

00:53:49.735 --> 00:53:51.650
<v Speaker 1>yellow. It's still degraded. So

00:53:52.290 --> 00:53:54.690
<v Speaker 1>I promise I I set up a report

00:53:54.690 --> 00:53:55.890
<v Speaker 1>last night. I was working on a on

00:53:55.890 --> 00:53:58.690
<v Speaker 1>a really cool demo of Compose with

00:53:59.410 --> 00:54:02.130
<v Speaker 1>GitHub actions, but it is down. But I'll

00:54:02.130 --> 00:54:03.890
<v Speaker 1>I'll share the link later on Twitter if

00:54:03.890 --> 00:54:04.930
<v Speaker 1>anybody's interested to try.

00:54:05.635 --> 00:54:07.715
<v Speaker 1>But the easiest thing is go to the

00:54:07.715 --> 00:54:08.435
<v Speaker 1>docs,

00:54:08.755 --> 00:54:09.955
<v Speaker 1>copy that action,

00:54:10.595 --> 00:54:12.115
<v Speaker 1>and you can use the movies app for

00:54:12.115 --> 00:54:14.675
<v Speaker 1>that or your own. Even even better.

00:54:15.475 --> 00:54:17.715
<v Speaker 0>Alright. Well, yeah, I'll make sure the I'll

00:54:17.715 --> 00:54:19.155
<v Speaker 0>get the URL from you. We can put

00:54:19.155 --> 00:54:20.915
<v Speaker 0>that into show notes. And when anyone watching,

00:54:21.210 --> 00:54:23.130
<v Speaker 0>not live, they can definitely check that out

00:54:23.130 --> 00:54:24.170
<v Speaker 0>and have a go at it. It's definitely

00:54:24.170 --> 00:54:25.130
<v Speaker 0>something that I'll

00:54:25.609 --> 00:54:27.290
<v Speaker 0>be keen to try it and and see

00:54:27.290 --> 00:54:30.170
<v Speaker 0>how that works. Very nice integration there.

00:54:31.369 --> 00:54:35.210
<v Speaker 0>Alright, Ramiro. Is there anything that we haven't

00:54:35.125 --> 00:54:36.965
<v Speaker 0>that you think will be interesting to show

00:54:36.965 --> 00:54:39.205
<v Speaker 0>the user before we finish up today?

00:54:40.165 --> 00:54:42.565
<v Speaker 1>Mhmm. Last last thing is

00:54:42.805 --> 00:54:44.965
<v Speaker 1>on the left, click on the developed on

00:54:44.965 --> 00:54:45.765
<v Speaker 1>Okteto

00:54:45.765 --> 00:54:48.645
<v Speaker 1>button. That is something that's my personal favorite.

00:54:48.645 --> 00:54:50.440
<v Speaker 1>So I wanna I noticed to

00:54:50.600 --> 00:54:52.120
<v Speaker 1>show it to the world. But the movies

00:54:52.120 --> 00:54:54.840
<v Speaker 0>are quite straight. So When you have a

00:54:54.840 --> 00:54:56.680
<v Speaker 1>a repo that works with Okteto, you can

00:54:56.680 --> 00:54:59.240
<v Speaker 1>add that button to anything, a read me

00:54:59.240 --> 00:55:00.200
<v Speaker 1>on GitHub,

00:55:00.200 --> 00:55:01.160
<v Speaker 1>a documentation

00:55:01.160 --> 00:55:02.920
<v Speaker 1>on your internal page.

00:55:03.080 --> 00:55:04.405
<v Speaker 1>When When you click that button,

00:55:04.724 --> 00:55:06.964
<v Speaker 1>that will automatically deploy an application on Okteto

00:55:06.964 --> 00:55:07.605
<v Speaker 1>for you.

00:55:08.325 --> 00:55:09.845
<v Speaker 1>You you just put a link to the

00:55:09.845 --> 00:55:12.325
<v Speaker 1>URL of the repo and instructions are below,

00:55:12.325 --> 00:55:13.845
<v Speaker 1>but it's it's something that

00:55:14.085 --> 00:55:15.525
<v Speaker 1>if you go to the, like, the movies

00:55:15.525 --> 00:55:16.565
<v Speaker 1>repo right now,

00:55:18.165 --> 00:55:20.620
<v Speaker 0>you can just I could yep. And so

00:55:20.620 --> 00:55:22.620
<v Speaker 0>it's just cloud.okteto.com,

00:55:22.860 --> 00:55:25.580
<v Speaker 0>and then it's got, like, a hash symbol

00:55:25.580 --> 00:55:27.820
<v Speaker 0>and a deploy with a repository that we

00:55:27.820 --> 00:55:29.020
<v Speaker 0>can take a look at. Mhmm. This part

00:55:29.020 --> 00:55:30.300
<v Speaker 1>of the story, and you can also pass

00:55:30.300 --> 00:55:31.500
<v Speaker 1>the pass the

00:55:32.015 --> 00:55:33.615
<v Speaker 1>the branch if you if you want a

00:55:33.615 --> 00:55:36.975
<v Speaker 1>specific branch. So it's something that some of

00:55:36.975 --> 00:55:38.575
<v Speaker 1>our early adopters, especially in the open source

00:55:38.575 --> 00:55:40.815
<v Speaker 1>community, are using as a way to give

00:55:40.815 --> 00:55:43.295
<v Speaker 1>their give their maintainers or contributors a one

00:55:43.295 --> 00:55:45.775
<v Speaker 1>clear experience of, like, click here and get

00:55:45.775 --> 00:55:47.900
<v Speaker 1>the application running. And And once your app

00:55:47.900 --> 00:55:49.980
<v Speaker 1>is running, then you can develop whichever one

00:55:50.060 --> 00:55:51.340
<v Speaker 1>way you want. But it's a it's a

00:55:51.340 --> 00:55:54.380
<v Speaker 1>nice way to replace, you know, like,

00:55:54.780 --> 00:55:57.500
<v Speaker 1>a long with many steps instead you qualify

00:55:57.500 --> 00:56:00.220
<v Speaker 1>it on on this on this repo on

00:56:00.220 --> 00:56:01.420
<v Speaker 1>one click, and it just runs.

00:56:02.495 --> 00:56:04.575
<v Speaker 0>Very nice. I like that feature too.

00:56:05.695 --> 00:56:08.495
<v Speaker 0>Alright. I think we've got one question, and

00:56:08.495 --> 00:56:09.695
<v Speaker 0>then we will

00:56:09.855 --> 00:56:11.295
<v Speaker 0>we'll wrap up for the day. So let's

00:56:11.295 --> 00:56:12.575
<v Speaker 0>pop it back here.

00:56:13.615 --> 00:56:16.175
<v Speaker 0>Russell is asking let me just push this

00:56:16.175 --> 00:56:18.720
<v Speaker 0>up here. Are there any Okteto features for

00:56:18.720 --> 00:56:21.120
<v Speaker 0>allowing multiple people to develop their own version

00:56:21.120 --> 00:56:23.040
<v Speaker 0>of the same service at the same time,

00:56:23.200 --> 00:56:24.800
<v Speaker 0>or is that outside the scope of what

00:56:24.800 --> 00:56:26.080
<v Speaker 0>Okteto offers?

00:56:27.120 --> 00:56:28.880
<v Speaker 1>Yes. That is that is part of the

00:56:28.880 --> 00:56:31.035
<v Speaker 1>experience. There's two ways to do that. One

00:56:31.035 --> 00:56:33.355
<v Speaker 1>is when when you show the namespaces,

00:56:33.435 --> 00:56:35.835
<v Speaker 1>every developer gets their own namespace. So you

00:56:35.835 --> 00:56:37.675
<v Speaker 1>could have you know, I can have my

00:56:37.675 --> 00:56:39.355
<v Speaker 1>my namespace with the movies app.

00:56:39.595 --> 00:56:40.795
<v Speaker 1>David has his.

00:56:40.955 --> 00:56:43.195
<v Speaker 1>And when we develop, they are completely isolated.

00:56:43.560 --> 00:56:45.240
<v Speaker 1>So you just deploy your own copy.

00:56:45.720 --> 00:56:47.320
<v Speaker 1>We're also working on a feature.

00:56:47.960 --> 00:56:49.640
<v Speaker 1>I'm gonna add this. My my dev team

00:56:49.640 --> 00:56:51.800
<v Speaker 1>might might hate me. But no. I'm kidding.

00:56:51.800 --> 00:56:53.400
<v Speaker 1>We're we're actually looking forward to to share

00:56:53.400 --> 00:56:54.760
<v Speaker 1>this with the world. We're getting a new

00:56:54.760 --> 00:56:56.680
<v Speaker 1>feature where you're gonna be able to deploy

00:56:56.825 --> 00:56:59.465
<v Speaker 1>kinda like a canonical version of your application,

00:56:59.465 --> 00:57:01.145
<v Speaker 1>let's say your integration environment,

00:57:01.465 --> 00:57:03.145
<v Speaker 1>and then you're gonna be able to develop

00:57:03.465 --> 00:57:05.225
<v Speaker 1>only specific services.

00:57:05.465 --> 00:57:07.065
<v Speaker 1>And we're gonna use a a mix of

00:57:07.065 --> 00:57:09.945
<v Speaker 1>service mesh and networking rules that let's say

00:57:09.945 --> 00:57:12.359
<v Speaker 1>the movies app. I have my API. You

00:57:12.359 --> 00:57:13.400
<v Speaker 1>have your API.

00:57:13.640 --> 00:57:15.160
<v Speaker 1>I'm gonna have a unique URL. So when

00:57:15.160 --> 00:57:16.520
<v Speaker 1>I go through my URL,

00:57:17.000 --> 00:57:18.840
<v Speaker 1>that request will hit my API.

00:57:18.920 --> 00:57:20.599
<v Speaker 1>And when you go through your URL, it's

00:57:20.599 --> 00:57:21.880
<v Speaker 1>gonna hit your API,

00:57:22.040 --> 00:57:24.275
<v Speaker 1>which for applications like the movies app make

00:57:24.355 --> 00:57:25.715
<v Speaker 1>doesn't make much sense. But if you have

00:57:25.715 --> 00:57:28.435
<v Speaker 1>a big application with twenty, thirty microservices,

00:57:28.915 --> 00:57:30.355
<v Speaker 1>some heavy infrastructure,

00:57:30.675 --> 00:57:32.915
<v Speaker 1>that'd a cool way to to interact more

00:57:32.915 --> 00:57:34.115
<v Speaker 1>like in a team layer.

00:57:34.995 --> 00:57:37.569
<v Speaker 1>Stay tuned. That will come out soon. We'll

00:57:37.569 --> 00:57:38.930
<v Speaker 1>be posting a blog post on that, but

00:57:38.930 --> 00:57:40.849
<v Speaker 1>it's it's gonna be called divert because you

00:57:40.849 --> 00:57:43.650
<v Speaker 1>divert traffic from the main to your app.

00:57:43.650 --> 00:57:46.049
<v Speaker 0>Yep. And and, yeah, definitely, team collaboration is

00:57:46.049 --> 00:57:47.250
<v Speaker 1>is an aspect that we're

00:57:47.490 --> 00:57:50.049
<v Speaker 1>very interested in in improving. That is where

00:57:50.049 --> 00:57:52.335
<v Speaker 1>we started with, like, the namespace per per

00:57:52.335 --> 00:57:53.055
<v Speaker 1>developer.

00:57:53.615 --> 00:57:55.695
<v Speaker 1>But, yeah, we're only gonna get started. So

00:57:55.695 --> 00:57:57.775
<v Speaker 1>any feedback on that, any any comments, I

00:57:57.775 --> 00:57:59.855
<v Speaker 1>would love to talk to you all. I'll

00:58:00.175 --> 00:58:03.215
<v Speaker 1>join the Discord, and we have a a

00:58:03.215 --> 00:58:05.215
<v Speaker 1>channel, Okteto, in the Kubernetes Slack.

00:58:05.770 --> 00:58:07.610
<v Speaker 1>So if you wanna talk about this later,

00:58:07.610 --> 00:58:09.050
<v Speaker 1>you wanna share your experience,

00:58:09.370 --> 00:58:11.050
<v Speaker 1>please please join us. I would love to

00:58:11.050 --> 00:58:11.930
<v Speaker 1>talk to all of you.

00:58:13.210 --> 00:58:16.010
<v Speaker 0>Awesome. Well, on that, Rumiro, I'll just say

00:58:16.010 --> 00:58:17.770
<v Speaker 0>thank you very much for joining us today

00:58:17.770 --> 00:58:20.115
<v Speaker 0>and and walking us through Okteto. It's a

00:58:20.115 --> 00:58:22.675
<v Speaker 0>really cool tool. I love the frictionless approach

00:58:22.675 --> 00:58:24.435
<v Speaker 0>to what is a really

00:58:24.835 --> 00:58:28.195
<v Speaker 0>annoying problem getting bootstrapped or started on projects

00:58:28.195 --> 00:58:30.195
<v Speaker 0>and getting productive as fast as possible. And

00:58:30.195 --> 00:58:32.115
<v Speaker 0>Okteto seems like a really cool tool that

00:58:32.115 --> 00:58:33.940
<v Speaker 0>exposes a whole bunch of features to make

00:58:33.940 --> 00:58:36.260
<v Speaker 0>that easier for people. So thank you for

00:58:36.260 --> 00:58:36.980
<v Speaker 0>your good work,

00:58:37.540 --> 00:58:38.900
<v Speaker 0>and I hope that a lot of people

00:58:38.900 --> 00:58:40.820
<v Speaker 0>watching enjoy it and will check it out

00:58:40.820 --> 00:58:41.860
<v Speaker 0>in their own time.

00:58:42.260 --> 00:58:45.140
<v Speaker 0>Rawkode, have a wonderful day. Thank you again,

00:58:45.140 --> 00:58:46.340
<v Speaker 0>and I will speak to you soon.

00:58:47.225 --> 00:58:49.385
<v Speaker 1>You, David. It was fun. Good seeing you

00:58:49.385 --> 00:58:50.265
<v Speaker 1>all. Mhmm. Bye. Bye.
