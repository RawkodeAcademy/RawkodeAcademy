WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 2b170f15-cb0c-40ae-acc0-f6206aebcad9
Created: 2025-04-29T18:46:52.163Z
Duration: 4039.1409
Channels: 1

00:00:50.490 --> 00:00:53.050
<v Speaker 0>Hello, and welcome to today's episode of Rawkode

00:00:53.050 --> 00:00:54.890
<v Speaker 0>Live. I'm your host, Rawkode.

00:00:54.970 --> 00:00:56.970
<v Speaker 0>Today, we're taking a look at Telepresence,

00:00:56.970 --> 00:00:58.410
<v Speaker 0>a tool for helping

00:00:58.890 --> 00:01:02.090
<v Speaker 0>Kubernetes development, which has been notoriously difficult over

00:01:02.090 --> 00:01:02.489
<v Speaker 0>the years.

00:01:03.415 --> 00:01:05.655
<v Speaker 0>Now before we get started, I just wanna

00:01:05.655 --> 00:01:07.735
<v Speaker 0>start with a little bit of housekeeping. First,

00:01:07.735 --> 00:01:09.495
<v Speaker 0>if you've not subscribed to the YouTube channel,

00:01:09.495 --> 00:01:11.495
<v Speaker 0>shame on you. Please do that now and

00:01:11.495 --> 00:01:13.175
<v Speaker 0>click the bell so that you get notifications

00:01:13.175 --> 00:01:14.615
<v Speaker 0>for all future episodes.

00:01:15.255 --> 00:01:17.015
<v Speaker 0>Also, if you like to chat, talk cloud

00:01:17.015 --> 00:01:19.250
<v Speaker 0>native and Kubernetes, there is a Discord server

00:01:19.250 --> 00:01:20.610
<v Speaker 0>where you can come and join. We are

00:01:20.610 --> 00:01:22.690
<v Speaker 0>around 400 people now talking about all things

00:01:22.690 --> 00:01:24.930
<v Speaker 0>tech all the time. Really good fun. Come

00:01:24.930 --> 00:01:25.810
<v Speaker 0>and say hello.

00:01:26.210 --> 00:01:28.290
<v Speaker 0>And, of course, lastly, I wanna thank Equinix

00:01:28.290 --> 00:01:30.530
<v Speaker 0>Metal. They are my employer, but they also

00:01:30.530 --> 00:01:32.210
<v Speaker 0>allow me to produce this show on their

00:01:32.210 --> 00:01:34.690
<v Speaker 0>time, helping us all learn cloud native together.

00:01:35.305 --> 00:01:37.545
<v Speaker 0>So thank you Equinix Merrill. You can use

00:01:37.545 --> 00:01:39.305
<v Speaker 0>a code Rawkode. This will get you two

00:01:39.305 --> 00:01:41.385
<v Speaker 0>hundred hours of credits to test on our

00:01:41.385 --> 00:01:44.025
<v Speaker 0>platform. That's roughly four hundred hours of compute

00:01:44.025 --> 00:01:46.025
<v Speaker 0>if you use a modest instance, but you're

00:01:46.025 --> 00:01:47.865
<v Speaker 0>gonna have much more fun using it with

00:01:47.865 --> 00:01:48.985
<v Speaker 0>the bigger instances.

00:01:48.985 --> 00:01:50.345
<v Speaker 0>So, you know, use it as you wish.

00:01:51.380 --> 00:01:54.420
<v Speaker 0>And today, we're taking a look at Telepresence.

00:01:54.420 --> 00:01:55.460
<v Speaker 0>Sorry. I caught a comment out of the

00:01:55.460 --> 00:01:56.500
<v Speaker 0>corner of my eye. I'll answer that in

00:01:56.500 --> 00:01:57.300
<v Speaker 0>a minute. No.

00:01:57.860 --> 00:02:00.660
<v Speaker 0>Today, I'm joined by Daniel and Peter.

00:02:01.460 --> 00:02:01.860
<v Speaker 0>Hello.

00:02:03.424 --> 00:02:06.064
<v Speaker 1>Hello, everyone. Hey, David. Yeah. Sorry. I I

00:02:06.064 --> 00:02:08.465
<v Speaker 0>don't often get caught by comments but it

00:02:08.465 --> 00:02:09.824
<v Speaker 0>just popped right up and it was just

00:02:09.824 --> 00:02:11.665
<v Speaker 0>Noel asking do I have new headphones.

00:02:12.145 --> 00:02:12.865
<v Speaker 0>Very

00:02:13.745 --> 00:02:15.665
<v Speaker 0>good thing to know. Yes. I do. My

00:02:15.745 --> 00:02:17.600
<v Speaker 0>wife was moaning at me because my last

00:02:17.600 --> 00:02:19.280
<v Speaker 0>headphones were noise cancelling and I would talk

00:02:19.280 --> 00:02:21.440
<v Speaker 0>too loud so these are open ears so

00:02:21.440 --> 00:02:24.000
<v Speaker 0>that I can maintain my volume. Anyway Brilliant.

00:02:24.160 --> 00:02:25.120
<v Speaker 0>Random segue.

00:02:25.440 --> 00:02:27.440
<v Speaker 0>So thank you for joining me today, Daniel

00:02:27.440 --> 00:02:29.040
<v Speaker 0>and Peter. Do just wanna just take a

00:02:29.040 --> 00:02:30.320
<v Speaker 0>little bit of time and tell us who

00:02:30.320 --> 00:02:31.920
<v Speaker 0>you are, what you do? We'll start with

00:02:31.920 --> 00:02:34.534
<v Speaker 0>you, Daniel, there. Yeah. Hi, everyone. Thanks for

00:02:34.534 --> 00:02:37.015
<v Speaker 2>the intro, David. Thanks for inviting us along.

00:02:37.015 --> 00:02:38.534
<v Speaker 2>So my name is Daniel Bryan, director of

00:02:38.534 --> 00:02:40.135
<v Speaker 2>DevRel Ambassador Labs.

00:02:40.295 --> 00:02:43.015
<v Speaker 2>My background actually started in academia, but then

00:02:43.015 --> 00:02:45.334
<v Speaker 2>moved into Java development. I say my native

00:02:45.334 --> 00:02:46.295
<v Speaker 2>language is Java,

00:02:46.880 --> 00:02:48.800
<v Speaker 2>then a whole bunch of JavaScript and other

00:02:48.800 --> 00:02:49.840
<v Speaker 2>things along the way.

00:02:50.319 --> 00:02:52.000
<v Speaker 2>Reluctant operator is what I like to say

00:02:52.000 --> 00:02:53.280
<v Speaker 2>to myself. Right? I was always the build

00:02:53.280 --> 00:02:55.680
<v Speaker 2>person. Like, I I naturally gravitated towards Hudson

00:02:55.680 --> 00:02:57.600
<v Speaker 2>and then Jenkins as it changed,

00:02:57.840 --> 00:02:59.855
<v Speaker 2>and then kinda just followed that through my

00:02:59.855 --> 00:03:01.855
<v Speaker 2>consulting career in London, doing a lot of

00:03:01.855 --> 00:03:02.895
<v Speaker 2>work with Mesos.

00:03:03.055 --> 00:03:04.895
<v Speaker 2>And then, of course, when Kubernetes came on,

00:03:04.895 --> 00:03:07.055
<v Speaker 2>like, initially betting on Mesos, then suddenly I

00:03:07.055 --> 00:03:08.735
<v Speaker 2>realized, hang on. Kubernetes is where it's at.

00:03:08.735 --> 00:03:10.895
<v Speaker 2>Right? And then I've got friendly with the

00:03:10.895 --> 00:03:12.895
<v Speaker 2>Vasa Labs folks or Data Wires, we were

00:03:12.895 --> 00:03:14.895
<v Speaker 2>called back then. And Telepresence,

00:03:14.895 --> 00:03:16.790
<v Speaker 2>the first version of it,

00:03:17.189 --> 00:03:18.629
<v Speaker 2>was just popping up. And and for me,

00:03:18.629 --> 00:03:19.829
<v Speaker 2>it solved a real problem. And that's actually

00:03:19.829 --> 00:03:21.110
<v Speaker 2>when I joined the company. I was like,

00:03:21.110 --> 00:03:22.950
<v Speaker 2>this Telepresence tool and then the Ambassador API

00:03:22.950 --> 00:03:25.030
<v Speaker 2>Gateway, super useful for what I'm doing. You

00:03:25.030 --> 00:03:26.390
<v Speaker 2>know, I like these people. I should work

00:03:26.390 --> 00:03:28.150
<v Speaker 2>with them. And that's what I did.

00:03:28.709 --> 00:03:29.510
<v Speaker 2>Peter, over to you.

00:03:31.065 --> 00:03:34.105
<v Speaker 1>Cool. Thanks, Daniel. Yeah. So Peter O'Neil, developer

00:03:34.105 --> 00:03:35.785
<v Speaker 1>advocate at Ambassador Labs.

00:03:36.025 --> 00:03:38.185
<v Speaker 1>I kinda got my start in network engineering,

00:03:38.265 --> 00:03:40.265
<v Speaker 1>moved more into dev ops space, did a

00:03:40.265 --> 00:03:41.625
<v Speaker 1>little bit more coding stuff,

00:03:41.865 --> 00:03:44.710
<v Speaker 1>came across DevRel about a year ago, and

00:03:44.710 --> 00:03:46.790
<v Speaker 1>then moved over to Ambassador Labs about six

00:03:46.790 --> 00:03:49.030
<v Speaker 1>months ago where I've kind of been, leading

00:03:49.030 --> 00:03:51.190
<v Speaker 1>the charge on on talking about Telepresence and

00:03:51.190 --> 00:03:53.750
<v Speaker 1>teaching Telepresence, kind of, like, getting it into

00:03:53.750 --> 00:03:55.430
<v Speaker 1>the hands of as many people as possible.

00:03:55.830 --> 00:03:57.190
<v Speaker 1>And so yeah. So I've been having a

00:03:57.190 --> 00:03:59.190
<v Speaker 1>great time kinda kinda kinda playing with the

00:03:59.190 --> 00:04:01.755
<v Speaker 1>tech. So great to be here, David. Mhmm.

00:04:01.755 --> 00:04:04.475
<v Speaker 0>Awesome. We have a Java developer and a

00:04:04.475 --> 00:04:06.075
<v Speaker 0>network engineer. Awesome.

00:04:06.635 --> 00:04:07.755
<v Speaker 0>It's a nice It's like a big of

00:04:07.755 --> 00:04:09.595
<v Speaker 2>a joke. Right? Well,

00:04:09.595 --> 00:04:11.435
<v Speaker 0>yeah, definitely could be. Walked into a bar.

00:04:11.930 --> 00:04:12.490
<v Speaker 0>Yeah.

00:04:13.210 --> 00:04:14.650
<v Speaker 0>Yeah. No. I'm not gonna try and make

00:04:14.650 --> 00:04:16.330
<v Speaker 0>up a joke. I'm not that smart. Right.

00:04:17.290 --> 00:04:19.370
<v Speaker 0>How is Java in the cloud native landscape

00:04:19.370 --> 00:04:21.050
<v Speaker 0>these days? Is it better? Because it it

00:04:21.050 --> 00:04:22.250
<v Speaker 0>used to be quite a challenge.

00:04:23.050 --> 00:04:25.450
<v Speaker 2>Yeah. I mean, funny. Richard, like, boss and

00:04:25.450 --> 00:04:27.495
<v Speaker 2>I were just talking to everyone today. You

00:04:27.495 --> 00:04:29.335
<v Speaker 2>know, the advent of Spring Boot in particular

00:04:29.335 --> 00:04:31.015
<v Speaker 2>changed a lot of stuff. So hats it

00:04:31.015 --> 00:04:32.135
<v Speaker 2>to the Spring community.

00:04:32.215 --> 00:04:34.055
<v Speaker 2>The the Java community and everyone sort of

00:04:34.055 --> 00:04:36.135
<v Speaker 2>picked up from them. There's Microprofile.

00:04:36.295 --> 00:04:38.455
<v Speaker 2>There's Quarkus from the Red Hat team. There's

00:04:38.455 --> 00:04:40.695
<v Speaker 2>lots of interesting web frameworks in the space

00:04:40.695 --> 00:04:43.849
<v Speaker 2>now that have baked in cloud libraries, cloud

00:04:43.849 --> 00:04:45.689
<v Speaker 2>primitives. So I'm playing around a lot on

00:04:45.689 --> 00:04:47.370
<v Speaker 2>my free time quite a bit with Quarkus.

00:04:47.370 --> 00:04:49.770
<v Speaker 2>It's super interesting. You can do native builds,

00:04:49.770 --> 00:04:50.410
<v Speaker 2>for example.

00:04:50.810 --> 00:04:52.330
<v Speaker 2>So, like, a lot of problems you have

00:04:52.330 --> 00:04:54.169
<v Speaker 2>with the big JVM of kind of you

00:04:54.169 --> 00:04:55.610
<v Speaker 2>know, you can address them now and run

00:04:55.610 --> 00:04:58.165
<v Speaker 2>small footprint stuff. That's awesome. Yeah. I was

00:04:58.165 --> 00:04:59.285
<v Speaker 0>always really excited

00:04:59.445 --> 00:05:01.525
<v Speaker 0>by GraalVM. I thought that was really exciting.

00:05:01.525 --> 00:05:02.725
<v Speaker 2>That's it. Yes.

00:05:03.045 --> 00:05:05.285
<v Speaker 0>Yeah. And Scala, I think they just last

00:05:05.285 --> 00:05:07.045
<v Speaker 0>week, they released version three of that language,

00:05:07.045 --> 00:05:08.805
<v Speaker 0>and I always really liked writing Scala, but

00:05:08.805 --> 00:05:10.165
<v Speaker 0>running the JVM and containers

00:05:10.590 --> 00:05:12.990
<v Speaker 0>just got really cumbersome. So maybe that's something

00:05:12.990 --> 00:05:14.270
<v Speaker 0>I can start experimenting

00:05:14.830 --> 00:05:16.510
<v Speaker 0>with more now. That's cool.

00:05:17.230 --> 00:05:18.990
<v Speaker 0>Right. Here, that's our segue done. Let's get

00:05:18.990 --> 00:05:20.830
<v Speaker 0>let's get back on track. We're gonna talk

00:05:20.830 --> 00:05:24.125
<v Speaker 0>Telepresence today. So I believe, Daniel, you're gonna

00:05:24.125 --> 00:05:25.565
<v Speaker 0>give us a little bit of a quick

00:05:25.565 --> 00:05:27.565
<v Speaker 0>introduction, and then we're gonna get straight into

00:05:27.565 --> 00:05:29.165
<v Speaker 0>our hands on section.

00:05:29.325 --> 00:05:31.485
<v Speaker 2>Yeah. Sure thing. Let me just set us

00:05:31.485 --> 00:05:32.845
<v Speaker 2>up here with the share screen.

00:05:35.849 --> 00:05:38.009
<v Speaker 0>There you go. You're up. Looking good.

00:05:38.490 --> 00:05:40.569
<v Speaker 2>So I'm sure anyone who's a coder will

00:05:40.569 --> 00:05:42.889
<v Speaker 2>recognize this. You get the inner and outer

00:05:42.889 --> 00:05:45.210
<v Speaker 2>dev loops. Now the massive hat tip to

00:05:45.210 --> 00:05:47.050
<v Speaker 2>Mitch Denny, where I got the initial idea

00:05:47.050 --> 00:05:49.210
<v Speaker 2>from. Unfortunately, the the blog post has disappeared

00:05:49.210 --> 00:05:50.655
<v Speaker 2>now. It's a four zero four. So I've

00:05:50.655 --> 00:05:52.095
<v Speaker 2>managed to find the graphic from someone else

00:05:52.095 --> 00:05:54.414
<v Speaker 2>who's saw this as well. But you'll recognize

00:05:54.414 --> 00:05:56.414
<v Speaker 2>that if you're doing TDD, you get that

00:05:56.414 --> 00:05:58.014
<v Speaker 2>inner loop. Right? You come up with a

00:05:58.014 --> 00:06:00.495
<v Speaker 2>test. You write some code. You verify it,

00:06:00.495 --> 00:06:02.254
<v Speaker 2>and you go go around and and, you

00:06:02.070 --> 00:06:05.030
<v Speaker 2>know, you're often working locally here. Even if

00:06:05.030 --> 00:06:06.710
<v Speaker 2>you're not doing TDD, you come up with

00:06:06.710 --> 00:06:08.790
<v Speaker 2>an idea. You code some stuff. You, you

00:06:08.790 --> 00:06:10.630
<v Speaker 2>know, put your print line in. You see

00:06:10.630 --> 00:06:11.510
<v Speaker 2>what's going on.

00:06:11.910 --> 00:06:13.350
<v Speaker 2>When you're happy, then you go to the

00:06:13.350 --> 00:06:15.030
<v Speaker 2>outer loop. You typically, you know, commit to

00:06:15.030 --> 00:06:17.445
<v Speaker 2>git, commit to, you know, version control. You

00:06:17.445 --> 00:06:19.765
<v Speaker 2>might run some integrations, some testing, and then

00:06:19.765 --> 00:06:22.485
<v Speaker 2>you release ultimately and and so forth. Now

00:06:22.485 --> 00:06:25.525
<v Speaker 2>the challenge we've seen oh, I'm challenge we've

00:06:25.525 --> 00:06:27.605
<v Speaker 2>seen with Kubernetes is once you get to

00:06:27.605 --> 00:06:28.805
<v Speaker 2>a certain point,

00:06:29.445 --> 00:06:31.250
<v Speaker 2>if you the in and out loop are

00:06:31.250 --> 00:06:33.410
<v Speaker 2>quite similar. You're writing code,

00:06:33.810 --> 00:06:35.970
<v Speaker 2>then you're building a container, you're pushing to

00:06:35.970 --> 00:06:39.010
<v Speaker 2>registry, deploying to cluster just to test,

00:06:39.569 --> 00:06:41.569
<v Speaker 2>and this can be quite slow. You know,

00:06:41.569 --> 00:06:43.090
<v Speaker 2>you wanna stay local as long as you

00:06:43.090 --> 00:06:45.355
<v Speaker 2>can, You wanna mock things, but, of course,

00:06:45.355 --> 00:06:47.755
<v Speaker 2>when you're running, like, say, mocks, stubs, doubles,

00:06:47.755 --> 00:06:49.515
<v Speaker 2>there's a whole bunch of assumptions

00:06:49.515 --> 00:06:51.915
<v Speaker 2>in there. Right? So sometimes you just you're

00:06:51.915 --> 00:06:54.235
<v Speaker 2>in that small little inner loop, but you

00:06:54.235 --> 00:06:56.715
<v Speaker 2>really wanna test what you're doing against some

00:06:56.715 --> 00:06:57.195
<v Speaker 2>dependency.

00:06:57.950 --> 00:07:01.390
<v Speaker 2>And you really wanna avoid that docker build,

00:07:01.390 --> 00:07:02.990
<v Speaker 2>let alone the docker push, like, to a

00:07:02.990 --> 00:07:05.470
<v Speaker 2>remote registry. Right? And it's something that Peter

00:07:05.470 --> 00:07:06.670
<v Speaker 2>and I play around with a lot is

00:07:06.670 --> 00:07:08.830
<v Speaker 2>you actually wanna be using your own tools

00:07:08.830 --> 00:07:09.230
<v Speaker 2>locally.

00:07:09.724 --> 00:07:11.324
<v Speaker 2>So, you know, much as you might have

00:07:11.324 --> 00:07:13.725
<v Speaker 2>some services running on a remote Kubernetes cluster,

00:07:14.044 --> 00:07:15.805
<v Speaker 2>some, you know, locally,

00:07:15.965 --> 00:07:18.044
<v Speaker 2>you wanna be connecting them all up but

00:07:18.044 --> 00:07:19.485
<v Speaker 2>using the local tools.

00:07:19.805 --> 00:07:20.925
<v Speaker 2>You know, I'm sure many of us know

00:07:20.925 --> 00:07:23.485
<v Speaker 2>about remote debugging, you know, ports and, you

00:07:23.485 --> 00:07:25.460
<v Speaker 2>know, Kubernetes cluster or just their VM in

00:07:25.460 --> 00:07:28.020
<v Speaker 2>general. But, you know, swapping between local then

00:07:28.020 --> 00:07:29.620
<v Speaker 2>remote, local and remote is all a bit

00:07:29.620 --> 00:07:30.500
<v Speaker 2>of a hassle.

00:07:31.940 --> 00:07:34.180
<v Speaker 2>When you're starting out, a lot of folks

00:07:34.180 --> 00:07:37.375
<v Speaker 2>do just code literally everything locally. Right? Pick

00:07:37.375 --> 00:07:40.735
<v Speaker 2>your poison, Docker, minikube, branch, or micro kits,

00:07:40.735 --> 00:07:41.775
<v Speaker 2>k three s.

00:07:42.095 --> 00:07:44.175
<v Speaker 2>But and this comes from my Java days.

00:07:44.175 --> 00:07:46.335
<v Speaker 2>Once you get past a certain number of

00:07:46.335 --> 00:07:47.135
<v Speaker 2>services,

00:07:47.455 --> 00:07:50.575
<v Speaker 2>your laptop, even, you know, even a nice

00:07:49.410 --> 00:07:51.490
<v Speaker 2>max 16 inch here will not keep up.

00:07:51.490 --> 00:07:53.410
<v Speaker 2>Right? Like, you you just you get that

00:07:53.410 --> 00:07:56.130
<v Speaker 2>point where you have to expand into remote

00:07:56.130 --> 00:07:58.210
<v Speaker 2>cluster. You know, you can't run all your

00:07:58.210 --> 00:08:00.050
<v Speaker 2>services locally.

00:08:00.530 --> 00:08:02.370
<v Speaker 2>And that's where Telepresence

00:08:02.370 --> 00:08:03.170
<v Speaker 2>really helps.

00:08:04.604 --> 00:08:06.365
<v Speaker 2>A bunch of different sort of phrases I've

00:08:06.365 --> 00:08:09.245
<v Speaker 2>heard around Telepresence is fancy Kubernetes VPN for

00:08:09.245 --> 00:08:11.165
<v Speaker 2>development. It's something I hear quite a bit.

00:08:11.405 --> 00:08:14.044
<v Speaker 2>Kube couple port forward on steroids. Hear that

00:08:14.044 --> 00:08:15.645
<v Speaker 2>one quite a bit. And if anyone knows

00:08:15.645 --> 00:08:17.485
<v Speaker 2>that Kube couple port forward, like the syntax,

00:08:17.485 --> 00:08:19.485
<v Speaker 2>I always have to Google it because it's

00:08:18.540 --> 00:08:20.620
<v Speaker 2>quite tricky to remember. Right? And and you're

00:08:20.620 --> 00:08:23.180
<v Speaker 2>doing one pod at a time, whereas Telepresence

00:08:23.180 --> 00:08:25.180
<v Speaker 2>kinda makes that much, much easier. So that's

00:08:25.180 --> 00:08:26.620
<v Speaker 2>why they're on steroids.

00:08:27.180 --> 00:08:29.660
<v Speaker 2>But fundamentally, it's a network bridge between your

00:08:29.660 --> 00:08:32.044
<v Speaker 2>laptop and the Kubernetes cluster. So I mentioned

00:08:32.044 --> 00:08:33.325
<v Speaker 2>a few times there that kind of scenario

00:08:33.325 --> 00:08:35.964
<v Speaker 2>where you got local services and remote services.

00:08:36.204 --> 00:08:38.445
<v Speaker 2>Telepresence is that bridge. So we can do

00:08:38.445 --> 00:08:41.725
<v Speaker 2>stuff locally without Docker build, without Docker push.

00:08:42.044 --> 00:08:44.125
<v Speaker 2>We can use our IDE, use our tools

00:08:44.125 --> 00:08:44.845
<v Speaker 2>locally

00:08:45.270 --> 00:08:47.190
<v Speaker 2>as if we were in the cluster. The

00:08:47.190 --> 00:08:49.350
<v Speaker 2>local services we got running are bridged effectively

00:08:49.350 --> 00:08:51.270
<v Speaker 2>in terms of network namespace

00:08:51.270 --> 00:08:52.950
<v Speaker 2>with the remote cluster.

00:08:53.270 --> 00:08:54.710
<v Speaker 2>And if this seems a bit sort of

00:08:54.710 --> 00:08:56.710
<v Speaker 2>hand wavy at the moment, the demo that

00:08:56.710 --> 00:08:58.834
<v Speaker 2>David is gonna look through and and Peter

00:08:58.834 --> 00:09:01.235
<v Speaker 2>should make this all super clear. Telepresence is

00:09:01.235 --> 00:09:02.115
<v Speaker 2>one of those tools and you see it,

00:09:02.115 --> 00:09:04.435
<v Speaker 2>you're like, oh, yeah. Totally get it. You

00:09:04.435 --> 00:09:06.195
<v Speaker 2>try it, and then often you really, how

00:09:06.195 --> 00:09:07.954
<v Speaker 2>do I do development without it? You often

00:09:07.954 --> 00:09:10.274
<v Speaker 2>think. Right? So that's the kind of setup

00:09:10.274 --> 00:09:11.819
<v Speaker 2>I wanted to do, if that's alright, sir.

00:09:11.819 --> 00:09:14.139
<v Speaker 2>Perfect. David, I'll stop sharing.

00:09:15.899 --> 00:09:17.820
<v Speaker 0>Alright. Thank you for that. So

00:09:18.220 --> 00:09:19.820
<v Speaker 0>let's ask you the the

00:09:20.380 --> 00:09:23.500
<v Speaker 0>the difficult question, easy question. Oh, we'll see.

00:09:24.060 --> 00:09:25.899
<v Speaker 0>Like, the the picture with the laptop on

00:09:25.899 --> 00:09:27.555
<v Speaker 0>fire. Right? I think this is a problem

00:09:27.555 --> 00:09:29.315
<v Speaker 0>that is now ubiquitous when I speak to

00:09:29.315 --> 00:09:30.755
<v Speaker 0>people that are trying to work out how

00:09:30.755 --> 00:09:32.755
<v Speaker 0>to get their development workflow working in a

00:09:32.755 --> 00:09:34.035
<v Speaker 0>Kubernetes environment.

00:09:34.355 --> 00:09:36.595
<v Speaker 0>And there's a certain pain threshold, if you

00:09:36.595 --> 00:09:39.475
<v Speaker 0>will, that at x number of services, it

00:09:39.290 --> 00:09:41.850
<v Speaker 0>just doesn't become physically possible anymore to run

00:09:41.850 --> 00:09:44.010
<v Speaker 0>all that stuff locally. You do need to

00:09:44.090 --> 00:09:46.250
<v Speaker 0>revert back to like the shared dev server

00:09:46.250 --> 00:09:48.250
<v Speaker 0>of 19 whatever 90.

00:09:49.690 --> 00:09:50.970
<v Speaker 0>Yep. So

00:09:51.850 --> 00:09:53.690
<v Speaker 0>if we invert that a little bit,

00:09:54.475 --> 00:09:56.395
<v Speaker 0>does it make sense and would you encourage

00:09:56.395 --> 00:09:59.115
<v Speaker 0>that everybody starts to look at Telepresence now

00:09:59.115 --> 00:10:01.435
<v Speaker 0>regardless of the number of services with that

00:10:01.435 --> 00:10:03.355
<v Speaker 0>pain with that pain point there,

00:10:03.595 --> 00:10:05.195
<v Speaker 0>or do you think that there's a certain

00:10:05.195 --> 00:10:06.875
<v Speaker 0>point where then you start to look at

00:10:06.875 --> 00:10:08.795
<v Speaker 0>Telepresence? Like, does that make sense?

00:10:10.310 --> 00:10:11.830
<v Speaker 2>It does. Peter, do you wanna have a

00:10:11.830 --> 00:10:14.070
<v Speaker 2>go at that one? Oliver Oliver think. Yeah.

00:10:15.589 --> 00:10:17.270
<v Speaker 1>Definitely. And so so

00:10:17.510 --> 00:10:19.270
<v Speaker 1>what it really comes down to is building

00:10:19.270 --> 00:10:22.550
<v Speaker 1>out a consistent development workflow. Right? And so

00:10:22.550 --> 00:10:24.630
<v Speaker 1>so if you are a team of one,

00:10:24.954 --> 00:10:26.954
<v Speaker 1>it it may seem like a bit of

00:10:26.954 --> 00:10:28.635
<v Speaker 1>overkill because you're like, oh, I can do

00:10:28.635 --> 00:10:30.475
<v Speaker 1>all this stuff now. But and so then

00:10:30.475 --> 00:10:32.635
<v Speaker 1>when you change the process later, then you

00:10:32.635 --> 00:10:34.875
<v Speaker 1>have that that that that change tax where

00:10:34.875 --> 00:10:36.315
<v Speaker 1>all of a sudden it's like, oh, now

00:10:36.315 --> 00:10:38.240
<v Speaker 1>you're trying to introduce something new. So if

00:10:38.240 --> 00:10:40.480
<v Speaker 1>you can actually introduce Telepresence when it is

00:10:40.480 --> 00:10:42.800
<v Speaker 1>only one service and one person, right, and

00:10:42.800 --> 00:10:44.320
<v Speaker 1>then you add two or three more people

00:10:44.320 --> 00:10:45.760
<v Speaker 1>onto the team, all of a sudden now

00:10:45.760 --> 00:10:48.720
<v Speaker 1>you have this process that scales

00:10:48.959 --> 00:10:51.040
<v Speaker 1>very well as the team grows with you.

00:10:51.040 --> 00:10:54.175
<v Speaker 1>So so so, yes, like, you you can

00:10:54.175 --> 00:10:56.815
<v Speaker 1>adopt it very early and and but I

00:10:56.815 --> 00:10:58.735
<v Speaker 1>think it scales very well if you do.

00:10:59.055 --> 00:11:00.975
<v Speaker 0>Awesome. That's exactly the answer I was hoping

00:11:00.975 --> 00:11:02.415
<v Speaker 0>to hear because I think that

00:11:02.735 --> 00:11:05.410
<v Speaker 0>you're building these really good development practices early

00:11:05.410 --> 00:11:06.770
<v Speaker 0>is really important. And I'll go back to

00:11:06.770 --> 00:11:08.530
<v Speaker 0>something Daniel said in the slides as well

00:11:08.530 --> 00:11:09.330
<v Speaker 0>is that

00:11:10.610 --> 00:11:11.970
<v Speaker 0>doubles and mocking

00:11:12.050 --> 00:11:14.290
<v Speaker 0>are never really good enough. Right? And especially

00:11:14.290 --> 00:11:15.890
<v Speaker 0>if you're using cloud,

00:11:16.530 --> 00:11:18.850
<v Speaker 0>you know, provided services like s three or

00:11:18.850 --> 00:11:21.274
<v Speaker 0>RDS, etcetera. You know, we do have tools

00:11:21.274 --> 00:11:23.115
<v Speaker 0>like local stack that try to provide enough

00:11:23.115 --> 00:11:25.035
<v Speaker 0>of an API that your application's gonna work,

00:11:25.035 --> 00:11:27.355
<v Speaker 0>but why not just use those actual services

00:11:27.355 --> 00:11:28.875
<v Speaker 0>and actually have guarantees in the way that

00:11:28.875 --> 00:11:31.035
<v Speaker 0>it's gonna work? And I think those approaches

00:11:32.475 --> 00:11:34.555
<v Speaker 0>definitely work better for most situations.

00:11:35.519 --> 00:11:36.880
<v Speaker 2>I would add that's great point there. And

00:11:36.880 --> 00:11:38.000
<v Speaker 2>I would add, like I've got a hat

00:11:38.000 --> 00:11:40.000
<v Speaker 2>to it always on on every chat, really.

00:11:40.000 --> 00:11:41.279
<v Speaker 2>Cindy work,

00:11:41.279 --> 00:11:42.959
<v Speaker 2>copy construct. I'm sure you bumped into her

00:11:42.959 --> 00:11:44.880
<v Speaker 2>fantastic writings. And she talks a lot about

00:11:44.880 --> 00:11:46.880
<v Speaker 2>fidelity. Right? It's the amount of fidelity you

00:11:46.880 --> 00:11:49.615
<v Speaker 2>want. Like, there's the testing against, like, mocks,

00:11:49.615 --> 00:11:51.214
<v Speaker 2>which gives you you know, it's quick, but

00:11:51.214 --> 00:11:52.815
<v Speaker 2>it gives you limited confidence.

00:11:52.895 --> 00:11:54.654
<v Speaker 2>Then you can fire up, say, local stack.

00:11:54.654 --> 00:11:55.855
<v Speaker 2>It gives you a bit more confidence because

00:11:55.855 --> 00:11:57.935
<v Speaker 2>it's, you know, an emulation of those

00:11:58.654 --> 00:12:00.770
<v Speaker 2>data stores. But then if you actually push

00:12:00.770 --> 00:12:03.330
<v Speaker 2>into, like, the the real thing, well, the

00:12:03.330 --> 00:12:05.410
<v Speaker 2>fidelity is super high there. Right? But it

00:12:05.410 --> 00:12:07.730
<v Speaker 2>can be typically a bit slower. So I

00:12:07.730 --> 00:12:09.010
<v Speaker 2>think for me, it's let's see if anyone

00:12:09.010 --> 00:12:11.330
<v Speaker 2>hasn't read Cindy's work. You know, after the

00:12:11.330 --> 00:12:14.165
<v Speaker 2>stream, Google copy construct. She's on Twitter. She's

00:12:14.165 --> 00:12:16.565
<v Speaker 2>on medium. Like, some fantastic blog posts that

00:12:16.565 --> 00:12:18.325
<v Speaker 2>talk about the trade offs around fidelity when

00:12:18.325 --> 00:12:18.964
<v Speaker 2>testing.

00:12:19.685 --> 00:12:22.005
<v Speaker 0>Yeah. And generally just all around awesome writing

00:12:22.005 --> 00:12:23.925
<v Speaker 0>under a Sherpa system. Yeah. Find just go

00:12:23.925 --> 00:12:26.005
<v Speaker 0>read everything on the blog. Yeah. Basically.

00:12:27.720 --> 00:12:30.760
<v Speaker 0>Alright. Well, awesome. I'm really excited to start

00:12:30.760 --> 00:12:32.279
<v Speaker 0>playing with Telepresence.

00:12:32.279 --> 00:12:35.399
<v Speaker 0>So let's get my screen shared and we're

00:12:35.399 --> 00:12:36.680
<v Speaker 0>gonna start from

00:12:37.160 --> 00:12:39.560
<v Speaker 0>nothing. We're gonna see how we can start

00:12:39.560 --> 00:12:41.645
<v Speaker 0>to use this for our development workflow.

00:12:42.765 --> 00:12:45.005
<v Speaker 0>So let's see. We have three floating heads.

00:12:45.005 --> 00:12:47.405
<v Speaker 0>I have the Telepresence documentation,

00:12:47.805 --> 00:12:49.885
<v Speaker 0>and I have a terminal.

00:12:50.525 --> 00:12:52.685
<v Speaker 0>It's all I need. Right? We happy? Looks

00:12:52.685 --> 00:12:55.005
<v Speaker 2>good. Looks good. Looks good to me. Yep.

00:12:55.310 --> 00:12:56.910
<v Speaker 0>Alright. Awesome. So

00:12:58.029 --> 00:13:00.270
<v Speaker 0>let's see. I'm assuming I'm gonna have to

00:13:00.270 --> 00:13:03.470
<v Speaker 0>just install the Telepresence binary to my machine.

00:13:04.990 --> 00:13:05.709
<v Speaker 2>Yep. Yep.

00:13:08.074 --> 00:13:09.675
<v Speaker 0>Just do Yeah. You could just go all

00:13:09.675 --> 00:13:11.514
<v Speaker 2>in whole block if you want. Yeah.

00:13:11.834 --> 00:13:12.954
<v Speaker 2>Yeah. We could go all in on the

00:13:12.954 --> 00:13:14.555
<v Speaker 2>quick start, David, and it literally downloads and

00:13:14.555 --> 00:13:16.875
<v Speaker 2>does everything for you. Depends how manual you

00:13:16.875 --> 00:13:19.195
<v Speaker 2>wanna go. Oh, I skipped the page. Yeah.

00:13:19.274 --> 00:13:20.634
<v Speaker 2>If you go new to Kubernetes on the

00:13:20.634 --> 00:13:21.035
<v Speaker 2>left there,

00:13:21.910 --> 00:13:23.190
<v Speaker 2>like, it'll literally

00:13:23.430 --> 00:13:25.590
<v Speaker 2>provision your cluster up in our cloud

00:13:25.830 --> 00:13:27.910
<v Speaker 2>and also give you a package to download,

00:13:27.910 --> 00:13:29.830
<v Speaker 2>and it will then download Telepresence

00:13:29.830 --> 00:13:30.710
<v Speaker 2>everything for you.

00:13:31.910 --> 00:13:33.910
<v Speaker 0>Okay. So let's see.

00:13:34.884 --> 00:13:37.764
<v Speaker 0>Sign in to ambassador cloud. Let's do that.

00:13:38.324 --> 00:13:39.925
<v Speaker 0>Did you wanna give us the

00:13:40.565 --> 00:13:43.524
<v Speaker 0>the pitch on ambassador cloud while I just

00:13:43.524 --> 00:13:44.964
<v Speaker 0>quickly sign up?

00:13:46.404 --> 00:13:48.565
<v Speaker 2>Yeah. Sure thing. So I'll have them oh,

00:13:48.565 --> 00:13:50.005
<v Speaker 2>go for it. Go for it, Peter. Sorry.

00:13:51.490 --> 00:13:54.210
<v Speaker 1>Yeah. So so I'll say Ambassador Cloud is

00:13:54.370 --> 00:13:56.690
<v Speaker 1>is something that we've relatively recently added, and

00:13:56.690 --> 00:13:59.570
<v Speaker 1>it connects our open source tools under kind

00:13:59.570 --> 00:14:01.890
<v Speaker 1>of one umbrella and allows you to to

00:14:01.890 --> 00:14:04.775
<v Speaker 1>to have, like, one central place. For, like,

00:14:04.775 --> 00:14:06.695
<v Speaker 1>Telepresence, we have the idea of what is

00:14:06.695 --> 00:14:09.255
<v Speaker 1>an intercept, which which does the connection.

00:14:09.575 --> 00:14:12.215
<v Speaker 1>And so Ambassador Cloud can hold those for

00:14:12.215 --> 00:14:13.895
<v Speaker 1>you. And, like, you can see a list

00:14:13.895 --> 00:14:15.255
<v Speaker 1>of not just yours, but if you are

00:14:15.255 --> 00:14:17.490
<v Speaker 1>associated with the team, you can see intercepts

00:14:17.490 --> 00:14:19.010
<v Speaker 1>for for the rest of your team as

00:14:19.010 --> 00:14:20.770
<v Speaker 1>well. And then that allows you to share

00:14:20.770 --> 00:14:22.610
<v Speaker 1>and collaborate very easily.

00:14:25.570 --> 00:14:28.770
<v Speaker 0>Okay. So it has downloaded something.

00:14:30.770 --> 00:14:31.890
<v Speaker 2>You have to unzip it.

00:14:32.825 --> 00:14:34.265
<v Speaker 2>Maybe should be good to go.

00:14:36.025 --> 00:14:38.025
<v Speaker 0>Alright. I have a cube config

00:14:38.105 --> 00:14:40.505
<v Speaker 0>and an install fail.

00:14:42.665 --> 00:14:44.425
<v Speaker 0>I was gonna be very trusting there, but

00:14:44.425 --> 00:14:46.665
<v Speaker 0>you know, maybe I'll just get it at

00:14:46.665 --> 00:14:46.825
<v Speaker 0>least.

00:14:48.930 --> 00:14:49.730
<v Speaker 0>Yeah.

00:14:50.450 --> 00:14:51.890
<v Speaker 0>I've curled it and picked it to bash

00:14:51.890 --> 00:14:53.490
<v Speaker 0>just fine. But the fact that I downloaded

00:14:53.490 --> 00:14:55.650
<v Speaker 0>it, no. I gotta be careful. Alright. I

00:14:55.650 --> 00:14:56.850
<v Speaker 2>like the way you completely skipped over the

00:14:56.850 --> 00:14:58.130
<v Speaker 2>read me as well. Love it.

00:14:58.530 --> 00:14:59.570
<v Speaker 0>Read

00:14:59.570 --> 00:15:00.850
<v Speaker 0>me's what? What are those?

00:15:02.375 --> 00:15:04.455
<v Speaker 0>Okay. So several dependencies.

00:15:06.454 --> 00:15:08.774
<v Speaker 0>Oh, okay. Let's do something.

00:15:10.615 --> 00:15:12.055
<v Speaker 0>So should I have read the read me?

00:15:12.055 --> 00:15:14.295
<v Speaker 0>Was that was I being very That's up

00:15:14.295 --> 00:15:16.855
<v Speaker 1>to you. Peter and I spent like hours

00:15:16.140 --> 00:15:18.300
<v Speaker 2>crafting the perfect weaving. We're not offended though.

00:15:18.300 --> 00:15:18.780
<v Speaker 2>Right?

00:15:20.540 --> 00:15:22.700
<v Speaker 0>Alright. Okay. Let's read that.

00:15:23.260 --> 00:15:24.860
<v Speaker 2>Actually, it has to the team. I don't

00:15:24.860 --> 00:15:26.780
<v Speaker 2>think it was us that wrote it, Peter,

00:15:26.780 --> 00:15:27.340
<v Speaker 2>was it?

00:15:28.540 --> 00:15:29.775
<v Speaker 1>I don't think so. I think I think

00:15:29.775 --> 00:15:32.095
<v Speaker 1>we might have commented on it, though. Yeah.

00:15:33.055 --> 00:15:34.895
<v Speaker 2>It's our amazing engineering team that have done

00:15:34.895 --> 00:15:36.815
<v Speaker 2>a lot of the heavy lifting here.

00:15:37.375 --> 00:15:39.375
<v Speaker 0>Yeah. I I always really appreciate it when

00:15:39.375 --> 00:15:42.500
<v Speaker 0>companies provide these kind of just one push

00:15:42.500 --> 00:15:44.500
<v Speaker 0>button deploys to give me something to actually

00:15:44.500 --> 00:15:45.940
<v Speaker 0>play with it, test with it with. So

00:15:45.940 --> 00:15:47.620
<v Speaker 0>it's really cool and that I was able

00:15:47.620 --> 00:15:49.220
<v Speaker 0>to do that. And I didn't have to

00:15:49.220 --> 00:15:50.740
<v Speaker 0>enter a credit card which is always a

00:15:50.740 --> 00:15:51.860
<v Speaker 0>major plus one.

00:15:52.980 --> 00:15:53.220
<v Speaker 0>So

00:15:53.805 --> 00:15:55.165
<v Speaker 0>we've installed

00:15:55.485 --> 00:15:57.245
<v Speaker 0>this is telling me I now have access

00:15:57.245 --> 00:15:58.765
<v Speaker 0>to Telepresence.

00:15:59.404 --> 00:16:01.805
<v Speaker 0>We have some demo applications. It looks like

00:16:01.805 --> 00:16:03.485
<v Speaker 0>we've got something in node.

00:16:03.805 --> 00:16:06.045
<v Speaker 0>We've got something in flask slash Python.

00:16:06.445 --> 00:16:08.845
<v Speaker 0>Fast API is that Python too? Is that

00:16:08.845 --> 00:16:10.490
<v Speaker 0>something else? Yeah. Yeah. Okay.

00:16:10.810 --> 00:16:13.610
<v Speaker 0>Java and go. Where's the rust? Where's the

00:16:13.610 --> 00:16:14.330
<v Speaker 0>rust love?

00:16:15.610 --> 00:16:16.330
<v Speaker 0>And

00:16:18.010 --> 00:16:20.890
<v Speaker 0>I can reuse install to trigger any of

00:16:20.890 --> 00:16:21.850
<v Speaker 0>it. Okay. Nice.

00:16:23.975 --> 00:16:25.335
<v Speaker 0>Let's just make sure

00:16:27.654 --> 00:16:29.655
<v Speaker 0>I have the Telepresence CLI.

00:16:29.895 --> 00:16:31.735
<v Speaker 0>That was nice and easy to get started.

00:16:32.295 --> 00:16:34.855
<v Speaker 0>Now I just jump back over to here

00:16:35.415 --> 00:16:38.375
<v Speaker 0>and

00:16:37.170 --> 00:16:40.210
<v Speaker 0>okay. So now let's test that cube control.

00:16:41.490 --> 00:16:43.490
<v Speaker 0>The chat people know me so well. No

00:16:43.490 --> 00:16:45.090
<v Speaker 0>rust. Rawkode will be sad.

00:16:46.690 --> 00:16:47.650
<v Speaker 0>Thanks, Nuno.

00:16:48.050 --> 00:16:49.810
<v Speaker 2>Now your audience. Good stuff. Yeah.

00:16:50.210 --> 00:16:51.970
<v Speaker 0>Let's export our cube config.

00:16:52.425 --> 00:16:54.425
<v Speaker 0>What was it called? Dot YAML.

00:16:54.904 --> 00:16:56.985
<v Speaker 0>Wait. I already had one here locally. That

00:16:56.985 --> 00:16:58.505
<v Speaker 0>could have been awkward. At least it would

00:16:58.505 --> 00:16:59.065
<v Speaker 0>get.

00:17:00.265 --> 00:17:01.305
<v Speaker 0>And run.

00:17:01.545 --> 00:17:02.185
<v Speaker 0>Let's see.

00:17:04.810 --> 00:17:05.609
<v Speaker 2>Looks good.

00:17:06.089 --> 00:17:07.849
<v Speaker 0>So the I just wanna make sure I

00:17:07.849 --> 00:17:09.929
<v Speaker 0>got this right. This is

00:17:10.410 --> 00:17:13.609
<v Speaker 0>provided to me via ambassador cloud.

00:17:13.770 --> 00:17:16.169
<v Speaker 0>It's just a Kubernetes API.

00:17:16.250 --> 00:17:17.930
<v Speaker 0>I don't know if oh, yeah. KCS, I

00:17:17.930 --> 00:17:19.895
<v Speaker 0>can see it there in a version. And

00:17:19.895 --> 00:17:21.815
<v Speaker 0>and this is just mine. I can use

00:17:21.815 --> 00:17:23.414
<v Speaker 0>this. Does this disappear? Does it run for

00:17:23.414 --> 00:17:25.015
<v Speaker 0>a certain amount of time? Can you maybe

00:17:25.015 --> 00:17:25.974
<v Speaker 0>help me understand

00:17:26.534 --> 00:17:28.374
<v Speaker 0>the magic a little bit?

00:17:29.735 --> 00:17:31.975
<v Speaker 1>Yeah. With the so so with the with

00:17:31.975 --> 00:17:34.615
<v Speaker 1>the quick start, this spins up

00:17:34.050 --> 00:17:35.810
<v Speaker 1>kind of your access to one of our

00:17:35.810 --> 00:17:38.130
<v Speaker 1>demo clusters. And the demo cluster,

00:17:39.090 --> 00:17:41.090
<v Speaker 1>we I think we we've changed the lifespan

00:17:41.090 --> 00:17:42.530
<v Speaker 1>of them a couple times, but right now,

00:17:42.530 --> 00:17:44.210
<v Speaker 1>believe it lasts a couple of days. I

00:17:44.210 --> 00:17:45.970
<v Speaker 1>have to I I don't remember exactly, but

00:17:45.970 --> 00:17:47.010
<v Speaker 1>but, like, I think you have a couple

00:17:47.010 --> 00:17:49.085
<v Speaker 1>days of of where you can log in

00:17:49.085 --> 00:17:51.085
<v Speaker 1>and use it. But then once it disappears,

00:17:51.085 --> 00:17:52.525
<v Speaker 1>you can just start it up again and

00:17:52.525 --> 00:17:54.205
<v Speaker 1>get a get a brand new demo cluster.

00:17:54.205 --> 00:17:56.605
<v Speaker 0>So is this namespace exclusive to me, or

00:17:56.605 --> 00:17:58.045
<v Speaker 0>am I sharing this with anyone else that

00:17:58.045 --> 00:17:59.485
<v Speaker 0>just happened to kinda be using it at

00:17:59.485 --> 00:17:59.965
<v Speaker 0>the same time?

00:18:01.180 --> 00:18:03.180
<v Speaker 1>No. No. The whole cluster should be yours.

00:18:03.180 --> 00:18:05.580
<v Speaker 1>Like, it's one virtual Kubernetes cluster.

00:18:05.740 --> 00:18:07.580
<v Speaker 1>So that whole thing is yours.

00:18:07.820 --> 00:18:10.380
<v Speaker 0>Awesome. Cool. And we do watch for bit

00:18:10.380 --> 00:18:12.300
<v Speaker 2>more coin mining. If anyone's thinking of jumping

00:18:12.300 --> 00:18:12.780
<v Speaker 2>in. Right?

00:18:15.794 --> 00:18:17.155
<v Speaker 0>I wasn't gonna make that joke. It didn't

00:18:17.155 --> 00:18:18.515
<v Speaker 0>cross my mind. I thought, no. Let's not

00:18:18.515 --> 00:18:20.275
<v Speaker 0>put people ideas in people's heads because these

00:18:20.915 --> 00:18:22.195
<v Speaker 0>they don't need anymore.

00:18:22.355 --> 00:18:23.955
<v Speaker 0>But you're right. You were straight in there.

00:18:24.115 --> 00:18:25.875
<v Speaker 0>I don't know. Were you susceptible to any

00:18:25.875 --> 00:18:27.590
<v Speaker 0>of the pull request spam over the last

00:18:27.590 --> 00:18:29.350
<v Speaker 0>few months with crypto miners and open source

00:18:29.350 --> 00:18:30.790
<v Speaker 0>projects? I know that we got hit by

00:18:30.790 --> 00:18:33.350
<v Speaker 0>a fair bit on Tinkerbell and other projects.

00:18:33.590 --> 00:18:35.270
<v Speaker 0>But like, you know No. That's CircleCI and

00:18:35.270 --> 00:18:37.270
<v Speaker 2>and and that gets out for example. Right?

00:18:37.270 --> 00:18:39.670
<v Speaker 2>Sort of, know, big name casualties there. But

00:18:39.670 --> 00:18:41.350
<v Speaker 2>no. We do monitor our our sort of

00:18:41.350 --> 00:18:42.550
<v Speaker 2>stack pretty pretty aggressively.

00:18:43.005 --> 00:18:44.205
<v Speaker 0>Yeah. That's

00:18:44.285 --> 00:18:45.565
<v Speaker 0>perfectly understandable.

00:18:46.525 --> 00:18:47.245
<v Speaker 0>Alright.

00:18:47.325 --> 00:18:49.805
<v Speaker 0>Okay. We run get services. I can see

00:18:49.805 --> 00:18:52.445
<v Speaker 0>these are running. So we've got our Kubernetes

00:18:52.445 --> 00:18:54.365
<v Speaker 0>one, which is just API. We've got some

00:18:54.365 --> 00:18:55.325
<v Speaker 0>other services running.

00:18:57.120 --> 00:18:58.560
<v Speaker 0>So it's not asking me to run a

00:18:58.560 --> 00:18:59.520
<v Speaker 0>Telepresence

00:18:59.520 --> 00:19:00.480
<v Speaker 0>status.

00:19:02.480 --> 00:19:04.320
<v Speaker 0>Mhmm. That raises questions.

00:19:05.280 --> 00:19:05.919
<v Speaker 0>So

00:19:06.320 --> 00:19:07.440
<v Speaker 0>as Telepresence

00:19:07.440 --> 00:19:10.975
<v Speaker 0>using my kubectl context to understand if I

00:19:10.975 --> 00:19:14.015
<v Speaker 0>already have something running, or am I making

00:19:14.015 --> 00:19:15.294
<v Speaker 0>too many guesses?

00:19:16.655 --> 00:19:18.335
<v Speaker 1>Yes. So so with that

00:19:19.615 --> 00:19:20.415
<v Speaker 1>Telepresence

00:19:20.415 --> 00:19:23.390
<v Speaker 1>has parts. Right? Because Telepresence is is bridging

00:19:23.390 --> 00:19:26.030
<v Speaker 1>your local laptop with your remote cluster. Right?

00:19:26.030 --> 00:19:26.990
<v Speaker 1>And it's creating

00:19:27.470 --> 00:19:29.470
<v Speaker 1>what is kind of like a VPN, but

00:19:29.470 --> 00:19:32.510
<v Speaker 1>it's more so bridging your local network with

00:19:32.510 --> 00:19:34.755
<v Speaker 1>that remote network. So there's two two pieces,

00:19:34.755 --> 00:19:36.115
<v Speaker 1>like one on each end. Right? You have

00:19:36.115 --> 00:19:37.155
<v Speaker 1>your Telepresence,

00:19:37.475 --> 00:19:39.555
<v Speaker 1>binary locally on your machine, which runs that

00:19:39.555 --> 00:19:41.955
<v Speaker 1>local daemon, and then you have the what

00:19:41.955 --> 00:19:43.715
<v Speaker 1>is called a traffic manager running in the

00:19:43.715 --> 00:19:45.715
<v Speaker 1>cluster. And those are the two pieces that

00:19:45.715 --> 00:19:48.200
<v Speaker 1>create the bridge that allows you to access

00:19:48.200 --> 00:19:50.360
<v Speaker 1>the network resources in the cluster.

00:19:53.000 --> 00:19:55.160
<v Speaker 0>Okay. So these ambassador

00:19:55.160 --> 00:19:56.679
<v Speaker 0>pods, are these what are

00:19:57.320 --> 00:19:58.440
<v Speaker 0>fulfilling that duty?

00:20:00.155 --> 00:20:01.835
<v Speaker 2>No. No. I think it's not running yet.

00:20:01.835 --> 00:20:03.034
<v Speaker 1>Once you actually

00:20:03.195 --> 00:20:05.115
<v Speaker 1>when the next steps when we actually connect,

00:20:05.115 --> 00:20:07.434
<v Speaker 1>Telepresence is going to do a scan for

00:20:07.434 --> 00:20:09.674
<v Speaker 1>for those services. And when it doesn't see

00:20:09.674 --> 00:20:12.394
<v Speaker 1>them, it will spin them up. Right. Okay.

00:20:12.794 --> 00:20:13.755
<v Speaker 0>Yeah. That makes sense.

00:20:18.870 --> 00:20:20.309
<v Speaker 1>And so here we here we we are

00:20:20.309 --> 00:20:22.470
<v Speaker 1>asking for the password because because we are

00:20:22.470 --> 00:20:24.870
<v Speaker 1>starting that local daemon, that is a suited

00:20:24.870 --> 00:20:25.589
<v Speaker 1>process.

00:20:26.070 --> 00:20:28.215
<v Speaker 0>Yeah. I've made so many mistakes typing my

00:20:28.215 --> 00:20:30.215
<v Speaker 0>password in that I'm just gonna run off

00:20:30.215 --> 00:20:30.934
<v Speaker 0>screen.

00:20:33.415 --> 00:20:35.415
<v Speaker 1>Open up your notepad with all your passwords

00:20:35.415 --> 00:20:36.695
<v Speaker 1>and you're Here we go.

00:20:38.375 --> 00:20:40.295
<v Speaker 0>I don't know. It happened to me like

00:20:40.950 --> 00:20:42.390
<v Speaker 0>it was with Alex Ellis. I don't know

00:20:42.390 --> 00:20:43.830
<v Speaker 0>if you're familiar but we we did the

00:20:43.830 --> 00:20:46.230
<v Speaker 0>stream together like four months ago or something.

00:20:46.230 --> 00:20:47.909
<v Speaker 0>And the actual shell

00:20:48.070 --> 00:20:50.230
<v Speaker 0>of the pseudo process segfalse

00:20:50.230 --> 00:20:52.229
<v Speaker 0>which I've never seen before ever

00:20:52.390 --> 00:20:54.390
<v Speaker 0>as I was halfway through typing my password

00:20:54.390 --> 00:20:56.005
<v Speaker 0>and it was all on the screen. Oh.

00:20:57.045 --> 00:20:58.565
<v Speaker 0>So now I'm just always that little bit

00:20:58.565 --> 00:21:00.565
<v Speaker 0>extra careful. Even though it's just my laptop

00:21:00.565 --> 00:21:03.445
<v Speaker 0>password, there's there's still I'll I'll take precautions.

00:21:03.605 --> 00:21:04.164
<v Speaker 0>Okay.

00:21:04.965 --> 00:21:07.524
<v Speaker 0>I'm really glad I ran get pods all

00:21:07.525 --> 00:21:10.820
<v Speaker 0>before just out of sheer luck I guess.

00:21:10.900 --> 00:21:12.420
<v Speaker 0>Now we've ran Telepresence

00:21:12.420 --> 00:21:14.900
<v Speaker 0>Connect. So what I suggest or what I

00:21:14.900 --> 00:21:16.420
<v Speaker 0>think is we're gonna see

00:21:17.060 --> 00:21:18.180
<v Speaker 0>nothing different.

00:21:18.820 --> 00:21:21.780
<v Speaker 0>Oh no. Do we? Yeah. Very last one.

00:21:21.780 --> 00:21:23.060
<v Speaker 1>The very last one. Yeah.

00:21:24.945 --> 00:21:27.345
<v Speaker 0>Cool. Yeah. I missed that. Okay.

00:21:28.145 --> 00:21:30.065
<v Speaker 0>So that's just running the traffic manager, enter

00:21:30.065 --> 00:21:32.465
<v Speaker 0>cluster. I'm assuming I'm sure I could read

00:21:32.465 --> 00:21:33.664
<v Speaker 0>the docs and it's gonna tell me what

00:21:33.664 --> 00:21:35.664
<v Speaker 0>to do, but I like to assume

00:21:36.225 --> 00:21:37.184
<v Speaker 0>yeah. There we go.

00:21:37.505 --> 00:21:38.784
<v Speaker 0>We now have

00:21:39.680 --> 00:21:41.600
<v Speaker 0>bets connected stuff

00:21:41.600 --> 00:21:43.440
<v Speaker 0>to do even though I don't know what

00:21:43.440 --> 00:21:44.559
<v Speaker 0>that stuff is here.

00:21:45.600 --> 00:21:46.399
<v Speaker 0>Awesome.

00:21:47.920 --> 00:21:48.559
<v Speaker 0>So,

00:21:49.040 --> 00:21:50.400
<v Speaker 0>that's

00:21:50.400 --> 00:21:51.200
<v Speaker 0>interesting.

00:21:51.440 --> 00:21:53.440
<v Speaker 0>The magic just keeps coming. So

00:21:55.015 --> 00:21:56.455
<v Speaker 0>I can just curl

00:21:56.775 --> 00:21:58.215
<v Speaker 0>and hit my cluster?

00:22:00.215 --> 00:22:01.815
<v Speaker 1>Yes. So so so this is this is

00:22:01.815 --> 00:22:04.295
<v Speaker 1>the networking that I was previously

00:22:04.295 --> 00:22:07.320
<v Speaker 1>speaking about where now your local laptop has

00:22:07.320 --> 00:22:09.720
<v Speaker 1>a direct network connection into your cluster. So

00:22:09.720 --> 00:22:12.600
<v Speaker 1>your DNS resolution in the cluster is now

00:22:12.600 --> 00:22:14.840
<v Speaker 1>available on your local machine, and that Kubernetes

00:22:14.840 --> 00:22:18.279
<v Speaker 1>service in the default namespace is now reachable

00:22:18.279 --> 00:22:19.720
<v Speaker 1>through the Kubernetes API.

00:22:20.825 --> 00:22:21.544
<v Speaker 1>Mhmm.

00:22:22.585 --> 00:22:23.304
<v Speaker 0>Fancy.

00:22:24.105 --> 00:22:25.145
<v Speaker 0>Alright.

00:22:26.425 --> 00:22:27.705
<v Speaker 0>I've got a few

00:22:29.385 --> 00:22:30.664
<v Speaker 0>maybe two questions.

00:22:31.065 --> 00:22:31.465
<v Speaker 0>So

00:22:33.590 --> 00:22:34.950
<v Speaker 0>if I am switching

00:22:35.030 --> 00:22:37.110
<v Speaker 0>kubectl context regularly,

00:22:37.190 --> 00:22:40.070
<v Speaker 0>will that be a problem for Telepresence?

00:22:41.670 --> 00:22:43.990
<v Speaker 1>So so right now, Telepresence,

00:22:44.550 --> 00:22:45.190
<v Speaker 1>it it

00:22:45.555 --> 00:22:47.155
<v Speaker 1>if you start it up and you switch

00:22:47.155 --> 00:22:49.475
<v Speaker 1>context, it will it will air out because

00:22:49.475 --> 00:22:52.355
<v Speaker 1>it'll say, oh, context has changed. And remember,

00:22:52.355 --> 00:22:54.915
<v Speaker 1>the Telepresence binary on your machine is essentially

00:22:54.915 --> 00:22:57.075
<v Speaker 1>creating a tunnel to one cluster.

00:22:57.715 --> 00:22:59.715
<v Speaker 1>So right now, that is that is a

00:22:59.715 --> 00:23:02.020
<v Speaker 1>limitation where you'd want to quit out of

00:23:02.020 --> 00:23:03.860
<v Speaker 1>one connection before you started up a new

00:23:03.860 --> 00:23:05.299
<v Speaker 1>connection with another cluster.

00:23:05.780 --> 00:23:07.220
<v Speaker 1>But but it is something that we are

00:23:07.220 --> 00:23:08.820
<v Speaker 1>aware of, and because

00:23:09.300 --> 00:23:11.140
<v Speaker 1>I feel like no one has just one

00:23:11.140 --> 00:23:13.140
<v Speaker 1>cluster nowadays. Right? So so so it is

00:23:13.140 --> 00:23:15.140
<v Speaker 1>something that that that we we we have

00:23:15.140 --> 00:23:17.255
<v Speaker 1>a we have a note to to see

00:23:17.255 --> 00:23:19.255
<v Speaker 1>if we can make that switching a little

00:23:19.255 --> 00:23:20.054
<v Speaker 1>more seamless.

00:23:20.375 --> 00:23:22.854
<v Speaker 0>Alright. Okay. So is there a

00:23:23.095 --> 00:23:23.734
<v Speaker 0>like,

00:23:24.215 --> 00:23:26.375
<v Speaker 0>did I run Telepresence disconnect when I was

00:23:26.375 --> 00:23:28.135
<v Speaker 0>changing cluster? Is that a command? Am I

00:23:29.335 --> 00:23:32.270
<v Speaker 1>We have we have Telepresence quit. Quit. Or

00:23:32.270 --> 00:23:34.029
<v Speaker 1>Telepresence uninstall,

00:23:34.110 --> 00:23:37.149
<v Speaker 1>which will actually remove the the will tear

00:23:37.150 --> 00:23:39.230
<v Speaker 1>down the the pieces that create the connection.

00:23:39.630 --> 00:23:41.070
<v Speaker 0>Okay. Telepresence

00:23:41.070 --> 00:23:42.830
<v Speaker 0>quit says there's something I would type after.

00:23:42.830 --> 00:23:44.350
<v Speaker 0>I've got my unit test failing and I'm

00:23:44.350 --> 00:23:45.855
<v Speaker 0>giving up for the day. So maybe maybe

00:23:45.855 --> 00:23:47.455
<v Speaker 0>I think I'll enjoy that after a bit

00:23:47.455 --> 00:23:48.735
<v Speaker 0>more time. Okay.

00:23:50.095 --> 00:23:52.255
<v Speaker 0>So that's I mean, right off the bat,

00:23:52.255 --> 00:23:53.615
<v Speaker 0>that's just interesting.

00:23:55.295 --> 00:23:56.575
<v Speaker 0>Querying the

00:23:56.815 --> 00:23:59.659
<v Speaker 0>an actual service within my cluster locally. That's

00:23:59.659 --> 00:24:01.179
<v Speaker 0>pretty cool. I really like that.

00:24:01.740 --> 00:24:03.340
<v Speaker 2>That is a while straight away, David. Right?

00:24:03.340 --> 00:24:05.020
<v Speaker 2>In terms of like it's even more impressive

00:24:05.020 --> 00:24:06.940
<v Speaker 2>when like you're hitting a like I said,

00:24:06.940 --> 00:24:08.380
<v Speaker 2>an application, which we'll do in a minute,

00:24:08.380 --> 00:24:09.980
<v Speaker 2>I think, in in the getting started. Right?

00:24:09.980 --> 00:24:11.905
<v Speaker 2>But I remember when I first up, this

00:24:11.905 --> 00:24:13.665
<v Speaker 2>is kinda cool. Right? Before I'd have to

00:24:13.665 --> 00:24:15.345
<v Speaker 2>look for the pod name, do a koo

00:24:15.345 --> 00:24:16.544
<v Speaker 2>kettle port forward,

00:24:16.705 --> 00:24:18.865
<v Speaker 2>hit that, you know, all that kind of

00:24:18.865 --> 00:24:21.505
<v Speaker 2>thing. Where's this? Like, one command? Now you're

00:24:21.505 --> 00:24:22.625
<v Speaker 2>sharing the namespace.

00:24:23.505 --> 00:24:25.905
<v Speaker 0>Yeah. Because the fact that it's working with

00:24:26.269 --> 00:24:27.950
<v Speaker 0>my actual host networking

00:24:27.950 --> 00:24:29.789
<v Speaker 0>through some mysterious way.

00:24:30.190 --> 00:24:32.429
<v Speaker 0>Yeah. We can ask questions about that but

00:24:32.429 --> 00:24:34.269
<v Speaker 0>I probably wouldn't understand it but maybe we

00:24:34.269 --> 00:24:36.509
<v Speaker 0>can talk about it. But I mean, there

00:24:36.509 --> 00:24:38.190
<v Speaker 0>are no limitations on the way that I

00:24:38.190 --> 00:24:40.085
<v Speaker 0>work or develop my application locally. If I

00:24:40.085 --> 00:24:41.605
<v Speaker 0>just if I don't wanna use containers or

00:24:41.605 --> 00:24:43.205
<v Speaker 0>Kubernetes at all, I mean, I could just

00:24:43.205 --> 00:24:45.205
<v Speaker 0>do go build and go run and it

00:24:45.205 --> 00:24:47.205
<v Speaker 0>can speak to Kubernetes services. Right?

00:24:48.325 --> 00:24:51.205
<v Speaker 0>I mean, that's that's pretty special. Like that's

00:24:51.205 --> 00:24:53.205
<v Speaker 0>that's not something that we're used to in

00:24:53.205 --> 00:24:56.725
<v Speaker 0>developing against remote APIs and I I really

00:24:55.380 --> 00:24:57.299
<v Speaker 0>like that. That's that's nice.

00:24:58.260 --> 00:25:01.140
<v Speaker 0>I mean and now though you're completely overshadowed

00:25:01.140 --> 00:25:02.260
<v Speaker 0>the fact that you've given me a dev

00:25:02.260 --> 00:25:04.580
<v Speaker 0>environment for sudo free for testing as well

00:25:04.580 --> 00:25:07.460
<v Speaker 0>as that's no longer important. What's important is

00:25:07.460 --> 00:25:08.420
<v Speaker 0>the network magic.

00:25:10.495 --> 00:25:12.575
<v Speaker 0>I mean how confident are we talking about

00:25:12.575 --> 00:25:13.774
<v Speaker 0>the networking stuff?

00:25:14.655 --> 00:25:16.414
<v Speaker 0>Can we dig into that a little bit?

00:25:17.535 --> 00:25:18.894
<v Speaker 0>I'm curious like

00:25:19.855 --> 00:25:22.575
<v Speaker 0>is it a am I written table? Is

00:25:22.575 --> 00:25:24.559
<v Speaker 0>it DNS resolution?

00:25:24.640 --> 00:25:26.720
<v Speaker 0>Is it intercepting all my traffic? Like, if

00:25:26.720 --> 00:25:28.160
<v Speaker 0>I open up Twitter.com,

00:25:28.160 --> 00:25:30.560
<v Speaker 0>is it gonna go through Telepresence first? Like,

00:25:30.560 --> 00:25:32.000
<v Speaker 0>can we maybe just shed a little bit

00:25:32.000 --> 00:25:33.280
<v Speaker 0>more light on that if we can?

00:25:34.080 --> 00:25:37.115
<v Speaker 1>Yeah. Definitely. So so now that you've established

00:25:37.115 --> 00:25:39.595
<v Speaker 1>that connection and the tunnel has been created,

00:25:39.595 --> 00:25:40.955
<v Speaker 1>what the Telepresence,

00:25:41.195 --> 00:25:43.674
<v Speaker 1>the local Telepresence binary, what it's doing is

00:25:43.674 --> 00:25:47.354
<v Speaker 1>it's it's adding in the DNS resolution

00:25:47.434 --> 00:25:50.955
<v Speaker 1>for the Kubernetes objects before your normal resolution.

00:25:50.955 --> 00:25:53.300
<v Speaker 1>So it's looking for, oh, he's the the

00:25:53.300 --> 00:25:55.460
<v Speaker 1>user typed in dot default or they typed

00:25:55.460 --> 00:25:57.780
<v Speaker 1>in dot namespace a. Right? And so those

00:25:57.780 --> 00:25:59.380
<v Speaker 1>things will try to get resolved first against

00:25:59.380 --> 00:26:01.140
<v Speaker 1>the cluster. And if it doesn't see that,

00:26:01.140 --> 00:26:02.740
<v Speaker 1>then it will default back to your normal

00:26:02.740 --> 00:26:03.299
<v Speaker 1>network.

00:26:03.540 --> 00:26:05.380
<v Speaker 1>And so the other thing the other thing

00:26:05.380 --> 00:26:07.585
<v Speaker 1>that Telepresence does on that connect is it

00:26:07.585 --> 00:26:10.465
<v Speaker 1>builds a it builds an IP tables,

00:26:10.705 --> 00:26:11.425
<v Speaker 1>kind

00:26:11.585 --> 00:26:13.105
<v Speaker 1>of construct and just says, oh, this is

00:26:13.105 --> 00:26:15.185
<v Speaker 1>what's available to me. And I think I

00:26:15.185 --> 00:26:17.025
<v Speaker 1>think we'll get to it eventually. But there's

00:26:17.025 --> 00:26:18.865
<v Speaker 1>a if you run Telepresence list, it'll say

00:26:18.865 --> 00:26:21.090
<v Speaker 1>everything that it sees in the current namespace.

00:26:21.090 --> 00:26:22.930
<v Speaker 1>And so those all get created on the

00:26:22.930 --> 00:26:25.970
<v Speaker 1>Telepresence Connect, which makes it very quick once

00:26:25.970 --> 00:26:28.530
<v Speaker 1>you actually want to want to curl that

00:26:28.530 --> 00:26:30.850
<v Speaker 1>service or access that service. All of those

00:26:30.850 --> 00:26:33.170
<v Speaker 1>IP table routes are are created up front.

00:26:34.345 --> 00:26:36.504
<v Speaker 0>Ah. Mhmm. Very cool.

00:26:37.304 --> 00:26:38.825
<v Speaker 0>Okay.

00:26:39.145 --> 00:26:41.065
<v Speaker 0>Let's get back to the actual doc. I'll

00:26:41.065 --> 00:26:43.385
<v Speaker 0>I'll stop driving us down little rabbit holes

00:26:43.385 --> 00:26:44.184
<v Speaker 0>here. But,

00:26:44.664 --> 00:26:46.585
<v Speaker 0>yeah, we can run get paused. It never

00:26:46.585 --> 00:26:47.784
<v Speaker 2>seems super interesting, though. Right?

00:26:48.850 --> 00:26:50.610
<v Speaker 1>Yeah. I mean, coming from the network engineering

00:26:50.610 --> 00:26:53.169
<v Speaker 1>background and then Yeah. Like, once I touched

00:26:53.169 --> 00:26:55.250
<v Speaker 1>Kubernetes, I was like, wow. There's a lot

00:26:55.250 --> 00:26:56.769
<v Speaker 1>of networking in Kubernetes.

00:26:57.889 --> 00:26:58.529
<v Speaker 0>Yeah.

00:26:58.929 --> 00:27:00.289
<v Speaker 0>Definitely is.

00:27:00.690 --> 00:27:01.329
<v Speaker 0>Okay.

00:27:01.730 --> 00:27:03.995
<v Speaker 0>Yeah. That's really cool. So DNS plus IP

00:27:03.995 --> 00:27:05.835
<v Speaker 0>tables all mixed and matched together to give

00:27:05.835 --> 00:27:08.155
<v Speaker 0>us exactly what we need from the cluster.

00:27:08.315 --> 00:27:10.715
<v Speaker 0>Okay. I've lost my place. Kubernetes

00:27:10.715 --> 00:27:11.675
<v Speaker 0>we did.

00:27:12.075 --> 00:27:13.755
<v Speaker 0>Get pods we ran.

00:27:14.635 --> 00:27:16.635
<v Speaker 0>Also now I can just browse to our

00:27:16.635 --> 00:27:18.555
<v Speaker 0>very large Java service.

00:27:21.830 --> 00:27:22.869
<v Speaker 0>And there it is.

00:27:23.270 --> 00:27:24.950
<v Speaker 0>Educorp. I like it.

00:27:27.750 --> 00:27:29.590
<v Speaker 2>Edgy's our mascot. David, know if you've seen

00:27:29.590 --> 00:27:31.990
<v Speaker 2>our little blackbird on

00:27:31.685 --> 00:27:34.485
<v Speaker 2>Telepresence, Telepresence. Name. Edgy. Edgy. Edgy the bed.

00:27:34.485 --> 00:27:35.524
<v Speaker 2>Yeah. Edgy the blackbird.

00:27:35.685 --> 00:27:37.525
<v Speaker 1>Alright. Yeah. Feel like we we we need

00:27:37.525 --> 00:27:38.805
<v Speaker 1>to update this. We really get a picture

00:27:38.805 --> 00:27:40.805
<v Speaker 1>of Edgy just on on that on that

00:27:40.805 --> 00:27:44.120
<v Speaker 1>page. Totally. Totally video. Right? Yeah. Yeah. Definitely.

00:27:44.120 --> 00:27:46.519
<v Speaker 0>Front and center somewhere here. Okay. I'm AJ.

00:27:46.519 --> 00:27:48.679
<v Speaker 0>Welcome to my company. Yes.

00:27:50.360 --> 00:27:52.679
<v Speaker 0>Okay. I'll get over the magic of the

00:27:52.679 --> 00:27:55.480
<v Speaker 0>networking. Let's let's do something. So we've got

00:27:55.480 --> 00:27:57.080
<v Speaker 0>an NPM application here

00:27:58.415 --> 00:28:00.894
<v Speaker 0>that we can spin into and run.

00:28:01.615 --> 00:28:03.934
<v Speaker 2>It is worth doing, David. Just on instruction

00:28:03.934 --> 00:28:05.775
<v Speaker 2>number three above, just like nothing under the

00:28:05.775 --> 00:28:07.775
<v Speaker 2>sleeves. Right? You should see the Edgecore website

00:28:07.775 --> 00:28:10.255
<v Speaker 2>with a green title and green pod because

00:28:10.255 --> 00:28:11.294
<v Speaker 2>we're gonna change some of that stuff.

00:28:12.880 --> 00:28:13.600
<v Speaker 0>Mhmm.

00:28:13.840 --> 00:28:16.480
<v Speaker 0>Alright. Okay. Okay. Just so everyone watching along

00:28:16.480 --> 00:28:18.559
<v Speaker 2>as well, it's it's green. Yeah. Okay. So

00:28:18.559 --> 00:28:20.880
<v Speaker 0>the node application that we're potentially gonna change,

00:28:20.880 --> 00:28:22.160
<v Speaker 0>you're you're gonna ask me to change the

00:28:22.160 --> 00:28:23.679
<v Speaker 0>CSS or something that change the color of

00:28:23.679 --> 00:28:25.440
<v Speaker 0>this. Is that where we're going? Okay.

00:28:25.920 --> 00:28:26.400
<v Speaker 1>Yep.

00:28:28.784 --> 00:28:30.224
<v Speaker 0>Alright. So that's

00:28:30.625 --> 00:28:31.504
<v Speaker 0>c d

00:28:33.504 --> 00:28:34.304
<v Speaker 0>and

00:28:34.384 --> 00:28:35.744
<v Speaker 0>I need to just

00:28:36.384 --> 00:28:37.744
<v Speaker 0>n p m start.

00:28:37.745 --> 00:28:38.865
<v Speaker 0>So I don't need to do an install

00:28:38.865 --> 00:28:41.024
<v Speaker 0>first? Are we shipping node modules here? Yeah.

00:28:41.024 --> 00:28:41.264
<v Speaker 0>Okay.

00:28:46.840 --> 00:28:49.960
<v Speaker 0>So we've got a local process running on

00:28:51.400 --> 00:28:53.720
<v Speaker 0>port 3,000. Should I browse to that? Oh,

00:28:53.720 --> 00:28:54.520
<v Speaker 0>yeah. There we go.

00:28:57.605 --> 00:28:58.245
<v Speaker 0>All

00:28:58.405 --> 00:29:00.005
<v Speaker 0>the answers and I just keep going in

00:29:00.005 --> 00:29:01.284
<v Speaker 0>questions anyway.

00:29:01.445 --> 00:29:01.845
<v Speaker 0>Okay.

00:29:03.605 --> 00:29:05.684
<v Speaker 0>So we got something here where the color

00:29:05.684 --> 00:29:06.565
<v Speaker 0>is blue.

00:29:09.920 --> 00:29:10.720
<v Speaker 0>Yep.

00:29:12.320 --> 00:29:15.280
<v Speaker 0>And now we're gonna use a Telepresence

00:29:15.440 --> 00:29:16.640
<v Speaker 0>Interceptor

00:29:17.760 --> 00:29:18.799
<v Speaker 0>to

00:29:19.040 --> 00:29:21.520
<v Speaker 0>I won't guess. I'm gonna I'm gonna delegate

00:29:21.520 --> 00:29:22.720
<v Speaker 0>that to someone here.

00:29:23.040 --> 00:29:23.440
<v Speaker 0>Pierre.

00:29:24.935 --> 00:29:26.935
<v Speaker 1>Yeah. So so so so now we're at

00:29:26.935 --> 00:29:29.975
<v Speaker 1>the part where we're actually intercepting traffic. Right?

00:29:29.975 --> 00:29:32.535
<v Speaker 1>And so for if anyone if anyone listening,

00:29:32.695 --> 00:29:34.935
<v Speaker 1>used Telepresence one, we used to call this

00:29:34.935 --> 00:29:37.575
<v Speaker 1>swap deployment where there there we actually kind

00:29:37.575 --> 00:29:37.815
<v Speaker 1>of

00:29:38.610 --> 00:29:40.370
<v Speaker 1>swap the deployments out, and now we call

00:29:40.370 --> 00:29:42.370
<v Speaker 1>it an intercept because it is much more

00:29:42.370 --> 00:29:44.210
<v Speaker 1>of a routing rule

00:29:44.290 --> 00:29:46.370
<v Speaker 1>where we are intercepting traffic,

00:29:46.530 --> 00:29:49.090
<v Speaker 1>destined for a service, in this case, data

00:29:49.090 --> 00:29:51.970
<v Speaker 1>processing service. Right? And we're intercepting that traffic.

00:29:51.970 --> 00:29:54.674
<v Speaker 1>It's hitting that traffic manager in the remote

00:29:54.674 --> 00:29:56.595
<v Speaker 1>cluster, going to a sidecar, and then being

00:29:56.595 --> 00:29:59.235
<v Speaker 1>routed down into your local Telepresence,

00:29:59.475 --> 00:30:01.794
<v Speaker 1>binary where it can hit your local service.

00:30:01.875 --> 00:30:04.275
<v Speaker 1>And so and then from there, right, Telepresence

00:30:04.275 --> 00:30:07.075
<v Speaker 1>also gives you access to to the Kubernetes

00:30:07.075 --> 00:30:08.995
<v Speaker 1>API. So if your local service is reaching

00:30:08.995 --> 00:30:12.809
<v Speaker 1>out to any database connections or other services,

00:30:12.809 --> 00:30:14.250
<v Speaker 1>right, then you can it gets passed right

00:30:14.250 --> 00:30:16.570
<v Speaker 1>back through. And so that intercept is kind

00:30:16.570 --> 00:30:19.129
<v Speaker 1>of handled seamlessly as it connects your local

00:30:19.129 --> 00:30:20.730
<v Speaker 1>laptop into the rest of the cluster.

00:30:21.945 --> 00:30:22.744
<v Speaker 0>Sweet.

00:30:22.904 --> 00:30:23.624
<v Speaker 0>Alright.

00:30:24.424 --> 00:30:24.984
<v Speaker 0>So

00:30:25.784 --> 00:30:27.865
<v Speaker 0>before I run that, let's tackle a question

00:30:27.865 --> 00:30:30.105
<v Speaker 0>we got on the chat then. Naveen is

00:30:30.105 --> 00:30:32.424
<v Speaker 0>asking, does every developer get their own demo

00:30:32.424 --> 00:30:33.784
<v Speaker 0>cluster or a shared one?

00:30:34.424 --> 00:30:36.650
<v Speaker 0>I think on our conversation, what we said

00:30:36.650 --> 00:30:38.010
<v Speaker 0>is that we each get our own virtualized

00:30:38.010 --> 00:30:40.010
<v Speaker 0>Kubernetes cluster, but can we just confirm that,

00:30:40.010 --> 00:30:40.649
<v Speaker 0>I guess?

00:30:42.730 --> 00:30:44.570
<v Speaker 1>Sounds good. But

00:30:45.610 --> 00:30:47.050
<v Speaker 2>there is a limited number. That's the only

00:30:47.050 --> 00:30:47.210
<v Speaker 2>thing.

00:30:48.365 --> 00:30:49.805
<v Speaker 1>Yeah. And I think, actually, if you're on

00:30:49.805 --> 00:30:51.725
<v Speaker 1>a shared team, you you actually end up

00:30:51.725 --> 00:30:54.045
<v Speaker 1>getting added to the same cluster. If you

00:30:54.045 --> 00:30:56.125
<v Speaker 1>add with your personal GitHub account, you'd have

00:30:56.125 --> 00:30:58.125
<v Speaker 1>your own demo cluster.

00:30:58.445 --> 00:31:00.605
<v Speaker 1>So I think that's but but once you

00:31:00.605 --> 00:31:02.445
<v Speaker 1>actually start using Telepresence, you're gonna be using

00:31:02.445 --> 00:31:04.180
<v Speaker 1>it with your own cluster. And whether you

00:31:04.180 --> 00:31:05.780
<v Speaker 1>wanna share or not, that's completely up to

00:31:05.780 --> 00:31:06.179
<v Speaker 1>you.

00:31:06.660 --> 00:31:08.260
<v Speaker 0>Yeah. When I signed up, it did ask

00:31:08.260 --> 00:31:09.940
<v Speaker 0>me which of my teams I wanted to

00:31:09.940 --> 00:31:12.020
<v Speaker 0>use for for this, and I just selected

00:31:12.020 --> 00:31:14.020
<v Speaker 0>my own personal account. So I guess if

00:31:14.020 --> 00:31:15.540
<v Speaker 0>I had selected Equinix,

00:31:15.620 --> 00:31:17.620
<v Speaker 0>then anyone else at Equinix is selecting Equinix.

00:31:17.535 --> 00:31:19.775
<v Speaker 0>We'd probably get the same one. So cool.

00:31:19.855 --> 00:31:20.415
<v Speaker 0>Mhmm.

00:31:20.655 --> 00:31:21.775
<v Speaker 2>Alright. And if there's a lot of folks

00:31:21.775 --> 00:31:23.295
<v Speaker 2>jumping in, we might see, like we we

00:31:23.295 --> 00:31:25.295
<v Speaker 2>don't have a camera we we run now.

00:31:25.295 --> 00:31:26.495
<v Speaker 2>But I know, like, a few times, if

00:31:26.495 --> 00:31:27.855
<v Speaker 2>there's lots of people, like, on a on

00:31:27.855 --> 00:31:29.855
<v Speaker 2>a livestream, on a demo, like, is a

00:31:29.855 --> 00:31:32.575
<v Speaker 2>limited the finite number of the the free

00:31:32.960 --> 00:31:34.640
<v Speaker 2>clusters. But you could totally spin up Docker

00:31:34.640 --> 00:31:37.040
<v Speaker 2>desktop or something else or GKE, I've often

00:31:37.040 --> 00:31:39.360
<v Speaker 2>used. It won't stop you playing around with

00:31:39.360 --> 00:31:40.480
<v Speaker 2>demo, but you might have to come back

00:31:40.480 --> 00:31:41.840
<v Speaker 2>tomorrow and try again if you did wanna

00:31:41.840 --> 00:31:42.880
<v Speaker 2>use our one.

00:31:43.440 --> 00:31:44.639
<v Speaker 0>Yeah. Great

00:31:44.800 --> 00:31:49.120
<v Speaker 0>points. I'm assuming that because we downloaded that

00:31:48.125 --> 00:31:50.845
<v Speaker 0>KubeConfig as part of the registration part with

00:31:50.845 --> 00:31:52.845
<v Speaker 0>a master cloud. But if I was using

00:31:52.845 --> 00:31:55.485
<v Speaker 0>my regular KubeConfig, when I run Telepresence

00:31:55.485 --> 00:31:57.005
<v Speaker 0>Connect, it would just have set up that

00:31:57.005 --> 00:31:59.645
<v Speaker 0>traffic manager on my own cluster. Like, they're

00:31:59.645 --> 00:32:01.485
<v Speaker 0>completely irrelevant that my cluster came from this

00:32:01.485 --> 00:32:03.860
<v Speaker 0>place right now. Well, except for the example

00:32:03.860 --> 00:32:06.340
<v Speaker 0>services, of course. Yes. Yep.

00:32:06.580 --> 00:32:07.139
<v Speaker 2>Alright.

00:32:08.179 --> 00:32:09.700
<v Speaker 0>And then we got a comment from Lewis

00:32:09.700 --> 00:32:11.139
<v Speaker 0>who just thinks he's being funny.

00:32:11.940 --> 00:32:13.460
<v Speaker 0>Spelling color the Yukui.

00:32:14.419 --> 00:32:14.820
<v Speaker 0>Nice.

00:32:15.395 --> 00:32:17.475
<v Speaker 1>I I had this conversation with Daniel all

00:32:17.475 --> 00:32:18.835
<v Speaker 1>the time. You

00:32:20.515 --> 00:32:21.794
<v Speaker 0>know, I think I've just worked for so

00:32:21.794 --> 00:32:23.715
<v Speaker 0>many US companies. I've I've just given up

00:32:23.715 --> 00:32:25.554
<v Speaker 0>and I I know just type everything in

00:32:25.554 --> 00:32:26.195
<v Speaker 0>US English.

00:32:28.559 --> 00:32:29.279
<v Speaker 0>Okay.

00:32:29.360 --> 00:32:33.120
<v Speaker 0>Let's intercept some traffic then. So let's just

00:32:33.120 --> 00:32:34.320
<v Speaker 0>jump into here.

00:32:36.399 --> 00:32:37.759
<v Speaker 0>Why is that red?

00:32:39.600 --> 00:32:40.080
<v Speaker 0>Oh,

00:32:41.705 --> 00:32:43.065
<v Speaker 0>the paths.

00:32:44.025 --> 00:32:44.745
<v Speaker 0>So

00:32:45.305 --> 00:32:47.945
<v Speaker 0>when I ran the install Yeah. Set the

00:32:47.945 --> 00:32:50.825
<v Speaker 2>path to your that current directory. Oh, is

00:32:50.825 --> 00:32:52.024
<v Speaker 0>the banner which is here?

00:32:52.425 --> 00:32:55.729
<v Speaker 2>Yeah. I'm guessing. There we go. Okay. Yeah.

00:32:55.970 --> 00:32:58.210
<v Speaker 0>Thank you. Yeah. There we go. Alright. So

00:32:58.210 --> 00:32:59.970
<v Speaker 0>now we're setting up an intercept for data

00:32:59.970 --> 00:33:02.370
<v Speaker 0>processing service on three slightly off the bottom

00:33:02.370 --> 00:33:03.490
<v Speaker 2>of my screen there, Dave. Don't know if

00:33:03.490 --> 00:33:03.649
<v Speaker 2>that's

00:33:04.450 --> 00:33:06.289
<v Speaker 0>Yep. I do that every day.

00:33:07.465 --> 00:33:09.225
<v Speaker 0>It's because I use that like a tile

00:33:09.225 --> 00:33:11.705
<v Speaker 0>and window manager on Mac that automatically sets

00:33:11.705 --> 00:33:12.985
<v Speaker 0>the size of my windows and I keep

00:33:12.985 --> 00:33:14.585
<v Speaker 0>forgetting that the bottom of my console is

00:33:14.585 --> 00:33:16.424
<v Speaker 0>not visible. Nice.

00:33:16.505 --> 00:33:18.424
<v Speaker 2>Well, thanks for mentioning that. Otherwise, it would

00:33:18.424 --> 00:33:20.024
<v Speaker 0>have taken me like forty minutes if I

00:33:20.024 --> 00:33:20.265
<v Speaker 0>remember.

00:33:22.760 --> 00:33:25.799
<v Speaker 0>Alright. So our intercept was created.

00:33:26.040 --> 00:33:28.280
<v Speaker 0>We're not doing any SSHFS.

00:33:28.280 --> 00:33:30.040
<v Speaker 0>We can talk about that I guess in

00:33:30.040 --> 00:33:30.679
<v Speaker 0>a minute.

00:33:31.320 --> 00:33:33.559
<v Speaker 0>But now if I curl on 1 2

00:33:33.559 --> 00:33:35.799
<v Speaker 0>7 0 0 3 Thousand oh, that's the

00:33:35.799 --> 00:33:36.520
<v Speaker 0>destination. Okay.

00:33:37.555 --> 00:33:39.794
<v Speaker 0>Is this telling me that there is something

00:33:40.035 --> 00:33:41.875
<v Speaker 0>and the traffic manager of my cluster, I

00:33:41.875 --> 00:33:44.595
<v Speaker 0>redirecting traffic to the data processing service to

00:33:44.595 --> 00:33:46.515
<v Speaker 0>my local machine. Is is that

00:33:47.075 --> 00:33:49.395
<v Speaker 0>correct? Yeah. So so so what would go

00:33:49.395 --> 00:33:51.315
<v Speaker 1>to the data processing service

00:33:52.590 --> 00:33:55.150
<v Speaker 1>in your remote cluster is now being forwarded

00:33:55.150 --> 00:33:58.190
<v Speaker 1>to that that local address of 12700

00:33:58.190 --> 00:34:00.830
<v Speaker 1>on port 3000 because we specified that port

00:34:00.830 --> 00:34:02.510
<v Speaker 1>flag at the top. And so if you're

00:34:02.510 --> 00:34:04.715
<v Speaker 1>obviously using a different different service, you can

00:34:04.715 --> 00:34:07.035
<v Speaker 1>specify whichever port is running locally.

00:34:07.115 --> 00:34:07.675
<v Speaker 0>Yeah.

00:34:08.315 --> 00:34:08.955
<v Speaker 1>Mhmm.

00:34:09.755 --> 00:34:10.235
<v Speaker 0>What about

00:34:10.795 --> 00:34:12.315
<v Speaker 0>I'm trying to think now, like, you know,

00:34:12.315 --> 00:34:14.635
<v Speaker 0>say we've got a large Kubernetes cluster or

00:34:14.635 --> 00:34:16.955
<v Speaker 0>dev team or, you know, maybe six people

00:34:17.730 --> 00:34:20.130
<v Speaker 0>and we both wanna intercept the service at

00:34:20.130 --> 00:34:21.889
<v Speaker 0>the same time. Is that something that's possible

00:34:21.889 --> 00:34:23.330
<v Speaker 0>or is that a

00:34:23.889 --> 00:34:24.530
<v Speaker 0>conflict?

00:34:25.889 --> 00:34:28.690
<v Speaker 1>So so there's the difference between

00:34:30.305 --> 00:34:31.185
<v Speaker 1>authenticated

00:34:31.185 --> 00:34:33.425
<v Speaker 1>intercepts and unauthenticated intercepts.

00:34:33.425 --> 00:34:34.785
<v Speaker 1>And so when you ran if you or

00:34:34.785 --> 00:34:36.705
<v Speaker 1>if you run Telepresence status one more time,

00:34:36.705 --> 00:34:38.225
<v Speaker 1>you're gonna see that you are logged out

00:34:38.225 --> 00:34:38.865
<v Speaker 1>right now.

00:34:39.265 --> 00:34:41.025
<v Speaker 1>And and so we we could show this

00:34:41.025 --> 00:34:43.185
<v Speaker 1>again at the end, but, essentially, right, that

00:34:43.185 --> 00:34:46.420
<v Speaker 1>gets down into the difference between team collaboration

00:34:46.420 --> 00:34:49.219
<v Speaker 1>and solo collaboration. If you want to authenticate

00:34:49.219 --> 00:34:52.260
<v Speaker 1>to Ambassador Cloud, and connect to your team,

00:34:52.340 --> 00:34:54.420
<v Speaker 1>that's when you have those team features.

00:34:54.739 --> 00:34:56.420
<v Speaker 1>And so that's when you can do,

00:34:56.980 --> 00:35:00.615
<v Speaker 1>more specialized intercepts and do things like separation

00:35:00.615 --> 00:35:03.895
<v Speaker 1>on header based routing and and and more

00:35:03.895 --> 00:35:05.095
<v Speaker 1>collaborative tools.

00:35:05.415 --> 00:35:07.175
<v Speaker 1>But right now, this intercept,

00:35:07.175 --> 00:35:08.775
<v Speaker 1>because you're unauthenticated,

00:35:08.775 --> 00:35:09.495
<v Speaker 1>is just

00:35:09.815 --> 00:35:12.135
<v Speaker 1>sending all traffic down to your local machine.

00:35:12.135 --> 00:35:13.815
<v Speaker 1>It's not it's not separating anything.

00:35:15.869 --> 00:35:17.310
<v Speaker 0>Awesome. Cool.

00:35:18.270 --> 00:35:20.510
<v Speaker 0>So I'm assuming the docs are gonna tell

00:35:20.510 --> 00:35:22.910
<v Speaker 0>me to refresh edgy corp in a minute.

00:35:23.309 --> 00:35:24.430
<v Speaker 0>Oh, no. We have to make a code

00:35:24.430 --> 00:35:25.470
<v Speaker 0>change first. Right?

00:35:25.950 --> 00:35:27.309
<v Speaker 1>No. No. No. I think I think it's

00:35:27.309 --> 00:35:28.670
<v Speaker 1>that step two. You might have skipped over

00:35:28.670 --> 00:35:28.829
<v Speaker 1>it.

00:35:30.825 --> 00:35:33.705
<v Speaker 1>So after that intercept oh, yeah. Okay.

00:35:37.065 --> 00:35:38.984
<v Speaker 0>There we go. We went from green to

00:35:38.984 --> 00:35:40.984
<v Speaker 0>blue. And now it's telling me to make

00:35:40.984 --> 00:35:42.105
<v Speaker 0>a change to make it orange.

00:35:44.630 --> 00:35:46.070
<v Speaker 0>All right, let's see.

00:35:46.390 --> 00:35:48.870
<v Speaker 0>Dataprocessing@.JS.

00:35:54.310 --> 00:35:55.270
<v Speaker 0>Well, that's annoying.

00:35:57.995 --> 00:35:59.275
<v Speaker 0>Let's just close it.

00:36:04.315 --> 00:36:06.155
<v Speaker 0>Educator data

00:36:06.155 --> 00:36:07.355
<v Speaker 0>processing

00:36:08.395 --> 00:36:08.795
<v Speaker 0>that.

00:36:14.170 --> 00:36:16.250
<v Speaker 0>So this would just be me as our

00:36:16.250 --> 00:36:19.369
<v Speaker 0>developer working on my micro service locally,

00:36:19.450 --> 00:36:21.050
<v Speaker 0>making changes as we go,

00:36:21.609 --> 00:36:23.450
<v Speaker 0>and these are just gonna be

00:36:25.674 --> 00:36:26.474
<v Speaker 0>updated

00:36:26.474 --> 00:36:27.595
<v Speaker 0>in real time.

00:36:28.875 --> 00:36:29.515
<v Speaker 1>Yep.

00:36:30.394 --> 00:36:31.755
<v Speaker 1>So if we switch back there, we'll see

00:36:31.755 --> 00:36:33.755
<v Speaker 1>that node picked up the change, restarted the

00:36:33.755 --> 00:36:34.395
<v Speaker 1>service,

00:36:34.795 --> 00:36:35.355
<v Speaker 1>and

00:36:37.275 --> 00:36:38.875
<v Speaker 1>and now we can refresh.

00:36:39.275 --> 00:36:41.150
<v Speaker 0>Yeah. I think this is the kind of

00:36:41.150 --> 00:36:44.750
<v Speaker 0>feedback loop that everyone working against Kubernetes wants.

00:36:44.750 --> 00:36:46.910
<v Speaker 0>And I don't really feel that we've ever

00:36:46.910 --> 00:36:49.070
<v Speaker 0>really been there yet, but less

00:36:49.470 --> 00:36:50.590
<v Speaker 0>magic y stuff,

00:36:51.630 --> 00:36:53.630
<v Speaker 0>doing things that I don't understand is very

00:36:53.630 --> 00:36:53.870
<v Speaker 0>cool.

00:36:55.045 --> 00:36:56.405
<v Speaker 2>Just to paint the picture again to the

00:36:56.405 --> 00:36:57.285
<v Speaker 2>folks like

00:36:58.005 --> 00:36:59.525
<v Speaker 2>well, showing on the stream. So we're now,

00:36:59.525 --> 00:37:01.525
<v Speaker 2>like, going into the very large Java service.

00:37:01.845 --> 00:37:03.605
<v Speaker 2>It is calling out to the data processing

00:37:03.605 --> 00:37:05.605
<v Speaker 2>service, which is on your local machine,

00:37:05.845 --> 00:37:07.285
<v Speaker 2>which your local machine is reaching into the

00:37:07.285 --> 00:37:09.205
<v Speaker 2>cluster again to the very large data store,

00:37:09.205 --> 00:37:12.010
<v Speaker 2>getting some data. It's coming back. Data processing

00:37:12.010 --> 00:37:13.690
<v Speaker 2>service is returning that to the very large

00:37:13.690 --> 00:37:15.849
<v Speaker 2>Java service. The very large Java service is

00:37:15.849 --> 00:37:17.609
<v Speaker 2>building its web page. It's like a spring

00:37:17.609 --> 00:37:19.450
<v Speaker 2>app. So it's kinda cool as we've got,

00:37:19.450 --> 00:37:21.450
<v Speaker 2>like, requests coming in through, like, a, you

00:37:21.450 --> 00:37:23.369
<v Speaker 2>know, a front end microservice, if you like,

00:37:23.369 --> 00:37:25.375
<v Speaker 2>maybe the monolith. It's calling out to your

00:37:25.375 --> 00:37:27.855
<v Speaker 2>laptop. You're doing your thing with Telepresence,

00:37:27.935 --> 00:37:29.535
<v Speaker 2>but you can still call in. So you

00:37:29.535 --> 00:37:31.695
<v Speaker 2>got that complete chain there going on, which

00:37:31.695 --> 00:37:33.135
<v Speaker 2>I think is like it's not always always

00:37:33.135 --> 00:37:34.815
<v Speaker 2>a first glance, but it's like, hang on.

00:37:34.815 --> 00:37:36.575
<v Speaker 2>We're testing it like the user would see,

00:37:36.950 --> 00:37:39.670
<v Speaker 2>and we're calling into the cluster accessing services

00:37:39.670 --> 00:37:41.110
<v Speaker 2>that are not running on my machine.

00:37:41.510 --> 00:37:42.630
<v Speaker 2>When I first saw that, I was like,

00:37:42.630 --> 00:37:44.550
<v Speaker 2>woah. Yeah. That's pretty cool. Right?

00:37:45.190 --> 00:37:47.430
<v Speaker 0>Yeah. That is definitely very cool. I mean,

00:37:47.430 --> 00:37:48.550
<v Speaker 0>that means I could be on the call

00:37:48.550 --> 00:37:50.835
<v Speaker 0>with a very unhappy client who's telling me

00:37:50.835 --> 00:37:52.195
<v Speaker 0>to change the colors of something and just

00:37:52.195 --> 00:37:53.475
<v Speaker 0>actually do a nice thing.

00:37:54.195 --> 00:37:56.115
<v Speaker 2>That's the inspiration for the demo. I'm telling

00:37:56.115 --> 00:37:59.315
<v Speaker 2>you, I've been there. Yeah. Especially with remote

00:37:59.315 --> 00:38:01.315
<v Speaker 0>work. No. Your margin's not right. One more

00:38:01.315 --> 00:38:03.080
<v Speaker 0>pixel. No. Two more pixel. Yeah.

00:38:03.320 --> 00:38:06.200
<v Speaker 2>CSS. Right? I I I really should be

00:38:06.200 --> 00:38:07.640
<v Speaker 0>better at CSS. It's one of those things

00:38:07.640 --> 00:38:08.360
<v Speaker 0>I keep

00:38:08.760 --> 00:38:10.280
<v Speaker 0>I keep thinking I should be better at

00:38:10.280 --> 00:38:11.320
<v Speaker 0>and then every time I look at it,

00:38:11.320 --> 00:38:13.400
<v Speaker 0>I'm like, no. Not for me. Okay.

00:38:14.360 --> 00:38:16.200
<v Speaker 0>So I'm gonna try not to skip any

00:38:16.200 --> 00:38:17.640
<v Speaker 0>more stuff here and have you have to

00:38:17.640 --> 00:38:19.625
<v Speaker 0>correct me. But I think we've done this

00:38:19.625 --> 00:38:21.305
<v Speaker 0>back here. We've made a code change. We've

00:38:21.305 --> 00:38:24.425
<v Speaker 0>seen our NPM service restart locally at all

00:38:24.425 --> 00:38:26.025
<v Speaker 0>the traffic within the cluster is now seen

00:38:26.025 --> 00:38:26.905
<v Speaker 0>our new value.

00:38:27.225 --> 00:38:28.105
<v Speaker 0>Very cool.

00:38:28.984 --> 00:38:32.025
<v Speaker 0>Now we can do a Telepresence leave on

00:38:32.025 --> 00:38:34.500
<v Speaker 0>this service, which I'm assuming just means that

00:38:34.500 --> 00:38:36.420
<v Speaker 0>the traffic will no longer be routed to

00:38:36.420 --> 00:38:37.380
<v Speaker 0>my machine.

00:38:38.580 --> 00:38:40.420
<v Speaker 1>Yes. It's just gonna tear down that intercept

00:38:40.420 --> 00:38:43.940
<v Speaker 1>that we created and and disconnect the the

00:38:43.940 --> 00:38:44.740
<v Speaker 1>the

00:38:44.900 --> 00:38:47.225
<v Speaker 1>the tunnel for that. The overall tunnel will

00:38:47.225 --> 00:38:50.025
<v Speaker 1>still be up, but the connection for for

00:38:50.025 --> 00:38:51.625
<v Speaker 1>that intercept will be down.

00:38:54.665 --> 00:38:55.385
<v Speaker 0>Okay.

00:38:55.785 --> 00:38:57.705
<v Speaker 0>And now it wants me to do a

00:38:57.705 --> 00:39:00.025
<v Speaker 0>login and then do an intercept again.

00:39:01.380 --> 00:39:02.099
<v Speaker 0>Okay.

00:39:05.539 --> 00:39:07.140
<v Speaker 0>The passing is

00:39:07.299 --> 00:39:08.339
<v Speaker 0>fun for me.

00:39:09.539 --> 00:39:10.740
<v Speaker 2>That's a good bit of feedback for us,

00:39:10.740 --> 00:39:11.859
<v Speaker 2>David, actually on that one.

00:39:12.339 --> 00:39:14.259
<v Speaker 0>I I think it's just because I switched

00:39:14.259 --> 00:39:17.059
<v Speaker 0>terminal. I made it more complicated for myself

00:39:16.605 --> 00:39:18.125
<v Speaker 0>rather than anything else.

00:39:18.445 --> 00:39:19.085
<v Speaker 2>Mhmm.

00:39:20.525 --> 00:39:22.285
<v Speaker 0>Oh, so we also get a nice UI

00:39:22.285 --> 00:39:24.285
<v Speaker 0>view as well then from the the cloud

00:39:24.285 --> 00:39:25.165
<v Speaker 0>interface.

00:39:26.205 --> 00:39:26.925
<v Speaker 0>Mhmm.

00:39:27.405 --> 00:39:29.085
<v Speaker 2>Yeah. So Peter was mentioning earlier, we call

00:39:29.085 --> 00:39:31.725
<v Speaker 2>this our service catalog. So we use annotations.

00:39:31.910 --> 00:39:33.750
<v Speaker 2>So you just add annotations to your Kubernetes

00:39:33.750 --> 00:39:35.670
<v Speaker 2>services. If you actually Dave, if you pop

00:39:35.670 --> 00:39:36.790
<v Speaker 2>that to the cluster, you can do a

00:39:36.790 --> 00:39:37.830
<v Speaker 2>k or describe

00:39:38.550 --> 00:39:40.470
<v Speaker 2>service data processing service,

00:39:40.870 --> 00:39:43.030
<v Speaker 2>and you'll see the annotations with we're using

00:39:43.030 --> 00:39:44.070
<v Speaker 2>the ahr.i0

00:39:44.070 --> 00:39:44.390
<v Speaker 2>standard.

00:39:46.415 --> 00:39:47.695
<v Speaker 2>Data processing service.

00:39:48.415 --> 00:39:48.895
<v Speaker 2>Yeah.

00:39:49.375 --> 00:39:50.974
<v Speaker 2>In addition to all the things you usually

00:39:50.974 --> 00:39:51.535
<v Speaker 2>see

00:39:52.494 --> 00:39:53.295
<v Speaker 2>there

00:39:53.935 --> 00:39:54.655
<v Speaker 0>My

00:39:54.974 --> 00:39:56.895
<v Speaker 0>inability to type. Mhmm.

00:39:57.375 --> 00:39:59.855
<v Speaker 0>I might have got the oh, different context.

00:40:03.140 --> 00:40:04.020
<v Speaker 0>Of course.

00:40:05.859 --> 00:40:07.140
<v Speaker 0>Again,

00:40:07.380 --> 00:40:09.460
<v Speaker 0>me splitting my terminals gets me into touch.

00:40:11.059 --> 00:40:12.260
<v Speaker 2>If you scroll up a little bit, see

00:40:12.260 --> 00:40:14.099
<v Speaker 2>there, a atilde.io. Folks can pop along to

00:40:14.099 --> 00:40:15.795
<v Speaker 2>a tilde.io and see we've got a bunch

00:40:15.795 --> 00:40:18.035
<v Speaker 2>of sort of standardized annotations.

00:40:18.195 --> 00:40:20.195
<v Speaker 2>And you can add in, you know, links

00:40:20.195 --> 00:40:23.155
<v Speaker 2>to Slack, links to GitHub repos.

00:40:23.155 --> 00:40:25.155
<v Speaker 2>And when you pop back the service catalog,

00:40:25.234 --> 00:40:27.555
<v Speaker 2>we'll pass those annotations

00:40:27.555 --> 00:40:29.234
<v Speaker 2>into the metadata you see in the service

00:40:29.234 --> 00:40:29.555
<v Speaker 2>catalog.

00:40:31.270 --> 00:40:32.950
<v Speaker 0>Yeah. That's very cool. It's one of those

00:40:32.950 --> 00:40:34.390
<v Speaker 0>things that you don't really realize is a

00:40:34.390 --> 00:40:36.230
<v Speaker 0>problem until your team is dealing with dozens

00:40:36.230 --> 00:40:37.910
<v Speaker 0>to hundreds of micro services.

00:40:37.910 --> 00:40:39.430
<v Speaker 0>One of them is causing problems. You need

00:40:39.430 --> 00:40:41.109
<v Speaker 0>to be able to oh, there's my dog.

00:40:41.109 --> 00:40:42.390
<v Speaker 0>You have to be able to reach out

00:40:42.390 --> 00:40:43.829
<v Speaker 0>to them and work out, oh, well, who

00:40:43.829 --> 00:40:45.030
<v Speaker 0>do I even need to speak to first?

00:40:45.285 --> 00:40:47.125
<v Speaker 0>Didn't realize. That's exactly the use case. So,

00:40:47.125 --> 00:40:48.325
<v Speaker 2>yeah, we've we've, like, we've chatted a lot

00:40:48.325 --> 00:40:49.684
<v Speaker 2>of customers and they're like, when an instant,

00:40:49.684 --> 00:40:51.605
<v Speaker 2>you know, page duty fires off 3AM,

00:40:51.684 --> 00:40:52.964
<v Speaker 2>even being able to see who owns the

00:40:52.964 --> 00:40:55.125
<v Speaker 2>service and where the repo is is like

00:40:55.125 --> 00:40:57.605
<v Speaker 2>gold. Yeah? So and and then, you you

00:40:57.605 --> 00:40:59.240
<v Speaker 2>know, you don't have to use master cloud.

00:40:59.240 --> 00:41:00.200
<v Speaker 2>You can just put the a t r

00:41:00.200 --> 00:41:02.040
<v Speaker 2>dot I o annotations there and, you know,

00:41:02.119 --> 00:41:03.640
<v Speaker 2>80% of the value. But if you want

00:41:03.640 --> 00:41:04.920
<v Speaker 2>that nice UI onto it and you can

00:41:04.920 --> 00:41:07.160
<v Speaker 2>drill into the services and explore around there,

00:41:07.160 --> 00:41:08.760
<v Speaker 2>master cloud gives you that one. The community

00:41:08.760 --> 00:41:10.520
<v Speaker 2>license free for as many services as you

00:41:10.520 --> 00:41:11.960
<v Speaker 2>like for the annotations.

00:41:12.785 --> 00:41:13.745
<v Speaker 0>Nice.

00:41:14.145 --> 00:41:15.745
<v Speaker 0>Well, looks like one of our audience viewers

00:41:15.745 --> 00:41:17.905
<v Speaker 0>just ran into some trouble by deleting everything

00:41:17.905 --> 00:41:19.025
<v Speaker 0>on their cluster.

00:41:19.185 --> 00:41:19.665
<v Speaker 0>What?

00:41:20.465 --> 00:41:21.345
<v Speaker 2>Oh, no.

00:41:23.745 --> 00:41:25.730
<v Speaker 0>Unlucky no. I'm

00:41:25.730 --> 00:41:28.050
<v Speaker 0>only taking partial blame for you working while

00:41:28.050 --> 00:41:29.490
<v Speaker 0>watching this, but still.

00:41:32.290 --> 00:41:34.210
<v Speaker 0>Okay. So I like the service catalog

00:41:34.290 --> 00:41:35.970
<v Speaker 0>and a lot of values there

00:41:36.450 --> 00:41:38.210
<v Speaker 0>and

00:41:37.335 --> 00:41:39.655
<v Speaker 0>let's see what's next. So we've done the

00:41:39.655 --> 00:41:42.375
<v Speaker 0>login, we've seen the service catalog and we're

00:41:42.375 --> 00:41:44.295
<v Speaker 0>gonna run the intercept again. So what is

00:41:44.295 --> 00:41:47.095
<v Speaker 0>different from running the intercept as an unauthenticated

00:41:47.095 --> 00:41:49.815
<v Speaker 0>user versus running it as an authenticated user?

00:41:50.135 --> 00:41:51.974
<v Speaker 0>Is this where the team functionality

00:41:51.974 --> 00:41:52.455
<v Speaker 0>comes in?

00:41:53.920 --> 00:41:55.760
<v Speaker 1>Yes. And so now now once you run

00:41:55.760 --> 00:41:57.040
<v Speaker 1>this, it's going to prompt you for a

00:41:57.040 --> 00:41:58.800
<v Speaker 1>lot more information because

00:41:59.200 --> 00:41:59.840
<v Speaker 1>now

00:42:00.080 --> 00:42:02.320
<v Speaker 1>because it's running in that kind of collaborative

00:42:02.320 --> 00:42:04.800
<v Speaker 1>intercept mode, it wants to know, okay,

00:42:05.360 --> 00:42:06.960
<v Speaker 1>we're gonna create this thing called a preview

00:42:06.960 --> 00:42:10.085
<v Speaker 1>URL, which is gonna show you your application,

00:42:10.484 --> 00:42:13.285
<v Speaker 1>while using this intercept and only this intercept.

00:42:13.285 --> 00:42:15.525
<v Speaker 1>So so now this is a specialized view.

00:42:15.925 --> 00:42:17.444
<v Speaker 1>And so we're not gonna be use

00:42:18.085 --> 00:42:20.244
<v Speaker 1>we're gonna be using the the very large

00:42:20.244 --> 00:42:22.405
<v Speaker 1>Java service dot default namespace for this one.

00:42:23.460 --> 00:42:25.860
<v Speaker 1>And so so this way, right, this preview

00:42:25.860 --> 00:42:28.260
<v Speaker 1>URL is only going to show what this

00:42:28.260 --> 00:42:30.740
<v Speaker 1>application looks like while using your intercept, and

00:42:30.740 --> 00:42:32.580
<v Speaker 1>you can share that with anyone while the

00:42:32.580 --> 00:42:33.940
<v Speaker 1>main ingress is unaffected.

00:42:36.215 --> 00:42:37.655
<v Speaker 0>I mean, that sounds good.

00:42:39.495 --> 00:42:41.415
<v Speaker 0>Okay. So what should I be typing here

00:42:41.415 --> 00:42:44.535
<v Speaker 0>for our ingress IP address? Is that

00:42:45.255 --> 00:42:47.175
<v Speaker 0>gonna be This is the service that

00:42:48.150 --> 00:42:49.829
<v Speaker 1>yeah. This is the service that we want

00:42:49.829 --> 00:42:52.230
<v Speaker 1>to, render when we go to this preview

00:42:52.230 --> 00:42:53.829
<v Speaker 1>URL. So we wanna see that,

00:42:54.789 --> 00:42:56.230
<v Speaker 1>the the orange

00:42:56.230 --> 00:42:57.670
<v Speaker 1>Educorp app,

00:42:57.990 --> 00:43:00.710
<v Speaker 1>so we're using the very large Java service

00:43:00.405 --> 00:43:02.405
<v Speaker 1>in the default namespace.

00:43:05.205 --> 00:43:05.845
<v Speaker 0>Right.

00:43:08.325 --> 00:43:10.005
<v Speaker 1>Port We're gonna be using

00:43:10.645 --> 00:43:11.525
<v Speaker 1>8080,

00:43:11.525 --> 00:43:12.245
<v Speaker 1>I believe.

00:43:13.685 --> 00:43:15.125
<v Speaker 0>Should I be looking at the docs and

00:43:15.125 --> 00:43:17.840
<v Speaker 0>you're just letting me me? It's looking pretty

00:43:17.840 --> 00:43:18.720
<v Speaker 2>good so far.

00:43:19.680 --> 00:43:20.800
<v Speaker 2>I'm not you know, I'm always going to

00:43:20.800 --> 00:43:22.800
<v Speaker 2>remember as well. TLS now. Yeah.

00:43:24.240 --> 00:43:25.600
<v Speaker 0>Alright. No.

00:43:26.640 --> 00:43:28.400
<v Speaker 0>I won't ask you anymore. I'll just I'll

00:43:28.400 --> 00:43:30.000
<v Speaker 0>read the documentation like I could say.

00:43:30.984 --> 00:43:31.785
<v Speaker 0>Okay.

00:43:31.785 --> 00:43:32.665
<v Speaker 0>So now

00:43:33.545 --> 00:43:35.545
<v Speaker 0>I think we're just having return here. Right?

00:43:35.545 --> 00:43:36.265
<v Speaker 1>That's

00:43:36.425 --> 00:43:37.065
<v Speaker 1>Yep.

00:43:37.545 --> 00:43:38.905
<v Speaker 0>Okay. We're just using the default. Okay.

00:43:44.490 --> 00:43:46.490
<v Speaker 1>See, and this is this is interesting because

00:43:46.490 --> 00:43:49.370
<v Speaker 1>we're intercepting on the data processing service, but

00:43:49.370 --> 00:43:51.770
<v Speaker 1>we're rendering the very large Java service for

00:43:51.770 --> 00:43:52.650
<v Speaker 1>our preview.

00:43:52.810 --> 00:43:54.890
<v Speaker 1>And so it's showing it's showing that connection

00:43:54.890 --> 00:43:56.250
<v Speaker 1>flow of, like, this is what your application

00:43:56.250 --> 00:43:57.690
<v Speaker 1>is going to look like from the front

00:43:57.785 --> 00:44:00.185
<v Speaker 1>even though we've changed one of the middle

00:44:00.185 --> 00:44:00.985
<v Speaker 1>services

00:44:01.785 --> 00:44:03.225
<v Speaker 1>further down the stack.

00:44:04.185 --> 00:44:04.585
<v Speaker 0>Okay.

00:44:05.145 --> 00:44:05.705
<v Speaker 0>So

00:44:06.105 --> 00:44:08.825
<v Speaker 0>is this is this stalling because it's it's

00:44:08.825 --> 00:44:10.740
<v Speaker 0>now doing the thing? Like, I should just

00:44:10.740 --> 00:44:12.660
<v Speaker 0>leave that and and move on. Right? Okay.

00:44:12.660 --> 00:44:14.660
<v Speaker 0>I won't wait for that to finish. I

00:44:14.660 --> 00:44:16.740
<v Speaker 0>just wanna make sure I know what's going

00:44:16.740 --> 00:44:19.380
<v Speaker 0>on on this side. So we're not intercepting

00:44:19.380 --> 00:44:20.980
<v Speaker 0>our NPM one anymore. Does this mean this

00:44:20.980 --> 00:44:22.500
<v Speaker 0>is gonna be green again?

00:44:24.195 --> 00:44:26.275
<v Speaker 0>Or are we still intercepting? No. We don't.

00:44:26.275 --> 00:44:27.955
<v Speaker 0>We left. Right? We got a a Telepresence

00:44:27.955 --> 00:44:28.515
<v Speaker 0>leave.

00:44:29.155 --> 00:44:31.155
<v Speaker 1>We left the intercept. So this should revert

00:44:31.155 --> 00:44:32.995
<v Speaker 1>back to the default view

00:44:33.155 --> 00:44:35.635
<v Speaker 1>that it was before we did anything. And

00:44:35.635 --> 00:44:38.595
<v Speaker 1>then once that preview URL is created right?

00:44:38.595 --> 00:44:40.290
<v Speaker 1>And so so that takes a a little

00:44:40.290 --> 00:44:41.890
<v Speaker 1>bit of time because that's reaching out to

00:44:41.890 --> 00:44:43.650
<v Speaker 1>the ambassador cloud, and it's creating,

00:44:43.970 --> 00:44:46.530
<v Speaker 1>that network connection, and it's also creating, the

00:44:46.530 --> 00:44:48.290
<v Speaker 1>the this DNS

00:44:48.290 --> 00:44:50.050
<v Speaker 1>for the preview URL. So it takes a

00:44:50.050 --> 00:44:51.810
<v Speaker 1>little bit of time for all those pieces

00:44:51.965 --> 00:44:54.365
<v Speaker 1>to to kind of come together.

00:44:54.605 --> 00:44:56.125
<v Speaker 1>And so here here, we can see that

00:44:56.125 --> 00:44:58.205
<v Speaker 1>that has popped up now. The second to

00:44:58.205 --> 00:45:00.525
<v Speaker 1>last line there is our our new preview

00:45:00.525 --> 00:45:01.325
<v Speaker 1>URL.

00:45:04.205 --> 00:45:05.485
<v Speaker 0>Hstack.me.

00:45:07.790 --> 00:45:08.590
<v Speaker 0>Okay.

00:45:14.750 --> 00:45:16.430
<v Speaker 1>Right. And so now this is rendering that

00:45:16.430 --> 00:45:18.670
<v Speaker 1>orange view that you created earlier.

00:45:21.615 --> 00:45:22.255
<v Speaker 0>What?

00:45:23.775 --> 00:45:25.855
<v Speaker 0>So you're hitting the same front end Java

00:45:25.855 --> 00:45:28.415
<v Speaker 2>service, but because the preview URL injects a

00:45:28.415 --> 00:45:30.495
<v Speaker 2>header and we pass that header down through,

00:45:30.495 --> 00:45:32.655
<v Speaker 2>Telepresence is smart enough to say, when the

00:45:32.655 --> 00:45:34.580
<v Speaker 2>header is present on the preview URL, show

00:45:34.580 --> 00:45:36.500
<v Speaker 2>me the local stuff, route to the local.

00:45:36.500 --> 00:45:38.420
<v Speaker 2>And when there's no header present, pass me

00:45:38.420 --> 00:45:38.900
<v Speaker 2>through.

00:45:39.620 --> 00:45:40.900
<v Speaker 0>Right. Okay. So we

00:45:42.180 --> 00:45:43.620
<v Speaker 0>There was a disconnect in my head there.

00:45:43.620 --> 00:45:45.220
<v Speaker 0>But we ran the same intercept command we

00:45:45.220 --> 00:45:48.494
<v Speaker 0>did previously. But because were authenticated this time,

00:45:48.494 --> 00:45:50.494
<v Speaker 0>it's allowing us to have an actual ingress

00:45:50.494 --> 00:45:52.815
<v Speaker 0>preview environment that does some sort of traffic

00:45:52.815 --> 00:45:54.815
<v Speaker 0>shaping. So the only I am seeing the

00:45:54.815 --> 00:45:55.615
<v Speaker 0>orange one.

00:45:55.935 --> 00:45:58.015
<v Speaker 0>Okay. But if I refresh here,

00:45:58.734 --> 00:46:00.255
<v Speaker 0>we still got the green one. Okay. It

00:46:00.255 --> 00:46:01.455
<v Speaker 0>clicked. I got there.

00:46:02.175 --> 00:46:02.494
<v Speaker 0>Nice.

00:46:03.750 --> 00:46:05.590
<v Speaker 0>Yeah. That's that's really cool. So that's I'm

00:46:05.590 --> 00:46:06.550
<v Speaker 0>I'm assuming

00:46:07.030 --> 00:46:09.110
<v Speaker 0>anyone watching this episode can just browse to

00:46:09.110 --> 00:46:10.790
<v Speaker 0>that URL now and they're gonna see the

00:46:10.790 --> 00:46:12.390
<v Speaker 0>orange one. That's that's now meant to share

00:46:12.390 --> 00:46:14.070
<v Speaker 0>with people. They could check it out. They

00:46:14.070 --> 00:46:15.270
<v Speaker 0>can be give me the thumbs up and

00:46:15.270 --> 00:46:17.110
<v Speaker 0>go, cool. Merge it. That that's that's us.

00:46:18.455 --> 00:46:19.895
<v Speaker 1>At the very least, they do have to

00:46:19.895 --> 00:46:22.295
<v Speaker 1>log in because this is right. This is

00:46:22.295 --> 00:46:24.295
<v Speaker 1>an authenticated view, so they have to at

00:46:24.295 --> 00:46:26.535
<v Speaker 1>least log into AmbassadorCloud

00:46:26.535 --> 00:46:29.335
<v Speaker 1>so that you can see which users clicked

00:46:29.335 --> 00:46:31.095
<v Speaker 1>on this link. Right? So so so that

00:46:31.095 --> 00:46:32.910
<v Speaker 1>there is there's some

00:46:33.230 --> 00:46:34.670
<v Speaker 1>it's not just a public,

00:46:35.790 --> 00:46:37.310
<v Speaker 1>URL where anyone in the world can click

00:46:37.310 --> 00:46:38.750
<v Speaker 1>it. You have to at least authenticate to

00:46:38.750 --> 00:46:40.030
<v Speaker 1>Ambassador Cloud.

00:46:41.069 --> 00:46:41.710
<v Speaker 0>Okay.

00:46:42.030 --> 00:46:43.710
<v Speaker 0>I mean, I'm I'm gonna test that. But

00:46:44.565 --> 00:46:46.724
<v Speaker 0>I I do trust you. That's that's all

00:46:46.724 --> 00:46:47.685
<v Speaker 0>I'm saying. So

00:46:49.204 --> 00:46:50.325
<v Speaker 0>if I go to it and I say,

00:46:50.325 --> 00:46:52.085
<v Speaker 0>okay. You have to log in. You gotta

00:46:52.085 --> 00:46:54.244
<v Speaker 0>be authentic. That's a really cool feature as

00:46:54.244 --> 00:46:54.645
<v Speaker 0>well.

00:46:55.525 --> 00:46:56.964
<v Speaker 0>There's

00:46:56.964 --> 00:46:58.645
<v Speaker 0>lots to love here. That's really cool.

00:47:00.020 --> 00:47:01.940
<v Speaker 0>Alright. Let's see what's next. What more magic

00:47:01.940 --> 00:47:03.060
<v Speaker 0>am I getting today?

00:47:03.700 --> 00:47:05.700
<v Speaker 0>So yeah, we've browsed that. We saw the

00:47:05.700 --> 00:47:07.300
<v Speaker 0>green. We've seen the orange on the preview

00:47:07.300 --> 00:47:10.980
<v Speaker 0>environment. What's next? So we've got collaborating open

00:47:10.980 --> 00:47:12.260
<v Speaker 0>sessions and then the FAQs.

00:47:13.465 --> 00:47:14.825
<v Speaker 0>Cool. What should we

00:47:16.025 --> 00:47:17.465
<v Speaker 0>what should I click on next?

00:47:19.625 --> 00:47:21.865
<v Speaker 0>Is it? In fact Yeah. So so so

00:47:21.865 --> 00:47:23.225
<v Speaker 1>there's definitely, like like,

00:47:23.465 --> 00:47:25.945
<v Speaker 1>quite a few other features that Telepresence have.

00:47:25.945 --> 00:47:29.160
<v Speaker 1>Like, Intercept is the the the main the

00:47:29.160 --> 00:47:30.120
<v Speaker 1>main

00:47:30.120 --> 00:47:32.360
<v Speaker 1>operating mode of Telepresence.

00:47:32.680 --> 00:47:35.000
<v Speaker 1>But if you click on, technical reference, I

00:47:35.000 --> 00:47:37.400
<v Speaker 1>believe, is where the the rest of the

00:47:37.400 --> 00:47:40.745
<v Speaker 1>options are are located under. Right? And so,

00:47:41.465 --> 00:47:44.505
<v Speaker 1>one that we've recently we've recently we've recently

00:47:44.505 --> 00:47:47.145
<v Speaker 1>released is the the Docker for Intercepts. Daniel

00:47:47.145 --> 00:47:48.905
<v Speaker 1>was talking about that earlier, but then there

00:47:48.905 --> 00:47:52.185
<v Speaker 1>are also other other options here which can

00:47:52.185 --> 00:47:55.550
<v Speaker 1>which can kind of enhance your local development,

00:47:55.710 --> 00:47:58.750
<v Speaker 1>experience by using using containers that have volume

00:47:58.750 --> 00:48:00.030
<v Speaker 1>mounts or,

00:48:00.350 --> 00:48:02.830
<v Speaker 1>you know, passing down environment variables from your

00:48:02.830 --> 00:48:04.590
<v Speaker 1>cluster directly into,

00:48:04.750 --> 00:48:06.990
<v Speaker 1>your locally running services. So there are quite

00:48:06.990 --> 00:48:09.265
<v Speaker 1>a few different ways in which you can

00:48:09.265 --> 00:48:11.345
<v Speaker 1>enhance the Intercept experience.

00:48:12.385 --> 00:48:14.465
<v Speaker 0>Yeah. Okay. We we can run through some

00:48:14.465 --> 00:48:16.385
<v Speaker 0>of this this technical reference in a second.

00:48:16.385 --> 00:48:17.345
<v Speaker 0>I I just

00:48:17.585 --> 00:48:19.105
<v Speaker 0>I'm gonna come back to the demo we've

00:48:19.105 --> 00:48:20.465
<v Speaker 0>just done for a second because

00:48:21.090 --> 00:48:23.010
<v Speaker 0>it's just dawned on me that this is

00:48:23.090 --> 00:48:25.330
<v Speaker 0>completely different to every other tool that's trying

00:48:25.330 --> 00:48:27.970
<v Speaker 0>to solve this challenge. Ambassador

00:48:27.970 --> 00:48:30.770
<v Speaker 0>has made this a networking problem rather than

00:48:30.770 --> 00:48:33.535
<v Speaker 0>a fail sync problem. Yeah. One of the

00:48:33.535 --> 00:48:35.055
<v Speaker 0>things I see with all these dev tools

00:48:35.055 --> 00:48:37.615
<v Speaker 0>is either they're doing a container about locally

00:48:37.615 --> 00:48:39.055
<v Speaker 0>pushing it to a registry, pulling it in

00:48:39.055 --> 00:48:41.295
<v Speaker 0>the cluster, and then doing a port forward,

00:48:41.615 --> 00:48:44.255
<v Speaker 0>or they're literally syncing the entire file system

00:48:44.255 --> 00:48:46.655
<v Speaker 0>locally and to something inside of the cluster

00:48:46.655 --> 00:48:47.935
<v Speaker 0>and trying to handle this way.

00:48:49.110 --> 00:48:52.230
<v Speaker 0>This seems really different and in a really

00:48:52.230 --> 00:48:54.230
<v Speaker 0>really good way and that you've just went,

00:48:54.230 --> 00:48:55.830
<v Speaker 0>no, let's work locally

00:48:55.990 --> 00:48:58.070
<v Speaker 0>and we'll do all the traffic magic and

00:48:58.070 --> 00:49:00.550
<v Speaker 0>it definitely is traffic magic. There's no doubt.

00:49:00.550 --> 00:49:02.415
<v Speaker 0>I mean, this isn't real.

00:49:03.055 --> 00:49:05.375
<v Speaker 0>I think that's really really interesting. I don't

00:49:05.375 --> 00:49:06.975
<v Speaker 0>know why that hadn't clicked in my head

00:49:06.975 --> 00:49:07.615
<v Speaker 0>before

00:49:07.935 --> 00:49:10.255
<v Speaker 0>this session but I don't think anyone else

00:49:10.255 --> 00:49:11.535
<v Speaker 0>is solving it in this way.

00:49:12.015 --> 00:49:13.375
<v Speaker 0>And now I understand why we have a

00:49:13.375 --> 00:49:15.055
<v Speaker 0>Java engineer and a network engineer on our

00:49:15.055 --> 00:49:17.380
<v Speaker 0>call as we dissect the problem of what

00:49:17.380 --> 00:49:19.460
<v Speaker 0>Telepresence is doing. It's like this is a

00:49:19.460 --> 00:49:21.300
<v Speaker 0>networking approach to a challenge that has been

00:49:21.300 --> 00:49:22.580
<v Speaker 0>solved multitude

00:49:22.580 --> 00:49:23.540
<v Speaker 0>of other ways.

00:49:24.100 --> 00:49:25.700
<v Speaker 0>But this one just seems to work

00:49:26.100 --> 00:49:28.020
<v Speaker 0>better in my very limited experience.

00:49:29.214 --> 00:49:31.375
<v Speaker 2>Super interesting you noticed that, though, because that

00:49:31.375 --> 00:49:32.974
<v Speaker 2>that's like it's a great inference because Peter

00:49:32.974 --> 00:49:34.255
<v Speaker 2>and I are big fans of Scaffold. So

00:49:34.255 --> 00:49:35.455
<v Speaker 2>we use Scaffold quite a lot, which is

00:49:35.455 --> 00:49:37.295
<v Speaker 2>a Google tool for basically automating the build

00:49:37.295 --> 00:49:40.175
<v Speaker 2>of containers behind the scenes. So we talked

00:49:40.175 --> 00:49:41.535
<v Speaker 2>earlier about fidelity.

00:49:41.535 --> 00:49:44.580
<v Speaker 2>There's some argument that if you're using Scaffold,

00:49:44.740 --> 00:49:47.140
<v Speaker 2>syncing up either file system or or more

00:49:47.140 --> 00:49:49.940
<v Speaker 2>correctly, using Scaffold to automate the building of

00:49:49.940 --> 00:49:51.940
<v Speaker 2>the container and pushing up. So you're coding

00:49:51.940 --> 00:49:53.140
<v Speaker 2>away. You hit build.

00:49:53.380 --> 00:49:54.660
<v Speaker 2>Scaffold magically

00:49:54.740 --> 00:49:57.140
<v Speaker 2>pushes your container up behind the scenes.

00:49:57.539 --> 00:49:59.175
<v Speaker 2>Then what you're testing against in the cluster

00:49:59.175 --> 00:50:01.575
<v Speaker 2>is exactly what you're gonna deploy or very

00:50:01.575 --> 00:50:02.775
<v Speaker 2>close to it because it's built in a

00:50:02.775 --> 00:50:05.095
<v Speaker 2>container. The one thing with Telepresence is you

00:50:05.095 --> 00:50:07.415
<v Speaker 2>actually are running it typically outside of a

00:50:07.415 --> 00:50:08.535
<v Speaker 2>container locally.

00:50:08.935 --> 00:50:10.615
<v Speaker 2>Does that make sense? So that that's like

00:50:10.695 --> 00:50:11.740
<v Speaker 2>in terms of I've heard a few folks

00:50:11.740 --> 00:50:13.580
<v Speaker 2>say, oh, fidelity wise, Scaffold gives me that

00:50:13.580 --> 00:50:16.620
<v Speaker 2>high fidelity. It's like, totally get it, but

00:50:16.620 --> 00:50:19.020
<v Speaker 2>Telepresence is that gives you a faster dev

00:50:19.020 --> 00:50:20.860
<v Speaker 2>loop. And then right at the end, you

00:50:20.860 --> 00:50:22.540
<v Speaker 2>can use Scaffold. So Peter and I both

00:50:22.540 --> 00:50:24.300
<v Speaker 2>can say that. It's it's not an either

00:50:24.300 --> 00:50:26.300
<v Speaker 2>or. Right? You can use Telepresence super fast

00:50:26.300 --> 00:50:28.385
<v Speaker 2>dev loop, then you can have Scaffold in

00:50:28.385 --> 00:50:30.065
<v Speaker 2>the background uploading

00:50:30.065 --> 00:50:31.905
<v Speaker 2>to to an actual container

00:50:31.984 --> 00:50:33.984
<v Speaker 2>to give you that super high fidelity. So

00:50:33.984 --> 00:50:35.505
<v Speaker 2>all these tools plug together, but you are

00:50:35.505 --> 00:50:37.025
<v Speaker 2>spot on in terms of the file system

00:50:37.025 --> 00:50:37.665
<v Speaker 2>approach

00:50:37.984 --> 00:50:40.859
<v Speaker 2>and all the container approach versus the networking

00:50:40.859 --> 00:50:41.500
<v Speaker 2>approach.

00:50:42.380 --> 00:50:45.260
<v Speaker 0>Yeah. I think that feedback loop is what's

00:50:45.260 --> 00:50:47.260
<v Speaker 0>so important here. You know, again, I do

00:50:47.260 --> 00:50:48.700
<v Speaker 0>a lot of Rust. Like, if I'm working

00:50:48.700 --> 00:50:49.980
<v Speaker 0>on my Rust application

00:50:50.059 --> 00:50:52.460
<v Speaker 0>and doing compilations and run locally, I mean,

00:50:52.460 --> 00:50:54.695
<v Speaker 0>there has some level of hot reloading and

00:50:54.695 --> 00:50:57.175
<v Speaker 0>getting that really quick feedback loop even without

00:50:57.175 --> 00:50:59.655
<v Speaker 0>running it in Kubernetes, which is nice. But

00:50:59.655 --> 00:51:01.415
<v Speaker 0>then because it's a compiled application that runs

00:51:01.415 --> 00:51:03.015
<v Speaker 0>on a Docker container, you can get it.

00:51:03.015 --> 00:51:04.135
<v Speaker 0>At the end, I can see why I'd

00:51:04.135 --> 00:51:05.975
<v Speaker 0>want to say, you just tell it or

00:51:05.975 --> 00:51:08.055
<v Speaker 0>scaffold or something that's gonna do the build,

00:51:08.055 --> 00:51:09.735
<v Speaker 0>deploy it, and then make sure that everything

00:51:09.735 --> 00:51:10.850
<v Speaker 0>still works the way I want it to

00:51:10.850 --> 00:51:12.050
<v Speaker 0>work. So it's

00:51:12.050 --> 00:51:15.170
<v Speaker 0>not either or, it's find what works right

00:51:15.170 --> 00:51:17.410
<v Speaker 0>for you and and leverage it. That's really

00:51:17.410 --> 00:51:17.970
<v Speaker 0>cool.

00:51:19.490 --> 00:51:20.290
<v Speaker 0>Wow.

00:51:20.450 --> 00:51:22.690
<v Speaker 0>I mean, I never like networking stuff but

00:51:22.690 --> 00:51:25.105
<v Speaker 0>today I think it's it's definitely changing for

00:51:25.105 --> 00:51:27.185
<v Speaker 0>me. I'm starting to appreciate networking a lot

00:51:27.185 --> 00:51:27.585
<v Speaker 0>more.

00:51:28.145 --> 00:51:29.425
<v Speaker 0>We have a a question. Sorry.

00:51:29.905 --> 00:51:31.345
<v Speaker 0>I didn't go up here. Mhmm. Go ahead.

00:51:31.585 --> 00:51:33.425
<v Speaker 1>I'll say And and, like like, there's a

00:51:33.425 --> 00:51:34.465
<v Speaker 1>lot of times when you are working on

00:51:34.465 --> 00:51:36.625
<v Speaker 1>that local service where you just have the

00:51:36.625 --> 00:51:38.465
<v Speaker 1>external external dependencies

00:51:38.465 --> 00:51:39.105
<v Speaker 1>where

00:51:39.640 --> 00:51:41.240
<v Speaker 1>like, most of the time, it's like a

00:51:41.240 --> 00:51:43.000
<v Speaker 1>database or something where you just need to

00:51:43.000 --> 00:51:44.840
<v Speaker 1>connect to it, and that's exposed via service.

00:51:44.840 --> 00:51:46.920
<v Speaker 1>And you just want access to that stuff,

00:51:46.920 --> 00:51:49.080
<v Speaker 1>right, without creating all the network tunnels yourself.

00:51:49.080 --> 00:51:51.400
<v Speaker 1>And so just doing, a simple Telepresence Connect

00:51:51.400 --> 00:51:53.640
<v Speaker 1>and then allowing your local service to connect

00:51:53.640 --> 00:51:55.955
<v Speaker 1>to those things just makes even those processes

00:51:55.955 --> 00:51:58.435
<v Speaker 1>just so much faster, so much more seamless.

00:51:58.915 --> 00:51:59.555
<v Speaker 2>Awesome.

00:52:00.915 --> 00:52:03.315
<v Speaker 0>Okay. We we got a question from Russell

00:52:03.315 --> 00:52:04.115
<v Speaker 0>in the chat.

00:52:07.100 --> 00:52:09.340
<v Speaker 0>Is the login for the preview environment a

00:52:09.340 --> 00:52:11.740
<v Speaker 0>required feature if I'm using my own cluster?

00:52:11.740 --> 00:52:14.060
<v Speaker 0>What's the situation there? Yeah. That's a that's

00:52:14.060 --> 00:52:15.900
<v Speaker 0>a good question there. Can we can we

00:52:15.900 --> 00:52:16.620
<v Speaker 0>answer that?

00:52:17.500 --> 00:52:21.020
<v Speaker 1>So the ambassador cloud login is a requirement

00:52:21.020 --> 00:52:23.345
<v Speaker 1>for to do the collaboration features where you

00:52:23.345 --> 00:52:24.944
<v Speaker 1>want to create the preview URL or you

00:52:24.944 --> 00:52:26.625
<v Speaker 1>want to do selected intercepts,

00:52:26.944 --> 00:52:28.225
<v Speaker 1>which is which is

00:52:28.625 --> 00:52:30.464
<v Speaker 1>it it's also a requirement if you wanna

00:52:30.464 --> 00:52:32.065
<v Speaker 1>use our demo clusters,

00:52:32.224 --> 00:52:34.145
<v Speaker 1>but for separate reasons. Right? Like,

00:52:34.865 --> 00:52:37.760
<v Speaker 1>we we we giving a demo cluster, right,

00:52:37.760 --> 00:52:39.119
<v Speaker 1>we need to at least know who you

00:52:39.119 --> 00:52:40.560
<v Speaker 1>are and who's receiving it so that we

00:52:40.560 --> 00:52:42.640
<v Speaker 1>have some level of tracking. And so that's

00:52:42.640 --> 00:52:44.800
<v Speaker 1>kind of the requirement there. But for the

00:52:44.800 --> 00:52:45.839
<v Speaker 1>the segregated,

00:52:46.000 --> 00:52:46.720
<v Speaker 1>traffic,

00:52:47.040 --> 00:52:47.840
<v Speaker 1>intercepts,

00:52:48.000 --> 00:52:49.359
<v Speaker 1>those ones, we

00:52:50.125 --> 00:52:51.885
<v Speaker 1>you also wanna see who where the traffic's

00:52:51.885 --> 00:52:54.285
<v Speaker 1>going to, who's actually viewing the preview URLs,

00:52:54.285 --> 00:52:56.525
<v Speaker 1>and it gives it much more organization,

00:52:56.765 --> 00:52:59.325
<v Speaker 1>to understand how that whole process is working.

00:52:59.645 --> 00:53:02.365
<v Speaker 1>But you can use the default intercept all

00:53:02.365 --> 00:53:04.845
<v Speaker 1>traffic without having to log in to Ambassador

00:53:04.710 --> 00:53:05.430
<v Speaker 1>Cloud.

00:53:05.510 --> 00:53:08.070
<v Speaker 1>And I do know some some users really

00:53:08.070 --> 00:53:10.230
<v Speaker 1>prefer this when they're just working by themselves

00:53:10.230 --> 00:53:11.910
<v Speaker 1>early on in the process, and so they're

00:53:11.910 --> 00:53:13.910
<v Speaker 1>just like, oh, it's just my local cluster,

00:53:13.910 --> 00:53:15.910
<v Speaker 1>and I'm just wanting to intercept traffic for

00:53:15.910 --> 00:53:17.910
<v Speaker 1>myself. And then at some point later down

00:53:17.910 --> 00:53:19.670
<v Speaker 1>the development cycle, then they'll be like, okay.

00:53:19.785 --> 00:53:21.704
<v Speaker 1>Now I'm ready to start sharing things. And

00:53:21.704 --> 00:53:23.465
<v Speaker 1>then they can log in and do those

00:53:23.704 --> 00:53:26.185
<v Speaker 1>intercepts based on header routing.

00:53:26.744 --> 00:53:28.505
<v Speaker 0>Okay. I just wanna make sure I understood

00:53:28.505 --> 00:53:30.345
<v Speaker 0>that correctly. So if I'm using my own

00:53:30.345 --> 00:53:33.305
<v Speaker 0>Kubernetes clusters and I wanted to preview environments,

00:53:34.560 --> 00:53:37.120
<v Speaker 0>I would still need the ambassador cloud account,

00:53:37.200 --> 00:53:38.640
<v Speaker 0>and my team would have to be there

00:53:38.640 --> 00:53:39.200
<v Speaker 0>too.

00:53:39.760 --> 00:53:42.560
<v Speaker 0>Okay. Correct. Yes. Mhmm. If I don't

00:53:43.280 --> 00:53:45.600
<v Speaker 0>And you go. Sorry. Is it worth actually,

00:53:45.600 --> 00:53:49.200
<v Speaker 2>if you did a a kubectl get pods

00:53:48.935 --> 00:53:51.255
<v Speaker 2>all, which would just be easier, we

00:53:51.655 --> 00:53:52.615
<v Speaker 2>can show you

00:53:54.935 --> 00:53:56.695
<v Speaker 2>as this one pops

00:53:56.695 --> 00:53:58.855
<v Speaker 2>up. You actually notice in the data processing

00:53:58.855 --> 00:54:01.280
<v Speaker 2>service, there's two containers. One of those is

00:54:01.280 --> 00:54:02.160
<v Speaker 2>a sidecar.

00:54:02.320 --> 00:54:04.160
<v Speaker 2>It's actually an Envoy proxy doing the routing

00:54:04.160 --> 00:54:06.240
<v Speaker 2>under the hood. And when you log in,

00:54:06.240 --> 00:54:08.560
<v Speaker 2>we swap the sort of the basic proxy,

00:54:08.560 --> 00:54:11.040
<v Speaker 2>which routes everything with a smart proxy.

00:54:11.200 --> 00:54:12.880
<v Speaker 2>So that's kind of the the the actual,

00:54:12.880 --> 00:54:14.735
<v Speaker 2>like, technical details there. As as you do

00:54:14.735 --> 00:54:18.015
<v Speaker 2>Telepresence login, that pod that container gets swapped

00:54:18.015 --> 00:54:19.855
<v Speaker 2>out, and then you can route based on

00:54:19.855 --> 00:54:20.975
<v Speaker 2>headers and other things.

00:54:21.455 --> 00:54:23.535
<v Speaker 0>Okay. Can can we just gonna

00:54:24.095 --> 00:54:26.335
<v Speaker 0>be clear about, like, can can I do

00:54:26.335 --> 00:54:28.015
<v Speaker 0>all of this stuff with the ambassador cloud

00:54:28.015 --> 00:54:29.775
<v Speaker 0>login? Am I on Kubernetes cluster

00:54:30.140 --> 00:54:32.380
<v Speaker 0>for free, or is this where the paying

00:54:32.380 --> 00:54:34.060
<v Speaker 0>option comes in? Like, where where is the

00:54:34.060 --> 00:54:34.860
<v Speaker 0>line here?

00:54:37.180 --> 00:54:38.460
<v Speaker 2>I think I'm pretty So

00:54:39.820 --> 00:54:40.780
<v Speaker 2>is it today? Sorry.

00:54:42.465 --> 00:54:44.385
<v Speaker 1>Yeah. I think that the line currently is

00:54:44.385 --> 00:54:44.945
<v Speaker 1>at

00:54:45.265 --> 00:54:48.145
<v Speaker 1>five managed services for for Telepresence.

00:54:48.145 --> 00:54:50.065
<v Speaker 1>So so up to that point, it is

00:54:50.065 --> 00:54:52.545
<v Speaker 1>free. Okay. So people can get started then

00:54:52.545 --> 00:54:54.145
<v Speaker 0>and start using all of these really cool

00:54:54.145 --> 00:54:56.225
<v Speaker 0>features early on and playing, kicking the tires.

00:54:56.630 --> 00:54:58.310
<v Speaker 0>And then once they're as impressed as I

00:54:58.310 --> 00:54:59.510
<v Speaker 0>am, start giving you a little bit of

00:54:59.510 --> 00:55:00.150
<v Speaker 0>money back.

00:55:00.550 --> 00:55:02.310
<v Speaker 0>That that's Right. And you can use the

00:55:02.310 --> 00:55:04.230
<v Speaker 1>and you can use the intercept all feature

00:55:04.230 --> 00:55:07.110
<v Speaker 1>all you want. Right? That's because that's unauthenticated,

00:55:07.110 --> 00:55:08.950
<v Speaker 1>and so that's our open source product, and

00:55:08.950 --> 00:55:11.190
<v Speaker 1>you can use that without any limitations.

00:55:12.095 --> 00:55:14.174
<v Speaker 1>Mhmm. So everything until you do the Telepresence

00:55:14.174 --> 00:55:15.855
<v Speaker 2>login, David, like, you know, go nuts. You

00:55:15.855 --> 00:55:16.974
<v Speaker 2>can, like, do as many things as you

00:55:16.974 --> 00:55:17.855
<v Speaker 2>like there. But as soon as you do

00:55:17.855 --> 00:55:20.095
<v Speaker 2>Telepresence login, then, yeah, the five services gets

00:55:20.255 --> 00:55:22.654
<v Speaker 2>kicks in. Yeah. Yeah. I think that makes

00:55:22.654 --> 00:55:24.095
<v Speaker 0>sense. You know, if teams wanna be able

00:55:24.095 --> 00:55:26.175
<v Speaker 0>to do preview environments like that, I think

00:55:26.255 --> 00:55:28.280
<v Speaker 0>they're solving a real problem there. So if

00:55:28.280 --> 00:55:29.960
<v Speaker 0>that makes a lot of sense. And it's

00:55:29.960 --> 00:55:31.560
<v Speaker 2>it's worth noting is that's two problems we

00:55:31.560 --> 00:55:33.080
<v Speaker 2>solve. There's one is the private kind of

00:55:33.080 --> 00:55:35.480
<v Speaker 2>mode, like, you personal intercepts we call them

00:55:35.480 --> 00:55:37.000
<v Speaker 2>as in just you carve out your little

00:55:37.000 --> 00:55:38.520
<v Speaker 2>bit of the cluster because you asked that

00:55:38.520 --> 00:55:40.359
<v Speaker 2>you're on, David. Can we both be intercepting

00:55:40.359 --> 00:55:42.615
<v Speaker 2>services, the same service? Mhmm. The answer is

00:55:42.615 --> 00:55:44.535
<v Speaker 2>yes. And, like, you I could be coding,

00:55:44.615 --> 00:55:45.815
<v Speaker 2>you'd be coding, and we're not as long

00:55:45.815 --> 00:55:47.895
<v Speaker 2>as we're not mutating state in the cluster,

00:55:47.895 --> 00:55:50.295
<v Speaker 2>we're gonna be kind of isolated. Right? But

00:55:50.295 --> 00:55:52.295
<v Speaker 2>then there's also what Peter was talking about,

00:55:52.295 --> 00:55:54.650
<v Speaker 2>the shared intercept. So Peter and I could

00:55:54.650 --> 00:55:56.250
<v Speaker 2>be pairing, typically, as you mentioned in that

00:55:56.250 --> 00:55:57.290
<v Speaker 2>remote context,

00:55:57.450 --> 00:55:59.210
<v Speaker 2>I can share the preview URL. Peter can

00:55:59.210 --> 00:56:00.490
<v Speaker 2>see exactly what I'm doing, and we can

00:56:00.490 --> 00:56:02.890
<v Speaker 2>get that super fast loop going on. So

00:56:02.890 --> 00:56:04.810
<v Speaker 2>it's kind of the personal intercept versus the

00:56:04.810 --> 00:56:05.930
<v Speaker 2>shareable intercept as well.

00:56:06.965 --> 00:56:08.165
<v Speaker 2>Awesome.

00:56:08.965 --> 00:56:11.045
<v Speaker 0>Okay. So let's cover a couple of more

00:56:11.045 --> 00:56:12.725
<v Speaker 0>things, then we'll kind of wrap up our

00:56:12.725 --> 00:56:13.765
<v Speaker 0>session for today.

00:56:14.165 --> 00:56:16.085
<v Speaker 0>We've got the technical reference here, which you

00:56:16.085 --> 00:56:17.685
<v Speaker 0>said I should just pop open.

00:56:18.725 --> 00:56:21.365
<v Speaker 0>What should we take a look at? What

00:56:22.485 --> 00:56:24.060
<v Speaker 0>what explains more of the magic?

00:56:26.940 --> 00:56:29.420
<v Speaker 1>I guess what explains the magic

00:56:30.460 --> 00:56:32.220
<v Speaker 1>right? Like, if you if you click on

00:56:32.220 --> 00:56:34.220
<v Speaker 1>DNS resolution, like, I think this is where

00:56:34.220 --> 00:56:36.140
<v Speaker 1>a lot of the magic happens. Right? And

00:56:36.140 --> 00:56:38.185
<v Speaker 1>and, right, we're we're resolving a lot of

00:56:38.185 --> 00:56:41.385
<v Speaker 1>stuff based on on namespaces and what intercept

00:56:41.385 --> 00:56:43.705
<v Speaker 1>you're using. And if you are now intercepting

00:56:43.705 --> 00:56:45.305
<v Speaker 1>something in the

00:56:45.945 --> 00:56:48.825
<v Speaker 1>namespace a, right, like like, gives you access

00:56:48.825 --> 00:56:51.065
<v Speaker 1>to everything in that namespace without having to

00:56:51.240 --> 00:56:54.520
<v Speaker 1>to list it list out, specifically the whole,

00:56:55.880 --> 00:56:57.800
<v Speaker 1>service dot namespace. It allows you to just

00:56:57.800 --> 00:56:59.320
<v Speaker 1>use those service names.

00:56:59.480 --> 00:57:01.160
<v Speaker 1>And, right, that gives you much more a

00:57:01.160 --> 00:57:02.040
<v Speaker 1>much closer,

00:57:02.280 --> 00:57:03.960
<v Speaker 1>connection to what that,

00:57:04.440 --> 00:57:06.135
<v Speaker 1>experience is if you actually are in the

00:57:06.135 --> 00:57:08.455
<v Speaker 1>cluster and something is living in that namespace.

00:57:11.655 --> 00:57:14.215
<v Speaker 0>So the Telepresence list command, does that

00:57:15.175 --> 00:57:17.015
<v Speaker 0>that just lists all of the Intercepts?

00:57:18.060 --> 00:57:19.900
<v Speaker 1>That lists all the available,

00:57:20.140 --> 00:57:23.500
<v Speaker 1>services to Intercept in the the namespace that

00:57:23.500 --> 00:57:25.820
<v Speaker 1>you're in. And it also it also shows

00:57:25.820 --> 00:57:27.900
<v Speaker 1>if one of those is already being intercepted,

00:57:27.900 --> 00:57:30.140
<v Speaker 1>then it'll show, that Intercept's

00:57:30.140 --> 00:57:30.620
<v Speaker 1>information.

00:57:31.545 --> 00:57:32.585
<v Speaker 0>Okay.

00:57:32.585 --> 00:57:33.305
<v Speaker 0>Cool.

00:57:33.545 --> 00:57:36.425
<v Speaker 0>And you mentioned that the docker intercepts as

00:57:36.425 --> 00:57:36.825
<v Speaker 0>well?

00:57:37.944 --> 00:57:38.585
<v Speaker 0>Mhmm.

00:57:38.984 --> 00:57:40.985
<v Speaker 0>So Yeah. Sorry. I need to go.

00:57:42.585 --> 00:57:44.025
<v Speaker 1>Yeah. So this is a really cool one.

00:57:44.025 --> 00:57:46.265
<v Speaker 1>I think Daniel mentioned this earlier. And so

00:57:45.870 --> 00:57:48.590
<v Speaker 1>essentially, what this does is this this

00:57:48.590 --> 00:57:50.110
<v Speaker 1>will take a local

00:57:50.510 --> 00:57:52.350
<v Speaker 1>an image that you have locally.

00:57:52.510 --> 00:57:54.270
<v Speaker 1>And when you start the Intercept, it will

00:57:54.270 --> 00:57:56.590
<v Speaker 1>start that image as a container locally on

00:57:56.590 --> 00:57:58.990
<v Speaker 1>your machine and route the traffic directly into

00:57:58.990 --> 00:57:59.630
<v Speaker 1>that container.

00:58:01.685 --> 00:58:02.645
<v Speaker 2>So

00:58:02.645 --> 00:58:04.085
<v Speaker 2>one of the use cases I've done is

00:58:04.085 --> 00:58:06.005
<v Speaker 2>I I was working on a spree app

00:58:06.005 --> 00:58:07.765
<v Speaker 2>as a Ruby framework,

00:58:08.005 --> 00:58:10.005
<v Speaker 2>and the gems were just, like, super old.

00:58:10.005 --> 00:58:11.765
<v Speaker 2>It was an old version of Ruby. Sure.

00:58:11.765 --> 00:58:13.045
<v Speaker 2>I could have used r r v m,

00:58:13.045 --> 00:58:14.760
<v Speaker 2>for example, to, you know, run different versions

00:58:14.760 --> 00:58:16.200
<v Speaker 2>of Ruby. I could have done some probably

00:58:16.200 --> 00:58:19.000
<v Speaker 2>clever things with gems. But by just running

00:58:19.000 --> 00:58:19.960
<v Speaker 2>that application

00:58:20.440 --> 00:58:21.720
<v Speaker 2>in a Docker container,

00:58:22.040 --> 00:58:23.400
<v Speaker 2>I could do it by gem installs and

00:58:23.400 --> 00:58:25.720
<v Speaker 2>gem bundles in that container,

00:58:25.960 --> 00:58:28.425
<v Speaker 2>not pollute my local file system, and then

00:58:28.425 --> 00:58:29.945
<v Speaker 2>I just routed my service

00:58:30.185 --> 00:58:31.545
<v Speaker 2>to that container.

00:58:31.625 --> 00:58:33.705
<v Speaker 2>So it's kind of like, you know, encapsulating

00:58:33.705 --> 00:58:35.945
<v Speaker 2>the dev environment. And because the the the

00:58:35.945 --> 00:58:37.785
<v Speaker 2>cool feature with volume mounts, so I can

00:58:37.785 --> 00:58:39.065
<v Speaker 2>even mount my code

00:58:39.225 --> 00:58:40.985
<v Speaker 2>into that container. Right? So I can be

00:58:40.985 --> 00:58:42.825
<v Speaker 2>coding in Versus code on my local machine,

00:58:43.460 --> 00:58:45.140
<v Speaker 2>mounting the results

00:58:45.299 --> 00:58:46.660
<v Speaker 2>into the container,

00:58:46.819 --> 00:58:49.619
<v Speaker 2>getting hot reload because Spree supports hot reload.

00:58:49.779 --> 00:58:51.460
<v Speaker 2>But that hot reload, I can be hitting

00:58:51.460 --> 00:58:54.020
<v Speaker 2>from my ingress, my actual remote ingress.

00:58:55.140 --> 00:58:56.855
<v Speaker 0>Okay. That was there's a lot of concepts

00:58:56.855 --> 00:58:57.975
<v Speaker 2>there. That that that

00:58:58.615 --> 00:59:00.615
<v Speaker 2>makes sense, David. It does make sense. Yeah.

00:59:00.615 --> 00:59:01.655
<v Speaker 0>I was just trying to,

00:59:02.214 --> 00:59:03.494
<v Speaker 0>you know, keep a hold of all the

00:59:03.494 --> 00:59:05.494
<v Speaker 0>different strings. Yeah. So as was talking, I

00:59:05.494 --> 00:59:06.454
<v Speaker 2>was thinking there was a lot a lot

00:59:06.454 --> 00:59:08.454
<v Speaker 2>of concepts there. But essentially, like, particularly for

00:59:08.454 --> 00:59:10.615
<v Speaker 2>Python or or Ruby, think of RBM, think

00:59:10.615 --> 00:59:11.335
<v Speaker 2>of virtualenv.

00:59:11.700 --> 00:59:13.940
<v Speaker 2>You know, the beauty of of doing a

00:59:13.940 --> 00:59:17.220
<v Speaker 2>build even without Telepresence within a container that

00:59:17.220 --> 00:59:19.380
<v Speaker 2>folks often do multistage builds Yeah. Is you

00:59:19.380 --> 00:59:21.619
<v Speaker 2>don't pollute your local machine with all the

00:59:21.619 --> 00:59:23.380
<v Speaker 2>different gem files and so forth or or

00:59:23.380 --> 00:59:24.339
<v Speaker 2>the Python equivalents.

00:59:24.705 --> 00:59:26.625
<v Speaker 2>So the the beauty of doing with Telepresence,

00:59:26.625 --> 00:59:28.305
<v Speaker 2>you just say, hey. Intercept, but don't route

00:59:28.305 --> 00:59:30.465
<v Speaker 2>it to my local host, whatever. Routed to

00:59:30.465 --> 00:59:32.465
<v Speaker 2>my Docker container I'm spinning up as part

00:59:32.465 --> 00:59:33.265
<v Speaker 2>of this command.

00:59:34.145 --> 00:59:36.225
<v Speaker 0>I mean, it it just gives me so

00:59:36.225 --> 00:59:37.850
<v Speaker 0>much more questions.

00:59:37.930 --> 00:59:38.490
<v Speaker 0>Like

00:59:39.130 --> 00:59:41.530
<v Speaker 0>so everything in the Docker container can speak

00:59:41.530 --> 00:59:43.050
<v Speaker 0>to my Kubernetes cluster.

00:59:43.690 --> 00:59:44.330
<v Speaker 2>Yeah.

00:59:44.490 --> 00:59:46.090
<v Speaker 2>That's it. It's pretty awesome. Right?

00:59:47.450 --> 00:59:49.130
<v Speaker 2>Because my spree my spree app was calling

00:59:49.130 --> 00:59:50.650
<v Speaker 2>out to my SQL database running in the

00:59:50.650 --> 00:59:52.825
<v Speaker 2>cluster. It was calling out to another microservice

00:59:52.825 --> 00:59:53.945
<v Speaker 2>running in the cluster.

00:59:54.265 --> 00:59:56.105
<v Speaker 2>Yeah. And I was coding Versus code,

00:59:56.265 --> 00:59:58.345
<v Speaker 2>doing my code, hitting save.

00:59:59.145 --> 01:00:00.425
<v Speaker 2>How cool is that? Right?

01:00:01.385 --> 01:00:03.465
<v Speaker 0>I I I mean, even if I tried

01:00:03.465 --> 01:00:05.065
<v Speaker 0>to understand a little bit of how it

01:00:05.065 --> 01:00:06.740
<v Speaker 0>was working on my native host, I am

01:00:06.740 --> 01:00:08.420
<v Speaker 0>really confused at how it even works in

01:00:08.420 --> 01:00:09.859
<v Speaker 0>a container because it's going through a bridge

01:00:09.859 --> 01:00:11.220
<v Speaker 0>network. I'm assuming

01:00:11.540 --> 01:00:13.540
<v Speaker 0>it doesn't matter which Docker network it's on.

01:00:13.540 --> 01:00:14.660
<v Speaker 0>Does it have to be on the bridge?

01:00:14.660 --> 01:00:16.339
<v Speaker 0>What if it was on a composed network?

01:00:16.339 --> 01:00:18.020
<v Speaker 0>Like, does does any of that matter or

01:00:18.020 --> 01:00:18.819
<v Speaker 0>does it just work?

01:00:20.595 --> 01:00:22.515
<v Speaker 1>So Telepresence is actually

01:00:22.835 --> 01:00:24.275
<v Speaker 1>yeah. Yeah. Telepresence

01:00:24.275 --> 01:00:26.195
<v Speaker 1>is actually creating the container for you. So

01:00:26.355 --> 01:00:27.955
<v Speaker 1>Right. So all of those all of those

01:00:27.955 --> 01:00:29.715
<v Speaker 1>features are or like the networking features and

01:00:29.715 --> 01:00:31.955
<v Speaker 1>stuff are actually Mhmm. Hidden away from the

01:00:31.955 --> 01:00:32.515
<v Speaker 1>user.

01:00:33.315 --> 01:00:34.630
<v Speaker 1>And so so you don't actually have to

01:00:34.630 --> 01:00:36.630
<v Speaker 1>think about it. Telepresence is just looking for

01:00:36.630 --> 01:00:38.790
<v Speaker 1>that image that you have locally, and it's

01:00:38.790 --> 01:00:40.630
<v Speaker 1>going to start it with all the proper

01:00:40.630 --> 01:00:41.670
<v Speaker 1>network connections.

01:00:41.750 --> 01:00:42.310
<v Speaker 0>Okay.

01:00:42.550 --> 01:00:44.710
<v Speaker 0>That helps because I thought you were magically

01:00:44.710 --> 01:00:47.190
<v Speaker 0>changing something within my containers were already running,

01:00:47.190 --> 01:00:49.355
<v Speaker 0>and I was like, what? So okay. You

01:00:49.355 --> 01:00:51.355
<v Speaker 0>you actually orchestrate the container for me. I

01:00:51.355 --> 01:00:52.955
<v Speaker 0>just have to tell you that. Okay.

01:00:53.275 --> 01:00:54.954
<v Speaker 2>At this point, can we shout out Thomas,

01:00:54.954 --> 01:00:56.875
<v Speaker 2>Luke, Donnie, the amazing engineers that do the

01:00:56.875 --> 01:00:57.755
<v Speaker 2>work at the

01:00:57.994 --> 01:01:00.474
<v Speaker 2>source project? Lots of folks contribute. They're fantastic.

01:01:00.474 --> 01:01:02.474
<v Speaker 2>But, like, in particular, some of the networking

01:01:02.474 --> 01:01:04.780
<v Speaker 2>stuff, like, you know, wow. It's amazing that

01:01:04.780 --> 01:01:06.619
<v Speaker 2>the team would do. So, yeah, Thomas, Luke,

01:01:06.619 --> 01:01:08.220
<v Speaker 2>Donnie, massive hat tip.

01:01:08.619 --> 01:01:09.900
<v Speaker 0>Yeah. I'm gonna have to read some more

01:01:09.900 --> 01:01:11.020
<v Speaker 0>networking books.

01:01:13.900 --> 01:01:15.660
<v Speaker 0>Is there anything else we should cover before

01:01:15.660 --> 01:01:17.099
<v Speaker 0>we finish up for today? Is there anything

01:01:17.099 --> 01:01:19.365
<v Speaker 0>that we haven't talked about showing off? Anything

01:01:19.365 --> 01:01:21.605
<v Speaker 0>you wanna make sure people are familiar with?

01:01:22.885 --> 01:01:24.325
<v Speaker 2>The one final thing I was gonna mention,

01:01:24.325 --> 01:01:25.765
<v Speaker 2>Peter, is the environment variables. I know you

01:01:25.765 --> 01:01:27.605
<v Speaker 2>and I use that quite a bit. So

01:01:27.765 --> 01:01:30.005
<v Speaker 2>definitely worth, like some folks have been using

01:01:30.005 --> 01:01:32.245
<v Speaker 2>that 12 factor style, and you bake things

01:01:32.245 --> 01:01:35.040
<v Speaker 2>into your environment variables. So we can export

01:01:35.040 --> 01:01:38.080
<v Speaker 2>them to a file, either a m file

01:01:38.080 --> 01:01:40.080
<v Speaker 2>format or a JSON file format. So when

01:01:40.080 --> 01:01:42.640
<v Speaker 2>I'm using IntelliJ, there's a m dash file

01:01:42.640 --> 01:01:45.200
<v Speaker 2>plug in. So I can export all my

01:01:45.200 --> 01:01:47.280
<v Speaker 2>environment variables from the remote cluster, the the

01:01:47.280 --> 01:01:49.595
<v Speaker 2>pod I'm running in, to a file and

01:01:49.595 --> 01:01:51.915
<v Speaker 2>load that file into IntelliJ so that when

01:01:51.915 --> 01:01:53.435
<v Speaker 2>my app spins up and it looks for

01:01:53.435 --> 01:01:54.875
<v Speaker 2>the m's,

01:01:55.115 --> 01:01:56.875
<v Speaker 2>it will find them. You because the plug

01:01:56.875 --> 01:01:59.035
<v Speaker 2>in joins together the the file I've exported.

01:01:59.035 --> 01:02:00.795
<v Speaker 2>So we find the the two ones that

01:02:00.875 --> 01:02:02.555
<v Speaker 2>the two things that people often migrate to

01:02:02.555 --> 01:02:04.770
<v Speaker 2>pretty quick in the IntelliJ presence journey is

01:02:04.770 --> 01:02:07.650
<v Speaker 2>the environment variables and the volume mounts.

01:02:09.010 --> 01:02:10.930
<v Speaker 0>I hadn't thought of that. And now that

01:02:10.930 --> 01:02:12.450
<v Speaker 0>you do, it seems silly that it didn't

01:02:12.530 --> 01:02:13.010
<v Speaker 0>yeah.

01:02:13.330 --> 01:02:15.010
<v Speaker 0>Like, course, we want to build one container

01:02:15.010 --> 01:02:16.930
<v Speaker 0>image to run-in all of our environments. We

01:02:16.930 --> 01:02:19.570
<v Speaker 0>use a multitude of environment variables to configure

01:02:19.805 --> 01:02:21.885
<v Speaker 0>where the databases are, where the services are.

01:02:22.045 --> 01:02:23.805
<v Speaker 0>Some people go by convention, but I think

01:02:23.805 --> 01:02:25.485
<v Speaker 0>it's more common just to have an environment

01:02:25.485 --> 01:02:27.645
<v Speaker 0>fail. So we can actually expose those from

01:02:27.645 --> 01:02:30.685
<v Speaker 0>the remote pod to our local environment too.

01:02:31.085 --> 01:02:33.245
<v Speaker 2>Exactly. David, yeah, both like, I've got a

01:02:33.245 --> 01:02:34.410
<v Speaker 2>walk through on IntelliJ,

01:02:34.810 --> 01:02:36.250
<v Speaker 2>and Peter's got a walk through for Versus

01:02:36.250 --> 01:02:38.250
<v Speaker 2>code. So whatever you're using, and we can

01:02:38.329 --> 01:02:39.609
<v Speaker 2>and if you're using just a shell, we

01:02:39.609 --> 01:02:41.450
<v Speaker 2>can do that as well. So that's super

01:02:41.450 --> 01:02:43.210
<v Speaker 2>useful being able to export your environment variables

01:02:43.210 --> 01:02:43.930
<v Speaker 2>locally.

01:02:45.290 --> 01:02:47.325
<v Speaker 0>Alright. I guess I'll I'll throw one more

01:02:47.325 --> 01:02:48.765
<v Speaker 0>thing out, and and then, Peter, if you

01:02:48.765 --> 01:02:50.285
<v Speaker 0>have anything, we can tackle that too. But

01:02:50.285 --> 01:02:52.045
<v Speaker 0>I see our back here, and I'm scared

01:02:52.045 --> 01:02:53.645
<v Speaker 0>to click on it, but also curious to

01:02:53.645 --> 01:02:54.525
<v Speaker 0>click on it.

01:02:55.245 --> 01:02:57.005
<v Speaker 0>Go for it. Is this gonna mean does

01:02:57.005 --> 01:02:58.605
<v Speaker 0>this mean that if my pod has access

01:02:58.605 --> 01:03:00.285
<v Speaker 0>to a service account in my cluster, we're

01:03:00.285 --> 01:03:02.190
<v Speaker 0>gonna make that work locally,

01:03:02.270 --> 01:03:04.990
<v Speaker 0>or am I as my guess, widely inaccurate?

01:03:05.869 --> 01:03:07.230
<v Speaker 1>This RBAC is actually

01:03:07.790 --> 01:03:09.790
<v Speaker 1>when you do the Telepresence Connect, remember, it's

01:03:09.790 --> 01:03:11.390
<v Speaker 1>going to create that traffic manager for you

01:03:11.390 --> 01:03:13.310
<v Speaker 1>if it doesn't exist. So there are some

01:03:13.310 --> 01:03:16.590
<v Speaker 1>levels of permission that Telepresence is expecting.

01:03:17.205 --> 01:03:19.925
<v Speaker 1>And so, like, for especially for larger teams,

01:03:20.645 --> 01:03:23.685
<v Speaker 1>some some developers don't exactly have full admin

01:03:23.685 --> 01:03:26.165
<v Speaker 1>rights to the cluster to create those namespaces,

01:03:26.165 --> 01:03:28.005
<v Speaker 1>create the traffic manager. So you have to

01:03:28.005 --> 01:03:29.045
<v Speaker 1>pre deploy,

01:03:29.285 --> 01:03:30.725
<v Speaker 1>the Telepresence infrastructure,

01:03:30.980 --> 01:03:33.380
<v Speaker 1>and this kind of walks you through what

01:03:33.380 --> 01:03:36.339
<v Speaker 1>is the bare minimum RBAC procedure that you

01:03:36.339 --> 01:03:38.420
<v Speaker 1>would need in order to use Telepresence.

01:03:39.460 --> 01:03:40.660
<v Speaker 0>Okay. Perfect.

01:03:41.059 --> 01:03:42.740
<v Speaker 0>Yeah. That that makes a lot of sense.

01:03:43.299 --> 01:03:45.505
<v Speaker 0>Is there anything that you wanna look at

01:03:45.505 --> 01:03:47.105
<v Speaker 0>before we finish up here? Is there anything

01:03:47.105 --> 01:03:47.985
<v Speaker 0>we've missed?

01:03:48.545 --> 01:03:50.065
<v Speaker 1>I I I think we I think we've

01:03:50.065 --> 01:03:52.145
<v Speaker 1>covered pretty much everything. I think this is

01:03:52.145 --> 01:03:53.265
<v Speaker 1>a a good walkthrough.

01:03:53.984 --> 01:03:55.665
<v Speaker 2>Well, I think One thing I just sort

01:03:55.665 --> 01:03:56.785
<v Speaker 2>of snuck into the docs, I think it's

01:03:56.785 --> 01:03:57.825
<v Speaker 2>brand new, Peter. I think you and I

01:03:57.825 --> 01:03:59.345
<v Speaker 2>are talking to Casey about it. Is Telepresence

01:03:59.345 --> 01:03:59.825
<v Speaker 2>and Linkerd?

01:04:00.380 --> 01:04:02.140
<v Speaker 2>I I think that's that's that's hot off

01:04:02.140 --> 01:04:04.220
<v Speaker 2>the presses, folks, seeing that. So we have

01:04:04.220 --> 01:04:05.980
<v Speaker 2>a lot of requests of folks using Telepresence

01:04:05.980 --> 01:04:08.220
<v Speaker 2>with Linkerd and Istio and Console.

01:04:08.380 --> 01:04:10.460
<v Speaker 2>And Nick Jackson from HashiCorp very did a

01:04:10.460 --> 01:04:12.140
<v Speaker 2>very kind demo for us in our ambassador

01:04:12.140 --> 01:04:13.505
<v Speaker 2>fest a couple of weeks ago. I know

01:04:13.505 --> 01:04:14.865
<v Speaker 2>Casey on the team is working on the

01:04:14.865 --> 01:04:17.505
<v Speaker 2>Linkerd integration, and Istio is supported as well

01:04:17.505 --> 01:04:19.025
<v Speaker 2>even with MTLS.

01:04:19.185 --> 01:04:20.945
<v Speaker 2>So the doc's coming soon. So half the

01:04:20.945 --> 01:04:22.225
<v Speaker 2>presses. Just thought of that as you were

01:04:22.225 --> 01:04:23.505
<v Speaker 2>navigating, David.

01:04:24.385 --> 01:04:24.945
<v Speaker 0>Awesome.

01:04:25.585 --> 01:04:27.665
<v Speaker 0>Very, very cool as well. There's just I

01:04:27.665 --> 01:04:27.825
<v Speaker 0>mean,

01:04:30.040 --> 01:04:32.280
<v Speaker 0>I'll be honest, it's rare that I'm borderline

01:04:32.280 --> 01:04:33.960
<v Speaker 0>speechless with some of these demos. And I

01:04:33.960 --> 01:04:34.839
<v Speaker 0>gotta say, there's just

01:04:35.480 --> 01:04:36.839
<v Speaker 0>there's that it really has a lot to

01:04:36.839 --> 01:04:38.440
<v Speaker 0>love about the way that this just enables

01:04:38.440 --> 01:04:40.839
<v Speaker 0>me. That kind of hands off approach to

01:04:40.839 --> 01:04:42.599
<v Speaker 0>how I wanna develop my application. Like, you're

01:04:42.599 --> 01:04:44.200
<v Speaker 0>not enforcing me to adopt any

01:04:44.655 --> 01:04:47.055
<v Speaker 0>real standards or tools. You're just saying

01:04:47.295 --> 01:04:49.775
<v Speaker 0>work how you normally work using Node, Ruby,

01:04:49.775 --> 01:04:52.415
<v Speaker 0>Python, whatever. We'll handle the traffic a bit

01:04:52.415 --> 01:04:54.095
<v Speaker 0>and then things just work. And I think

01:04:54.095 --> 01:04:56.495
<v Speaker 0>that kind of hands off approach just will

01:04:56.495 --> 01:04:58.015
<v Speaker 0>resonate with a lot of people. And I

01:04:58.015 --> 01:05:00.010
<v Speaker 0>think that if you're not checking out Telepresence

01:05:00.010 --> 01:05:01.690
<v Speaker 0>yet, people should. And this is almost turned

01:05:01.690 --> 01:05:03.290
<v Speaker 0>into a shell which I feel really bad

01:05:03.290 --> 01:05:05.210
<v Speaker 0>about. But again, it's rare that I am

01:05:05.210 --> 01:05:07.050
<v Speaker 0>that impressed with the tool on the show.

01:05:07.210 --> 01:05:08.730
<v Speaker 0>Thank you for Appreciate it. Just coming on

01:05:08.730 --> 01:05:10.329
<v Speaker 0>and sharing that with us. It's very very

01:05:10.329 --> 01:05:10.890
<v Speaker 0>cool.

01:05:11.690 --> 01:05:12.329
<v Speaker 2>No. Thank you.

01:05:13.205 --> 01:05:14.965
<v Speaker 1>Is there anything Yeah. Thanks for having us.

01:05:14.965 --> 01:05:16.805
<v Speaker 0>Is there anything you wanna share before we

01:05:16.805 --> 01:05:18.165
<v Speaker 0>finish up, or will I just cut you

01:05:18.165 --> 01:05:19.605
<v Speaker 0>off now? Like, what do you want?

01:05:21.365 --> 01:05:23.045
<v Speaker 2>We'll do a shameless plug for, like, Peter

01:05:23.045 --> 01:05:25.925
<v Speaker 2>does amazing onboarding sessions, office hours as well.

01:05:25.925 --> 01:05:27.765
<v Speaker 2>So pop along to Get Ambassador website. Join

01:05:27.765 --> 01:05:29.600
<v Speaker 2>us on our Slack. You can reach out

01:05:29.600 --> 01:05:30.560
<v Speaker 2>to both of us. We're both of us

01:05:30.560 --> 01:05:32.960
<v Speaker 2>there. Cindy's does amazing work managing the community

01:05:32.960 --> 01:05:34.640
<v Speaker 2>as well. So we love to connect with

01:05:34.640 --> 01:05:36.720
<v Speaker 2>folks. We love to hear gnarly problems because

01:05:36.720 --> 01:05:38.400
<v Speaker 2>as you hinted at, David, the networking stuff

01:05:38.400 --> 01:05:40.400
<v Speaker 2>is far from simple. Right? So Peter's often

01:05:40.400 --> 01:05:40.960
<v Speaker 2>debugging

01:05:41.305 --> 01:05:43.785
<v Speaker 2>these kind of things. Get involved. We're spinning

01:05:43.785 --> 01:05:45.865
<v Speaker 2>up a summer of Kubernetes,

01:05:45.945 --> 01:05:48.585
<v Speaker 2>some training or some resources of folks that

01:05:48.585 --> 01:05:50.985
<v Speaker 2>wanna learn if they're brand new to Kubernetes.

01:05:50.985 --> 01:05:53.065
<v Speaker 2>So pop along to Slack, and we'll be

01:05:53.065 --> 01:05:54.985
<v Speaker 2>giving some more information on that in a

01:05:55.065 --> 01:05:56.600
<v Speaker 2>I think next week, of this week next

01:05:56.600 --> 01:05:58.280
<v Speaker 2>week. So we look we basically love just

01:05:58.280 --> 01:05:59.720
<v Speaker 2>chatting. We really appreciate the invite there. We

01:05:59.720 --> 01:06:01.640
<v Speaker 2>just love connecting with folks. But half the

01:06:01.640 --> 01:06:03.960
<v Speaker 2>thing with Kubernetes is just figuring out all

01:06:03.960 --> 01:06:06.440
<v Speaker 2>the tools out there. Right? So many awesome

01:06:06.440 --> 01:06:08.120
<v Speaker 2>tools that we, you know, we'd love you

01:06:08.120 --> 01:06:09.704
<v Speaker 2>to look at our tools, but that equally

01:06:09.704 --> 01:06:11.625
<v Speaker 2>scaffold other tools out there that help out.

01:06:11.625 --> 01:06:13.385
<v Speaker 2>We're happy to share our thoughts on those

01:06:13.385 --> 01:06:13.945
<v Speaker 2>as well.

01:06:14.424 --> 01:06:16.585
<v Speaker 0>Yeah. There are so many tools in the

01:06:16.585 --> 01:06:18.505
<v Speaker 0>cloud native landscape and to the point I'll

01:06:18.505 --> 01:06:20.185
<v Speaker 0>never run out of episodes to

01:06:20.904 --> 01:06:22.820
<v Speaker 0>be able to play and experiment with them.

01:06:23.300 --> 01:06:25.140
<v Speaker 0>Alright. Well, again, thank you so much for

01:06:25.140 --> 01:06:26.580
<v Speaker 0>joining me today. It's been an absolute pleasure

01:06:26.580 --> 01:06:28.580
<v Speaker 0>taking a look at Telepresence. I'm really excited

01:06:28.580 --> 01:06:29.780
<v Speaker 0>to try it out and play with it

01:06:29.780 --> 01:06:30.740
<v Speaker 0>on my own time.

01:06:31.300 --> 01:06:32.980
<v Speaker 0>I'm sure if I have any problems, she'll

01:06:32.980 --> 01:06:34.100
<v Speaker 0>be more than happy to help me, I

01:06:34.100 --> 01:06:37.300
<v Speaker 0>hope. If anyone else, reach out to people

01:06:37.300 --> 01:06:39.755
<v Speaker 0>on Twitter, leave questions in the comments. I

01:06:39.755 --> 01:06:40.955
<v Speaker 0>will do my best to forward them on

01:06:40.955 --> 01:06:43.515
<v Speaker 0>to Peter and Daniel as required. Thank you

01:06:43.515 --> 01:06:45.035
<v Speaker 0>again. Have a wonderful day, and I will

01:06:45.035 --> 01:06:46.955
<v Speaker 0>speak to you both soon. Thanks. Thanks, everyone.

01:06:46.955 --> 01:06:48.475
<v Speaker 2>Cool. Thanks, David. Thanks, David.
