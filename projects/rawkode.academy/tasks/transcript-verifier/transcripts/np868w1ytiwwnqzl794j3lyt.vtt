WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: c740c916-5cb3-4aee-b34b-bc7bb635044f
Created: 2025-04-29T22:56:25.149Z
Duration: 5540.0205
Channels: 1

00:02:42.115 --> 00:02:42.515
<v Speaker 0>Hello?

00:02:55.010 --> 00:02:57.890
<v Speaker 0>Just waiting to confirm. I can hear myself.

00:03:03.505 --> 00:03:05.265
<v Speaker 0>And I can. Awesome.

00:03:05.505 --> 00:03:06.065
<v Speaker 0>Hello,

00:03:07.745 --> 00:03:08.305
<v Speaker 0>everyone.

00:03:10.385 --> 00:03:11.745
<v Speaker 0>So today's

00:03:11.745 --> 00:03:12.225
<v Speaker 0>session,

00:03:13.590 --> 00:03:17.110
<v Speaker 0>we're gonna continue to monitor stuff with InfluxDB.

00:03:17.830 --> 00:03:19.430
<v Speaker 1>No surprises there.

00:03:20.950 --> 00:03:22.790
<v Speaker 1>And what we're gonna look at today

00:03:23.590 --> 00:03:25.190
<v Speaker 0>is Docker Swarm.

00:03:27.405 --> 00:03:28.765
<v Speaker 0>I have not

00:03:30.605 --> 00:03:33.805
<v Speaker 0>touched Docker Swarm in three years,

00:03:34.125 --> 00:03:35.645
<v Speaker 0>maybe a little bit longer,

00:03:35.805 --> 00:03:37.724
<v Speaker 0>but I'm hoping that not too much has

00:03:37.724 --> 00:03:40.739
<v Speaker 0>changed. So we're just gonna get started. We're

00:03:40.739 --> 00:03:43.620
<v Speaker 0>gonna go for the zero to hero approach,

00:03:43.620 --> 00:03:45.380
<v Speaker 0>hopefully not zero to failure,

00:03:46.020 --> 00:03:48.660
<v Speaker 0>where I configure my local machine with Docker

00:03:48.660 --> 00:03:50.660
<v Speaker 0>Swarm. We spin up

00:03:50.819 --> 00:03:51.620
<v Speaker 0>InfluxDB

00:03:51.620 --> 00:03:54.420
<v Speaker 0>two, and we start scraping as many metrics

00:03:54.420 --> 00:03:56.945
<v Speaker 0>as can. I'll try and keep this similar

00:03:56.945 --> 00:03:58.145
<v Speaker 0>to my Kubernetes

00:03:58.145 --> 00:03:59.665
<v Speaker 0>examples and that

00:04:00.465 --> 00:04:02.785
<v Speaker 0>we we really wanna be able to build

00:04:02.785 --> 00:04:05.025
<v Speaker 0>a dashboard that allows us to have some

00:04:05.025 --> 00:04:07.585
<v Speaker 0>level of proactive operate operations

00:04:08.610 --> 00:04:10.210
<v Speaker 0>and really good alerting,

00:04:10.610 --> 00:04:12.850
<v Speaker 0>which means we will be focusing on

00:04:13.330 --> 00:04:16.769
<v Speaker 0>failures and reconciliation and how we can notify

00:04:16.769 --> 00:04:18.370
<v Speaker 0>ourselves when that is the case.

00:04:20.610 --> 00:04:21.730
<v Speaker 0>So let's see.

00:04:26.525 --> 00:04:27.725
<v Speaker 0>We have

00:04:28.525 --> 00:04:30.285
<v Speaker 0>an empty directory

00:04:30.925 --> 00:04:33.085
<v Speaker 0>with a nada, nothing

00:04:33.085 --> 00:04:34.205
<v Speaker 0>in it whatsoever.

00:04:37.660 --> 00:04:39.580
<v Speaker 0>We have a terminal

00:04:39.900 --> 00:04:43.020
<v Speaker 0>with no magic either.

00:04:43.500 --> 00:04:46.220
<v Speaker 0>Hopefully, I have no containers running.

00:04:46.860 --> 00:04:47.580
<v Speaker 0>Good.

00:04:48.860 --> 00:04:52.055
<v Speaker 0>Hopefully, Docker Swarm still exists. It does. And

00:04:52.055 --> 00:04:52.775
<v Speaker 0>hopefully,

00:04:52.935 --> 00:04:55.015
<v Speaker 0>running in it is all I need.

00:04:59.575 --> 00:05:01.495
<v Speaker 0>Good. I mean, the style is simple as

00:05:01.495 --> 00:05:02.695
<v Speaker 0>ever, which is

00:05:02.935 --> 00:05:03.575
<v Speaker 0>awesome.

00:05:04.900 --> 00:05:05.940
<v Speaker 0>And

00:05:06.260 --> 00:05:09.060
<v Speaker 0>let's see if we can just get InfluxDB

00:05:09.060 --> 00:05:12.100
<v Speaker 0>deployed pretty quickly then. I don't see there

00:05:12.100 --> 00:05:13.620
<v Speaker 0>being too many hurdles.

00:05:14.420 --> 00:05:16.340
<v Speaker 0>I don't know what the latest version is.

00:05:16.340 --> 00:05:17.300
<v Speaker 0>There is a good point.

00:05:20.405 --> 00:05:22.965
<v Speaker 0>We'll just use three without specifying any point

00:05:22.965 --> 00:05:24.725
<v Speaker 0>version and we'll see what happens.

00:05:25.365 --> 00:05:27.205
<v Speaker 0>We wanted to find a service,

00:05:28.884 --> 00:05:30.085
<v Speaker 0>InfluxDB

00:05:32.645 --> 00:05:34.965
<v Speaker 0>and we're gonna use InfluxDB two today,

00:05:36.380 --> 00:05:38.220
<v Speaker 0>which is in beta

00:05:40.860 --> 00:05:43.420
<v Speaker 0>and should be deployable like so.

00:05:43.820 --> 00:05:45.580
<v Speaker 0>We want to expose

00:05:46.699 --> 00:05:48.860
<v Speaker 0>port nine nine nine nine so that we

00:05:48.860 --> 00:05:50.620
<v Speaker 0>can actually browse to our InfluxDB.

00:05:54.295 --> 00:05:56.535
<v Speaker 0>Do I care about persistence?

00:05:57.255 --> 00:05:59.015
<v Speaker 0>I mean, it doesn't hurt. It'll seem we're

00:05:59.015 --> 00:06:00.855
<v Speaker 0>doing any sub commands.

00:06:01.255 --> 00:06:03.495
<v Speaker 0>What was the syntax on this again? Let's

00:06:03.495 --> 00:06:04.055
<v Speaker 0>see.

00:06:04.375 --> 00:06:05.815
<v Speaker 0>InfluxDB

00:06:06.940 --> 00:06:07.820
<v Speaker 0>data.

00:06:08.060 --> 00:06:10.220
<v Speaker 0>I'm pretty sure that just means local

00:06:11.340 --> 00:06:12.540
<v Speaker 0>volumes

00:06:13.260 --> 00:06:14.220
<v Speaker 0>and

00:06:16.220 --> 00:06:19.340
<v Speaker 0>we want influx oh, this is a list.

00:06:19.365 --> 00:06:20.885
<v Speaker 0>So InfluxDB

00:06:25.205 --> 00:06:27.764
<v Speaker 0>So InfluxDB two stores data and the user's

00:06:27.764 --> 00:06:28.645
<v Speaker 0>root.

00:06:30.164 --> 00:06:32.164
<v Speaker 0>Not not great, but well, it's a beta.

00:06:32.164 --> 00:06:33.525
<v Speaker 0>That's what we're dealing with.

00:06:35.340 --> 00:06:37.500
<v Speaker 0>So what else do I need here?

00:06:40.460 --> 00:06:42.060
<v Speaker 1>I think

00:06:42.060 --> 00:06:42.860
<v Speaker 1>that's it.

00:06:44.060 --> 00:06:46.699
<v Speaker 1>Let's do tests. So now that we have

00:06:46.699 --> 00:06:47.740
<v Speaker 0>a swarm cluster,

00:06:48.725 --> 00:06:50.725
<v Speaker 0>I can't like I said, I've not used

00:06:50.725 --> 00:06:52.005
<v Speaker 0>swarm in many years.

00:06:52.885 --> 00:06:54.165
<v Speaker 0>So we're just gonna try and spin this

00:06:54.165 --> 00:06:54.805
<v Speaker 0>up.

00:06:58.085 --> 00:06:58.645
<v Speaker 0>Background.

00:07:07.940 --> 00:07:08.580
<v Speaker 0>Okay.

00:07:09.940 --> 00:07:10.980
<v Speaker 0>DC down.

00:07:14.035 --> 00:07:15.635
<v Speaker 0>So we want you to a stack to

00:07:15.635 --> 00:07:16.435
<v Speaker 0>play.

00:07:24.915 --> 00:07:25.955
<v Speaker 0>Compose fail.

00:07:28.639 --> 00:07:30.639
<v Speaker 0>I mean, that should be defaulted.

00:07:32.960 --> 00:07:36.400
<v Speaker 0>Alright. When in doubt, here's the docs.

00:07:38.960 --> 00:07:41.845
<v Speaker 0>And so we want do docker start deploy

00:07:41.845 --> 00:07:43.765
<v Speaker 0>where we compose fail

00:07:44.324 --> 00:07:48.005
<v Speaker 0>and we wanna specify that. We don't need

00:07:48.005 --> 00:07:50.805
<v Speaker 0>to specify an orchestrator, I would imagine.

00:07:53.685 --> 00:07:54.005
<v Speaker 0>Yes.

00:07:54.600 --> 00:07:57.000
<v Speaker 0>Okay. So what is wrong with

00:07:59.080 --> 00:08:00.840
<v Speaker 0>dash c docker

00:08:01.560 --> 00:08:03.320
<v Speaker 1>or

00:08:03.480 --> 00:08:05.480
<v Speaker 1>data stack name

00:08:07.160 --> 00:08:07.800
<v Speaker 0>demo?

00:08:21.345 --> 00:08:23.665
<v Speaker 0>Yep. Thank you for the assist there. Stack

00:08:23.665 --> 00:08:24.385
<v Speaker 0>needs a name.

00:08:29.680 --> 00:08:32.799
<v Speaker 0>Yeah. So there was a question saying that

00:08:32.799 --> 00:08:34.720
<v Speaker 0>this tells that here looks wrong.

00:08:35.040 --> 00:08:37.760
<v Speaker 0>This just means use the default options

00:08:38.240 --> 00:08:40.000
<v Speaker 0>which configures

00:08:40.000 --> 00:08:40.640
<v Speaker 0>a

00:08:41.184 --> 00:08:43.345
<v Speaker 0>bind mount with the host. It's the same

00:08:43.345 --> 00:08:45.265
<v Speaker 0>as using a named volume on the Docker

00:08:45.265 --> 00:08:46.705
<v Speaker 0>container run command.

00:08:47.585 --> 00:08:48.865
<v Speaker 0>I use that all the time with Docker

00:08:48.865 --> 00:08:49.985
<v Speaker 0>Compose local.

00:08:50.465 --> 00:08:52.785
<v Speaker 0>I have no idea whether that's gonna work

00:08:52.945 --> 00:08:53.985
<v Speaker 0>in swarm mode,

00:08:56.170 --> 00:08:58.730
<v Speaker 0>but we do have something deployed. So let's

00:08:59.770 --> 00:09:01.850
<v Speaker 0>let's just see what's happening first.

00:09:02.810 --> 00:09:05.210
<v Speaker 0>Oh, don't open that. Okay. So

00:09:05.850 --> 00:09:07.850
<v Speaker 0>it does look like InfluxDB is running.

00:09:09.495 --> 00:09:11.654
<v Speaker 0>Let's see what's going on with

00:09:13.574 --> 00:09:16.694
<v Speaker 0>the volume then. So let's do 48.

00:09:21.589 --> 00:09:24.390
<v Speaker 0>And it works. Go away. Config.

00:09:25.269 --> 00:09:27.029
<v Speaker 0>No. You can't see volumes there, can you?

00:09:27.029 --> 00:09:27.750
<v Speaker 0>Manage.

00:09:28.390 --> 00:09:30.390
<v Speaker 0>Yeah. Okay. So we did get an in

00:09:30.390 --> 00:09:31.670
<v Speaker 0>volume by using the tilde.

00:09:33.605 --> 00:09:35.445
<v Speaker 0>I mean, if I were running more than

00:09:35.445 --> 00:09:36.485
<v Speaker 0>one node,

00:09:38.325 --> 00:09:40.325
<v Speaker 0>probably that's what I feel if it has

00:09:40.325 --> 00:09:42.725
<v Speaker 0>to be rescheduled. I'm sure there's a really

00:09:42.725 --> 00:09:44.485
<v Speaker 0>nice way of doing this in swarm mode,

00:09:44.485 --> 00:09:48.165
<v Speaker 0>but learning the volume implementation is not something

00:09:48.699 --> 00:09:50.459
<v Speaker 0>I think I wanna try and do today.

00:09:50.459 --> 00:09:52.540
<v Speaker 0>So I'm quite happy just to leverage this

00:09:52.540 --> 00:09:55.180
<v Speaker 0>name volume and just say, hey. Magic. It

00:09:55.180 --> 00:09:55.820
<v Speaker 0>works.

00:09:56.300 --> 00:09:57.180
<v Speaker 0>Alright.

00:09:57.180 --> 00:09:59.019
<v Speaker 0>Let's see. Can we browse to this then?

00:10:06.125 --> 00:10:07.485
<v Speaker 0>Computer maybe saying no.

00:10:20.380 --> 00:10:20.940
<v Speaker 0>Alright.

00:10:26.175 --> 00:10:26.975
<v Speaker 0>Let's

00:10:26.975 --> 00:10:28.815
<v Speaker 0>take a look at that container l s

00:10:28.815 --> 00:10:29.695
<v Speaker 0>again.

00:10:32.175 --> 00:10:34.175
<v Speaker 0>Alright. So exposing

00:10:34.255 --> 00:10:35.135
<v Speaker 0>pores

00:10:35.135 --> 00:10:36.655
<v Speaker 0>like I normally would

00:10:38.255 --> 00:10:39.695
<v Speaker 0>does not work.

00:10:41.470 --> 00:10:43.070
<v Speaker 1>I guess that makes sense.

00:10:43.790 --> 00:10:45.390
<v Speaker 1>So let's look up

00:10:47.470 --> 00:10:48.590
<v Speaker 0>the format.

00:10:48.590 --> 00:10:50.030
<v Speaker 0>I'm sure there is

00:10:51.390 --> 00:10:53.470
<v Speaker 0>something that I need to publish,

00:10:53.805 --> 00:10:54.765
<v Speaker 0>expose

00:10:54.845 --> 00:10:57.405
<v Speaker 0>at oh, 3.8. Alright. I'll probably bump up

00:10:57.405 --> 00:10:58.445
<v Speaker 0>to that too then.

00:11:01.245 --> 00:11:03.165
<v Speaker 0>Those ports that publishing them to the host

00:11:03.165 --> 00:11:04.045
<v Speaker 0>machine.

00:11:04.045 --> 00:11:05.085
<v Speaker 0>Nope. Don't want that.

00:11:06.990 --> 00:11:10.510
<v Speaker 0>Ports. Okay. So this syntax is slightly

00:11:11.709 --> 00:11:14.510
<v Speaker 0>different, not available since 3.2.

00:11:15.310 --> 00:11:16.029
<v Speaker 0>And

00:11:16.430 --> 00:11:18.910
<v Speaker 0>yep. So we want host mode so that

00:11:18.910 --> 00:11:19.550
<v Speaker 0>we can

00:11:21.695 --> 00:11:23.935
<v Speaker 0>close this on Docker Swarm.

00:11:24.335 --> 00:11:25.135
<v Speaker 0>Nice.

00:11:25.455 --> 00:11:26.175
<v Speaker 1>So

00:11:27.375 --> 00:11:28.575
<v Speaker 1>let's just

00:11:29.295 --> 00:11:30.815
<v Speaker 1>paste this in

00:11:34.095 --> 00:11:36.575
<v Speaker 0>and

00:11:35.720 --> 00:11:39.720
<v Speaker 0>99999999.

00:11:40.760 --> 00:11:42.120
<v Speaker 0>And we don't need to use more than

00:11:42.120 --> 00:11:44.200
<v Speaker 0>n grids because we only have a single

00:11:44.200 --> 00:11:44.840
<v Speaker 0>host.

00:11:59.334 --> 00:12:00.935
<v Speaker 1>Okay. Let's

00:12:00.870 --> 00:12:02.390
<v Speaker 0>update this because we said we would I

00:12:02.390 --> 00:12:04.390
<v Speaker 0>said it would do 3.8. I don't know

00:12:04.390 --> 00:12:05.590
<v Speaker 0>what the differences are,

00:12:06.070 --> 00:12:07.830
<v Speaker 0>but we'll work it out as we go.

00:12:07.830 --> 00:12:11.030
<v Speaker 0>So in order to redeploy this, I'm assuming,

00:12:12.710 --> 00:12:14.470
<v Speaker 1>I just run this and Docker is gonna

00:12:14.470 --> 00:12:15.510
<v Speaker 0>do its magic.

00:12:19.485 --> 00:12:22.205
<v Speaker 0>Oh, it's definitely broken there. Nope. Nope. There

00:12:22.205 --> 00:12:24.525
<v Speaker 0>we go. Okay. So what are my swarming

00:12:24.525 --> 00:12:28.125
<v Speaker 0>commands? What have I got? The services everything?

00:12:28.365 --> 00:12:28.685
<v Speaker 0>Nope.

00:12:31.500 --> 00:12:32.540
<v Speaker 0>Docker

00:12:33.500 --> 00:12:34.460
<v Speaker 0>form.

00:12:35.580 --> 00:12:38.140
<v Speaker 0>Alright. That's that's just the management stuff.

00:12:40.380 --> 00:12:41.580
<v Speaker 0>I wonder if I I just want to

00:12:41.580 --> 00:12:43.020
<v Speaker 0>know if I can view my container. We

00:12:43.020 --> 00:12:45.500
<v Speaker 0>take their container l s, but something that's

00:12:44.945 --> 00:12:45.665
<v Speaker 1>more

00:12:46.945 --> 00:12:47.825
<v Speaker 1>for me.

00:12:49.185 --> 00:12:51.505
<v Speaker 0>I guess it's not particularly important. We do

00:12:51.505 --> 00:12:53.265
<v Speaker 0>have the container running now.

00:12:53.665 --> 00:12:56.065
<v Speaker 0>This looks much better with regards to publishing.

00:12:57.280 --> 00:12:58.000
<v Speaker 0>So

00:12:58.560 --> 00:12:59.840
<v Speaker 0>Nice.

00:13:01.600 --> 00:13:04.160
<v Speaker 0>We now have access to InfluxDB.

00:13:07.680 --> 00:13:10.720
<v Speaker 0>So let's set up my user.

00:13:16.475 --> 00:13:18.235
<v Speaker 1>We'll just call this default.

00:13:19.355 --> 00:13:20.155
<v Speaker 1>Oh,

00:13:20.555 --> 00:13:21.275
<v Speaker 1>cool.

00:13:22.475 --> 00:13:25.355
<v Speaker 1>I'm an expert. Thank you very much. Alright.

00:13:25.355 --> 00:13:26.714
<v Speaker 0>So we have my bucket.

00:13:28.590 --> 00:13:31.950
<v Speaker 0>So good progress. We've got Swarm running, InfluxDB

00:13:31.950 --> 00:13:32.670
<v Speaker 0>running,

00:13:32.990 --> 00:13:34.590
<v Speaker 0>and now we wanna understand

00:13:35.790 --> 00:13:38.110
<v Speaker 0>from a metrics point of view what is

00:13:38.110 --> 00:13:39.310
<v Speaker 0>going on here.

00:13:40.190 --> 00:13:43.310
<v Speaker 0>But I think what I'm gonna do first

00:13:45.625 --> 00:13:46.505
<v Speaker 0>is

00:13:47.945 --> 00:13:49.305
<v Speaker 0>local

00:13:49.385 --> 00:13:50.345
<v Speaker 0>host.

00:13:50.745 --> 00:13:52.425
<v Speaker 0>It's 2375

00:13:52.425 --> 00:13:54.105
<v Speaker 0>and see if there's a metrics

00:13:54.105 --> 00:13:54.985
<v Speaker 0>endpoint.

00:13:54.985 --> 00:13:55.225
<v Speaker 0>No.

00:13:56.280 --> 00:13:58.200
<v Speaker 0>Port does it even run on again?

00:13:59.960 --> 00:14:02.040
<v Speaker 0>Docker.

00:14:05.160 --> 00:14:06.520
<v Speaker 0>Yep. Useful.

00:14:08.935 --> 00:14:11.575
<v Speaker 0>Two three eight five. Am I just am

00:14:11.575 --> 00:14:12.535
<v Speaker 0>I to draw?

00:14:13.894 --> 00:14:16.615
<v Speaker 0>No. I'm just very wrong. Okay. Docker

00:14:16.695 --> 00:14:17.495
<v Speaker 0>daemon

00:14:18.135 --> 00:14:18.375
<v Speaker 0>four.

00:14:24.790 --> 00:14:26.150
<v Speaker 0>Two three seven six.

00:14:33.525 --> 00:14:35.125
<v Speaker 0>I really should stop guessing.

00:14:37.525 --> 00:14:39.845
<v Speaker 0>I know what to do. Let's just run

00:14:39.845 --> 00:14:40.725
<v Speaker 0>Telegraph.

00:14:42.645 --> 00:14:46.550
<v Speaker 0>So Telegraph is the agent collection agent that

00:14:46.550 --> 00:14:49.510
<v Speaker 0>works with pretty much every time series database.

00:14:50.709 --> 00:14:52.230
<v Speaker 0>It is by the same company that produce

00:14:52.230 --> 00:14:53.110
<v Speaker 0>InfluxDB,

00:14:53.110 --> 00:14:54.550
<v Speaker 0>so the support there is really good as

00:14:54.550 --> 00:14:55.029
<v Speaker 0>well.

00:14:56.630 --> 00:14:58.230
<v Speaker 0>But this will speak over Docker stock at

00:14:58.230 --> 00:14:59.510
<v Speaker 0>RTCP

00:15:00.005 --> 00:15:01.845
<v Speaker 0>hopefully grab the metrics.

00:15:02.805 --> 00:15:04.245
<v Speaker 0>I just assumed

00:15:05.285 --> 00:15:08.005
<v Speaker 0>the Docker daemon would maybe spout some Prometheus

00:15:08.005 --> 00:15:09.525
<v Speaker 0>metrics. Maybe it does.

00:15:12.165 --> 00:15:14.084
<v Speaker 0>So we have a comment that the metrics

00:15:14.084 --> 00:15:16.160
<v Speaker 0>are possibly not on by default. Alright. Okay.

00:15:16.160 --> 00:15:19.360
<v Speaker 0>No problem. Thank you for that. So we're

00:15:19.360 --> 00:15:21.920
<v Speaker 0>just going to copy this example config and

00:15:21.920 --> 00:15:24.320
<v Speaker 0>then work out what we need. So

00:15:25.440 --> 00:15:27.279
<v Speaker 0>let's create our telegraph

00:15:27.760 --> 00:15:29.945
<v Speaker 0>dot conf agent.

00:15:29.945 --> 00:15:33.625
<v Speaker 0>Let's have a interval of five seconds,

00:15:33.625 --> 00:15:34.904
<v Speaker 0>flush interval,

00:15:35.945 --> 00:15:38.745
<v Speaker 0>five seconds. Now that just means scrape the

00:15:38.745 --> 00:15:40.425
<v Speaker 0>metrics every five seconds and write them to

00:15:40.425 --> 00:15:41.785
<v Speaker 0>the database every five seconds.

00:15:43.050 --> 00:15:44.570
<v Speaker 0>We then want to enable,

00:15:45.770 --> 00:15:47.690
<v Speaker 0>inputs docker plug in

00:15:48.570 --> 00:15:49.450
<v Speaker 0>and

00:15:49.450 --> 00:15:51.930
<v Speaker 0>we're not gonna use the socket because we're

00:15:51.930 --> 00:15:53.290
<v Speaker 0>gonna run this.

00:15:53.530 --> 00:15:55.050
<v Speaker 0>I can't just run it on a host,

00:15:55.050 --> 00:15:55.370
<v Speaker 0>can I?

00:15:58.125 --> 00:16:01.485
<v Speaker 0>No. Let's deploy it. So TCP,

00:16:02.125 --> 00:16:03.485
<v Speaker 0>I don't know if I deploy it, I

00:16:03.485 --> 00:16:05.645
<v Speaker 0>won't have access to the daemon. There we

00:16:05.645 --> 00:16:06.125
<v Speaker 0>go.

00:16:06.525 --> 00:16:07.085
<v Speaker 0>That'll do.

00:16:08.300 --> 00:16:09.500
<v Speaker 0>Gather services.

00:16:09.500 --> 00:16:11.899
<v Speaker 0>Alright. Nice. So it's even got some swarm

00:16:11.899 --> 00:16:13.100
<v Speaker 0>stuff going on here.

00:16:13.819 --> 00:16:15.899
<v Speaker 0>So let's say yes to that.

00:16:16.459 --> 00:16:19.019
<v Speaker 0>Container names. Yep. Stupid setting.

00:16:19.980 --> 00:16:21.019
<v Speaker 0>Source tag.

00:16:21.675 --> 00:16:23.835
<v Speaker 0>So set the source tag for metrics to

00:16:23.835 --> 00:16:25.755
<v Speaker 0>the container ID host name.

00:16:27.195 --> 00:16:28.875
<v Speaker 0>I don't know if we need that yet.

00:16:28.875 --> 00:16:30.075
<v Speaker 0>We'll come back to that one.

00:16:30.555 --> 00:16:33.115
<v Speaker 0>Let's not include or exclude anything.

00:16:35.830 --> 00:16:36.709
<v Speaker 0>Timer,

00:16:36.709 --> 00:16:37.990
<v Speaker 0>choose a default.

00:16:47.045 --> 00:16:48.565
<v Speaker 0>Pair device, where I have to report for

00:16:48.565 --> 00:16:51.605
<v Speaker 0>each container, device block IO and network stats

00:16:51.605 --> 00:16:54.085
<v Speaker 0>are not. Well, yeah, I think so. Where

00:16:54.085 --> 00:16:55.765
<v Speaker 0>I should report for each container total block

00:16:55.765 --> 00:16:57.285
<v Speaker 0>IO or network status or not.

00:17:04.660 --> 00:17:06.819
<v Speaker 0>Yeah. False. True. Okay.

00:17:09.060 --> 00:17:09.940
<v Speaker 0>Don't need this.

00:17:10.815 --> 00:17:13.774
<v Speaker 0>Don't care about that. And don't care about

00:17:13.774 --> 00:17:15.454
<v Speaker 0>that. Nice. Okay.

00:17:15.855 --> 00:17:16.494
<v Speaker 0>Now

00:17:18.414 --> 00:17:20.974
<v Speaker 0>before I rewrite this to InfluxDB,

00:17:22.174 --> 00:17:25.580
<v Speaker 0>I'm going to just run it locally, output

00:17:25.580 --> 00:17:27.099
<v Speaker 0>into a file,

00:17:27.660 --> 00:17:30.140
<v Speaker 0>standard out specifically so that I can see

00:17:30.140 --> 00:17:31.420
<v Speaker 0>what I get back.

00:17:31.980 --> 00:17:33.580
<v Speaker 0>I'm gonna run telegraph,

00:17:33.580 --> 00:17:35.100
<v Speaker 0>point it to this config,

00:17:35.260 --> 00:17:37.420
<v Speaker 0>wait five seconds, it's gonna spit some stuff

00:17:37.420 --> 00:17:39.100
<v Speaker 0>out and we'll see what we have.

00:17:43.515 --> 00:17:44.715
<v Speaker 0>We have lots.

00:17:44.955 --> 00:17:45.675
<v Speaker 0>Alright.

00:17:49.515 --> 00:17:50.155
<v Speaker 0>Cool.

00:17:51.915 --> 00:17:53.675
<v Speaker 0>Let's trace it to InfluxDB then.

00:17:55.480 --> 00:17:57.480
<v Speaker 0>I guess that was pretty easy.

00:17:58.200 --> 00:17:59.639
<v Speaker 0>No. Outputs.

00:18:00.120 --> 00:18:01.240
<v Speaker 0>InfluxDB

00:18:01.240 --> 00:18:03.400
<v Speaker 0>v two URLs

00:18:03.400 --> 00:18:05.720
<v Speaker 0>equals so our InfluxDB,

00:18:05.720 --> 00:18:07.640
<v Speaker 0>if I run telegraph locally so I can

00:18:07.640 --> 00:18:10.534
<v Speaker 0>use the Docker socket other than TCP,

00:18:11.575 --> 00:18:12.294
<v Speaker 0>then

00:18:13.975 --> 00:18:14.775
<v Speaker 0>InfluxDB

00:18:14.775 --> 00:18:21.735
<v Speaker 0>will be available on 1 to 79999.

00:18:23.429 --> 00:18:25.909
<v Speaker 0>We need to specify the organization,

00:18:25.909 --> 00:18:28.789
<v Speaker 0>which I believe I made my username.

00:18:29.590 --> 00:18:32.389
<v Speaker 0>The bucket, I believe I called the file.

00:18:32.710 --> 00:18:35.029
<v Speaker 0>We will need a token, which we have

00:18:35.029 --> 00:18:38.070
<v Speaker 0>not lifted yet. So let's come into here

00:18:39.565 --> 00:18:42.205
<v Speaker 0>and grab our token.

00:18:46.365 --> 00:18:47.005
<v Speaker 1>Cool.

00:18:49.085 --> 00:18:51.805
<v Speaker 0>Now rather than

00:18:51.019 --> 00:18:53.500
<v Speaker 0>logging up that terminal, I would just leave

00:18:53.500 --> 00:18:54.379
<v Speaker 0>Telegraph

00:18:55.179 --> 00:18:55.979
<v Speaker 0>running

00:18:56.059 --> 00:18:56.940
<v Speaker 0>here.

00:18:58.379 --> 00:19:01.259
<v Speaker 0>I'm gonna wait five seconds to confirm that

00:19:01.259 --> 00:19:03.820
<v Speaker 0>it can write to my Influx and then

00:19:03.820 --> 00:19:05.659
<v Speaker 0>close this tab and forget about it.

00:19:16.335 --> 00:19:17.135
<v Speaker 0>There you got it.

00:19:20.750 --> 00:19:21.470
<v Speaker 0>Okay.

00:19:21.950 --> 00:19:22.990
<v Speaker 0>No errors,

00:19:23.070 --> 00:19:24.030
<v Speaker 0>which means

00:19:25.710 --> 00:19:26.990
<v Speaker 0>we have metrics.

00:19:27.390 --> 00:19:28.110
<v Speaker 0>Sweet.

00:19:28.990 --> 00:19:31.150
<v Speaker 0>So let's see. What have we got?

00:19:32.385 --> 00:19:34.545
<v Speaker 1>We've got the total

00:19:36.145 --> 00:19:37.345
<v Speaker 1>memory

00:19:38.385 --> 00:19:40.225
<v Speaker 1>as it's on the machine,

00:19:40.545 --> 00:19:42.305
<v Speaker 1>which means

00:19:44.160 --> 00:19:45.280
<v Speaker 0>if I

00:19:45.440 --> 00:19:47.120
<v Speaker 0>pop open this

00:19:49.440 --> 00:19:51.280
<v Speaker 0>with max usage

00:19:54.640 --> 00:19:55.520
<v Speaker 0>max

00:19:55.520 --> 00:19:56.720
<v Speaker 0>usage is now blue.

00:20:01.965 --> 00:20:02.605
<v Speaker 0>Cool.

00:20:04.525 --> 00:20:07.005
<v Speaker 0>We have the number of containers.

00:20:07.565 --> 00:20:08.445
<v Speaker 0>So let's

00:20:08.525 --> 00:20:11.005
<v Speaker 0>also break that down. So click go.

00:20:12.240 --> 00:20:14.880
<v Speaker 0>We've got five containers,

00:20:14.880 --> 00:20:16.000
<v Speaker 0>four stopped,

00:20:16.240 --> 00:20:17.279
<v Speaker 0>one running,

00:20:17.840 --> 00:20:19.520
<v Speaker 1>zero paused.

00:20:20.560 --> 00:20:21.279
<v Speaker 1>Cool.

00:20:22.960 --> 00:20:24.400
<v Speaker 1>Number of images.

00:20:26.035 --> 00:20:27.554
<v Speaker 1>I have 20 images.

00:20:29.315 --> 00:20:30.755
<v Speaker 0>Failed descriptors.

00:20:31.155 --> 00:20:33.715
<v Speaker 0>Yeah. Whatever. What else we got?

00:20:35.075 --> 00:20:37.795
<v Speaker 0>We've got disk IO stats. Let's avoid that

00:20:37.795 --> 00:20:39.635
<v Speaker 0>for now. We've got CPU.

00:20:41.100 --> 00:20:42.139
<v Speaker 0>Let's see.

00:20:45.180 --> 00:20:46.139
<v Speaker 1>We got

00:20:47.340 --> 00:20:48.860
<v Speaker 1>usage stats.

00:20:50.700 --> 00:20:52.460
<v Speaker 0>You see that going up as I'm playing

00:20:52.460 --> 00:20:53.500
<v Speaker 0>around with Influx.

00:20:53.865 --> 00:20:56.424
<v Speaker 0>Cool. Let's jump into memory.

00:21:00.345 --> 00:21:02.345
<v Speaker 0>Let's have a look at that.

00:21:05.705 --> 00:21:07.384
<v Speaker 0>Resetual set size,

00:21:08.265 --> 00:21:08.585
<v Speaker 0>cash

00:21:10.480 --> 00:21:12.080
<v Speaker 0>usage, j c percent.

00:21:12.320 --> 00:21:13.679
<v Speaker 0>That'll be pretty standard.

00:21:13.760 --> 00:21:14.320
<v Speaker 0>Okay.

00:21:16.559 --> 00:21:18.000
<v Speaker 0>Now let's see if we can take a

00:21:18.000 --> 00:21:20.640
<v Speaker 0>look at some of that swarmy stuff. This

00:21:20.640 --> 00:21:21.279
<v Speaker 0>is just all,

00:21:21.934 --> 00:21:24.575
<v Speaker 0>you know, standard Docker stuff. There's a dashboard

00:21:24.575 --> 00:21:25.695
<v Speaker 0>we can import.

00:21:25.855 --> 00:21:27.375
<v Speaker 0>Hopefully, it gives us a pretty good look

00:21:27.375 --> 00:21:28.654
<v Speaker 0>at all of that

00:21:28.895 --> 00:21:30.254
<v Speaker 0>network stuff,

00:21:31.135 --> 00:21:32.494
<v Speaker 0>container statuses,

00:21:32.495 --> 00:21:34.174
<v Speaker 0>cool, and then this.

00:21:35.280 --> 00:21:36.080
<v Speaker 1>Is this?

00:21:39.600 --> 00:21:40.640
<v Speaker 0>Not a lot

00:21:42.160 --> 00:21:44.240
<v Speaker 0>of information we're gonna get out of that.

00:21:44.240 --> 00:21:45.600
<v Speaker 0>It looks like we may have to kind

00:21:45.600 --> 00:21:46.080
<v Speaker 0>of

00:21:46.640 --> 00:21:48.880
<v Speaker 0>pry the metrics out of Docker Swarm or

00:21:48.880 --> 00:21:50.240
<v Speaker 0>find out how to chart on something a

00:21:50.240 --> 00:21:52.705
<v Speaker 0>bit more substantial from the service layer.

00:21:53.265 --> 00:21:55.505
<v Speaker 0>Although, I guess, I mean, I'm used to

00:21:55.505 --> 00:21:56.705
<v Speaker 0>the Kubernetes

00:21:57.265 --> 00:21:59.345
<v Speaker 1>metrics. There's a lot of moving parts in

00:21:59.345 --> 00:22:01.825
<v Speaker 0>Kubernetes. Swarm is much simpler. I mean, maybe

00:22:01.985 --> 00:22:04.545
<v Speaker 0>that's all you need, Fluke. Is my running

00:22:05.059 --> 00:22:06.739
<v Speaker 0>different from my desired?

00:22:07.059 --> 00:22:08.499
<v Speaker 0>Send in a letter.

00:22:08.900 --> 00:22:10.740
<v Speaker 0>We'll play around with that in a minute.

00:22:10.740 --> 00:22:11.860
<v Speaker 0>We'll maybe try and

00:22:13.540 --> 00:22:15.299
<v Speaker 0>put some resource limits

00:22:15.540 --> 00:22:18.995
<v Speaker 0>or reserve some resource for pods pods

00:22:18.995 --> 00:22:21.075
<v Speaker 0>for containers that don't need it and see

00:22:21.075 --> 00:22:22.835
<v Speaker 0>what happens when we try and schedule more.

00:22:22.995 --> 00:22:24.595
<v Speaker 0>Yeah. Let me think about that. We'll come

00:22:24.595 --> 00:22:26.355
<v Speaker 0>up with some failure scenarios.

00:22:29.250 --> 00:22:32.290
<v Speaker 0>Now because this is a new InfluxDB,

00:22:32.290 --> 00:22:33.730
<v Speaker 0>we have no dashboards,

00:22:34.370 --> 00:22:36.210
<v Speaker 0>so we're going to

00:22:36.770 --> 00:22:38.210
<v Speaker 0>import some dashboards.

00:22:39.090 --> 00:22:40.450
<v Speaker 0>Let's get

00:22:40.610 --> 00:22:42.529
<v Speaker 0>a community

00:22:42.930 --> 00:22:43.650
<v Speaker 0>template.

00:22:45.825 --> 00:22:47.345
<v Speaker 0>Has anyone done

00:22:48.145 --> 00:22:49.985
<v Speaker 0>or created a docker

00:22:50.145 --> 00:22:51.025
<v Speaker 0>dashboard?

00:22:53.105 --> 00:22:53.825
<v Speaker 0>Good.

00:22:54.145 --> 00:22:54.625
<v Speaker 0>Alright.

00:22:57.120 --> 00:22:59.680
<v Speaker 0>Let us apply this. So

00:23:00.640 --> 00:23:03.680
<v Speaker 0>we paste this command in. That's gonna fail.

00:23:03.920 --> 00:23:06.080
<v Speaker 0>We need some authentication credentials,

00:23:06.080 --> 00:23:06.560
<v Speaker 0>so

00:23:07.360 --> 00:23:09.120
<v Speaker 0>we're gonna use the org here.

00:23:10.325 --> 00:23:12.965
<v Speaker 0>We also need a token,

00:23:12.965 --> 00:23:14.965
<v Speaker 0>which we'll just apply globally

00:23:15.685 --> 00:23:18.164
<v Speaker 0>and I will copy that once more

00:23:18.565 --> 00:23:19.925
<v Speaker 0>and really keep that handy.

00:23:24.700 --> 00:23:25.659
<v Speaker 0>Copy it

00:23:28.060 --> 00:23:31.020
<v Speaker 0>and apply. We get this big preview

00:23:31.020 --> 00:23:32.540
<v Speaker 0>by shrinking my font down.

00:23:34.635 --> 00:23:36.395
<v Speaker 0>You can just see that it's creating some

00:23:36.395 --> 00:23:37.195
<v Speaker 0>labels,

00:23:39.195 --> 00:23:42.155
<v Speaker 0>creating a telegraph config for us and some

00:23:42.155 --> 00:23:43.115
<v Speaker 0>dashboards.

00:23:45.355 --> 00:23:47.195
<v Speaker 0>Yes. Okay. That

00:23:48.155 --> 00:23:49.580
<v Speaker 0>pop this back again.

00:23:50.140 --> 00:23:51.419
<v Speaker 0>Come over here.

00:24:01.340 --> 00:24:02.875
<v Speaker 0>And Why did it create a bucket called

00:24:02.875 --> 00:24:03.595
<v Speaker 0>dev?

00:24:07.995 --> 00:24:09.115
<v Speaker 0>Did I do that?

00:24:12.475 --> 00:24:14.475
<v Speaker 0>Let's create a bucket called docker.

00:24:16.430 --> 00:24:18.990
<v Speaker 0>I don't think templates should create buckets. I

00:24:18.990 --> 00:24:20.270
<v Speaker 0>need to feed that back.

00:24:21.950 --> 00:24:23.310
<v Speaker 1>Where did Dave come from?

00:24:27.565 --> 00:24:28.765
<v Speaker 0>Well, that needs

00:24:29.405 --> 00:24:30.765
<v Speaker 0>fixed

00:24:30.765 --> 00:24:31.725
<v Speaker 0>anyway.

00:24:33.405 --> 00:24:36.045
<v Speaker 0>So we're we don't have a docker bucket,

00:24:36.045 --> 00:24:37.965
<v Speaker 0>but we do have a default bucket. So

00:24:41.340 --> 00:24:43.740
<v Speaker 0>we've got some stats working.

00:24:44.540 --> 00:24:45.580
<v Speaker 0>That's good.

00:24:49.820 --> 00:24:52.380
<v Speaker 0>We don't have anything for number of images.

00:24:54.225 --> 00:24:55.985
<v Speaker 0>Let's just run this manually,

00:24:55.985 --> 00:24:57.265
<v Speaker 0>see what's broken.

00:24:59.425 --> 00:25:00.145
<v Speaker 1>So,

00:25:01.025 --> 00:25:03.025
<v Speaker 1>ah, it's got a hard coded bucket name.

00:25:06.880 --> 00:25:09.600
<v Speaker 0>It would appear there are numerous problems

00:25:09.920 --> 00:25:11.280
<v Speaker 0>with this template,

00:25:12.320 --> 00:25:14.240
<v Speaker 0>but nothing we can't fix.

00:25:18.715 --> 00:25:21.195
<v Speaker 0>Somebody remind me to send a PR to

00:25:21.195 --> 00:25:22.154
<v Speaker 0>this repo.

00:25:24.475 --> 00:25:25.595
<v Speaker 0>V bucket

00:25:26.075 --> 00:25:26.955
<v Speaker 0>run.

00:25:27.515 --> 00:25:27.915
<v Speaker 0>Good.

00:25:37.930 --> 00:25:39.450
<v Speaker 0>Good. Alright.

00:25:39.850 --> 00:25:41.690
<v Speaker 0>Do I really wanna go and fix all

00:25:41.690 --> 00:25:42.170
<v Speaker 0>of these?

00:25:45.225 --> 00:25:46.664
<v Speaker 0>We should, shouldn't we?

00:25:48.585 --> 00:25:49.784
<v Speaker 0>So this is

00:25:50.184 --> 00:25:52.184
<v Speaker 0>this is okay. So this is looking for

00:25:52.184 --> 00:25:53.624
<v Speaker 0>metrics from

00:25:53.705 --> 00:25:55.784
<v Speaker 0>a different plugin that's not Docker.

00:25:57.500 --> 00:25:59.020
<v Speaker 0>And I think if we take a look

00:25:59.020 --> 00:26:03.099
<v Speaker 0>inside here, it did create a telegraph config.

00:26:03.340 --> 00:26:05.419
<v Speaker 0>And if we just pop down,

00:26:07.340 --> 00:26:10.779
<v Speaker 0>we'll actually be able to see the inputs

00:26:10.095 --> 00:26:12.095
<v Speaker 0>the dashboard wants us to use. Now I

00:26:12.095 --> 00:26:14.335
<v Speaker 0>didn't use this this config, perhaps I should

00:26:14.335 --> 00:26:14.815
<v Speaker 0>have.

00:26:17.775 --> 00:26:20.015
<v Speaker 0>We've got total and that on, so maybe

00:26:20.015 --> 00:26:21.615
<v Speaker 0>I'll steal a bit of that. But what

00:26:21.615 --> 00:26:22.735
<v Speaker 0>I want just now

00:26:23.550 --> 00:26:25.870
<v Speaker 0>is these missing plugins to give me the

00:26:25.870 --> 00:26:26.510
<v Speaker 0>extra

00:26:26.910 --> 00:26:29.070
<v Speaker 0>metrics that we want. So these are just

00:26:29.070 --> 00:26:30.990
<v Speaker 0>host level metrics.

00:26:33.630 --> 00:26:36.510
<v Speaker 0>So plugins that we have here, let's just

00:26:36.350 --> 00:26:37.470
<v Speaker 0>and then this properly.

00:26:39.434 --> 00:26:41.755
<v Speaker 0>We have the CPU plugin. We've got the

00:26:41.755 --> 00:26:43.115
<v Speaker 0>desk IO plugin.

00:26:43.115 --> 00:26:44.794
<v Speaker 0>Yeah. We're gonna ignore

00:26:46.795 --> 00:26:49.035
<v Speaker 0>random desks that we don't care about, temp

00:26:49.035 --> 00:26:50.554
<v Speaker 0>dev squash overlays.

00:26:51.320 --> 00:26:53.400
<v Speaker 0>We're also pulling in and puts some metrics

00:26:53.400 --> 00:26:56.120
<v Speaker 0>for our disk IO, kernel, mem, net, process,

00:26:56.120 --> 00:26:58.200
<v Speaker 0>and swapping system. I mean, this is pretty

00:26:58.200 --> 00:27:00.919
<v Speaker 0>much if you wanna do Linux system monitoring,

00:27:01.480 --> 00:27:03.240
<v Speaker 0>this is the exact plugins that you should

00:27:03.240 --> 00:27:04.440
<v Speaker 0>be running, so that's great.

00:27:06.055 --> 00:27:07.975
<v Speaker 0>So we just kill telegraph, spin that back

00:27:07.975 --> 00:27:09.575
<v Speaker 0>up, put the new config,

00:27:11.575 --> 00:27:13.655
<v Speaker 0>maybe turn that back on later. I'm not

00:27:13.655 --> 00:27:17.735
<v Speaker 0>particularly fast and let's just quickly run through

00:27:19.710 --> 00:27:21.070
<v Speaker 0>any missing

00:27:22.910 --> 00:27:25.790
<v Speaker 0>bucket changes. These all seem okay. I think

00:27:25.790 --> 00:27:27.470
<v Speaker 0>it's just we need to wait for that

00:27:27.470 --> 00:27:28.670
<v Speaker 0>data to come in.

00:27:29.710 --> 00:27:30.830
<v Speaker 0>So let's hit refresh.

00:27:34.054 --> 00:27:35.414
<v Speaker 1>Cool. Much better.

00:27:36.294 --> 00:27:38.614
<v Speaker 1>I'll accept this white space.

00:27:38.774 --> 00:27:39.894
<v Speaker 1>It'll bug me.

00:27:40.294 --> 00:27:43.255
<v Speaker 1>Okay. So this dashboard gives us an overview

00:27:43.255 --> 00:27:45.860
<v Speaker 0>of docker metrics. Right? Then we've got the

00:27:45.860 --> 00:27:47.539
<v Speaker 0>daemon, number of images.

00:27:49.700 --> 00:27:51.379
<v Speaker 0>I don't think I'd ever really

00:27:52.580 --> 00:27:54.100
<v Speaker 0>I mean, I don't really care how many

00:27:54.100 --> 00:27:55.860
<v Speaker 0>images are on my host. I'd actually I'm

00:27:55.860 --> 00:27:57.700
<v Speaker 0>probably more interested in how much disk

00:27:58.555 --> 00:28:00.155
<v Speaker 0>the images are consuming.

00:28:00.155 --> 00:28:02.395
<v Speaker 0>I'm curious if we can get that metric.

00:28:03.995 --> 00:28:05.515
<v Speaker 0>So let's let's see.

00:28:08.715 --> 00:28:09.995
<v Speaker 0>So Docker.

00:28:11.150 --> 00:28:12.669
<v Speaker 0>Uh-huh. This one.

00:28:12.830 --> 00:28:15.950
<v Speaker 0>Oh, we've got number of images.

00:28:17.789 --> 00:28:21.070
<v Speaker 0>I don't think it exposes the size

00:28:21.390 --> 00:28:22.510
<v Speaker 0>of those images.

00:28:24.055 --> 00:28:26.615
<v Speaker 0>I wonder if that's something that Docker doesn't

00:28:26.615 --> 00:28:29.335
<v Speaker 0>expose to its metrics endpoint or just something

00:28:29.335 --> 00:28:30.775
<v Speaker 0>that the Telegraph plugin

00:28:31.735 --> 00:28:33.255
<v Speaker 1>isn't consuming.

00:28:34.855 --> 00:28:38.295
<v Speaker 1>I'll maybe do a wee creative Google on

00:28:39.460 --> 00:28:41.139
<v Speaker 1>docker metrics in a minute.

00:28:41.539 --> 00:28:43.779
<v Speaker 1>We can always send a PR to Telegraph

00:28:43.779 --> 00:28:45.940
<v Speaker 0>to try and make this a bit more

00:28:46.740 --> 00:28:48.099
<v Speaker 0>all encapsulated.

00:28:49.460 --> 00:28:51.779
<v Speaker 0>Alright. So total number of containers.

00:28:52.179 --> 00:28:55.065
<v Speaker 0>Yeah. I mean, I I definitely probably wanna

00:28:55.065 --> 00:28:56.425
<v Speaker 0>keep an eye on how many containers are

00:28:56.425 --> 00:28:57.784
<v Speaker 0>running on my machine.

00:28:58.265 --> 00:29:00.025
<v Speaker 0>More so, I wanna track the CPU and

00:29:00.025 --> 00:29:01.545
<v Speaker 0>memory, but we'll come back to that in

00:29:01.545 --> 00:29:02.184
<v Speaker 1>a minute.

00:29:02.665 --> 00:29:04.265
<v Speaker 1>Number of running containers.

00:29:06.200 --> 00:29:07.000
<v Speaker 0>Yep.

00:29:07.160 --> 00:29:08.039
<v Speaker 0>Standard.

00:29:08.760 --> 00:29:11.080
<v Speaker 0>Yep. I have an eight core machine and

00:29:11.080 --> 00:29:13.000
<v Speaker 0>16 gig of RAM.

00:29:14.200 --> 00:29:17.320
<v Speaker 0>Okay. System status. Yep. I reboot my computer

00:29:17.320 --> 00:29:18.200
<v Speaker 0>almost

00:29:18.200 --> 00:29:18.680
<v Speaker 0>every day.

00:29:19.515 --> 00:29:21.195
<v Speaker 0>My uptime never gets long.

00:29:22.075 --> 00:29:23.675
<v Speaker 0>My load average is a little bit higher

00:29:23.675 --> 00:29:26.235
<v Speaker 0>than I would like, but I am streaming.

00:29:27.675 --> 00:29:29.915
<v Speaker 0>What we should should hopefully be zero. Yep.

00:29:32.870 --> 00:29:35.269
<v Speaker 0>What do we got here? System load. That's

00:29:35.269 --> 00:29:37.269
<v Speaker 0>gonna chop and change. Let's stick this on

00:29:37.269 --> 00:29:38.229
<v Speaker 0>a refresh.

00:29:38.870 --> 00:29:40.870
<v Speaker 0>I mean, as we do more stuff, spin

00:29:40.870 --> 00:29:42.870
<v Speaker 0>up more containers, we'll see that fluctuate. Same

00:29:42.870 --> 00:29:43.909
<v Speaker 0>with the CPU usage.

00:29:44.715 --> 00:29:47.754
<v Speaker 0>Memory usage, I'm at 20%. Happy with that.

00:29:48.075 --> 00:29:48.794
<v Speaker 0>Network.

00:29:50.635 --> 00:29:51.114
<v Speaker 1>See.

00:29:53.434 --> 00:29:55.595
<v Speaker 0>This is pair container.

00:29:56.315 --> 00:29:58.395
<v Speaker 0>That's my one container that I have running.

00:30:05.309 --> 00:30:07.309
<v Speaker 0>And that's just gonna be the actual data

00:30:07.309 --> 00:30:09.549
<v Speaker 0>that's been streamed to this dashboard, to the

00:30:09.549 --> 00:30:09.950
<v Speaker 0>host.

00:30:12.524 --> 00:30:14.845
<v Speaker 0>We can maybe try and inflate that, run

00:30:14.845 --> 00:30:16.844
<v Speaker 0>a few commands inside the container

00:30:17.404 --> 00:30:19.565
<v Speaker 0>and try and, you know, call some spikes,

00:30:19.565 --> 00:30:20.684
<v Speaker 0>do some alerting.

00:30:22.365 --> 00:30:24.604
<v Speaker 1>Then we have the disk usage.

00:30:24.845 --> 00:30:27.940
<v Speaker 0>Of course, this is gonna increase pretty linear

00:30:28.580 --> 00:30:31.380
<v Speaker 0>because I'm writing the same number of metrics

00:30:31.380 --> 00:30:32.899
<v Speaker 0>every five seconds.

00:30:34.260 --> 00:30:36.740
<v Speaker 0>So I would expect this not to fluctuate

00:30:36.740 --> 00:30:39.140
<v Speaker 0>too much. Obviously, there was a telegraph restart.

00:30:40.825 --> 00:30:42.664
<v Speaker 1>Is that what that is? Yeah. I think

00:30:42.664 --> 00:30:43.224
<v Speaker 1>so.

00:30:44.345 --> 00:30:45.224
<v Speaker 1>Everything

00:30:45.465 --> 00:30:47.464
<v Speaker 1>came back up. So that would

00:30:48.345 --> 00:30:49.065
<v Speaker 1>it was like

00:30:50.024 --> 00:30:50.744
<v Speaker 1>this.

00:30:51.144 --> 00:30:52.424
<v Speaker 0>Yeah. I have no idea what's going on

00:30:52.424 --> 00:30:52.664
<v Speaker 1>here.

00:30:54.170 --> 00:30:55.370
<v Speaker 1>That's a good time.

00:30:58.090 --> 00:30:59.690
<v Speaker 0>I'll work that out in a minute.

00:31:00.010 --> 00:31:03.050
<v Speaker 0>Okay. Memory consumption is going up. Wouldn't have

00:31:03.050 --> 00:31:03.850
<v Speaker 0>expected that.

00:31:06.425 --> 00:31:09.305
<v Speaker 0>Although, we are streaming stats to this dashboard,

00:31:09.305 --> 00:31:12.025
<v Speaker 0>so Flux will be caching some of these

00:31:12.025 --> 00:31:13.385
<v Speaker 0>metrics and memory.

00:31:13.705 --> 00:31:15.945
<v Speaker 0>Maybe there would be a small increase here.

00:31:15.945 --> 00:31:18.184
<v Speaker 0>Okay. We've got some information.

00:31:18.345 --> 00:31:20.505
<v Speaker 0>I think let's just

00:31:21.730 --> 00:31:23.490
<v Speaker 0>take this a little bit further. Let's just

00:31:23.490 --> 00:31:25.570
<v Speaker 0>grab the Linux template too,

00:31:26.770 --> 00:31:29.010
<v Speaker 0>and that gives us a pretty complete look

00:31:29.010 --> 00:31:30.130
<v Speaker 0>at my laptop.

00:31:35.105 --> 00:31:36.304
<v Speaker 0>Okay. So

00:31:36.945 --> 00:31:39.905
<v Speaker 0>let's just grab this command and change

00:31:39.905 --> 00:31:41.424
<v Speaker 0>the URL.

00:31:45.105 --> 00:31:45.505
<v Speaker 0>Oops.

00:31:49.120 --> 00:31:52.080
<v Speaker 0>We don't need to start that again.

00:31:53.679 --> 00:31:54.320
<v Speaker 1>Go.

00:31:56.000 --> 00:31:58.080
<v Speaker 1>And we come to dashboards. We now have

00:31:58.080 --> 00:31:59.120
<v Speaker 0>Linux system.

00:32:00.125 --> 00:32:03.005
<v Speaker 0>Let's do five minutes. I'll refresh

00:32:03.725 --> 00:32:05.565
<v Speaker 0>and default bucket.

00:32:05.885 --> 00:32:06.605
<v Speaker 0>Perfect.

00:32:09.165 --> 00:32:09.965
<v Speaker 0>Okay.

00:32:11.005 --> 00:32:12.445
<v Speaker 0>Good progress. I like this.

00:32:13.860 --> 00:32:14.899
<v Speaker 0>But we're not

00:32:16.020 --> 00:32:18.820
<v Speaker 0>we don't really have a complete look at

00:32:18.820 --> 00:32:19.940
<v Speaker 0>what's going on.

00:32:20.260 --> 00:32:22.260
<v Speaker 0>I wonder if we could deploy so my

00:32:22.260 --> 00:32:24.980
<v Speaker 0>thought process right now is let's deploy

00:32:25.795 --> 00:32:27.395
<v Speaker 0>a rogue container,

00:32:29.395 --> 00:32:31.315
<v Speaker 0>either one that's gonna fill my desk or

00:32:31.315 --> 00:32:32.915
<v Speaker 0>eat my RAM. In fact, let's not eat

00:32:32.915 --> 00:32:35.235
<v Speaker 0>my RAM. It may affect the stream. I've

00:32:35.235 --> 00:32:35.875
<v Speaker 0>done that before.

00:32:37.490 --> 00:32:39.490
<v Speaker 1>We'll maybe try and consume some disk, maybe

00:32:39.490 --> 00:32:41.090
<v Speaker 1>a container run-in DD

00:32:41.330 --> 00:32:42.770
<v Speaker 1>right into file

00:32:43.650 --> 00:32:45.090
<v Speaker 1>or meg increments,

00:32:45.090 --> 00:32:46.130
<v Speaker 1>see what happens.

00:32:47.810 --> 00:32:49.250
<v Speaker 1>Try and all that on that. We also

00:32:49.250 --> 00:32:51.170
<v Speaker 0>wanted to play some failed containers.

00:32:51.345 --> 00:32:53.744
<v Speaker 0>So let's try and simulate that first.

00:32:55.025 --> 00:32:56.705
<v Speaker 0>So if we come back to the compose

00:32:56.705 --> 00:32:57.504
<v Speaker 0>file,

00:32:59.505 --> 00:33:00.945
<v Speaker 0>let's assume

00:33:01.025 --> 00:33:03.345
<v Speaker 0>we have

00:33:07.440 --> 00:33:08.240
<v Speaker 0>command

00:33:08.400 --> 00:33:09.919
<v Speaker 0>not found

00:33:11.840 --> 00:33:12.720
<v Speaker 0>image,

00:33:14.160 --> 00:33:16.000
<v Speaker 0>Alpine 3.9,

00:33:17.575 --> 00:33:19.495
<v Speaker 0>Entry point of

00:33:21.575 --> 00:33:23.335
<v Speaker 0>ash, but spelled wrongly.

00:33:24.455 --> 00:33:26.535
<v Speaker 0>And restart

00:33:27.095 --> 00:33:28.055
<v Speaker 0>always.

00:33:28.855 --> 00:33:31.335
<v Speaker 0>In fact, let's not do always just yeah.

00:33:31.335 --> 00:33:31.655
<v Speaker 0>Maybe.

00:33:34.500 --> 00:33:36.179
<v Speaker 0>Yeah. Let's just do always.

00:33:36.820 --> 00:33:38.579
<v Speaker 0>I was gonna say maybe we'll do our

00:33:39.940 --> 00:33:42.820
<v Speaker 0>on failure of a max retries to see

00:33:42.820 --> 00:33:44.659
<v Speaker 0>that stop trying to be rescheduled.

00:33:45.515 --> 00:33:48.715
<v Speaker 0>But I'll need to look up the Compose

00:33:48.715 --> 00:33:50.475
<v Speaker 0>syntax for that. And I don't know how

00:33:50.475 --> 00:33:52.475
<v Speaker 0>Compose handles it. Like, Kubernetes would do a

00:33:52.475 --> 00:33:54.315
<v Speaker 0>crash loop back off, some sort of exponential

00:33:54.315 --> 00:33:56.075
<v Speaker 0>back off before it keeps obviously trying to

00:33:56.075 --> 00:33:57.595
<v Speaker 0>fix the reconciliation.

00:33:57.915 --> 00:33:59.435
<v Speaker 0>I have no idea what Swarm is gonna

00:33:59.435 --> 00:34:00.075
<v Speaker 0>do. So

00:34:03.510 --> 00:34:04.309
<v Speaker 0>let's

00:34:04.470 --> 00:34:05.190
<v Speaker 0>stack

00:34:05.429 --> 00:34:06.470
<v Speaker 0>deploy.

00:34:13.429 --> 00:34:14.070
<v Speaker 0>Restart.

00:34:17.525 --> 00:34:19.204
<v Speaker 0>I guess we're looking up that syntax a

00:34:19.204 --> 00:34:20.245
<v Speaker 0>little bit quicker.

00:34:21.284 --> 00:34:22.244
<v Speaker 0>Docker

00:34:22.244 --> 00:34:23.445
<v Speaker 0>compose

00:34:24.005 --> 00:34:24.565
<v Speaker 0>config.

00:34:34.100 --> 00:34:35.540
<v Speaker 0>Anyone who's watching,

00:34:35.699 --> 00:34:37.460
<v Speaker 0>if there are questions that you want this

00:34:37.460 --> 00:34:38.820
<v Speaker 0>dashboard to answer,

00:34:39.585 --> 00:34:41.344
<v Speaker 0>especially if you have any sort of swarm

00:34:41.344 --> 00:34:43.344
<v Speaker 0>experience, now is the time to put those

00:34:43.344 --> 00:34:44.945
<v Speaker 0>in the chat and I will make sure

00:34:44.945 --> 00:34:46.304
<v Speaker 0>I cover them all.

00:34:47.505 --> 00:34:48.304
<v Speaker 0>Okay.

00:34:48.304 --> 00:34:49.025
<v Speaker 0>So

00:34:49.744 --> 00:34:52.225
<v Speaker 0>retry and I'll restart

00:34:53.185 --> 00:34:53.665
<v Speaker 0>policy.

00:34:58.010 --> 00:34:59.690
<v Speaker 0>How do you set a limit?

00:35:02.250 --> 00:35:03.530
<v Speaker 0>Oh, let's just put it in.

00:35:17.365 --> 00:35:18.724
<v Speaker 0>What did I get wrong there?

00:35:20.740 --> 00:35:23.300
<v Speaker 0>Okay. So we have some deploy configuration.

00:35:23.300 --> 00:35:25.620
<v Speaker 0>Alright. Okay. It's it's kept separate from the

00:35:25.620 --> 00:35:28.020
<v Speaker 0>old composed stuff. Okay. Got it.

00:35:35.315 --> 00:35:38.435
<v Speaker 0>Well, we run container l s. It did

00:35:38.435 --> 00:35:40.355
<v Speaker 0>take a few seconds last time.

00:35:40.595 --> 00:35:41.155
<v Speaker 0>So

00:35:42.755 --> 00:35:43.795
<v Speaker 0>no watches there.

00:35:46.790 --> 00:35:48.710
<v Speaker 0>But it will be failing, so

00:35:49.430 --> 00:35:51.990
<v Speaker 0>yep. There we go. Alpine, Alpine, Alpine, fail,

00:35:51.990 --> 00:35:52.390
<v Speaker 0>fail,

00:35:53.670 --> 00:35:55.590
<v Speaker 0>And what does that look like from a

00:35:55.590 --> 00:35:56.870
<v Speaker 0>metrics point of view then?

00:36:01.765 --> 00:36:03.765
<v Speaker 0>Okay. So our number of containers is gonna

00:36:03.765 --> 00:36:05.125
<v Speaker 0>continually increase

00:36:06.325 --> 00:36:08.405
<v Speaker 0>every time that gets created and fails to

00:36:08.405 --> 00:36:09.125
<v Speaker 0>start,

00:36:09.365 --> 00:36:11.605
<v Speaker 0>but our number of running containers is never

00:36:11.605 --> 00:36:14.085
<v Speaker 0>gonna increase. So there's

00:36:13.340 --> 00:36:15.820
<v Speaker 0>definitely something that shows us. There's

00:36:17.020 --> 00:36:18.540
<v Speaker 0>a letter in potential there.

00:36:19.100 --> 00:36:21.100
<v Speaker 0>And I'll that did clean up one or

00:36:21.100 --> 00:36:22.300
<v Speaker 0>two there. What

00:36:23.740 --> 00:36:25.580
<v Speaker 0>about

00:36:29.835 --> 00:36:30.635
<v Speaker 1>okay.

00:36:31.755 --> 00:36:32.395
<v Speaker 1>So

00:36:32.795 --> 00:36:34.635
<v Speaker 1>I guess what we found out now is

00:36:34.635 --> 00:36:36.155
<v Speaker 0>that this dashboard

00:36:37.035 --> 00:36:39.914
<v Speaker 1>is very much

00:36:41.069 --> 00:36:44.029
<v Speaker 0>just for Docker daemon without swarm mode. So

00:36:44.029 --> 00:36:45.790
<v Speaker 0>I think what we really wanna do

00:36:46.270 --> 00:36:47.790
<v Speaker 1>is just create another one.

00:36:48.510 --> 00:36:50.670
<v Speaker 1>Let's call this our swarm

00:36:50.670 --> 00:36:51.390
<v Speaker 0>dashboard.

00:36:55.055 --> 00:36:57.375
<v Speaker 0>And what I wanna add first is

00:36:57.535 --> 00:36:59.295
<v Speaker 0>anything that tells me

00:37:00.174 --> 00:37:01.615
<v Speaker 0>this is broken.

00:37:02.414 --> 00:37:04.734
<v Speaker 0>And we already seen those two stats earlier,

00:37:04.734 --> 00:37:07.454
<v Speaker 0>so let's get them sorted. So we're gonna

00:37:07.454 --> 00:37:08.815
<v Speaker 0>come into our explorer view.

00:37:09.840 --> 00:37:12.160
<v Speaker 1>We're gonna click on swarm and we want

00:37:12.160 --> 00:37:13.440
<v Speaker 1>both of these values

00:37:15.040 --> 00:37:16.560
<v Speaker 1>over the last five minutes.

00:37:21.695 --> 00:37:23.375
<v Speaker 0>And what we have here

00:37:29.935 --> 00:37:30.895
<v Speaker 1>is

00:37:31.775 --> 00:37:32.575
<v Speaker 1>zero

00:37:32.575 --> 00:37:33.215
<v Speaker 1>running.

00:37:34.210 --> 00:37:36.130
<v Speaker 1>Hold on, let me view the raw data.

00:37:39.330 --> 00:37:41.090
<v Speaker 0>The tasks desired

00:37:41.970 --> 00:37:43.570
<v Speaker 0>and FlexVP

00:37:46.865 --> 00:37:50.225
<v Speaker 0>And there we go. Task desired one

00:37:51.984 --> 00:37:53.185
<v Speaker 0>and if

00:37:54.145 --> 00:37:55.265
<v Speaker 0>task running

00:37:55.265 --> 00:37:58.305
<v Speaker 0>zero. Okay. Why is that visible

00:38:00.190 --> 00:38:01.070
<v Speaker 0>here?

00:38:03.550 --> 00:38:05.630
<v Speaker 0>Okay. Let's just view one at a time.

00:38:06.590 --> 00:38:08.910
<v Speaker 0>Okay. So task running zero

00:38:10.350 --> 00:38:11.870
<v Speaker 1>and if I filter

00:38:13.645 --> 00:38:14.765
<v Speaker 0>task desired.

00:38:14.765 --> 00:38:16.365
<v Speaker 0>Oh, where's my desired for

00:38:21.325 --> 00:38:23.005
<v Speaker 0>Oh, that side is looking weird.

00:38:27.020 --> 00:38:28.780
<v Speaker 0>Okay. Script editor time.

00:38:28.860 --> 00:38:30.220
<v Speaker 0>View raw data.

00:38:30.780 --> 00:38:31.580
<v Speaker 0>Let's

00:38:31.580 --> 00:38:32.540
<v Speaker 0>just grab

00:38:36.220 --> 00:38:38.724
<v Speaker 0>many tables do we have? We've got one,

00:38:38.724 --> 00:38:40.805
<v Speaker 0>so that's one for each docker image.

00:38:41.205 --> 00:38:43.365
<v Speaker 0>Now, we only wanna grab

00:38:43.365 --> 00:38:45.765
<v Speaker 0>the last value pair table,

00:38:46.325 --> 00:38:47.765
<v Speaker 0>flatten those tables,

00:38:49.125 --> 00:38:50.244
<v Speaker 0>in fact, that'll be enough.

00:38:51.320 --> 00:38:53.880
<v Speaker 0>And that's just the last knowing state or

00:38:53.880 --> 00:38:56.120
<v Speaker 0>desired value state for each of our service

00:38:56.120 --> 00:38:58.600
<v Speaker 0>names. So for anyone who's not familiar with

00:38:58.600 --> 00:39:00.280
<v Speaker 0>InfluxDB two and Flux,

00:39:00.760 --> 00:39:02.920
<v Speaker 0>let me quickly run over what the hell

00:39:02.920 --> 00:39:04.200
<v Speaker 0>just happened there. So

00:39:05.585 --> 00:39:07.984
<v Speaker 0>we pull from a bucket, which is just

00:39:07.984 --> 00:39:10.224
<v Speaker 0>like a database or table and any other

00:39:10.224 --> 00:39:10.945
<v Speaker 0>kind of

00:39:12.385 --> 00:39:13.505
<v Speaker 0>general database.

00:39:13.744 --> 00:39:15.744
<v Speaker 0>We have this range statement which just says

00:39:15.744 --> 00:39:17.744
<v Speaker 0>show me values at start and stop. So

00:39:17.744 --> 00:39:19.585
<v Speaker 0>anything in between these and the start and

00:39:19.585 --> 00:39:21.530
<v Speaker 0>stop is based on the selector here.

00:39:22.410 --> 00:39:24.970
<v Speaker 0>We're filtering on only the swarm measurements and

00:39:24.970 --> 00:39:26.730
<v Speaker 0>we're just looking at one field, which is

00:39:26.730 --> 00:39:28.090
<v Speaker 0>tasks desired.

00:39:28.570 --> 00:39:30.810
<v Speaker 0>Then because these metrics are emitted every five

00:39:30.810 --> 00:39:32.890
<v Speaker 0>seconds, we're gonna see a value every five

00:39:32.890 --> 00:39:35.290
<v Speaker 0>seconds here and we get a different table

00:39:35.290 --> 00:39:36.835
<v Speaker 0>for each series.

00:39:36.995 --> 00:39:38.035
<v Speaker 0>A series

00:39:39.395 --> 00:39:40.275
<v Speaker 0>is

00:39:40.275 --> 00:39:42.035
<v Speaker 0>based on the group key,

00:39:42.115 --> 00:39:44.115
<v Speaker 0>which by default is all of the tags.

00:39:44.115 --> 00:39:45.875
<v Speaker 0>Now because the service name is a tag

00:39:45.875 --> 00:39:47.795
<v Speaker 0>and we have two values for that tag,

00:39:47.795 --> 00:39:48.915
<v Speaker 0>we get back two tables.

00:39:49.660 --> 00:39:51.740
<v Speaker 0>What we'll see if I scroll down here,

00:39:51.900 --> 00:39:53.660
<v Speaker 0>this is gonna be table zero and this

00:39:53.660 --> 00:39:56.300
<v Speaker 0>will be table one because these values change.

00:40:00.540 --> 00:40:03.420
<v Speaker 0>Now we don't care about every single point

00:40:03.420 --> 00:40:06.345
<v Speaker 0>every five seconds for the last five minutes.

00:40:06.745 --> 00:40:08.585
<v Speaker 0>So we're gonna last that, which means we

00:40:08.585 --> 00:40:09.865
<v Speaker 0>get back two points.

00:40:10.265 --> 00:40:13.945
<v Speaker 0>Table zero for the last point on InfluxDB

00:40:14.265 --> 00:40:17.065
<v Speaker 0>and table one is the last point for

00:40:17.065 --> 00:40:18.345
<v Speaker 0>demo command not found.

00:40:19.410 --> 00:40:21.569
<v Speaker 0>We can then use an empty group key

00:40:21.569 --> 00:40:23.650
<v Speaker 0>to flatten that to a single table

00:40:24.130 --> 00:40:25.809
<v Speaker 0>and we get back to this data like

00:40:25.809 --> 00:40:26.450
<v Speaker 0>this.

00:40:30.369 --> 00:40:31.890
<v Speaker 0>Now that won't be

00:40:32.724 --> 00:40:34.245
<v Speaker 0>something we can do here.

00:40:35.125 --> 00:40:36.725
<v Speaker 0>If we remove this group,

00:40:37.045 --> 00:40:38.805
<v Speaker 0>it will be because we have two unique

00:40:38.805 --> 00:40:41.045
<v Speaker 0>CDs, but we only have one point. So

00:40:42.484 --> 00:40:44.325
<v Speaker 1>when I do something like this, what I

00:40:44.325 --> 00:40:44.965
<v Speaker 0>actually

00:40:45.605 --> 00:40:47.525
<v Speaker 0>want to do is

00:40:48.400 --> 00:40:50.800
<v Speaker 0>we usually work with a a single stat,

00:40:50.800 --> 00:40:51.840
<v Speaker 0>some sort of

00:40:52.320 --> 00:40:54.560
<v Speaker 0>panel that just says these are how many

00:40:54.560 --> 00:40:56.160
<v Speaker 0>containers that we desire.

00:40:57.440 --> 00:40:59.680
<v Speaker 0>So I'm going to bring in a sense

00:40:59.680 --> 00:41:01.520
<v Speaker 0>to flatten it, and the reason I flatten

00:41:01.520 --> 00:41:02.880
<v Speaker 0>it is that I can now sum.

00:41:05.355 --> 00:41:07.035
<v Speaker 0>And now I get a single value that

00:41:07.035 --> 00:41:08.795
<v Speaker 0>says we have two containers

00:41:09.275 --> 00:41:09.995
<v Speaker 0>desired.

00:41:12.155 --> 00:41:13.915
<v Speaker 1>And what I wanna do is

00:41:15.115 --> 00:41:16.235
<v Speaker 1>single stat,

00:41:16.555 --> 00:41:17.355
<v Speaker 1>turn off this,

00:41:18.180 --> 00:41:19.460
<v Speaker 0>and we have that.

00:41:23.060 --> 00:41:23.780
<v Speaker 0>So

00:41:26.339 --> 00:41:27.220
<v Speaker 0>containers

00:41:27.940 --> 00:41:28.819
<v Speaker 0>desired.

00:41:31.235 --> 00:41:32.435
<v Speaker 0>Tasks, sorry,

00:41:32.755 --> 00:41:34.515
<v Speaker 0>warm chat tasks.

00:41:42.195 --> 00:41:44.435
<v Speaker 0>So let's clone this

00:41:47.099 --> 00:41:48.220
<v Speaker 0>and

00:41:48.619 --> 00:41:50.700
<v Speaker 0>let's have tasks

00:41:50.700 --> 00:41:51.900
<v Speaker 0>running.

00:41:55.980 --> 00:41:57.579
<v Speaker 0>What was that field called?

00:42:03.305 --> 00:42:06.985
<v Speaker 0>Usually the auto complete works on the data.

00:42:08.185 --> 00:42:10.105
<v Speaker 0>I'm not sure what's going on there.

00:42:10.905 --> 00:42:11.545
<v Speaker 0>Tasks.

00:42:13.410 --> 00:42:15.410
<v Speaker 0>Yeah. There we go. Task running.

00:42:17.730 --> 00:42:18.610
<v Speaker 0>Now,

00:42:19.089 --> 00:42:21.329
<v Speaker 0>at a glance, we have this indicator that

00:42:21.329 --> 00:42:23.970
<v Speaker 0>says, hey, these values are not the same.

00:42:25.745 --> 00:42:27.665
<v Speaker 0>Let's see if we can make that slightly

00:42:27.665 --> 00:42:29.985
<v Speaker 0>more visual now. So

00:42:32.065 --> 00:42:33.985
<v Speaker 0>we're gonna have a nice big graph

00:42:36.305 --> 00:42:38.865
<v Speaker 0>to show the discrepancy over time.

00:42:40.539 --> 00:42:41.260
<v Speaker 0>What

00:42:41.339 --> 00:42:43.020
<v Speaker 0>we're gonna I guess, I mean,

00:42:43.500 --> 00:42:46.220
<v Speaker 0>from any orchestration system, there are going to

00:42:46.220 --> 00:42:46.700
<v Speaker 0>be

00:42:47.660 --> 00:42:50.460
<v Speaker 0>differences between actual and desired state.

00:42:50.779 --> 00:42:53.260
<v Speaker 0>It's not a problem until that, you know,

00:42:53.260 --> 00:42:55.260
<v Speaker 0>that difference has been running for too long.

00:42:56.115 --> 00:42:56.755
<v Speaker 0>So,

00:42:58.275 --> 00:42:59.235
<v Speaker 0>let's

00:43:00.595 --> 00:43:02.515
<v Speaker 0>get back down to graph

00:43:02.515 --> 00:43:04.115
<v Speaker 0>graphable view.

00:43:07.315 --> 00:43:08.915
<v Speaker 1>And

00:43:10.090 --> 00:43:11.850
<v Speaker 1>what we want now

00:43:13.849 --> 00:43:15.530
<v Speaker 0>let's get rid of this. Let's just graph

00:43:15.530 --> 00:43:17.369
<v Speaker 0>it for now. Maybe do something with that

00:43:17.369 --> 00:43:18.570
<v Speaker 0>single stat layer.

00:43:19.770 --> 00:43:21.530
<v Speaker 0>So we can very much see these lines

00:43:21.530 --> 00:43:24.490
<v Speaker 0>are parallel. Right? Desired state has never

00:43:25.164 --> 00:43:26.365
<v Speaker 0>been realized.

00:43:30.684 --> 00:43:34.285
<v Speaker 0>In fact, we're only yeah. Wait. What? Yeah.

00:43:34.285 --> 00:43:36.765
<v Speaker 0>We've got that running and that is running

00:43:36.765 --> 00:43:37.404
<v Speaker 0>as the needle.

00:43:39.050 --> 00:43:41.850
<v Speaker 0>Let's not filter on that field,

00:43:41.930 --> 00:43:43.370
<v Speaker 0>bring in everything.

00:43:43.850 --> 00:43:45.210
<v Speaker 0>Let's calculate.

00:43:50.825 --> 00:43:53.944
<v Speaker 0>Let's try and do something weird. This

00:43:53.944 --> 00:43:54.425
<v Speaker 0>is

00:43:54.825 --> 00:43:56.984
<v Speaker 0>this is my problem on these streams is

00:43:56.984 --> 00:43:58.505
<v Speaker 0>that I have random ideas in my head

00:43:58.505 --> 00:43:59.785
<v Speaker 0>and I think, wonder if I can make

00:43:59.785 --> 00:44:02.025
<v Speaker 0>this work. But what I wanna do is

00:44:02.025 --> 00:44:03.065
<v Speaker 0>pull out these points,

00:44:05.110 --> 00:44:06.870
<v Speaker 0>actually calculate

00:44:07.830 --> 00:44:09.590
<v Speaker 0>the the difference

00:44:10.070 --> 00:44:12.710
<v Speaker 0>between desired and actual for each

00:44:14.150 --> 00:44:14.870
<v Speaker 0>task

00:44:15.590 --> 00:44:16.630
<v Speaker 0>so that

00:44:17.190 --> 00:44:19.030
<v Speaker 0>either a container being rescheduled

00:44:19.545 --> 00:44:20.985
<v Speaker 0>or failing

00:44:21.224 --> 00:44:23.224
<v Speaker 0>should show as a blip on a graph

00:44:23.224 --> 00:44:25.625
<v Speaker 0>rather than parallel lanes.

00:44:26.424 --> 00:44:27.704
<v Speaker 0>So let's see if we can make that

00:44:27.704 --> 00:44:28.345
<v Speaker 0>work.

00:44:30.825 --> 00:44:32.424
<v Speaker 0>Let's get a view data so I know

00:44:32.424 --> 00:44:33.464
<v Speaker 0>what I'm working with.

00:44:35.530 --> 00:44:37.610
<v Speaker 0>I need to change the group key. So

00:44:37.610 --> 00:44:39.130
<v Speaker 0>what we're gonna see we've seen earlier we

00:44:39.130 --> 00:44:41.210
<v Speaker 0>had two tables. Right? We had

00:44:41.610 --> 00:44:43.850
<v Speaker 0>because we're only filtering on a single field,

00:44:44.410 --> 00:44:46.730
<v Speaker 0>the only thing that changed per table was

00:44:46.730 --> 00:44:48.125
<v Speaker 0>the value of

00:44:48.765 --> 00:44:50.605
<v Speaker 0>a tag, which was just the task name

00:44:50.605 --> 00:44:51.725
<v Speaker 0>or service name.

00:44:52.125 --> 00:44:53.645
<v Speaker 0>Now we should see four.

00:44:53.805 --> 00:44:54.445
<v Speaker 0>Yeah.

00:44:54.685 --> 00:44:57.005
<v Speaker 0>You know, one, two, and three. And that's

00:44:57.005 --> 00:44:58.685
<v Speaker 0>because the field is also part of the

00:44:58.685 --> 00:45:00.685
<v Speaker 0>group key and that changes. So our field

00:45:00.685 --> 00:45:02.444
<v Speaker 0>here is task desired

00:45:03.200 --> 00:45:04.960
<v Speaker 0>and then we have task running.

00:45:06.240 --> 00:45:08.240
<v Speaker 0>Let's what we we want two tables, one

00:45:08.240 --> 00:45:10.480
<v Speaker 0>per series and both of those fields available

00:45:10.480 --> 00:45:12.079
<v Speaker 0>to us so that we can map over

00:45:12.079 --> 00:45:12.640
<v Speaker 0>them,

00:45:13.920 --> 00:45:15.200
<v Speaker 0>do the subtraction

00:45:15.200 --> 00:45:16.079
<v Speaker 0>hopefully.

00:45:16.079 --> 00:45:17.680
<v Speaker 0>To be honest, I've had a lot of

00:45:18.215 --> 00:45:19.815
<v Speaker 0>problems trying to do

00:45:20.855 --> 00:45:22.775
<v Speaker 0>some of these operations in Flux

00:45:22.935 --> 00:45:24.855
<v Speaker 0>but I'm confident.

00:45:26.855 --> 00:45:28.615
<v Speaker 0>I'm sure that's an incompetent.

00:45:29.015 --> 00:45:29.735
<v Speaker 0>So

00:45:30.695 --> 00:45:31.815
<v Speaker 0>change the group key,

00:45:32.460 --> 00:45:33.260
<v Speaker 0>columns.

00:45:33.260 --> 00:45:34.940
<v Speaker 0>We wanna group on

00:45:36.380 --> 00:45:37.420
<v Speaker 0>our measurement.

00:45:37.420 --> 00:45:37.900
<v Speaker 0>So

00:45:39.020 --> 00:45:41.500
<v Speaker 0>the fact that we're creating Docker Swarm, we

00:45:41.500 --> 00:45:44.300
<v Speaker 0>want to group on

00:45:45.755 --> 00:45:47.835
<v Speaker 0>I mean, the host isn't important, but it

00:45:47.835 --> 00:45:49.435
<v Speaker 0>doesn't change, so we just throw it in

00:45:49.435 --> 00:45:50.075
<v Speaker 0>there

00:45:50.555 --> 00:45:51.515
<v Speaker 0>and

00:45:51.515 --> 00:45:52.795
<v Speaker 0>the service

00:45:52.795 --> 00:45:53.435
<v Speaker 0>ID.

00:45:56.810 --> 00:45:59.290
<v Speaker 0>I should have two tables.

00:46:00.970 --> 00:46:02.730
<v Speaker 0>Inside of those tables,

00:46:03.290 --> 00:46:04.250
<v Speaker 0>multiple

00:46:04.250 --> 00:46:05.130
<v Speaker 0>fields.

00:46:07.450 --> 00:46:07.850
<v Speaker 0>Yes.

00:46:11.305 --> 00:46:14.505
<v Speaker 0>We wanna pivot from a columnar structure

00:46:14.744 --> 00:46:16.505
<v Speaker 0>to a row based structure.

00:46:18.105 --> 00:46:19.865
<v Speaker 0>So our column key

00:46:20.505 --> 00:46:21.944
<v Speaker 0>is

00:46:22.980 --> 00:46:23.860
<v Speaker 0>build.

00:46:23.940 --> 00:46:25.300
<v Speaker 0>Our row key

00:46:30.260 --> 00:46:31.780
<v Speaker 0>is service ID.

00:46:31.860 --> 00:46:33.940
<v Speaker 0>Yeah. We want to make rows where the

00:46:33.940 --> 00:46:35.220
<v Speaker 0>service ID is the same.

00:46:37.955 --> 00:46:40.755
<v Speaker 0>We identify columns to be pivoted

00:46:41.075 --> 00:46:42.195
<v Speaker 0>by field

00:46:42.755 --> 00:46:44.115
<v Speaker 0>and our value

00:46:44.435 --> 00:46:45.635
<v Speaker 0>is a value.

00:46:47.635 --> 00:46:48.355
<v Speaker 0>Nice.

00:46:49.715 --> 00:46:52.035
<v Speaker 0>And now we have two tables

00:46:52.809 --> 00:46:55.369
<v Speaker 0>and we have our tasks desired

00:46:55.369 --> 00:46:56.730
<v Speaker 0>and our tasks

00:46:56.730 --> 00:46:57.530
<v Speaker 0>running.

00:47:02.170 --> 00:47:05.770
<v Speaker 0>But I have lost

00:47:06.465 --> 00:47:07.105
<v Speaker 0>time.

00:47:08.545 --> 00:47:11.025
<v Speaker 0>So we still want points

00:47:11.745 --> 00:47:14.545
<v Speaker 0>we still want multiple multiple records

00:47:14.865 --> 00:47:16.865
<v Speaker 0>per table with the time.

00:47:18.160 --> 00:47:20.480
<v Speaker 0>And that just means I need my group

00:47:20.480 --> 00:47:22.240
<v Speaker 0>key to include time.

00:47:22.960 --> 00:47:23.680
<v Speaker 0>So

00:47:23.840 --> 00:47:24.640
<v Speaker 0>let's

00:47:26.880 --> 00:47:29.120
<v Speaker 1>add

00:47:33.055 --> 00:47:33.695
<v Speaker 0>10.

00:47:38.255 --> 00:47:38.895
<v Speaker 1>Okay.

00:47:39.934 --> 00:47:40.734
<v Speaker 1>We're getting there.

00:47:45.550 --> 00:47:47.310
<v Speaker 0>We want this I want the service name

00:47:47.310 --> 00:47:49.230
<v Speaker 0>to right. I don't wanna work with that

00:47:49.230 --> 00:47:51.310
<v Speaker 0>service ID that we have there.

00:47:53.230 --> 00:47:54.670
<v Speaker 0>Okay. Service names.

00:47:55.765 --> 00:47:57.285
<v Speaker 0>So now we have these.

00:47:58.165 --> 00:47:59.605
<v Speaker 0>Because the group key

00:47:59.685 --> 00:48:02.405
<v Speaker 0>includes the time, that means we're gonna get

00:48:02.405 --> 00:48:04.485
<v Speaker 0>a table for every entry.

00:48:05.285 --> 00:48:06.085
<v Speaker 0>So

00:48:06.245 --> 00:48:08.245
<v Speaker 0>now that we've pivoted that, we can then

00:48:08.245 --> 00:48:09.685
<v Speaker 0>regroup again.

00:48:09.925 --> 00:48:11.125
<v Speaker 0>I know this is

00:48:11.900 --> 00:48:13.020
<v Speaker 0>pretty confusing.

00:48:13.100 --> 00:48:13.740
<v Speaker 0>It

00:48:13.980 --> 00:48:16.060
<v Speaker 0>just takes a little bit of time and

00:48:16.060 --> 00:48:17.020
<v Speaker 0>patience

00:48:17.740 --> 00:48:19.340
<v Speaker 0>to kinda get used to it.

00:48:20.460 --> 00:48:21.180
<v Speaker 0>So

00:48:21.340 --> 00:48:23.900
<v Speaker 0>we want to then we basically just wanna

00:48:23.900 --> 00:48:25.500
<v Speaker 0>copy this but remove time,

00:48:26.985 --> 00:48:29.785
<v Speaker 0>But we wanted the records to survive the

00:48:29.785 --> 00:48:30.505
<v Speaker 0>pivot.

00:48:30.985 --> 00:48:33.385
<v Speaker 0>I hope that makes sense. If not,

00:48:34.025 --> 00:48:35.465
<v Speaker 0>I can go over that again.

00:48:36.425 --> 00:48:39.305
<v Speaker 0>Good. So now table zero is always going

00:48:39.305 --> 00:48:41.625
<v Speaker 0>to be our InfluxDB service name. These are

00:48:41.625 --> 00:48:43.880
<v Speaker 0>the values every five seconds.

00:48:44.200 --> 00:48:45.960
<v Speaker 0>And when we get to table one,

00:48:46.520 --> 00:48:49.160
<v Speaker 0>it's this one, but the same. So this

00:48:49.160 --> 00:48:50.120
<v Speaker 0>should be graphable.

00:48:54.615 --> 00:48:55.335
<v Speaker 0>Kinda.

00:48:56.535 --> 00:48:58.615
<v Speaker 0>So now what we want to do is

00:48:58.615 --> 00:48:59.975
<v Speaker 0>map over

00:49:00.215 --> 00:49:01.735
<v Speaker 0>each of these points

00:49:03.335 --> 00:49:05.015
<v Speaker 0>and def these two integers.

00:49:08.030 --> 00:49:09.869
<v Speaker 0>So we're gonna do a map which takes

00:49:09.869 --> 00:49:10.750
<v Speaker 0>a function.

00:49:12.349 --> 00:49:14.430
<v Speaker 0>And what we want to do is

00:49:14.510 --> 00:49:17.870
<v Speaker 0>r web, so record web a new value

00:49:18.030 --> 00:49:18.990
<v Speaker 0>called def,

00:49:21.245 --> 00:49:23.725
<v Speaker 0>which is equal to r

00:49:27.085 --> 00:49:27.885
<v Speaker 0>tasks

00:49:29.085 --> 00:49:30.285
<v Speaker 0>desired,

00:49:30.365 --> 00:49:32.605
<v Speaker 0>which should always be the same or higher

00:49:33.360 --> 00:49:34.560
<v Speaker 0>than tasks

00:49:34.640 --> 00:49:35.360
<v Speaker 0>running.

00:49:35.520 --> 00:49:36.320
<v Speaker 0>Will it?

00:49:37.680 --> 00:49:39.440
<v Speaker 0>I guess if I scaled down,

00:49:40.480 --> 00:49:42.640
<v Speaker 0>we can deal with the odd negative integer.

00:49:42.640 --> 00:49:43.120
<v Speaker 0>Right?

00:49:44.160 --> 00:49:44.960
<v Speaker 0>Minus

00:49:44.960 --> 00:49:46.560
<v Speaker 0>our tasks

00:49:46.560 --> 00:49:47.360
<v Speaker 0>running.

00:49:48.705 --> 00:49:50.385
<v Speaker 0>Oh, what did I get wrong?

00:49:53.665 --> 00:49:56.385
<v Speaker 0>How does the web syntax work again?

00:49:57.425 --> 00:49:59.745
<v Speaker 1>Are with

00:50:02.880 --> 00:50:04.080
<v Speaker 0>When in doubt,

00:50:04.800 --> 00:50:05.680
<v Speaker 0>docs.

00:50:06.000 --> 00:50:08.320
<v Speaker 0>Let's see. Do we have an example in

00:50:08.320 --> 00:50:09.040
<v Speaker 1>that

00:50:10.720 --> 00:50:11.600
<v Speaker 1>with

00:50:12.080 --> 00:50:13.840
<v Speaker 1>oh, we do. With

00:50:14.320 --> 00:50:14.640
<v Speaker 1>oh,

00:50:15.265 --> 00:50:16.465
<v Speaker 1>broke it.

00:50:18.785 --> 00:50:20.385
<v Speaker 0>Go back to map.

00:50:24.785 --> 00:50:25.505
<v Speaker 1>Where?

00:50:25.825 --> 00:50:26.865
<v Speaker 1>Spell.

00:50:28.305 --> 00:50:28.945
<v Speaker 1>There you go.

00:50:30.270 --> 00:50:33.550
<v Speaker 1>Alright. With nuke. Yeah. That's what I've got.

00:50:33.550 --> 00:50:33.710
<v Speaker 0>Right?

00:50:48.375 --> 00:50:50.375
<v Speaker 0>Does it just want me to

00:50:50.935 --> 00:50:52.935
<v Speaker 0>block that off? Yeah. Okay.

00:50:54.950 --> 00:50:56.950
<v Speaker 0>So we should have an extra column,

00:50:59.990 --> 00:51:02.470
<v Speaker 0>which is always gonna be zero for InfluxDB,

00:51:02.630 --> 00:51:03.670
<v Speaker 0>but I'm hoping

00:51:04.549 --> 00:51:06.869
<v Speaker 0>yeah. For command not found, we now have

00:51:06.869 --> 00:51:09.384
<v Speaker 0>an indicator that, hey, we've been trying to

00:51:09.384 --> 00:51:11.145
<v Speaker 0>schedule one or more

00:51:11.545 --> 00:51:12.265
<v Speaker 0>containers.

00:51:13.704 --> 00:51:15.464
<v Speaker 0>Alright. What else do we need?

00:51:21.720 --> 00:51:23.800
<v Speaker 0>We wanna rename this value

00:51:23.800 --> 00:51:25.720
<v Speaker 0>so we can graph it.

00:51:28.760 --> 00:51:29.880
<v Speaker 0>Well hopefully

00:51:32.360 --> 00:51:32.680
<v Speaker 0>good.

00:51:36.095 --> 00:51:38.575
<v Speaker 0>We still got parallel lanes, but we now

00:51:38.735 --> 00:51:42.255
<v Speaker 0>have the context that means anything above zero

00:51:42.815 --> 00:51:43.615
<v Speaker 0>is bad.

00:51:46.990 --> 00:51:49.390
<v Speaker 0>Can we clean up this chart in any

00:51:49.390 --> 00:51:50.109
<v Speaker 0>way

00:51:53.150 --> 00:51:54.589
<v Speaker 1>just to make

00:51:55.869 --> 00:51:56.750
<v Speaker 1>it easier?

00:52:06.925 --> 00:52:08.365
<v Speaker 0>Not really much.

00:52:08.605 --> 00:52:12.685
<v Speaker 0>I mean, I could set

00:52:13.500 --> 00:52:15.500
<v Speaker 0>this to be, you know,

00:52:16.060 --> 00:52:18.060
<v Speaker 0>10.

00:52:19.660 --> 00:52:21.260
<v Speaker 0>This gives us a bit more

00:52:22.060 --> 00:52:23.420
<v Speaker 0>I don't know. I think that's gonna be

00:52:23.420 --> 00:52:24.620
<v Speaker 0>easier to consume

00:52:24.700 --> 00:52:26.540
<v Speaker 0>but we're set as max limit that we

00:52:26.540 --> 00:52:27.420
<v Speaker 0>don't really want.

00:52:28.845 --> 00:52:31.005
<v Speaker 0>I don't really want it broken down

00:52:31.325 --> 00:52:33.165
<v Speaker 0>to units less than one,

00:52:34.045 --> 00:52:34.685
<v Speaker 0>but

00:52:35.485 --> 00:52:38.445
<v Speaker 0>I just don't think I can configure that

00:52:38.445 --> 00:52:39.165
<v Speaker 0>in any way.

00:52:45.080 --> 00:52:46.760
<v Speaker 0>Yeah. We'll just need to make our piece

00:52:46.760 --> 00:52:48.280
<v Speaker 0>of it for now. I guess we can

00:52:48.280 --> 00:52:51.000
<v Speaker 0>always, deploy a few extra workloads,

00:52:51.640 --> 00:52:52.680
<v Speaker 0>see what happens.

00:52:53.160 --> 00:52:55.160
<v Speaker 0>Why did that crash there? Ah, there we

00:52:55.160 --> 00:52:55.320
<v Speaker 0>go.

00:52:57.684 --> 00:52:58.405
<v Speaker 0>Okay.

00:53:00.565 --> 00:53:03.205
<v Speaker 1>So these are interesting. I didn't expect

00:53:04.805 --> 00:53:06.565
<v Speaker 1>did we not make this running?

00:53:08.165 --> 00:53:08.645
<v Speaker 1>No.

00:53:11.339 --> 00:53:12.300
<v Speaker 0>There we go.

00:53:17.420 --> 00:53:19.980
<v Speaker 0>Okay. So we have a Docker Swarm dashboard.

00:53:19.980 --> 00:53:22.235
<v Speaker 0>I can see tasks desired two, tasks running

00:53:22.235 --> 00:53:23.915
<v Speaker 0>one and I have a graph that shows

00:53:23.915 --> 00:53:24.395
<v Speaker 0>me

00:53:24.715 --> 00:53:27.035
<v Speaker 0>hey, this has been running pretty poorly for

00:53:27.035 --> 00:53:28.315
<v Speaker 0>at least five minutes.

00:53:28.635 --> 00:53:30.235
<v Speaker 0>And we set this to an hour.

00:53:30.875 --> 00:53:32.635
<v Speaker 1>Okay. So our data is there we go.

00:53:32.635 --> 00:53:34.075
<v Speaker 0>It's not been doing this an hour. So

00:53:34.075 --> 00:53:36.075
<v Speaker 0>fifteen minutes. Yeah. It's been broken the entire

00:53:36.075 --> 00:53:36.235
<v Speaker 0>time.

00:53:37.870 --> 00:53:40.190
<v Speaker 0>So let's just fix it so we can

00:53:40.990 --> 00:53:43.710
<v Speaker 0>see that graph work in a healthy fashion.

00:53:44.830 --> 00:53:47.310
<v Speaker 0>Now if I just do sleep

00:53:48.670 --> 00:53:51.310
<v Speaker 0>command because, you know, Docker fucked up that

00:53:51.310 --> 00:53:51.870
<v Speaker 0>syntax.

00:53:52.665 --> 00:53:53.865
<v Speaker 0>I

00:53:54.745 --> 00:53:56.025
<v Speaker 0>don't mean that too much.

00:53:56.905 --> 00:53:58.585
<v Speaker 0>Docker stack deploy.

00:54:01.945 --> 00:54:05.305
<v Speaker 0>That container should be happy running it asleep.

00:54:08.119 --> 00:54:08.760
<v Speaker 0>Yep.

00:54:09.559 --> 00:54:11.000
<v Speaker 0>Give that five seconds.

00:54:15.480 --> 00:54:16.200
<v Speaker 0>Good.

00:54:16.839 --> 00:54:17.960
<v Speaker 0>Graph is happy.

00:54:22.085 --> 00:54:23.125
<v Speaker 1>So before

00:54:23.125 --> 00:54:23.845
<v Speaker 1>we

00:54:24.965 --> 00:54:26.645
<v Speaker 1>go and look into

00:54:26.645 --> 00:54:27.445
<v Speaker 0>the

00:54:28.965 --> 00:54:30.885
<v Speaker 0>I I think there's potential metrics that Docker

00:54:30.885 --> 00:54:32.725
<v Speaker 0>Swarm is exposing that we're not consuming on

00:54:32.725 --> 00:54:33.605
<v Speaker 0>a Telegraph plugin.

00:54:34.390 --> 00:54:36.150
<v Speaker 0>And I wanna dig into that a little

00:54:36.150 --> 00:54:37.910
<v Speaker 0>bit. I would love to understand

00:54:40.869 --> 00:54:42.550
<v Speaker 0>if we can get stuff like

00:54:43.430 --> 00:54:45.510
<v Speaker 0>the total amount of disk being consumed by

00:54:45.510 --> 00:54:46.150
<v Speaker 0>images

00:54:49.475 --> 00:54:50.435
<v Speaker 0>and volumes.

00:54:50.435 --> 00:54:52.195
<v Speaker 0>Maybe that is available. I'll I'll double check

00:54:52.195 --> 00:54:54.115
<v Speaker 0>before I waste any time on that. But

00:54:54.115 --> 00:54:56.035
<v Speaker 0>I wanna do an alert and example on

00:54:56.035 --> 00:54:57.955
<v Speaker 0>just this reconciliation.

00:54:58.035 --> 00:54:58.515
<v Speaker 0>Then

00:54:59.555 --> 00:55:01.795
<v Speaker 0>we will maybe dig into something else for

00:55:01.795 --> 00:55:02.755
<v Speaker 0>ten or fifteen minutes.

00:55:03.930 --> 00:55:05.609
<v Speaker 0>I've not had any questions about things that

00:55:05.609 --> 00:55:08.090
<v Speaker 0>they want this dashboard to answer. I'm assuming

00:55:08.650 --> 00:55:10.330
<v Speaker 0>I mean, this is the big one. Right?

00:55:10.330 --> 00:55:12.730
<v Speaker 0>Any orchestration system is the same as when

00:55:12.730 --> 00:55:15.210
<v Speaker 0>does my desired state deviate from the the

00:55:15.210 --> 00:55:15.849
<v Speaker 0>actual state.

00:55:16.335 --> 00:55:18.175
<v Speaker 0>And that's what I wanna alert on, especially

00:55:18.175 --> 00:55:20.095
<v Speaker 0>if it's been that way for a certain

00:55:20.175 --> 00:55:21.855
<v Speaker 0>predefined set of time.

00:55:22.095 --> 00:55:24.335
<v Speaker 0>Like, I expect my desired state and my

00:55:24.335 --> 00:55:25.535
<v Speaker 0>actual state

00:55:25.535 --> 00:55:27.935
<v Speaker 0>to be different for a very short period

00:55:27.935 --> 00:55:29.935
<v Speaker 0>of time and you can decide what that

00:55:29.935 --> 00:55:31.855
<v Speaker 0>that level of safety is.

00:55:33.470 --> 00:55:34.830
<v Speaker 0>So let's alert.

00:55:34.990 --> 00:55:38.270
<v Speaker 0>There's a really cool website called rbox.app,

00:55:38.829 --> 00:55:40.750
<v Speaker 0>which just allows you to create an HTTP

00:55:40.750 --> 00:55:41.550
<v Speaker 0>endpoint.

00:55:42.750 --> 00:55:44.910
<v Speaker 0>I'm gonna use this to receive my alerts.

00:55:48.045 --> 00:55:48.765
<v Speaker 0>Now

00:55:48.845 --> 00:55:51.645
<v Speaker 0>InfluxDB two ships with built in alerting,

00:55:52.365 --> 00:55:55.325
<v Speaker 0>which will also be exported to YAML

00:55:55.325 --> 00:55:56.685
<v Speaker 0>when I export this dashboard.

00:55:58.619 --> 00:56:01.339
<v Speaker 0>Oh, in fact, these are these have already

00:56:01.339 --> 00:56:02.540
<v Speaker 0>been imported

00:56:06.299 --> 00:56:08.300
<v Speaker 0>from one of those two different

00:56:08.380 --> 00:56:11.020
<v Speaker 0>package community templates that I imported. I don't

00:56:11.020 --> 00:56:11.500
<v Speaker 0>know which.

00:56:13.775 --> 00:56:16.255
<v Speaker 0>And it created an HTTP post on local

00:56:16.255 --> 00:56:18.015
<v Speaker 0>host alert. Well, I mean, that's gonna fail.

00:56:18.015 --> 00:56:19.135
<v Speaker 0>Let's turn that off.

00:56:20.654 --> 00:56:22.815
<v Speaker 0>So we could use Slack or PagerDuty.

00:56:22.815 --> 00:56:24.734
<v Speaker 0>I'm more than happy to use our box

00:56:24.734 --> 00:56:25.615
<v Speaker 0>for the time being.

00:56:26.720 --> 00:56:29.039
<v Speaker 0>We're gonna send a post request to this

00:56:29.039 --> 00:56:30.880
<v Speaker 0>location and click go.

00:56:31.920 --> 00:56:34.800
<v Speaker 0>I wanna create a first dead man alert,

00:56:35.039 --> 00:56:36.880
<v Speaker 0>which will trigger by killing telegraph.

00:56:38.255 --> 00:56:39.615
<v Speaker 0>And what we're gonna see is when we

00:56:39.615 --> 00:56:41.215
<v Speaker 0>stop receiving metrics

00:56:41.295 --> 00:56:42.815
<v Speaker 0>from Docker Swarm,

00:56:46.095 --> 00:56:47.375
<v Speaker 1>then that is bad.

00:56:48.175 --> 00:56:49.375
<v Speaker 1>I should have named it.

00:56:51.170 --> 00:56:52.850
<v Speaker 0>So Docker

00:56:53.090 --> 00:56:54.050
<v Speaker 0>Swarm

00:56:54.290 --> 00:56:55.090
<v Speaker 0>state.

00:56:57.010 --> 00:57:00.050
<v Speaker 0>We're gonna schedule this every fifteen seconds.

00:57:00.530 --> 00:57:01.650
<v Speaker 0>We don't need an offset.

00:57:04.305 --> 00:57:06.945
<v Speaker 0>We'll just add a tag of docker

00:57:07.505 --> 00:57:08.385
<v Speaker 0>one.

00:57:11.425 --> 00:57:14.225
<v Speaker 0>And if I don't get these two values

00:57:14.225 --> 00:57:15.905
<v Speaker 0>for

00:57:15.560 --> 00:57:16.760
<v Speaker 0>two windows,

00:57:16.840 --> 00:57:18.120
<v Speaker 0>thirty seconds,

00:57:21.640 --> 00:57:23.880
<v Speaker 0>which I know is probably a bit hasty,

00:57:25.000 --> 00:57:27.080
<v Speaker 0>we'll set the status to critical. In fact,

00:57:27.080 --> 00:57:29.240
<v Speaker 0>no, we'll set it to warn

00:57:30.895 --> 00:57:33.375
<v Speaker 0>and stop checking after five

00:57:33.375 --> 00:57:36.815
<v Speaker 0>minutes, you know. If nobody has

00:57:39.375 --> 00:57:41.055
<v Speaker 0>five minutes to critical.

00:57:41.135 --> 00:57:43.055
<v Speaker 0>Yeah. If we don't get a value for

00:57:43.055 --> 00:57:44.174
<v Speaker 0>two missing windows,

00:57:46.690 --> 00:57:47.890
<v Speaker 0>notify the world.

00:57:48.850 --> 00:57:51.010
<v Speaker 0>Something else that I wanna create

00:57:51.330 --> 00:57:53.570
<v Speaker 0>is my threshold check

00:57:53.570 --> 00:57:55.330
<v Speaker 0>where

00:57:57.985 --> 00:57:59.585
<v Speaker 0>these two values

00:58:06.385 --> 00:58:08.385
<v Speaker 0>oh, can I not rate flux here?

00:58:18.400 --> 00:58:20.400
<v Speaker 0>That's not gonna work. That's annoying.

00:58:33.309 --> 00:58:35.150
<v Speaker 1>Why can I not rate flux?

00:58:39.150 --> 00:58:41.230
<v Speaker 0>Okay. So our threshold check isn't gonna allow

00:58:41.230 --> 00:58:42.430
<v Speaker 0>us to let us do the math that

00:58:42.430 --> 00:58:44.109
<v Speaker 0>we want. However,

00:58:44.430 --> 00:58:45.309
<v Speaker 0>I have a plan.

00:58:48.135 --> 00:58:50.455
<v Speaker 0>So it's quick. If when anything goes to

00:58:50.455 --> 00:58:52.295
<v Speaker 0>critical, schedule every

00:58:52.615 --> 00:58:53.895
<v Speaker 0>thirty seconds,

00:58:53.975 --> 00:58:54.535
<v Speaker 0>please

00:58:55.415 --> 00:58:58.615
<v Speaker 0>use this RBOX one. Go. Thanks.

00:58:59.849 --> 00:59:02.329
<v Speaker 0>If I wanted to filter this purely on

00:59:02.329 --> 00:59:03.849
<v Speaker 0>the Docker Swarm,

00:59:04.089 --> 00:59:05.530
<v Speaker 0>I can do Docker

00:59:06.329 --> 00:59:07.290
<v Speaker 0>Swarm,

00:59:08.890 --> 00:59:10.970
<v Speaker 0>and I can have my other alerts

00:59:11.345 --> 00:59:13.105
<v Speaker 0>not filter on that tag.

00:59:13.585 --> 00:59:14.305
<v Speaker 0>Okay.

00:59:14.385 --> 00:59:16.464
<v Speaker 0>Let's quickly go back to my dashboard. I

00:59:16.464 --> 00:59:19.105
<v Speaker 0>wanna copy my query from here.

00:59:21.664 --> 00:59:23.905
<v Speaker 0>And what I'm gonna do is

00:59:24.065 --> 00:59:25.105
<v Speaker 0>write a task.

00:59:36.520 --> 00:59:37.640
<v Speaker 0>Let me think this through.

00:59:40.855 --> 00:59:41.575
<v Speaker 1>So

00:59:42.775 --> 00:59:43.415
<v Speaker 1>alert

00:59:44.214 --> 00:59:45.015
<v Speaker 0>on

00:59:45.174 --> 00:59:46.135
<v Speaker 0>desired

00:59:46.135 --> 00:59:47.015
<v Speaker 0>versus

00:59:47.015 --> 00:59:47.975
<v Speaker 0>actual

00:59:48.135 --> 00:59:48.935
<v Speaker 0>state.

00:59:50.295 --> 00:59:53.734
<v Speaker 0>We're gonna run every thirty seconds

00:59:55.530 --> 00:59:56.410
<v Speaker 0>and

00:59:56.730 --> 00:59:58.250
<v Speaker 0>we're gonna fetch

01:00:01.290 --> 01:00:02.570
<v Speaker 0>thirty seconds

01:00:02.890 --> 01:00:03.930
<v Speaker 0>for the metrics.

01:00:06.775 --> 01:00:09.015
<v Speaker 0>We've created a new field.

01:00:13.895 --> 01:00:15.815
<v Speaker 0>Now we have two options.

01:00:18.830 --> 01:00:20.110
<v Speaker 0>We can either

01:00:20.190 --> 01:00:22.110
<v Speaker 0>use this as a

01:00:22.910 --> 01:00:26.270
<v Speaker 0>tutorial of downsampling data writing it back

01:00:26.510 --> 01:00:27.950
<v Speaker 0>into the bucket,

01:00:29.550 --> 01:00:31.630
<v Speaker 0>or we trigger the alert straight from here.

01:00:34.775 --> 01:00:36.935
<v Speaker 0>I've never I've never done either,

01:00:37.815 --> 01:00:39.494
<v Speaker 0>but I'm gonna use that same confidence I

01:00:39.494 --> 01:00:40.775
<v Speaker 0>had earlier. So

01:00:42.055 --> 01:00:44.375
<v Speaker 1>if we want to send an HTTP alert,

01:00:46.610 --> 01:00:49.730
<v Speaker 0>what we need to do is import HTTP.

01:00:51.810 --> 01:00:52.850
<v Speaker 0>We can

01:00:57.330 --> 01:00:58.130
<v Speaker 0>instead

01:00:58.210 --> 01:00:58.930
<v Speaker 0>of

01:00:59.170 --> 01:01:00.530
<v Speaker 0>let's push this down.

01:01:01.875 --> 01:01:03.635
<v Speaker 0>Comment it out. If

01:01:06.355 --> 01:01:07.715
<v Speaker 0>we open a block

01:01:08.595 --> 01:01:09.635
<v Speaker 0>and see

01:01:11.155 --> 01:01:12.355
<v Speaker 0>if our

01:01:12.915 --> 01:01:14.995
<v Speaker 0>tasks desired

01:01:15.860 --> 01:01:17.220
<v Speaker 0>minus r

01:01:17.620 --> 01:01:18.420
<v Speaker 0>tasks

01:01:18.420 --> 01:01:19.300
<v Speaker 0>running

01:01:21.700 --> 01:01:22.500
<v Speaker 0>greater

01:01:22.500 --> 01:01:23.780
<v Speaker 0>than zero.

01:01:26.980 --> 01:01:28.020
<v Speaker 0>I can't even remember.

01:01:31.975 --> 01:01:34.855
<v Speaker 0>Let's check this out. Conditionals.

01:01:37.815 --> 01:01:39.815
<v Speaker 0>F then. Oh, it's just f then. Yeah.

01:01:39.815 --> 01:01:40.135
<v Speaker 0>Go on.

01:01:41.910 --> 01:01:43.350
<v Speaker 0>So f

01:01:43.670 --> 01:01:44.470
<v Speaker 0>then

01:01:46.950 --> 01:01:48.390
<v Speaker 0>can I do it with something else?

01:01:55.925 --> 01:01:56.645
<v Speaker 1>Okay.

01:01:57.925 --> 01:01:59.685
<v Speaker 1>And then else

01:01:59.685 --> 01:02:00.725
<v Speaker 1>false.

01:02:00.965 --> 01:02:03.445
<v Speaker 0>And but the and then is gonna be

01:02:03.445 --> 01:02:06.245
<v Speaker 0>that we want to do an HTTP

01:02:07.100 --> 01:02:08.140
<v Speaker 0>post

01:02:09.340 --> 01:02:10.220
<v Speaker 0>URL.

01:02:13.580 --> 01:02:15.100
<v Speaker 0>How can we make it a shot up?

01:02:19.915 --> 01:02:21.994
<v Speaker 1>Yep. At least I got one bit right.

01:02:23.515 --> 01:02:24.715
<v Speaker 1>Copy you.

01:02:29.355 --> 01:02:31.674
<v Speaker 0>And we don't need that across multiple lines.

01:02:34.840 --> 01:02:36.280
<v Speaker 0>Why are you mulling at me? What have

01:02:36.280 --> 01:02:38.840
<v Speaker 0>I got wrong? Expected rate per annum.

01:02:41.880 --> 01:02:42.600
<v Speaker 0>Yep.

01:02:45.000 --> 01:02:46.440
<v Speaker 0>Why are you mulling?

01:02:50.745 --> 01:02:51.385
<v Speaker 1>Ev.

01:02:52.105 --> 01:02:52.825
<v Speaker 1>Ev.

01:02:53.625 --> 01:02:54.265
<v Speaker 1>Ev.

01:02:59.225 --> 01:03:01.545
<v Speaker 0>What? I just bet you're talking for property

01:03:01.545 --> 01:03:04.840
<v Speaker 0>key ev. Alright. Let's try and simplify this

01:03:04.840 --> 01:03:06.040
<v Speaker 0>first. So

01:03:06.840 --> 01:03:08.200
<v Speaker 0>if true,

01:03:09.080 --> 01:03:09.800
<v Speaker 1>then

01:03:11.480 --> 01:03:12.440
<v Speaker 1>true,

01:03:12.600 --> 01:03:14.280
<v Speaker 1>else false.

01:03:14.440 --> 01:03:15.160
<v Speaker 1>Like that.

01:03:18.745 --> 01:03:20.105
<v Speaker 0>No. Alright.

01:03:21.305 --> 01:03:23.305
<v Speaker 0>Let's look out conditionals again.

01:03:29.960 --> 01:03:31.400
<v Speaker 1>Here's a nice example.

01:03:32.040 --> 01:03:33.720
<v Speaker 1>A little color doesn't exist.

01:03:35.560 --> 01:03:36.840
<v Speaker 0>That's gonna fill

01:03:40.840 --> 01:03:42.359
<v Speaker 0>green equals equals green.

01:03:50.175 --> 01:03:52.575
<v Speaker 0>Oh, wait. This is object syntax.

01:03:54.095 --> 01:03:55.215
<v Speaker 1>Yeah. Okay.

01:03:55.455 --> 01:03:58.095
<v Speaker 0>Yeah. So you can use

01:03:58.560 --> 01:04:00.400
<v Speaker 0>like like we did with our web to

01:04:00.400 --> 01:04:03.120
<v Speaker 0>add new fields to a dictionary map, whatever

01:04:03.120 --> 01:04:04.800
<v Speaker 0>you wanna call it. I mean, this is

01:04:04.800 --> 01:04:06.160
<v Speaker 0>a this is a map.

01:04:08.320 --> 01:04:10.160
<v Speaker 0>You gotta be careful with the way and

01:04:10.160 --> 01:04:12.635
<v Speaker 0>I just obviously still really poor at it.

01:04:12.875 --> 01:04:15.115
<v Speaker 0>But the way you had a multilane functions

01:04:16.075 --> 01:04:16.715
<v Speaker 0>yeah.

01:04:18.795 --> 01:04:20.075
<v Speaker 0>Just too much

01:04:20.955 --> 01:04:22.635
<v Speaker 0>using other languages.

01:04:23.550 --> 01:04:25.710
<v Speaker 0>Okay. So now we should have ever our

01:04:25.710 --> 01:04:28.830
<v Speaker 0>task desired minus our tasks running as greater

01:04:28.830 --> 01:04:31.790
<v Speaker 0>than zero. We send a alert

01:04:32.510 --> 01:04:33.790
<v Speaker 0>to this end point.

01:04:37.005 --> 01:04:38.845
<v Speaker 0>And we don't need headers.

01:04:40.205 --> 01:04:43.005
<v Speaker 0>And we're gonna send some data and what

01:04:43.005 --> 01:04:45.405
<v Speaker 0>we want to send is we're gonna JSON

01:04:45.405 --> 01:04:46.445
<v Speaker 0>encode some stuff.

01:04:47.529 --> 01:04:49.609
<v Speaker 0>So JSON encode

01:04:49.609 --> 01:04:52.569
<v Speaker 0>b equals blah, which means we have to

01:04:52.569 --> 01:04:53.450
<v Speaker 0>import

01:04:53.529 --> 01:04:54.490
<v Speaker 0>JSON.

01:04:55.130 --> 01:04:55.530
<v Speaker 0>And

01:04:56.009 --> 01:04:57.930
<v Speaker 0>what we're going to send here

01:04:58.089 --> 01:04:59.130
<v Speaker 0>is

01:05:01.424 --> 01:05:03.184
<v Speaker 0>can I just do a dict where I

01:05:03.184 --> 01:05:04.945
<v Speaker 0>see the service name

01:05:05.825 --> 01:05:07.345
<v Speaker 0>and use our

01:05:07.345 --> 01:05:08.224
<v Speaker 0>service

01:05:08.545 --> 01:05:09.425
<v Speaker 0>name?

01:05:10.785 --> 01:05:13.025
<v Speaker 0>Let's also include desired,

01:05:14.170 --> 01:05:15.610
<v Speaker 0>which is our

01:05:15.690 --> 01:05:16.650
<v Speaker 0>tasks

01:05:17.530 --> 01:05:18.330
<v Speaker 1>desired.

01:05:19.770 --> 01:05:21.530
<v Speaker 1>Oh, what have I got wrong? Oh, yeah.

01:05:21.530 --> 01:05:22.730
<v Speaker 0>I haven't closed that one off.

01:05:32.184 --> 01:05:33.865
<v Speaker 0>I have no idea what that means.

01:05:35.305 --> 01:05:36.105
<v Speaker 1>Delete.

01:05:36.505 --> 01:05:38.184
<v Speaker 1>Oh, wait. I've got too many things. There

01:05:38.184 --> 01:05:38.505
<v Speaker 0>we go.

01:05:41.730 --> 01:05:43.490
<v Speaker 0>And we'll send actual.

01:05:44.210 --> 01:05:45.650
<v Speaker 0>So r

01:05:45.810 --> 01:05:46.770
<v Speaker 0>like that,

01:05:47.490 --> 01:05:48.930
<v Speaker 0>which is tasks

01:05:49.010 --> 01:05:50.130
<v Speaker 0>running.

01:05:51.970 --> 01:05:53.010
<v Speaker 1>Otherwise, don't do anything.

01:05:54.655 --> 01:05:56.255
<v Speaker 1>We don't need to do anything with this

01:05:56.255 --> 01:05:56.895
<v Speaker 0>data,

01:05:57.055 --> 01:05:59.135
<v Speaker 0>but assuming I get this to work, we

01:05:59.135 --> 01:06:00.494
<v Speaker 0>will try

01:06:00.655 --> 01:06:03.214
<v Speaker 0>and do the alternative approach of downsampling in

01:06:03.214 --> 01:06:05.295
<v Speaker 0>the data, writing it into

01:06:05.295 --> 01:06:07.855
<v Speaker 0>a bucket so that we have the

01:06:08.799 --> 01:06:10.880
<v Speaker 0>the deviation value as part of the values

01:06:10.880 --> 01:06:12.640
<v Speaker 0>we can fetch in the threshold check and

01:06:12.640 --> 01:06:14.559
<v Speaker 0>if that threshold check fails for too long

01:06:14.559 --> 01:06:16.000
<v Speaker 0>where the deviation

01:06:16.000 --> 01:06:17.119
<v Speaker 0>is above zero,

01:06:17.280 --> 01:06:19.520
<v Speaker 0>we'll alert using the actual built in alerting

01:06:19.520 --> 01:06:20.240
<v Speaker 0>the system.

01:06:20.480 --> 01:06:22.565
<v Speaker 0>I think, Oh, it's not. I mean, I

01:06:22.565 --> 01:06:24.565
<v Speaker 0>know I would always encourage you to

01:06:25.204 --> 01:06:28.325
<v Speaker 0>create projections and aggregates and tasks, write them

01:06:28.325 --> 01:06:31.045
<v Speaker 0>back, and then alert on those values rather

01:06:31.285 --> 01:06:33.365
<v Speaker 0>than this. This is kind of a back

01:06:33.365 --> 01:06:35.444
<v Speaker 0>and dirty. Let's just get an alert running

01:06:35.444 --> 01:06:35.765
<v Speaker 0>approach.

01:06:37.550 --> 01:06:38.590
<v Speaker 0>Okay.

01:06:38.750 --> 01:06:40.750
<v Speaker 0>I found a bull. Why have I got

01:06:40.910 --> 01:06:42.670
<v Speaker 0>oh, yeah. Because of this. Okay. I just

01:06:42.670 --> 01:06:43.710
<v Speaker 0>returned zero.

01:06:45.230 --> 01:06:45.950
<v Speaker 0>Perfect.

01:06:46.350 --> 01:06:48.830
<v Speaker 0>So this task will start running within thirty

01:06:48.830 --> 01:06:49.230
<v Speaker 0>seconds.

01:06:50.435 --> 01:06:53.555
<v Speaker 0>We do have something above zero

01:06:53.555 --> 01:06:54.275
<v Speaker 0>so

01:06:54.675 --> 01:06:56.915
<v Speaker 0>just a reminder. No, we don't. We fixed

01:06:56.915 --> 01:06:57.475
<v Speaker 0>it.

01:06:59.235 --> 01:07:01.715
<v Speaker 0>Healthy graph, there is no shade.

01:07:01.955 --> 01:07:03.875
<v Speaker 0>Let's break it once more

01:07:05.380 --> 01:07:07.700
<v Speaker 0>and we're gonna break it.

01:07:07.940 --> 01:07:10.260
<v Speaker 0>We can just add another e here

01:07:11.619 --> 01:07:12.900
<v Speaker 0>and do our stack deploy.

01:07:18.355 --> 01:07:19.315
<v Speaker 0>Awesome.

01:07:20.355 --> 01:07:22.995
<v Speaker 0>Give this five seconds. Get that spake back

01:07:22.995 --> 01:07:24.995
<v Speaker 0>up. Within a minute, we should have an

01:07:24.995 --> 01:07:27.795
<v Speaker 0>alert which should hopefully be hitting this endpoint.

01:07:27.795 --> 01:07:28.835
<v Speaker 0>Still nothing yet.

01:07:31.329 --> 01:07:33.970
<v Speaker 0>And once I see this spike here, I'll

01:07:33.970 --> 01:07:36.609
<v Speaker 0>come back and we'll attempt the downsample aggregation

01:07:36.609 --> 01:07:37.410
<v Speaker 0>approach

01:07:37.730 --> 01:07:39.810
<v Speaker 0>and then use the threshold check, and then

01:07:39.810 --> 01:07:41.170
<v Speaker 0>I'm gonna call it quits.

01:07:41.490 --> 01:07:44.530
<v Speaker 0>Okay. So we have our failure identified.

01:07:45.635 --> 01:07:48.595
<v Speaker 0>Nothing yet, but should hopefully be less than

01:07:48.595 --> 01:07:49.315
<v Speaker 0>a minute.

01:07:49.795 --> 01:07:51.635
<v Speaker 0>Let's come back to our task and I'm

01:07:51.635 --> 01:07:53.235
<v Speaker 0>gonna duplicate this.

01:07:56.035 --> 01:07:58.035
<v Speaker 0>Just disable it while I work on it.

01:07:58.035 --> 01:07:59.555
<v Speaker 0>Oh, wait. That was that one.

01:08:01.730 --> 01:08:03.170
<v Speaker 0>Surely that's a bug.

01:08:04.290 --> 01:08:05.650
<v Speaker 0>Is it deactivating

01:08:05.650 --> 01:08:06.770
<v Speaker 0>based on name?

01:08:07.170 --> 01:08:07.810
<v Speaker 0>No.

01:08:08.770 --> 01:08:09.810
<v Speaker 0>That was weird.

01:08:10.050 --> 01:08:11.089
<v Speaker 0>Okay.

01:08:11.089 --> 01:08:14.369
<v Speaker 0>So this task is aggregate

01:08:16.854 --> 01:08:19.415
<v Speaker 0>deviation of desired state.

01:08:21.415 --> 01:08:22.854
<v Speaker 0>So we don't want

01:08:23.095 --> 01:08:24.615
<v Speaker 0>to trigger less,

01:08:24.615 --> 01:08:26.295
<v Speaker 0>and we can let that be generated when

01:08:26.295 --> 01:08:28.135
<v Speaker 0>we save it and

01:08:28.215 --> 01:08:29.655
<v Speaker 0>we do not want

01:08:30.290 --> 01:08:33.090
<v Speaker 0>this anymore. Instead, we want to add a

01:08:33.090 --> 01:08:33.810
<v Speaker 0>value.

01:08:35.890 --> 01:08:37.250
<v Speaker 0>So r

01:08:37.330 --> 01:08:38.050
<v Speaker 0>with

01:08:38.610 --> 01:08:39.490
<v Speaker 0>deviation.

01:08:40.450 --> 01:08:41.810
<v Speaker 0>How do spell deviation? Yeah.

01:08:42.555 --> 01:08:43.835
<v Speaker 0>R tasks

01:08:44.395 --> 01:08:45.274
<v Speaker 0>desired

01:08:45.275 --> 01:08:46.715
<v Speaker 0>minus r

01:08:48.075 --> 01:08:48.795
<v Speaker 0>tasks

01:08:49.595 --> 01:08:50.314
<v Speaker 0>running.

01:08:51.755 --> 01:08:52.555
<v Speaker 0>Close.

01:08:53.595 --> 01:08:54.154
<v Speaker 0>And

01:08:54.635 --> 01:08:56.155
<v Speaker 0>we wanna write this data.

01:08:56.830 --> 01:08:58.270
<v Speaker 0>See if I can remember how to do

01:08:58.270 --> 01:08:59.389
<v Speaker 1>that. So

01:09:00.910 --> 01:09:02.670
<v Speaker 1>there is a two function.

01:09:06.989 --> 01:09:09.069
<v Speaker 0>That's not the Flux docs anymore.

01:09:09.630 --> 01:09:10.510
<v Speaker 0>Dot two.

01:09:12.445 --> 01:09:13.805
<v Speaker 0>Alright. Let's find it.

01:09:24.909 --> 01:09:26.829
<v Speaker 0>Where we write the data.

01:09:26.989 --> 01:09:27.550
<v Speaker 0>So

01:09:28.590 --> 01:09:30.029
<v Speaker 0>once we've mapped it,

01:09:30.429 --> 01:09:33.229
<v Speaker 0>we probably wanna do a filter

01:09:35.309 --> 01:09:36.349
<v Speaker 0>and

01:09:36.429 --> 01:09:39.710
<v Speaker 0>we want to only find our

01:09:40.564 --> 01:09:41.684
<v Speaker 0>deviation

01:09:43.045 --> 01:09:44.564
<v Speaker 0>greater than zero.

01:09:46.085 --> 01:09:47.925
<v Speaker 0>I've got a problem here.

01:09:49.364 --> 01:09:51.284
<v Speaker 1>And when we had that last time,

01:09:51.844 --> 01:09:52.245
<v Speaker 1>just

01:09:55.060 --> 01:09:56.019
<v Speaker 0>that worked.

01:09:58.260 --> 01:10:00.179
<v Speaker 0>So we've added our filter.

01:10:00.420 --> 01:10:01.780
<v Speaker 0>Is that right? Yep.

01:10:02.580 --> 01:10:04.340
<v Speaker 0>And now we wanna do a two.

01:10:05.620 --> 01:10:07.780
<v Speaker 0>We're gonna write to the same bucket

01:10:10.825 --> 01:10:12.665
<v Speaker 0>and the same organization.

01:10:14.185 --> 01:10:16.185
<v Speaker 0>10 columns gonna be the same.

01:10:17.225 --> 01:10:19.705
<v Speaker 0>No. The tags, we don't wanna ruin the

01:10:19.705 --> 01:10:20.265
<v Speaker 0>tags.

01:10:21.640 --> 01:10:22.280
<v Speaker 0>So

01:10:23.480 --> 01:10:27.000
<v Speaker 0>we're gonna match our group key. So measurement,

01:10:28.440 --> 01:10:30.920
<v Speaker 0>which I think is actually implicit,

01:10:31.320 --> 01:10:32.840
<v Speaker 0>so that may cause an error, but we'll

01:10:32.840 --> 01:10:33.480
<v Speaker 0>see in a moment.

01:10:35.205 --> 01:10:36.005
<v Speaker 0>Service

01:10:36.565 --> 01:10:37.285
<v Speaker 0>name.

01:10:42.165 --> 01:10:43.844
<v Speaker 0>Field function.

01:10:44.565 --> 01:10:45.205
<v Speaker 0>What's that?

01:10:47.460 --> 01:10:49.540
<v Speaker 0>I wonder if we wanna use experimental too.

01:10:49.540 --> 01:10:51.860
<v Speaker 0>So there's an experimental too function too.

01:10:52.420 --> 01:10:54.260
<v Speaker 0>That's a weird sentence, but I've not used

01:10:54.260 --> 01:10:56.420
<v Speaker 0>either. I wonder if it simplifies that. Yeah.

01:11:03.315 --> 01:11:04.515
<v Speaker 0>Let's just do that.

01:11:08.915 --> 01:11:10.515
<v Speaker 1>I mean, that could work,

01:11:12.200 --> 01:11:13.960
<v Speaker 1>but it just seems like too much work.

01:11:14.360 --> 01:11:15.080
<v Speaker 0>So

01:11:16.360 --> 01:11:19.320
<v Speaker 0>I think I need to import experimental.

01:11:21.560 --> 01:11:22.920
<v Speaker 0>And I think it just

01:11:23.595 --> 01:11:26.155
<v Speaker 0>magically does stuff with that data. We're gonna

01:11:26.155 --> 01:11:28.155
<v Speaker 0>think though. I'm not entirely sure.

01:11:29.114 --> 01:11:30.395
<v Speaker 0>This stuff changes a lot.

01:11:35.880 --> 01:11:36.840
<v Speaker 0>I think

01:11:37.000 --> 01:11:38.920
<v Speaker 0>that might be it. One thing I am

01:11:38.920 --> 01:11:40.199
<v Speaker 0>gonna do is

01:11:40.360 --> 01:11:43.320
<v Speaker 0>try and match my five second interval with

01:11:43.320 --> 01:11:44.679
<v Speaker 0>the raw data.

01:11:46.679 --> 01:11:48.520
<v Speaker 0>Not something you would normally no. It's not

01:11:48.520 --> 01:11:49.880
<v Speaker 0>something you would I'm not gonna do that.

01:11:55.425 --> 01:11:57.185
<v Speaker 0>I mean, I could do it, which would

01:11:57.185 --> 01:11:58.385
<v Speaker 0>give me an ability to graph it the

01:11:58.385 --> 01:11:59.665
<v Speaker 0>same way I am before, but I I

01:11:59.665 --> 01:12:01.665
<v Speaker 0>just I don't think I need that resolution.

01:12:01.665 --> 01:12:03.425
<v Speaker 0>So and I don't need to complicate myself

01:12:03.425 --> 01:12:04.545
<v Speaker 0>right now by thinking about it.

01:12:05.940 --> 01:12:08.739
<v Speaker 0>Alright. Unable to edit option. I didn't edit

01:12:08.739 --> 01:12:09.619
<v Speaker 0>the option.

01:12:14.580 --> 01:12:16.900
<v Speaker 0>I did remove the option, but that's because

01:12:16.900 --> 01:12:18.020
<v Speaker 0>I changed this.

01:12:21.955 --> 01:12:22.994
<v Speaker 0>Yeah. So

01:12:24.195 --> 01:12:26.435
<v Speaker 0>initially saved with an option and it's not

01:12:26.435 --> 01:12:27.795
<v Speaker 0>gonna let me remove it.

01:12:28.195 --> 01:12:29.875
<v Speaker 0>I guess that's nice of it. So let

01:12:29.875 --> 01:12:32.915
<v Speaker 0>me cancel, jump back in, copy this,

01:12:34.860 --> 01:12:37.020
<v Speaker 0>and we'll leave the option.

01:12:41.100 --> 01:12:42.460
<v Speaker 0>Like so.

01:12:45.420 --> 01:12:47.740
<v Speaker 0>I'm still gonna change the name, so

01:12:48.665 --> 01:12:49.785
<v Speaker 0>aggregate

01:12:51.545 --> 01:12:53.065
<v Speaker 0>deviated state.

01:12:55.385 --> 01:12:57.065
<v Speaker 0>I don't know if that'll update the option

01:12:57.065 --> 01:12:57.865
<v Speaker 0>for me.

01:13:00.105 --> 01:13:01.225
<v Speaker 1>Yeah. Good. Okay.

01:13:02.809 --> 01:13:04.409
<v Speaker 1>So let's turn that on.

01:13:06.250 --> 01:13:07.129
<v Speaker 0>There we go.

01:13:12.170 --> 01:13:15.210
<v Speaker 0>We don't have anything here. Okay. So let's

01:13:15.210 --> 01:13:17.769
<v Speaker 0>try and debug that first. So this

01:13:18.455 --> 01:13:20.135
<v Speaker 0>should have a run log.

01:13:22.775 --> 01:13:24.375
<v Speaker 0>View the task runs

01:13:24.695 --> 01:13:27.255
<v Speaker 0>and we can see something is failing,

01:13:27.415 --> 01:13:27.575
<v Speaker 0>so

01:13:31.350 --> 01:13:34.390
<v Speaker 0>a map function must return an object. Right.

01:13:34.390 --> 01:13:35.750
<v Speaker 0>Okay. Got it.

01:13:36.230 --> 01:13:39.190
<v Speaker 0>Let's edit this task. So that was

01:13:39.750 --> 01:13:42.790
<v Speaker 0>rather silly of me. Let's just return r.

01:13:45.645 --> 01:13:48.045
<v Speaker 0>Oh, the problem is the type inference knows

01:13:48.045 --> 01:13:50.125
<v Speaker 0>that this doesn't return r.

01:13:55.565 --> 01:13:56.525
<v Speaker 0>Can I just do that?

01:14:00.390 --> 01:14:01.590
<v Speaker 0>Why are you mourning?

01:14:06.870 --> 01:14:08.470
<v Speaker 0>Why are blocks so weird?

01:14:15.605 --> 01:14:16.804
<v Speaker 0>Does that work?

01:14:18.324 --> 01:14:20.165
<v Speaker 0>I really need to dig into that syntax

01:14:20.165 --> 01:14:20.725
<v Speaker 0>at some point.

01:14:22.660 --> 01:14:25.219
<v Speaker 0>Okay. It's based on operator between two expressions.

01:14:25.540 --> 01:14:27.780
<v Speaker 0>I just want to return r.

01:14:33.220 --> 01:14:33.860
<v Speaker 0>Let's be honest.

01:14:38.285 --> 01:14:40.285
<v Speaker 0>I'm not doing this a functional way, am

01:14:40.285 --> 01:14:42.364
<v Speaker 0>I? I'm actually I'm I know that I

01:14:42.364 --> 01:14:43.565
<v Speaker 0>think about it. I'm glad that it's yelling

01:14:43.565 --> 01:14:44.284
<v Speaker 0>at me.

01:14:45.565 --> 01:14:47.244
<v Speaker 0>Let's do the map

01:14:47.405 --> 01:14:49.245
<v Speaker 0>like we did for the downsampling.

01:14:50.890 --> 01:14:52.570
<v Speaker 0>Yeah. Being stupid.

01:14:52.810 --> 01:14:54.969
<v Speaker 0>Let's do our web desired

01:14:55.210 --> 01:14:57.050
<v Speaker 0>as equal to our

01:14:58.090 --> 01:14:59.770
<v Speaker 0>our value here

01:15:01.530 --> 01:15:02.409
<v Speaker 0>and then

01:15:02.650 --> 01:15:04.010
<v Speaker 0>filter

01:15:09.165 --> 01:15:09.885
<v Speaker 0>And

01:15:10.365 --> 01:15:12.685
<v Speaker 0>we want our desired.

01:15:12.685 --> 01:15:15.245
<v Speaker 0>I know I'm using different access or syntax

01:15:15.245 --> 01:15:15.565
<v Speaker 0>here.

01:15:16.300 --> 01:15:18.060
<v Speaker 0>I don't know why I just did that.

01:15:19.500 --> 01:15:20.620
<v Speaker 0>And then

01:15:21.180 --> 01:15:23.180
<v Speaker 0>for each record that fails,

01:15:25.820 --> 01:15:27.580
<v Speaker 0>we'll map over and send an alert.

01:15:30.015 --> 01:15:31.375
<v Speaker 0>And we're gonna do a post.

01:15:42.670 --> 01:15:44.590
<v Speaker 0>Even know how many of those I need.

01:15:46.429 --> 01:15:48.669
<v Speaker 0>So we got the JSON encodes

01:15:49.469 --> 01:15:50.590
<v Speaker 0>and URL

01:15:56.114 --> 01:15:56.755
<v Speaker 0>this

01:15:59.795 --> 01:16:00.755
<v Speaker 0>map

01:16:01.475 --> 01:16:02.914
<v Speaker 0>and return r.

01:16:04.915 --> 01:16:07.315
<v Speaker 0>Well, I've got everything wrong now. Alright. I

01:16:07.315 --> 01:16:08.514
<v Speaker 0>need extra one here.

01:16:09.690 --> 01:16:11.130
<v Speaker 0>I think that's me.

01:16:13.370 --> 01:16:16.250
<v Speaker 0>Oh, yes. I've got these two expressions again.

01:16:17.450 --> 01:16:18.730
<v Speaker 0>I think when you do

01:16:21.610 --> 01:16:21.770
<v Speaker 0>god.

01:16:24.425 --> 01:16:26.105
<v Speaker 0>I really need to just understand how the

01:16:26.105 --> 01:16:27.385
<v Speaker 0>blocking works, don't I?

01:16:28.505 --> 01:16:28.905
<v Speaker 0>Block.

01:16:35.160 --> 01:16:37.320
<v Speaker 0>So we can use

01:16:41.560 --> 01:16:42.440
<v Speaker 0>is.

01:16:44.920 --> 01:16:47.960
<v Speaker 0>So maybe okay. So if that means

01:16:48.905 --> 01:16:49.945
<v Speaker 0>object,

01:16:50.025 --> 01:16:50.505
<v Speaker 0>this

01:16:53.385 --> 01:16:54.585
<v Speaker 1>is block.

01:16:57.305 --> 01:16:57.864
<v Speaker 0>Wing it.

01:17:00.120 --> 01:17:00.920
<v Speaker 0>Alright.

01:17:01.800 --> 01:17:03.800
<v Speaker 0>So while we wait on that, hopefully, sending

01:17:03.800 --> 01:17:06.200
<v Speaker 0>an alert now. I'm gonna go try and

01:17:06.200 --> 01:17:08.600
<v Speaker 0>set threshold with the downsample data, so we

01:17:08.600 --> 01:17:10.760
<v Speaker 0>should start to see two different alerts coming

01:17:10.760 --> 01:17:11.320
<v Speaker 0>through,

01:17:11.720 --> 01:17:13.725
<v Speaker 0>which means that I want to now create

01:17:13.725 --> 01:17:15.885
<v Speaker 0>this threshold check, and I'm hoping I can

01:17:15.885 --> 01:17:16.525
<v Speaker 0>see

01:17:19.324 --> 01:17:20.604
<v Speaker 0>my deviation.

01:17:24.045 --> 01:17:24.364
<v Speaker 0>Good.

01:17:33.650 --> 01:17:35.889
<v Speaker 0>What do we need? Schedule

01:17:37.409 --> 01:17:38.530
<v Speaker 1>thirty seconds.

01:17:40.075 --> 01:17:41.115
<v Speaker 1>I'm

01:17:41.115 --> 01:17:42.395
<v Speaker 0>pretty sure I added

01:17:43.595 --> 01:17:45.755
<v Speaker 0>filter to the notifications.

01:17:47.115 --> 01:17:49.514
<v Speaker 0>Critical is when it is above

01:17:51.355 --> 01:17:53.435
<v Speaker 0>in fact, that's above zero. Right. Let's just

01:17:53.435 --> 01:17:54.315
<v Speaker 1>tell there aren't everything.

01:17:55.760 --> 01:17:57.200
<v Speaker 1>Obviously, we could

01:17:57.840 --> 01:18:00.080
<v Speaker 1>do this, but we wanna alert whenever a

01:18:00.080 --> 01:18:02.800
<v Speaker 0>deviated state goes goes too long.

01:18:04.480 --> 01:18:06.080
<v Speaker 0>So it's above good.

01:18:07.665 --> 01:18:09.665
<v Speaker 0>Normally I would, you know, we wouldn't run

01:18:09.665 --> 01:18:11.104
<v Speaker 1>this every thirty seconds.

01:18:12.704 --> 01:18:15.744
<v Speaker 1>Let's just try and make some noise here.

01:18:17.505 --> 01:18:19.585
<v Speaker 0>Okay. So

01:18:19.040 --> 01:18:20.960
<v Speaker 0>threshold check should be running. We have done

01:18:20.960 --> 01:18:23.600
<v Speaker 0>sample data. The alert is pending. Let's go

01:18:23.600 --> 01:18:24.880
<v Speaker 0>back to our task.

01:18:27.840 --> 01:18:30.000
<v Speaker 0>And aggregation is still working fine. This one's

01:18:30.000 --> 01:18:32.719
<v Speaker 0>failing. Is it still me? Is it something

01:18:32.719 --> 01:18:33.440
<v Speaker 0>I have done?

01:18:36.085 --> 01:18:38.645
<v Speaker 0>Cannot compile. Statement does nothing. Side effects are

01:18:38.645 --> 01:18:40.405
<v Speaker 0>not supported by the compiler.

01:18:40.405 --> 01:18:41.205
<v Speaker 0>User nothing.

01:18:46.820 --> 01:18:48.099
<v Speaker 0>What does nothing?

01:18:50.500 --> 01:18:51.699
<v Speaker 0>What is that?

01:18:55.460 --> 01:18:56.980
<v Speaker 0>I don't know why it formatting it like

01:18:56.980 --> 01:18:57.540
<v Speaker 0>that.

01:18:57.940 --> 01:19:00.100
<v Speaker 0>What does nothing? Is it the map?

01:19:04.055 --> 01:19:05.335
<v Speaker 0>Okay. Let's

01:19:06.775 --> 01:19:08.054
<v Speaker 0>our web

01:19:08.535 --> 01:19:09.895
<v Speaker 0>h t p

01:19:10.055 --> 01:19:10.855
<v Speaker 0>result.

01:19:12.935 --> 01:19:14.695
<v Speaker 0>I think this returns

01:19:15.255 --> 01:19:15.655
<v Speaker 0>something.

01:19:20.750 --> 01:19:22.270
<v Speaker 0>Oh, yeah. We need to

01:19:23.470 --> 01:19:24.909
<v Speaker 0>do that thingy.

01:19:28.110 --> 01:19:29.630
<v Speaker 0>I have no idea what I'm doing anymore.

01:19:32.785 --> 01:19:38.945
<v Speaker 0>K. So we've got 12344.

01:19:46.050 --> 01:19:48.450
<v Speaker 0>Back to the right brace, got right paren.

01:19:48.450 --> 01:19:50.290
<v Speaker 0>Am I not closing my r?

01:19:55.570 --> 01:19:56.370
<v Speaker 0>Okay.

01:19:56.770 --> 01:19:57.570
<v Speaker 0>So

01:19:57.970 --> 01:19:58.930
<v Speaker 0>12.

01:20:00.075 --> 01:20:00.875
<v Speaker 0>Boom.

01:20:01.355 --> 01:20:03.195
<v Speaker 0>Alright. Shop that side of the.

01:20:04.235 --> 01:20:05.515
<v Speaker 0>I don't know why I'm being rude to

01:20:05.515 --> 01:20:06.474
<v Speaker 1>my compiler.

01:20:07.355 --> 01:20:08.155
<v Speaker 1>Sorry.

01:20:10.315 --> 01:20:11.035
<v Speaker 0>Just anxious.

01:20:17.450 --> 01:20:19.530
<v Speaker 0>Why is my okay. So we're gonna come

01:20:19.530 --> 01:20:21.050
<v Speaker 0>back to this one in thirty seconds, so

01:20:21.050 --> 01:20:22.730
<v Speaker 0>I'm gonna go over here. I wanna know

01:20:22.730 --> 01:20:25.450
<v Speaker 0>why my threshold check

01:20:28.125 --> 01:20:29.005
<v Speaker 0>deviation

01:20:29.405 --> 01:20:30.605
<v Speaker 0>threshold

01:20:30.925 --> 01:20:31.885
<v Speaker 0>check,

01:20:35.165 --> 01:20:36.685
<v Speaker 0>has an alert to it.

01:20:38.070 --> 01:20:40.389
<v Speaker 0>So when changes oh, because it's when it

01:20:40.389 --> 01:20:42.389
<v Speaker 0>changes from okay to critical.

01:20:42.790 --> 01:20:44.550
<v Speaker 0>So I need to make that healthy.

01:20:48.150 --> 01:20:48.789
<v Speaker 0>So

01:20:49.989 --> 01:20:50.710
<v Speaker 0>make it healthy.

01:20:58.035 --> 01:20:59.555
<v Speaker 0>We'll come back to our dashboard.

01:21:06.690 --> 01:21:08.610
<v Speaker 0>Almost the exact same amount of time.

01:21:09.730 --> 01:21:11.489
<v Speaker 0>Healthy now. Okay. So

01:21:11.890 --> 01:21:13.410
<v Speaker 0>I want that to be healthy for thirty

01:21:13.410 --> 01:21:16.210
<v Speaker 0>seconds so that we get one threshold check

01:21:16.210 --> 01:21:17.730
<v Speaker 0>for passes. I mean, I could just have

01:21:17.730 --> 01:21:19.315
<v Speaker 0>updated the threshold check and said it doesn't

01:21:19.315 --> 01:21:21.635
<v Speaker 0>really matter. But let's try and do this

01:21:21.635 --> 01:21:22.435
<v Speaker 0>properly.

01:21:24.435 --> 01:21:26.355
<v Speaker 0>We're gonna make this fail again

01:21:29.235 --> 01:21:29.795
<v Speaker 0>momentarily.

01:21:44.065 --> 01:21:46.224
<v Speaker 0>I think that's been thirty seconds.

01:21:46.224 --> 01:21:47.264
<v Speaker 0>Boom, boom, boom.

01:21:53.105 --> 01:21:54.945
<v Speaker 0>We'll wait for this to fail.

01:21:55.264 --> 01:21:57.185
<v Speaker 0>Our box should still be sitting empty.

01:22:01.230 --> 01:22:03.390
<v Speaker 0>Come on computer. Do my bidding.

01:22:18.284 --> 01:22:19.004
<v Speaker 0>Yay.

01:22:20.764 --> 01:22:21.164
<v Speaker 1>Right.

01:22:24.640 --> 01:22:25.360
<v Speaker 0>So

01:22:27.360 --> 01:22:28.800
<v Speaker 0>while we're waiting,

01:22:30.160 --> 01:22:33.120
<v Speaker 0>let's view that deviation straight up rather than

01:22:33.120 --> 01:22:34.880
<v Speaker 0>calculating it so we can clean up this

01:22:34.880 --> 01:22:35.600
<v Speaker 0>dashboard now.

01:22:36.375 --> 01:22:38.454
<v Speaker 0>What we actually want to graph

01:22:44.135 --> 01:22:46.214
<v Speaker 0>is add on another filter.

01:22:46.295 --> 01:22:47.815
<v Speaker 0>Now it doesn't matter if you do these

01:22:47.815 --> 01:22:49.735
<v Speaker 0>all in one filter or multiple filters when

01:22:49.735 --> 01:22:50.695
<v Speaker 0>they're right next to each other.

01:22:51.800 --> 01:22:54.599
<v Speaker 0>Creative planner does understand what to do.

01:22:55.880 --> 01:22:57.320
<v Speaker 0>We want

01:23:00.120 --> 01:23:01.720
<v Speaker 0>what did I call it? Deviation.

01:23:04.715 --> 01:23:05.355
<v Speaker 0>There we go.

01:23:20.489 --> 01:23:21.370
<v Speaker 0>Aggregation,

01:23:21.370 --> 01:23:22.810
<v Speaker 0>we know it's working. We've just seen that

01:23:22.810 --> 01:23:23.769
<v Speaker 0>in the graph.

01:23:25.850 --> 01:23:27.849
<v Speaker 0>This should be doing a post.

01:23:28.570 --> 01:23:29.210
<v Speaker 0>Not yet.

01:23:30.395 --> 01:23:32.074
<v Speaker 0>When did the last run?

01:23:40.075 --> 01:23:41.114
<v Speaker 0>Right now,

01:23:45.690 --> 01:23:47.290
<v Speaker 1>Awesome.

01:23:56.665 --> 01:23:58.185
<v Speaker 0>I think it's alerted

01:23:58.265 --> 01:23:59.465
<v Speaker 0>quite a few times.

01:24:00.585 --> 01:24:02.185
<v Speaker 0>Oh, I've been alerted for the last five

01:24:02.185 --> 01:24:04.265
<v Speaker 0>minutes. Did I just not refresh the page?

01:24:05.625 --> 01:24:08.345
<v Speaker 0>I feel silly. Anyway, we now have our

01:24:08.345 --> 01:24:08.745
<v Speaker 0>alerting.

01:24:11.650 --> 01:24:14.290
<v Speaker 0>Which one is this? Actual desired and service

01:24:14.290 --> 01:24:16.690
<v Speaker 0>name. Actual desired service name.

01:24:17.650 --> 01:24:20.370
<v Speaker 0>So these are all of the alerts that

01:24:20.370 --> 01:24:22.449
<v Speaker 0>are being sent by the

01:24:22.930 --> 01:24:24.930
<v Speaker 0>task and not

01:24:25.845 --> 01:24:27.685
<v Speaker 1>the threshold

01:24:28.245 --> 01:24:29.125
<v Speaker 1>check.

01:24:33.285 --> 01:24:34.885
<v Speaker 1>So let's just

01:24:35.685 --> 01:24:37.045
<v Speaker 1>look at our

01:24:38.005 --> 01:24:40.485
<v Speaker 1>task

01:24:39.810 --> 01:24:41.970
<v Speaker 1>and that does the JSON encode with those

01:24:41.970 --> 01:24:43.730
<v Speaker 1>fields. So that's what we're seeing.

01:24:44.690 --> 01:24:46.130
<v Speaker 0>And our alert,

01:24:49.090 --> 01:24:51.170
<v Speaker 0>we should be getting a message that looks

01:24:51.170 --> 01:24:51.810
<v Speaker 0>like this.

01:24:54.205 --> 01:24:56.205
<v Speaker 0>It should be running every thirty seconds. It

01:24:56.205 --> 01:24:58.125
<v Speaker 0>has docker equals swarm and the value is

01:24:58.125 --> 01:24:59.244
<v Speaker 0>above zero.

01:25:01.885 --> 01:25:03.405
<v Speaker 0>What have I got wrong?

01:25:29.610 --> 01:25:31.769
<v Speaker 0>Rawkode equals swarm.

01:25:32.489 --> 01:25:34.249
<v Speaker 0>Alright. Let's just go Annie.

01:25:39.370 --> 01:25:41.050
<v Speaker 0>I just wanna see one come through.

01:25:50.645 --> 01:25:53.284
<v Speaker 0>So that should be triggering. Let's disable

01:25:55.204 --> 01:25:55.764
<v Speaker 0>this.

01:25:57.450 --> 01:25:59.770
<v Speaker 1>I want that. We still want this.

01:26:00.010 --> 01:26:01.369
<v Speaker 1>We still want this.

01:26:02.090 --> 01:26:02.889
<v Speaker 1>Docker

01:26:02.890 --> 01:26:03.770
<v Speaker 1>swarm

01:26:04.010 --> 01:26:04.810
<v Speaker 1>check.

01:26:06.810 --> 01:26:09.850
<v Speaker 0>Find query, we can see that it's failing.

01:26:13.625 --> 01:26:15.144
<v Speaker 0>Figure to check.

01:26:15.545 --> 01:26:17.545
<v Speaker 0>Value is above zero. Critical.

01:26:23.080 --> 01:26:24.119
<v Speaker 0>That's good.

01:26:26.600 --> 01:26:27.960
<v Speaker 0>What was that? Ah.

01:26:33.560 --> 01:26:34.760
<v Speaker 0>I'm breaking everything.

01:26:38.775 --> 01:26:40.934
<v Speaker 0>Why are you not sending threshold check?

01:26:48.790 --> 01:26:51.349
<v Speaker 0>Let's view the history. So we can see

01:26:53.750 --> 01:26:56.150
<v Speaker 0>well, we do definitely set the level to

01:26:56.150 --> 01:26:56.630
<v Speaker 0>critical.

01:26:59.605 --> 01:27:00.405
<v Speaker 0>And

01:27:00.645 --> 01:27:03.045
<v Speaker 0>let's view the history here.

01:27:05.365 --> 01:27:07.045
<v Speaker 0>There are no notifications.

01:27:18.500 --> 01:27:20.740
<v Speaker 0>Status goes from any to critical.

01:27:23.635 --> 01:27:25.635
<v Speaker 0>I wonder if I just didn't have it

01:27:26.994 --> 01:27:29.315
<v Speaker 0>okay enough. I guess critical to critical just

01:27:29.315 --> 01:27:30.755
<v Speaker 0>might be a rule

01:27:34.114 --> 01:27:35.235
<v Speaker 0>that doesn't trigger.

01:27:42.100 --> 01:27:43.300
<v Speaker 0>Double check.

01:27:49.075 --> 01:27:50.195
<v Speaker 0>Gonna cheat.

01:27:53.395 --> 01:27:55.955
<v Speaker 0>Let's wait for that to just pass.

01:28:00.355 --> 01:28:02.755
<v Speaker 1>I wanna see this to see

01:28:03.750 --> 01:28:04.550
<v Speaker 1>all good.

01:28:09.830 --> 01:28:11.670
<v Speaker 0>Alright. Okay. So now we've got a okay.

01:28:15.685 --> 01:28:16.965
<v Speaker 1>Back end,

01:28:17.845 --> 01:28:19.685
<v Speaker 1>and we'll see

01:28:23.925 --> 01:28:24.565
<v Speaker 0>zero.

01:28:27.540 --> 01:28:29.619
<v Speaker 1>And we will view the history,

01:28:30.659 --> 01:28:32.420
<v Speaker 1>and we will wait for it to return

01:28:32.420 --> 01:28:33.459
<v Speaker 0>to critical,

01:28:35.380 --> 01:28:37.619
<v Speaker 0>and we will get our notification.

01:28:53.730 --> 01:28:55.970
<v Speaker 0>Mental note, five second

01:28:55.970 --> 01:28:57.090
<v Speaker 0>run time.

01:28:59.890 --> 01:29:02.050
<v Speaker 0>Give me here my notification,

01:29:02.050 --> 01:29:02.210
<v Speaker 0>please.

01:29:04.635 --> 01:29:05.915
<v Speaker 1>Alright. Good.

01:29:06.635 --> 01:29:07.915
<v Speaker 1>And over here,

01:29:11.355 --> 01:29:12.795
<v Speaker 0>we're still getting nothing.

01:29:18.970 --> 01:29:21.050
<v Speaker 0>Well, that's also not working.

01:29:24.170 --> 01:29:25.850
<v Speaker 1>I don't know why it said no notification

01:29:25.850 --> 01:29:26.890
<v Speaker 0>here.

01:29:27.050 --> 01:29:29.290
<v Speaker 0>I mean, we quite clearly have sent notifications.

01:29:31.255 --> 01:29:33.494
<v Speaker 0>Last updated two minutes ago.

01:29:35.255 --> 01:29:37.014
<v Speaker 0>Why are you not last updated

01:29:37.735 --> 01:29:38.055
<v Speaker 0>now?

01:29:43.430 --> 01:29:44.950
<v Speaker 0>Just do it.

01:29:46.950 --> 01:29:48.950
<v Speaker 0>You know what? I'll fix it later. I

01:29:48.950 --> 01:29:50.550
<v Speaker 0>don't know what the problem there is.

01:29:52.790 --> 01:29:54.390
<v Speaker 0>And I've been streaming for a fair amount

01:29:54.390 --> 01:29:55.750
<v Speaker 0>of time, so I'm gonna call it quits

01:29:55.750 --> 01:29:56.150
<v Speaker 0>there.

01:29:56.925 --> 01:29:58.925
<v Speaker 0>What did we do? We

01:29:59.085 --> 01:30:01.564
<v Speaker 0>used Docker Swarm to deploy InfluxDB two.

01:30:01.965 --> 01:30:03.564
<v Speaker 0>We deployed Telegraph.

01:30:04.284 --> 01:30:05.324
<v Speaker 0>All of these

01:30:06.525 --> 01:30:08.045
<v Speaker 0>snippets of code, I know there's not much

01:30:08.045 --> 01:30:10.525
<v Speaker 0>in this particular example, but that's composed file

01:30:10.525 --> 01:30:11.965
<v Speaker 0>under telegraph.com

01:30:11.940 --> 01:30:13.860
<v Speaker 0>And I'll add a read me with the

01:30:13.860 --> 01:30:15.300
<v Speaker 0>two dashboards that I

01:30:15.699 --> 01:30:17.860
<v Speaker 0>applied from the community templates.

01:30:18.500 --> 01:30:20.500
<v Speaker 0>And I'll also export this

01:30:21.300 --> 01:30:23.460
<v Speaker 0>to YAML as well. These can all be

01:30:23.460 --> 01:30:26.974
<v Speaker 0>found on gitlab.com/rawcode/

01:30:26.974 --> 01:30:29.695
<v Speaker 0>influx d b -examples.

01:30:30.735 --> 01:30:33.454
<v Speaker 0>And there will be within the next ten

01:30:33.454 --> 01:30:35.934
<v Speaker 0>minutes, a Docker Swarm folder here.

01:30:36.494 --> 01:30:38.014
<v Speaker 0>Now I still think there's a lot of

01:30:38.014 --> 01:30:39.614
<v Speaker 0>work we can do with the Docker Swarm

01:30:39.614 --> 01:30:40.014
<v Speaker 0>dashboard.

01:30:40.590 --> 01:30:42.830
<v Speaker 0>I definitely think there are metrics in Telegraph

01:30:42.830 --> 01:30:44.429
<v Speaker 0>that we can try and find with regards

01:30:44.429 --> 01:30:46.909
<v Speaker 0>to image size, disk usage stuff.

01:30:47.630 --> 01:30:49.070
<v Speaker 0>Just the stuff that's not covered by the

01:30:49.070 --> 01:30:51.229
<v Speaker 0>Linux template, a lot of that is all

01:30:51.550 --> 01:30:52.749
<v Speaker 0>ready there,

01:30:53.150 --> 01:30:55.070
<v Speaker 0>particularly on this dashboard.

01:30:56.915 --> 01:30:57.235
<v Speaker 0>You know

01:30:59.315 --> 01:31:00.835
<v Speaker 0>oh, bucket. No.

01:31:00.995 --> 01:31:02.435
<v Speaker 1>Where did all my data go?

01:31:06.835 --> 01:31:08.595
<v Speaker 0>And FluxDB, you're letting me down today.

01:31:11.460 --> 01:31:13.060
<v Speaker 0>Yeah. So, you know, we do have this

01:31:13.060 --> 01:31:14.500
<v Speaker 0>decision on that there, but I would like

01:31:14.500 --> 01:31:15.940
<v Speaker 0>to see that as a breakdown

01:31:16.580 --> 01:31:19.620
<v Speaker 0>by images, particularly around it's putting down on

01:31:19.620 --> 01:31:21.780
<v Speaker 0>a tags, being able to identify, you know,

01:31:21.780 --> 01:31:23.700
<v Speaker 0>if you deploy the same image frequently.

01:31:24.245 --> 01:31:26.085
<v Speaker 0>Really useful to know how many different variations

01:31:26.085 --> 01:31:28.405
<v Speaker 0>of the tags are all across spread across

01:31:28.405 --> 01:31:30.005
<v Speaker 0>all of your swarm nodes and how much

01:31:30.005 --> 01:31:31.845
<v Speaker 0>disk space is being consumed, how quickly you

01:31:31.845 --> 01:31:33.445
<v Speaker 0>can clean that up. I think there's a

01:31:33.445 --> 01:31:35.045
<v Speaker 0>whole little bit of kind of just those

01:31:35.285 --> 01:31:36.885
<v Speaker 0>nice things that we can add, but I

01:31:36.885 --> 01:31:38.325
<v Speaker 0>will tackle that another time.

01:31:39.700 --> 01:31:41.860
<v Speaker 0>Thank you for joining me today. If you

01:31:41.860 --> 01:31:43.700
<v Speaker 0>have any questions, leave them in the comments.

01:31:43.700 --> 01:31:46.340
<v Speaker 0>Feel free to tweet me with ideas for

01:31:46.340 --> 01:31:47.780
<v Speaker 0>new things you want me to run through

01:31:47.780 --> 01:31:49.620
<v Speaker 0>with InfluxDB two, and I would be more

01:31:49.620 --> 01:31:51.940
<v Speaker 0>than happy to do that. Thank you very

01:31:51.940 --> 01:31:52.180
<v Speaker 0>much.
