WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: b1d611f4-ed39-49a5-a4fe-4893c1deb7f3
Created: 2025-04-29T16:45:16.228Z
Duration: 539.3132
Channels: 1

00:00:06.160 --> 00:00:06.880
<v Speaker 0>Hi there.

00:00:07.440 --> 00:00:09.840
<v Speaker 0>Welcome to the complete guide to InfluxDB

00:00:09.840 --> 00:00:10.559
<v Speaker 0>two.

00:00:11.200 --> 00:00:13.679
<v Speaker 0>This is the first tutorial

00:00:13.585 --> 00:00:15.025
<v Speaker 0>we are gonna take a look at how

00:00:15.025 --> 00:00:17.345
<v Speaker 0>you install InfluxDB two.

00:00:19.345 --> 00:00:21.425
<v Speaker 0>In the course materials, you will find a

00:00:21.425 --> 00:00:25.265
<v Speaker 0>README. Md inside of the to dash installing

00:00:25.265 --> 00:00:26.465
<v Speaker 0>InfluxDB

00:00:26.465 --> 00:00:27.185
<v Speaker 0>directory.

00:00:28.240 --> 00:00:30.480
<v Speaker 0>Here, you will find the instructions on how

00:00:30.480 --> 00:00:33.680
<v Speaker 0>to install InfluxDB two on macOS,

00:00:34.480 --> 00:00:37.200
<v Speaker 0>on Debian and Ubuntu via the provided

00:00:37.360 --> 00:00:39.120
<v Speaker 0>Debian repository,

00:00:39.760 --> 00:00:40.879
<v Speaker 0>on Red Hat,

00:00:41.200 --> 00:00:42.080
<v Speaker 0>running with Docker,

00:00:43.135 --> 00:00:46.655
<v Speaker 0>and installing on Kubernetes via Helm.

00:00:47.295 --> 00:00:49.214
<v Speaker 0>We're going to run through each of these

00:00:49.214 --> 00:00:50.574
<v Speaker 0>installation mechanisms

00:00:50.574 --> 00:00:51.454
<v Speaker 0>right now.

00:00:52.254 --> 00:00:54.094
<v Speaker 0>First up, macOS.

00:00:54.335 --> 00:00:56.574
<v Speaker 0>We can jump over to our terminal, can

00:00:56.574 --> 00:00:58.175
<v Speaker 0>run brew install

00:00:57.780 --> 00:00:59.300
<v Speaker 0>InfluxDB

00:00:59.379 --> 00:01:00.739
<v Speaker 0>just like so.

00:01:02.420 --> 00:01:04.019
<v Speaker 0>In a few seconds to a minute, this

00:01:04.019 --> 00:01:06.500
<v Speaker 0>will download the InfluxDB two binaries and install

00:01:06.500 --> 00:01:08.900
<v Speaker 0>them and make them available on macOS.

00:01:11.975 --> 00:01:13.975
<v Speaker 0>Now we don't want to start InfluxDB as

00:01:13.975 --> 00:01:16.215
<v Speaker 0>a service for today because you more than

00:01:16.215 --> 00:01:18.375
<v Speaker 0>likely are not installing InfluxDB

00:01:18.375 --> 00:01:20.935
<v Speaker 0>to production on your Mac machine. This will

00:01:20.935 --> 00:01:23.335
<v Speaker 0>be purely for development experience.

00:01:24.350 --> 00:01:26.750
<v Speaker 0>So we can copy this command here to

00:01:26.750 --> 00:01:27.950
<v Speaker 0>run InfluxDB

00:01:27.950 --> 00:01:29.229
<v Speaker 0>in the foreground.

00:01:29.549 --> 00:01:32.030
<v Speaker 0>This will run the InfluxDB database on port

00:01:32.030 --> 00:01:34.110
<v Speaker 0>eight zero eight six, which you can then

00:01:34.110 --> 00:01:35.390
<v Speaker 0>hit through your browser.

00:01:39.755 --> 00:01:40.715
<v Speaker 0>There we go.

00:01:47.275 --> 00:01:49.355
<v Speaker 0>And now we are presented with the welcome

00:01:49.355 --> 00:01:50.715
<v Speaker 0>screen to InfluxDB

00:01:50.715 --> 00:01:51.115
<v Speaker 0>two.

00:01:52.300 --> 00:01:53.100
<v Speaker 0>Okay.

00:01:53.180 --> 00:01:56.700
<v Speaker 0>Method two, installing InfluxDB two to Debian and

00:01:56.700 --> 00:01:57.900
<v Speaker 0>Debian derivative

00:01:58.860 --> 00:02:00.060
<v Speaker 0>operating systems.

00:02:01.820 --> 00:02:03.340
<v Speaker 0>The first thing we want to do is

00:02:03.340 --> 00:02:06.380
<v Speaker 0>import the trusted GPG key, which is available

00:02:06.380 --> 00:02:08.005
<v Speaker 0>from InfluxDB

00:02:08.005 --> 00:02:11.365
<v Speaker 0>repository's website. We can do this via wget,

00:02:11.605 --> 00:02:13.765
<v Speaker 0>and then we have to de armor,

00:02:13.845 --> 00:02:15.205
<v Speaker 0>which means to take

00:02:15.445 --> 00:02:16.965
<v Speaker 0>the text representation

00:02:16.965 --> 00:02:18.405
<v Speaker 0>of the key and convert it to the

00:02:18.405 --> 00:02:19.925
<v Speaker 0>binary representation

00:02:20.485 --> 00:02:23.300
<v Speaker 0>of the key, which apt requires.

00:02:23.939 --> 00:02:26.500
<v Speaker 0>We can copy this command and paste it

00:02:26.500 --> 00:02:27.380
<v Speaker 0>like so.

00:02:27.859 --> 00:02:29.140
<v Speaker 0>And just so you can see what I

00:02:29.140 --> 00:02:29.620
<v Speaker 0>mean,

00:02:30.900 --> 00:02:32.900
<v Speaker 0>if we run w get on this key,

00:02:32.900 --> 00:02:35.300
<v Speaker 0>you will see the text based representation.

00:02:35.700 --> 00:02:37.060
<v Speaker 0>And if we run

00:02:37.905 --> 00:02:39.585
<v Speaker 0>the fill command again,

00:02:41.025 --> 00:02:41.905
<v Speaker 0>if

00:02:43.585 --> 00:02:45.345
<v Speaker 0>we run the fill command again without the

00:02:45.345 --> 00:02:47.425
<v Speaker 0>redirect to a fail, you will see the

00:02:47.425 --> 00:02:48.945
<v Speaker 0>binary representation

00:02:49.105 --> 00:02:49.985
<v Speaker 0>of the key.

00:02:50.465 --> 00:02:52.545
<v Speaker 0>And this is just what AMP prefers and

00:02:52.545 --> 00:02:52.945
<v Speaker 0>requires.

00:02:54.360 --> 00:02:57.239
<v Speaker 0>Next, we use the LSB release command

00:02:57.239 --> 00:03:00.360
<v Speaker 0>in order to understand which Debian or Debian

00:03:00.360 --> 00:03:02.120
<v Speaker 0>derivative like Ubuntu

00:03:02.120 --> 00:03:03.960
<v Speaker 0>version we have access to.

00:03:04.439 --> 00:03:06.760
<v Speaker 0>We can actually just echo

00:03:07.000 --> 00:03:09.400
<v Speaker 0>both of these values to see

00:03:11.135 --> 00:03:13.615
<v Speaker 0>that this is in fact Ubuntu focal.

00:03:14.975 --> 00:03:18.175
<v Speaker 0>Lastly, we can echo the required lane to

00:03:18.175 --> 00:03:21.295
<v Speaker 0>our sources fail to tell Debian or Ubuntu

00:03:21.295 --> 00:03:22.975
<v Speaker 0>how to access this repository.

00:03:23.730 --> 00:03:25.810
<v Speaker 0>If we cat this fail, we will see

00:03:25.810 --> 00:03:27.090
<v Speaker 0>that lane interpolated

00:03:27.090 --> 00:03:28.690
<v Speaker 0>with the two

00:03:28.850 --> 00:03:30.210
<v Speaker 0>environment variables

00:03:30.210 --> 00:03:31.570
<v Speaker 0>that we just echoed.

00:03:32.370 --> 00:03:34.130
<v Speaker 0>We can see that we tell Debian or

00:03:34.130 --> 00:03:34.850
<v Speaker 0>apt,

00:03:34.930 --> 00:03:36.850
<v Speaker 0>this is the key that this repository is

00:03:36.850 --> 00:03:38.815
<v Speaker 0>signed with. We are running on a bin

00:03:38.815 --> 00:03:40.575
<v Speaker 0>to focal and we want this DB impact,

00:03:40.575 --> 00:03:41.695
<v Speaker 0>this table package.

00:03:41.935 --> 00:03:43.775
<v Speaker 0>From here, we can run an app update

00:03:43.775 --> 00:03:46.175
<v Speaker 0>and install InfluxDB

00:03:46.175 --> 00:03:46.735
<v Speaker 0>two.

00:03:49.375 --> 00:03:51.455
<v Speaker 0>Now we can run InfluxDB

00:03:52.040 --> 00:03:54.200
<v Speaker 0>to start our InfluxDB database.

00:03:54.440 --> 00:03:56.440
<v Speaker 0>We give this just a few moments again.

00:03:56.520 --> 00:03:58.360
<v Speaker 0>We will see the log messages, and we

00:03:58.360 --> 00:04:00.920
<v Speaker 0>should be able to hit this on localhost

00:04:00.920 --> 00:04:02.200
<v Speaker 0>8086.

00:04:12.265 --> 00:04:15.145
<v Speaker 0>And there we are. Now method three, installing

00:04:15.145 --> 00:04:16.265
<v Speaker 0>InfluxDB

00:04:16.585 --> 00:04:19.385
<v Speaker 0>to Red Hat and Red Hat derivative operating

00:04:19.385 --> 00:04:19.785
<v Speaker 0>system.

00:04:21.720 --> 00:04:23.400
<v Speaker 0>Much like we did for Debian,

00:04:23.400 --> 00:04:24.680
<v Speaker 0>we need to be able to add a

00:04:24.680 --> 00:04:25.560
<v Speaker 0>repository

00:04:25.560 --> 00:04:26.600
<v Speaker 0>to the system.

00:04:27.720 --> 00:04:30.280
<v Speaker 0>With Red Hat, that involves adding

00:04:30.440 --> 00:04:33.480
<v Speaker 0>something to the etcetera slash yum dot repos

00:04:33.480 --> 00:04:34.680
<v Speaker 0>dot d directory.

00:04:35.764 --> 00:04:37.125
<v Speaker 0>Here, we tell it where to find the

00:04:37.125 --> 00:04:38.005
<v Speaker 0>repository,

00:04:38.405 --> 00:04:40.405
<v Speaker 0>where to find the key, and then we

00:04:40.405 --> 00:04:42.485
<v Speaker 0>use DNF to install the package.

00:04:42.965 --> 00:04:44.565
<v Speaker 0>We can copy all of this,

00:04:44.965 --> 00:04:46.885
<v Speaker 0>drop it into our Red Hat system.

00:04:47.685 --> 00:04:50.165
<v Speaker 0>We'll be prompted to import the GPG key,

00:04:51.780 --> 00:04:54.820
<v Speaker 0>and the installation should work nice and simple.

00:05:02.820 --> 00:05:03.380
<v Speaker 0>And done.

00:05:04.185 --> 00:05:06.185
<v Speaker 0>The same as we did for others, we

00:05:06.185 --> 00:05:07.385
<v Speaker 0>can run InfluxDB

00:05:07.385 --> 00:05:09.465
<v Speaker 0>and just a few moments logs will start

00:05:09.465 --> 00:05:11.544
<v Speaker 0>to output and we'll be able to hit

00:05:11.544 --> 00:05:12.745
<v Speaker 0>port 8086

00:05:12.745 --> 00:05:15.544
<v Speaker 0>on localhost to browse to InfluxDB.

00:05:25.650 --> 00:05:26.290
<v Speaker 0>Perfect.

00:05:26.530 --> 00:05:29.330
<v Speaker 0>Method four, run an InfluxDB

00:05:29.330 --> 00:05:30.050
<v Speaker 0>with Docker.

00:05:32.065 --> 00:05:34.385
<v Speaker 0>I'm using Docker today, but the keys commands

00:05:34.385 --> 00:05:36.465
<v Speaker 0>will work for most other runtimes.

00:05:37.185 --> 00:05:38.705
<v Speaker 0>The first thing we're going to do

00:05:39.105 --> 00:05:41.265
<v Speaker 0>is create a volume so that the data

00:05:41.265 --> 00:05:43.425
<v Speaker 0>that we write to InfluxDB will be persisted

00:05:43.425 --> 00:05:45.345
<v Speaker 0>during recreates,

00:05:45.345 --> 00:05:46.305
<v Speaker 0>restarts,

00:05:46.305 --> 00:05:46.705
<v Speaker 0>etcetera.

00:05:47.800 --> 00:05:49.960
<v Speaker 0>This is not a production setup, and production

00:05:49.960 --> 00:05:52.280
<v Speaker 0>container based setups will be covered in a

00:05:52.280 --> 00:05:53.240
<v Speaker 0>future video.

00:05:54.120 --> 00:05:57.400
<v Speaker 0>Now let's create our Docker volume named InfluxDB.

00:05:59.080 --> 00:06:01.640
<v Speaker 0>Next, we need to run the container image.

00:06:03.135 --> 00:06:05.375
<v Speaker 0>We do this exposing port eight zero eight

00:06:05.375 --> 00:06:06.015
<v Speaker 0>six

00:06:06.255 --> 00:06:09.135
<v Speaker 0>and mounting an or volume to the Varlib

00:06:09.135 --> 00:06:10.815
<v Speaker 0>InfluxDB location,

00:06:11.215 --> 00:06:13.375
<v Speaker 0>and we specify the version of InfluxDB two

00:06:13.375 --> 00:06:15.535
<v Speaker 0>that we want to run. The latest is

00:06:15.535 --> 00:06:16.975
<v Speaker 0>two zero seven.

00:06:18.640 --> 00:06:20.560
<v Speaker 0>This will just pull the image, start the

00:06:20.560 --> 00:06:21.360
<v Speaker 0>process,

00:06:21.600 --> 00:06:23.600
<v Speaker 0>and with our port mapping of eight zero

00:06:23.600 --> 00:06:25.120
<v Speaker 0>eight six, we should be able to browse

00:06:25.120 --> 00:06:27.040
<v Speaker 0>to this container from our browser.

00:06:40.985 --> 00:06:41.785
<v Speaker 0>Perfect.

00:06:43.465 --> 00:06:45.785
<v Speaker 0>Installing on Kubernetes with Helm.

00:06:46.460 --> 00:06:47.820
<v Speaker 0>The first thing you have to do is

00:06:47.820 --> 00:06:51.180
<v Speaker 0>add the Helm repository to your local system.

00:06:51.180 --> 00:06:52.860
<v Speaker 0>We can do this with the Helm repo

00:06:52.860 --> 00:06:53.900
<v Speaker 0>add command.

00:06:56.540 --> 00:07:01.500
<v Speaker 0>Next, we use Helm upgrade dash dash install

00:06:59.775 --> 00:07:02.335
<v Speaker 0>followed by a release name. Here, I'm using

00:07:02.335 --> 00:07:03.695
<v Speaker 0>InfluxDB two.

00:07:04.175 --> 00:07:06.175
<v Speaker 0>Then the chart that we wish to install,

00:07:06.175 --> 00:07:08.495
<v Speaker 0>InfluxDataInfluxDB

00:07:08.495 --> 00:07:09.055
<v Speaker 0>two.

00:07:09.375 --> 00:07:12.014
<v Speaker 0>We are not providing any CLI

00:07:12.014 --> 00:07:15.390
<v Speaker 0>or value YAML based overrides or configuration to

00:07:15.390 --> 00:07:18.030
<v Speaker 0>tweak the deployment of this Helm chart. We

00:07:18.030 --> 00:07:20.270
<v Speaker 0>will cover such in production deployments in a

00:07:20.270 --> 00:07:21.390
<v Speaker 0>subsequent video.

00:07:22.990 --> 00:07:24.830
<v Speaker 0>We hit return to use all the default

00:07:24.830 --> 00:07:25.230
<v Speaker 0>values,

00:07:25.965 --> 00:07:28.205
<v Speaker 0>and Helm will install InfluxDB2

00:07:28.205 --> 00:07:29.405
<v Speaker 0>to our cluster.

00:07:33.405 --> 00:07:35.565
<v Speaker 0>We can use this little bit of information

00:07:35.565 --> 00:07:39.485
<v Speaker 0>at the end to get the admin password

00:07:38.850 --> 00:07:40.450
<v Speaker 0>for this deployment.

00:07:40.450 --> 00:07:42.370
<v Speaker 0>This is randomly generated

00:07:42.530 --> 00:07:45.330
<v Speaker 0>via the Helm chart when you first deploy.

00:07:48.610 --> 00:07:49.970
<v Speaker 0>The next thing we need to do is

00:07:49.970 --> 00:07:52.290
<v Speaker 0>be able to port forward to our cluster

00:07:52.290 --> 00:07:53.730
<v Speaker 0>to browse to this locally.

00:08:13.509 --> 00:08:16.710
<v Speaker 0>We use kubectl port forward mapping eight zero

00:08:16.710 --> 00:08:18.630
<v Speaker 0>eight six and the container to eight zero

00:08:18.630 --> 00:08:20.790
<v Speaker 0>eight six on my local machine.

00:08:21.430 --> 00:08:23.190
<v Speaker 0>I will copy the password

00:08:23.270 --> 00:08:24.150
<v Speaker 0>up over here.

00:08:32.024 --> 00:08:32.825
<v Speaker 0>Admin.

00:08:35.225 --> 00:08:35.945
<v Speaker 0>Perfect.

00:08:37.304 --> 00:08:39.385
<v Speaker 0>And that is installing InfluxDB

00:08:39.385 --> 00:08:41.820
<v Speaker 0>two. We took a look at Mac OS

00:08:41.820 --> 00:08:42.940
<v Speaker 0>with Homebrew.

00:08:44.140 --> 00:08:47.420
<v Speaker 0>Debian and Ubuntu using the official repositories.

00:08:48.380 --> 00:08:50.380
<v Speaker 0>Using the official repositories for Red Hat and

00:08:50.380 --> 00:08:51.580
<v Speaker 0>Red Hat derivatives,

00:08:51.820 --> 00:08:53.420
<v Speaker 0>Docker, and Kubernetes.
