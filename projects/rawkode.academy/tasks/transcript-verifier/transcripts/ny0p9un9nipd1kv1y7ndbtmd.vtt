WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 9db9571a-4298-458f-aa7b-5315efc8bb05
Created: 2025-04-29T23:15:30.724Z
Duration: 219.99237
Channels: 1

00:00:00.160 --> 00:00:02.719
<v Speaker 0>Hey, everyone. Rawkode here. I

00:00:03.280 --> 00:00:05.600
<v Speaker 0>just wanna take a minute to show off

00:00:05.600 --> 00:00:07.440
<v Speaker 0>a couple of the latest pull requests that

00:00:07.440 --> 00:00:09.759
<v Speaker 0>have been merged into Kubernetes master,

00:00:10.320 --> 00:00:11.840
<v Speaker 0>to pull requests that have been a long

00:00:11.840 --> 00:00:14.719
<v Speaker 0>time coming and solve some really

00:00:13.894 --> 00:00:15.815
<v Speaker 0>common problems that you'll have when working with

00:00:15.815 --> 00:00:17.494
<v Speaker 0>kubectl on the command line.

00:00:18.055 --> 00:00:19.494
<v Speaker 0>So first of all, what I'm gonna do

00:00:19.494 --> 00:00:21.414
<v Speaker 0>is take a look at this really simple

00:00:21.414 --> 00:00:22.695
<v Speaker 0>deployment I have here.

00:00:23.335 --> 00:00:26.134
<v Speaker 0>It's deploying five replicas running Apache.

00:00:26.855 --> 00:00:28.775
<v Speaker 0>We're gonna apply that to our cluster.

00:00:31.400 --> 00:00:32.759
<v Speaker 0>We do a watch and just wait for

00:00:32.759 --> 00:00:34.040
<v Speaker 0>those to become running.

00:00:39.000 --> 00:00:40.040
<v Speaker 0>Almost there.

00:00:40.520 --> 00:00:42.520
<v Speaker 0>A very common thing that you're gonna have

00:00:42.520 --> 00:00:44.965
<v Speaker 0>to do is get the logs from one

00:00:44.965 --> 00:00:46.005
<v Speaker 0>of your containers.

00:00:46.405 --> 00:00:48.645
<v Speaker 0>And today, we do that with dash logs

00:00:49.685 --> 00:00:52.165
<v Speaker 0>and you guess which one you think might

00:00:52.165 --> 00:00:54.005
<v Speaker 0>have the log that you're actually looking for.

00:00:56.005 --> 00:00:57.525
<v Speaker 0>And I'm assuming

00:00:57.400 --> 00:00:59.480
<v Speaker 0>at some point you may have tried

00:01:00.040 --> 00:01:01.079
<v Speaker 0>to do this.

00:01:01.640 --> 00:01:04.040
<v Speaker 0>So using the label selector to try and

00:01:04.040 --> 00:01:06.280
<v Speaker 0>fetch the logs from multiple pods where the

00:01:06.280 --> 00:01:08.200
<v Speaker 0>app equals h t t p d and

00:01:08.200 --> 00:01:09.640
<v Speaker 0>follow them along at the same time.

00:01:10.975 --> 00:01:12.895
<v Speaker 0>And that doesn't work. We can't run both

00:01:12.895 --> 00:01:15.215
<v Speaker 0>of these together and that was until a

00:01:15.215 --> 00:01:16.175
<v Speaker 0>couple of days ago.

00:01:17.055 --> 00:01:19.455
<v Speaker 0>So if we use kubectl master, which I've

00:01:19.455 --> 00:01:20.655
<v Speaker 0>built from source,

00:01:21.695 --> 00:01:22.895
<v Speaker 0>run logs,

00:01:23.375 --> 00:01:25.775
<v Speaker 0>use the label selector

00:01:25.020 --> 00:01:25.979
<v Speaker 0>and follow,

00:01:26.619 --> 00:01:29.179
<v Speaker 0>I can now follow the live logs from

00:01:29.179 --> 00:01:31.179
<v Speaker 0>all of the pods in that deployment,

00:01:31.420 --> 00:01:33.020
<v Speaker 0>and that is awesome.

00:01:33.340 --> 00:01:34.860
<v Speaker 0>Great work to the people that worked on

00:01:34.860 --> 00:01:35.340
<v Speaker 0>that.

00:01:35.820 --> 00:01:37.340
<v Speaker 0>The other thing that I wanna show off

00:01:37.340 --> 00:01:39.485
<v Speaker 0>now is customize,

00:01:39.485 --> 00:01:41.725
<v Speaker 0>which is now baked into kubectl as well.

00:01:43.244 --> 00:01:44.924
<v Speaker 0>So if I take a look at the

00:01:44.924 --> 00:01:46.685
<v Speaker 0>tree here, you can see I have a

00:01:46.685 --> 00:01:48.525
<v Speaker 0>base and a prod directory.

00:01:49.325 --> 00:01:51.805
<v Speaker 0>Instead of base, we've got a deployment dot

00:01:51.805 --> 00:01:54.850
<v Speaker 0>yaml and a customization dot yaml. Inside prod,

00:01:55.250 --> 00:01:57.409
<v Speaker 0>we have just a customization dot YAML.

00:01:57.729 --> 00:01:59.490
<v Speaker 0>If we take a quick look at base

00:01:59.490 --> 00:02:00.689
<v Speaker 0>and our deployment,

00:02:02.049 --> 00:02:03.570
<v Speaker 0>it's deploying NGINX,

00:02:03.810 --> 00:02:07.250
<v Speaker 0>nothing fancy there, there's no namespace specified in

00:02:06.555 --> 00:02:07.595
<v Speaker 0>the metadata

00:02:08.475 --> 00:02:10.074
<v Speaker 0>and if we take a look at our

00:02:10.074 --> 00:02:12.715
<v Speaker 0>customization dot yaml you can see that we

00:02:12.715 --> 00:02:15.035
<v Speaker 0>are targeting that deployment dot yaml only this

00:02:15.035 --> 00:02:16.875
<v Speaker 0>time we're gonna add a couple of couple

00:02:16.875 --> 00:02:19.595
<v Speaker 0>of labels and we're gonna enforce a namespace.

00:02:21.630 --> 00:02:23.790
<v Speaker 0>If I do cube control master

00:02:25.150 --> 00:02:26.110
<v Speaker 0>apply

00:02:27.630 --> 00:02:30.750
<v Speaker 0>dash k and specify the base directory, the

00:02:30.750 --> 00:02:32.270
<v Speaker 0>dash k means that we want to deploy

00:02:32.270 --> 00:02:34.830
<v Speaker 0>a customization directory or a customized directory.

00:02:37.135 --> 00:02:39.855
<v Speaker 0>Now, the namespace doesn't exist, so right, we

00:02:39.855 --> 00:02:41.135
<v Speaker 0>can quickly create that.

00:02:42.815 --> 00:02:44.575
<v Speaker 0>And now, we can apply again and we

00:02:44.575 --> 00:02:45.775
<v Speaker 0>get our deployment.

00:02:46.975 --> 00:02:48.255
<v Speaker 0>I'll clear the deployments,

00:02:50.190 --> 00:02:51.310
<v Speaker 0>Kubernetes,

00:02:53.070 --> 00:02:54.750
<v Speaker 0>we can see my app there. So although

00:02:54.750 --> 00:02:57.310
<v Speaker 0>the namespace wasn't specified and the manifest itself

00:02:57.310 --> 00:02:59.550
<v Speaker 0>is applied through customize

00:02:59.790 --> 00:03:02.110
<v Speaker 0>and if we do some content negotiation on

00:03:02.110 --> 00:03:02.910
<v Speaker 0>the desk,

00:03:03.630 --> 00:03:04.830
<v Speaker 0>we will also see

00:03:05.355 --> 00:03:07.115
<v Speaker 0>our labels have been applied to.

00:03:08.635 --> 00:03:10.875
<v Speaker 0>One more example of this is now I

00:03:10.875 --> 00:03:13.355
<v Speaker 0>can run apply dash k on prod,

00:03:14.394 --> 00:03:16.075
<v Speaker 0>which is gonna fail because of the namespace

00:03:16.075 --> 00:03:16.474
<v Speaker 0>again.

00:03:19.460 --> 00:03:21.700
<v Speaker 0>Run that again and now my deployment using

00:03:21.700 --> 00:03:23.300
<v Speaker 0>the exact same manifest

00:03:24.980 --> 00:03:26.740
<v Speaker 0>is in the production namespace.

00:03:27.700 --> 00:03:29.460
<v Speaker 0>So that's it for this episode. Thank you

00:03:29.460 --> 00:03:30.740
<v Speaker 0>very much for tuning in. I hope you

00:03:30.740 --> 00:03:32.927
<v Speaker 0>enjoy these new features. Thank you everyone that's

00:03:32.927 --> 00:03:34.847
<v Speaker 0>built them, merged them and contributed in some

00:03:34.847 --> 00:03:36.687
<v Speaker 0>way. These are awesome and I can't wait

00:03:36.687 --> 00:03:38.767
<v Speaker 0>to use these at all my future scripts.

00:03:38.847 --> 00:03:39.167
<v Speaker 0>Thanks.
