WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: b2c6369c-65bd-420c-ad2e-f4f7dc0ba5c1
Created: 2025-04-29T13:37:43.564Z
Duration: 3930.9707
Channels: 1

00:00:00.160 --> 00:00:02.320
<v Speaker 0>If you would all be so kind, and

00:00:02.320 --> 00:00:04.160
<v Speaker 0>we'll start with you, Eli, and we'll just

00:00:04.160 --> 00:00:06.160
<v Speaker 0>kinda work around in clockwise order. If you

00:00:06.160 --> 00:00:07.919
<v Speaker 0>could tell me your name, who you work

00:00:07.919 --> 00:00:09.519
<v Speaker 0>for, and anything else that you wish to

00:00:09.519 --> 00:00:11.759
<v Speaker 0>share with the kind people listening to this

00:00:11.759 --> 00:00:12.160
<v Speaker 0>podcast.

00:00:13.355 --> 00:00:15.915
<v Speaker 1>Hi. Yes. I'm Eli. My pronouns are they

00:00:15.915 --> 00:00:17.755
<v Speaker 1>and them, and I'm a developer advocate at

00:00:17.755 --> 00:00:18.635
<v Speaker 1>Scaleway,

00:00:18.715 --> 00:00:20.955
<v Speaker 1>which is a small European cloud provider. We've

00:00:20.955 --> 00:00:22.715
<v Speaker 1>got data centers all over Europe,

00:00:23.035 --> 00:00:24.875
<v Speaker 1>all your all your dev tooling, all that

00:00:24.875 --> 00:00:25.275
<v Speaker 1>good stuff.

00:00:26.900 --> 00:00:29.300
<v Speaker 1>And before that, I was developer advocate at

00:00:29.300 --> 00:00:32.020
<v Speaker 1>a small tooling company, developer tooling company.

00:00:32.340 --> 00:00:34.500
<v Speaker 1>And then before that, I've done bunch of

00:00:34.500 --> 00:00:36.020
<v Speaker 1>stuff, data engineering,

00:00:36.180 --> 00:00:38.740
<v Speaker 1>started out writing c straight out of university.

00:00:38.740 --> 00:00:41.215
<v Speaker 1>So spent some some time in in the

00:00:41.215 --> 00:00:44.815
<v Speaker 1>trenches of sort of real real programming.

00:00:46.975 --> 00:00:50.015
<v Speaker 1>Yeah. I like knitting and Tolkien and hanging

00:00:50.015 --> 00:00:51.934
<v Speaker 1>out with my cats and generally

00:00:52.290 --> 00:00:54.530
<v Speaker 1>being paid to be a professional nerd.

00:00:54.930 --> 00:00:56.289
<v Speaker 1>So that's that's me.

00:00:56.850 --> 00:00:59.090
<v Speaker 2>Hi, everyone. My name is Abdel.

00:00:59.170 --> 00:01:00.930
<v Speaker 2>That's my nickname. Actually, if you look me

00:01:00.930 --> 00:01:02.690
<v Speaker 2>up on LinkedIn, you will find probably my

00:01:02.690 --> 00:01:04.450
<v Speaker 2>long Arabic name, which a lot of people

00:01:04.450 --> 00:01:05.970
<v Speaker 2>have difficulties with, so I just go by

00:01:05.970 --> 00:01:07.250
<v Speaker 2>Abdel. It's easier for everyone.

00:01:08.505 --> 00:01:11.545
<v Speaker 2>I am a cloud developer advocate at Google.

00:01:11.545 --> 00:01:13.064
<v Speaker 2>I've been at Google for almost ten years

00:01:13.064 --> 00:01:14.665
<v Speaker 2>now. So I'm a cloud developer advocate focused

00:01:14.665 --> 00:01:15.705
<v Speaker 2>on Kubernetes

00:01:15.705 --> 00:01:18.825
<v Speaker 2>and service mesh and pretty much anything containers.

00:01:19.064 --> 00:01:21.705
<v Speaker 2>I cohost the Kubernetes podcast. Maybe some people

00:01:21.705 --> 00:01:23.720
<v Speaker 2>here are are listeners. If you have been

00:01:23.720 --> 00:01:25.159
<v Speaker 2>listening since October, I am one of the

00:01:25.159 --> 00:01:27.320
<v Speaker 2>annoying voices because we are two hosts of

00:01:27.320 --> 00:01:28.040
<v Speaker 2>it, actually.

00:01:28.360 --> 00:01:30.920
<v Speaker 2>The other host is my colleague, Kathleen Fields,

00:01:30.920 --> 00:01:33.000
<v Speaker 2>who lives in Seattle. So, yeah, I do

00:01:33.000 --> 00:01:34.680
<v Speaker 2>pretty much everything around containers

00:01:34.920 --> 00:01:35.880
<v Speaker 2>and Kubernetes.

00:01:36.704 --> 00:01:39.424
<v Speaker 2>My upbringing is kind of weird because I

00:01:39.424 --> 00:01:41.905
<v Speaker 2>did software engineering as a master's degree, but

00:01:41.905 --> 00:01:43.424
<v Speaker 2>I never really worked as software engineer. I

00:01:43.424 --> 00:01:45.825
<v Speaker 2>worked in data centers, which is kind of

00:01:45.825 --> 00:01:47.505
<v Speaker 2>a place where not that many people actually

00:01:47.505 --> 00:01:48.145
<v Speaker 2>work, I guess.

00:01:49.810 --> 00:01:51.330
<v Speaker 2>And my first job actually was in data

00:01:51.330 --> 00:01:52.770
<v Speaker 2>center back home in Morocco, and then I

00:01:52.770 --> 00:01:54.690
<v Speaker 2>moved to Google to join data center in

00:01:54.690 --> 00:01:55.330
<v Speaker 2>Belgium.

00:01:55.490 --> 00:01:57.410
<v Speaker 2>And then as I like to say, I've

00:01:57.410 --> 00:01:59.250
<v Speaker 2>been moving up the stack in terms of

00:01:59.250 --> 00:02:01.490
<v Speaker 2>structural layers. So all the way from hardcore

00:02:01.490 --> 00:02:04.685
<v Speaker 2>servers to virtual machines to containers to whatever

00:02:04.685 --> 00:02:06.845
<v Speaker 2>AI is gonna bring in the next ten

00:02:06.845 --> 00:02:07.805
<v Speaker 2>years. So

00:02:08.444 --> 00:02:10.685
<v Speaker 2>so, yeah, that's me. Awesome. Thank you. And

00:02:10.685 --> 00:02:14.045
<v Speaker 0>Neil? I'm Neil. I'm CEO and cofounder of

00:02:14.045 --> 00:02:15.005
<v Speaker 3>Fortainer.

00:02:15.165 --> 00:02:17.165
<v Speaker 3>I like to describe myself as an engineer

00:02:17.165 --> 00:02:20.420
<v Speaker 3>because to think otherwise would horrify me. I

00:02:20.420 --> 00:02:23.860
<v Speaker 3>have been twenty five years building,

00:02:23.940 --> 00:02:24.740
<v Speaker 3>breaking,

00:02:24.740 --> 00:02:25.860
<v Speaker 3>and fixing things.

00:02:26.580 --> 00:02:28.260
<v Speaker 3>VMware engineer,

00:02:28.580 --> 00:02:29.780
<v Speaker 3>IBM guy.

00:02:30.980 --> 00:02:33.125
<v Speaker 3>I dabbled a little bit with development. I

00:02:33.125 --> 00:02:35.364
<v Speaker 3>I am embarrassed to say it's Visual Basic,

00:02:35.364 --> 00:02:36.644
<v Speaker 3>though. So I don't know if it's if

00:02:36.644 --> 00:02:38.085
<v Speaker 3>that's actually development or not.

00:02:38.885 --> 00:02:40.644
<v Speaker 3>But started out with basic, so that that

00:02:40.644 --> 00:02:42.165
<v Speaker 3>that also shows my age.

00:02:43.284 --> 00:02:45.770
<v Speaker 3>And I like to make things easy. I

00:02:45.770 --> 00:02:46.890
<v Speaker 3>hate complexity.

00:02:46.890 --> 00:02:48.890
<v Speaker 3>I think complexity is the root of all

00:02:48.890 --> 00:02:51.050
<v Speaker 3>evil, and I like to make things easier

00:02:51.050 --> 00:02:51.850
<v Speaker 3>for people.

00:02:52.330 --> 00:02:55.610
<v Speaker 3>That's just my natural born hobby. Actual hobby

00:02:55.610 --> 00:02:58.170
<v Speaker 3>is is fishing and hiking for those that

00:02:58.170 --> 00:03:00.250
<v Speaker 3>know me. So I love being outdoors. Alright.

00:03:00.575 --> 00:03:02.415
<v Speaker 0>Thank you very much. So this is the

00:03:02.415 --> 00:03:04.495
<v Speaker 0>first episode of the Cloud Native Compass, and

00:03:04.495 --> 00:03:06.255
<v Speaker 0>we're gonna keep today's topics

00:03:06.334 --> 00:03:08.575
<v Speaker 0>broad as you're all aware. We're gonna kind

00:03:08.575 --> 00:03:10.974
<v Speaker 0>of take a look at a cross section

00:03:10.974 --> 00:03:12.815
<v Speaker 0>of the Cloud Native landscape and that being

00:03:12.815 --> 00:03:14.894
<v Speaker 0>clouds and containers and Kubernetes.

00:03:15.570 --> 00:03:16.690
<v Speaker 0>But I prepared,

00:03:16.770 --> 00:03:18.370
<v Speaker 0>three or four questions at each of those

00:03:18.370 --> 00:03:20.930
<v Speaker 0>categories. But, of course, Adrian, Anurag, and anyone

00:03:20.930 --> 00:03:22.530
<v Speaker 0>else who wants to join, if you have

00:03:22.530 --> 00:03:24.370
<v Speaker 0>any questions, please feel free to pop them

00:03:24.370 --> 00:03:26.290
<v Speaker 0>into the chat. And if you really want

00:03:26.290 --> 00:03:27.810
<v Speaker 0>to, feel free to raise your hand, and

00:03:27.810 --> 00:03:29.650
<v Speaker 0>we will promote you and invite you on

00:03:29.650 --> 00:03:30.850
<v Speaker 0>to ask your question live.

00:03:31.935 --> 00:03:34.415
<v Speaker 0>So we're gonna start with the first question,

00:03:34.975 --> 00:03:37.135
<v Speaker 0>which I know everyone's gonna love because it's

00:03:37.135 --> 00:03:38.575
<v Speaker 0>a topic that a lot of people find

00:03:38.575 --> 00:03:39.455
<v Speaker 0>frustrating

00:03:39.455 --> 00:03:41.615
<v Speaker 0>but important, and that is the cost of

00:03:41.615 --> 00:03:42.815
<v Speaker 0>cloud adoption.

00:03:43.535 --> 00:03:43.855
<v Speaker 0>So

00:03:44.490 --> 00:03:46.490
<v Speaker 0>based on my own experience of going to

00:03:46.490 --> 00:03:48.410
<v Speaker 0>events over the last kind of twelve months,

00:03:48.410 --> 00:03:49.290
<v Speaker 0>maybe broader,

00:03:49.610 --> 00:03:52.570
<v Speaker 0>I see that the the cost of their

00:03:52.570 --> 00:03:53.930
<v Speaker 0>cloud instances

00:03:53.930 --> 00:03:56.250
<v Speaker 0>or their hard their software services that they're

00:03:56.250 --> 00:03:58.215
<v Speaker 0>using on these cloud providers seems to be

00:03:58.215 --> 00:04:00.775
<v Speaker 0>growing and growing and becoming more and more

00:04:00.775 --> 00:04:01.575
<v Speaker 0>of a

00:04:02.855 --> 00:04:05.735
<v Speaker 0>challenge, especially in the macroeconomic climate right now

00:04:05.735 --> 00:04:07.575
<v Speaker 0>where costs are a big problem.

00:04:08.215 --> 00:04:10.295
<v Speaker 0>So I'm curious if this is something that

00:04:10.295 --> 00:04:12.750
<v Speaker 0>you're seeing with your own experience, your own

00:04:12.750 --> 00:04:14.670
<v Speaker 0>customers, your own partners, and if you have

00:04:14.670 --> 00:04:17.550
<v Speaker 0>any advice or best practices to help people

00:04:17.550 --> 00:04:20.269
<v Speaker 0>navigate this tricky situation. I can have a

00:04:20.269 --> 00:04:22.990
<v Speaker 3>comment. We have a lot of infrastructure in

00:04:22.990 --> 00:04:25.950
<v Speaker 3>the cloud. It's actually our entire QA environment.

00:04:25.950 --> 00:04:27.595
<v Speaker 3>We obviously have to spin up

00:04:27.995 --> 00:04:31.195
<v Speaker 3>Docker standalone environments, Docker swarm environments, no man

00:04:31.195 --> 00:04:34.715
<v Speaker 3>environments, Kubernetes clusters of multiple different versions. So

00:04:34.715 --> 00:04:36.875
<v Speaker 3>we we we support three versions back. And

00:04:36.875 --> 00:04:38.794
<v Speaker 3>so every single time we release a new

00:04:38.794 --> 00:04:41.035
<v Speaker 3>version of Plotainer, we've gotta spin up environments

00:04:41.035 --> 00:04:43.490
<v Speaker 3>and test something against it. So we've got

00:04:43.490 --> 00:04:46.050
<v Speaker 3>we've got environments that come and go frequently

00:04:46.050 --> 00:04:47.490
<v Speaker 3>throughout the day. So we we might spin

00:04:47.490 --> 00:04:49.090
<v Speaker 3>up a cluster as live for for an

00:04:49.090 --> 00:04:51.250
<v Speaker 3>hour while while some QA testing is, and

00:04:51.250 --> 00:04:53.170
<v Speaker 3>then it's pulled down again. And we do

00:04:53.170 --> 00:04:53.970
<v Speaker 3>this across

00:04:54.290 --> 00:04:56.555
<v Speaker 3>almost every cloud provider you can possibly imagine.

00:04:56.555 --> 00:04:58.715
<v Speaker 3>We currently support six cloud providers that we

00:04:58.715 --> 00:05:01.035
<v Speaker 3>test in QA again. So we've got we've

00:05:01.035 --> 00:05:02.395
<v Speaker 3>got instances everywhere.

00:05:03.035 --> 00:05:04.875
<v Speaker 3>That gives me a pretty good insight into

00:05:04.875 --> 00:05:07.354
<v Speaker 3>how much money each provider costs are relatively

00:05:07.354 --> 00:05:09.115
<v Speaker 3>the same thing, you know, because it's it's

00:05:09.115 --> 00:05:11.539
<v Speaker 3>always the same, environment that's set up across

00:05:11.539 --> 00:05:12.340
<v Speaker 3>the providers.

00:05:12.979 --> 00:05:15.379
<v Speaker 3>And it's eye watering how much money we

00:05:15.379 --> 00:05:17.220
<v Speaker 3>spend. And one of the things that I've

00:05:17.220 --> 00:05:18.979
<v Speaker 3>kind of figured out is if you have

00:05:18.979 --> 00:05:20.740
<v Speaker 3>a relatively consistent

00:05:21.139 --> 00:05:21.699
<v Speaker 3>workload,

00:05:22.115 --> 00:05:24.675
<v Speaker 3>like the CPU and RAM allocation is consistent

00:05:24.675 --> 00:05:27.315
<v Speaker 3>and you can right size your environments,

00:05:27.475 --> 00:05:29.555
<v Speaker 3>it's probably pretty good in the cloud. If

00:05:29.555 --> 00:05:32.275
<v Speaker 3>you've got environments that are very, very bursty,

00:05:32.915 --> 00:05:35.475
<v Speaker 3>and you would be able to benefit from

00:05:36.180 --> 00:05:38.100
<v Speaker 3>from oversubscribing

00:05:38.180 --> 00:05:41.460
<v Speaker 3>physical VMware hosts or Proximox hosts if you

00:05:41.460 --> 00:05:43.060
<v Speaker 3>wanna do things a bit cheaper. If you

00:05:43.060 --> 00:05:44.580
<v Speaker 3>can benefit from oversubscribing

00:05:44.580 --> 00:05:46.580
<v Speaker 3>and making sure that you can time slice,

00:05:46.740 --> 00:05:48.260
<v Speaker 3>it's it's probably

00:05:48.260 --> 00:05:51.004
<v Speaker 3>substantially cheaper. We're actually gonna be moving a

00:05:51.004 --> 00:05:52.285
<v Speaker 3>lot of our workloads

00:05:52.525 --> 00:05:54.844
<v Speaker 3>back from the cloud into a cloud bare

00:05:54.844 --> 00:05:57.324
<v Speaker 3>metal as a service provider running virtualization,

00:05:58.044 --> 00:05:59.965
<v Speaker 3>and we think it's it's gonna save us

00:05:59.965 --> 00:06:01.805
<v Speaker 3>quite a bit of money in that in

00:06:01.805 --> 00:06:05.060
<v Speaker 3>that landscape. So, you know, it definitely,

00:06:05.540 --> 00:06:07.860
<v Speaker 3>the cost differential between the top three and

00:06:07.860 --> 00:06:10.500
<v Speaker 3>everyone else, I think, is still large. There's

00:06:10.500 --> 00:06:11.860
<v Speaker 3>there's a large gap. You you pay a

00:06:11.860 --> 00:06:13.860
<v Speaker 3>premium for the top three versus everyone else.

00:06:14.500 --> 00:06:17.025
<v Speaker 3>Yet I think the capability

00:06:17.185 --> 00:06:19.585
<v Speaker 3>gap is narrowed. You know, previously, if you

00:06:19.585 --> 00:06:21.345
<v Speaker 3>if you if you wanted a really reliable

00:06:21.345 --> 00:06:22.625
<v Speaker 3>service, you went to one of the top

00:06:22.625 --> 00:06:24.545
<v Speaker 3>three. And if you wanted something a bit

00:06:24.545 --> 00:06:26.385
<v Speaker 3>more niche and more cost effective, you went

00:06:26.385 --> 00:06:27.585
<v Speaker 3>to went to anyone else.

00:06:28.320 --> 00:06:30.800
<v Speaker 3>I think that's definitely narrowed out a lot

00:06:30.800 --> 00:06:33.520
<v Speaker 3>now. You get some very, very reliable services

00:06:33.520 --> 00:06:36.720
<v Speaker 3>from DigitalOcean, LeanOut, Civo, you name them. You

00:06:36.720 --> 00:06:39.360
<v Speaker 3>get some very, very reliable services super cost

00:06:39.360 --> 00:06:41.840
<v Speaker 3>effectively now. So that's my my my views

00:06:41.840 --> 00:06:42.160
<v Speaker 3>on it.

00:06:42.824 --> 00:06:45.384
<v Speaker 0>Anyone else like to add anything there? My

00:06:45.384 --> 00:06:47.065
<v Speaker 1>my flippant answer was gonna be if you're

00:06:47.065 --> 00:06:48.345
<v Speaker 1>on Amazon, then you can always hire the

00:06:48.345 --> 00:06:50.745
<v Speaker 1>duckbill group. Get Corey Quinn in to come

00:06:50.745 --> 00:06:52.985
<v Speaker 1>and jot down your bill. Right? It does

00:06:52.985 --> 00:06:55.065
<v Speaker 1>make sense to me, though, that making

00:06:55.065 --> 00:06:57.550
<v Speaker 1>sure that you are buying exactly what you

00:06:57.550 --> 00:07:01.230
<v Speaker 1>need is is sort of is an answer.

00:07:01.230 --> 00:07:03.470
<v Speaker 1>Might even be the best answer. Like, that

00:07:03.470 --> 00:07:05.950
<v Speaker 1>that feels right. I I think early bit

00:07:05.950 --> 00:07:07.950
<v Speaker 2>me to it, but I I was about

00:07:07.950 --> 00:07:09.790
<v Speaker 2>to say there are people who built businesses

00:07:09.790 --> 00:07:11.805
<v Speaker 2>on top of this idea of cost optimization,

00:07:11.805 --> 00:07:14.605
<v Speaker 2>and is probably the best example of that.

00:07:14.605 --> 00:07:17.005
<v Speaker 2>Right? They help people optimize costs. And I

00:07:17.005 --> 00:07:17.485
<v Speaker 2>think

00:07:17.805 --> 00:07:20.765
<v Speaker 2>there are few factors that that determine,

00:07:21.005 --> 00:07:22.445
<v Speaker 2>like, how much you're gonna spend in the

00:07:22.445 --> 00:07:25.005
<v Speaker 2>cloud. And I'm I'm I'm I am in

00:07:25.005 --> 00:07:26.365
<v Speaker 2>my line of work seeing more and more

00:07:26.365 --> 00:07:29.440
<v Speaker 2>people kind of, like, caring about the cost.

00:07:29.440 --> 00:07:31.200
<v Speaker 2>There is if you have been to KubeCon

00:07:31.200 --> 00:07:34.400
<v Speaker 2>in Valencia last year, there is, an entire

00:07:34.880 --> 00:07:38.800
<v Speaker 2>trend around FinOps that have been starting around,

00:07:38.800 --> 00:07:40.400
<v Speaker 2>and, know, there are a bunch of booths

00:07:40.400 --> 00:07:42.880
<v Speaker 2>of companies doing basically financial optimization for companies.

00:07:44.455 --> 00:07:46.055
<v Speaker 2>So there are a few factors.

00:07:46.695 --> 00:07:48.695
<v Speaker 2>One factor is is and this is something

00:07:48.695 --> 00:07:50.215
<v Speaker 2>I've seen I've seen in my in my

00:07:50.215 --> 00:07:52.775
<v Speaker 2>experience is that that people just turn things

00:07:52.775 --> 00:07:54.535
<v Speaker 2>on and forget them. Right? So as they

00:07:54.535 --> 00:07:56.215
<v Speaker 2>go around to a cloud console, they turn

00:07:56.215 --> 00:07:57.575
<v Speaker 2>a feature on, they never look at it.

00:07:58.500 --> 00:08:00.500
<v Speaker 2>There is also what I call hidden costs.

00:08:00.500 --> 00:08:02.819
<v Speaker 2>Sometimes you would turn a feature on. I

00:08:02.819 --> 00:08:05.139
<v Speaker 2>I don't know. Azure virtual machines. But there

00:08:05.139 --> 00:08:06.580
<v Speaker 2>is an underlying login

00:08:06.740 --> 00:08:08.259
<v Speaker 2>that you are charged for, but you don't

00:08:08.259 --> 00:08:09.379
<v Speaker 2>see it. You have to go dig into

00:08:09.379 --> 00:08:12.245
<v Speaker 2>the documentation to understand how those logs are

00:08:12.245 --> 00:08:12.884
<v Speaker 2>built.

00:08:13.685 --> 00:08:15.525
<v Speaker 2>I have had this before with Google Cloud,

00:08:15.525 --> 00:08:17.764
<v Speaker 2>specifically customers coming to us, and they go,

00:08:17.764 --> 00:08:18.645
<v Speaker 2>well, our

00:08:19.365 --> 00:08:22.164
<v Speaker 2>login bill is much higher than everything else

00:08:22.164 --> 00:08:24.085
<v Speaker 2>we are spending money on. Right? And that's

00:08:24.085 --> 00:08:25.925
<v Speaker 2>because they're just writing logs, and logs cost

00:08:25.925 --> 00:08:26.164
<v Speaker 2>money.

00:08:27.120 --> 00:08:29.360
<v Speaker 2>And you can you can basically, anything that

00:08:29.360 --> 00:08:31.040
<v Speaker 2>is a hidden feature that gets turned on

00:08:31.040 --> 00:08:33.120
<v Speaker 2>automatically without you knowing,

00:08:33.360 --> 00:08:34.880
<v Speaker 2>that could be a problem.

00:08:36.000 --> 00:08:38.799
<v Speaker 2>As Neil said, like, the the the the

00:08:38.799 --> 00:08:39.919
<v Speaker 2>margins between

00:08:40.214 --> 00:08:42.454
<v Speaker 2>a row compute across the three premium cloud

00:08:42.454 --> 00:08:45.175
<v Speaker 2>providers is getting very narrow, and the the

00:08:45.175 --> 00:08:47.095
<v Speaker 2>other nonpremium cloud providers, if you want to

00:08:47.095 --> 00:08:48.774
<v Speaker 2>call them so, are getting also very close,

00:08:48.774 --> 00:08:50.375
<v Speaker 2>like DigitalOcean or VH.

00:08:50.935 --> 00:08:52.615
<v Speaker 2>They are getting they're they're starting to beat

00:08:52.615 --> 00:08:54.295
<v Speaker 2>AWS and Google Cloud on pricing. Right?

00:08:55.510 --> 00:08:57.830
<v Speaker 2>And so what what what I'm noticing on

00:08:57.830 --> 00:08:59.190
<v Speaker 2>my end is lot of what a lot

00:08:59.190 --> 00:09:01.910
<v Speaker 2>of cloud providers are doing, they are moving

00:09:01.910 --> 00:09:05.110
<v Speaker 2>toward kinda more added value services. Alright. Let's

00:09:05.190 --> 00:09:07.030
<v Speaker 2>instead of just selling you raw compute, we're

00:09:07.030 --> 00:09:08.550
<v Speaker 2>gonna give you, like, containers of service

00:09:09.105 --> 00:09:10.625
<v Speaker 2>so you don't have to worry about all

00:09:10.625 --> 00:09:11.585
<v Speaker 2>the underlying

00:09:11.745 --> 00:09:13.425
<v Speaker 2>complexity of the infrastructure.

00:09:13.825 --> 00:09:15.265
<v Speaker 2>There is one comment I want to to

00:09:15.265 --> 00:09:16.865
<v Speaker 2>to add, and I'll just stop here.

00:09:17.425 --> 00:09:19.265
<v Speaker 2>I think when we talk about costs, a

00:09:19.265 --> 00:09:21.185
<v Speaker 2>lot of times people like to compare apples

00:09:21.185 --> 00:09:23.025
<v Speaker 2>to apples where you say how much CPU

00:09:23.025 --> 00:09:25.000
<v Speaker 2>memory cost me on prem versus how much

00:09:25.000 --> 00:09:26.440
<v Speaker 2>it cost me in a in a cloud

00:09:26.440 --> 00:09:28.600
<v Speaker 2>provider, and they tend to forget the cost

00:09:28.600 --> 00:09:31.000
<v Speaker 2>of engineering. Right? When you are paying Google

00:09:31.000 --> 00:09:32.680
<v Speaker 2>Cloud to run your virtual machines, you're not

00:09:32.680 --> 00:09:34.440
<v Speaker 2>only paying for that virtual machine. You're paying

00:09:34.440 --> 00:09:36.040
<v Speaker 2>for all the engineering work that goes behind

00:09:36.040 --> 00:09:37.319
<v Speaker 2>it that makes the service reliable.

00:09:37.755 --> 00:09:39.435
<v Speaker 2>And of that engineering work, you would have

00:09:39.435 --> 00:09:40.635
<v Speaker 2>to do it yourself. It would if you

00:09:40.635 --> 00:09:43.035
<v Speaker 2>would hold the VM yourself. Right? So

00:09:43.515 --> 00:09:46.155
<v Speaker 2>if you start thinking about your engineers as

00:09:46.155 --> 00:09:48.795
<v Speaker 2>an investment center rather than a cost center,

00:09:48.955 --> 00:09:51.275
<v Speaker 2>then then it's entirely different discussion around cost

00:09:51.275 --> 00:09:53.850
<v Speaker 2>cost optimization. Right? Yeah. I think there's a

00:09:53.850 --> 00:09:54.970
<v Speaker 0>couple of things there.

00:09:55.370 --> 00:09:57.209
<v Speaker 0>One, you mentioned that there are products popping

00:09:57.209 --> 00:09:58.810
<v Speaker 0>up now, and I think that's that's very

00:09:58.810 --> 00:10:01.529
<v Speaker 0>true. We're seeing Terraform integrations that try and

00:10:01.529 --> 00:10:03.129
<v Speaker 0>tell you on a pull request what your

00:10:03.129 --> 00:10:05.529
<v Speaker 0>plan or the changes to your your infrastructure's

00:10:05.529 --> 00:10:07.385
<v Speaker 0>code is actually gonna cost you on a

00:10:07.385 --> 00:10:09.865
<v Speaker 0>rolling monthly basis, which is interesting. There's things

00:10:09.865 --> 00:10:11.865
<v Speaker 0>like KubeCost, which try to protect what a

00:10:11.865 --> 00:10:13.945
<v Speaker 0>Helm chart can cost you when you deploy

00:10:13.945 --> 00:10:16.025
<v Speaker 0>it in your cluster, which again is quite

00:10:16.025 --> 00:10:16.665
<v Speaker 0>interesting.

00:10:17.625 --> 00:10:19.225
<v Speaker 0>And I think something else that was interesting

00:10:19.225 --> 00:10:21.420
<v Speaker 0>there that you mentioned is, like, the the

00:10:21.420 --> 00:10:24.860
<v Speaker 0>understanding that you've got the operational cost versus

00:10:24.860 --> 00:10:27.180
<v Speaker 0>the capital. What is it? Capital expenditure and

00:10:27.180 --> 00:10:28.460
<v Speaker 0>operational expenditure.

00:10:28.620 --> 00:10:29.980
<v Speaker 0>So as a company, you have to make

00:10:29.980 --> 00:10:31.980
<v Speaker 0>the decision. Do you want to own hardware

00:10:31.980 --> 00:10:34.005
<v Speaker 0>and be an operator of hardware and provide

00:10:34.005 --> 00:10:35.285
<v Speaker 0>a service, or do you want to be

00:10:35.285 --> 00:10:36.965
<v Speaker 0>a little bit of a premium

00:10:37.205 --> 00:10:39.765
<v Speaker 0>and just use one of these cloud providers?

00:10:39.925 --> 00:10:40.885
<v Speaker 0>And I think these are a lot of

00:10:40.885 --> 00:10:42.725
<v Speaker 0>challenges that people need to make. Oh, I

00:10:42.725 --> 00:10:44.725
<v Speaker 1>was just gonna say that, you know, owning

00:10:44.725 --> 00:10:47.525
<v Speaker 1>your own hardware does come with its own

00:10:46.890 --> 00:10:49.210
<v Speaker 1>operating cost as well because who who's wearing

00:10:49.210 --> 00:10:49.850
<v Speaker 1>that

00:10:50.490 --> 00:10:51.770
<v Speaker 1>who's wearing the pager?

00:10:52.650 --> 00:10:53.930
<v Speaker 1>That's one of the things you get with

00:10:53.930 --> 00:10:55.690
<v Speaker 1>a cloud provider. Right? It's it's not not

00:10:55.690 --> 00:10:56.330
<v Speaker 1>you.

00:10:56.810 --> 00:10:59.610
<v Speaker 0>Definitely in a a production environment. I know

00:10:59.610 --> 00:11:02.025
<v Speaker 0>when I started writing dev or being a

00:11:02.025 --> 00:11:04.105
<v Speaker 0>dev, like, we had a cupboard that had

00:11:04.105 --> 00:11:05.625
<v Speaker 0>a rack in it. It had four servers

00:11:05.625 --> 00:11:07.225
<v Speaker 0>on it, and that was dev and staging

00:11:07.225 --> 00:11:09.065
<v Speaker 0>and QA and preprode.

00:11:09.305 --> 00:11:11.305
<v Speaker 0>And to us, like, it doesn't really require

00:11:11.305 --> 00:11:13.145
<v Speaker 0>much maintenance. If anything went wrong, you pull

00:11:13.145 --> 00:11:14.185
<v Speaker 0>the plug on it and turn it back

00:11:14.185 --> 00:11:16.430
<v Speaker 0>on and then and then, well, was barely

00:11:16.430 --> 00:11:17.870
<v Speaker 0>else. Forty minutes later, maybe you had a

00:11:17.870 --> 00:11:20.110
<v Speaker 0>working machine again. Who knows? But we're now

00:11:20.110 --> 00:11:22.270
<v Speaker 0>in a situation that we're probably engineered for

00:11:22.270 --> 00:11:25.150
<v Speaker 0>ourselves, and the cloud native predominantly means microservices.

00:11:25.150 --> 00:11:27.550
<v Speaker 0>Right? And running microservices

00:11:28.065 --> 00:11:30.305
<v Speaker 0>and a production lake environment, even if it

00:11:30.305 --> 00:11:32.225
<v Speaker 0>is in production, usually requires more than one

00:11:32.225 --> 00:11:34.225
<v Speaker 0>machine. With our model, if you could spin

00:11:34.225 --> 00:11:36.625
<v Speaker 0>up a bare metal server and a cupboard

00:11:36.625 --> 00:11:38.465
<v Speaker 0>or even just some

00:11:38.705 --> 00:11:40.145
<v Speaker 0>not a Raspberry Pi, but, know, you can

00:11:40.145 --> 00:11:42.170
<v Speaker 0>stick some novelty hardware into a cupboard and

00:11:42.170 --> 00:11:44.170
<v Speaker 0>deploy a binary to it. But with microservices,

00:11:44.170 --> 00:11:45.610
<v Speaker 0>that's not really an option anymore. It's like

00:11:45.610 --> 00:11:48.490
<v Speaker 0>we've engineered ourselves into this cost parity,

00:11:48.649 --> 00:11:50.649
<v Speaker 0>which I'm I'm sure there are pros and

00:11:50.649 --> 00:11:53.290
<v Speaker 0>cons too. But what what's people's thoughts there?

00:11:53.290 --> 00:11:54.649
<v Speaker 0>Like, if we made this mess ourselves?

00:11:55.145 --> 00:11:57.545
<v Speaker 3>Well, it's also just be careful. You don't

00:11:57.545 --> 00:12:01.705
<v Speaker 3>you don't do binary alternates. Right? So, yeah,

00:12:01.705 --> 00:12:03.945
<v Speaker 3>like I said, we we're moving to bare

00:12:03.945 --> 00:12:05.705
<v Speaker 3>metal as a service and a cloud provider.

00:12:05.705 --> 00:12:07.625
<v Speaker 3>So we we we we get we get

00:12:07.625 --> 00:12:08.745
<v Speaker 3>an entire server

00:12:09.080 --> 00:12:11.240
<v Speaker 3>in a managed data center from a provider

00:12:11.240 --> 00:12:13.720
<v Speaker 3>with high levels of SLA and Internet connectivity

00:12:13.720 --> 00:12:16.120
<v Speaker 3>and everything else. So we we just get

00:12:16.120 --> 00:12:17.800
<v Speaker 3>an x a console access to it. We

00:12:17.800 --> 00:12:20.280
<v Speaker 3>can install VMware on it or Proxmox, whatever

00:12:20.280 --> 00:12:21.960
<v Speaker 3>on it and and start putting our environment.

00:12:21.960 --> 00:12:23.640
<v Speaker 3>So, yes, we have to manage the hypervisor

00:12:23.640 --> 00:12:25.495
<v Speaker 3>layer as a cost saving, but we're not

00:12:25.495 --> 00:12:27.255
<v Speaker 3>worried about the data center or the server

00:12:27.255 --> 00:12:29.495
<v Speaker 3>or any of the connectivity requirements of it.

00:12:29.495 --> 00:12:31.175
<v Speaker 3>It's highly available. So that that there's actually

00:12:31.175 --> 00:12:33.335
<v Speaker 3>a nice halfway house as well in between

00:12:33.335 --> 00:12:35.575
<v Speaker 3>fully managed by by a cloud,

00:12:35.975 --> 00:12:37.575
<v Speaker 3>you know, hardly managed by a cloud or

00:12:37.575 --> 00:12:39.850
<v Speaker 3>self hosted. And, you know, I I don't

00:12:39.850 --> 00:12:40.890
<v Speaker 3>think I would ever

00:12:41.209 --> 00:12:43.850
<v Speaker 3>even consider reverting back to fully self hosted

00:12:43.850 --> 00:12:44.410
<v Speaker 3>now.

00:12:45.290 --> 00:12:48.410
<v Speaker 3>It's just it's just too too hard now,

00:12:48.410 --> 00:12:50.170
<v Speaker 3>you know, and there's there's no need.

00:12:50.810 --> 00:12:51.930
<v Speaker 3>But definitely,

00:12:52.265 --> 00:12:54.345
<v Speaker 3>being able to to have your own dedicated

00:12:54.345 --> 00:12:57.225
<v Speaker 3>hardware, being able to overcommit that hardware at

00:12:57.225 --> 00:12:59.545
<v Speaker 3>a ratio that that you're comfortable with,

00:13:00.265 --> 00:13:02.185
<v Speaker 3>that makes sense for your business, then then

00:13:02.185 --> 00:13:04.985
<v Speaker 3>that'd that that's definitely a viable option to

00:13:04.985 --> 00:13:07.450
<v Speaker 3>to save money, lots of money. Yeah. I

00:13:07.450 --> 00:13:09.690
<v Speaker 0>mean, there's quite a a public

00:13:10.090 --> 00:13:12.410
<v Speaker 0>migration right now happening with Hey, the email

00:13:12.410 --> 00:13:13.770
<v Speaker 0>company, and Basecamp,

00:13:13.850 --> 00:13:15.530
<v Speaker 0>where they're they've they've given up on the

00:13:15.530 --> 00:13:17.850
<v Speaker 0>cloud and said it's too expensive. And they

00:13:17.850 --> 00:13:19.530
<v Speaker 0>were saying cost, I think, was it, like,

00:13:19.530 --> 00:13:20.890
<v Speaker 0>3 plus million

00:13:20.970 --> 00:13:23.115
<v Speaker 0>per year to run their email service? And

00:13:23.115 --> 00:13:24.714
<v Speaker 0>they've went all in and buy their own

00:13:24.714 --> 00:13:26.315
<v Speaker 0>hardware and sticking it into a data stream

00:13:26.315 --> 00:13:27.115
<v Speaker 0>or in managing

00:13:27.755 --> 00:13:29.995
<v Speaker 0>that themselves. And you're right. I I I

00:13:29.995 --> 00:13:32.394
<v Speaker 0>could never imagine going back to that level

00:13:32.394 --> 00:13:33.834
<v Speaker 0>of of operational

00:13:33.690 --> 00:13:35.610
<v Speaker 0>complexity. I I I like the simplicity of

00:13:35.610 --> 00:13:36.970
<v Speaker 0>play. I like the fact that we can

00:13:36.970 --> 00:13:38.410
<v Speaker 0>burst up and burst down

00:13:38.650 --> 00:13:41.130
<v Speaker 0>based on what's happening. I mean,

00:13:41.610 --> 00:13:43.850
<v Speaker 0>the companies have predictable load to be able

00:13:43.850 --> 00:13:46.170
<v Speaker 0>to do that. Like, it just doesn't seem

00:13:46.170 --> 00:13:47.450
<v Speaker 0>like that's the case anymore.

00:13:48.005 --> 00:13:49.685
<v Speaker 2>Well, I have I have to say something

00:13:49.685 --> 00:13:50.805
<v Speaker 2>about this whole

00:13:51.605 --> 00:13:53.845
<v Speaker 2>base camp and hay situation. I mean, all

00:13:53.845 --> 00:13:56.245
<v Speaker 2>all respect to the person who wrote those

00:13:56.245 --> 00:13:56.964
<v Speaker 2>articles,

00:13:57.285 --> 00:13:58.644
<v Speaker 2>there is one thing I am not able

00:13:58.644 --> 00:14:01.605
<v Speaker 2>to understand is at that scale at $3,000,000

00:14:01.605 --> 00:14:04.350
<v Speaker 2>per year, they have a very powerful negotiation

00:14:04.350 --> 00:14:07.149
<v Speaker 2>power. Right? They're not paying premium prices. They're

00:14:07.149 --> 00:14:09.070
<v Speaker 2>not paying catalog prices, or they shouldn't be

00:14:09.070 --> 00:14:10.990
<v Speaker 2>paying catalog prices at at least. Right? If

00:14:10.990 --> 00:14:12.430
<v Speaker 2>you are a customer of a cloud provider

00:14:12.430 --> 00:14:14.510
<v Speaker 2>who whose bill is $50,000,

00:14:14.510 --> 00:14:16.190
<v Speaker 2>if you bring AWS or Google Cloud, they

00:14:16.190 --> 00:14:17.470
<v Speaker 2>will tell you that. They just go away.

00:14:17.470 --> 00:14:19.815
<v Speaker 2>We don't care. Right? But you're paying $3,000,000

00:14:19.815 --> 00:14:21.655
<v Speaker 2>per year, then you can sit down at

00:14:21.655 --> 00:14:23.655
<v Speaker 2>the table. And I've seen customers negotiating up

00:14:23.655 --> 00:14:26.375
<v Speaker 2>to 60% discounts on their own computes by

00:14:26.375 --> 00:14:28.935
<v Speaker 2>spending couple millions a year. Right? So I

00:14:28.935 --> 00:14:30.855
<v Speaker 2>I I read I read those articles. I

00:14:30.855 --> 00:14:33.320
<v Speaker 2>could not understand why the cost was substantial

00:14:33.320 --> 00:14:35.160
<v Speaker 2>and why they were complaining about it.

00:14:35.720 --> 00:14:37.720
<v Speaker 2>And, also, I if I was in their

00:14:37.720 --> 00:14:39.480
<v Speaker 2>shoes, I would not consider going back to

00:14:39.480 --> 00:14:39.960
<v Speaker 2>the

00:14:40.519 --> 00:14:42.920
<v Speaker 2>run my own server situation. And Neil said

00:14:42.920 --> 00:14:45.720
<v Speaker 2>something interesting. Like, bare metal server is a

00:14:45.720 --> 00:14:47.895
<v Speaker 2>thing, and it's it's kinda halfway between,

00:14:48.135 --> 00:14:51.015
<v Speaker 2>you know, fully managed and somehow

00:14:51.335 --> 00:14:52.775
<v Speaker 2>half managed, I would say.

00:14:53.255 --> 00:14:56.055
<v Speaker 2>So so I I don't like, the articles

00:14:56.055 --> 00:14:57.975
<v Speaker 2>that you're referring to, they were doing kind

00:14:57.975 --> 00:14:59.655
<v Speaker 2>of an apple to apple conversion. That's what

00:14:59.655 --> 00:15:01.699
<v Speaker 2>I always advocate against. Right? Like, just look

00:15:01.699 --> 00:15:03.620
<v Speaker 2>at the catalog prices of AWS and Google

00:15:03.620 --> 00:15:05.459
<v Speaker 2>Cloud and and Azure and say, like, oh,

00:15:05.459 --> 00:15:06.980
<v Speaker 2>see, this is expensive. I can run the

00:15:06.980 --> 00:15:08.980
<v Speaker 2>VM for half that price. That's not the

00:15:08.980 --> 00:15:09.779
<v Speaker 2>full story.

00:15:10.819 --> 00:15:12.579
<v Speaker 1>Yeah. I do wonder if at Scaleway, we

00:15:12.579 --> 00:15:14.915
<v Speaker 1>will see more people coming back to we

00:15:14.915 --> 00:15:15.875
<v Speaker 1>have elastic

00:15:15.875 --> 00:15:17.074
<v Speaker 1>metal service

00:15:17.795 --> 00:15:20.514
<v Speaker 1>because historically, that's been just steady. There is

00:15:20.514 --> 00:15:23.394
<v Speaker 1>steady consistent demand for those. So it'll be

00:15:23.394 --> 00:15:25.555
<v Speaker 1>interesting to see if more people adopt, you

00:15:25.555 --> 00:15:28.514
<v Speaker 1>know, your your approach, Neil, of mixing and

00:15:28.514 --> 00:15:30.610
<v Speaker 1>matching and finding the right tools for the

00:15:30.610 --> 00:15:32.930
<v Speaker 1>actual sort of more more well suited tools

00:15:32.930 --> 00:15:33.810
<v Speaker 1>for each job.

00:15:34.450 --> 00:15:36.690
<v Speaker 0>Alright. Well, based on where this conversation is

00:15:36.690 --> 00:15:37.250
<v Speaker 0>going

00:15:37.650 --> 00:15:39.650
<v Speaker 0>and based on what the next two questions

00:15:39.650 --> 00:15:41.250
<v Speaker 0>are, I'm gonna probably gonna ask them both

00:15:41.250 --> 00:15:42.530
<v Speaker 0>and just throw them out there and let

00:15:42.530 --> 00:15:44.725
<v Speaker 0>you tackle whichever one you want to. You

00:15:44.725 --> 00:15:46.645
<v Speaker 0>know? But the next question is,

00:15:47.045 --> 00:15:49.285
<v Speaker 0>again, from going to conferences and speaking to

00:15:49.285 --> 00:15:51.845
<v Speaker 0>people at the conference, I've seen a lot

00:15:51.845 --> 00:15:52.965
<v Speaker 0>more people adopt

00:15:53.045 --> 00:15:55.365
<v Speaker 0>cloud providers outside of the big three. Like,

00:15:55.365 --> 00:15:56.965
<v Speaker 0>you know, we have Azure, we have AWS,

00:15:56.965 --> 00:15:59.660
<v Speaker 0>and we have Google. But, you know, I

00:15:59.660 --> 00:16:01.420
<v Speaker 0>think what a lot of people are agreeing

00:16:01.420 --> 00:16:02.940
<v Speaker 0>with is that costs are cheaper when they

00:16:02.940 --> 00:16:04.540
<v Speaker 0>go to the smaller cloud providers.

00:16:04.780 --> 00:16:06.700
<v Speaker 0>They're also more targeted and seems to be

00:16:06.700 --> 00:16:08.860
<v Speaker 0>able to innovate in a certain space faster

00:16:08.860 --> 00:16:10.940
<v Speaker 0>than the major players. So that could be

00:16:10.940 --> 00:16:12.300
<v Speaker 0>a driving factor there, and I wanna kinda

00:16:12.300 --> 00:16:14.574
<v Speaker 0>touch on that. But you also both or

00:16:14.574 --> 00:16:16.894
<v Speaker 0>all three of you mentioned kind of hybrid

00:16:16.894 --> 00:16:19.615
<v Speaker 0>architectures. And if I think back to early

00:16:19.615 --> 00:16:21.855
<v Speaker 0>COVID and even before COVID,

00:16:22.014 --> 00:16:23.535
<v Speaker 0>there was a lot of buzz and talks

00:16:23.535 --> 00:16:25.694
<v Speaker 0>at KubeCon and other events where people were

00:16:25.694 --> 00:16:28.090
<v Speaker 0>talking about hybrid cloud and multi cloud. And

00:16:28.090 --> 00:16:29.930
<v Speaker 0>I'm not seeing that anymore either.

00:16:30.410 --> 00:16:32.730
<v Speaker 0>So I'm curious if you say that.

00:16:33.610 --> 00:16:35.370
<v Speaker 0>Yeah. So maybe you can share some thoughts

00:16:35.370 --> 00:16:38.250
<v Speaker 0>on are the smaller clouds an advantage, and

00:16:38.250 --> 00:16:40.650
<v Speaker 0>are we gonna see more adoption there? And

00:16:40.650 --> 00:16:42.650
<v Speaker 0>is there a hybrid play, a multi cloud

00:16:42.650 --> 00:16:45.255
<v Speaker 0>play that is disappearing, or maybe I'm just

00:16:45.255 --> 00:16:46.295
<v Speaker 0>not seeing it anymore?

00:16:46.775 --> 00:16:48.775
<v Speaker 1>Well, I'll do a tiny product picture, which

00:16:48.775 --> 00:16:50.695
<v Speaker 1>is that Scaleway does run a multi cloud

00:16:50.695 --> 00:16:52.215
<v Speaker 1>Kubernetes managed service.

00:16:52.775 --> 00:16:54.775
<v Speaker 1>So we have your control plane and everything,

00:16:54.775 --> 00:16:57.335
<v Speaker 1>lives on Scaleway hardware and architecture, and then

00:16:57.335 --> 00:16:58.695
<v Speaker 1>you can put your nodes wherever you like.

00:16:59.690 --> 00:17:01.050
<v Speaker 1>So we are definitely

00:17:01.610 --> 00:17:03.610
<v Speaker 1>we're hoping that the multi cloud isn't dying

00:17:03.610 --> 00:17:04.730
<v Speaker 1>as a concept.

00:17:06.570 --> 00:17:08.890
<v Speaker 1>I think it's something that you know, maybe

00:17:08.890 --> 00:17:10.410
<v Speaker 1>it will never be mainstream, but there will

00:17:10.410 --> 00:17:12.170
<v Speaker 1>be use cases for it. And I think

00:17:12.170 --> 00:17:13.369
<v Speaker 1>it should be easier for people to do.

00:17:14.085 --> 00:17:15.204
<v Speaker 3>Yeah. Hybrid

00:17:15.444 --> 00:17:17.845
<v Speaker 3>cloud, I think, is or or multi cloud,

00:17:17.845 --> 00:17:19.524
<v Speaker 3>whatever you wanna describe it there,

00:17:19.845 --> 00:17:22.484
<v Speaker 3>I think it's actually pretty important because it

00:17:22.484 --> 00:17:24.325
<v Speaker 3>does let you have the right cost for

00:17:24.325 --> 00:17:25.364
<v Speaker 3>the right application.

00:17:25.684 --> 00:17:29.040
<v Speaker 3>Like, why would you wanna run dev environments

00:17:29.040 --> 00:17:31.120
<v Speaker 3>on the top three and pay premium if

00:17:31.280 --> 00:17:33.440
<v Speaker 3>you don't need the high levels of service

00:17:33.440 --> 00:17:35.760
<v Speaker 3>availability and everything else that comes with the

00:17:35.760 --> 00:17:37.200
<v Speaker 3>top three that you just get and take

00:17:37.200 --> 00:17:39.045
<v Speaker 3>for granted? If you don't need that for

00:17:39.045 --> 00:17:40.885
<v Speaker 3>dev test QA staging, what do call it,

00:17:40.885 --> 00:17:41.685
<v Speaker 3>what you like,

00:17:42.005 --> 00:17:43.285
<v Speaker 3>then why would you run them there? You

00:17:43.285 --> 00:17:45.125
<v Speaker 3>might wanna run them somewhere that that's that's

00:17:45.125 --> 00:17:47.285
<v Speaker 3>substantially cheaper. That's one of the great things

00:17:47.285 --> 00:17:49.845
<v Speaker 3>about Kubernetes. Right? It's this this unifying

00:17:49.925 --> 00:17:50.725
<v Speaker 3>layer.

00:17:50.805 --> 00:17:52.840
<v Speaker 3>As long as you can deploy in Kubernetes,

00:17:52.840 --> 00:17:54.440
<v Speaker 3>you can deploy anywhere, and you're gonna get

00:17:54.440 --> 00:17:56.039
<v Speaker 3>relatively the same result.

00:17:56.360 --> 00:17:58.360
<v Speaker 3>Now I say I say relatively because,

00:17:58.600 --> 00:18:01.080
<v Speaker 3>you know, the the cloud providers like to

00:18:01.240 --> 00:18:03.240
<v Speaker 3>make you somewhat sticky, and so they're trying

00:18:03.240 --> 00:18:05.320
<v Speaker 3>to encourage you to use their authentication and

00:18:05.320 --> 00:18:07.240
<v Speaker 3>their logging and all their other stuff. And

00:18:06.855 --> 00:18:08.455
<v Speaker 3>if if you if if you buy into

00:18:08.455 --> 00:18:11.815
<v Speaker 3>that and go all in on Amazon's authentication,

00:18:11.815 --> 00:18:13.174
<v Speaker 3>you know, I am everything else, then it

00:18:13.174 --> 00:18:14.934
<v Speaker 3>makes it very difficult to then go and

00:18:14.934 --> 00:18:17.015
<v Speaker 3>use any other cloud provider. So as as

00:18:17.015 --> 00:18:18.614
<v Speaker 3>long as you have some way of,

00:18:18.855 --> 00:18:21.495
<v Speaker 3>you know, normalizing or or neutralizing

00:18:21.970 --> 00:18:24.370
<v Speaker 3>how how you authenticate users in the clusters,

00:18:24.370 --> 00:18:26.290
<v Speaker 3>how you handle RBAC, how you handle all

00:18:26.290 --> 00:18:28.050
<v Speaker 3>of the policies, everything else. How you do

00:18:28.050 --> 00:18:28.770
<v Speaker 3>all that

00:18:29.730 --> 00:18:31.890
<v Speaker 3>and don't don't use it from just one

00:18:31.890 --> 00:18:33.890
<v Speaker 3>one provider, then you can you can balance

00:18:33.890 --> 00:18:35.745
<v Speaker 3>your loads and have have the right the

00:18:35.745 --> 00:18:37.745
<v Speaker 3>right provider for the right workload. And I

00:18:37.745 --> 00:18:39.905
<v Speaker 3>think that's that's key. Otherwise, it makes it

00:18:39.905 --> 00:18:40.705
<v Speaker 3>very difficult.

00:18:41.105 --> 00:18:43.745
<v Speaker 1>That does require a pretty decent working knowledge

00:18:43.745 --> 00:18:46.065
<v Speaker 1>of which provider would be the best for

00:18:46.065 --> 00:18:47.184
<v Speaker 1>each workload.

00:18:47.345 --> 00:18:49.105
<v Speaker 1>Now if you're if you're conceiving a project

00:18:49.105 --> 00:18:50.465
<v Speaker 1>from scratch and you go, okay. I have

00:18:50.465 --> 00:18:52.960
<v Speaker 1>this I have this very high GPU usage

00:18:52.960 --> 00:18:54.799
<v Speaker 1>that workload that needs to happen.

00:18:56.080 --> 00:18:57.520
<v Speaker 1>You know, there's there's if you don't already

00:18:57.520 --> 00:18:58.640
<v Speaker 1>know off the top of your head where

00:18:58.640 --> 00:19:00.160
<v Speaker 1>do you want to run that, that's sort

00:19:00.160 --> 00:19:02.080
<v Speaker 1>of that's research time, I suppose. But then

00:19:02.080 --> 00:19:03.855
<v Speaker 1>that's you're saving money as a result. Result.

00:19:03.855 --> 00:19:03.934
<v Speaker 1>So

00:19:04.655 --> 00:19:07.054
<v Speaker 3>Well, just just just have two. High cost,

00:19:07.135 --> 00:19:08.335
<v Speaker 3>high SLA,

00:19:08.415 --> 00:19:10.735
<v Speaker 3>low cost, lower SLA, and just just balance

00:19:10.735 --> 00:19:12.815
<v Speaker 3>that way. Prod, nonprod. Just even start even

00:19:12.815 --> 00:19:15.215
<v Speaker 3>start something simple as that. Right? I'm I'm

00:19:15.215 --> 00:19:17.054
<v Speaker 2>gonna have to go a little bit against

00:19:17.054 --> 00:19:18.255
<v Speaker 2>the flow of what's have been said. I

00:19:18.255 --> 00:19:20.070
<v Speaker 2>I understand all these points. They're all very

00:19:20.070 --> 00:19:22.390
<v Speaker 2>valid points, but I think one of the

00:19:22.390 --> 00:19:25.429
<v Speaker 2>problems I have with hybrid cloud and multi

00:19:25.429 --> 00:19:27.590
<v Speaker 2>cloud discussion is it tends actually to always

00:19:27.590 --> 00:19:29.590
<v Speaker 2>focus on a single layer in a stack.

00:19:29.750 --> 00:19:31.830
<v Speaker 2>Like, what Ilya and Nain mentioned, it they

00:19:31.830 --> 00:19:33.350
<v Speaker 2>they just talked, oh, the Kubernetes, you can

00:19:33.350 --> 00:19:35.725
<v Speaker 2>do Kubernetes across cloud because it's unified API.

00:19:36.045 --> 00:19:38.525
<v Speaker 2>But in reality, no application lives in a

00:19:38.525 --> 00:19:40.365
<v Speaker 2>vacuum. You need the database. You need storage.

00:19:40.365 --> 00:19:41.885
<v Speaker 2>You need messaging queues. You need a bunch

00:19:41.885 --> 00:19:44.045
<v Speaker 2>of extra things. You're not gonna stick your

00:19:44.045 --> 00:19:45.885
<v Speaker 2>app on AWS and put your database on

00:19:45.885 --> 00:19:47.644
<v Speaker 2>Google Cloud. That doesn't make any sense. Right?

00:19:47.645 --> 00:19:50.140
<v Speaker 2>You're not gonna put your your application on

00:19:50.140 --> 00:19:51.660
<v Speaker 2>a container on DigitalOcean

00:19:51.660 --> 00:19:54.540
<v Speaker 2>and have your Kafka running on AWS. That

00:19:54.540 --> 00:19:56.780
<v Speaker 2>doesn't make any sense. So where where where

00:19:56.780 --> 00:19:58.860
<v Speaker 2>I see this this again, this is my

00:19:58.860 --> 00:19:59.659
<v Speaker 2>own opinion.

00:20:00.220 --> 00:20:03.100
<v Speaker 2>Where I see multi cloud valuable are few

00:20:03.100 --> 00:20:04.060
<v Speaker 2>of the following cases.

00:20:05.095 --> 00:20:06.615
<v Speaker 2>Some of the following cases, this is from

00:20:06.615 --> 00:20:07.815
<v Speaker 2>experience. First

00:20:07.975 --> 00:20:10.534
<v Speaker 2>is location or availability of the service. There

00:20:10.534 --> 00:20:12.934
<v Speaker 2>are certain industries where you are required by

00:20:12.934 --> 00:20:15.174
<v Speaker 2>law to be in a certain physical location.

00:20:15.495 --> 00:20:17.895
<v Speaker 2>And if your cloud provider doesn't have presence

00:20:17.895 --> 00:20:19.549
<v Speaker 2>in that physical location, then you will have

00:20:19.549 --> 00:20:21.710
<v Speaker 2>to choose another one. That's one valid use

00:20:21.710 --> 00:20:23.070
<v Speaker 2>case for multi cloud. Right?

00:20:23.549 --> 00:20:26.190
<v Speaker 2>Or maybe either physical location because regulations or

00:20:26.190 --> 00:20:27.549
<v Speaker 2>because you want to be close to the

00:20:27.549 --> 00:20:30.110
<v Speaker 2>user from a latency perspective. Right? So that's

00:20:30.110 --> 00:20:30.509
<v Speaker 2>one.

00:20:31.549 --> 00:20:33.710
<v Speaker 2>The second one is you you you touched

00:20:33.710 --> 00:20:35.625
<v Speaker 2>on this a little bit is added value

00:20:35.625 --> 00:20:37.865
<v Speaker 2>services. Like, if you want analytics

00:20:38.265 --> 00:20:39.145
<v Speaker 2>tooling,

00:20:39.305 --> 00:20:40.905
<v Speaker 2>probably Google Cloud is one of the best

00:20:40.905 --> 00:20:42.425
<v Speaker 2>places where you can have, like, a, like,

00:20:42.425 --> 00:20:44.505
<v Speaker 2>a, a data warehouse with BigQuery.

00:20:44.585 --> 00:20:46.505
<v Speaker 2>So you go to the cloud provider because

00:20:46.505 --> 00:20:48.290
<v Speaker 2>they have a service that they are the

00:20:48.290 --> 00:20:49.810
<v Speaker 2>only one offering, and they are doing it

00:20:49.810 --> 00:20:50.850
<v Speaker 2>very well. Right?

00:20:51.250 --> 00:20:52.930
<v Speaker 2>If you want cheap compute, you probably go

00:20:52.930 --> 00:20:54.610
<v Speaker 2>to AWS because they have been doing that

00:20:54.610 --> 00:20:56.370
<v Speaker 2>for a while. And they optimize even their

00:20:56.370 --> 00:20:58.370
<v Speaker 2>costs to be able to offer

00:20:58.690 --> 00:21:01.215
<v Speaker 2>VMs for cheaper than the other two. If

00:21:01.215 --> 00:21:03.135
<v Speaker 2>you want developer tooling, you go to to

00:21:03.135 --> 00:21:05.774
<v Speaker 2>Azure. They have a pretty good DevOps stack,

00:21:06.255 --> 00:21:07.934
<v Speaker 2>which a lot of developers like, especially if

00:21:07.934 --> 00:21:09.535
<v Speaker 2>you're in the dot net space. Right? So

00:21:09.535 --> 00:21:11.375
<v Speaker 2>that's another use case of multi cloud in

00:21:11.375 --> 00:21:12.495
<v Speaker 2>my opinion. This,

00:21:13.340 --> 00:21:15.900
<v Speaker 2>I would call it, world where people want

00:21:15.900 --> 00:21:18.060
<v Speaker 2>to run a single abstraction layer on top

00:21:18.060 --> 00:21:20.060
<v Speaker 2>of six cloud providers and have a single

00:21:20.060 --> 00:21:22.140
<v Speaker 2>API to talk to them and then have

00:21:22.140 --> 00:21:24.700
<v Speaker 2>the app automatically move from one cloud provider

00:21:24.700 --> 00:21:27.020
<v Speaker 2>to another because, you know, it's not that

00:21:27.020 --> 00:21:29.915
<v Speaker 2>that data center is down. That's just very

00:21:29.915 --> 00:21:32.315
<v Speaker 2>hard in practice to actually implement, I would

00:21:32.315 --> 00:21:35.275
<v Speaker 2>say. So I'm not dismissing that multi cloud

00:21:35.275 --> 00:21:36.795
<v Speaker 2>is valid.

00:21:36.795 --> 00:21:38.554
<v Speaker 2>I just think that people

00:21:39.035 --> 00:21:40.715
<v Speaker 2>think about it from a single

00:21:40.955 --> 00:21:43.790
<v Speaker 2>layer perspective in the entire stack, and that's

00:21:43.790 --> 00:21:44.990
<v Speaker 2>probably not the right way to do it,

00:21:44.990 --> 00:21:46.190
<v Speaker 2>but that's just my opinion.

00:21:47.150 --> 00:21:48.990
<v Speaker 0>I think you're all in more agreement than

00:21:48.990 --> 00:21:51.870
<v Speaker 0>you probably realize because I think, Abdul, what

00:21:51.870 --> 00:21:53.230
<v Speaker 0>you came out of from there is, like,

00:21:53.230 --> 00:21:55.390
<v Speaker 0>the production use case where, you know, I

00:21:55.390 --> 00:21:57.790
<v Speaker 0>don't wanna manage my own stateful databases and

00:21:57.790 --> 00:21:59.445
<v Speaker 0>production. So I am gonna use, like, Cloud

00:21:59.445 --> 00:22:01.684
<v Speaker 0>Spanner or Cloud SQL, etcetera.

00:22:02.485 --> 00:22:03.205
<v Speaker 0>But then

00:22:03.605 --> 00:22:05.125
<v Speaker 0>I think Eli and Neil were more of

00:22:05.125 --> 00:22:08.005
<v Speaker 0>the let's slice our environments across clouds. Like,

00:22:08.005 --> 00:22:09.924
<v Speaker 0>have dev and staging live somewhere else and

00:22:09.924 --> 00:22:11.924
<v Speaker 0>not really speak like, they're never gonna use

00:22:12.164 --> 00:22:14.610
<v Speaker 0>I'm not gonna pay for for Cloud Spanner

00:22:14.610 --> 00:22:17.090
<v Speaker 0>for my dev server or my staging server

00:22:17.090 --> 00:22:19.409
<v Speaker 0>because the cost it's just not cost effective.

00:22:19.730 --> 00:22:21.810
<v Speaker 0>But I probably would stick it on Scaleway

00:22:21.810 --> 00:22:23.730
<v Speaker 0>or Civo or Linode or any of these

00:22:23.730 --> 00:22:26.290
<v Speaker 0>other providers and maybe rely on Google Cloud

00:22:26.290 --> 00:22:28.770
<v Speaker 0>for my production workloads because I do wanna

00:22:28.770 --> 00:22:30.684
<v Speaker 0>who can to more of those value added

00:22:30.684 --> 00:22:31.404
<v Speaker 0>services.

00:22:31.565 --> 00:22:33.565
<v Speaker 0>And I think that's actually probably a pretty

00:22:33.565 --> 00:22:35.724
<v Speaker 0>good way for people to start leveraging

00:22:35.725 --> 00:22:37.884
<v Speaker 0>cost savings by moving those

00:22:38.044 --> 00:22:41.804
<v Speaker 0>lower priority environments or more ephemeral environments than

00:22:41.804 --> 00:22:42.764
<v Speaker 0>other

00:22:42.764 --> 00:22:43.325
<v Speaker 0>providers.

00:22:44.360 --> 00:22:45.880
<v Speaker 0>Plus it gets them more familiar with the

00:22:45.880 --> 00:22:47.960
<v Speaker 0>tooling as well. Maybe the infrastructure's code is

00:22:47.960 --> 00:22:49.800
<v Speaker 0>gonna improve because there's no retit in a

00:22:49.800 --> 00:22:51.480
<v Speaker 0>modular fashion where it can be

00:22:51.800 --> 00:22:54.360
<v Speaker 0>augmented with a different cloud provider at one

00:22:54.360 --> 00:22:56.520
<v Speaker 0>time. Who knows? Like, everybody's gonna do something

00:22:56.520 --> 00:22:57.965
<v Speaker 0>a little bit different. But I do think

00:22:57.965 --> 00:22:59.165
<v Speaker 0>these were all in

00:22:59.405 --> 00:23:01.645
<v Speaker 0>more or less agreement in some way there.

00:23:01.645 --> 00:23:02.684
<v Speaker 0>We agree? There

00:23:03.005 --> 00:23:03.965
<v Speaker 3>are also

00:23:04.365 --> 00:23:05.325
<v Speaker 3>open source,

00:23:05.965 --> 00:23:07.645
<v Speaker 3>you know, alternates for almost all of the

00:23:07.645 --> 00:23:10.125
<v Speaker 3>cloud provider services. So for non prod, you

00:23:10.125 --> 00:23:12.205
<v Speaker 3>can you can actually stand up an entire

00:23:12.520 --> 00:23:14.279
<v Speaker 3>Kube manifest with,

00:23:14.520 --> 00:23:16.760
<v Speaker 3>you know, your your database layers, your your

00:23:16.760 --> 00:23:19.559
<v Speaker 3>your your messaging layers, whatever else, and actually

00:23:19.559 --> 00:23:21.080
<v Speaker 3>make it make it stateful. So you can

00:23:21.080 --> 00:23:21.720
<v Speaker 3>do that.

00:23:22.120 --> 00:23:23.640
<v Speaker 3>Would you do that for production? Yeah. Probably

00:23:23.640 --> 00:23:25.480
<v Speaker 3>not. You'd probably want that that with a

00:23:25.480 --> 00:23:26.520
<v Speaker 3>really high SLA,

00:23:26.885 --> 00:23:28.405
<v Speaker 3>you know, specialist, you know, sort of run

00:23:28.405 --> 00:23:31.125
<v Speaker 3>databases amazingly well. So but yeah. Yeah. We're

00:23:31.125 --> 00:23:33.685
<v Speaker 0>seeing some really interesting stuff like CockroachDB

00:23:33.685 --> 00:23:34.885
<v Speaker 0>with their serverless

00:23:35.045 --> 00:23:37.445
<v Speaker 0>offering. It's it's really interesting. We've got Neon

00:23:37.445 --> 00:23:39.285
<v Speaker 0>dot tech, which is doing, like, this managed

00:23:39.285 --> 00:23:41.205
<v Speaker 0>serverless Postgres as well.

00:23:42.240 --> 00:23:45.360
<v Speaker 0>There's PlanetScale who do the test MySQL at

00:23:45.360 --> 00:23:47.520
<v Speaker 0>a cloud environment. So, like, if people are

00:23:47.520 --> 00:23:49.280
<v Speaker 0>already stored in their state and these other

00:23:49.280 --> 00:23:51.679
<v Speaker 0>services and just using cloud providers for compute,

00:23:51.679 --> 00:23:54.480
<v Speaker 0>maybe they have more flexibility to really understand

00:23:54.480 --> 00:23:55.039
<v Speaker 0>and

00:23:55.520 --> 00:23:58.435
<v Speaker 0>mitigate any cost explosion there too. So here

00:23:58.435 --> 00:24:00.835
<v Speaker 2>is one interesting fact for you guys. I

00:24:00.835 --> 00:24:03.235
<v Speaker 2>I don't know if you've seen the you

00:24:03.315 --> 00:24:05.235
<v Speaker 2>you're all aware of the last the the

00:24:05.235 --> 00:24:07.635
<v Speaker 2>the registry migration, the abstract registry migration for

00:24:07.635 --> 00:24:10.035
<v Speaker 2>Kubernetes that's happened over the last few months.

00:24:10.035 --> 00:24:10.195
<v Speaker 2>Right?

00:24:11.490 --> 00:24:12.210
<v Speaker 2>I've been

00:24:12.929 --> 00:24:15.090
<v Speaker 2>so we we we did, an episode on

00:24:15.090 --> 00:24:16.690
<v Speaker 2>the podcast about that, and we interviewed one

00:24:16.690 --> 00:24:18.610
<v Speaker 2>of the software engineers who led that effort.

00:24:18.610 --> 00:24:21.490
<v Speaker 2>And in researching that topic, I came across

00:24:21.490 --> 00:24:22.690
<v Speaker 2>a document

00:24:22.690 --> 00:24:24.530
<v Speaker 2>that was written by some people in the

00:24:24.530 --> 00:24:25.090
<v Speaker 2>CNCF

00:24:26.235 --> 00:24:28.235
<v Speaker 2>in which they analyzed like, they they they

00:24:28.235 --> 00:24:30.075
<v Speaker 2>just, you know, highlighted what's the problem statement

00:24:30.075 --> 00:24:31.914
<v Speaker 2>and how they are proposing to solve it.

00:24:31.995 --> 00:24:34.235
<v Speaker 2>And in that problem statement phase, they said

00:24:34.235 --> 00:24:35.595
<v Speaker 2>there was something around

00:24:35.995 --> 00:24:38.075
<v Speaker 2>they they analyzed the traffic that was going

00:24:38.075 --> 00:24:41.350
<v Speaker 2>toward the Google Container Registry, so khs.gsr.io,

00:24:41.350 --> 00:24:43.429
<v Speaker 2>the old one. And they realized that about

00:24:43.429 --> 00:24:45.269
<v Speaker 2>70% of the traffic going there was coming

00:24:45.269 --> 00:24:46.709
<v Speaker 2>from AWS IP addresses.

00:24:47.029 --> 00:24:48.549
<v Speaker 2>So so there's actually a lot of people

00:24:48.549 --> 00:24:50.950
<v Speaker 2>on AWS that are stand so these are

00:24:50.950 --> 00:24:51.509
<v Speaker 2>not

00:24:51.909 --> 00:24:55.830
<v Speaker 2>EKS. It's not it's not the AWS managed

00:24:54.705 --> 00:24:57.505
<v Speaker 2>Kubernetes pulling from our container registry or from

00:24:57.505 --> 00:24:59.904
<v Speaker 2>the the k x s one. It's people

00:24:59.904 --> 00:25:01.985
<v Speaker 2>standing their own Kubernetes cluster on top of

00:25:01.985 --> 00:25:05.184
<v Speaker 2>AWS using tools like KubeADM or KubeSpray because

00:25:05.184 --> 00:25:07.024
<v Speaker 2>KubeDM and KubeSpray uses

00:25:07.105 --> 00:25:09.345
<v Speaker 2>the old registry to pull images from. Right?

00:25:09.860 --> 00:25:11.380
<v Speaker 2>And that was a very interesting,

00:25:11.940 --> 00:25:14.340
<v Speaker 2>like, fact to learn. It's like, okay. There

00:25:14.340 --> 00:25:16.100
<v Speaker 2>are bunch of people doing their own Kubernetes

00:25:16.100 --> 00:25:17.860
<v Speaker 2>cluster on top of AWS, which is Why

00:25:17.860 --> 00:25:20.500
<v Speaker 3>would you? Why would you then? It's

00:25:20.500 --> 00:25:20.980
<v Speaker 3>so weird.

00:25:22.105 --> 00:25:24.585
<v Speaker 1>You already have the expertise. You want to

00:25:24.585 --> 00:25:27.065
<v Speaker 1>be lower in the abstraction sort of offerings.

00:25:27.065 --> 00:25:29.144
<v Speaker 1>I I don't know. There must there must

00:25:29.144 --> 00:25:31.385
<v Speaker 1>be significant use cases for it if they're

00:25:31.385 --> 00:25:32.585
<v Speaker 1>seeing that much Did I run my own?

00:25:34.470 --> 00:25:36.550
<v Speaker 2>And so, actually, the migration toward the new

00:25:36.550 --> 00:25:39.429
<v Speaker 2>registry was driven by this because the the

00:25:40.150 --> 00:25:43.110
<v Speaker 2>the project the Kubernetes project used Google Cloud

00:25:43.110 --> 00:25:45.510
<v Speaker 2>to host the artifacts and host the CICD

00:25:45.510 --> 00:25:48.625
<v Speaker 2>pipelines, etcetera, etcetera. But they realized that out

00:25:48.625 --> 00:25:50.145
<v Speaker 2>of the $35,000,000

00:25:50.145 --> 00:25:51.745
<v Speaker 2>that Google Cloud was giving them every year

00:25:51.745 --> 00:25:54.065
<v Speaker 2>to pay for everything, they were paying 50%

00:25:54.065 --> 00:25:56.145
<v Speaker 2>of it on egress costs. That's all the

00:25:56.145 --> 00:25:58.465
<v Speaker 2>image pools going toward the different cloud provider.

00:25:58.465 --> 00:26:00.385
<v Speaker 2>Right? So the new registry, if you look

00:26:00.385 --> 00:26:02.460
<v Speaker 2>at the details of the implementation, it's just

00:26:02.460 --> 00:26:04.860
<v Speaker 2>a very simple proxy that forwards you toward

00:26:04.860 --> 00:26:07.020
<v Speaker 2>either AWS or to Google Cloud based on

00:26:07.020 --> 00:26:08.299
<v Speaker 2>where where you're coming from.

00:26:08.620 --> 00:26:10.620
<v Speaker 2>So they're actually hosting images in both cloud

00:26:10.620 --> 00:26:11.340
<v Speaker 2>providers

00:26:11.740 --> 00:26:13.260
<v Speaker 2>so that they can cut cut on the

00:26:13.260 --> 00:26:13.900
<v Speaker 2>egress cost.

00:26:14.475 --> 00:26:15.674
<v Speaker 1>That's so clever.

00:26:15.995 --> 00:26:17.595
<v Speaker 1>That's really funny. I had good idea.

00:26:17.995 --> 00:26:19.755
<v Speaker 2>Yeah. It's it's it's it was a very

00:26:19.755 --> 00:26:23.035
<v Speaker 2>interesting, like like, realization. Like, 70% egress cost

00:26:23.035 --> 00:26:25.275
<v Speaker 2>going towards AWS, which was like, okay. Sure.

00:26:25.275 --> 00:26:26.555
<v Speaker 2>But I'm not sure people doing that.

00:26:27.200 --> 00:26:29.120
<v Speaker 0>Well, I think this gives us a nice

00:26:29.120 --> 00:26:31.840
<v Speaker 0>segue into our next topic because

00:26:32.000 --> 00:26:32.880
<v Speaker 0>registries

00:26:32.880 --> 00:26:34.080
<v Speaker 0>are expensive,

00:26:34.240 --> 00:26:36.080
<v Speaker 0>and people that operate them may wanna register

00:26:36.080 --> 00:26:38.720
<v Speaker 0>costs. And a very notable company made some

00:26:38.720 --> 00:26:41.195
<v Speaker 0>decisions lately that kind of angered the cloud

00:26:41.195 --> 00:26:43.035
<v Speaker 0>native community. And, of course, I'm talking about

00:26:43.035 --> 00:26:43.835
<v Speaker 0>Docker

00:26:44.075 --> 00:26:45.915
<v Speaker 0>who kinda made themselves a villain when they

00:26:45.915 --> 00:26:47.115
<v Speaker 0>announced that they were

00:26:47.675 --> 00:26:48.715
<v Speaker 0>deprecating,

00:26:48.715 --> 00:26:51.435
<v Speaker 0>removing, deleting, whatever they were doing, the free

00:26:51.435 --> 00:26:53.750
<v Speaker 0>plan, which meant that a lot of people

00:26:53.750 --> 00:26:56.870
<v Speaker 0>who host their container images on the Docker

00:26:56.870 --> 00:26:59.750
<v Speaker 0>Hub were told that within was it thirty

00:26:59.750 --> 00:27:01.510
<v Speaker 0>days or ninety days? I don't remember exactly.

00:27:01.510 --> 00:27:04.309
<v Speaker 0>Their images were gonna be deleted. Now they've

00:27:04.309 --> 00:27:06.070
<v Speaker 0>resented it. They said, okay. We're we're gonna

00:27:06.070 --> 00:27:08.205
<v Speaker 0>migrate people to open source programs, and we're

00:27:08.205 --> 00:27:10.205
<v Speaker 0>gonna give I think there is some sort

00:27:10.205 --> 00:27:13.085
<v Speaker 0>of free plan now, but do we forgive

00:27:13.085 --> 00:27:14.925
<v Speaker 0>them, or have they broken their trust one

00:27:14.925 --> 00:27:17.245
<v Speaker 0>too many times now? I think there's definitely

00:27:17.245 --> 00:27:19.005
<v Speaker 3>gonna be fear because

00:27:19.485 --> 00:27:22.140
<v Speaker 3>if you can just change a service with

00:27:22.140 --> 00:27:23.900
<v Speaker 3>only thirty days notice, what else can you

00:27:23.900 --> 00:27:26.460
<v Speaker 3>change? It it is the price for other

00:27:26.460 --> 00:27:28.780
<v Speaker 3>services gonna be 10 times this next week

00:27:28.780 --> 00:27:31.020
<v Speaker 3>because they choose that they need to change

00:27:31.020 --> 00:27:32.860
<v Speaker 3>it. So there's there's definitely gonna be fear

00:27:32.860 --> 00:27:33.580
<v Speaker 3>as a result.

00:27:34.615 --> 00:27:37.735
<v Speaker 3>You know, history often repeats. So if that

00:27:37.735 --> 00:27:39.894
<v Speaker 3>is if that is becoming a

00:27:40.135 --> 00:27:41.654
<v Speaker 3>behavioral trend

00:27:41.735 --> 00:27:43.335
<v Speaker 3>to do these kind of things,

00:27:43.655 --> 00:27:45.335
<v Speaker 3>then I think there'll be fear for what

00:27:45.335 --> 00:27:47.810
<v Speaker 3>will happen again in the future. Most

00:27:47.810 --> 00:27:51.170
<v Speaker 3>most providers have EULAs that say, we actually

00:27:51.170 --> 00:27:52.530
<v Speaker 3>reserve the right to change us at any

00:27:52.530 --> 00:27:54.049
<v Speaker 3>time without without any warning,

00:27:54.450 --> 00:27:56.450
<v Speaker 3>and that's part of their their standard agreement.

00:27:56.450 --> 00:27:58.130
<v Speaker 3>So I think there's gonna be fear.

00:27:59.185 --> 00:28:01.905
<v Speaker 3>I don't know whether there's much more impacts,

00:28:01.905 --> 00:28:03.745
<v Speaker 3>but if you can think back when they

00:28:03.745 --> 00:28:06.625
<v Speaker 3>changed the licensing for Docker desktop, and it

00:28:06.625 --> 00:28:08.705
<v Speaker 3>was a huge uproar on that. But Yeah.

00:28:08.705 --> 00:28:10.625
<v Speaker 3>They make they they're making millions

00:28:11.025 --> 00:28:13.840
<v Speaker 3>from Docker desktop licensing. So did it have

00:28:13.840 --> 00:28:15.919
<v Speaker 3>that much of a negative effect on their

00:28:15.919 --> 00:28:18.080
<v Speaker 3>business? The inverse, it had a massive positive

00:28:18.080 --> 00:28:20.080
<v Speaker 3>effect on their business by making that change.

00:28:20.080 --> 00:28:22.480
<v Speaker 3>So I don't it it's hard there. At

00:28:22.480 --> 00:28:23.359
<v Speaker 3>the end of the day,

00:28:23.840 --> 00:28:25.600
<v Speaker 3>if you if you're an open source entity,

00:28:25.600 --> 00:28:28.025
<v Speaker 3>you have to be commercially viable to to

00:28:28.025 --> 00:28:30.345
<v Speaker 3>continue. They have to find ways to monetize

00:28:30.345 --> 00:28:32.425
<v Speaker 3>and, you know, could could could could have

00:28:32.425 --> 00:28:34.745
<v Speaker 3>been, you know, come to better? Absolutely.

00:28:35.945 --> 00:28:37.785
<v Speaker 0>I think this is where I struggle. Right?

00:28:37.785 --> 00:28:39.225
<v Speaker 0>You know, I think Docker

00:28:39.420 --> 00:28:41.500
<v Speaker 0>changed the game for everybody in this community.

00:28:41.500 --> 00:28:42.540
<v Speaker 0>Right? We all have a lot of respect

00:28:42.540 --> 00:28:44.140
<v Speaker 0>for Docker and defend the team and what

00:28:44.140 --> 00:28:46.380
<v Speaker 0>they've done. We want Docker to succeed.

00:28:47.100 --> 00:28:48.300
<v Speaker 0>But like you said, it's not the first

00:28:48.300 --> 00:28:50.460
<v Speaker 0>time they've violated their trust. Like and and

00:28:50.460 --> 00:28:51.580
<v Speaker 0>they've done it so

00:28:51.995 --> 00:28:52.955
<v Speaker 0>catastrophically

00:28:52.955 --> 00:28:55.995
<v Speaker 0>through very poor communication, not really

00:28:56.395 --> 00:28:58.395
<v Speaker 0>bringing people along with them with the changes

00:28:58.395 --> 00:28:59.915
<v Speaker 0>in, hey. This is why we're doing this

00:28:59.915 --> 00:29:01.275
<v Speaker 0>thing and this is what we need to

00:29:01.275 --> 00:29:03.434
<v Speaker 0>to keep our business alive.

00:29:03.835 --> 00:29:05.560
<v Speaker 0>They've just came out with a big delete

00:29:05.560 --> 00:29:07.640
<v Speaker 0>hammer, the big sledgehammer. Went, sorry. It's going

00:29:07.640 --> 00:29:08.440
<v Speaker 0>away now.

00:29:08.840 --> 00:29:10.360
<v Speaker 0>You know, in the Docker desktop one was

00:29:10.360 --> 00:29:13.160
<v Speaker 0>another one. We've seen so many alternatives pop

00:29:13.160 --> 00:29:15.320
<v Speaker 0>up now from Rancher desktop to Podman desktop

00:29:15.320 --> 00:29:16.440
<v Speaker 0>to Colima

00:29:16.440 --> 00:29:18.280
<v Speaker 0>and all this other tooling trying to get

00:29:18.280 --> 00:29:19.480
<v Speaker 0>people alternatives.

00:29:19.480 --> 00:29:22.414
<v Speaker 0>Even recently, Orbstack released the product as well

00:29:22.495 --> 00:29:23.934
<v Speaker 0>to kinda compete with this.

00:29:24.495 --> 00:29:26.175
<v Speaker 0>I I don't know where I am on

00:29:26.175 --> 00:29:27.855
<v Speaker 0>the trust radar here. I

00:29:28.175 --> 00:29:30.575
<v Speaker 0>I still want Docker to succeed, but I'm

00:29:30.575 --> 00:29:32.655
<v Speaker 0>not pushing any more images to Docker Hub.

00:29:32.655 --> 00:29:34.575
<v Speaker 3>Well, we we we just we just pay

00:29:34.575 --> 00:29:35.455
<v Speaker 3>the money and

00:29:36.390 --> 00:29:38.950
<v Speaker 3>a a Docker verified publisher because, you know,

00:29:38.950 --> 00:29:41.990
<v Speaker 3>we get immense value from their technology,

00:29:42.390 --> 00:29:43.909
<v Speaker 3>and it just feels

00:29:44.150 --> 00:29:45.830
<v Speaker 3>like it's a moral obligation

00:29:45.830 --> 00:29:48.150
<v Speaker 3>to to help them as a company succeed

00:29:48.150 --> 00:29:50.870
<v Speaker 3>and grow and keep keep creating the technology

00:29:50.870 --> 00:29:53.655
<v Speaker 3>that's that's changing the game. You know, everybody

00:29:53.655 --> 00:29:56.135
<v Speaker 3>relies on the Mobi project that's almost entirely

00:29:56.135 --> 00:29:59.015
<v Speaker 3>funded, you know, by by Docker, and that

00:29:59.255 --> 00:30:01.575
<v Speaker 3>and that's the effort. It

00:30:02.055 --> 00:30:03.735
<v Speaker 3>just it just felt like the right thing

00:30:03.735 --> 00:30:05.539
<v Speaker 3>to do. It's interesting.

00:30:05.940 --> 00:30:07.540
<v Speaker 3>I don't know if you saw Morentis when

00:30:07.540 --> 00:30:10.020
<v Speaker 3>they started monetizing Lens. They they they went

00:30:10.020 --> 00:30:11.380
<v Speaker 3>through the same kind of thing that Docker

00:30:11.380 --> 00:30:14.020
<v Speaker 3>did with desktop, and they also semi surprised

00:30:14.020 --> 00:30:15.779
<v Speaker 3>the industry and said, hey. By the way,

00:30:15.940 --> 00:30:17.460
<v Speaker 3>you know how how it's open source? Yeah.

00:30:17.460 --> 00:30:19.060
<v Speaker 3>It's not really. The the the version we

00:30:19.060 --> 00:30:20.915
<v Speaker 3>publish is actually our closed source version, so

00:30:20.915 --> 00:30:21.955
<v Speaker 3>the license changed.

00:30:22.195 --> 00:30:24.274
<v Speaker 3>And there's there's also equally,

00:30:24.755 --> 00:30:26.595
<v Speaker 3>you know, strong backlash, and that's why now

00:30:26.595 --> 00:30:28.435
<v Speaker 3>this OpenLens came out of came out of

00:30:28.435 --> 00:30:31.235
<v Speaker 3>nowhere. So it it's kind of you gotta

00:30:31.235 --> 00:30:33.990
<v Speaker 3>be super careful monetizing open source and do

00:30:33.990 --> 00:30:36.630
<v Speaker 3>it, you know, very, very gracefully, gently,

00:30:36.870 --> 00:30:37.830
<v Speaker 3>and transparently.

00:30:37.830 --> 00:30:40.390
<v Speaker 0>I mean, is OpenCourse still a feasible business

00:30:40.390 --> 00:30:41.830
<v Speaker 0>model for OpenCourse?

00:30:41.830 --> 00:30:43.670
<v Speaker 3>That's what we are. I think there's different

00:30:43.830 --> 00:30:45.910
<v Speaker 1>there's ways and ways of doing OpenCourse. Right?

00:30:45.910 --> 00:30:48.390
<v Speaker 1>I mean, when if you OpenCourse part of

00:30:48.390 --> 00:30:50.895
<v Speaker 1>your your business logic sort of thing, do

00:30:50.895 --> 00:30:53.134
<v Speaker 1>you do you accept pull requests from

00:30:53.615 --> 00:30:56.174
<v Speaker 1>people outside of your organization, or is it

00:30:56.655 --> 00:30:57.534
<v Speaker 1>publishing

00:30:57.775 --> 00:31:00.895
<v Speaker 1>sort of broadcasting rather than accepting incoming

00:31:00.895 --> 00:31:01.855
<v Speaker 1>contributions?

00:31:02.095 --> 00:31:04.540
<v Speaker 3>So for us for for us, we actually

00:31:04.540 --> 00:31:07.900
<v Speaker 3>accept PRs into our our Portainer c version.

00:31:08.220 --> 00:31:10.380
<v Speaker 3>We we we got two two code bases,

00:31:10.380 --> 00:31:12.060
<v Speaker 3>Community Edition and Business Edition.

00:31:12.460 --> 00:31:14.620
<v Speaker 3>They're they're they're linked behind the scenes, but

00:31:14.620 --> 00:31:16.700
<v Speaker 3>we accept PRs against the c edition, and

00:31:16.700 --> 00:31:19.020
<v Speaker 3>then we will we we will, ourselves, backport

00:31:19.020 --> 00:31:21.155
<v Speaker 3>it to business edition if we so want.

00:31:21.875 --> 00:31:23.875
<v Speaker 3>So, yeah, we absolutely do. Right. So and

00:31:23.875 --> 00:31:25.635
<v Speaker 1>then if you so want, so there would

00:31:25.635 --> 00:31:28.275
<v Speaker 1>be PRs in the community edition that are

00:31:28.275 --> 00:31:31.155
<v Speaker 1>not present potentially in the business edition. Do

00:31:31.155 --> 00:31:33.075
<v Speaker 1>you then see those two things diverging? And

00:31:33.075 --> 00:31:35.480
<v Speaker 1>at what point does what's open no longer

00:31:35.480 --> 00:31:37.800
<v Speaker 1>match what's in the core as it were?

00:31:37.880 --> 00:31:40.840
<v Speaker 3>So I use so so if if we

00:31:40.840 --> 00:31:42.120
<v Speaker 3>so want, they're probably a little bit too

00:31:42.120 --> 00:31:44.440
<v Speaker 3>openly. Everything is currently and CE is in

00:31:44.440 --> 00:31:46.840
<v Speaker 3>business edition. In the future I ask is

00:31:46.840 --> 00:31:48.920
<v Speaker 1>because my previous company ran on the exact

00:31:48.920 --> 00:31:51.435
<v Speaker 1>same model, but we didn't really find ourselves

00:31:51.435 --> 00:31:52.794
<v Speaker 1>accepting PRs.

00:31:53.115 --> 00:31:53.835
<v Speaker 1>I would

00:31:54.555 --> 00:31:56.475
<v Speaker 3>I would accept PRs all day every day.

00:31:56.475 --> 00:31:58.794
<v Speaker 3>It it it makes the product better,

00:31:59.195 --> 00:32:02.075
<v Speaker 3>and and why why would I not? If

00:32:02.075 --> 00:32:04.155
<v Speaker 3>if someone raises a PR against our open

00:32:04.155 --> 00:32:07.270
<v Speaker 3>source product that competes against the business product,

00:32:07.270 --> 00:32:09.030
<v Speaker 3>I'd still I'll I'll still consider and accept

00:32:09.030 --> 00:32:11.590
<v Speaker 3>it. All I'd say is then, obviously, there's

00:32:11.590 --> 00:32:13.910
<v Speaker 3>not enough value add for that particular feature

00:32:13.910 --> 00:32:15.270
<v Speaker 3>in the business edition, and we we need

00:32:15.270 --> 00:32:16.550
<v Speaker 3>we need to be more creative and to

00:32:16.550 --> 00:32:17.750
<v Speaker 3>come up with with with a new value

00:32:17.750 --> 00:32:18.230
<v Speaker 3>add.

00:32:18.870 --> 00:32:21.535
<v Speaker 3>I think that's what makes a very healthy

00:32:21.535 --> 00:32:22.575
<v Speaker 3>open source

00:32:22.815 --> 00:32:23.615
<v Speaker 3>variant

00:32:23.775 --> 00:32:25.535
<v Speaker 3>is that you don't make it a walled

00:32:25.535 --> 00:32:27.055
<v Speaker 3>garden and close, and you control it. It

00:32:27.055 --> 00:32:28.415
<v Speaker 3>has to be open. And if it's not

00:32:28.415 --> 00:32:30.175
<v Speaker 3>open, then it's it's it is an open

00:32:30.175 --> 00:32:32.255
<v Speaker 3>source. I I I would agree. Yeah. I

00:32:32.255 --> 00:32:33.295
<v Speaker 2>think that this whole

00:32:33.630 --> 00:32:34.590
<v Speaker 2>Docker

00:32:34.990 --> 00:32:37.630
<v Speaker 2>mishandling communication in the last one, and it

00:32:37.630 --> 00:32:39.310
<v Speaker 2>has happened a couple of times, and it

00:32:39.310 --> 00:32:41.070
<v Speaker 2>happened to other companies. Redisyn was one of

00:32:41.070 --> 00:32:42.590
<v Speaker 2>them when they changed the licensing a few

00:32:42.590 --> 00:32:44.430
<v Speaker 2>years back. It happened to a bunch of

00:32:44.430 --> 00:32:46.590
<v Speaker 2>other companies. It's always reminds me of these

00:32:46.590 --> 00:32:48.270
<v Speaker 2>quotes of, like, this is why we cannot

00:32:48.270 --> 00:32:48.910
<v Speaker 2>have nice things.

00:32:50.075 --> 00:32:52.475
<v Speaker 2>It just that's basically as a community,

00:32:52.555 --> 00:32:53.515
<v Speaker 2>we are

00:32:53.915 --> 00:32:56.075
<v Speaker 2>entitled to free stuff. We just think

00:32:56.315 --> 00:32:58.395
<v Speaker 2>that whatever we use is free and should

00:32:58.395 --> 00:32:59.835
<v Speaker 2>remain free forever. Right?

00:33:00.235 --> 00:33:00.635
<v Speaker 2>And when

00:33:02.460 --> 00:33:04.380
<v Speaker 2>a business goes like, oh, no. No. No.

00:33:04.380 --> 00:33:05.740
<v Speaker 2>No, folks. This is not gonna be free

00:33:05.740 --> 00:33:07.419
<v Speaker 2>because we have to make money on this.

00:33:07.419 --> 00:33:09.580
<v Speaker 2>We are paying people and offices and, you

00:33:09.580 --> 00:33:11.260
<v Speaker 2>know, engineers and everything like that. Then everybody

00:33:11.260 --> 00:33:13.820
<v Speaker 2>goes goes crazy. And forget the fact that,

00:33:14.140 --> 00:33:15.419
<v Speaker 2>well, you're probably

00:33:16.015 --> 00:33:18.174
<v Speaker 2>using stuff for free, and you're probably not

00:33:18.174 --> 00:33:19.934
<v Speaker 2>even contributing to them. Right?

00:33:20.255 --> 00:33:20.894
<v Speaker 2>So

00:33:21.375 --> 00:33:23.855
<v Speaker 2>it's a very hard thing to balance. Like

00:33:23.855 --> 00:33:26.815
<v Speaker 2>like like like, balancing open source with commercial

00:33:26.815 --> 00:33:29.750
<v Speaker 2>is very difficult. I think that the last

00:33:29.750 --> 00:33:32.709
<v Speaker 2>one the last Docker announcement was probably more

00:33:32.789 --> 00:33:35.830
<v Speaker 2>a case of mishandling communication than anything else.

00:33:35.830 --> 00:33:37.110
<v Speaker 2>Right? One of the things I was thinking

00:33:37.110 --> 00:33:40.229
<v Speaker 2>about as that whole situation was kinda unfolding

00:33:40.309 --> 00:33:40.870
<v Speaker 2>is

00:33:41.125 --> 00:33:43.284
<v Speaker 2>as a community, if we think that there

00:33:43.284 --> 00:33:45.845
<v Speaker 2>are a bench of stuff, containers, for example,

00:33:45.845 --> 00:33:47.684
<v Speaker 2>that are important. Like, one of the person

00:33:47.684 --> 00:33:49.684
<v Speaker 2>who was very vocal about the Docker change

00:33:49.684 --> 00:33:52.325
<v Speaker 2>was Alexi, the OpenFast founder. He wrote, like,

00:33:52.325 --> 00:33:54.085
<v Speaker 2>a bunch of articles about it, etcetera. And

00:33:54.085 --> 00:33:56.250
<v Speaker 2>for me, I was thinking, like, why don't

00:33:56.250 --> 00:33:57.450
<v Speaker 2>we, as a community,

00:33:57.530 --> 00:33:59.930
<v Speaker 2>use the same model of the CNCF in

00:33:59.930 --> 00:34:01.370
<v Speaker 2>terms of open governance

00:34:01.450 --> 00:34:03.610
<v Speaker 2>and decide, okay. All these open source projects

00:34:03.610 --> 00:34:05.610
<v Speaker 2>that are important enough for everybody

00:34:05.770 --> 00:34:08.090
<v Speaker 2>will be hosted by an independent entity and

00:34:08.090 --> 00:34:11.054
<v Speaker 2>paid for by everybody. Right? So why don't

00:34:11.054 --> 00:34:11.775
<v Speaker 2>we have

00:34:12.094 --> 00:34:16.175
<v Speaker 2>a CNCF equivalent or CNCF themselves that manage

00:34:16.574 --> 00:34:19.614
<v Speaker 2>and runs a version of Docker Hub that

00:34:19.614 --> 00:34:21.295
<v Speaker 2>is free to use for everybody who wants

00:34:21.295 --> 00:34:23.375
<v Speaker 2>to use it, but somehow everybody have to

00:34:23.375 --> 00:34:25.855
<v Speaker 2>contribute to it either financially or through through

00:34:25.855 --> 00:34:26.870
<v Speaker 2>your contributions.

00:34:26.870 --> 00:34:29.030
<v Speaker 2>Right? And this is probably a farfetched idea.

00:34:29.030 --> 00:34:30.710
<v Speaker 2>It would take time to unfold, and I'm

00:34:30.710 --> 00:34:32.870
<v Speaker 2>I'm not sure even it will happen. But

00:34:32.870 --> 00:34:35.510
<v Speaker 2>I just we tend to forget that relying

00:34:35.510 --> 00:34:37.590
<v Speaker 2>on a single provider is never a good

00:34:37.590 --> 00:34:39.414
<v Speaker 2>idea anyway. Right? I can give you an

00:34:39.414 --> 00:34:41.014
<v Speaker 2>example actually of a project I worked on,

00:34:41.014 --> 00:34:43.335
<v Speaker 2>which was even funnier than this. I'm gonna

00:34:44.375 --> 00:34:46.855
<v Speaker 2>So there is a database called Arrow Aerospace

00:34:47.094 --> 00:34:48.375
<v Speaker 2>something

00:34:48.375 --> 00:34:51.094
<v Speaker 2>that's like an in memory database, very popular,

00:34:51.734 --> 00:34:54.020
<v Speaker 2>that one of my customers was using. And

00:34:54.020 --> 00:34:55.380
<v Speaker 2>they were using a version of it which

00:34:55.380 --> 00:34:57.380
<v Speaker 2>has a commercial license, but the free edition

00:34:57.380 --> 00:34:59.460
<v Speaker 2>allows you to run up to, like, 32

00:34:59.460 --> 00:35:02.020
<v Speaker 2>nodes cluster. Right? And you combine them in

00:35:02.020 --> 00:35:04.100
<v Speaker 2>a single, you know, cluster. And

00:35:04.260 --> 00:35:06.339
<v Speaker 2>the company behind came up with the new

00:35:06.339 --> 00:35:08.020
<v Speaker 2>version, and they said, okay. In the new

00:35:08.020 --> 00:35:10.305
<v Speaker 2>version, the open source edition, you can only

00:35:10.305 --> 00:35:12.145
<v Speaker 2>run four nodes clusters. And if you want

00:35:12.145 --> 00:35:13.425
<v Speaker 2>to run more than four nodes, then you

00:35:13.425 --> 00:35:15.505
<v Speaker 2>have to pay for it. The that company,

00:35:15.505 --> 00:35:16.865
<v Speaker 2>that customer I was working with, they're already

00:35:16.865 --> 00:35:19.265
<v Speaker 2>running at max. They were already running 32

00:35:19.345 --> 00:35:21.800
<v Speaker 2>nodes. And what's even worse is that that

00:35:21.800 --> 00:35:24.840
<v Speaker 2>company k said, okay. We're releasing version four,

00:35:24.840 --> 00:35:26.360
<v Speaker 2>and three months from now, we're deleting the

00:35:26.360 --> 00:35:28.600
<v Speaker 2>binaries for version three from our repositories.

00:35:28.760 --> 00:35:31.240
<v Speaker 2>So my customer ended up dumping the binaries

00:35:31.240 --> 00:35:32.600
<v Speaker 2>for version three and putting them in a

00:35:32.600 --> 00:35:34.975
<v Speaker 2>Dropbox. So they can see they cannot

00:35:35.135 --> 00:35:37.455
<v Speaker 2>they they have the binaries going forward. Right?

00:35:37.535 --> 00:35:39.855
<v Speaker 2>So it's I don't know. It's very difficult.

00:35:39.855 --> 00:35:41.455
<v Speaker 2>I I also don't know how to feel

00:35:41.455 --> 00:35:43.535
<v Speaker 2>about this whole thing. I just feel you

00:35:43.535 --> 00:35:45.375
<v Speaker 2>are breaching the trust of your community when

00:35:45.375 --> 00:35:46.735
<v Speaker 2>you do a sudden change and you don't

00:35:46.735 --> 00:35:47.535
<v Speaker 2>communicate it properly,

00:35:48.180 --> 00:35:50.740
<v Speaker 2>and and you don't communicate the intent behind

00:35:50.740 --> 00:35:52.340
<v Speaker 2>it, which is very important. Right?

00:35:52.900 --> 00:35:54.100
<v Speaker 0>Yeah. I think

00:35:54.740 --> 00:35:56.900
<v Speaker 0>when you're having these difficult discussions,

00:35:57.220 --> 00:35:59.060
<v Speaker 0>you always have to start with why the

00:35:59.060 --> 00:36:00.820
<v Speaker 0>decision has been made, and I don't think

00:36:00.820 --> 00:36:03.995
<v Speaker 0>Tucker did that. Like, say, Tucker says, we

00:36:03.995 --> 00:36:06.315
<v Speaker 0>will not be in business in twelve, twenty

00:36:06.315 --> 00:36:08.475
<v Speaker 0>four, thirty six months because here's the costs

00:36:08.475 --> 00:36:10.875
<v Speaker 0>of running Docker's hubs free

00:36:10.875 --> 00:36:11.675
<v Speaker 0>tier,

00:36:11.755 --> 00:36:12.955
<v Speaker 0>and it's not feasible.

00:36:13.355 --> 00:36:14.955
<v Speaker 0>People will go, oh, alright. Okay. We didn't

00:36:14.955 --> 00:36:16.720
<v Speaker 0>owe it. That's that much. And maybe they'll

00:36:16.720 --> 00:36:18.640
<v Speaker 0>have a bit more empathy for the company,

00:36:18.640 --> 00:36:20.960
<v Speaker 0>but the communication didn't come across that way.

00:36:21.040 --> 00:36:23.200
<v Speaker 0>And, also, we're a very entitled bunch. Right?

00:36:23.200 --> 00:36:24.000
<v Speaker 0>Developers.

00:36:24.160 --> 00:36:25.920
<v Speaker 0>Oh, you gave me this thing for free?

00:36:25.920 --> 00:36:27.520
<v Speaker 0>Oh, cool. I'll I'll use it. I'll use

00:36:27.520 --> 00:36:29.120
<v Speaker 0>it. I'll it. Oh, you're taking it away.

00:36:29.120 --> 00:36:30.835
<v Speaker 0>I hate you so much. I mean, like

00:36:31.235 --> 00:36:33.075
<v Speaker 0>and I've seen lots of people move to

00:36:33.075 --> 00:36:35.475
<v Speaker 0>GHCR. Like, GitHub's container registry seems to just

00:36:35.475 --> 00:36:37.235
<v Speaker 0>become in the new default because it's where

00:36:37.235 --> 00:36:38.435
<v Speaker 0>all our code lives.

00:36:38.835 --> 00:36:40.275
<v Speaker 0>But how long are they gonna run that

00:36:40.275 --> 00:36:42.435
<v Speaker 2>for free? Exactly. Do we have a guarantee

00:36:42.435 --> 00:36:44.515
<v Speaker 2>that Microsoft ten years from now, they're gonna

00:36:44.515 --> 00:36:46.569
<v Speaker 2>go like, okay. GitHub is

00:36:46.569 --> 00:36:47.770
<v Speaker 2>not free anymore. Right?

00:36:48.569 --> 00:36:50.010
<v Speaker 1>And we're back to, you know, have a

00:36:50.010 --> 00:36:51.930
<v Speaker 1>server in your basement and surf surf all

00:36:51.930 --> 00:36:54.250
<v Speaker 1>your own containers images yourself, I guess.

00:36:55.210 --> 00:36:56.010
<v Speaker 2>Pretty much.

00:36:57.690 --> 00:37:00.410
<v Speaker 0>Alright. Let's let's see something positive about Docker.

00:37:01.025 --> 00:37:03.185
<v Speaker 0>I'm I'm just really excited by their Wasm

00:37:03.185 --> 00:37:04.705
<v Speaker 0>announcements recently.

00:37:04.705 --> 00:37:07.185
<v Speaker 0>I love that they're opening up hybrid architectures

00:37:07.185 --> 00:37:09.745
<v Speaker 0>with WebAssembly and containers side by side. And

00:37:09.745 --> 00:37:11.425
<v Speaker 0>the fact that I can do this with

00:37:11.425 --> 00:37:13.665
<v Speaker 0>kind of Docker image pool and OCI artifacts,

00:37:13.665 --> 00:37:15.670
<v Speaker 0>but not only that, the enhanced support for

00:37:15.670 --> 00:37:18.950
<v Speaker 0>Docker Compose where I can run WebAssembly binaries

00:37:18.950 --> 00:37:21.910
<v Speaker 0>as services speaking to a Postgres database running

00:37:21.910 --> 00:37:25.110
<v Speaker 0>in a container and everything works together cohesively.

00:37:25.110 --> 00:37:26.950
<v Speaker 0>And I think this is really exciting for

00:37:26.950 --> 00:37:27.590
<v Speaker 0>WebAssembly

00:37:27.835 --> 00:37:29.995
<v Speaker 0>and for Docker. So I'm curious if anyone

00:37:29.995 --> 00:37:31.755
<v Speaker 0>has any any thoughts of the clip of

00:37:31.755 --> 00:37:32.795
<v Speaker 0>it. Do they like it? Do they not

00:37:32.795 --> 00:37:35.275
<v Speaker 0>like it? Feel free to share. So for

00:37:35.275 --> 00:37:37.755
<v Speaker 3>edge use cases, I think it's I think

00:37:37.755 --> 00:37:38.875
<v Speaker 3>it's quite amazing. The

00:37:39.675 --> 00:37:42.390
<v Speaker 3>there's still a real problem at the true

00:37:42.390 --> 00:37:45.270
<v Speaker 3>edge, and I'm talking around the

00:37:45.750 --> 00:37:46.950
<v Speaker 3>industrial edge

00:37:47.030 --> 00:37:49.030
<v Speaker 3>where you've got micro

00:37:49.190 --> 00:37:50.470
<v Speaker 3>micro devices,

00:37:50.470 --> 00:37:51.270
<v Speaker 3>which are

00:37:51.510 --> 00:37:53.670
<v Speaker 3>you know, they they are they are computers.

00:37:54.565 --> 00:37:57.845
<v Speaker 3>They have an arm 32 CPU.

00:37:57.845 --> 00:38:00.005
<v Speaker 3>They've got a gig of RAM.

00:38:00.645 --> 00:38:01.205
<v Speaker 3>And,

00:38:01.525 --> 00:38:03.605
<v Speaker 3>really, your only choice today

00:38:03.845 --> 00:38:04.965
<v Speaker 3>for running

00:38:05.125 --> 00:38:07.685
<v Speaker 3>containers at that type of edge device is

00:38:07.685 --> 00:38:10.480
<v Speaker 3>Docker. Everyone everyone talks a great story about

00:38:10.480 --> 00:38:12.480
<v Speaker 3>Kubernetes at the edge. Not

00:38:12.480 --> 00:38:13.359
<v Speaker 3>at that edge.

00:38:14.319 --> 00:38:16.240
<v Speaker 3>No no nowhere near.

00:38:16.400 --> 00:38:17.280
<v Speaker 3>And so

00:38:17.599 --> 00:38:20.160
<v Speaker 3>if your only option is to run full

00:38:20.160 --> 00:38:21.520
<v Speaker 3>fat containers on that device,

00:38:22.335 --> 00:38:23.055
<v Speaker 3>still,

00:38:23.855 --> 00:38:26.015
<v Speaker 3>a slow ARM 32 CPU and one gig

00:38:26.015 --> 00:38:28.255
<v Speaker 3>of RAM only goes so far. And so

00:38:28.255 --> 00:38:30.815
<v Speaker 3>the more efficiency that you can you can

00:38:30.815 --> 00:38:31.855
<v Speaker 3>get out of it,

00:38:32.255 --> 00:38:34.415
<v Speaker 3>the the faster, I think, we're going to

00:38:34.415 --> 00:38:36.974
<v Speaker 3>see the adoption of things like industry four

00:38:37.830 --> 00:38:41.030
<v Speaker 3>because, yeah, industry invest in technology, and they

00:38:41.030 --> 00:38:43.830
<v Speaker 3>they expect their technology last ten plus years.

00:38:44.070 --> 00:38:46.390
<v Speaker 3>They're not gonna go refresh their entire,

00:38:46.870 --> 00:38:50.310
<v Speaker 3>you know, hardware estate overnight because

00:38:49.955 --> 00:38:51.715
<v Speaker 3>this they they they wanna do containers. They

00:38:51.715 --> 00:38:53.715
<v Speaker 3>wanna find a way to repurpose what's there,

00:38:53.715 --> 00:38:55.635
<v Speaker 3>and it's old and slow.

00:38:55.875 --> 00:38:58.115
<v Speaker 3>So I think WASM at that edge is

00:38:58.115 --> 00:39:00.195
<v Speaker 3>gonna be amazing because it get it actually

00:39:00.195 --> 00:39:02.035
<v Speaker 3>gets so much more efficiency or it's so

00:39:02.035 --> 00:39:04.520
<v Speaker 3>much more efficient way of delivering applications at

00:39:04.520 --> 00:39:06.120
<v Speaker 3>that edge. In the in the data center,

00:39:06.120 --> 00:39:08.600
<v Speaker 3>I'm I'm not convinced. But That's that's an

00:39:08.600 --> 00:39:09.560
<v Speaker 2>interesting take.

00:39:09.720 --> 00:39:11.880
<v Speaker 2>I think I I see I see, actually,

00:39:11.880 --> 00:39:13.560
<v Speaker 2>there is quite a lot of movements across

00:39:13.560 --> 00:39:16.360
<v Speaker 2>the major cloud providers to start supporting

00:39:16.525 --> 00:39:18.205
<v Speaker 2>Wasm for serverless

00:39:18.445 --> 00:39:21.485
<v Speaker 2>stuff. So Wasm mass functions or Wasm as,

00:39:21.485 --> 00:39:24.605
<v Speaker 2>you know, for container service type platforms,

00:39:25.885 --> 00:39:27.405
<v Speaker 2>which you can do today, I guess, like,

00:39:27.405 --> 00:39:29.565
<v Speaker 2>with the with the Docker support for Wasm.

00:39:29.565 --> 00:39:31.325
<v Speaker 2>You could basically write a Wasm module and

00:39:31.325 --> 00:39:33.160
<v Speaker 2>run it inside Docker container. And if your

00:39:33.160 --> 00:39:35.000
<v Speaker 2>cloud provider allows you to run Docker containers

00:39:35.000 --> 00:39:36.520
<v Speaker 2>on top of the platform, it would just

00:39:36.520 --> 00:39:39.080
<v Speaker 2>work. Right? I think for functions, I see

00:39:39.160 --> 00:39:40.120
<v Speaker 2>a value,

00:39:40.440 --> 00:39:42.440
<v Speaker 2>especially that basically WASM

00:39:42.760 --> 00:39:44.840
<v Speaker 2>programs or libraries are very fast to start.

00:39:45.174 --> 00:39:48.695
<v Speaker 2>And for specific specifically functions of service,

00:39:48.775 --> 00:39:50.694
<v Speaker 2>that have always been a problem, the startup

00:39:50.694 --> 00:39:52.454
<v Speaker 2>time or the cold start time or whatever

00:39:52.454 --> 00:39:53.655
<v Speaker 2>you want to call it. Right?

00:39:53.974 --> 00:39:56.375
<v Speaker 2>So if wasn't can solve that by giving

00:39:56.375 --> 00:39:58.695
<v Speaker 2>you a fast to start binary, that's probably

00:39:59.015 --> 00:40:00.775
<v Speaker 2>a good place for it to be. Right?

00:40:02.590 --> 00:40:04.350
<v Speaker 2>But but, yes, I I think I have

00:40:04.350 --> 00:40:05.630
<v Speaker 2>to agree with you in the sense that

00:40:05.630 --> 00:40:07.790
<v Speaker 2>I don't see it as something where

00:40:07.950 --> 00:40:10.190
<v Speaker 2>five five years from now, everybody will say,

00:40:10.190 --> 00:40:12.430
<v Speaker 2>okay. Right. We're just gonna rewrite all our.

00:40:12.830 --> 00:40:14.110
<v Speaker 2>That's probably not gonna happen.

00:40:14.675 --> 00:40:17.155
<v Speaker 2>So the other one probably is this. The

00:40:17.155 --> 00:40:20.595
<v Speaker 2>sandboxing aspect of Wasm is a very competing

00:40:20.755 --> 00:40:23.075
<v Speaker 2>feature to a lot of companies that allow

00:40:23.075 --> 00:40:24.915
<v Speaker 2>you to run third party code on their

00:40:24.915 --> 00:40:27.395
<v Speaker 2>platform, like cloud providers with functions and stuff

00:40:27.395 --> 00:40:29.880
<v Speaker 2>like that. Right? Like, as a cloud provider,

00:40:30.040 --> 00:40:32.600
<v Speaker 2>you should inherently not trust people shipping

00:40:32.920 --> 00:40:34.440
<v Speaker 2>code and running it on top of your

00:40:34.440 --> 00:40:35.240
<v Speaker 2>infrastructure.

00:40:35.320 --> 00:40:37.080
<v Speaker 2>And the more you can sandbox that code

00:40:37.080 --> 00:40:39.720
<v Speaker 2>away from other customers running on the same

00:40:39.720 --> 00:40:41.435
<v Speaker 2>host, the better it is. And Wasm has

00:40:41.435 --> 00:40:42.955
<v Speaker 2>a very good sandboxing

00:40:43.275 --> 00:40:45.675
<v Speaker 2>environment. Right? So, yeah, that's that's my take

00:40:45.675 --> 00:40:47.595
<v Speaker 2>on it. I I think it's gonna we'll

00:40:47.595 --> 00:40:49.115
<v Speaker 2>have to wait. This this is gonna be

00:40:49.195 --> 00:40:51.275
<v Speaker 2>this is gonna unfold over the next five

00:40:51.275 --> 00:40:52.075
<v Speaker 2>to ten years.

00:40:52.555 --> 00:40:54.475
<v Speaker 0>Yeah. I I wanna quantify some of the

00:40:54.475 --> 00:40:56.580
<v Speaker 0>things you mentioned there. So,

00:40:57.060 --> 00:40:58.420
<v Speaker 0>Cloudflare announced,

00:40:58.580 --> 00:41:01.460
<v Speaker 0>their workers' project, which is their, functions as

00:41:01.460 --> 00:41:04.020
<v Speaker 0>a serverless serverless kind of workload thing, supports

00:41:04.020 --> 00:41:06.260
<v Speaker 0>WebAssembly workloads. They announced that, like, two weeks

00:41:06.260 --> 00:41:08.900
<v Speaker 0>ago, which is cool. And they have 256

00:41:08.900 --> 00:41:10.740
<v Speaker 0>Edge locations. I know Neil's gonna be like,

00:41:10.740 --> 00:41:12.455
<v Speaker 0>that's not edge, but, you know, they they

00:41:12.455 --> 00:41:14.135
<v Speaker 0>have these locations out there

00:41:14.455 --> 00:41:16.215
<v Speaker 0>for people to run these workloads. And as

00:41:16.215 --> 00:41:18.935
<v Speaker 0>far as quantifying it, WebAssembly

00:41:19.495 --> 00:41:22.775
<v Speaker 0>run times binaries could be started in microseconds

00:41:22.855 --> 00:41:24.935
<v Speaker 0>compared to, like, a container, which we're talking,

00:41:24.935 --> 00:41:27.830
<v Speaker 0>what, five hundred milliseconds probably to start a

00:41:27.830 --> 00:41:29.910
<v Speaker 0>container set the sandbox up, especially in a

00:41:29.910 --> 00:41:31.750
<v Speaker 0>Kubernetes environment. It's a little bit slower.

00:41:32.070 --> 00:41:33.990
<v Speaker 0>And I think that's quite interesting. But but

00:41:33.990 --> 00:41:36.150
<v Speaker 0>there's also the data aspect. It's like with

00:41:36.790 --> 00:41:38.790
<v Speaker 0>container runtimes, have to pull the image, and

00:41:38.790 --> 00:41:41.375
<v Speaker 0>container images are not small. Right? Yes. We

00:41:41.375 --> 00:41:43.615
<v Speaker 0>have container images on the megs, but we've

00:41:43.615 --> 00:41:45.135
<v Speaker 0>all seen them tens of megs, hundreds of

00:41:45.135 --> 00:41:47.615
<v Speaker 0>megs, and even gigs of container images.

00:41:47.775 --> 00:41:49.454
<v Speaker 0>So even the pool time on that can

00:41:49.454 --> 00:41:50.175
<v Speaker 0>be slow.

00:41:50.415 --> 00:41:52.255
<v Speaker 0>Whereas WebAssembly

00:41:52.335 --> 00:41:55.260
<v Speaker 0>binaries, again, are very, very small. Typically, four

00:41:55.260 --> 00:41:57.180
<v Speaker 0>to eight meg depending on the complexity of

00:41:57.180 --> 00:41:59.420
<v Speaker 0>the application. Of course, your mileage may vary.

00:41:59.420 --> 00:42:02.140
<v Speaker 0>I'm not saying all of them are. But

00:42:02.140 --> 00:42:04.380
<v Speaker 0>I think at those numbers, that is a

00:42:04.380 --> 00:42:05.340
<v Speaker 0>really compelling

00:42:05.420 --> 00:42:08.380
<v Speaker 0>story for developers who wanna do things that

00:42:07.845 --> 00:42:10.005
<v Speaker 0>way. And then the sandbox is just the

00:42:10.005 --> 00:42:11.605
<v Speaker 0>kind of cherry on the top. Right? It's

00:42:11.605 --> 00:42:13.685
<v Speaker 0>like you get all of those benefits without

00:42:13.685 --> 00:42:15.525
<v Speaker 0>having to deal with Linux c groups, without

00:42:15.525 --> 00:42:17.285
<v Speaker 0>having to worry about the architecture of the

00:42:17.285 --> 00:42:18.005
<v Speaker 0>application.

00:42:18.165 --> 00:42:20.005
<v Speaker 0>Yeah. Go cross compiles, but am I cross

00:42:20.005 --> 00:42:22.325
<v Speaker 0>compiling for arms? Am I cross compiling for

00:42:22.325 --> 00:42:24.339
<v Speaker 0>x a h six? Like, these are all

00:42:24.339 --> 00:42:26.500
<v Speaker 0>concerns that I hope we don't need to

00:42:26.500 --> 00:42:27.300
<v Speaker 0>worry about.

00:42:27.940 --> 00:42:29.460
<v Speaker 0>And I I do actually agree. I don't

00:42:29.460 --> 00:42:31.300
<v Speaker 0>think we're all gonna be writing WebAssembly in

00:42:31.300 --> 00:42:33.060
<v Speaker 0>five years, but I do think we'll be

00:42:33.060 --> 00:42:36.420
<v Speaker 0>writing a mix of WebAssembly complemented with container

00:42:36.420 --> 00:42:37.060
<v Speaker 0>based workloads.

00:42:37.464 --> 00:42:40.425
<v Speaker 2>Another another space where I am seeing WebAssembly

00:42:40.425 --> 00:42:42.665
<v Speaker 2>also growing very fast is

00:42:42.984 --> 00:42:44.265
<v Speaker 2>I don't know how much you are familiar

00:42:44.265 --> 00:42:46.425
<v Speaker 2>with Invoice, the the proxy.

00:42:46.505 --> 00:42:49.385
<v Speaker 2>Mhmm. Invoice supports WebAssembly as as a filter.

00:42:49.385 --> 00:42:51.545
<v Speaker 2>So you can Invoice is a very extendable

00:42:51.120 --> 00:42:52.400
<v Speaker 2>proxy, and you can,

00:42:52.880 --> 00:42:55.360
<v Speaker 2>like, add filters to it, and those filters

00:42:55.360 --> 00:42:57.360
<v Speaker 2>can be written in Lua or in WebAssembly.

00:42:57.360 --> 00:42:59.840
<v Speaker 2>Right? And with that, you can actually implement

00:42:59.840 --> 00:43:02.080
<v Speaker 2>a lot of complex logic at the filter

00:43:02.080 --> 00:43:04.320
<v Speaker 2>level so you can do authentication, authorization, and

00:43:04.320 --> 00:43:07.125
<v Speaker 2>batch of extra things, rate limiting, for example,

00:43:07.285 --> 00:43:09.445
<v Speaker 2>stuff like that. And Envoy,

00:43:09.845 --> 00:43:12.005
<v Speaker 2>although it started with Lyft, it is being

00:43:12.005 --> 00:43:12.725
<v Speaker 2>adopted.

00:43:13.445 --> 00:43:15.685
<v Speaker 2>We are changing all our load balances to

00:43:15.685 --> 00:43:17.685
<v Speaker 2>be Envoy based at Google. I I know

00:43:17.685 --> 00:43:19.870
<v Speaker 2>at least one company, Spotify. I know that

00:43:19.870 --> 00:43:21.550
<v Speaker 2>they they are running Envoy as their edge

00:43:21.550 --> 00:43:23.870
<v Speaker 2>proxy. They're not doing with assembly today, but

00:43:23.870 --> 00:43:25.550
<v Speaker 2>they're thinking about it. So

00:43:25.950 --> 00:43:27.950
<v Speaker 2>and I think probably Neil would now agree

00:43:27.950 --> 00:43:29.950
<v Speaker 2>with with this. I I still think this

00:43:29.950 --> 00:43:31.550
<v Speaker 2>is an edge case where you're running a

00:43:31.550 --> 00:43:33.285
<v Speaker 2>proxy at the edge of your network and

00:43:33.845 --> 00:43:35.845
<v Speaker 2>pushing a bunch of that logic that you're

00:43:35.845 --> 00:43:37.204
<v Speaker 2>doing in the back end to the proxy

00:43:37.204 --> 00:43:37.925
<v Speaker 2>layer.

00:43:38.005 --> 00:43:40.484
<v Speaker 2>You know, SSL termination is the something we've

00:43:40.484 --> 00:43:42.484
<v Speaker 2>been doing for a while, but, like, authentication

00:43:42.484 --> 00:43:44.725
<v Speaker 2>authorization, blah blah, closer to the user

00:43:45.045 --> 00:43:47.380
<v Speaker 2>is is is of value. Right? And I

00:43:47.380 --> 00:43:50.420
<v Speaker 2>think the reason why Envoy and WASM are

00:43:50.740 --> 00:43:53.859
<v Speaker 2>becoming interesting is because all the other proxies

00:43:53.859 --> 00:43:55.940
<v Speaker 2>that exist for a while have not been

00:43:55.940 --> 00:43:57.940
<v Speaker 2>innovating that much. Like, NGINX did not change

00:43:57.940 --> 00:44:00.260
<v Speaker 2>much in the last ten, fifteen years. HAProxy

00:44:00.260 --> 00:44:02.180
<v Speaker 2>did not change much in the last ten,

00:44:02.180 --> 00:44:04.795
<v Speaker 2>fifteen years. Right? They probably support HTTP too,

00:44:04.795 --> 00:44:06.955
<v Speaker 2>but, like, who cares? Right? So so

00:44:07.755 --> 00:44:09.195
<v Speaker 2>so, yeah, I I I I see that

00:44:09.195 --> 00:44:11.355
<v Speaker 2>as another kind of area that would be

00:44:11.355 --> 00:44:13.515
<v Speaker 2>interesting to look at or to keep an

00:44:13.515 --> 00:44:13.995
<v Speaker 2>eye on.

00:44:14.795 --> 00:44:17.579
<v Speaker 0>Yeah. I think WebAssembly is an extensibility model.

00:44:17.579 --> 00:44:19.019
<v Speaker 0>It's definitely on the rise too. Like you

00:44:19.019 --> 00:44:20.780
<v Speaker 0>said, with with Envoy,

00:44:21.500 --> 00:44:23.579
<v Speaker 0>Red Panda has, like, a built in WebAssembly

00:44:23.579 --> 00:44:25.980
<v Speaker 0>runtime for the stream transformations on events going

00:44:25.980 --> 00:44:26.940
<v Speaker 0>to the system.

00:44:27.259 --> 00:44:29.525
<v Speaker 0>And there's a really cool framework that I

00:44:29.525 --> 00:44:30.965
<v Speaker 0>don't remember the name, and I'm not gonna

00:44:30.965 --> 00:44:33.205
<v Speaker 0>remember it. But it's like a desktop extension

00:44:33.205 --> 00:44:35.365
<v Speaker 0>model. So if you write desktop apps, you

00:44:35.365 --> 00:44:37.045
<v Speaker 0>can now write WebAssembly modules that get hooked

00:44:37.045 --> 00:44:38.965
<v Speaker 0>into it, and it makes it run on

00:44:38.965 --> 00:44:41.125
<v Speaker 0>Mac, Linux, and Windows without having to worry

00:44:41.125 --> 00:44:43.045
<v Speaker 0>about anything else. I think that's quite a

00:44:43.045 --> 00:44:44.165
<v Speaker 0>interesting use case too.

00:44:44.760 --> 00:44:45.480
<v Speaker 0>Alright.

00:44:45.720 --> 00:44:46.520
<v Speaker 0>We are

00:44:46.840 --> 00:44:49.480
<v Speaker 0>very quickly running out of time. So unless

00:44:49.480 --> 00:44:51.320
<v Speaker 0>everybody would like to share more on WebAssembly,

00:44:51.320 --> 00:44:52.680
<v Speaker 0>I'm gonna suggest that we move on to

00:44:52.680 --> 00:44:55.080
<v Speaker 0>our final topic for today, which is Kubernetes.

00:44:55.240 --> 00:44:55.720
<v Speaker 0>Any

00:44:56.360 --> 00:44:58.680
<v Speaker 0>last words on WebAssembly? Kubernetes, it is.

00:44:59.454 --> 00:45:00.255
<v Speaker 3>Kubernetes.

00:45:02.255 --> 00:45:03.375
<v Speaker 0>Awesome. Well,

00:45:03.694 --> 00:45:05.295
<v Speaker 0>I'll throw this one over to you, Adele,

00:45:05.295 --> 00:45:08.495
<v Speaker 0>since you've already mentioned it. But very recently,

00:45:08.895 --> 00:45:11.454
<v Speaker 0>register change as part of Kubernetes

00:45:11.870 --> 00:45:13.630
<v Speaker 0>is a a big deal. People need to

00:45:13.630 --> 00:45:14.990
<v Speaker 0>know well, I guess it's not as important

00:45:14.990 --> 00:45:16.830
<v Speaker 0>anymore because of the automatic redirect, but there's

00:45:16.830 --> 00:45:18.270
<v Speaker 0>still things people need to know. So maybe

00:45:18.270 --> 00:45:19.630
<v Speaker 0>you could share a little bit on what's

00:45:19.630 --> 00:45:21.630
<v Speaker 0>happening and what's important for people to take

00:45:21.630 --> 00:45:23.870
<v Speaker 0>away. Yeah. So a little bit of context.

00:45:24.915 --> 00:45:27.155
<v Speaker 2>Kubernetes was up to

00:45:27.635 --> 00:45:28.995
<v Speaker 2>1.26,

00:45:28.995 --> 00:45:30.675
<v Speaker 2>which was released December.

00:45:30.835 --> 00:45:34.195
<v Speaker 2>They were pushing all their images to k8s.gcr.io.

00:45:34.195 --> 00:45:36.995
<v Speaker 2>So GCR stands for Google Container Container

00:45:36.995 --> 00:45:37.795
<v Speaker 2>Registry,

00:45:37.875 --> 00:45:39.795
<v Speaker 2>which is a Google managed version of Docker

00:45:39.795 --> 00:45:42.130
<v Speaker 2>Hub, essentially, or Docker registry.

00:45:42.450 --> 00:45:43.010
<v Speaker 2>And

00:45:43.650 --> 00:45:45.810
<v Speaker 2>k8s.gcr.i0

00:45:45.810 --> 00:45:47.010
<v Speaker 2>was a subdomain

00:45:47.010 --> 00:45:50.690
<v Speaker 2>that Google created specifically for Kubernetes. Right? It

00:45:50.690 --> 00:45:52.290
<v Speaker 2>was kind of like its own instance. It

00:45:52.290 --> 00:45:54.130
<v Speaker 2>did not share infrastructure with the rest of

00:45:54.130 --> 00:45:55.730
<v Speaker 2>the container registry space.

00:45:56.415 --> 00:45:58.175
<v Speaker 2>So the creates, like, a subdomain, and they

00:45:58.175 --> 00:45:59.855
<v Speaker 2>just give it to the community. And, you

00:45:59.855 --> 00:46:01.455
<v Speaker 2>know, and then, you know, I talked about

00:46:01.455 --> 00:46:03.135
<v Speaker 2>this earlier. They realized they were running out

00:46:03.135 --> 00:46:05.535
<v Speaker 2>of money because, you know, spending way too

00:46:05.535 --> 00:46:06.655
<v Speaker 2>much money on egress.

00:46:06.895 --> 00:46:08.735
<v Speaker 2>So they decided to do the migration. And

00:46:08.735 --> 00:46:12.175
<v Speaker 2>the migration today or the migration essentially was

00:46:11.400 --> 00:46:14.440
<v Speaker 2>we're gonna move from kxs.register.i0

00:46:14.440 --> 00:46:16.520
<v Speaker 2>to word registry dot Kubernetes or dot dot

00:46:16.520 --> 00:46:18.520
<v Speaker 2>k x s dot I o, which is

00:46:18.520 --> 00:46:19.320
<v Speaker 2>essentially

00:46:20.279 --> 00:46:22.359
<v Speaker 2>if you care care about the implementation detail,

00:46:22.359 --> 00:46:24.359
<v Speaker 2>it's a proxy running on top of Cloud

00:46:24.359 --> 00:46:26.835
<v Speaker 2>Run, which does the redirection. It's a very

00:46:26.835 --> 00:46:28.035
<v Speaker 2>low low

00:46:28.755 --> 00:46:31.235
<v Speaker 2>low weight Go binary. The code is open

00:46:31.235 --> 00:46:32.995
<v Speaker 2>source. You can read it. And, essentially, what

00:46:32.995 --> 00:46:34.515
<v Speaker 2>it does, it receives the request. It looks

00:46:34.515 --> 00:46:36.595
<v Speaker 2>at the IP address, and it uses a

00:46:36.595 --> 00:46:37.235
<v Speaker 2>Go package,

00:46:37.660 --> 00:46:39.740
<v Speaker 2>which which which can give you the list

00:46:39.740 --> 00:46:42.380
<v Speaker 2>of known IP addresses that AWS use. So

00:46:42.380 --> 00:46:44.700
<v Speaker 2>if your traffic is coming if request is

00:46:44.700 --> 00:46:45.820
<v Speaker 2>coming from AWS,

00:46:45.820 --> 00:46:48.860
<v Speaker 2>it forwards toward the container registry of AWS.

00:46:48.860 --> 00:46:51.500
<v Speaker 2>Right? So the images are still technically mirrored

00:46:51.500 --> 00:46:54.685
<v Speaker 2>across both Google Cloud and AWS,

00:46:54.685 --> 00:46:56.285
<v Speaker 2>and maybe they are planning to add more

00:46:56.285 --> 00:46:58.205
<v Speaker 2>cloud cloud providers later. What's happened basically is

00:46:58.205 --> 00:47:00.525
<v Speaker 2>AWS came to the Kubernetes community, and they

00:47:00.525 --> 00:47:02.525
<v Speaker 2>said, we're gonna give you money

00:47:02.925 --> 00:47:05.005
<v Speaker 2>to be able to host stuff on AWS.

00:47:05.005 --> 00:47:07.660
<v Speaker 2>Right? And maybe later, more more cloud providers

00:47:07.660 --> 00:47:08.860
<v Speaker 2>will chime in, and they would be able

00:47:08.860 --> 00:47:10.700
<v Speaker 2>to do the same. But, essentially, now when

00:47:10.700 --> 00:47:13.420
<v Speaker 2>when Kubernetes is built, they will

00:47:13.740 --> 00:47:16.540
<v Speaker 2>push all the artifacts toward old cloud providers.

00:47:16.540 --> 00:47:18.620
<v Speaker 2>They're mirroring them on Google Cloud and AWS

00:47:18.620 --> 00:47:20.984
<v Speaker 2>and maybe Azure in the future. And then

00:47:20.984 --> 00:47:24.105
<v Speaker 2>this proxy, this little Go binary,

00:47:24.184 --> 00:47:26.184
<v Speaker 2>just forwards depends on which the IP where

00:47:26.184 --> 00:47:28.184
<v Speaker 2>the IP is coming from. Right? And that's

00:47:28.184 --> 00:47:30.664
<v Speaker 2>gonna help a lot with pull time. So

00:47:30.664 --> 00:47:32.184
<v Speaker 2>if you're on AWS and you're pulling for

00:47:32.184 --> 00:47:33.785
<v Speaker 2>the new Container Registry, you will see a

00:47:33.785 --> 00:47:34.690
<v Speaker 2>significant improvement

00:47:35.250 --> 00:47:37.730
<v Speaker 2>in terms of the pull pull speed. Right?

00:47:37.730 --> 00:47:39.410
<v Speaker 2>And, yeah, you just reduce the cost on

00:47:39.410 --> 00:47:41.330
<v Speaker 2>a single cloud provider and kinda distribute across

00:47:41.330 --> 00:47:43.330
<v Speaker 2>multiple cloud providers. So that's the context.

00:47:43.650 --> 00:47:45.170
<v Speaker 2>Do you know what that is? That's multi

00:47:45.170 --> 00:47:45.810
<v Speaker 1>cloud.

00:47:46.290 --> 00:47:48.290
<v Speaker 2>That's multi cloud. Yeah. That's actually very helpful.

00:47:48.290 --> 00:47:49.890
<v Speaker 2>It is. I was waiting

00:47:50.535 --> 00:47:52.455
<v Speaker 2>was waiting for somebody to make a comment.

00:47:53.655 --> 00:47:55.255
<v Speaker 2>And and, actually, you know what it is,

00:47:55.255 --> 00:47:56.855
<v Speaker 2>to be honest with you? It's basically what

00:47:56.855 --> 00:47:58.615
<v Speaker 2>we used to do with Linux packages. It's

00:47:58.615 --> 00:48:01.734
<v Speaker 2>mirrored Linux packages across multiple servers. Right? It

00:48:01.734 --> 00:48:03.494
<v Speaker 2>used to be a long time. I I

00:48:03.575 --> 00:48:05.974
<v Speaker 2>when I was living in Morocco, I did

00:48:05.340 --> 00:48:07.100
<v Speaker 2>establish a mirror for APT.

00:48:07.100 --> 00:48:08.940
<v Speaker 2>In Morocco, I bought a bunch of servers,

00:48:09.100 --> 00:48:11.100
<v Speaker 2>and we established we we we we we

00:48:11.820 --> 00:48:14.140
<v Speaker 2>up set up a mirror for APT packages.

00:48:14.380 --> 00:48:16.460
<v Speaker 2>That's essentially what this is, except it's done

00:48:16.460 --> 00:48:18.300
<v Speaker 2>by the community, not by a bunch of

00:48:18.300 --> 00:48:20.555
<v Speaker 2>volunteers. Right? How is it not just a

00:48:20.555 --> 00:48:22.475
<v Speaker 3>CDN? It is a CDN. A problem.

00:48:22.954 --> 00:48:25.275
<v Speaker 3>Is a CDN. I'm I'm surprised that that

00:48:25.275 --> 00:48:27.035
<v Speaker 3>Google just just didn't host all images on

00:48:27.035 --> 00:48:27.835
<v Speaker 3>a CDN.

00:48:27.994 --> 00:48:29.994
<v Speaker 2>Well, I think that the reason is because

00:48:30.155 --> 00:48:30.875
<v Speaker 2>containers

00:48:31.080 --> 00:48:33.720
<v Speaker 2>require a very specific implementation of the registry

00:48:33.720 --> 00:48:36.040
<v Speaker 2>itself. Right? The registry API is very specific.

00:48:36.520 --> 00:48:37.960
<v Speaker 2>It's not like it's not like an a

00:48:37.960 --> 00:48:39.960
<v Speaker 2>picture or like a CSS file that you

00:48:39.960 --> 00:48:41.640
<v Speaker 2>can just put on an HTTP server. That's

00:48:41.640 --> 00:48:44.440
<v Speaker 2>due to the client implementation of the kubelet

00:48:44.440 --> 00:48:46.735
<v Speaker 2>on Kubernetes because the kubelet is not just

00:48:46.735 --> 00:48:49.215
<v Speaker 2>doing an HTTP pull request. It's using

00:48:49.535 --> 00:48:52.975
<v Speaker 2>the the Docker registry client's library to pull

00:48:52.975 --> 00:48:54.655
<v Speaker 2>the image. Right? But I would agree with

00:48:54.655 --> 00:48:56.335
<v Speaker 2>you. If if it was if images could

00:48:56.335 --> 00:48:57.295
<v Speaker 2>be pulled through

00:48:57.740 --> 00:49:00.460
<v Speaker 2>a standard HTTP request, then what's what why

00:49:00.460 --> 00:49:02.059
<v Speaker 2>are we bothering with this? We could just

00:49:02.059 --> 00:49:04.059
<v Speaker 2>implement it on top of legacy. Yeah. Right?

00:49:04.059 --> 00:49:06.380
<v Speaker 0>Alright. Well, thank you for sharing all that.

00:49:06.380 --> 00:49:07.980
<v Speaker 0>So we got a couple of questions left.

00:49:07.980 --> 00:49:09.740
<v Speaker 0>So, Adrian, everyone else in the chat, if

00:49:09.740 --> 00:49:11.660
<v Speaker 0>you wanna ask any questions before we finish,

00:49:11.660 --> 00:49:13.375
<v Speaker 0>drop them into the comments, and we'll move

00:49:13.375 --> 00:49:14.975
<v Speaker 0>on to developer portals.

00:49:14.975 --> 00:49:17.135
<v Speaker 0>So a trend that I've seen through reviewing

00:49:17.135 --> 00:49:18.015
<v Speaker 0>CFPs

00:49:18.015 --> 00:49:19.855
<v Speaker 0>for a couple of conferences and, again, speaking

00:49:19.855 --> 00:49:22.335
<v Speaker 0>to people at conferences is that Backstage has

00:49:22.335 --> 00:49:24.255
<v Speaker 0>really kicked off this new I I don't

00:49:24.255 --> 00:49:25.695
<v Speaker 0>wanna use the word movement, but, you know,

00:49:25.695 --> 00:49:28.210
<v Speaker 0>this initiative where teams feel like they need

00:49:28.210 --> 00:49:30.849
<v Speaker 0>to have developer portals that get them a

00:49:30.849 --> 00:49:34.369
<v Speaker 0>gateway into their infrastructure, their services, their projects.

00:49:34.369 --> 00:49:36.849
<v Speaker 0>Like and I'm curious. Is this something that

00:49:36.849 --> 00:49:38.609
<v Speaker 0>you guys are seeing again with your own

00:49:38.609 --> 00:49:41.075
<v Speaker 0>customers and partners? Do you use yourself? And

00:49:41.075 --> 00:49:42.914
<v Speaker 0>what is the value proposition that people are

00:49:42.914 --> 00:49:45.875
<v Speaker 0>looking for here? Is it purely developer experience,

00:49:45.875 --> 00:49:47.714
<v Speaker 0>or is it something else that I'm missing?

00:49:47.954 --> 00:49:50.194
<v Speaker 1>Well, I'm still unclear on the difference between

00:49:50.194 --> 00:49:53.394
<v Speaker 1>a developer portal and, like, a console view

00:49:53.394 --> 00:49:54.195
<v Speaker 1>for your

00:49:54.515 --> 00:49:55.795
<v Speaker 1>what you're doing with your cloud provider.

00:49:56.480 --> 00:49:57.920
<v Speaker 1>Is this for the things that you've got

00:49:57.920 --> 00:50:00.400
<v Speaker 1>on on-site or what sort of agnostic to

00:50:00.400 --> 00:50:02.640
<v Speaker 1>where the things are actually running? Or Yeah.

00:50:02.640 --> 00:50:05.039
<v Speaker 0>So the back speech, just an example, is

00:50:05.039 --> 00:50:06.400
<v Speaker 0>kind of used to give you, like, a

00:50:06.400 --> 00:50:08.799
<v Speaker 0>service catalog. So as a developer team deploying

00:50:08.799 --> 00:50:09.599
<v Speaker 0>microservices,

00:50:09.599 --> 00:50:12.205
<v Speaker 0>it'll actually show you the all the services,

00:50:12.205 --> 00:50:13.885
<v Speaker 0>how they interact with each other, the message

00:50:13.885 --> 00:50:14.765
<v Speaker 0>formats,

00:50:15.085 --> 00:50:16.605
<v Speaker 0>and visual overviews.

00:50:16.845 --> 00:50:18.765
<v Speaker 0>And we're seeing extensions now where it can

00:50:18.765 --> 00:50:20.925
<v Speaker 0>hook into Kubernetes and give you some limited

00:50:20.925 --> 00:50:23.380
<v Speaker 0>capabilities there. It can hook in to your

00:50:23.380 --> 00:50:25.380
<v Speaker 0>cloud provider and show you I'm models and

00:50:25.380 --> 00:50:26.740
<v Speaker 0>our back rails and a whole bunch of

00:50:26.740 --> 00:50:28.740
<v Speaker 0>other stuff. So Gotcha. We're we're seeing this

00:50:28.740 --> 00:50:31.060
<v Speaker 0>kind of DX based portal experience trying to

00:50:31.060 --> 00:50:33.540
<v Speaker 0>make developer teams more efficient. I'm not sure

00:50:33.540 --> 00:50:35.300
<v Speaker 0>if that's the value add, but, yeah, Neil,

00:50:35.300 --> 00:50:36.900
<v Speaker 0>you were gonna say something there too. Yeah.

00:50:36.900 --> 00:50:39.905
<v Speaker 3>I was gonna say, as as Kubernetes

00:50:39.905 --> 00:50:41.345
<v Speaker 3>or containers

00:50:41.425 --> 00:50:43.585
<v Speaker 3>get more and more and more mainstream,

00:50:44.145 --> 00:50:46.785
<v Speaker 3>you're getting into the realm of web devs,

00:50:46.785 --> 00:50:47.905
<v Speaker 3>front end developers.

00:50:48.145 --> 00:50:50.545
<v Speaker 3>In all honesty, those people who who know

00:50:50.545 --> 00:50:52.545
<v Speaker 3>how to use those developers who know how

00:50:52.545 --> 00:50:54.880
<v Speaker 3>to how to deploy and manage applications on

00:50:54.880 --> 00:50:57.200
<v Speaker 3>Kubernetes are probably full stack, and now now

00:50:57.200 --> 00:50:59.200
<v Speaker 3>they're extra full stack in order to be

00:50:59.200 --> 00:51:00.640
<v Speaker 3>able to do that as well. But there

00:51:00.640 --> 00:51:03.280
<v Speaker 3>is a huge proportion of the developer community

00:51:03.360 --> 00:51:06.240
<v Speaker 3>who probably see themselves as front end devs

00:51:06.240 --> 00:51:08.000
<v Speaker 3>or web devs, and they they may or

00:51:08.000 --> 00:51:09.995
<v Speaker 3>may not have the skills to be able

00:51:09.995 --> 00:51:12.715
<v Speaker 3>to do infrastructure tasks. And so there is

00:51:12.715 --> 00:51:14.555
<v Speaker 3>definitely a need for an abstraction where you

00:51:14.555 --> 00:51:16.795
<v Speaker 3>say, I just wanna take my code, and

00:51:16.795 --> 00:51:18.875
<v Speaker 3>and I wanna deploy my code. Off you

00:51:18.875 --> 00:51:21.755
<v Speaker 3>go. And that's where I think these kind

00:51:21.755 --> 00:51:24.400
<v Speaker 3>of dev platforms will shine is is being

00:51:24.400 --> 00:51:25.360
<v Speaker 3>able to engage

00:51:25.920 --> 00:51:27.680
<v Speaker 3>with the dev in a language the dev

00:51:27.680 --> 00:51:29.840
<v Speaker 3>speaks, which is which is code, and being

00:51:29.840 --> 00:51:31.360
<v Speaker 3>able to to to get them and and

00:51:31.360 --> 00:51:33.520
<v Speaker 3>or have a bunch of free can templates

00:51:33.520 --> 00:51:35.280
<v Speaker 3>available. They can just click to deploy, and

00:51:35.280 --> 00:51:36.640
<v Speaker 3>they get their server up. They can then

00:51:36.640 --> 00:51:38.685
<v Speaker 3>go and and push their code into. I

00:51:38.685 --> 00:51:40.045
<v Speaker 3>I think it's critical

00:51:40.445 --> 00:51:42.525
<v Speaker 3>as as we get more mainstream, we get

00:51:42.525 --> 00:51:45.325
<v Speaker 3>into more emerging markets where where the level

00:51:45.485 --> 00:51:47.085
<v Speaker 3>where where there might be more more of

00:51:47.085 --> 00:51:48.125
<v Speaker 3>a skills delta.

00:51:48.685 --> 00:51:50.285
<v Speaker 3>I think it's I think I think it's

00:51:50.285 --> 00:51:52.205
<v Speaker 3>just a just a a sign of maturity

00:51:52.205 --> 00:51:53.085
<v Speaker 3>of Kubernetes.

00:51:53.245 --> 00:51:55.310
<v Speaker 0>Alright. Can we try an experiment? Are you

00:51:55.310 --> 00:51:56.750
<v Speaker 0>happy to try an experiment?

00:51:57.070 --> 00:51:59.950
<v Speaker 0>You smile. I'll take it. Alright. There was

00:51:59.950 --> 00:52:02.990
<v Speaker 0>a report recently that said GitHub just crossed

00:52:02.990 --> 00:52:06.430
<v Speaker 0>a hundred million monthly active users. So let's

00:52:06.430 --> 00:52:06.830
<v Speaker 0>pretend

00:52:07.665 --> 00:52:09.265
<v Speaker 0>that this is science and there's a hundred

00:52:09.265 --> 00:52:11.425
<v Speaker 0>million developers out there in the world. So

00:52:11.425 --> 00:52:13.345
<v Speaker 0>in the chat box and don't hit return

00:52:13.345 --> 00:52:15.345
<v Speaker 0>until I ask ourselves to hit return. Type

00:52:15.345 --> 00:52:18.065
<v Speaker 0>how many developers you think have used a

00:52:18.065 --> 00:52:20.225
<v Speaker 0>kube control command. And the audience could feel

00:52:20.225 --> 00:52:21.105
<v Speaker 0>free to do this too.

00:52:21.690 --> 00:52:23.530
<v Speaker 0>But don't hit return. Checkbox.

00:52:23.690 --> 00:52:25.770
<v Speaker 0>Yeah. But just type a number, and I'm

00:52:25.770 --> 00:52:27.690
<v Speaker 0>I'm gonna count to three. And on three,

00:52:27.690 --> 00:52:28.970
<v Speaker 0>we can all hit return.

00:52:29.130 --> 00:52:30.890
<v Speaker 3>I can't even find the checkbox.

00:52:31.690 --> 00:52:34.185
<v Speaker 0>At the bottom, there should be, like, there's

00:52:34.185 --> 00:52:36.025
<v Speaker 0>a timer saying we've been live for fifty

00:52:36.025 --> 00:52:38.105
<v Speaker 0>six fifty eight minutes, and then there's a

00:52:38.105 --> 00:52:40.185
<v Speaker 0>little square for chat. So in the chat

00:52:40.185 --> 00:52:42.265
<v Speaker 0>box, type a number of how many developers

00:52:42.265 --> 00:52:44.025
<v Speaker 0>that is a hundred million

00:52:44.265 --> 00:52:46.505
<v Speaker 0>have used a cube control command, and we'll

00:52:46.505 --> 00:52:48.660
<v Speaker 0>all hit return at the same time. Does

00:52:48.660 --> 00:52:49.780
<v Speaker 0>everyone got a number?

00:52:50.420 --> 00:52:52.660
<v Speaker 1>I do. Alright. So on three.

00:52:53.059 --> 00:52:53.700
<v Speaker 0>One,

00:52:53.859 --> 00:52:55.300
<v Speaker 0>two, three.

00:52:55.859 --> 00:52:57.300
<v Speaker 0>Wow. We all

00:52:57.700 --> 00:52:58.660
<v Speaker 0>went very different.

00:53:01.415 --> 00:53:04.295
<v Speaker 0>So I said 500,000,

00:53:04.375 --> 00:53:05.975
<v Speaker 0>Eli's five thousand,

00:53:06.135 --> 00:53:08.214
<v Speaker 0>Neil went in at 10 mil, and Abdul

00:53:08.214 --> 00:53:10.055
<v Speaker 0>said every developer has run a cube control

00:53:10.055 --> 00:53:11.015
<v Speaker 0>command. Yeah.

00:53:14.070 --> 00:53:17.030
<v Speaker 0>I mean, we'll never know, but I I

00:53:17.030 --> 00:53:17.670
<v Speaker 0>just

00:53:18.150 --> 00:53:20.390
<v Speaker 0>you know, KubeCon has tens as a sellout

00:53:20.390 --> 00:53:23.110
<v Speaker 0>event at 10,000 people going to to Amsterdam.

00:53:23.350 --> 00:53:24.950
<v Speaker 0>As a general rule of thumb, when I

00:53:24.950 --> 00:53:26.950
<v Speaker 0>talk about developers that go to user groups

00:53:26.950 --> 00:53:28.950
<v Speaker 0>and conferences, I always say if you go

00:53:28.950 --> 00:53:31.235
<v Speaker 0>to these things, then you're in, like, a

00:53:31.235 --> 00:53:33.315
<v Speaker 0>five to 10% bubble of people that really

00:53:33.315 --> 00:53:35.875
<v Speaker 0>wanna push their knowledge and their careers and

00:53:35.875 --> 00:53:37.795
<v Speaker 0>other things. But I've always made that number

00:53:37.795 --> 00:53:39.715
<v Speaker 0>up, so I I really have no idea.

00:53:40.755 --> 00:53:42.595
<v Speaker 1>Right. So I mean, it's extremely low because

00:53:42.595 --> 00:53:45.490
<v Speaker 1>I think, well, I don't know. We're practitioners

00:53:45.490 --> 00:53:46.930
<v Speaker 1>of a thing always think the thing is

00:53:46.930 --> 00:53:49.170
<v Speaker 1>more widespread than it actually is. How many

00:53:49.170 --> 00:53:50.609
<v Speaker 1>people on GitHub are just using it to

00:53:50.609 --> 00:53:52.609
<v Speaker 1>host, like, little personal website that they've made

00:53:52.609 --> 00:53:54.849
<v Speaker 1>or But now you're claiming 50%

00:53:54.849 --> 00:53:56.450
<v Speaker 0>of the attendees at KubeCon have never run

00:53:56.450 --> 00:53:57.410
<v Speaker 0>a Kube control command.

00:53:58.805 --> 00:53:59.525
<v Speaker 1>Yeah.

00:53:59.685 --> 00:54:01.605
<v Speaker 1>But if we're doing prices right, we'll know.

00:54:01.765 --> 00:54:04.325
<v Speaker 1>Might be right. Yeah. I I mean, probably.

00:54:04.325 --> 00:54:05.445
<v Speaker 0>I don't know. We could sample it when

00:54:05.445 --> 00:54:06.805
<v Speaker 0>I'm there. Maybe I'll just run around with

00:54:06.805 --> 00:54:07.925
<v Speaker 0>a pen and paper and say, have you

00:54:07.925 --> 00:54:09.445
<v Speaker 0>run a Kube control command and see how

00:54:09.445 --> 00:54:10.885
<v Speaker 0>many people I can get to answer it?

00:54:10.885 --> 00:54:12.645
<v Speaker 2>I guess I guess that's probably you are

00:54:12.645 --> 00:54:14.450
<v Speaker 2>right in the sense that there are people

00:54:14.450 --> 00:54:17.010
<v Speaker 2>there are probably people using Kubernetes without running

00:54:17.010 --> 00:54:19.329
<v Speaker 2>the kubectl command. Right? Select the dashboard. If

00:54:19.329 --> 00:54:21.250
<v Speaker 2>you deploy the Kubernetes dashboard, you don't need

00:54:21.250 --> 00:54:23.010
<v Speaker 2>the command line. Can just deploy things from

00:54:23.010 --> 00:54:24.609
<v Speaker 2>the dashboard. So there are probably people who

00:54:24.609 --> 00:54:26.130
<v Speaker 2>are using Kubernetes, but they're not using the

00:54:26.130 --> 00:54:28.049
<v Speaker 2>command line. They're just using some sort of

00:54:28.049 --> 00:54:30.555
<v Speaker 2>high level of structure there. But is Kubernetes

00:54:30.555 --> 00:54:32.715
<v Speaker 0>still not I mean, it's growing.

00:54:32.955 --> 00:54:34.635
<v Speaker 0>We can see that through the CNCF. Can

00:54:34.635 --> 00:54:36.555
<v Speaker 0>see that sort of projects, open source contributions,

00:54:36.555 --> 00:54:37.915
<v Speaker 0>so people at conferences.

00:54:38.075 --> 00:54:40.475
<v Speaker 0>But it's it's still niche. Right? Like, arbitrary

00:54:40.475 --> 00:54:42.395
<v Speaker 0>number. 90% of people that write code are

00:54:42.395 --> 00:54:44.635
<v Speaker 0>probably deploying to something that's not Kubernetes still.

00:54:45.030 --> 00:54:47.270
<v Speaker 0>Is that right? Is that wrong? Kubernetes, maybe.

00:54:47.270 --> 00:54:49.430
<v Speaker 3>Containers, I would say, is more mainstream.

00:54:49.830 --> 00:54:52.310
<v Speaker 3>I just just this last weekend, I was

00:54:52.310 --> 00:54:55.430
<v Speaker 3>walking down a random street in Berlin,

00:54:55.990 --> 00:54:58.230
<v Speaker 3>and there was, you know, those big digital

00:54:58.230 --> 00:54:58.790
<v Speaker 3>signboards.

00:55:00.015 --> 00:55:01.454
<v Speaker 3>And so we're walking down the street, and

00:55:01.454 --> 00:55:03.375
<v Speaker 3>there's there's 20 digital sign boards in a

00:55:03.375 --> 00:55:05.055
<v Speaker 3>row each selling. And as I walk past

00:55:05.055 --> 00:55:07.055
<v Speaker 3>one, I'm like, oh my god. That's that's

00:55:07.055 --> 00:55:08.015
<v Speaker 3>Docker desktop.

00:55:08.175 --> 00:55:10.335
<v Speaker 3>And and, basically, the the sign board had

00:55:10.335 --> 00:55:13.375
<v Speaker 3>crashed, and in the screen was Docker desktop.

00:55:13.740 --> 00:55:15.900
<v Speaker 3>And with with the the the stack for

00:55:15.900 --> 00:55:18.780
<v Speaker 3>the software, it's crashed. And so and I'm

00:55:18.780 --> 00:55:21.500
<v Speaker 3>like, okay. Cool. You just never know where

00:55:21.500 --> 00:55:23.180
<v Speaker 3>where you're gonna where you're actually gonna gonna

00:55:23.180 --> 00:55:24.380
<v Speaker 3>come across containers.

00:55:24.940 --> 00:55:27.100
<v Speaker 3>So I think I think I think containers

00:55:27.100 --> 00:55:28.380
<v Speaker 3>have far more adoption

00:55:29.155 --> 00:55:30.675
<v Speaker 3>than Kubernetes,

00:55:30.915 --> 00:55:33.235
<v Speaker 3>but Kubernetes adoption is definitely is definitely rising.

00:55:33.315 --> 00:55:35.075
<v Speaker 0>Yeah. I'd be curious to pay attention, you

00:55:35.075 --> 00:55:37.395
<v Speaker 0>know, GitHub and Stack Overflow do annual reports

00:55:37.395 --> 00:55:39.155
<v Speaker 0>where they ask a whole bunch of questions.

00:55:39.235 --> 00:55:41.075
<v Speaker 0>And I haven't checked, so I don't know.

00:55:41.075 --> 00:55:43.475
<v Speaker 0>But maybe containers and Kubernetes adoption is in

00:55:43.475 --> 00:55:45.500
<v Speaker 0>there, and there are numbers. So I'll see

00:55:45.500 --> 00:55:46.700
<v Speaker 0>if I can find them and and share

00:55:46.700 --> 00:55:47.980
<v Speaker 0>them with people afterwards.

00:55:48.220 --> 00:55:51.020
<v Speaker 0>But fun experiment to see. This is complete

00:55:51.020 --> 00:55:53.819
<v Speaker 0>for wildly different guesses, but I'll take I'd

00:55:53.819 --> 00:55:55.339
<v Speaker 1>be very interested to see the results if

00:55:55.339 --> 00:55:57.020
<v Speaker 1>you do a straw poll of running around

00:55:57.020 --> 00:55:58.780
<v Speaker 1>KubeCon and asking people, have you actually run

00:55:58.780 --> 00:55:59.260
<v Speaker 1>KubeControl?

00:55:59.605 --> 00:56:00.805
<v Speaker 0>I mean, of course, I'm gonna do it.

00:56:00.805 --> 00:56:02.165
<v Speaker 0>I'm gonna film it at the same time.

00:56:02.165 --> 00:56:03.285
<v Speaker 0>So, yeah, it's gonna happen.

00:56:04.965 --> 00:56:06.885
<v Speaker 3>To to be honest, asking it in an

00:56:06.885 --> 00:56:07.765
<v Speaker 3>echo chamber,

00:56:07.925 --> 00:56:09.365
<v Speaker 3>you you you might get a very different

00:56:09.365 --> 00:56:11.605
<v Speaker 3>result than across some more broad spectrum sample.

00:56:12.050 --> 00:56:13.970
<v Speaker 3>So if you go go to an actual

00:56:13.970 --> 00:56:15.890
<v Speaker 3>dev forum. Yeah. I was about to say

00:56:15.890 --> 00:56:17.410
<v Speaker 2>that I think it would be more more

00:56:17.410 --> 00:56:19.810
<v Speaker 2>interesting to to go to a conference which

00:56:19.810 --> 00:56:22.050
<v Speaker 2>is not cloud native focused. So one of

00:56:22.050 --> 00:56:23.650
<v Speaker 2>the conferences I want to go to next

00:56:23.650 --> 00:56:26.290
<v Speaker 2>year is called Scale, South California Linux Expo.

00:56:27.025 --> 00:56:29.425
<v Speaker 2>It takes place in Sacramento, I think, every

00:56:29.425 --> 00:56:32.545
<v Speaker 2>year. And my cohost was there and interviewed

00:56:32.545 --> 00:56:33.985
<v Speaker 2>some people for the podcast.

00:56:34.225 --> 00:56:35.985
<v Speaker 2>And the from the interviews I listened to,

00:56:35.985 --> 00:56:38.865
<v Speaker 2>there was, like, a widely different spectrum of

00:56:38.400 --> 00:56:40.320
<v Speaker 2>what people are interested in. Right?

00:56:40.640 --> 00:56:42.319
<v Speaker 2>It's like a totally different population. They are

00:56:42.319 --> 00:56:43.279
<v Speaker 2>not in containers.

00:56:43.440 --> 00:56:44.799
<v Speaker 2>Like, some of them, say, oh, we heard

00:56:44.799 --> 00:56:46.400
<v Speaker 2>about this. They called Kubernetes, and we're thinking

00:56:46.400 --> 00:56:48.400
<v Speaker 2>about looking at it, but they're still in,

00:56:48.400 --> 00:56:51.119
<v Speaker 2>you know, hardcore Linux, low level kernel stuff.

00:56:51.920 --> 00:56:53.705
<v Speaker 2>So and there is there is actually an

00:56:53.705 --> 00:56:55.705
<v Speaker 2>article that I've read a long time ago.

00:56:55.705 --> 00:56:56.745
<v Speaker 2>I have to find dig it up and

00:56:56.745 --> 00:56:57.385
<v Speaker 2>find it.

00:56:57.865 --> 00:57:00.585
<v Speaker 2>I think it was called Shadow Developers,

00:57:00.745 --> 00:57:02.425
<v Speaker 2>and it I don't even remember who wrote

00:57:02.425 --> 00:57:04.025
<v Speaker 2>it. It was this this person who said,

00:57:04.025 --> 00:57:06.550
<v Speaker 2>like like, we people who are on the

00:57:06.550 --> 00:57:09.510
<v Speaker 2>Internet, we're only exposed to a certain population

00:57:09.510 --> 00:57:11.350
<v Speaker 2>of developers. There are a bunch of like,

00:57:11.430 --> 00:57:14.710
<v Speaker 2>your developer sitting in a, like, a, like,

00:57:14.710 --> 00:57:16.905
<v Speaker 2>a town hall of a city of, I

00:57:16.905 --> 00:57:18.585
<v Speaker 2>don't know, country in The UK

00:57:18.905 --> 00:57:19.705
<v Speaker 2>writing

00:57:19.705 --> 00:57:22.185
<v Speaker 2>visual basic code on top of, you know,

00:57:22.265 --> 00:57:24.665
<v Speaker 2>of, like, the Microsoft Access databases. That's a

00:57:24.665 --> 00:57:26.505
<v Speaker 2>developer as well. Right? Are they gonna fill

00:57:26.505 --> 00:57:28.985
<v Speaker 2>in a Stack Overflow survey? Probably not. Are

00:57:28.985 --> 00:57:31.569
<v Speaker 2>they gonna go a conference? Probably not. It's

00:57:31.730 --> 00:57:33.010
<v Speaker 1>Yeah. I mean, it's it's something we come

00:57:33.010 --> 00:57:34.530
<v Speaker 1>up against in DevRel. Right? It's like you

00:57:34.530 --> 00:57:36.450
<v Speaker 1>can only reach the people who are who

00:57:36.450 --> 00:57:37.970
<v Speaker 1>you know about, and then there's all this

00:57:37.970 --> 00:57:40.369
<v Speaker 2>sort of yeah. Like like, dark matter. Where

00:57:40.369 --> 00:57:41.490
<v Speaker 1>are all the people who aren't on the

00:57:41.490 --> 00:57:43.329
<v Speaker 1>Internet, who aren't terminally online?

00:57:43.755 --> 00:57:45.994
<v Speaker 0>Alright. We have gone a little bit over

00:57:45.994 --> 00:57:47.515
<v Speaker 0>that. I just wanna check. Does anyone have

00:57:47.515 --> 00:57:48.795
<v Speaker 0>a hard stop, or are you okay to

00:57:48.795 --> 00:57:50.555
<v Speaker 0>answer one more question? And we'll finish up

00:57:50.555 --> 00:57:52.394
<v Speaker 0>for today. I'm I'm good to go. I'm

00:57:52.394 --> 00:57:54.474
<v Speaker 1>good to keep going, brother. Well, I think

00:57:54.635 --> 00:57:56.760
<v Speaker 2>keep going as well. Yeah. I mean, I

00:57:56.760 --> 00:57:57.720
<v Speaker 0>think, given

00:57:57.960 --> 00:57:59.640
<v Speaker 0>everything that we see on Twitter these days

00:57:59.640 --> 00:58:01.240
<v Speaker 0>with open API,

00:58:01.400 --> 00:58:04.440
<v Speaker 0>open AI, and chat GPT that we should

00:58:04.440 --> 00:58:06.360
<v Speaker 0>talk about the way that that may influence

00:58:06.360 --> 00:58:10.135
<v Speaker 0>our little niche Kubernetes and Docker and container

00:58:10.135 --> 00:58:12.135
<v Speaker 0>bubble and the way that we work.

00:58:12.375 --> 00:58:15.415
<v Speaker 0>And specifically calling out Alex Jones from Canonical's

00:58:15.415 --> 00:58:17.255
<v Speaker 0>project of KHJPT,

00:58:17.815 --> 00:58:21.220
<v Speaker 0>which hooks into, like, the Kubernetes event log

00:58:21.220 --> 00:58:23.220
<v Speaker 0>and auto log to tell you when things

00:58:23.220 --> 00:58:24.740
<v Speaker 0>are wrong with your cluster and tell you

00:58:24.740 --> 00:58:26.180
<v Speaker 0>how to remediate them.

00:58:26.420 --> 00:58:29.700
<v Speaker 0>Is this something we're gonna see more of,

00:58:29.700 --> 00:58:31.380
<v Speaker 0>and is it gonna take all our jobs?

00:58:32.105 --> 00:58:33.545
<v Speaker 0>Which is hyperbole. Awesome.

00:58:33.865 --> 00:58:35.145
<v Speaker 3>Gonna ask awesome.

00:58:35.385 --> 00:58:36.425
<v Speaker 3>It's it's

00:58:36.744 --> 00:58:38.984
<v Speaker 3>it's very, very cool. Yeah. Triaging is one

00:58:38.984 --> 00:58:40.184
<v Speaker 3>of the one of the things that and

00:58:40.184 --> 00:58:41.785
<v Speaker 3>and let's be honest, 90% of us see

00:58:41.785 --> 00:58:44.265
<v Speaker 3>an error, copy paste it into Stack Overflow,

00:58:44.265 --> 00:58:46.040
<v Speaker 3>and and look for the answer anyway. So

00:58:46.040 --> 00:58:47.640
<v Speaker 3>that that this is just just automating that

00:58:47.640 --> 00:58:49.800
<v Speaker 3>loop. And I like that we've now got

00:58:49.800 --> 00:58:51.800
<v Speaker 1>to the stage where we've written software so

00:58:51.800 --> 00:58:52.520
<v Speaker 1>complex

00:58:52.680 --> 00:58:55.080
<v Speaker 1>that we need to write more software to

00:58:55.080 --> 00:58:57.400
<v Speaker 1>understand it. You know? We we we are

00:58:57.645 --> 00:58:59.165
<v Speaker 1>you know, I don't think that our jobs

00:58:59.165 --> 00:59:01.005
<v Speaker 1>are at risk because you ask chat GPT

00:59:01.005 --> 00:59:03.245
<v Speaker 1>anything about, you know, real facts and it

00:59:03.245 --> 00:59:06.925
<v Speaker 1>spews you complete nonsense. But it's certain tasks

00:59:06.925 --> 00:59:08.525
<v Speaker 1>like that, I think it could be really,

00:59:08.525 --> 00:59:11.860
<v Speaker 1>really useful. So I also say that

00:59:12.420 --> 00:59:14.340
<v Speaker 3>whilst it still has quite a lag in

00:59:14.340 --> 00:59:15.140
<v Speaker 3>its training,

00:59:15.620 --> 00:59:18.100
<v Speaker 3>if you ask it questions about Kubernetes one

00:59:18.100 --> 00:59:19.700
<v Speaker 3>dot 26, do you think it's gonna better

00:59:19.700 --> 00:59:22.180
<v Speaker 3>help you? It maybe not. Yeah. Because it's

00:59:22.180 --> 00:59:24.115
<v Speaker 3>it's it's got that cut off. So it

00:59:24.115 --> 00:59:26.115
<v Speaker 3>it as long as it's a bug that

00:59:26.115 --> 00:59:26.755
<v Speaker 3>existed

00:59:26.915 --> 00:59:28.595
<v Speaker 3>back when it was trained,

00:59:28.835 --> 00:59:30.595
<v Speaker 3>it'll help you. I'm just I'm not I'm

00:59:30.595 --> 00:59:31.875
<v Speaker 3>not sure. I mean, I'm I'm not that

00:59:31.875 --> 00:59:34.115
<v Speaker 3>smart enough to understand, you know, if if

00:59:34.115 --> 00:59:36.995
<v Speaker 3>it can determine things that that that's newer,

00:59:37.170 --> 00:59:38.530
<v Speaker 3>bugs that are newer than what it was

00:59:38.530 --> 00:59:40.050
<v Speaker 3>trained on. I don't know how it handles.

00:59:40.290 --> 00:59:41.730
<v Speaker 0>So you you have to give it all

00:59:41.730 --> 00:59:43.250
<v Speaker 0>the context. That's what I I've seen is

00:59:43.250 --> 00:59:44.690
<v Speaker 0>that people are are feeding the

00:59:44.930 --> 00:59:47.730
<v Speaker 0>one twenty six manifest as examples and then

00:59:47.730 --> 00:59:49.785
<v Speaker 0>asking the questions based on it. And it

00:59:49.785 --> 00:59:51.625
<v Speaker 0>does seem to have a weird ability to

00:59:51.625 --> 00:59:53.785
<v Speaker 0>understand what's happening and answer

00:59:54.025 --> 00:59:56.905
<v Speaker 0>questions. Like, it it could be retrained with

00:59:56.905 --> 00:59:58.665
<v Speaker 0>modern data if you're willing to give it

00:59:58.665 --> 01:00:00.665
<v Speaker 0>the modern data. Do you think this is

01:00:00.665 --> 01:00:02.665
<v Speaker 0>something you would hook into retainer?

01:00:02.840 --> 01:00:05.960
<v Speaker 3>I am all about making things easier for

01:00:05.960 --> 01:00:07.960
<v Speaker 3>our users. So if this was a way

01:00:07.960 --> 01:00:09.080
<v Speaker 3>to make things easier,

01:00:09.400 --> 01:00:11.160
<v Speaker 3>we actually had a discussion.

01:00:11.400 --> 01:00:13.240
<v Speaker 3>We we used to include Compose with a

01:00:13.240 --> 01:00:14.840
<v Speaker 3>k in Protainer. So you you could take

01:00:14.840 --> 01:00:17.000
<v Speaker 3>a Docker Compose file, and we we would

01:00:17.000 --> 01:00:18.680
<v Speaker 3>auto deploy that against Kubernetes.

01:00:18.760 --> 01:00:19.855
<v Speaker 3>We we had to pull it out because

01:00:19.855 --> 01:00:21.135
<v Speaker 3>it was full of CVEs.

01:00:21.535 --> 01:00:23.295
<v Speaker 3>If this was a way to bring back

01:00:23.295 --> 01:00:24.655
<v Speaker 3>that type of capability

01:00:24.895 --> 01:00:26.975
<v Speaker 3>where someone could could put a put you

01:00:26.975 --> 01:00:29.055
<v Speaker 3>know, give container Compose file, we we asked

01:00:29.055 --> 01:00:31.615
<v Speaker 3>chat GBT to convert it, and then they

01:00:30.990 --> 01:00:32.350
<v Speaker 3>gave us back a manifest so we could

01:00:32.350 --> 01:00:33.550
<v Speaker 3>then go direct deploy.

01:00:33.950 --> 01:00:35.790
<v Speaker 3>I'll take that. Cool. Yeah. That'll be cool.

01:00:36.110 --> 01:00:38.110
<v Speaker 3>So so, absolutely, if if if we can

01:00:38.110 --> 01:00:40.030
<v Speaker 3>do if we we can use it to

01:00:40.030 --> 01:00:41.630
<v Speaker 3>improve the service that we deliver to our

01:00:41.630 --> 01:00:43.230
<v Speaker 3>users, I'm all over it. Yeah. I also

01:00:43.230 --> 01:00:45.150
<v Speaker 0>wonder, like, from the Google and Skillway point

01:00:45.150 --> 01:00:47.495
<v Speaker 0>of view, can we, like, have it have

01:00:47.495 --> 01:00:49.255
<v Speaker 0>an understanding of all the resources we have

01:00:49.255 --> 01:00:51.335
<v Speaker 0>and then give us cost optimizations

01:00:51.335 --> 01:00:53.175
<v Speaker 0>or even just remind you that you've had

01:00:53.175 --> 01:00:55.495
<v Speaker 0>an instance running that you're not using anymore?

01:00:55.655 --> 01:00:57.655
<v Speaker 0>Like, hey. The traffic on this virtual machine

01:00:57.655 --> 01:01:00.295
<v Speaker 0>hasn't really moved a needle in ten days.

01:01:00.295 --> 01:01:02.120
<v Speaker 0>Do you wanna shut it down? Like, are

01:01:02.120 --> 01:01:04.040
<v Speaker 0>we gonna see more stuff like this? Our

01:01:04.040 --> 01:01:06.120
<v Speaker 2>our most of our recommendation

01:01:06.520 --> 01:01:07.960
<v Speaker 2>tips that we have in the Google Cloud

01:01:07.960 --> 01:01:10.280
<v Speaker 2>Console are actually ML based. They're not bot

01:01:10.280 --> 01:01:12.680
<v Speaker 2>based. They're not based on. Like, right now,

01:01:12.680 --> 01:01:13.880
<v Speaker 2>if you log in to the Google Cloud

01:01:13.880 --> 01:01:15.885
<v Speaker 2>Console, there will be some recommendation in your

01:01:15.885 --> 01:01:17.405
<v Speaker 2>virtual machine interface to say, hey. You haven't

01:01:17.405 --> 01:01:18.925
<v Speaker 2>used this virtual machine for a while. Oh,

01:01:18.925 --> 01:01:19.405
<v Speaker 2>wow.

01:01:19.725 --> 01:01:21.965
<v Speaker 2>So that's actually ML based. And another way

01:01:22.125 --> 01:01:24.285
<v Speaker 2>another place where we are using a machine

01:01:24.285 --> 01:01:26.605
<v Speaker 2>learning based model is we have a software

01:01:26.605 --> 01:01:28.685
<v Speaker 2>called Cloud Armor, which is like a web

01:01:28.685 --> 01:01:30.780
<v Speaker 2>application firewall. It's a WAF. You can attach

01:01:30.780 --> 01:01:32.700
<v Speaker 2>it to a cloud load balancer, and then

01:01:32.700 --> 01:01:34.140
<v Speaker 2>it can do a bunch of things like

01:01:34.140 --> 01:01:35.100
<v Speaker 2>XSS,

01:01:35.420 --> 01:01:37.740
<v Speaker 2>like a cross site scripting detection,

01:01:37.740 --> 01:01:39.340
<v Speaker 2>SQL injection, etcetera.

01:01:39.500 --> 01:01:40.620
<v Speaker 2>But one of the things it does is

01:01:40.620 --> 01:01:43.180
<v Speaker 2>something called predictive traffic analysis.

01:01:43.695 --> 01:01:45.615
<v Speaker 2>So, basically, when you turn that on, it

01:01:45.615 --> 01:01:48.415
<v Speaker 2>creates a base model for your traffic on

01:01:48.415 --> 01:01:49.455
<v Speaker 2>your load balancer.

01:01:49.615 --> 01:01:51.455
<v Speaker 2>And if it sees something weird, it's gonna

01:01:51.455 --> 01:01:53.055
<v Speaker 2>actually notify you and say, hey. We're seeing

01:01:53.055 --> 01:01:54.335
<v Speaker 2>these IP addresses

01:01:54.415 --> 01:01:56.810
<v Speaker 2>are potentially gonna be harmful. And you can

01:01:56.810 --> 01:01:58.890
<v Speaker 2>turn it on to either create a firewall

01:01:58.890 --> 01:02:01.050
<v Speaker 2>rule to block those IP addresses automatically or

01:02:01.050 --> 01:02:02.250
<v Speaker 2>just give you a recommendation

01:02:02.330 --> 01:02:04.570
<v Speaker 2>and tell you, please apply this policy to

01:02:04.570 --> 01:02:07.210
<v Speaker 2>block those IP addresses. And last year, that

01:02:07.210 --> 01:02:10.170
<v Speaker 2>feature was used by one of the customers,

01:02:10.170 --> 01:02:12.655
<v Speaker 2>and it helped them block the largest DDoS

01:02:12.655 --> 01:02:14.494
<v Speaker 2>attack known to human in history. It was,

01:02:14.494 --> 01:02:16.255
<v Speaker 2>like, 70 47,000,000

01:02:16.255 --> 01:02:18.095
<v Speaker 2>requests or something like that. So they didn't

01:02:18.095 --> 01:02:19.855
<v Speaker 2>they didn't have the automatic feature. They just

01:02:19.855 --> 01:02:22.174
<v Speaker 2>had the recommendation feature, but somebody caught that

01:02:22.174 --> 01:02:24.015
<v Speaker 2>early and managed to apply the policy to,

01:02:24.015 --> 01:02:24.815
<v Speaker 2>you know, to prevent issues.

01:02:25.809 --> 01:02:28.130
<v Speaker 2>So in these kind of cases, I do

01:02:28.130 --> 01:02:28.849
<v Speaker 2>see

01:02:29.170 --> 01:02:32.049
<v Speaker 2>value for using machine learning based, whether they

01:02:32.049 --> 01:02:33.170
<v Speaker 2>are or

01:02:33.170 --> 01:02:34.530
<v Speaker 2>BART or something else,

01:02:34.770 --> 01:02:35.650
<v Speaker 2>but something that could

01:02:36.369 --> 01:02:38.130
<v Speaker 2>that is clever enough

01:02:38.415 --> 01:02:41.055
<v Speaker 2>to see what your base usage is and

01:02:41.055 --> 01:02:42.655
<v Speaker 2>can detect deviations.

01:02:42.735 --> 01:02:44.975
<v Speaker 2>Right? But this is not new to ChargeGPT.

01:02:44.975 --> 01:02:47.215
<v Speaker 2>This is like deviation detection machine learning is

01:02:47.215 --> 01:02:50.095
<v Speaker 2>a very old problem. Right? So ChargeGPT

01:02:50.095 --> 01:02:51.215
<v Speaker 2>as is today

01:02:51.695 --> 01:02:54.660
<v Speaker 2>being useful for for us with what we

01:02:54.660 --> 01:02:56.260
<v Speaker 2>do today, I'm very skeptical, but that's just

01:02:56.260 --> 01:02:57.859
<v Speaker 2>me. Yeah. I sort of think of chat

01:02:57.859 --> 01:03:00.020
<v Speaker 1>with GPT as it's almost like a toy

01:03:00.020 --> 01:03:01.859
<v Speaker 1>or like a demo of, like, the under

01:03:01.940 --> 01:03:04.980
<v Speaker 1>the technology, the ML technology in targeted

01:03:05.300 --> 01:03:07.475
<v Speaker 1>ways. Like, exactly as you say, like, very

01:03:07.475 --> 01:03:10.355
<v Speaker 1>specific targeted ways that's trained for this one

01:03:10.355 --> 01:03:10.995
<v Speaker 1>purpose,

01:03:11.235 --> 01:03:13.795
<v Speaker 1>I think have an enormous potential.

01:03:14.275 --> 01:03:16.755
<v Speaker 1>I'm thinking about, like, observability,

01:03:16.755 --> 01:03:19.119
<v Speaker 1>like, price prediction, all of these things, but

01:03:19.119 --> 01:03:21.040
<v Speaker 1>it may not be, like, a chat GPT

01:03:21.040 --> 01:03:22.880
<v Speaker 1>in particular. It may be something more specifically

01:03:22.880 --> 01:03:23.920
<v Speaker 1>purpose built.

01:03:24.080 --> 01:03:25.360
<v Speaker 0>Alright. Awesome.

01:03:25.440 --> 01:03:27.840
<v Speaker 0>Well, thank you all for joining. It's been

01:03:27.840 --> 01:03:30.080
<v Speaker 0>a pleasure talking with you all.

01:03:30.320 --> 01:03:32.880
<v Speaker 0>I'll give you all a a minute. If

01:03:32.880 --> 01:03:33.520
<v Speaker 0>you just wanna

01:03:33.984 --> 01:03:37.265
<v Speaker 0>plug anything, share anything anything that that may

01:03:37.265 --> 01:03:38.785
<v Speaker 0>be, feel free to do that now.

01:03:39.105 --> 01:03:41.425
<v Speaker 0>And then we'll wrap this up. I don't

01:03:41.425 --> 01:03:43.665
<v Speaker 3>wanna plug Fortainer at all. That just seem

01:03:43.744 --> 01:03:46.385
<v Speaker 3>that that that that seems seems shallow. But

01:03:47.345 --> 01:03:49.869
<v Speaker 3>so no. I I I think I think

01:03:49.869 --> 01:03:52.349
<v Speaker 3>the more people that get exposed to to

01:03:52.349 --> 01:03:54.190
<v Speaker 3>containers and Kubernetes and

01:03:54.510 --> 01:03:56.030
<v Speaker 3>realize that not everyone needs to be an

01:03:56.030 --> 01:03:58.270
<v Speaker 3>expert, the better. I think I think there

01:03:58.270 --> 01:04:01.070
<v Speaker 3>are varying levels of skill required,

01:04:01.869 --> 01:04:03.895
<v Speaker 3>and I think we need to be completely

01:04:03.895 --> 01:04:06.055
<v Speaker 3>comfortable that those in out there in the

01:04:06.055 --> 01:04:08.375
<v Speaker 3>ecosystem have varying level varying levels of skill

01:04:08.375 --> 01:04:10.775
<v Speaker 3>and embrace them and and have tools and

01:04:10.775 --> 01:04:13.095
<v Speaker 3>capabilities that that help check know, the the

01:04:13.095 --> 01:04:14.934
<v Speaker 3>the the chatty bitty conversation just seen as

01:04:14.934 --> 01:04:16.855
<v Speaker 3>a prime example. It it helps those,

01:04:17.174 --> 01:04:20.210
<v Speaker 3>you know, underskilled to do things that their

01:04:20.210 --> 01:04:22.210
<v Speaker 3>more skilled peers might be able to do.

01:04:22.369 --> 01:04:24.930
<v Speaker 3>So in anything anything that helps people, you

01:04:24.930 --> 01:04:27.730
<v Speaker 3>know, increase the skill level is is a

01:04:27.730 --> 01:04:29.730
<v Speaker 3>good thing. I'm gonna do a shameless plug

01:04:29.730 --> 01:04:31.090
<v Speaker 2>and ask people to go listen to the

01:04:31.090 --> 01:04:33.165
<v Speaker 2>Kubernetes podcast. We have David on it. That

01:04:33.165 --> 01:04:34.365
<v Speaker 2>was the last episode.

01:04:34.685 --> 01:04:36.205
<v Speaker 2>It was pretty cool to talk to to

01:04:36.205 --> 01:04:37.965
<v Speaker 2>to to you. But we have a bunch

01:04:37.965 --> 01:04:40.525
<v Speaker 2>of stuff coming up, very interesting things. We're

01:04:40.525 --> 01:04:43.085
<v Speaker 2>gonna be covering platform engineering and Backstage. It's

01:04:43.085 --> 01:04:44.845
<v Speaker 2>one of the topics. We're gonna be covering

01:04:44.845 --> 01:04:46.760
<v Speaker 2>Docker and Wasm as well, and we're gonna

01:04:46.760 --> 01:04:49.160
<v Speaker 2>be also covering KubeCon Amsterdam.

01:04:49.160 --> 01:04:51.320
<v Speaker 2>So we're gonna be asking people just harassing

01:04:51.320 --> 01:04:53.080
<v Speaker 2>people in the show, asking them, like, how

01:04:53.080 --> 01:04:54.040
<v Speaker 2>it's going on there.

01:04:54.599 --> 01:04:55.960
<v Speaker 2>So it's Kubernetespodcast.com

01:04:55.960 --> 01:04:57.800
<v Speaker 2>or you can follow us on Twitter. And,

01:04:57.800 --> 01:04:59.320
<v Speaker 2>yeah, thank you for having me. Was fantastic.

01:04:59.615 --> 01:05:01.775
<v Speaker 1>Suppose my plug would be my my team

01:05:01.775 --> 01:05:03.615
<v Speaker 1>at Scaleway, the developer relations team, we do

01:05:03.615 --> 01:05:04.974
<v Speaker 1>we do some livestreams

01:05:04.974 --> 01:05:06.974
<v Speaker 1>almost every Friday. Not this not this one

01:05:06.974 --> 01:05:09.934
<v Speaker 1>coming, but almost every Friday at 3PM UK

01:05:09.934 --> 01:05:12.575
<v Speaker 1>time. We go live and chitchat about the

01:05:12.575 --> 01:05:14.255
<v Speaker 1>cloud. Sometimes we have guests.

01:05:14.494 --> 01:05:16.470
<v Speaker 1>We just did a bunch of Kubernetes focus

01:05:16.470 --> 01:05:18.150
<v Speaker 1>streams during March.

01:05:18.390 --> 01:05:19.830
<v Speaker 1>So, you know, if this if that's your

01:05:19.830 --> 01:05:21.430
<v Speaker 1>jam, come and come and hang out with

01:05:21.430 --> 01:05:23.670
<v Speaker 1>us. You can find us on Twitter at

01:05:23.670 --> 01:05:25.430
<v Speaker 1>scale way underscore devs, and we always tweet

01:05:25.430 --> 01:05:26.950
<v Speaker 1>when we're going live. It'll be really good

01:05:26.950 --> 01:05:28.710
<v Speaker 1>to have folks come and harass us on

01:05:28.710 --> 01:05:30.790
<v Speaker 1>stream. Cool. Alright. Awesome.
