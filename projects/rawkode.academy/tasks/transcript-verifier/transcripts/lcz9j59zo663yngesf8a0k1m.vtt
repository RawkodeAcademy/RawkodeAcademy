WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: e2712e6f-4fb4-46b8-887a-78258b8a53e7
Created: 2025-04-29T15:16:27.091Z
Duration: 3497.8838
Channels: 1

00:00:00.000 --> 00:00:00.880
<v Speaker 0>We're now streaming.

00:02:42.250 --> 00:02:43.050
<v Speaker 0>Hello,

00:02:43.129 --> 00:02:45.690
<v Speaker 0>and welcome back to the Rawkode Academy.

00:02:45.849 --> 00:02:47.930
<v Speaker 0>I'm your host, David Flanagan. Although you probably

00:02:47.930 --> 00:02:50.170
<v Speaker 0>know me as Rawkode from across the Internet.

00:02:50.730 --> 00:02:52.970
<v Speaker 0>Today, we have another wonderful episode of Rawkode

00:02:52.970 --> 00:02:54.924
<v Speaker 0>Live where we take a look at open

00:02:54.924 --> 00:02:57.165
<v Speaker 0>source software that helps to make your lives

00:02:57.165 --> 00:02:59.805
<v Speaker 0>easier and simpler in this cloud native landscape.

00:03:00.045 --> 00:03:01.485
<v Speaker 0>Today, we are taking a look at a

00:03:01.485 --> 00:03:03.805
<v Speaker 0>project called Helm Dashboard from a team at

00:03:03.805 --> 00:03:05.644
<v Speaker 0>Commodore. And to guide us through our journey

00:03:05.644 --> 00:03:08.685
<v Speaker 0>today, I'm joined by its creator and maintainer,

00:03:08.845 --> 00:03:09.245
<v Speaker 0>Andre.

00:03:11.090 --> 00:03:13.090
<v Speaker 0>Hello. Welcome. How are you?

00:03:13.730 --> 00:03:17.250
<v Speaker 1>Hello. Hi, everyone. I'm super happy to join.

00:03:17.570 --> 00:03:21.010
<v Speaker 1>My name is Andre, and you probably know

00:03:21.010 --> 00:03:23.170
<v Speaker 1>me by other open source projects that I've

00:03:23.170 --> 00:03:25.010
<v Speaker 1>been doing in the past. And these days,

00:03:25.010 --> 00:03:26.805
<v Speaker 1>I'm joining Commodore

00:03:26.885 --> 00:03:29.845
<v Speaker 1>as a company and leading open source development

00:03:29.845 --> 00:03:30.565
<v Speaker 1>in

00:03:30.885 --> 00:03:31.685
<v Speaker 1>Commodore.

00:03:32.165 --> 00:03:34.725
<v Speaker 1>Couple of words about Commodore. What what's the

00:03:34.725 --> 00:03:35.525
<v Speaker 1>company?

00:03:36.485 --> 00:03:38.485
<v Speaker 1>Commodore is producing

00:03:38.485 --> 00:03:40.005
<v Speaker 1>the solution for

00:03:40.480 --> 00:03:42.800
<v Speaker 1>easier troubleshooting and management

00:03:42.880 --> 00:03:43.680
<v Speaker 1>in

00:03:43.760 --> 00:03:44.880
<v Speaker 1>Kubernetes

00:03:44.880 --> 00:03:47.280
<v Speaker 1>and everything that relates to Kubernetes.

00:03:47.280 --> 00:03:48.160
<v Speaker 1>This is why

00:03:48.480 --> 00:03:50.560
<v Speaker 1>the project that we are looking on today

00:03:50.560 --> 00:03:53.040
<v Speaker 1>is also related to Kubernetes

00:03:53.040 --> 00:03:54.000
<v Speaker 1>and Helm.

00:03:55.075 --> 00:03:57.555
<v Speaker 1>And the project is Helm Dashboard.

00:03:58.115 --> 00:03:59.635
<v Speaker 1>Should I start the presentation?

00:04:00.435 --> 00:04:02.115
<v Speaker 0>Well, I'm curious. You said we may know

00:04:02.115 --> 00:04:04.275
<v Speaker 0>you from previous open source projects. Do wanna

00:04:04.275 --> 00:04:05.315
<v Speaker 0>tell us a little bit more about your

00:04:05.315 --> 00:04:06.755
<v Speaker 0>background there? What have you what have you

00:04:06.755 --> 00:04:07.155
<v Speaker 0>worked on?

00:04:08.060 --> 00:04:08.620
<v Speaker 1>Sure.

00:04:09.340 --> 00:04:09.980
<v Speaker 1>I

00:04:11.020 --> 00:04:13.900
<v Speaker 1>my open source journey was starting from the

00:04:13.900 --> 00:04:16.779
<v Speaker 1>load pasting area where I was doing tooling

00:04:16.779 --> 00:04:18.779
<v Speaker 1>around of a load pasting.

00:04:18.779 --> 00:04:18.940
<v Speaker 1>And

00:04:21.404 --> 00:04:22.365
<v Speaker 1>then I

00:04:23.245 --> 00:04:25.725
<v Speaker 1>open sourced couple of interesting tools

00:04:26.044 --> 00:04:29.085
<v Speaker 1>to do the either high scale load testing

00:04:29.085 --> 00:04:34.125
<v Speaker 1>or lower scale, but with more details about

00:04:33.340 --> 00:04:36.140
<v Speaker 1>around the visualization and analysis of the lower

00:04:36.140 --> 00:04:37.180
<v Speaker 1>testing results.

00:04:37.500 --> 00:04:40.300
<v Speaker 1>And so people inside the lower testing area

00:04:40.300 --> 00:04:42.940
<v Speaker 1>know me. At least everyone knows

00:04:43.340 --> 00:04:45.660
<v Speaker 1>the tools that I did, not necessarily

00:04:46.220 --> 00:04:48.324
<v Speaker 1>my person. Doesn't matter.

00:04:49.205 --> 00:04:51.365
<v Speaker 1>And from there, I I found that it's

00:04:51.365 --> 00:04:53.764
<v Speaker 1>actually exciting to start the projects and do

00:04:53.764 --> 00:04:56.005
<v Speaker 1>open source in many different areas.

00:04:56.324 --> 00:04:58.324
<v Speaker 1>For example, if you'll find my YouTube, you'll

00:04:58.324 --> 00:04:59.125
<v Speaker 1>find there the

00:04:59.525 --> 00:05:01.925
<v Speaker 1>robots

00:05:00.750 --> 00:05:03.310
<v Speaker 1>built from Lego and the software library that

00:05:03.310 --> 00:05:05.470
<v Speaker 1>is behind that, and that's the open source

00:05:06.190 --> 00:05:08.110
<v Speaker 1>written in Python or

00:05:09.310 --> 00:05:12.750
<v Speaker 1>some crazy experiments with chess and neural networks,

00:05:12.750 --> 00:05:14.030
<v Speaker 1>and it's also open source.

00:05:15.285 --> 00:05:17.845
<v Speaker 1>And some people who find it just have

00:05:17.845 --> 00:05:19.285
<v Speaker 1>fun because I was writing the

00:05:19.925 --> 00:05:21.765
<v Speaker 1>journaling all of my experience,

00:05:21.765 --> 00:05:23.765
<v Speaker 1>which I cannot say is fully

00:05:24.885 --> 00:05:25.925
<v Speaker 1>breakthrough,

00:05:25.925 --> 00:05:28.245
<v Speaker 1>but just the fun of the process of

00:05:28.245 --> 00:05:30.860
<v Speaker 1>making it and sharing it with people.

00:05:31.180 --> 00:05:33.020
<v Speaker 1>This is what excites me, and this is

00:05:33.020 --> 00:05:35.340
<v Speaker 1>what led me to hear, basically.

00:05:36.139 --> 00:05:38.379
<v Speaker 0>Alright. So I'm curious then. You said Lego

00:05:38.379 --> 00:05:41.180
<v Speaker 0>robots. You said chess and machine learning. You've

00:05:41.180 --> 00:05:42.699
<v Speaker 0>got a little of Python going on there.

00:05:42.699 --> 00:05:44.940
<v Speaker 0>How did you end up in this Kubernetes

00:05:44.940 --> 00:05:45.419
<v Speaker 0>landscape?

00:05:46.325 --> 00:05:47.445
<v Speaker 1>How

00:05:47.445 --> 00:05:49.205
<v Speaker 1>can you avoid Kubernetes

00:05:49.205 --> 00:05:52.005
<v Speaker 1>these days? I don't know. Regardless

00:05:52.005 --> 00:05:54.405
<v Speaker 1>of where you started in your past, you

00:05:54.405 --> 00:05:57.045
<v Speaker 1>will end up with Kubernetes today because it's

00:05:57.045 --> 00:05:57.925
<v Speaker 1>everywhere.

00:05:58.005 --> 00:06:00.405
<v Speaker 1>This is the huge wave of transformation

00:06:00.405 --> 00:06:02.810
<v Speaker 1>or at least adoption that comes

00:06:03.050 --> 00:06:03.930
<v Speaker 1>in

00:06:04.650 --> 00:06:05.450
<v Speaker 1>technology,

00:06:05.450 --> 00:06:06.570
<v Speaker 1>in infrastructure.

00:06:06.570 --> 00:06:09.530
<v Speaker 1>So anything that relates to Kubernetes will be

00:06:09.530 --> 00:06:12.010
<v Speaker 1>there for long these days. And

00:06:12.490 --> 00:06:12.810
<v Speaker 1>I

00:06:13.610 --> 00:06:16.905
<v Speaker 1>actually, several years, was looking at Kubernetes

00:06:16.905 --> 00:06:19.225
<v Speaker 1>thinking, how will I apply

00:06:19.705 --> 00:06:22.905
<v Speaker 1>myself to Kubernetes? What will I do in

00:06:22.905 --> 00:06:25.705
<v Speaker 1>Kubernetes? And thanks to Commodore, I'm now able

00:06:25.705 --> 00:06:26.505
<v Speaker 1>to actually

00:06:26.825 --> 00:06:27.705
<v Speaker 1>meaningfully

00:06:27.705 --> 00:06:30.025
<v Speaker 1>contribute to the ecosystem of Kubernetes.

00:06:31.440 --> 00:06:34.160
<v Speaker 1>So I'm I'm all excited about Kubernetes. I

00:06:34.160 --> 00:06:34.800
<v Speaker 1>like it.

00:06:35.199 --> 00:06:38.400
<v Speaker 0>Awesome. That's wonderful to hear. So the announcement

00:06:38.400 --> 00:06:40.960
<v Speaker 0>was this week, Commodore said in fact, was

00:06:40.960 --> 00:06:41.760
<v Speaker 0>it yesterday?

00:06:42.000 --> 00:06:43.360
<v Speaker 0>It's been such a weird week for me.

00:06:43.360 --> 00:06:44.800
<v Speaker 0>Yeah. I think it was yesterday Commodore

00:06:45.335 --> 00:06:48.455
<v Speaker 0>Helm Dashboard and this new project, and you're

00:06:48.455 --> 00:06:50.375
<v Speaker 0>gonna guide us through it today. So without

00:06:50.375 --> 00:06:52.295
<v Speaker 0>further ado, I'll say, why don't you share

00:06:52.295 --> 00:06:54.215
<v Speaker 0>your screen? We've got a few slides, and

00:06:54.215 --> 00:06:55.735
<v Speaker 0>then we'll take a look at the project

00:06:55.895 --> 00:06:56.695
<v Speaker 0>hands on.

00:06:58.620 --> 00:07:01.260
<v Speaker 1>Alright. Let me start. So I prepared a

00:07:01.260 --> 00:07:02.780
<v Speaker 1>couple of slides to

00:07:03.500 --> 00:07:04.940
<v Speaker 1>guide us through

00:07:05.900 --> 00:07:08.380
<v Speaker 1>the theoretical part of it, and then

00:07:09.900 --> 00:07:11.020
<v Speaker 1>let's do

00:07:13.025 --> 00:07:14.625
<v Speaker 1>some hands on demo.

00:07:17.105 --> 00:07:18.305
<v Speaker 1>Let's do

00:07:20.305 --> 00:07:21.985
<v Speaker 1>where's that button?

00:07:22.865 --> 00:07:23.505
<v Speaker 1>It's there.

00:07:26.180 --> 00:07:29.379
<v Speaker 1>Helm Dashboard by Commodore. The name supposed to

00:07:29.379 --> 00:07:30.660
<v Speaker 1>be super obvious,

00:07:31.139 --> 00:07:32.340
<v Speaker 1>nothing fancy.

00:07:32.580 --> 00:07:33.620
<v Speaker 1>It's exactly

00:07:33.780 --> 00:07:37.060
<v Speaker 1>that. It's the dashboard that shows Helm

00:07:37.139 --> 00:07:38.740
<v Speaker 1>situation in your cluster.

00:07:40.514 --> 00:07:42.435
<v Speaker 1>My plan for today is to

00:07:43.074 --> 00:07:44.915
<v Speaker 1>introduce you to Helm if you don't know

00:07:44.915 --> 00:07:45.795
<v Speaker 1>what it is,

00:07:46.195 --> 00:07:49.074
<v Speaker 1>explain the problem, why we started doing that,

00:07:49.074 --> 00:07:51.315
<v Speaker 1>explain how we did how we solved that

00:07:51.315 --> 00:07:53.315
<v Speaker 1>problem, do the live demo. If there are

00:07:53.315 --> 00:07:55.315
<v Speaker 1>any questions, let's do

00:07:56.430 --> 00:07:57.230
<v Speaker 1>answers

00:07:57.630 --> 00:08:00.350
<v Speaker 1>let let's do an answer those questions hopefully

00:08:00.350 --> 00:08:02.750
<v Speaker 1>with also live demo. This is what I

00:08:02.750 --> 00:08:04.910
<v Speaker 1>like and prefer to do to answer the

00:08:04.910 --> 00:08:08.510
<v Speaker 1>questions by demonstrating the answers, not prioritizing

00:08:08.750 --> 00:08:09.310
<v Speaker 1>on it.

00:08:10.865 --> 00:08:12.945
<v Speaker 1>First thing is let's remember

00:08:13.265 --> 00:08:16.545
<v Speaker 1>what is this theme Commodore or Helm.

00:08:17.905 --> 00:08:21.105
<v Speaker 1>And Helm is actually a cool thing, and

00:08:21.105 --> 00:08:22.305
<v Speaker 1>it's a package manager.

00:08:22.780 --> 00:08:25.979
<v Speaker 1>Usually, people describe Helm as reverse. They say

00:08:25.979 --> 00:08:28.860
<v Speaker 1>that it's templating first. No. No. Its first

00:08:28.860 --> 00:08:31.260
<v Speaker 1>role, I would say the most important role,

00:08:31.260 --> 00:08:33.740
<v Speaker 1>is package management for Kubernetes.

00:08:34.059 --> 00:08:34.860
<v Speaker 1>It's actually

00:08:36.275 --> 00:08:38.675
<v Speaker 1>a bit of shame on Kubernetes

00:08:38.675 --> 00:08:41.395
<v Speaker 1>to not have an out of the box

00:08:41.555 --> 00:08:43.555
<v Speaker 1>package manager because

00:08:44.195 --> 00:08:46.115
<v Speaker 1>in any infrastructure

00:08:46.915 --> 00:08:47.875
<v Speaker 1>level

00:08:48.115 --> 00:08:48.995
<v Speaker 1>technology

00:08:49.315 --> 00:08:51.315
<v Speaker 1>that appears in the recent days,

00:08:52.410 --> 00:08:55.450
<v Speaker 1>you see that the package manager inevitably

00:08:55.450 --> 00:08:56.810
<v Speaker 1>emerged from there.

00:08:57.130 --> 00:09:00.250
<v Speaker 1>And, for example, Golang ecosystem, which I like,

00:09:00.410 --> 00:09:03.130
<v Speaker 1>they started from having their own package manager

00:09:03.130 --> 00:09:07.755
<v Speaker 1>and providing it. And other ecosystems like PHP,

00:09:07.755 --> 00:09:09.595
<v Speaker 1>for for example, they

00:09:10.795 --> 00:09:13.195
<v Speaker 1>didn't have any package manager for a while,

00:09:13.195 --> 00:09:15.595
<v Speaker 1>and then the third party package manager appeared.

00:09:15.595 --> 00:09:17.515
<v Speaker 1>The same thing happens to Commodore

00:09:18.075 --> 00:09:19.355
<v Speaker 1>to Kubernetes, I'm sorry,

00:09:20.410 --> 00:09:23.450
<v Speaker 1>that the third party package manager had to

00:09:23.450 --> 00:09:25.770
<v Speaker 1>emerge because the ecosystem itself

00:09:25.850 --> 00:09:27.130
<v Speaker 1>didn't produce

00:09:27.290 --> 00:09:30.010
<v Speaker 1>a package manager didn't introduce a standard.

00:09:31.130 --> 00:09:32.970
<v Speaker 1>Maybe a good thing, in my opinion, there

00:09:32.970 --> 00:09:36.555
<v Speaker 1>should be more centralized approach to package applications

00:09:36.555 --> 00:09:38.315
<v Speaker 1>in Kubernetes,

00:09:38.315 --> 00:09:40.475
<v Speaker 1>and and you should not need a third

00:09:40.475 --> 00:09:41.515
<v Speaker 1>party for that.

00:09:42.315 --> 00:09:43.595
<v Speaker 1>That's the history,

00:09:44.555 --> 00:09:47.035
<v Speaker 1>and Helm appeared and became,

00:09:47.810 --> 00:09:51.410
<v Speaker 1>I would say, de facto standard of parameterizing

00:09:51.410 --> 00:09:53.170
<v Speaker 1>and packaging the applications.

00:09:53.570 --> 00:09:54.130
<v Speaker 1>The

00:09:58.769 --> 00:10:01.665
<v Speaker 1>how is it called? Kubernetes

00:10:01.665 --> 00:10:02.545
<v Speaker 1>templating

00:10:02.545 --> 00:10:03.505
<v Speaker 1>the default

00:10:04.945 --> 00:10:06.065
<v Speaker 0>Customize?

00:10:06.305 --> 00:10:09.345
<v Speaker 1>Customize. Yes. It it it appeared later,

00:10:09.505 --> 00:10:12.464
<v Speaker 1>but it appeared too late because Helm has

00:10:12.464 --> 00:10:13.985
<v Speaker 1>already conquered the

00:10:14.305 --> 00:10:14.785
<v Speaker 1>market,

00:10:16.230 --> 00:10:18.950
<v Speaker 1>the the mindshare of the market and became

00:10:18.950 --> 00:10:20.390
<v Speaker 1>the most popular

00:10:21.590 --> 00:10:24.150
<v Speaker 1>way to deploy the applications. If we look

00:10:24.150 --> 00:10:28.310
<v Speaker 1>into data, for example, among Commodore users, we

00:10:28.310 --> 00:10:30.214
<v Speaker 1>see that %

00:10:30.214 --> 00:10:31.895
<v Speaker 1>of our users use Helm.

00:10:32.055 --> 00:10:35.095
<v Speaker 1>They maybe use it in conjunction with other

00:10:35.095 --> 00:10:38.214
<v Speaker 1>technologies also, but they still use Helm.

00:10:38.535 --> 00:10:42.660
<v Speaker 1>And second role of Helm is a contemplating

00:10:42.660 --> 00:10:46.020
<v Speaker 1>language. It's a way to duplicate and parameterize

00:10:46.100 --> 00:10:49.380
<v Speaker 1>your complicated Kubernetes manifest into something that is

00:10:49.380 --> 00:10:50.420
<v Speaker 1>more manageable

00:10:50.500 --> 00:10:53.460
<v Speaker 1>because it's great to have these microservice

00:10:53.460 --> 00:10:53.940
<v Speaker 1>all

00:10:54.345 --> 00:10:56.665
<v Speaker 1>loosely coupled things, but you have to manage

00:10:56.665 --> 00:10:59.305
<v Speaker 1>them still as a holistic,

00:11:00.185 --> 00:11:00.985
<v Speaker 1>application.

00:11:02.105 --> 00:11:04.265
<v Speaker 1>And today, Helm provides

00:11:04.505 --> 00:11:05.625
<v Speaker 1>over 10,000

00:11:05.625 --> 00:11:06.105
<v Speaker 1>packages,

00:11:06.620 --> 00:11:08.620
<v Speaker 1>thousands of repositories,

00:11:09.420 --> 00:11:11.740
<v Speaker 1>and there is a single command line tool

00:11:11.740 --> 00:11:12.940
<v Speaker 1>to operate it.

00:11:13.740 --> 00:11:15.660
<v Speaker 1>In my opinion, it's good and bad because

00:11:15.660 --> 00:11:18.620
<v Speaker 1>it's too many different things packaged into that

00:11:18.620 --> 00:11:19.740
<v Speaker 1>CLI tool.

00:11:20.380 --> 00:11:20.860
<v Speaker 1>But

00:11:21.384 --> 00:11:23.464
<v Speaker 1>that's the standard. I cannot

00:11:24.185 --> 00:11:26.505
<v Speaker 1>question the fact that Helm is the most

00:11:26.505 --> 00:11:27.225
<v Speaker 1>popular

00:11:27.464 --> 00:11:29.225
<v Speaker 1>way to package applications.

00:11:29.225 --> 00:11:32.105
<v Speaker 1>And from that popularity, we have

00:11:33.144 --> 00:11:34.745
<v Speaker 1>the whole ecosystem

00:11:36.330 --> 00:11:37.290
<v Speaker 1>emerging

00:11:37.290 --> 00:11:40.090
<v Speaker 1>from the community with plug ins to Helm,

00:11:40.090 --> 00:11:42.570
<v Speaker 1>with applications, with their own vision of how

00:11:42.570 --> 00:11:44.970
<v Speaker 1>you manage Helm or how you alter the

00:11:44.970 --> 00:11:45.610
<v Speaker 1>way Helm's

00:11:46.090 --> 00:11:47.690
<v Speaker 1>Helm applications are deployed.

00:11:49.464 --> 00:11:52.825
<v Speaker 1>And it always starts great with the technology,

00:11:53.385 --> 00:11:56.024
<v Speaker 1>and problems come and troubles come when you

00:11:56.024 --> 00:11:58.264
<v Speaker 1>start really adopting and using it.

00:12:00.390 --> 00:12:02.950
<v Speaker 1>The problems that are happening with Helm, in

00:12:02.950 --> 00:12:03.910
<v Speaker 1>my opinion,

00:12:04.150 --> 00:12:04.790
<v Speaker 1>is

00:12:05.590 --> 00:12:08.550
<v Speaker 1>they all they all originate from simple

00:12:08.630 --> 00:12:09.750
<v Speaker 1>concepts

00:12:10.390 --> 00:12:12.070
<v Speaker 1>that are used in

00:12:12.310 --> 00:12:13.830
<v Speaker 1>really extensive fashion.

00:12:14.365 --> 00:12:16.365
<v Speaker 1>In Helm, you have really

00:12:16.765 --> 00:12:18.525
<v Speaker 1>small amount of concepts.

00:12:18.605 --> 00:12:20.685
<v Speaker 1>A release a revision

00:12:21.085 --> 00:12:22.365
<v Speaker 1>of that release,

00:12:22.765 --> 00:12:24.365
<v Speaker 1>manifests values,

00:12:24.445 --> 00:12:26.845
<v Speaker 1>everything is quite simple. But when you start

00:12:26.845 --> 00:12:29.645
<v Speaker 1>using it on a daily fashion with

00:12:30.420 --> 00:12:31.860
<v Speaker 1>multiple applications,

00:12:32.020 --> 00:12:32.580
<v Speaker 1>many,

00:12:33.140 --> 00:12:34.580
<v Speaker 1>different variants,

00:12:34.580 --> 00:12:36.980
<v Speaker 1>and you add namespaces on top of it,

00:12:36.980 --> 00:12:39.779
<v Speaker 1>multi cluster aspect on top of it, suddenly

00:12:39.779 --> 00:12:41.780
<v Speaker 1>you feel that this CLI

00:12:41.940 --> 00:12:45.060
<v Speaker 1>is cumbersome for you because it's hard to

00:12:45.475 --> 00:12:46.435
<v Speaker 1>operate

00:12:46.995 --> 00:12:48.355
<v Speaker 1>with these

00:12:49.235 --> 00:12:51.315
<v Speaker 1>simple concepts multiplied

00:12:51.635 --> 00:12:52.275
<v Speaker 1>by

00:12:52.675 --> 00:12:55.875
<v Speaker 1>number of your applications, clusters, and namespaces.

00:12:56.435 --> 00:12:56.995
<v Speaker 1>And

00:12:57.899 --> 00:13:00.300
<v Speaker 1>I when I speak about this problem, I

00:13:00.300 --> 00:13:01.260
<v Speaker 1>tend to

00:13:01.899 --> 00:13:03.260
<v Speaker 1>divide it into

00:13:04.220 --> 00:13:05.339
<v Speaker 1>into two

00:13:06.060 --> 00:13:08.220
<v Speaker 1>areas. One area is that because of the

00:13:08.220 --> 00:13:09.500
<v Speaker 1>Helm popularity,

00:13:09.579 --> 00:13:11.605
<v Speaker 1>there are a lot of new users coming

00:13:11.605 --> 00:13:14.085
<v Speaker 1>into this ecosystem, and they need,

00:13:14.645 --> 00:13:17.845
<v Speaker 1>some more visual and simplified ways to learn.

00:13:18.085 --> 00:13:20.725
<v Speaker 1>And if you only give them CLI, it

00:13:20.725 --> 00:13:23.445
<v Speaker 1>becomes really hard for new and less experienced

00:13:23.445 --> 00:13:24.165
<v Speaker 1>people to learn.

00:13:24.730 --> 00:13:26.970
<v Speaker 1>I know from my past from these open

00:13:26.970 --> 00:13:28.170
<v Speaker 1>source applications

00:13:28.170 --> 00:13:28.890
<v Speaker 1>when,

00:13:29.530 --> 00:13:32.410
<v Speaker 1>in the load testing area that the magic

00:13:32.410 --> 00:13:33.530
<v Speaker 1>of popularity

00:13:33.530 --> 00:13:36.490
<v Speaker 1>comes when you respect the new users and

00:13:36.490 --> 00:13:38.010
<v Speaker 1>you give them visual,

00:13:38.090 --> 00:13:41.264
<v Speaker 1>easy, really easy to digest ways to learn

00:13:41.264 --> 00:13:42.945
<v Speaker 1>your tool and your concepts.

00:13:43.985 --> 00:13:46.785
<v Speaker 1>The experienced users on the other end, they

00:13:46.785 --> 00:13:48.145
<v Speaker 1>also want some

00:13:49.264 --> 00:13:50.385
<v Speaker 1>some visual

00:13:50.464 --> 00:13:53.505
<v Speaker 1>presentation of the complicated things that they do

00:13:53.505 --> 00:13:55.904
<v Speaker 1>because this is their daily efficiency.

00:13:56.160 --> 00:13:58.240
<v Speaker 1>They already know all of these commands. It's

00:13:58.240 --> 00:14:00.560
<v Speaker 1>just so long to run these commands, and

00:14:00.560 --> 00:14:03.199
<v Speaker 1>I will demonstrate on the further slide

00:14:03.600 --> 00:14:06.800
<v Speaker 1>what it actually means to perform quite simple

00:14:06.800 --> 00:14:08.959
<v Speaker 1>operation and get answer to simple

00:14:09.600 --> 00:14:11.519
<v Speaker 1>question with Helm CLI.

00:14:12.855 --> 00:14:13.495
<v Speaker 1>And

00:14:15.255 --> 00:14:18.535
<v Speaker 1>some people start immediately thinking how does this

00:14:18.535 --> 00:14:20.775
<v Speaker 1>idea of visualizing Helm

00:14:20.855 --> 00:14:24.135
<v Speaker 1>plays in conjunction with automation and CICD.

00:14:24.135 --> 00:14:25.975
<v Speaker 1>And I should say this is out of

00:14:25.975 --> 00:14:28.220
<v Speaker 1>the scope for the project. The CICD and

00:14:28.220 --> 00:14:30.780
<v Speaker 1>automation is already okay with CLI.

00:14:30.860 --> 00:14:33.580
<v Speaker 1>It's meant to be used through CLI. It's

00:14:33.580 --> 00:14:34.620
<v Speaker 1>for machines.

00:14:35.420 --> 00:14:38.540
<v Speaker 1>It's great for machines to to operate with

00:14:38.540 --> 00:14:41.020
<v Speaker 1>CLI. So we are not aiming to interfere

00:14:41.020 --> 00:14:43.714
<v Speaker 1>with GitOps flow and

00:14:45.634 --> 00:14:46.834
<v Speaker 1>CICD

00:14:47.074 --> 00:14:50.355
<v Speaker 1>setups with this project. But we all know

00:14:50.355 --> 00:14:50.915
<v Speaker 1>that

00:14:51.235 --> 00:14:54.035
<v Speaker 1>when things are wrong and you need to

00:14:54.035 --> 00:14:54.595
<v Speaker 1>do

00:14:55.080 --> 00:14:57.960
<v Speaker 1>investigation through CLI, this is the when the

00:14:57.960 --> 00:15:00.680
<v Speaker 1>amount of your CLI calls snowballs.

00:15:00.680 --> 00:15:02.920
<v Speaker 1>And it's okay if your CLI results in

00:15:02.920 --> 00:15:04.680
<v Speaker 1>couple of lines of response.

00:15:04.840 --> 00:15:05.720
<v Speaker 1>But in

00:15:06.120 --> 00:15:08.440
<v Speaker 1>case of Helm, you have long, long

00:15:09.605 --> 00:15:10.885
<v Speaker 1>manifests of

00:15:11.285 --> 00:15:14.245
<v Speaker 1>Kubernetes objects produced as a result of these

00:15:14.245 --> 00:15:15.045
<v Speaker 1>commands,

00:15:15.205 --> 00:15:17.205
<v Speaker 1>huge JSONs, lists

00:15:18.485 --> 00:15:19.125
<v Speaker 1>of

00:15:20.404 --> 00:15:21.125
<v Speaker 1>revisions

00:15:22.400 --> 00:15:23.120
<v Speaker 1>and

00:15:23.360 --> 00:15:24.080
<v Speaker 1>charts.

00:15:24.320 --> 00:15:26.400
<v Speaker 1>And all of that is really hard to

00:15:26.400 --> 00:15:28.720
<v Speaker 1>manage, especially if you are under the stress

00:15:28.720 --> 00:15:29.920
<v Speaker 1>of a failure.

00:15:30.480 --> 00:15:33.040
<v Speaker 1>And this is where we want to help

00:15:33.040 --> 00:15:34.960
<v Speaker 1>to experienced users also.

00:15:35.040 --> 00:15:37.120
<v Speaker 1>This is your looking glass

00:15:37.515 --> 00:15:40.235
<v Speaker 1>at your helm that's supposed to speed up

00:15:40.315 --> 00:15:43.195
<v Speaker 1>your operations in case of troubles or just

00:15:43.195 --> 00:15:44.315
<v Speaker 1>investigation.

00:15:44.635 --> 00:15:47.355
<v Speaker 1>A funny story. When I started this project

00:15:47.355 --> 00:15:49.595
<v Speaker 1>and first thing I did when I made

00:15:49.595 --> 00:15:52.555
<v Speaker 1>it just to view only capabilities of it,

00:15:53.190 --> 00:15:55.990
<v Speaker 1>And we looked at our own staging cluster,

00:15:55.990 --> 00:15:58.470
<v Speaker 1>and we actually found a couple of Helm

00:15:58.470 --> 00:16:00.870
<v Speaker 1>charts that nobody knew that it's there.

00:16:01.430 --> 00:16:03.750
<v Speaker 1>And we started asking, who knows what's that

00:16:03.750 --> 00:16:05.430
<v Speaker 1>thing? Its age is

00:16:05.750 --> 00:16:08.310
<v Speaker 1>two years, and nobody touched it since then.

00:16:08.865 --> 00:16:10.785
<v Speaker 1>It's actually a dead thing. How could we

00:16:10.785 --> 00:16:11.985
<v Speaker 1>know it without

00:16:12.865 --> 00:16:14.625
<v Speaker 1>actually when it's exposed

00:16:14.865 --> 00:16:17.345
<v Speaker 1>into our face through the UI? It's even

00:16:17.345 --> 00:16:19.505
<v Speaker 1>easy to ignore it when you're in CLI.

00:16:21.129 --> 00:16:23.370
<v Speaker 1>So that's the story. That's the motivation

00:16:23.769 --> 00:16:26.250
<v Speaker 1>and the problem that we're trying to solve,

00:16:26.250 --> 00:16:28.089
<v Speaker 1>to make things that you have

00:16:28.569 --> 00:16:31.129
<v Speaker 1>with regard to your Helm visual for you

00:16:31.129 --> 00:16:33.850
<v Speaker 1>so it's easier to operate and easier to

00:16:33.850 --> 00:16:36.329
<v Speaker 1>learn and get introduced into this ecosystem.

00:16:37.745 --> 00:16:39.105
<v Speaker 1>This is that example.

00:16:39.425 --> 00:16:41.745
<v Speaker 1>So I even omitted couple of commands to

00:16:41.745 --> 00:16:44.865
<v Speaker 1>locate the Helm chart inside your chart, but

00:16:44.865 --> 00:16:46.705
<v Speaker 1>now let's say we found that we have

00:16:46.705 --> 00:16:49.105
<v Speaker 1>this Locky chart in the Locky namespace.

00:16:49.560 --> 00:16:52.920
<v Speaker 1>And then to understand what has changed if

00:16:52.920 --> 00:16:55.000
<v Speaker 1>you experiencing some problem and you want to

00:16:55.000 --> 00:16:57.880
<v Speaker 1>understand what has changed in the recent releases

00:16:57.880 --> 00:17:00.120
<v Speaker 1>of it, this is what you're left with.

00:17:00.200 --> 00:17:02.360
<v Speaker 1>You need to generate these YAMLs.

00:17:02.675 --> 00:17:05.075
<v Speaker 1>You need to store them into files, then

00:17:05.075 --> 00:17:06.274
<v Speaker 1>you need to call

00:17:06.355 --> 00:17:08.754
<v Speaker 1>diff on those files. And if you

00:17:08.994 --> 00:17:11.234
<v Speaker 1>generated the wrong revision, you want to roll

00:17:11.234 --> 00:17:11.714
<v Speaker 1>back,

00:17:12.194 --> 00:17:14.275
<v Speaker 1>your view to one more revision. You need

00:17:14.275 --> 00:17:16.755
<v Speaker 1>to repeat all of that. And finally, the

00:17:16.755 --> 00:17:19.759
<v Speaker 1>step number eight, you're doing rollback.

00:17:20.160 --> 00:17:22.960
<v Speaker 1>And you see how many commands are there?

00:17:23.359 --> 00:17:25.760
<v Speaker 1>And I'm not showing you the outputs of

00:17:25.760 --> 00:17:28.480
<v Speaker 1>the commands, and usually those outputs are lengthy.

00:17:28.720 --> 00:17:30.720
<v Speaker 1>So this is what we're trying to solve.

00:17:30.720 --> 00:17:31.840
<v Speaker 1>We want to give

00:17:33.985 --> 00:17:36.705
<v Speaker 1>the visual way to consume all of that

00:17:36.705 --> 00:17:39.664
<v Speaker 1>information that Helm presents to us and have

00:17:39.664 --> 00:17:42.625
<v Speaker 1>slightly easier way to manage your Helm cluster

00:17:42.945 --> 00:17:44.144
<v Speaker 1>your installations

00:17:44.225 --> 00:17:45.825
<v Speaker 1>of Helm

00:17:45.985 --> 00:17:47.904
<v Speaker 1>packaged applications in the cluster.

00:17:49.450 --> 00:17:51.369
<v Speaker 1>And this is our approach to it.

00:17:52.250 --> 00:17:55.450
<v Speaker 1>We generate we created this project which gives

00:17:55.450 --> 00:17:58.730
<v Speaker 1>you the web UI because the web is

00:17:58.730 --> 00:17:59.609
<v Speaker 1>the common

00:17:59.850 --> 00:18:02.409
<v Speaker 1>way to to provide UIs today.

00:18:02.914 --> 00:18:05.875
<v Speaker 1>And through that web UI, you can see

00:18:05.875 --> 00:18:08.034
<v Speaker 1>what is there, what are the Helm charts

00:18:08.034 --> 00:18:09.475
<v Speaker 1>installed, what's their

00:18:09.715 --> 00:18:11.475
<v Speaker 1>state, what's their history,

00:18:11.715 --> 00:18:14.114
<v Speaker 1>all of the aspects of those Helm charts.

00:18:14.195 --> 00:18:16.515
<v Speaker 1>You can have the change intelligence. This is

00:18:16.515 --> 00:18:19.289
<v Speaker 1>the most important thing, and this is this

00:18:19.450 --> 00:18:21.769
<v Speaker 1>the the feature that comes or puts into

00:18:21.769 --> 00:18:23.609
<v Speaker 1>all of its products

00:18:24.169 --> 00:18:25.690
<v Speaker 1>into main

00:18:25.850 --> 00:18:28.649
<v Speaker 1>platform on of managing Kubernetes.

00:18:30.090 --> 00:18:32.169
<v Speaker 1>What has changed? It's it's easy to get

00:18:32.169 --> 00:18:34.885
<v Speaker 1>the answer, and I will demonstrate today how

00:18:34.885 --> 00:18:37.524
<v Speaker 1>easy is that with Helm Dashboard to

00:18:37.765 --> 00:18:39.845
<v Speaker 1>get the answer to the question of what

00:18:39.845 --> 00:18:42.245
<v Speaker 1>has changed when certain feature,

00:18:43.045 --> 00:18:45.365
<v Speaker 1>the flag or value was introduced.

00:18:45.525 --> 00:18:47.285
<v Speaker 1>And also, can do some

00:18:49.559 --> 00:18:50.919
<v Speaker 1>mainstream operations.

00:18:50.919 --> 00:18:53.159
<v Speaker 1>You can roll back the revision. You can

00:18:53.159 --> 00:18:55.640
<v Speaker 1>uninstall chart. You can install it, and you

00:18:55.640 --> 00:18:57.720
<v Speaker 1>can reconfigure it. And all of that with

00:18:57.720 --> 00:18:58.599
<v Speaker 1>preview.

00:18:59.720 --> 00:19:02.279
<v Speaker 1>And one advanced feature that we

00:19:02.945 --> 00:19:05.505
<v Speaker 1>wanted to include on top of the

00:19:05.825 --> 00:19:09.185
<v Speaker 1>standard Helm functionality is the scanner integrations because

00:19:09.185 --> 00:19:10.945
<v Speaker 1>this is the thing that became

00:19:11.585 --> 00:19:13.745
<v Speaker 1>the fact of standard in the industry

00:19:13.905 --> 00:19:14.465
<v Speaker 1>to

00:19:16.220 --> 00:19:17.659
<v Speaker 1>to scan your

00:19:17.899 --> 00:19:18.700
<v Speaker 1>manifests

00:19:18.700 --> 00:19:21.740
<v Speaker 1>and Kubernetes objects for the problems. So this

00:19:21.740 --> 00:19:23.979
<v Speaker 1>is something that is a standard

00:19:24.299 --> 00:19:27.500
<v Speaker 1>for today's operations with Kubernetes,

00:19:27.500 --> 00:19:31.095
<v Speaker 1>and we integrated couple of code scanning or

00:19:31.095 --> 00:19:34.455
<v Speaker 1>manifest scanning tools into Helm Dashboard, but that's

00:19:34.455 --> 00:19:35.575
<v Speaker 1>an optional

00:19:35.735 --> 00:19:38.695
<v Speaker 1>integration that you don't have to use

00:19:38.775 --> 00:19:40.134
<v Speaker 1>if you don't want to.

00:19:41.895 --> 00:19:44.215
<v Speaker 1>And, of course, it's all open source,

00:19:45.210 --> 00:19:46.889
<v Speaker 1>free. There's no

00:19:49.210 --> 00:19:52.010
<v Speaker 1>nothing that I'm showing today is closed source

00:19:52.010 --> 00:19:54.330
<v Speaker 1>or anything like that. I I'm I'm the

00:19:54.330 --> 00:19:56.490
<v Speaker 1>open source guy. I'm only doing open source

00:19:56.490 --> 00:19:56.890
<v Speaker 1>games.

00:19:58.615 --> 00:20:01.894
<v Speaker 1>There are some existing solutions. Let's be fair.

00:20:02.375 --> 00:20:04.455
<v Speaker 1>And today, I had a really funny morning

00:20:04.455 --> 00:20:07.015
<v Speaker 1>because I woke up and then on LinkedIn,

00:20:07.015 --> 00:20:08.934
<v Speaker 1>in one of the posts of announcing this

00:20:08.934 --> 00:20:09.575
<v Speaker 1>project,

00:20:09.815 --> 00:20:11.654
<v Speaker 1>one of the guys asked me the question,

00:20:12.800 --> 00:20:15.360
<v Speaker 1>how does this compare to k nine s

00:20:15.360 --> 00:20:17.919
<v Speaker 1>support of Helm? And I was like,

00:20:19.200 --> 00:20:21.600
<v Speaker 1>does k nine s have Helm support? Did

00:20:21.600 --> 00:20:22.639
<v Speaker 1>I miss something?

00:20:23.040 --> 00:20:26.224
<v Speaker 1>And I went googling because I completely

00:20:26.304 --> 00:20:28.784
<v Speaker 1>missed that thing. And I went googling, and

00:20:28.784 --> 00:20:31.505
<v Speaker 1>I googled this, and I googled that, canine

00:20:31.505 --> 00:20:33.585
<v Speaker 1>s helm, helm canine s.

00:20:34.145 --> 00:20:35.424
<v Speaker 1>I found nothing.

00:20:35.585 --> 00:20:37.424
<v Speaker 1>And I was curious. I went to the

00:20:37.424 --> 00:20:38.625
<v Speaker 1>canine s website,

00:20:38.970 --> 00:20:40.970
<v Speaker 1>and I read through their docs. I searched

00:20:40.970 --> 00:20:42.009
<v Speaker 1>through their docs.

00:20:42.330 --> 00:20:44.890
<v Speaker 1>No mention of Helm. Then I opened K

00:20:44.890 --> 00:20:47.609
<v Speaker 1>nine s and I typed colon

00:20:47.610 --> 00:20:50.409
<v Speaker 1>Helm and it said there is Helm.

00:20:50.970 --> 00:20:52.409
<v Speaker 1>And I'm

00:20:52.024 --> 00:20:55.465
<v Speaker 1>like, wow. What's there? And it's it only

00:20:55.465 --> 00:20:58.344
<v Speaker 1>shows the list of installed charts

00:20:58.505 --> 00:21:01.304
<v Speaker 1>and the notes, the description of the chart,

00:21:01.304 --> 00:21:04.105
<v Speaker 1>which is probably the least important information in

00:21:04.105 --> 00:21:06.664
<v Speaker 1>the Helm chart. So it's there. The support

00:21:06.664 --> 00:21:08.930
<v Speaker 1>for the Helm in k nine s is

00:21:08.930 --> 00:21:11.330
<v Speaker 1>there. It's just well hidden. And this is

00:21:11.330 --> 00:21:13.650
<v Speaker 1>what I responded to the guy who asked

00:21:13.650 --> 00:21:17.490
<v Speaker 1>the question because this feature is extremely well

00:21:17.490 --> 00:21:18.370
<v Speaker 1>hidden.

00:21:19.570 --> 00:21:20.770
<v Speaker 1>That's how

00:21:21.825 --> 00:21:23.744
<v Speaker 1>how I react on that

00:21:25.105 --> 00:21:25.985
<v Speaker 1>at first.

00:21:26.625 --> 00:21:28.625
<v Speaker 1>And well, it's hard to compare k and

00:21:28.625 --> 00:21:30.705
<v Speaker 1>n s because the the functionality there is

00:21:30.705 --> 00:21:32.225
<v Speaker 1>really, really small.

00:21:33.105 --> 00:21:34.705
<v Speaker 1>There are applications

00:21:34.705 --> 00:21:36.785
<v Speaker 1>like Lens, Kubernetes dashboard,

00:21:37.799 --> 00:21:38.999
<v Speaker 1>Kube apps,

00:21:39.000 --> 00:21:39.880
<v Speaker 1>but the

00:21:40.120 --> 00:21:42.200
<v Speaker 1>their problem is that the Helm is not

00:21:42.200 --> 00:21:45.080
<v Speaker 1>a central thing. Usually, it's some something on

00:21:45.080 --> 00:21:46.440
<v Speaker 1>the side. It's

00:21:46.919 --> 00:21:47.639
<v Speaker 1>heavily

00:21:48.519 --> 00:21:50.965
<v Speaker 1>bloated with a lot of features. And in

00:21:50.965 --> 00:21:52.644
<v Speaker 1>my opinion, it's really hard if we look

00:21:52.644 --> 00:21:56.164
<v Speaker 1>at that problem of helping new users to

00:21:56.164 --> 00:21:59.365
<v Speaker 1>get into Helm. That's not the way, for

00:21:59.365 --> 00:22:02.965
<v Speaker 1>new users to get introduced into ecosystem. It's

00:22:02.965 --> 00:22:05.320
<v Speaker 1>too heavy. A lot of those require much

00:22:05.320 --> 00:22:07.639
<v Speaker 1>heavier processes of installing.

00:22:08.520 --> 00:22:10.679
<v Speaker 1>While I would say that the simple user

00:22:10.679 --> 00:22:13.799
<v Speaker 1>and even experienced user, they only need some

00:22:14.120 --> 00:22:15.000
<v Speaker 1>sugar

00:22:15.000 --> 00:22:16.679
<v Speaker 1>that you put on top of that Helm

00:22:16.679 --> 00:22:18.874
<v Speaker 1>CLI, which is great. And

00:22:19.195 --> 00:22:20.154
<v Speaker 1>here you go.

00:22:21.115 --> 00:22:21.754
<v Speaker 1>And

00:22:21.995 --> 00:22:24.715
<v Speaker 1>if we it's a popular question. How how

00:22:24.715 --> 00:22:27.434
<v Speaker 1>does this relate to Argo CD? Well, the

00:22:27.434 --> 00:22:29.674
<v Speaker 1>situation with Argo CD is actually much, much

00:22:30.409 --> 00:22:33.289
<v Speaker 1>more tricky because ArgoCD doesn't use Helm when

00:22:33.289 --> 00:22:35.129
<v Speaker 1>they deploy Helm applications.

00:22:35.370 --> 00:22:36.889
<v Speaker 1>They only generate

00:22:36.890 --> 00:22:40.009
<v Speaker 1>manifest, but then the the actual management

00:22:40.010 --> 00:22:41.369
<v Speaker 1>is not done by

00:22:42.169 --> 00:22:42.730
<v Speaker 1>Helm,

00:22:43.045 --> 00:22:46.245
<v Speaker 1>which leads to losing some really crucial information

00:22:46.245 --> 00:22:48.805
<v Speaker 1>about the history of the chart. It's hard

00:22:48.805 --> 00:22:52.565
<v Speaker 1>in Rawkode CD to find the diff between

00:22:52.565 --> 00:22:54.565
<v Speaker 1>couple of revisions of the past.

00:22:55.600 --> 00:22:57.279
<v Speaker 1>If you have that question,

00:22:57.600 --> 00:23:00.639
<v Speaker 1>what led to a trouble. RUCD is

00:23:00.880 --> 00:23:01.840
<v Speaker 1>more about

00:23:02.159 --> 00:23:02.960
<v Speaker 1>GitOps,

00:23:02.960 --> 00:23:03.679
<v Speaker 1>and it

00:23:04.559 --> 00:23:06.960
<v Speaker 1>assumes that you will have your Git history

00:23:06.960 --> 00:23:08.559
<v Speaker 1>to answer those questions.

00:23:08.799 --> 00:23:11.524
<v Speaker 1>But between the chart and your

00:23:12.005 --> 00:23:13.045
<v Speaker 1>Kubernetes,

00:23:13.045 --> 00:23:15.605
<v Speaker 1>there is this step of generating manifests. So

00:23:15.605 --> 00:23:18.565
<v Speaker 1>in my opinion, that's not always sufficient.

00:23:18.965 --> 00:23:22.165
<v Speaker 1>And applications like Prencher and Codefresh,

00:23:22.165 --> 00:23:24.405
<v Speaker 1>they attach the Helm functionality

00:23:24.405 --> 00:23:27.419
<v Speaker 1>to some bigger beast requiring you

00:23:27.580 --> 00:23:30.539
<v Speaker 1>to sign in, sign up, and

00:23:30.860 --> 00:23:33.100
<v Speaker 1>have this huge beast and find in small

00:23:33.100 --> 00:23:36.299
<v Speaker 1>corner of it your Helm functionality. In my

00:23:36.299 --> 00:23:38.860
<v Speaker 1>opinion, again, it's defocusing

00:23:40.055 --> 00:23:42.295
<v Speaker 1>if you are just sort of starting with

00:23:42.295 --> 00:23:43.015
<v Speaker 1>Helm.

00:23:43.175 --> 00:23:45.975
<v Speaker 1>So this is the key in my vision

00:23:46.695 --> 00:23:47.335
<v Speaker 1>of

00:23:48.215 --> 00:23:49.895
<v Speaker 1>the Helm Dashboard project.

00:23:50.055 --> 00:23:51.255
<v Speaker 1>The key is focus.

00:23:52.460 --> 00:23:55.500
<v Speaker 1>Let's have a dashboard that is a UI

00:23:55.500 --> 00:23:56.460
<v Speaker 1>over Helm.

00:23:56.860 --> 00:24:00.220
<v Speaker 1>It's focused on Helm. It's Helm native, if

00:24:00.220 --> 00:24:00.860
<v Speaker 1>you will,

00:24:01.740 --> 00:24:02.299
<v Speaker 1>and

00:24:02.780 --> 00:24:05.820
<v Speaker 1>it's easier for you to grasp the idea

00:24:05.820 --> 00:24:07.180
<v Speaker 1>of what's going on there.

00:24:09.255 --> 00:24:11.335
<v Speaker 1>So what we have at this stage of

00:24:11.335 --> 00:24:12.294
<v Speaker 1>the project,

00:24:12.455 --> 00:24:14.774
<v Speaker 1>and it's already there. We have the Golang

00:24:14.774 --> 00:24:18.054
<v Speaker 1>application with web front end. It all runs

00:24:18.054 --> 00:24:21.860
<v Speaker 1>locally on your computer. It uses your Kubernetes

00:24:21.860 --> 00:24:24.500
<v Speaker 1>context. It doesn't do any

00:24:24.820 --> 00:24:27.460
<v Speaker 1>fishy things with secrets

00:24:27.460 --> 00:24:30.180
<v Speaker 1>and access and sign ups. Nothing like that.

00:24:30.180 --> 00:24:33.780
<v Speaker 1>If you have Helm working locally, kubectl

00:24:33.780 --> 00:24:35.780
<v Speaker 1>working locally, that thing would also

00:24:36.184 --> 00:24:40.024
<v Speaker 1>work using that same communication and configuration.

00:24:40.105 --> 00:24:43.065
<v Speaker 1>It will recognize and respect your kubectl

00:24:43.065 --> 00:24:43.865
<v Speaker 1>config

00:24:43.865 --> 00:24:45.705
<v Speaker 1>files, so you will have your

00:24:45.945 --> 00:24:47.225
<v Speaker 1>clusters listed there.

00:24:48.620 --> 00:24:50.940
<v Speaker 1>All of the functionality that I mentioned

00:24:51.660 --> 00:24:54.300
<v Speaker 1>earlier and I will show later, it's there.

00:24:55.180 --> 00:24:57.420
<v Speaker 1>It's easy to install. It's made in a

00:24:57.420 --> 00:24:59.660
<v Speaker 1>form it's shipped in the form of Helm

00:24:59.660 --> 00:25:01.660
<v Speaker 1>plug in. So you install it and then

00:25:01.660 --> 00:25:03.340
<v Speaker 1>you run Helm Dashboard,

00:25:03.725 --> 00:25:06.044
<v Speaker 1>and it does the thing. It opens you

00:25:06.045 --> 00:25:09.085
<v Speaker 1>a browser tab with the application, and you

00:25:09.085 --> 00:25:11.485
<v Speaker 1>can start right away. I will demo that.

00:25:11.565 --> 00:25:14.285
<v Speaker 1>We have GitHub project. We have GitHub issues

00:25:14.285 --> 00:25:16.605
<v Speaker 1>and Slack chat in as a support channels.

00:25:16.950 --> 00:25:19.429
<v Speaker 1>So you can either live chat if you

00:25:19.429 --> 00:25:21.669
<v Speaker 1>prefer that or use GitHub issues if you

00:25:21.669 --> 00:25:23.509
<v Speaker 1>prefer that. I'm there,

00:25:24.230 --> 00:25:27.029
<v Speaker 1>and ready and happy to answer some of

00:25:27.029 --> 00:25:27.909
<v Speaker 1>your questions.

00:25:28.309 --> 00:25:31.095
<v Speaker 1>We already have some questions and even pull

00:25:31.095 --> 00:25:31.895
<v Speaker 1>requests,

00:25:32.055 --> 00:25:35.095
<v Speaker 1>submitted by people, which is quite exciting.

00:25:35.415 --> 00:25:37.575
<v Speaker 1>And we have energy and knowledge to improve

00:25:37.575 --> 00:25:40.215
<v Speaker 1>it further. I have my road map. I

00:25:41.015 --> 00:25:41.815
<v Speaker 1>partially

00:25:41.975 --> 00:25:44.295
<v Speaker 1>expressed it into GitHub issues. If you want

00:25:44.295 --> 00:25:45.095
<v Speaker 1>to contribute

00:25:45.360 --> 00:25:47.600
<v Speaker 1>something, there are a couple of simple issues

00:25:47.600 --> 00:25:48.480
<v Speaker 1>to fix

00:25:48.720 --> 00:25:49.440
<v Speaker 1>and

00:25:49.840 --> 00:25:50.639
<v Speaker 1>maybe

00:25:51.280 --> 00:25:53.759
<v Speaker 1>bigger features to contribute.

00:25:54.720 --> 00:25:56.720
<v Speaker 1>I'm open for that collaboration

00:25:56.720 --> 00:25:59.440
<v Speaker 1>with anyone who's interested in pushing this

00:25:59.855 --> 00:26:01.535
<v Speaker 1>cool initiative forward.

00:26:02.175 --> 00:26:03.215
<v Speaker 1>And with that,

00:26:03.695 --> 00:26:05.054
<v Speaker 1>I think let's

00:26:05.215 --> 00:26:06.415
<v Speaker 1>dive into

00:26:06.495 --> 00:26:09.615
<v Speaker 1>live demo area where we will see the

00:26:09.615 --> 00:26:10.255
<v Speaker 1>things

00:26:11.770 --> 00:26:13.929
<v Speaker 1>live and going. David,

00:26:14.490 --> 00:26:17.929
<v Speaker 1>any notes so far? Should I proceed, or

00:26:18.250 --> 00:26:19.450
<v Speaker 1>do we need to

00:26:20.010 --> 00:26:22.330
<v Speaker 1>make a pause? Maybe I spoke too much.

00:26:23.049 --> 00:26:25.735
<v Speaker 0>No. I think you've described the project very

00:26:25.735 --> 00:26:27.415
<v Speaker 0>well. I love all the context. I love

00:26:27.415 --> 00:26:29.174
<v Speaker 0>all the history. I love that you've really

00:26:29.174 --> 00:26:31.095
<v Speaker 0>nailed down to what the problem statement is

00:26:31.095 --> 00:26:32.855
<v Speaker 0>and how you think you can solve that

00:26:32.855 --> 00:26:33.494
<v Speaker 0>and

00:26:33.655 --> 00:26:35.335
<v Speaker 0>help people. So, like, I think that was

00:26:35.335 --> 00:26:37.015
<v Speaker 0>a really good overview, and I'm looking forward

00:26:37.015 --> 00:26:39.095
<v Speaker 0>now to actually seeing you use the product.

00:26:39.780 --> 00:26:41.539
<v Speaker 0>Let's let's take a look at it.

00:26:42.180 --> 00:26:45.140
<v Speaker 1>Okay. Great. So let's let me shut down

00:26:45.140 --> 00:26:46.340
<v Speaker 1>the previous

00:26:46.340 --> 00:26:47.059
<v Speaker 1>thing.

00:26:47.460 --> 00:26:49.620
<v Speaker 1>Let's say I'm starting

00:26:49.860 --> 00:26:50.980
<v Speaker 1>my next

00:26:51.380 --> 00:26:54.765
<v Speaker 1>session of Helm Dashboard. This is my favorite

00:26:54.765 --> 00:26:56.044
<v Speaker 1>part of all of these

00:26:57.245 --> 00:27:00.525
<v Speaker 1>webinars and podcasts is the live demonstration. So

00:27:00.525 --> 00:27:02.205
<v Speaker 1>the way to invoke it, I it it

00:27:02.205 --> 00:27:05.085
<v Speaker 1>assumes that I've already installed that. There is

00:27:05.085 --> 00:27:07.085
<v Speaker 1>installation instructions on the Helm

00:27:07.750 --> 00:27:10.950
<v Speaker 1>Dashboard project page. There is this command you

00:27:10.950 --> 00:27:11.989
<v Speaker 1>want to

00:27:13.350 --> 00:27:14.309
<v Speaker 1>install it.

00:27:15.590 --> 00:27:16.230
<v Speaker 1>And

00:27:18.150 --> 00:27:19.109
<v Speaker 1>Helm

00:27:19.350 --> 00:27:21.030
<v Speaker 1>Dashboard

00:27:20.804 --> 00:27:23.364
<v Speaker 1>is the command you you run to

00:27:24.245 --> 00:27:27.124
<v Speaker 1>invoke it, and it pops up automatically

00:27:27.284 --> 00:27:30.804
<v Speaker 1>the browser tab with your list of installed

00:27:30.804 --> 00:27:31.604
<v Speaker 1>charts.

00:27:32.404 --> 00:27:34.484
<v Speaker 1>On the left, you can see my clusters.

00:27:34.485 --> 00:27:37.000
<v Speaker 1>I can switch to GKE,

00:27:37.160 --> 00:27:39.320
<v Speaker 1>and I can switch this is my local

00:27:39.320 --> 00:27:42.039
<v Speaker 1>default cluster of Kubernetes kind.

00:27:42.760 --> 00:27:44.600
<v Speaker 0>So is that the context that you have

00:27:44.600 --> 00:27:47.000
<v Speaker 0>in your KubeConf? Yes. Yes. Exactly. This is

00:27:47.000 --> 00:27:47.800
<v Speaker 1>my KubeCon

00:27:48.040 --> 00:27:48.760
<v Speaker 1>KubeConf

00:27:49.325 --> 00:27:50.365
<v Speaker 1>KubeConfig

00:27:50.365 --> 00:27:51.245
<v Speaker 1>context.

00:27:51.405 --> 00:27:53.404
<v Speaker 1>So this is my JKE with

00:27:53.805 --> 00:27:56.205
<v Speaker 1>the charts installed there, and this is my

00:27:56.205 --> 00:27:57.644
<v Speaker 1>local kind cluster

00:27:57.725 --> 00:27:59.485
<v Speaker 1>with the chart installed there.

00:27:59.805 --> 00:28:00.445
<v Speaker 1>So

00:28:00.685 --> 00:28:02.845
<v Speaker 1>let's see what's the first thing we will

00:28:02.845 --> 00:28:05.005
<v Speaker 1>we will do. Let's uninstall the chart

00:28:05.780 --> 00:28:06.100
<v Speaker 1>or No.

00:28:07.299 --> 00:28:09.539
<v Speaker 1>No. No. Yeah. Let's delete stuff. Come on.

00:28:09.860 --> 00:28:12.260
<v Speaker 0>Let's be brief. We'll delete it. I think

00:28:12.260 --> 00:28:15.460
<v Speaker 1>that we should go through the flow of

00:28:15.620 --> 00:28:18.020
<v Speaker 1>the view

00:28:16.995 --> 00:28:18.195
<v Speaker 1>view capabilities

00:28:18.195 --> 00:28:20.115
<v Speaker 1>first because if I will delete the chart

00:28:20.115 --> 00:28:22.514
<v Speaker 1>that has history, what will we view? So

00:28:23.155 --> 00:28:25.155
<v Speaker 1>let's view. Let's see. I I have repaired

00:28:25.155 --> 00:28:27.955
<v Speaker 1>the history for met metrics server.

00:28:28.835 --> 00:28:31.250
<v Speaker 1>So I clicked on it, And you can

00:28:31.250 --> 00:28:33.730
<v Speaker 1>already see how much information is in front

00:28:33.730 --> 00:28:34.450
<v Speaker 1>of you

00:28:34.850 --> 00:28:35.970
<v Speaker 1>even here

00:28:36.210 --> 00:28:37.090
<v Speaker 1>without

00:28:37.730 --> 00:28:39.649
<v Speaker 1>invoking too many commands.

00:28:39.970 --> 00:28:42.130
<v Speaker 1>You get you get all of that information.

00:28:42.585 --> 00:28:44.745
<v Speaker 1>So all of this meta information about the

00:28:44.745 --> 00:28:46.904
<v Speaker 1>chart, it's okay. But this is this is

00:28:46.904 --> 00:28:49.465
<v Speaker 1>the valuable part on the left, for example.

00:28:49.625 --> 00:28:51.945
<v Speaker 1>You can see the history of your chart,

00:28:52.745 --> 00:28:54.505
<v Speaker 1>and you can immediately

00:28:54.505 --> 00:28:55.945
<v Speaker 1>see that, for example,

00:28:56.345 --> 00:28:58.585
<v Speaker 1>this was the downgrade

00:28:58.190 --> 00:29:00.029
<v Speaker 1>and that lasted

00:29:00.670 --> 00:29:01.950
<v Speaker 1>for three hours.

00:29:02.190 --> 00:29:05.390
<v Speaker 1>Then after three hours, I upgraded it and

00:29:05.390 --> 00:29:07.789
<v Speaker 1>it was lasting for fifty six minutes.

00:29:08.429 --> 00:29:10.670
<v Speaker 1>And and this is the perspective that we're

00:29:10.670 --> 00:29:13.885
<v Speaker 1>trying to put into Helm Dashboard that you

00:29:13.965 --> 00:29:15.645
<v Speaker 1>most of the time so you don't care

00:29:15.645 --> 00:29:18.684
<v Speaker 1>the absolute date of when the thing happened.

00:29:18.685 --> 00:29:21.885
<v Speaker 1>It was on twenty sixth or twenty seventh.

00:29:21.885 --> 00:29:23.805
<v Speaker 1>It's more important for how long did it

00:29:23.805 --> 00:29:25.520
<v Speaker 1>last. If it lived

00:29:25.520 --> 00:29:28.320
<v Speaker 1>short life, then probably something was going on

00:29:28.320 --> 00:29:31.040
<v Speaker 1>there. Somebody was reconfiguring it. If it was

00:29:31.040 --> 00:29:32.159
<v Speaker 1>lasting for

00:29:32.400 --> 00:29:33.919
<v Speaker 1>weeks or

00:29:34.000 --> 00:29:36.160
<v Speaker 1>days at least, then probably it was a

00:29:36.160 --> 00:29:37.040
<v Speaker 1>stable state,

00:29:37.445 --> 00:29:40.404
<v Speaker 1>and it's a candidate to roll back to

00:29:40.485 --> 00:29:42.004
<v Speaker 1>if you have problems.

00:29:42.485 --> 00:29:44.725
<v Speaker 1>And you can see that here, for example,

00:29:44.725 --> 00:29:46.405
<v Speaker 1>I rolled back and you can see the

00:29:46.405 --> 00:29:49.205
<v Speaker 1>the icon designating that it was a rollback

00:29:49.205 --> 00:29:51.850
<v Speaker 1>action. So you already start getting some more

00:29:51.850 --> 00:29:53.130
<v Speaker 1>information than

00:29:53.450 --> 00:29:56.090
<v Speaker 1>you get with bare Helm

00:29:56.170 --> 00:29:57.289
<v Speaker 1>command line

00:29:58.090 --> 00:29:59.130
<v Speaker 1>that you run.

00:30:00.010 --> 00:30:02.250
<v Speaker 1>Don't get me wrong. This thing runs Helm

00:30:02.250 --> 00:30:04.490
<v Speaker 1>under the hood. It just

00:30:05.705 --> 00:30:07.945
<v Speaker 1>mixes it with a lot of sugar

00:30:08.025 --> 00:30:10.345
<v Speaker 1>and presents you a nice

00:30:10.745 --> 00:30:14.505
<v Speaker 1>birthday cake as opposed to the sugar and

00:30:14.505 --> 00:30:15.304
<v Speaker 1>flour

00:30:15.465 --> 00:30:16.105
<v Speaker 1>separated.

00:30:17.460 --> 00:30:19.380
<v Speaker 1>So this is the this is the idea.

00:30:19.380 --> 00:30:22.179
<v Speaker 1>And from here, we can do either actions

00:30:22.260 --> 00:30:25.380
<v Speaker 1>or we can view different aspects of this

00:30:25.380 --> 00:30:27.779
<v Speaker 1>Helm chart that is installed. Let's view the

00:30:27.779 --> 00:30:29.940
<v Speaker 1>aspects of the Helm chart. First, we can

00:30:29.940 --> 00:30:31.059
<v Speaker 1>see the current

00:30:31.945 --> 00:30:34.505
<v Speaker 1>resources in the Kubernetes cluster. We can even

00:30:34.505 --> 00:30:36.265
<v Speaker 1>describe those resources

00:30:36.585 --> 00:30:37.625
<v Speaker 1>and see

00:30:39.145 --> 00:30:42.665
<v Speaker 1>the described view of those resources to spot,

00:30:42.665 --> 00:30:44.985
<v Speaker 1>I don't know, events or problems that are

00:30:44.985 --> 00:30:46.745
<v Speaker 1>running right now. And

00:30:47.070 --> 00:30:48.589
<v Speaker 1>this is the first view.

00:30:49.149 --> 00:30:51.070
<v Speaker 1>The second view is the manifest. This is

00:30:51.070 --> 00:30:53.630
<v Speaker 1>where you start digging into problems and you

00:30:53.870 --> 00:30:56.750
<v Speaker 1>your problems usually originate from manifest. But in

00:30:56.750 --> 00:30:59.070
<v Speaker 1>manifest, a lot of times you don't want

00:30:59.070 --> 00:31:01.630
<v Speaker 1>to just look through the manifest YAML.

00:31:02.215 --> 00:31:04.775
<v Speaker 1>It's quite tedious unless you know what you're

00:31:04.775 --> 00:31:07.335
<v Speaker 1>looking for. You rather would look for

00:31:07.575 --> 00:31:09.975
<v Speaker 1>the div. Nice. And for example, you may

00:31:09.975 --> 00:31:13.575
<v Speaker 1>see that I was introducing the wrong command

00:31:13.575 --> 00:31:15.335
<v Speaker 1>line and then rolling back. What was the

00:31:15.335 --> 00:31:18.080
<v Speaker 1>meaning of this rollback? I rolled back

00:31:18.240 --> 00:31:21.040
<v Speaker 1>to the working state from intentionally

00:31:21.040 --> 00:31:22.480
<v Speaker 1>non working state.

00:31:22.960 --> 00:31:24.880
<v Speaker 1>And if I just click here, you can

00:31:24.880 --> 00:31:26.480
<v Speaker 1>see what was that

00:31:26.800 --> 00:31:29.840
<v Speaker 1>upgrade of chart revision. It led

00:31:30.320 --> 00:31:31.840
<v Speaker 1>it resulted in

00:31:32.475 --> 00:31:35.275
<v Speaker 1>some annotations and it should also be resulting

00:31:35.275 --> 00:31:37.434
<v Speaker 1>in some image upgrades.

00:31:37.515 --> 00:31:39.275
<v Speaker 1>And you can see this is this was

00:31:39.275 --> 00:31:39.914
<v Speaker 1>my

00:31:40.315 --> 00:31:41.434
<v Speaker 1>malicious

00:31:42.155 --> 00:31:43.914
<v Speaker 1>option introduced here.

00:31:44.315 --> 00:31:46.955
<v Speaker 1>So this is this is cost you only

00:31:46.955 --> 00:31:50.230
<v Speaker 1>one click. What was this? What was that?

00:31:50.230 --> 00:31:53.350
<v Speaker 1>Why why this didn't upgrade or didn't didn't

00:31:53.350 --> 00:31:54.309
<v Speaker 1>downgrade?

00:31:54.310 --> 00:31:56.870
<v Speaker 1>This is because I reconfigured it. And this

00:31:56.870 --> 00:31:59.830
<v Speaker 1>one is obviously the installation, the first step.

00:32:01.255 --> 00:32:04.615
<v Speaker 1>When I was reconfiguring it, was it originating

00:32:04.615 --> 00:32:06.054
<v Speaker 1>from anything else

00:32:06.535 --> 00:32:08.775
<v Speaker 1>or just my actions? Then we can switch

00:32:08.775 --> 00:32:09.894
<v Speaker 1>into values

00:32:10.055 --> 00:32:11.815
<v Speaker 1>and see what was my,

00:32:12.630 --> 00:32:15.350
<v Speaker 1>let's switch user defined values only. This is

00:32:15.350 --> 00:32:17.669
<v Speaker 1>what I did. This is exactly my change.

00:32:18.470 --> 00:32:21.190
<v Speaker 1>And it becomes important if you collaborate and

00:32:21.590 --> 00:32:24.310
<v Speaker 1>multiple people do multiple changes to the cluster.

00:32:24.310 --> 00:32:25.830
<v Speaker 1>This is how you figure it out

00:32:26.390 --> 00:32:29.345
<v Speaker 1>in case you have questions to what was

00:32:29.345 --> 00:32:31.904
<v Speaker 1>the story of evolution of this

00:32:32.705 --> 00:32:33.424
<v Speaker 1>chart.

00:32:33.505 --> 00:32:36.465
<v Speaker 1>So this was the reconfiguration

00:32:36.705 --> 00:32:39.265
<v Speaker 1>that broke it. This was the rollback that

00:32:39.265 --> 00:32:40.145
<v Speaker 1>fixed it back.

00:32:41.549 --> 00:32:43.869
<v Speaker 1>And all of that with just mouse clicks.

00:32:44.669 --> 00:32:46.669
<v Speaker 1>Super easy. The notes, as I said, is

00:32:46.669 --> 00:32:48.989
<v Speaker 1>probably the least interesting

00:32:49.549 --> 00:32:51.070
<v Speaker 1>part of every chart.

00:32:51.389 --> 00:32:52.109
<v Speaker 1>Nevertheless,

00:32:52.269 --> 00:32:52.830
<v Speaker 1>it's there.

00:32:54.125 --> 00:32:56.125
<v Speaker 1>So this is the viewing capabilities.

00:32:56.125 --> 00:32:58.924
<v Speaker 1>And this is the place where we'll probably

00:32:59.085 --> 00:33:02.284
<v Speaker 1>look at the integration with scanners,

00:33:03.164 --> 00:33:05.005
<v Speaker 1>the code scanners. There's this button.

00:33:05.690 --> 00:33:07.610
<v Speaker 1>You can describe the resource and you can

00:33:07.610 --> 00:33:09.210
<v Speaker 1>also scan. So if I if you have

00:33:09.210 --> 00:33:10.649
<v Speaker 1>locally installed

00:33:10.730 --> 00:33:11.690
<v Speaker 1>Chekov

00:33:11.930 --> 00:33:14.250
<v Speaker 1>and Trivy or one of these

00:33:15.210 --> 00:33:18.570
<v Speaker 1>problem scanner, you can click on the button

00:33:18.175 --> 00:33:20.095
<v Speaker 1>and it would trigger

00:33:20.335 --> 00:33:23.294
<v Speaker 1>the check of that Kubernetes resource for you.

00:33:23.455 --> 00:33:25.774
<v Speaker 1>So you can review what Chekhov

00:33:25.775 --> 00:33:29.695
<v Speaker 1>thinks about this specific chart and Kubernetes resource,

00:33:29.695 --> 00:33:32.095
<v Speaker 1>and you can also know what Trivy thinks

00:33:32.095 --> 00:33:32.655
<v Speaker 1>about it.

00:33:33.259 --> 00:33:36.059
<v Speaker 1>And they look at it from different perspectives.

00:33:36.059 --> 00:33:37.499
<v Speaker 1>The reports are huge,

00:33:37.980 --> 00:33:39.980
<v Speaker 1>and you can review that. But this is

00:33:39.980 --> 00:33:41.899
<v Speaker 1>your access to this

00:33:44.539 --> 00:33:45.899
<v Speaker 1>normal today

00:33:46.059 --> 00:33:48.655
<v Speaker 1>question of do I have any troubles? Do

00:33:48.655 --> 00:33:52.095
<v Speaker 1>I have any high priority troubles here?

00:33:53.855 --> 00:33:56.895
<v Speaker 1>Criticals. Do I have criticals? No. There's only

00:33:56.895 --> 00:33:59.855
<v Speaker 1>one critical. Well, probably criticals and highs are

00:33:59.855 --> 00:34:02.410
<v Speaker 1>to fee to be fixed. Maybe I should

00:34:02.410 --> 00:34:04.490
<v Speaker 1>upgrade something or at least keep an eye

00:34:04.490 --> 00:34:05.130
<v Speaker 1>on it.

00:34:07.210 --> 00:34:10.010
<v Speaker 1>Let's go further. How do we reconfigure? There's

00:34:10.010 --> 00:34:10.970
<v Speaker 1>this button

00:34:11.050 --> 00:34:12.650
<v Speaker 1>that you can just click,

00:34:12.810 --> 00:34:14.250
<v Speaker 1>and it would reconfigure

00:34:14.250 --> 00:34:17.415
<v Speaker 1>your the application. For example, there is this

00:34:19.095 --> 00:34:19.735
<v Speaker 1>already

00:34:21.015 --> 00:34:22.295
<v Speaker 1>existing value.

00:34:22.295 --> 00:34:24.375
<v Speaker 1>I can, by the way, downgrade the app

00:34:24.375 --> 00:34:26.295
<v Speaker 1>from this screen. If I really want, I

00:34:26.295 --> 00:34:27.655
<v Speaker 1>can go back

00:34:28.100 --> 00:34:30.179
<v Speaker 1>to the previous version, like or I can

00:34:30.179 --> 00:34:32.980
<v Speaker 1>upgrade from the same view if I want,

00:34:32.980 --> 00:34:34.739
<v Speaker 1>if there is a newer version.

00:34:35.060 --> 00:34:36.820
<v Speaker 1>And what's important,

00:34:36.820 --> 00:34:39.460
<v Speaker 1>this is where we assemble together

00:34:39.460 --> 00:34:42.580
<v Speaker 1>different sources of the information about the chart,

00:34:42.585 --> 00:34:44.185
<v Speaker 1>and we allow you to

00:34:45.625 --> 00:34:48.505
<v Speaker 1>manage the upgrade, downgrade, or modification

00:34:48.505 --> 00:34:51.304
<v Speaker 1>process of the chart with everything you need

00:34:51.304 --> 00:34:52.425
<v Speaker 1>at your hand.

00:34:52.665 --> 00:34:55.065
<v Speaker 1>For example, if you don't know what is

00:34:55.065 --> 00:34:55.784
<v Speaker 1>the parameter

00:34:56.130 --> 00:34:58.369
<v Speaker 1>that would scale this thing up, you can

00:34:58.369 --> 00:35:00.289
<v Speaker 1>look it up here. This is your documentation

00:35:00.289 --> 00:35:01.410
<v Speaker 1>from the chart.

00:35:01.650 --> 00:35:03.329
<v Speaker 1>What's the name of my

00:35:04.210 --> 00:35:06.930
<v Speaker 1>replicas? Okay. This is the name. I can

00:35:06.930 --> 00:35:09.089
<v Speaker 1>just put it here and say replicas five.

00:35:09.089 --> 00:35:11.075
<v Speaker 1>Okay. Let's not kill my machine. Let's say

00:35:11.075 --> 00:35:12.275
<v Speaker 1>replicas two.

00:35:12.755 --> 00:35:14.994
<v Speaker 1>And down below, you will see how you

00:35:15.075 --> 00:35:17.875
<v Speaker 1>how my manifest changes. It will actually change

00:35:17.875 --> 00:35:20.915
<v Speaker 1>one parameter here. What if I downgrade

00:35:21.474 --> 00:35:22.994
<v Speaker 1>to very old

00:35:25.020 --> 00:35:25.740
<v Speaker 1>version?

00:35:25.900 --> 00:35:27.980
<v Speaker 1>You can actually review that there will be

00:35:27.980 --> 00:35:31.020
<v Speaker 1>some more changes than just image versions changing

00:35:31.020 --> 00:35:32.620
<v Speaker 1>if you do downgrade.

00:35:32.620 --> 00:35:34.460
<v Speaker 1>And everything happens,

00:35:34.620 --> 00:35:36.725
<v Speaker 1>you see this before

00:35:36.725 --> 00:35:38.965
<v Speaker 1>you do it. And this is super important

00:35:38.965 --> 00:35:39.685
<v Speaker 1>because

00:35:40.245 --> 00:35:44.725
<v Speaker 1>the the vicious cycle of doing a mistake

00:35:45.205 --> 00:35:48.885
<v Speaker 1>and reviewing resulting failure and doing a mistake

00:35:48.885 --> 00:35:51.045
<v Speaker 1>in in configuration again

00:35:51.230 --> 00:35:53.790
<v Speaker 1>And all of that, it's not good.

00:35:54.190 --> 00:35:55.230
<v Speaker 1>But Helm

00:35:55.390 --> 00:35:57.470
<v Speaker 1>offers you quite painful

00:35:57.549 --> 00:36:00.670
<v Speaker 1>CLI based process of reviewing these changes.

00:36:01.150 --> 00:36:03.710
<v Speaker 1>So we're just taking all of that experience

00:36:03.710 --> 00:36:04.270
<v Speaker 1>and

00:36:05.575 --> 00:36:08.375
<v Speaker 1>assembling it into a nice UI that allows

00:36:08.375 --> 00:36:09.495
<v Speaker 1>you to review

00:36:09.495 --> 00:36:10.295
<v Speaker 1>before

00:36:10.295 --> 00:36:11.415
<v Speaker 1>you install.

00:36:11.495 --> 00:36:13.495
<v Speaker 1>And it also allows you to scan for

00:36:13.495 --> 00:36:15.975
<v Speaker 1>problems before you install. If I click this

00:36:15.975 --> 00:36:16.615
<v Speaker 1>button,

00:36:16.855 --> 00:36:20.290
<v Speaker 1>then there this whole manifest will be run

00:36:20.290 --> 00:36:23.410
<v Speaker 1>through Chekhov scan and it and you will

00:36:23.410 --> 00:36:24.130
<v Speaker 1>see

00:36:24.210 --> 00:36:24.930
<v Speaker 1>what

00:36:25.089 --> 00:36:25.970
<v Speaker 1>Chekhov

00:36:26.210 --> 00:36:28.530
<v Speaker 1>offers you as list of the problems to

00:36:28.530 --> 00:36:29.569
<v Speaker 1>fix in your

00:36:31.385 --> 00:36:33.785
<v Speaker 1>in your manifest that you are about to

00:36:33.785 --> 00:36:36.345
<v Speaker 1>deploy into your Kubernetes cluster.

00:36:36.744 --> 00:36:38.585
<v Speaker 1>If you want to do something about it,

00:36:38.585 --> 00:36:41.704
<v Speaker 1>do something about it. If you just review

00:36:41.704 --> 00:36:45.305
<v Speaker 1>and accept, you just push the button confirm

00:36:46.150 --> 00:36:47.430
<v Speaker 1>and it would apply

00:36:47.750 --> 00:36:48.710
<v Speaker 1>to your

00:36:49.670 --> 00:36:50.710
<v Speaker 1>cluster.

00:36:53.270 --> 00:36:55.430
<v Speaker 1>It would apply to your cluster, the changes.

00:36:55.430 --> 00:36:57.350
<v Speaker 1>And you can review. This is our new

00:36:57.350 --> 00:36:57.830
<v Speaker 1>revision,

00:36:58.595 --> 00:37:00.674
<v Speaker 1>and you can see that the changes that

00:37:00.674 --> 00:37:03.474
<v Speaker 1>you were seeing in preview,

00:37:03.474 --> 00:37:06.115
<v Speaker 1>those were actually applying here.

00:37:07.154 --> 00:37:07.715
<v Speaker 1>And

00:37:08.434 --> 00:37:09.635
<v Speaker 1>I guess it it

00:37:09.875 --> 00:37:11.395
<v Speaker 1>it starts the second

00:37:12.035 --> 00:37:15.580
<v Speaker 1>replica right now for us. The values, did

00:37:15.580 --> 00:37:18.300
<v Speaker 1>we change anything? Yes. We we set two

00:37:18.300 --> 00:37:19.500
<v Speaker 1>replicas now.

00:37:20.540 --> 00:37:21.900
<v Speaker 1>All of that is quite

00:37:23.100 --> 00:37:24.780
<v Speaker 1>expected. And note,

00:37:25.020 --> 00:37:26.780
<v Speaker 1>now when we have downgraded,

00:37:27.020 --> 00:37:29.100
<v Speaker 1>it looks into repository and says,

00:37:29.955 --> 00:37:32.195
<v Speaker 1>don't you want to upgrade? You are actually

00:37:32.195 --> 00:37:33.635
<v Speaker 1>not at the latest.

00:37:34.035 --> 00:37:36.675
<v Speaker 1>And there is even a nice button to

00:37:36.675 --> 00:37:38.355
<v Speaker 1>check for a new version. By the way,

00:37:38.355 --> 00:37:40.435
<v Speaker 1>there's a trick. I know that today Commodore

00:37:40.435 --> 00:37:43.635
<v Speaker 1>has released a new version of its

00:37:43.160 --> 00:37:45.480
<v Speaker 1>agent. So now I can demonstrate you how

00:37:45.480 --> 00:37:47.400
<v Speaker 1>the check for new revision

00:37:47.800 --> 00:37:49.000
<v Speaker 1>for new version

00:37:50.280 --> 00:37:51.480
<v Speaker 1>works because it's

00:37:51.960 --> 00:37:54.360
<v Speaker 1>it only works once when it finds the

00:37:54.360 --> 00:37:55.880
<v Speaker 1>new version. I will I will show you

00:37:55.880 --> 00:37:58.235
<v Speaker 1>that. So what else can we do? We

00:37:58.235 --> 00:37:59.995
<v Speaker 1>can roll it back to the previous

00:38:00.475 --> 00:38:02.955
<v Speaker 1>revision or we can select the revision and

00:38:02.955 --> 00:38:05.675
<v Speaker 1>roll it back to something that was

00:38:05.915 --> 00:38:08.955
<v Speaker 1>that we considered great. No. This wasn't great,

00:38:09.675 --> 00:38:10.315
<v Speaker 1>and

00:38:12.110 --> 00:38:13.470
<v Speaker 1>I think this one

00:38:14.590 --> 00:38:15.550
<v Speaker 1>will be

00:38:15.710 --> 00:38:16.430
<v Speaker 1>alright.

00:38:16.590 --> 00:38:18.030
<v Speaker 1>Let's do a rollback.

00:38:18.350 --> 00:38:21.230
<v Speaker 1>When you do the rollback, it tells you

00:38:21.230 --> 00:38:24.430
<v Speaker 1>what will be changed again before you rollback.

00:38:24.954 --> 00:38:27.355
<v Speaker 1>And let's review. Let's see what are the

00:38:27.355 --> 00:38:30.155
<v Speaker 1>command line options. Command line options actually do

00:38:30.155 --> 00:38:32.315
<v Speaker 1>not change, but there are some defaults

00:38:32.315 --> 00:38:34.235
<v Speaker 1>that were introduced by the chart.

00:38:34.474 --> 00:38:36.075
<v Speaker 1>Okay. I accept it,

00:38:36.395 --> 00:38:39.030
<v Speaker 1>and I roll it back to the previous

00:38:39.030 --> 00:38:41.430
<v Speaker 1>state. It has created the new revision. This

00:38:41.430 --> 00:38:43.430
<v Speaker 1>is how Helm works. When you roll back,

00:38:43.430 --> 00:38:45.110
<v Speaker 1>it doesn't erase anything.

00:38:45.270 --> 00:38:46.950
<v Speaker 1>It just creates the new revision.

00:38:47.190 --> 00:38:49.030
<v Speaker 1>It marks it as rollback.

00:38:50.565 --> 00:38:52.805
<v Speaker 1>And finally, we can uninstall this chart, but

00:38:52.805 --> 00:38:54.565
<v Speaker 1>I will not uninstall it because it's beautiful

00:38:54.565 --> 00:38:56.645
<v Speaker 1>and it has so many revisions. I would

00:38:56.645 --> 00:38:59.365
<v Speaker 1>rather uninstall something that I value

00:38:59.365 --> 00:39:01.445
<v Speaker 1>slightly less, that I invested

00:39:01.925 --> 00:39:05.365
<v Speaker 1>some less resources and efforts. Let's do Grafana.

00:39:06.250 --> 00:39:07.290
<v Speaker 1>Grafana,

00:39:07.850 --> 00:39:09.770
<v Speaker 1>you are uninstalled.

00:39:09.770 --> 00:39:12.010
<v Speaker 1>Well, it's obvious. It tells you what

00:39:12.650 --> 00:39:13.450
<v Speaker 1>you will

00:39:14.250 --> 00:39:15.850
<v Speaker 1>erase from your cluster

00:39:16.090 --> 00:39:16.810
<v Speaker 1>and

00:39:17.610 --> 00:39:18.570
<v Speaker 1>confirm

00:39:18.570 --> 00:39:20.090
<v Speaker 1>there's no Grafana anymore.

00:39:21.525 --> 00:39:23.525
<v Speaker 1>And again, since it runs

00:39:23.685 --> 00:39:25.845
<v Speaker 1>actual Helm behind the scenes,

00:39:26.565 --> 00:39:29.125
<v Speaker 1>this is not something that can desync with

00:39:29.125 --> 00:39:30.165
<v Speaker 1>Helm

00:39:30.165 --> 00:39:31.045
<v Speaker 1>information.

00:39:31.444 --> 00:39:32.165
<v Speaker 1>It's always

00:39:33.300 --> 00:39:35.620
<v Speaker 1>in sync because it uses the the actual

00:39:35.620 --> 00:39:37.300
<v Speaker 1>Helm information

00:39:37.540 --> 00:39:40.100
<v Speaker 1>inside it. It's not a custom database or

00:39:40.100 --> 00:39:40.740
<v Speaker 1>whatever.

00:39:42.340 --> 00:39:42.980
<v Speaker 1>But

00:39:43.140 --> 00:39:45.780
<v Speaker 1>you usually start with no Helm charts if

00:39:45.780 --> 00:39:47.955
<v Speaker 1>you are a new user. Right? So what

00:39:47.955 --> 00:39:50.355
<v Speaker 1>do you do? You have this repository section

00:39:50.435 --> 00:39:53.075
<v Speaker 1>where you can actually see the

00:39:55.875 --> 00:39:58.195
<v Speaker 1>the repositories you have. You can add the

00:39:58.195 --> 00:39:58.995
<v Speaker 1>repository

00:39:58.995 --> 00:40:00.355
<v Speaker 1>and you can install.

00:40:00.435 --> 00:40:02.035
<v Speaker 1>Let's go to

00:40:02.400 --> 00:40:03.280
<v Speaker 1>Grafana,

00:40:04.880 --> 00:40:06.640
<v Speaker 1>and let's install Grafana.

00:40:06.640 --> 00:40:08.559
<v Speaker 1>This is the repository that I have added

00:40:08.559 --> 00:40:10.160
<v Speaker 1>for Grafana upfront.

00:40:10.240 --> 00:40:11.840
<v Speaker 1>And I just click install.

00:40:12.319 --> 00:40:14.960
<v Speaker 1>We get the familiar screen where we can

00:40:14.960 --> 00:40:16.880
<v Speaker 1>change Grafana

00:40:18.855 --> 00:40:19.735
<v Speaker 1>pipe.

00:40:21.015 --> 00:40:22.535
<v Speaker 1>And we can see if we want some

00:40:22.535 --> 00:40:24.935
<v Speaker 1>values. Let's do the same

00:40:26.775 --> 00:40:27.735
<v Speaker 1>replicas.

00:40:28.375 --> 00:40:29.255
<v Speaker 1>Cluster role.

00:40:31.460 --> 00:40:33.700
<v Speaker 1>This is the preview of what will happen.

00:40:33.940 --> 00:40:35.220
<v Speaker 1>Let's do

00:40:35.780 --> 00:40:37.140
<v Speaker 1>replicas one,

00:40:37.619 --> 00:40:38.740
<v Speaker 1>replicas

00:40:39.140 --> 00:40:40.100
<v Speaker 1>two again.

00:40:41.059 --> 00:40:43.700
<v Speaker 1>It will recalculate the diff for me and

00:40:43.700 --> 00:40:44.260
<v Speaker 1>all of that.

00:40:45.455 --> 00:40:47.855
<v Speaker 1>What else? We can do interesting

00:40:47.855 --> 00:40:48.415
<v Speaker 1>thing.

00:40:48.735 --> 00:40:51.295
<v Speaker 1>Let's do the Rawk not created.

00:40:53.615 --> 00:40:56.095
<v Speaker 1>False. You see how I don't know if

00:40:56.095 --> 00:40:59.375
<v Speaker 1>you live this life of Helm documentation.

00:40:59.375 --> 00:41:02.080
<v Speaker 1>How do I configure it here and there.

00:41:02.080 --> 00:41:03.680
<v Speaker 1>And it's so easy. It becomes

00:41:04.080 --> 00:41:05.120
<v Speaker 1>even for me,

00:41:06.480 --> 00:41:08.960
<v Speaker 1>I I spent less time playing with these

00:41:08.960 --> 00:41:10.640
<v Speaker 1>things and operating Kubernetes,

00:41:10.640 --> 00:41:13.280
<v Speaker 1>but it's so pleasant for me to simplify

00:41:13.280 --> 00:41:14.960
<v Speaker 1>the life and see this documentation

00:41:15.525 --> 00:41:19.125
<v Speaker 1>and edit this documentation and preview the changes.

00:41:19.444 --> 00:41:20.005
<v Speaker 1>So

00:41:21.204 --> 00:41:23.684
<v Speaker 1>let's go ahead. Let's install, and it should

00:41:23.684 --> 00:41:26.244
<v Speaker 1>install me the new Grafana. And now this

00:41:26.244 --> 00:41:27.205
<v Speaker 1>Grafana

00:41:27.285 --> 00:41:28.244
<v Speaker 1>awaits for

00:41:29.130 --> 00:41:31.850
<v Speaker 1>containers to be created and become available.

00:41:32.089 --> 00:41:33.290
<v Speaker 1>We can look at it.

00:41:34.170 --> 00:41:35.130
<v Speaker 1>It now

00:41:35.369 --> 00:41:37.210
<v Speaker 1>scaling replica set

00:41:37.609 --> 00:41:38.570
<v Speaker 1>to two.

00:41:38.970 --> 00:41:41.369
<v Speaker 1>So it knows what I asked it for,

00:41:41.849 --> 00:41:44.490
<v Speaker 1>and in a couple of minutes, it will

00:41:45.845 --> 00:41:48.405
<v Speaker 1>make it available. So now I can reconfigure

00:41:48.405 --> 00:41:50.485
<v Speaker 1>for for example, if I'm not

00:41:51.845 --> 00:41:52.805
<v Speaker 1>patient.

00:41:52.885 --> 00:41:53.765
<v Speaker 1>Let's

00:41:54.405 --> 00:41:55.765
<v Speaker 1>get back to creating.

00:41:57.860 --> 00:42:00.100
<v Speaker 1>By the way, you see each time you

00:42:00.100 --> 00:42:02.580
<v Speaker 1>update Grafana Helm chart, it regenerates

00:42:02.580 --> 00:42:04.660
<v Speaker 1>your admin password. This is

00:42:05.220 --> 00:42:08.020
<v Speaker 1>a finding for me, which is surprising because

00:42:08.020 --> 00:42:10.740
<v Speaker 1>I that's not what I wanted to find.

00:42:11.060 --> 00:42:13.845
<v Speaker 1>But now I know something about Grafana, one

00:42:13.845 --> 00:42:15.845
<v Speaker 1>one small piece. So it would add a

00:42:15.845 --> 00:42:18.725
<v Speaker 1>bunch of new objects into my cluster.

00:42:18.885 --> 00:42:19.925
<v Speaker 1>Let's do that,

00:42:20.405 --> 00:42:21.445
<v Speaker 1>and let's see

00:42:22.245 --> 00:42:25.380
<v Speaker 1>that everything works. Well, it cannot keep up

00:42:25.380 --> 00:42:27.220
<v Speaker 1>with the pace of my changes, but I'm

00:42:27.220 --> 00:42:28.820
<v Speaker 1>alright with that. And

00:42:29.300 --> 00:42:32.580
<v Speaker 1>as always, you get these navigation through revisions,

00:42:32.740 --> 00:42:34.500
<v Speaker 1>and it's so much different from what you

00:42:34.500 --> 00:42:36.020
<v Speaker 1>get from CLI. I don't know.

00:42:37.315 --> 00:42:40.355
<v Speaker 1>What else what else can we do here?

00:42:41.395 --> 00:42:43.955
<v Speaker 1>Let me see the scans,

00:42:43.955 --> 00:42:44.995
<v Speaker 1>the resources,

00:42:44.995 --> 00:42:46.755
<v Speaker 1>the manifest, the values,

00:42:46.995 --> 00:42:47.875
<v Speaker 1>the change

00:42:48.595 --> 00:42:49.235
<v Speaker 1>viewing,

00:42:50.070 --> 00:42:50.710
<v Speaker 1>And

00:42:51.430 --> 00:42:53.510
<v Speaker 1>I think it is. I promised you to

00:42:53.510 --> 00:42:54.790
<v Speaker 1>show how

00:42:55.270 --> 00:42:57.670
<v Speaker 1>now it thinks that I'm on latest and

00:42:58.950 --> 00:43:01.670
<v Speaker 1>this is actually one of the frequent change

00:43:02.710 --> 00:43:04.710
<v Speaker 1>frequent use cases

00:43:04.445 --> 00:43:07.165
<v Speaker 1>that we hear if you read the Kubernetes

00:43:07.165 --> 00:43:08.045
<v Speaker 1>Slack

00:43:08.525 --> 00:43:09.325
<v Speaker 1>community,

00:43:09.725 --> 00:43:12.525
<v Speaker 1>people come and they say, have my Helm

00:43:12.525 --> 00:43:13.165
<v Speaker 1>charts.

00:43:13.565 --> 00:43:15.565
<v Speaker 1>How do I easier

00:43:15.885 --> 00:43:18.525
<v Speaker 1>check for the new version to exist? And

00:43:18.740 --> 00:43:21.059
<v Speaker 1>is quite frequent use case. This is why

00:43:21.059 --> 00:43:23.539
<v Speaker 1>we added this button, check for new revision.

00:43:23.539 --> 00:43:24.660
<v Speaker 1>I know there is.

00:43:25.059 --> 00:43:26.900
<v Speaker 1>Now I can upgrade. So I don't need

00:43:26.900 --> 00:43:28.260
<v Speaker 1>to leave this screen

00:43:28.660 --> 00:43:31.539
<v Speaker 1>and leave this context to quickly check for

00:43:31.539 --> 00:43:33.460
<v Speaker 1>the new version to exist. And now I

00:43:33.460 --> 00:43:35.935
<v Speaker 1>can upgrade to this new version

00:43:36.175 --> 00:43:36.895
<v Speaker 1>and

00:43:38.575 --> 00:43:40.255
<v Speaker 1>go ahead and

00:43:41.295 --> 00:43:42.415
<v Speaker 1>it all

00:43:43.455 --> 00:43:44.255
<v Speaker 1>happens

00:43:44.575 --> 00:43:45.375
<v Speaker 1>without

00:43:45.455 --> 00:43:47.775
<v Speaker 1>losing the context because this is what important

00:43:47.775 --> 00:43:50.510
<v Speaker 1>in these complicated environments

00:43:50.510 --> 00:43:53.150
<v Speaker 1>when you have so many basic entities, but

00:43:53.150 --> 00:43:55.710
<v Speaker 1>they are all interconnected and there is historical

00:43:55.710 --> 00:43:58.670
<v Speaker 1>perspective. It's important to not lose the context

00:43:58.910 --> 00:44:01.815
<v Speaker 1>and be able to go back and easily

00:44:01.815 --> 00:44:03.734
<v Speaker 1>navigate. And this is what we provide with

00:44:03.734 --> 00:44:07.495
<v Speaker 1>Helm Dashboard. Much, much more easy navigation

00:44:07.815 --> 00:44:09.415
<v Speaker 1>through Helm concepts

00:44:10.135 --> 00:44:13.494
<v Speaker 1>while everything under the hood is %

00:44:13.494 --> 00:44:17.255
<v Speaker 1>Helm compatible and it's true Helm inside. So

00:44:16.550 --> 00:44:18.710
<v Speaker 1>we're not inventing something weird

00:44:19.349 --> 00:44:20.870
<v Speaker 1>and incompatible

00:44:20.950 --> 00:44:22.150
<v Speaker 1>with what we do.

00:44:23.430 --> 00:44:25.349
<v Speaker 1>And basically, this is it. This is my

00:44:25.349 --> 00:44:26.150
<v Speaker 1>demonstration.

00:44:26.150 --> 00:44:27.830
<v Speaker 1>So if you have any questions,

00:44:28.470 --> 00:44:31.365
<v Speaker 1>should I I'll be I'll be able demonstrate

00:44:31.365 --> 00:44:33.125
<v Speaker 1>you the answers if

00:44:34.245 --> 00:44:35.845
<v Speaker 1>if it's demonstrable

00:44:35.845 --> 00:44:36.485
<v Speaker 1>here.

00:44:37.765 --> 00:44:40.325
<v Speaker 0>Alright. Awesome. Thank you. I think,

00:44:41.125 --> 00:44:42.485
<v Speaker 0>you know, I don't have a lot of

00:44:42.485 --> 00:44:44.390
<v Speaker 0>questions because every time something in my head

00:44:44.390 --> 00:44:46.070
<v Speaker 0>popped up, you were moving right onto it

00:44:46.070 --> 00:44:47.990
<v Speaker 0>right afterwards. So it's like your demo just

00:44:47.990 --> 00:44:50.150
<v Speaker 0>gonna flow it really well. It introduced us

00:44:50.150 --> 00:44:52.710
<v Speaker 0>to all of the features of Helm Dashboard,

00:44:52.710 --> 00:44:54.390
<v Speaker 0>which I just think is a really pleasant

00:44:54.390 --> 00:44:57.265
<v Speaker 0>way to manage what is otherwise a very

00:44:57.665 --> 00:44:58.785
<v Speaker 0>not complicated,

00:44:58.785 --> 00:45:01.025
<v Speaker 0>but cumbersome It's tedious. Right? You know, it's

00:45:01.105 --> 00:45:03.665
<v Speaker 1>It's tedious. Yeah. Yeah. And I I I

00:45:03.665 --> 00:45:04.305
<v Speaker 0>love

00:45:04.945 --> 00:45:07.185
<v Speaker 0>is that you know, the wild feature here

00:45:07.185 --> 00:45:10.810
<v Speaker 0>is that comparing the previous revisions, comparing the

00:45:10.810 --> 00:45:12.010
<v Speaker 0>previous values.

00:45:12.170 --> 00:45:14.570
<v Speaker 0>Because those are the things that ruin my

00:45:14.570 --> 00:45:16.730
<v Speaker 0>day when I mess around with Helm charts.

00:45:16.730 --> 00:45:18.010
<v Speaker 0>It's like, oh, I didn't know it was

00:45:18.010 --> 00:45:19.450
<v Speaker 0>going to do that. And you know what?

00:45:19.450 --> 00:45:21.930
<v Speaker 0>See that Grafana one with the regenerated password?

00:45:22.010 --> 00:45:23.850
<v Speaker 0>I ran into that a few months ago

00:45:23.765 --> 00:45:25.285
<v Speaker 0>and it was infuriating.

00:45:25.285 --> 00:45:27.045
<v Speaker 0>And it took me ages to work out

00:45:27.045 --> 00:45:28.565
<v Speaker 0>what was actually going on.

00:45:28.965 --> 00:45:31.125
<v Speaker 1>So Yes. Here here you you will you

00:45:31.125 --> 00:45:33.605
<v Speaker 1>will see that suddenly the password has changed.

00:45:33.605 --> 00:45:34.805
<v Speaker 1>This is your problem.

00:45:35.685 --> 00:45:38.890
<v Speaker 0>Exactly. Yeah. Because the chart generates that every

00:45:38.890 --> 00:45:41.610
<v Speaker 0>time you run it and it's, yeah, very

00:45:41.610 --> 00:45:43.610
<v Speaker 0>frustrating. And that you only find that out

00:45:43.610 --> 00:45:45.290
<v Speaker 0>when you when you go off the kind

00:45:45.290 --> 00:45:47.369
<v Speaker 0>of the standard path near using Helm template

00:45:47.369 --> 00:45:49.770
<v Speaker 0>and other things. But, yeah, that could def

00:45:49.770 --> 00:45:52.410
<v Speaker 0>with previous for the manifest and the values.

00:45:52.410 --> 00:45:54.795
<v Speaker 0>It's a very, very cool resource. Something I

00:45:54.795 --> 00:45:56.474
<v Speaker 0>wish that I had had in the past.

00:45:56.474 --> 00:45:57.755
<v Speaker 0>Awesome feature.

00:45:58.075 --> 00:45:59.275
<v Speaker 0>The one thing that

00:45:59.595 --> 00:46:01.675
<v Speaker 0>you haven't answered that I'm curious of how

00:46:01.675 --> 00:46:03.755
<v Speaker 0>Helm Dashboard handles that or supports that or

00:46:03.755 --> 00:46:05.915
<v Speaker 0>whether it doesn't is Helm Hooks.

00:46:06.155 --> 00:46:08.315
<v Speaker 0>Is there any integration to show me what's

00:46:08.315 --> 00:46:10.119
<v Speaker 0>gonna happen with the Hooks when I do

00:46:10.119 --> 00:46:11.240
<v Speaker 0>a Helm deploy?

00:46:13.000 --> 00:46:15.640
<v Speaker 1>I haven't got to this aspect of Helm

00:46:15.640 --> 00:46:16.920
<v Speaker 1>yet, and

00:46:17.800 --> 00:46:18.760
<v Speaker 1>I will

00:46:19.160 --> 00:46:21.880
<v Speaker 1>review that in the future. I I saw

00:46:21.880 --> 00:46:24.215
<v Speaker 1>that the Helm hooks it

00:46:24.455 --> 00:46:25.735
<v Speaker 1>it's not really

00:46:27.815 --> 00:46:29.015
<v Speaker 1>used too

00:46:29.175 --> 00:46:30.215
<v Speaker 1>widely,

00:46:30.455 --> 00:46:33.655
<v Speaker 1>and this is why I prioritize it later.

00:46:33.735 --> 00:46:36.135
<v Speaker 1>And I tried to implement the other features

00:46:36.135 --> 00:46:38.800
<v Speaker 1>that I believe the more mainstream features first.

00:46:39.119 --> 00:46:39.760
<v Speaker 1>But it's

00:46:40.480 --> 00:46:41.200
<v Speaker 1>for me,

00:46:42.160 --> 00:46:45.200
<v Speaker 1>it's interesting to sort out even these edge

00:46:45.200 --> 00:46:48.480
<v Speaker 1>cases because I want the advanced users to

00:46:48.480 --> 00:46:51.280
<v Speaker 1>also benefit from this project and from this

00:46:51.525 --> 00:46:52.325
<v Speaker 1>functionality

00:46:52.325 --> 00:46:55.205
<v Speaker 1>and not only the very basic users.

00:46:55.765 --> 00:46:58.005
<v Speaker 0>Awesome. So that's definitely planned.

00:46:58.724 --> 00:46:59.445
<v Speaker 0>Another

00:46:59.525 --> 00:47:01.924
<v Speaker 0>potential feature for the future, not right now

00:47:01.924 --> 00:47:03.925
<v Speaker 0>because it's still very early, but

00:47:04.645 --> 00:47:05.204
<v Speaker 0>charts that

00:47:06.000 --> 00:47:07.840
<v Speaker 0>there's the new feature with Helm that allows

00:47:07.840 --> 00:47:10.800
<v Speaker 0>people to annotate the values dot YAML with

00:47:10.800 --> 00:47:12.080
<v Speaker 0>schema information.

00:47:12.080 --> 00:47:13.680
<v Speaker 0>And I like when I see

00:47:14.720 --> 00:47:16.000
<v Speaker 0>if you can go back to the values

00:47:16.000 --> 00:47:16.720
<v Speaker 0>bit.

00:47:17.120 --> 00:47:17.760
<v Speaker 1>Yes. Sure.

00:47:19.494 --> 00:47:21.575
<v Speaker 0>Yeah. From, like, here, it would be really

00:47:21.575 --> 00:47:23.815
<v Speaker 0>cool if you were able to process that

00:47:23.815 --> 00:47:25.734
<v Speaker 0>schema information and make it a bit more

00:47:25.734 --> 00:47:27.655
<v Speaker 0>of a rich editing experience. I think that

00:47:27.895 --> 00:47:30.055
<v Speaker 1>Do you do you mean the these comments

00:47:30.055 --> 00:47:32.829
<v Speaker 1>or it's something even more than that? Yeah.

00:47:32.829 --> 00:47:33.869
<v Speaker 0>The let me see if I can find

00:47:33.869 --> 00:47:35.230
<v Speaker 0>you a quick example.

00:47:36.190 --> 00:47:37.950
<v Speaker 0>While I did that, if anyone in the

00:47:37.950 --> 00:47:40.109
<v Speaker 0>audience has any questions or just wants to

00:47:40.109 --> 00:47:43.390
<v Speaker 0>say thank you or awesome in the comments

00:47:43.390 --> 00:47:44.750
<v Speaker 0>for the demo, please feel free to do

00:47:44.750 --> 00:47:45.550
<v Speaker 0>that now.

00:47:45.790 --> 00:47:46.589
<v Speaker 0>Well, I

00:47:47.545 --> 00:47:49.305
<v Speaker 0>very quickly try and find something that has

00:47:49.305 --> 00:47:51.625
<v Speaker 0>it. Let's see. I

00:47:52.585 --> 00:47:53.705
<v Speaker 0>came across this recently.

00:48:02.279 --> 00:48:05.640
<v Speaker 1>Well, it's if it's something standardized,

00:48:05.640 --> 00:48:07.560
<v Speaker 1>cool, and useful,

00:48:07.880 --> 00:48:09.320
<v Speaker 1>I'll definitely

00:48:10.279 --> 00:48:11.960
<v Speaker 1>as I see, if if there is the

00:48:11.960 --> 00:48:13.560
<v Speaker 1>schema for this thing,

00:48:13.799 --> 00:48:16.214
<v Speaker 1>then I would love to,

00:48:16.694 --> 00:48:18.775
<v Speaker 1>on the fly, apply it to these values

00:48:18.775 --> 00:48:21.335
<v Speaker 1>and warn you that you misconfiguring

00:48:21.335 --> 00:48:24.375
<v Speaker 1>it, even before you do that. Yeah. Let

00:48:24.375 --> 00:48:26.454
<v Speaker 1>me So if I got the idea, then

00:48:26.454 --> 00:48:28.470
<v Speaker 1>it will be okay. Let me I'll share

00:48:28.470 --> 00:48:30.870
<v Speaker 0>my screen for just a second. Sure. Sure.

00:48:30.870 --> 00:48:33.190
<v Speaker 1>Go ahead. Well, can you see?

00:48:34.790 --> 00:48:35.350
<v Speaker 0>Yeah.

00:48:35.750 --> 00:48:38.310
<v Speaker 0>So this is the so the bitnami charts,

00:48:38.310 --> 00:48:39.910
<v Speaker 0>I think, are quite good for doing the

00:48:39.910 --> 00:48:41.590
<v Speaker 0>schema thing. But you can click on this

00:48:41.590 --> 00:48:42.710
<v Speaker 0>value schema here,

00:48:43.484 --> 00:48:45.644
<v Speaker 0>and it actually tells you the types that

00:48:45.644 --> 00:48:46.605
<v Speaker 0>you should expect.

00:48:47.404 --> 00:48:49.244
<v Speaker 0>Mhmm. So here, we got string. Here, got

00:48:49.244 --> 00:48:51.565
<v Speaker 0>an object, which then, you know, got

00:48:51.964 --> 00:48:54.444
<v Speaker 0>properties and stuff. So this information is available.

00:48:54.444 --> 00:48:56.525
<v Speaker 0>And if I remember correctly, it's it's really

00:48:56.525 --> 00:48:59.440
<v Speaker 0>horrible and that is comments within the YAML.

00:48:59.440 --> 00:49:00.720
<v Speaker 0>But then, I guess, what else are they

00:49:00.720 --> 00:49:01.440
<v Speaker 0>gonna do?

00:49:02.080 --> 00:49:03.680
<v Speaker 0>But if we jump to

00:49:05.920 --> 00:49:07.760
<v Speaker 0>I can never remember how you got to

00:49:07.760 --> 00:49:10.640
<v Speaker 0>the the source code from the artifact hub.

00:49:10.955 --> 00:49:11.915
<v Speaker 1>It's

00:49:11.915 --> 00:49:15.035
<v Speaker 1>actually in the Helm itself, it's quite

00:49:15.435 --> 00:49:16.475
<v Speaker 1>inconvenient

00:49:16.475 --> 00:49:19.275
<v Speaker 1>to get to the original chart of

00:49:20.715 --> 00:49:22.475
<v Speaker 1>that produced some

00:49:22.555 --> 00:49:23.115
<v Speaker 1>release.

00:49:23.900 --> 00:49:27.260
<v Speaker 1>And I'm quite surprised that they didn't introduce

00:49:27.260 --> 00:49:29.340
<v Speaker 1>any kind of unique IDs

00:49:29.900 --> 00:49:31.180
<v Speaker 1>to interconnect

00:49:31.180 --> 00:49:32.860
<v Speaker 1>in a reliable way.

00:49:33.100 --> 00:49:35.180
<v Speaker 1>It's all name based,

00:49:35.420 --> 00:49:37.505
<v Speaker 1>but it is what it is. If we

00:49:37.505 --> 00:49:39.025
<v Speaker 1>all remember the history,

00:49:39.105 --> 00:49:41.105
<v Speaker 1>it was a hackathon project

00:49:41.105 --> 00:49:42.625
<v Speaker 1>that started Helm.

00:49:43.665 --> 00:49:44.145
<v Speaker 1>So

00:49:44.465 --> 00:49:45.105
<v Speaker 0>Yeah.

00:49:45.905 --> 00:49:48.385
<v Speaker 0>So and our values dot YAML, we have

00:49:48.385 --> 00:49:51.505
<v Speaker 0>all of these comments which have

00:49:50.780 --> 00:49:53.260
<v Speaker 0>parameter information, which then ties up with this

00:49:53.260 --> 00:49:56.300
<v Speaker 0>schema JSON schema document that we have here.

00:49:56.380 --> 00:49:57.980
<v Speaker 0>So there's a whole bunch of information there

00:49:57.980 --> 00:49:59.660
<v Speaker 0>that it would be awesome to get into

00:49:59.660 --> 00:50:03.020
<v Speaker 0>Helm Dashboard and really annotate and augment what

00:50:03.020 --> 00:50:05.744
<v Speaker 0>you already have with, like, this rich interface.

00:50:05.744 --> 00:50:07.105
<v Speaker 0>I think that would be awesome.

00:50:07.345 --> 00:50:09.425
<v Speaker 0>So there's my feature. That sounds interesting.

00:50:09.665 --> 00:50:12.305
<v Speaker 1>That sounds usually, I I should warn you.

00:50:12.305 --> 00:50:14.305
<v Speaker 1>One thing that I really want to avoid

00:50:14.305 --> 00:50:17.585
<v Speaker 1>is to turn in turn this Helm Dashboard,

00:50:17.585 --> 00:50:19.760
<v Speaker 1>which feels lightweight and easy,

00:50:19.920 --> 00:50:22.000
<v Speaker 1>into a piece that will be, like,

00:50:22.800 --> 00:50:24.000
<v Speaker 1>really heavy

00:50:24.160 --> 00:50:26.480
<v Speaker 1>over overflowing

00:50:26.480 --> 00:50:28.640
<v Speaker 1>with these features. So Yeah.

00:50:29.680 --> 00:50:32.234
<v Speaker 1>That's my mindset at this moment because I

00:50:32.234 --> 00:50:34.315
<v Speaker 1>see there are alternatives with a lot of

00:50:34.315 --> 00:50:35.194
<v Speaker 1>functionalities

00:50:35.194 --> 00:50:36.075
<v Speaker 1>super,

00:50:36.315 --> 00:50:39.115
<v Speaker 1>super rich, but the

00:50:39.835 --> 00:50:42.234
<v Speaker 1>the dark side of it is that it

00:50:42.234 --> 00:50:42.875
<v Speaker 1>becomes

00:50:43.115 --> 00:50:43.434
<v Speaker 1>really

00:50:44.270 --> 00:50:46.990
<v Speaker 1>hard to navigate and heavy to operate,

00:50:47.150 --> 00:50:48.910
<v Speaker 1>and I don't want that. I want really

00:50:48.910 --> 00:50:51.150
<v Speaker 1>to speed up the process of operating

00:50:51.230 --> 00:50:52.990
<v Speaker 1>for people. But if it helps if if

00:50:52.990 --> 00:50:54.990
<v Speaker 1>your idea helps the process, I I will

00:50:54.990 --> 00:50:57.230
<v Speaker 1>review it. And if it helps the process,

00:50:57.230 --> 00:50:58.430
<v Speaker 1>we'll definitely do that.

00:50:59.265 --> 00:51:01.505
<v Speaker 1>Alright. Or somebody will contribute it.

00:51:02.065 --> 00:51:03.345
<v Speaker 1>It's an open source

00:51:03.585 --> 00:51:04.625
<v Speaker 1>for sure.

00:51:05.184 --> 00:51:07.664
<v Speaker 0>Alright. Awesome. Well, what I'll say is I

00:51:07.664 --> 00:51:08.705
<v Speaker 0>love what I've seen.

00:51:09.345 --> 00:51:10.224
<v Speaker 0>The levers

00:51:11.470 --> 00:51:13.710
<v Speaker 0>straight up value to people that are deploying

00:51:13.710 --> 00:51:16.350
<v Speaker 0>Helm Trust to the cluster. Again, that ability

00:51:16.350 --> 00:51:18.430
<v Speaker 0>to see the revisions,

00:51:18.430 --> 00:51:20.670
<v Speaker 0>how the templates have been modified, and how

00:51:20.670 --> 00:51:23.950
<v Speaker 0>my user and the value has made and

00:51:24.174 --> 00:51:26.494
<v Speaker 0>really highlight what those changes are, I think

00:51:26.494 --> 00:51:28.335
<v Speaker 0>makes operating and working with Helm and our

00:51:28.335 --> 00:51:29.455
<v Speaker 0>production like environment

00:51:29.855 --> 00:51:32.414
<v Speaker 0>using the dashboard a fantastic experience. So I'll

00:51:32.414 --> 00:51:33.295
<v Speaker 0>say kudos.

00:51:33.375 --> 00:51:35.694
<v Speaker 0>Really cool project. Hope most people take advantage

00:51:35.694 --> 00:51:37.295
<v Speaker 0>of it. I hope people get involved and

00:51:37.295 --> 00:51:40.335
<v Speaker 0>contribute open issues, pull requests, all of the

00:51:39.960 --> 00:51:40.520
<v Speaker 0>above.

00:51:40.920 --> 00:51:41.880
<v Speaker 0>So the

00:51:42.040 --> 00:51:43.560
<v Speaker 0>it's under GitHub.com.

00:51:43.560 --> 00:51:45.000
<v Speaker 0>Is it /Commodore?

00:51:45.080 --> 00:51:47.400
<v Speaker 0>Sorry. I wasn't pinned. Yes. It's

00:51:47.400 --> 00:51:49.720
<v Speaker 1>Commodorei0/Helm

00:51:49.720 --> 00:51:50.520
<v Speaker 1>Dashboard.

00:51:51.160 --> 00:51:52.520
<v Speaker 1>If you will Google

00:51:52.785 --> 00:51:54.704
<v Speaker 1>Helm Dashboard Commodore,

00:51:54.704 --> 00:51:57.424
<v Speaker 1>three words, then it will distinguish

00:51:57.424 --> 00:51:59.984
<v Speaker 1>this project for you from

00:52:00.385 --> 00:52:03.585
<v Speaker 1>some other parts of the Kubernetes and dashboard

00:52:03.585 --> 00:52:04.145
<v Speaker 1>universe.

00:52:05.720 --> 00:52:08.039
<v Speaker 1>Hound Dashboard by Commodore, this this is what

00:52:08.039 --> 00:52:09.080
<v Speaker 1>you need to remember.

00:52:09.319 --> 00:52:10.040
<v Speaker 0>Awesome.

00:52:10.279 --> 00:52:12.119
<v Speaker 0>Then I'll finish up with one last question,

00:52:12.119 --> 00:52:13.640
<v Speaker 0>and then I'll let you get back to

00:52:13.640 --> 00:52:16.119
<v Speaker 0>your day. Like, you said at the start,

00:52:16.119 --> 00:52:17.400
<v Speaker 0>you you have a road map. You've got

00:52:17.400 --> 00:52:18.920
<v Speaker 0>a a bunch of ideas that you you

00:52:18.920 --> 00:52:21.015
<v Speaker 0>kinda wanna work on. Do wanna share a

00:52:21.015 --> 00:52:22.775
<v Speaker 0>little bit of details about maybe what's your

00:52:22.775 --> 00:52:24.934
<v Speaker 0>your top priority? What's coming next? What people

00:52:24.934 --> 00:52:25.735
<v Speaker 0>should expect?

00:52:26.855 --> 00:52:29.095
<v Speaker 1>Let me see the it's easy to read

00:52:29.095 --> 00:52:31.734
<v Speaker 1>from the list of written written things.

00:52:34.070 --> 00:52:35.830
<v Speaker 1>Well, there is there

00:52:36.310 --> 00:52:38.390
<v Speaker 1>are a couple of items that are really

00:52:38.630 --> 00:52:39.350
<v Speaker 1>tough.

00:52:40.470 --> 00:52:42.790
<v Speaker 1>And to impress you, I can mention these

00:52:42.790 --> 00:52:45.510
<v Speaker 1>tough items. For example, this Argo CD problem

00:52:45.924 --> 00:52:46.645
<v Speaker 1>that

00:52:47.365 --> 00:52:49.444
<v Speaker 1>so many people use Argo CD and they

00:52:49.444 --> 00:52:50.484
<v Speaker 1>use Helm

00:52:50.724 --> 00:52:53.205
<v Speaker 1>deployments for that, but Argo CD doesn't

00:52:53.525 --> 00:52:56.085
<v Speaker 1>use Helm, so there's no meta information

00:52:56.085 --> 00:52:59.125
<v Speaker 1>in secrets where Helm stores it. So Helm

00:52:59.125 --> 00:53:00.325
<v Speaker 1>doesn't see these charts.

00:53:01.720 --> 00:53:03.480
<v Speaker 1>The question is, can we

00:53:03.800 --> 00:53:05.960
<v Speaker 1>somehow still traverse

00:53:05.960 --> 00:53:08.840
<v Speaker 1>through objects in or query

00:53:09.000 --> 00:53:09.880
<v Speaker 1>Kubernetes

00:53:09.880 --> 00:53:12.680
<v Speaker 1>for some labels and annotation and still show

00:53:12.680 --> 00:53:15.535
<v Speaker 1>these objects to people. So they if they

00:53:15.535 --> 00:53:18.815
<v Speaker 1>are looking for that information about Helm charts,

00:53:18.815 --> 00:53:20.495
<v Speaker 1>they will get at least something,

00:53:20.655 --> 00:53:22.575
<v Speaker 1>at least some view to,

00:53:23.375 --> 00:53:23.775
<v Speaker 1>their

00:53:24.415 --> 00:53:26.255
<v Speaker 1>by fact, it's a Helm originating

00:53:26.750 --> 00:53:29.710
<v Speaker 1>thing, just Argo CD does it differently. So

00:53:29.710 --> 00:53:32.109
<v Speaker 1>that's one hard item on the road map

00:53:32.109 --> 00:53:33.869
<v Speaker 1>to find what can we do and how

00:53:33.869 --> 00:53:37.070
<v Speaker 1>can we still visualize those charts for people.

00:53:38.190 --> 00:53:40.750
<v Speaker 1>Another problem that

00:53:40.965 --> 00:53:42.645
<v Speaker 1>that we have is

00:53:45.765 --> 00:53:48.085
<v Speaker 1>we need to integrate with more

00:53:49.205 --> 00:53:51.925
<v Speaker 1>artifact or manifest scanners

00:53:52.085 --> 00:53:55.045
<v Speaker 1>because I know that different people prefer different

00:53:56.085 --> 00:53:57.045
<v Speaker 1>kinds of

00:53:57.500 --> 00:54:00.700
<v Speaker 1>scanning for manifests, so we should provide more

00:54:00.700 --> 00:54:02.860
<v Speaker 1>variants of scanning

00:54:03.180 --> 00:54:04.620
<v Speaker 1>the the resources.

00:54:04.780 --> 00:54:08.220
<v Speaker 1>There is the advanced case of umbrella chart

00:54:08.460 --> 00:54:11.675
<v Speaker 1>that we now only display the first level

00:54:11.675 --> 00:54:13.755
<v Speaker 1>of umbrella chart, and there is the

00:54:14.155 --> 00:54:16.155
<v Speaker 1>heavy advanced case of

00:54:16.475 --> 00:54:17.835
<v Speaker 1>multiple charts

00:54:18.395 --> 00:54:20.875
<v Speaker 1>dependent on each other. So we need to

00:54:20.875 --> 00:54:21.915
<v Speaker 1>review that.

00:54:22.475 --> 00:54:24.555
<v Speaker 1>And I think we will get to those

00:54:24.555 --> 00:54:26.155
<v Speaker 1>advanced

00:54:25.510 --> 00:54:26.310
<v Speaker 1>questions

00:54:26.310 --> 00:54:27.110
<v Speaker 1>as

00:54:27.430 --> 00:54:28.470
<v Speaker 1>soon as we

00:54:28.710 --> 00:54:31.590
<v Speaker 1>fix first layer of feature requests that are

00:54:31.590 --> 00:54:34.470
<v Speaker 1>already coming people coming with these really cool

00:54:34.470 --> 00:54:35.590
<v Speaker 1>and practical

00:54:35.990 --> 00:54:38.630
<v Speaker 1>feature requests. And I will always prioritize

00:54:38.985 --> 00:54:39.865
<v Speaker 1>users'

00:54:39.865 --> 00:54:42.265
<v Speaker 1>feature requests, really makes sense and comes from

00:54:42.265 --> 00:54:44.585
<v Speaker 1>the field and from the community over some

00:54:44.585 --> 00:54:46.185
<v Speaker 1>of my theoretical

00:54:46.185 --> 00:54:48.265
<v Speaker 1>ideas that I would love to do.

00:54:48.585 --> 00:54:51.465
<v Speaker 1>And, again, that's the mindset of

00:54:52.505 --> 00:54:54.345
<v Speaker 1>open source veteran, if you will.

00:54:56.160 --> 00:54:56.720
<v Speaker 0>Awesome.

00:54:57.040 --> 00:54:58.880
<v Speaker 0>Well, all of that sounds good. Like, I

00:54:58.880 --> 00:55:01.040
<v Speaker 0>think all of that sounds great. Let me

00:55:01.040 --> 00:55:02.800
<v Speaker 0>fix my own language. Yeah.

00:55:03.280 --> 00:55:05.200
<v Speaker 0>You're right about the Argo CD thing. I

00:55:05.200 --> 00:55:08.385
<v Speaker 0>bet you could hook in to the Argo

00:55:08.385 --> 00:55:10.705
<v Speaker 0>custom resources and get enough information there. I

00:55:10.705 --> 00:55:12.305
<v Speaker 0>think that's gonna be a fun but challenging

00:55:12.305 --> 00:55:13.985
<v Speaker 0>thing to do. So I'm excited to see

00:55:13.985 --> 00:55:16.465
<v Speaker 0>how you look into that. And, again, give

00:55:16.465 --> 00:55:17.985
<v Speaker 0>people a single pane of glass for all

00:55:17.985 --> 00:55:20.065
<v Speaker 0>of their Helm Dashboard. I think that'll be

00:55:20.385 --> 00:55:22.059
<v Speaker 0>yeah. But like you said, it's gonna be

00:55:22.059 --> 00:55:23.420
<v Speaker 0>a hard problem to solve, but a useful

00:55:23.420 --> 00:55:26.140
<v Speaker 0>one for people, especially as has got so

00:55:26.140 --> 00:55:26.620
<v Speaker 0>much

00:55:27.260 --> 00:55:29.500
<v Speaker 0>interest and adoption across it. And I wonder

00:55:29.500 --> 00:55:32.220
<v Speaker 0>if that would even help with the Helm

00:55:32.220 --> 00:55:34.220
<v Speaker 0>resource as well. Although, I can't remember

00:55:34.905 --> 00:55:37.385
<v Speaker 0>uses I I already got one of the

00:55:37.385 --> 00:55:40.745
<v Speaker 1>issues from that Flux user, and I see

00:55:40.745 --> 00:55:41.785
<v Speaker 1>that Flux

00:55:43.145 --> 00:55:44.185
<v Speaker 1>did something

00:55:44.825 --> 00:55:45.625
<v Speaker 1>nonstandard

00:55:45.625 --> 00:55:48.500
<v Speaker 1>to the Helm the way they operated,

00:55:48.500 --> 00:55:51.300
<v Speaker 1>and there is an issue. And we have

00:55:51.460 --> 00:55:53.860
<v Speaker 1>it's actually a really nice discussion. You can

00:55:53.860 --> 00:55:54.980
<v Speaker 1>go and read it,

00:55:55.300 --> 00:55:57.700
<v Speaker 1>and you will see that we we have

00:55:57.700 --> 00:55:58.900
<v Speaker 1>some idea

00:55:58.900 --> 00:55:59.860
<v Speaker 1>how to

00:56:00.100 --> 00:56:01.460
<v Speaker 1>work around the problem

00:56:02.535 --> 00:56:04.055
<v Speaker 1>as a quick win,

00:56:04.855 --> 00:56:07.734
<v Speaker 1>and it's still open question how to solve

00:56:07.734 --> 00:56:10.535
<v Speaker 1>that or if it if it's even solvable

00:56:10.694 --> 00:56:11.895
<v Speaker 1>on the general level.

00:56:15.099 --> 00:56:15.820
<v Speaker 0>Well,

00:56:16.140 --> 00:56:17.579
<v Speaker 0>thank you for taking the time to join

00:56:17.579 --> 00:56:20.940
<v Speaker 0>me today for working on Helm Dashboard for

00:56:20.940 --> 00:56:23.500
<v Speaker 0>showing people how to make their lives easier

00:56:23.500 --> 00:56:25.020
<v Speaker 0>and for all the future work that you're

00:56:25.020 --> 00:56:27.020
<v Speaker 0>about to accomplish to make it even better

00:56:27.020 --> 00:56:29.045
<v Speaker 0>across all of this. Let's face it. Cloud

00:56:29.045 --> 00:56:30.964
<v Speaker 0>native is this. We have so many different

00:56:30.964 --> 00:56:32.565
<v Speaker 0>systems, so many different ways to do this

00:56:32.565 --> 00:56:35.365
<v Speaker 0>thing. You're working on a very noble cause.

00:56:35.365 --> 00:56:37.684
<v Speaker 0>Well, thank you for that. I would say,

00:56:37.684 --> 00:56:39.285
<v Speaker 0>please reach out to us again when you've

00:56:39.285 --> 00:56:41.230
<v Speaker 0>got any major updates to Helm Dashboard so

00:56:41.230 --> 00:56:42.510
<v Speaker 0>that we can show people how to get

00:56:42.510 --> 00:56:45.070
<v Speaker 0>started. And I encourage anyone watching this episode

00:56:45.070 --> 00:56:46.910
<v Speaker 0>to go check out the repository,

00:56:46.990 --> 00:56:49.630
<v Speaker 0>open issues, and get involved. So, Andre, thank

00:56:49.630 --> 00:56:51.630
<v Speaker 0>you again. Have a wonderful day. And do

00:56:51.630 --> 00:56:52.830
<v Speaker 0>you have any last words?

00:56:53.945 --> 00:56:54.825
<v Speaker 1>It

00:56:54.825 --> 00:56:57.145
<v Speaker 1>was a pleasure demoing to you. Thank you

00:56:57.145 --> 00:57:00.105
<v Speaker 1>very much, David, for inviting me. I'm I'm

00:57:00.105 --> 00:57:02.425
<v Speaker 1>excited to be connected to the community

00:57:02.825 --> 00:57:05.065
<v Speaker 1>and and share all of these applications.

00:57:06.560 --> 00:57:08.400
<v Speaker 1>Let's hope this is not last of our

00:57:08.400 --> 00:57:10.640
<v Speaker 1>projects and not last of our initiatives

00:57:10.720 --> 00:57:13.119
<v Speaker 1>because I I really love starting these open

00:57:13.119 --> 00:57:16.480
<v Speaker 1>source projects and letting them accessible to the

00:57:16.480 --> 00:57:18.720
<v Speaker 1>people and by that changing

00:57:19.595 --> 00:57:22.555
<v Speaker 1>and moving forward the ecosystem and the technology

00:57:22.555 --> 00:57:23.275
<v Speaker 1>world.

00:57:24.155 --> 00:57:26.875
<v Speaker 1>Cool. Let's all do open source and contribute

00:57:26.875 --> 00:57:28.315
<v Speaker 1>at least with your feedback.

00:57:28.875 --> 00:57:30.315
<v Speaker 0>Awesome. Thank you. Alright.

00:57:31.115 --> 00:57:33.550
<v Speaker 0>Everyone watching, remember to say thank you in

00:57:33.550 --> 00:57:35.230
<v Speaker 0>the comments. We'll see you all next time.

00:57:35.230 --> 00:57:37.550
<v Speaker 0>Thank you again, Andre. Everyone, have a wonderful

00:57:37.550 --> 00:57:39.069
<v Speaker 0>day. Thank you. Bye.
