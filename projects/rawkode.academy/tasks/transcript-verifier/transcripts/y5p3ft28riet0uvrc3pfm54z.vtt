WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 7e2cc9af-74bc-4317-873d-8f903ebafa75
Created: 2025-04-29T15:55:22.503Z
Duration: 428.41467
Channels: 1

00:00:00.080 --> 00:00:02.080
<v Speaker 0>Feel free to take it away. Start typing,

00:00:02.080 --> 00:00:04.160
<v Speaker 0>and best of luck. Hello. So, yeah,

00:00:04.720 --> 00:00:07.440
<v Speaker 1>here we have the cluster. So let's see

00:00:07.839 --> 00:00:09.679
<v Speaker 1>the notes that we have with what's going

00:00:09.679 --> 00:00:11.120
<v Speaker 1>on. So yeah. Okay.

00:00:11.360 --> 00:00:13.920
<v Speaker 1>So, yeah, let's check the pods that are

00:00:13.920 --> 00:00:14.480
<v Speaker 1>running there.

00:00:15.615 --> 00:00:18.654
<v Speaker 1>So, yeah, it seems the pods of the

00:00:18.655 --> 00:00:21.295
<v Speaker 1>control plane of the the Kube system namespace

00:00:21.295 --> 00:00:23.775
<v Speaker 1>are all running and good. So, yeah, that's

00:00:23.775 --> 00:00:24.654
<v Speaker 1>good for us.

00:00:25.695 --> 00:00:28.095
<v Speaker 1>And, yeah, we have this pod that is

00:00:28.095 --> 00:00:31.695
<v Speaker 1>in crash load back off state. So probably

00:00:31.350 --> 00:00:32.710
<v Speaker 1>this is the one that we have to

00:00:32.710 --> 00:00:33.830
<v Speaker 1>fix now.

00:00:34.630 --> 00:00:36.470
<v Speaker 1>We can get the logs. So

00:00:37.350 --> 00:00:39.670
<v Speaker 1>get the pod the name of the pod.

00:00:42.950 --> 00:00:44.150
<v Speaker 1>Okay.

00:00:44.150 --> 00:00:45.350
<v Speaker 1>So let's describe

00:00:45.590 --> 00:00:46.870
<v Speaker 1>this pod

00:00:47.725 --> 00:00:50.925
<v Speaker 1>and see what we have there. I think

00:00:51.085 --> 00:00:54.045
<v Speaker 1>yeah. We have a sec SecCon security profile

00:00:54.045 --> 00:00:54.684
<v Speaker 1>there.

00:00:55.644 --> 00:00:58.045
<v Speaker 2>So Okay. Yeah. If if we have a

00:00:58.045 --> 00:00:59.405
<v Speaker 1>permission, then I problem.

00:01:00.030 --> 00:01:01.790
<v Speaker 1>Maybe this is related to

00:01:02.030 --> 00:01:02.590
<v Speaker 1>to.

00:01:04.030 --> 00:01:06.750
<v Speaker 1>Yep. Yeah. We have the the notation here.

00:01:07.150 --> 00:01:08.910
<v Speaker 2>So And it's a custom one, so that's

00:01:08.910 --> 00:01:09.870
<v Speaker 2>suspicious too.

00:01:10.670 --> 00:01:10.990
<v Speaker 2>Yeah.

00:01:12.605 --> 00:01:14.845
<v Speaker 1>Okay. So, yeah, I think we can use

00:01:14.845 --> 00:01:17.565
<v Speaker 1>Inspector Gadget to understand what is going on

00:01:17.565 --> 00:01:19.485
<v Speaker 1>with this set. Probably,

00:01:20.365 --> 00:01:22.365
<v Speaker 1>what is happening here is that the bot

00:01:22.365 --> 00:01:24.045
<v Speaker 1>is trying to use a Cisco that is

00:01:24.045 --> 00:01:25.005
<v Speaker 1>not allowed by day.

00:01:25.590 --> 00:01:27.990
<v Speaker 1>So in order to use Inspector Gadget, we

00:01:27.990 --> 00:01:30.710
<v Speaker 1>have to install this in in our cluster.

00:01:30.789 --> 00:01:31.590
<v Speaker 1>So,

00:01:31.590 --> 00:01:32.229
<v Speaker 1>yep,

00:01:33.189 --> 00:01:37.749
<v Speaker 1>this is gadget.Audicom.

00:01:38.950 --> 00:01:40.950
<v Speaker 1>So this is telling us that

00:01:41.765 --> 00:01:44.325
<v Speaker 1>there is a port running on this node,

00:01:44.725 --> 00:01:46.484
<v Speaker 1>the default namespace,

00:01:46.484 --> 00:01:48.244
<v Speaker 1>and this is in fact the port that

00:01:48.244 --> 00:01:49.604
<v Speaker 1>was crashing before.

00:01:51.284 --> 00:01:53.365
<v Speaker 1>This is the name of the process that

00:01:53.365 --> 00:01:54.725
<v Speaker 1>was trying to

00:01:55.540 --> 00:01:56.579
<v Speaker 1>perform

00:01:56.740 --> 00:01:57.780
<v Speaker 1>a syscall.

00:01:58.979 --> 00:02:00.259
<v Speaker 1>This should be

00:02:00.979 --> 00:02:02.820
<v Speaker 1>yeah. I'm a little bit confused by the

00:02:02.820 --> 00:02:03.780
<v Speaker 1>output here.

00:02:04.659 --> 00:02:06.899
<v Speaker 0>This system call is not part of the

00:02:06.899 --> 00:02:07.939
<v Speaker 0>clustered spec,

00:02:09.544 --> 00:02:11.224
<v Speaker 0>but it's not the reason the pod is

00:02:11.224 --> 00:02:14.025
<v Speaker 0>crashing yet yet, at least.

00:02:14.504 --> 00:02:16.665
<v Speaker 0>This is the two breaks

00:02:16.745 --> 00:02:18.585
<v Speaker 0>colliding together because

00:02:18.825 --> 00:02:20.985
<v Speaker 0>a very unfortunate side effect. But what else

00:02:20.985 --> 00:02:22.504
<v Speaker 0>would give you permission to write if it

00:02:22.504 --> 00:02:23.305
<v Speaker 0>wasn't a syscall?

00:02:25.040 --> 00:02:26.640
<v Speaker 2>Well, capabilities.

00:02:26.640 --> 00:02:27.200
<v Speaker 2>Right.

00:02:27.760 --> 00:02:30.880
<v Speaker 2>So we can trace capabilities.

00:02:31.360 --> 00:02:32.880
<v Speaker 1>This should be good.

00:02:34.640 --> 00:02:35.840
<v Speaker 1>Okay. Here we are.

00:02:39.894 --> 00:02:43.334
<v Speaker 1>Oh, so we have security contest capability dot

00:02:43.334 --> 00:02:44.135
<v Speaker 1>all.

00:02:44.135 --> 00:02:45.815
<v Speaker 1>Yeah. This this is no good. We are

00:02:45.815 --> 00:02:48.215
<v Speaker 1>running the code without any capability. Of course,

00:02:48.215 --> 00:02:50.000
<v Speaker 1>this is gonna fail. What we need to

00:02:50.000 --> 00:02:53.040
<v Speaker 1>understand right now is what are the capabilities

00:02:53.040 --> 00:02:54.240
<v Speaker 1>that are required

00:02:54.640 --> 00:02:56.080
<v Speaker 1>by this bot.

00:02:57.360 --> 00:02:59.599
<v Speaker 1>So, yeah, I think we can use the

00:02:59.599 --> 00:03:02.855
<v Speaker 1>capabilities gadget to get a list of of

00:03:02.855 --> 00:03:05.175
<v Speaker 1>the capabilities that this bot is trying to

00:03:05.175 --> 00:03:05.735
<v Speaker 1>use.

00:03:06.055 --> 00:03:09.575
<v Speaker 1>So we have QCity and gadget capabilities.

00:03:12.135 --> 00:03:13.974
<v Speaker 1>We are only interested on this one.

00:03:15.510 --> 00:03:18.070
<v Speaker 1>Oh, here we are. Okay. Yeah. Okay.

00:03:18.390 --> 00:03:19.510
<v Speaker 2>Got it. That

00:03:21.190 --> 00:03:23.110
<v Speaker 1>and, yeah, this is the name of the

00:03:23.110 --> 00:03:23.990
<v Speaker 1>container,

00:03:24.310 --> 00:03:25.590
<v Speaker 1>the UID,

00:03:25.670 --> 00:03:27.830
<v Speaker 1>the PID inside the container.

00:03:27.989 --> 00:03:29.670
<v Speaker 1>This is the command that is trying to

00:03:29.670 --> 00:03:30.069
<v Speaker 1>do that.

00:03:31.325 --> 00:03:33.885
<v Speaker 1>And this should be the capability that this

00:03:33.885 --> 00:03:36.685
<v Speaker 1>is trying to use. NetBind service.

00:03:43.405 --> 00:03:44.845
<v Speaker 1>Does it look good to you?

00:03:45.780 --> 00:03:48.340
<v Speaker 2>Mhmm. It looks good to me. Ta da.

00:03:48.340 --> 00:03:48.820
<v Speaker 1>Yep.

00:03:49.460 --> 00:03:50.900
<v Speaker 1>Yay. This is working.

00:03:51.140 --> 00:03:52.100
<v Speaker 2>It works.

00:03:52.340 --> 00:03:54.340
<v Speaker 0>I mean, saying it's working is a pretty

00:03:54.340 --> 00:03:56.500
<v Speaker 0>bold statement. But, you know, you you can

00:03:56.500 --> 00:03:59.695
<v Speaker 0>confirm that. Right? We wanted to curl from

00:03:59.775 --> 00:04:00.895
<v Speaker 2>30,000

00:04:00.975 --> 00:04:04.175
<v Speaker 2>localhost 30,000. 30 thousand. Yeah. We were trying

00:04:04.175 --> 00:04:05.135
<v Speaker 2>to to

00:04:05.375 --> 00:04:07.375
<v Speaker 2>verify that the application is working.

00:04:07.855 --> 00:04:09.615
<v Speaker 2>So with this this score.

00:04:10.210 --> 00:04:12.930
<v Speaker 2>Doesn't seem to work. Connection refused.

00:04:13.170 --> 00:04:15.490
<v Speaker 2>So there's there's something else that needs to

00:04:15.490 --> 00:04:16.050
<v Speaker 2>be fixed.

00:04:22.465 --> 00:04:23.905
<v Speaker 1>So this is

00:04:24.225 --> 00:04:25.825
<v Speaker 1>30,000 here,

00:04:25.985 --> 00:04:28.225
<v Speaker 1>and this should be The $80.80.

00:04:28.785 --> 00:04:30.385
<v Speaker 2>So what's the part?

00:04:31.745 --> 00:04:33.585
<v Speaker 1>Maybe we can list the

00:04:33.985 --> 00:04:34.945
<v Speaker 1>sockets

00:04:35.260 --> 00:04:37.660
<v Speaker 1>that are opening the port to check what

00:04:37.660 --> 00:04:39.740
<v Speaker 1>is the what is the real port name

00:04:39.740 --> 00:04:41.420
<v Speaker 1>that the port is using.

00:04:41.980 --> 00:04:43.340
<v Speaker 0>I like how you don't even look at

00:04:43.340 --> 00:04:44.620
<v Speaker 0>the manifest to see if it's got a

00:04:44.620 --> 00:04:46.380
<v Speaker 0>container port, and they're like, nope. Let's just

00:04:46.380 --> 00:04:48.460
<v Speaker 0>go and list all the ports that excuse

00:04:48.460 --> 00:04:48.700
<v Speaker 0>me.

00:04:51.235 --> 00:04:52.915
<v Speaker 2>I don't trust the manifest.

00:04:54.995 --> 00:04:57.235
<v Speaker 1>Let me try something. I think we can

00:04:57.235 --> 00:04:59.555
<v Speaker 1>just trace the the whole

00:05:00.675 --> 00:05:01.875
<v Speaker 1>namespace,

00:05:01.875 --> 00:05:03.715
<v Speaker 1>and that should be fine. Oh, I missed

00:05:03.715 --> 00:05:04.675
<v Speaker 1>the budget here.

00:05:08.250 --> 00:05:09.690
<v Speaker 2>Just deleted the pod.

00:05:10.650 --> 00:05:11.770
<v Speaker 2>Okay.

00:05:13.050 --> 00:05:13.690
<v Speaker 2>Seems

00:05:14.090 --> 00:05:15.050
<v Speaker 2>demonic.

00:05:16.250 --> 00:05:19.575
<v Speaker 2>So it's port six six six. Right? So

00:05:19.735 --> 00:05:21.735
<v Speaker 1>okay. What we can do right now is

00:05:21.735 --> 00:05:24.135
<v Speaker 1>to edit the service and change the port.

00:05:24.135 --> 00:05:26.055
<v Speaker 1>Think that's this is why. Mhmm.

00:05:26.535 --> 00:05:29.255
<v Speaker 2>Yep. Yep. Sounds good. Yep. Nice try. Okay.

00:05:30.455 --> 00:05:31.495
<v Speaker 2>Something doesn't work.

00:05:32.940 --> 00:05:35.980
<v Speaker 2>Another thing doesn't work. Your last break.

00:05:36.860 --> 00:05:37.260
<v Speaker 2>I

00:05:38.060 --> 00:05:38.780
<v Speaker 2>think

00:05:39.020 --> 00:05:40.940
<v Speaker 2>somebody said before that

00:05:41.180 --> 00:05:43.500
<v Speaker 2>seccomp wasn't the problem yet.

00:05:47.435 --> 00:05:48.555
<v Speaker 1>Yeah. I think that's

00:05:53.115 --> 00:05:55.595
<v Speaker 1>And let's use the on the whole namespace.

00:05:55.595 --> 00:05:56.475
<v Speaker 1>I think this is okay.

00:05:57.449 --> 00:05:59.289
<v Speaker 0>I think what's interesting with this is that

00:05:59.289 --> 00:06:02.330
<v Speaker 0>Postgres traffic means your request has been received,

00:06:02.330 --> 00:06:03.770
<v Speaker 0>and the application is

00:06:04.729 --> 00:06:05.850
<v Speaker 0>trying to respond.

00:06:06.169 --> 00:06:08.410
<v Speaker 1>Okay. So, yeah, it doesn't seem to be

00:06:08.410 --> 00:06:10.169
<v Speaker 1>a problem with the networking

00:06:10.250 --> 00:06:12.090
<v Speaker 1>because the traffic is arriving there.

00:06:12.754 --> 00:06:14.595
<v Speaker 1>The full connection is established.

00:06:15.634 --> 00:06:17.794
<v Speaker 0>So I haven't seen that TCP connect before.

00:06:17.794 --> 00:06:20.595
<v Speaker 0>That's awesome. Okay. I'm sending a request now.

00:06:21.074 --> 00:06:23.955
<v Speaker 2>It's shut down. Can you try to send

00:06:23.955 --> 00:06:26.490
<v Speaker 1>another request, please, Diego? So I turn off

00:06:26.490 --> 00:06:28.570
<v Speaker 1>the JSON output, so this is easier to

00:06:28.570 --> 00:06:30.490
<v Speaker 1>read in this small terminal.

00:06:31.210 --> 00:06:33.530
<v Speaker 2>Yeah. It is shut down. It was funny

00:06:33.530 --> 00:06:35.370
<v Speaker 2>that you said that the JSON is easier

00:06:35.370 --> 00:06:36.170
<v Speaker 2>to read.

00:06:38.330 --> 00:06:39.210
<v Speaker 2>Okay.

00:06:39.210 --> 00:06:41.385
<v Speaker 2>So maybe we need to edit the the

00:06:41.385 --> 00:06:42.505
<v Speaker 2>second profile.

00:06:42.665 --> 00:06:44.345
<v Speaker 0>And because the shutdown is never called, the

00:06:44.345 --> 00:06:46.025
<v Speaker 0>socket is never flushed, and the response is

00:06:46.025 --> 00:06:47.385
<v Speaker 0>never sent to the client.

00:06:48.185 --> 00:06:49.625
<v Speaker 2>Let's do it in

00:06:50.264 --> 00:06:51.465
<v Speaker 2>alphabetic order.

00:06:51.865 --> 00:06:52.825
<v Speaker 0>I appreciate that.

00:06:59.020 --> 00:06:59.740
<v Speaker 2>Right.

00:07:00.699 --> 00:07:02.460
<v Speaker 2>And then the cubelet will apply the new

00:07:02.460 --> 00:07:03.580
<v Speaker 2>second profile.

00:07:03.740 --> 00:07:06.699
<v Speaker 1>Yeah. Yeah. Ta da. This is working. Yay.
