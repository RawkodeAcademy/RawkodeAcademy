WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: fd44d76e-6791-4be6-b5e6-1c77b2256696
Created: 2025-06-05T21:51:17.502Z
Duration: 4035.814
Channels: 1

00:00:00.000 --> 00:00:02.000
<v Speaker 0>Up devs feeling the strain.

00:00:02.240 --> 00:00:04.640
<v Speaker 0>Headless browsers causing you pain.

00:00:05.120 --> 00:00:06.160
<v Speaker 0>Memory

00:00:06.160 --> 00:00:08.080
<v Speaker 0>hogging oh so slow.

00:00:10.639 --> 00:00:12.959
<v Speaker 0>Got your automation losing its flow.

00:00:13.200 --> 00:00:14.160
<v Speaker 0>Scraping sites

00:00:29.910 --> 00:00:32.070
<v Speaker 1>quickest headless you've ever seen.

00:00:32.470 --> 00:00:36.390
<v Speaker 1>Yeah. It's the Rawkode stream. Tune right in.

00:00:36.390 --> 00:00:39.110
<v Speaker 1>Got Pierre and Katie, let the show begin.

00:00:39.750 --> 00:00:41.430
<v Speaker 1>Introducing LightPanda.

00:00:41.430 --> 00:00:44.095
<v Speaker 1>Yeah. Built with six so keen

00:00:44.255 --> 00:00:45.535
<v Speaker 1>LightPanda.

00:00:45.535 --> 00:00:47.855
<v Speaker 1>Woah. The fastest on the scene. Let's ram

00:00:47.855 --> 00:00:52.015
<v Speaker 1>more speed. A developer's dream. Live on Rawkode.

00:00:52.095 --> 00:00:53.295
<v Speaker 1>Join the stream.

00:00:55.960 --> 00:00:58.520
<v Speaker 0>Forget the bloat, the startup lag.

00:00:58.920 --> 00:01:01.239
<v Speaker 0>Light pandas here, it's in the bag.

00:01:01.720 --> 00:01:04.440
<v Speaker 0>10 times faster light on the RAM, open

00:01:04.440 --> 00:01:06.760
<v Speaker 0>source of power, part of the plan.

00:01:07.160 --> 00:01:09.994
<v Speaker 1>See the live demo, watch it blast, and

00:01:09.994 --> 00:01:12.475
<v Speaker 1>get the quick start, make your scripts last.

00:01:14.715 --> 00:01:17.195
<v Speaker 1>In the banging J and S game,

00:01:17.515 --> 00:01:20.795
<v Speaker 1>it's the Rawkode stream to Riot in. Got

00:01:20.795 --> 00:01:23.259
<v Speaker 1>Pierre and Katie, let the show begin.

00:01:23.740 --> 00:01:25.659
<v Speaker 1>Introducing LightPanda.

00:01:25.740 --> 00:01:28.299
<v Speaker 1>Hell. Built with zigs so keen.

00:01:28.619 --> 00:01:29.740
<v Speaker 1>LightPanda,

00:01:30.060 --> 00:01:32.299
<v Speaker 1>the fastest on the scene. Less RAM, more

00:01:32.299 --> 00:01:33.820
<v Speaker 1>speed, a developer's

00:01:33.820 --> 00:01:36.140
<v Speaker 1>dream. Live on Rawkode,

00:01:36.140 --> 00:01:37.340
<v Speaker 1>join the stream.

00:01:38.805 --> 00:01:40.645
<v Speaker 1>Plug in puppeteer,

00:01:40.645 --> 00:01:41.845
<v Speaker 1>play right to.

00:01:42.405 --> 00:01:45.365
<v Speaker 1>Your old code, swap the engine through. Hear

00:01:45.365 --> 00:01:48.405
<v Speaker 1>the road map, what's coming next. Making machine

00:01:48.405 --> 00:01:50.005
<v Speaker 1>browse less complex

00:01:50.460 --> 00:01:51.820
<v Speaker 1>with Pierre

00:01:52.060 --> 00:01:53.260
<v Speaker 1>and Katie

00:01:53.340 --> 00:01:54.300
<v Speaker 1>right here.

00:01:54.780 --> 00:01:58.540
<v Speaker 1>Light panda's future is crystal clear

00:02:00.220 --> 00:02:01.660
<v Speaker 1>on Rawkode

00:02:01.660 --> 00:02:02.780
<v Speaker 1>Academy.

00:02:03.420 --> 00:02:04.940
<v Speaker 1>Learn and

00:02:31.105 --> 00:02:34.144
<v Speaker 2>Hello, and welcome back to the Rawkode Academy.

00:02:34.144 --> 00:02:36.385
<v Speaker 2>I'm your host, David Flanagan, sometimes known across

00:02:36.385 --> 00:02:38.305
<v Speaker 2>the Internet as Rawkode, and this is an

00:02:38.305 --> 00:02:40.065
<v Speaker 2>episode of Rawkode Live where we take a

00:02:40.065 --> 00:02:41.905
<v Speaker 2>look at the coolest

00:02:41.905 --> 00:02:45.345
<v Speaker 2>cloud native and adjacent software projects, particularly open

00:02:45.345 --> 00:02:47.500
<v Speaker 2>source, to make your life all that little

00:02:47.500 --> 00:02:49.579
<v Speaker 2>bit easier. And today, we're taking a look

00:02:49.579 --> 00:02:51.739
<v Speaker 2>at a new browser on the scene. This

00:02:51.739 --> 00:02:53.900
<v Speaker 2>one, a headless browser to make your tests

00:02:53.900 --> 00:02:55.980
<v Speaker 2>and AI workloads faster.

00:02:58.939 --> 00:03:00.459
<v Speaker 2>I am joined by two members of the

00:03:00.459 --> 00:03:03.315
<v Speaker 2>LightPanda team, Pierre and Katie. Hi there both.

00:03:03.315 --> 00:03:03.955
<v Speaker 2>How are you?

00:03:04.355 --> 00:03:07.635
<v Speaker 3>Hey, David. Hello. Good to be here. Yeah.

00:03:07.635 --> 00:03:10.194
<v Speaker 2>Yeah. Welcome. It's an absolute pleasure to sit

00:03:10.194 --> 00:03:11.715
<v Speaker 2>down and have a conversation and take a

00:03:11.715 --> 00:03:13.555
<v Speaker 2>look at interest in tech. It's always the

00:03:13.555 --> 00:03:15.475
<v Speaker 2>absolute highlight of my day.

00:03:16.110 --> 00:03:18.750
<v Speaker 2>So before we talk about LightPanda and what

00:03:18.750 --> 00:03:20.349
<v Speaker 2>you're building, can you both take a minute

00:03:20.349 --> 00:03:22.349
<v Speaker 2>just to say hello and introduce yourself to

00:03:22.349 --> 00:03:23.390
<v Speaker 2>the audience, please?

00:03:24.349 --> 00:03:25.790
<v Speaker 3>Sure. So

00:03:25.790 --> 00:03:28.590
<v Speaker 3>I'm Katie. I'm the co founder and COO

00:03:28.590 --> 00:03:29.790
<v Speaker 3>at LightPanda.

00:03:29.790 --> 00:03:30.030
<v Speaker 3>And

00:03:30.735 --> 00:03:33.534
<v Speaker 3>I've known Pierre and our other co founder,

00:03:33.534 --> 00:03:35.935
<v Speaker 3>Francis, for the last eight years. We worked

00:03:35.935 --> 00:03:38.495
<v Speaker 3>together before in our previous company where we

00:03:38.495 --> 00:03:40.975
<v Speaker 3>were doing a ton of web scraping.

00:03:41.055 --> 00:03:41.695
<v Speaker 3>And

00:03:42.095 --> 00:03:44.655
<v Speaker 3>LightPanda was born very much from that pain

00:03:44.655 --> 00:03:46.810
<v Speaker 3>as we'll have time to talk about.

00:03:48.410 --> 00:03:51.610
<v Speaker 4>Yeah. Hello. So I'm Pierre. Nothing more to

00:03:51.610 --> 00:03:52.250
<v Speaker 4>add

00:03:52.730 --> 00:03:54.410
<v Speaker 4>really. I'm the CTO.

00:03:54.569 --> 00:03:56.970
<v Speaker 4>Happy to be here and happy to show

00:03:56.970 --> 00:03:59.530
<v Speaker 4>you what the browser can do.

00:04:01.084 --> 00:04:01.805
<v Speaker 2>Awesome.

00:04:01.965 --> 00:04:03.564
<v Speaker 2>I think this will be a great episode

00:04:03.564 --> 00:04:06.685
<v Speaker 2>and interest in technology. This is something that

00:04:06.685 --> 00:04:08.605
<v Speaker 2>anyone who has built a website or built

00:04:08.605 --> 00:04:11.245
<v Speaker 2>any kind of web screen or, you know,

00:04:11.245 --> 00:04:12.765
<v Speaker 5>things that need the browser to do whatever

00:04:12.765 --> 00:04:15.080
<v Speaker 5>they're doing. I felt the pain in Puppeteer

00:04:15.080 --> 00:04:17.000
<v Speaker 5>and Playwright. And it's not that those are

00:04:17.000 --> 00:04:19.800
<v Speaker 5>not great tools. It's that the underlying browser

00:04:19.800 --> 00:04:22.440
<v Speaker 5>technology, headless Firefox and headless Chromium.

00:04:23.000 --> 00:04:25.320
<v Speaker 5>In fact, all Chromiums, headless or not. Right?

00:04:25.320 --> 00:04:27.640
<v Speaker 5>They are a sucker for our CPU and

00:04:27.640 --> 00:04:28.520
<v Speaker 5>their memory consumption.

00:04:28.985 --> 00:04:30.745
<v Speaker 5>And I think it's nice that we get

00:04:30.745 --> 00:04:32.665
<v Speaker 5>to take this opportunity to see what you've

00:04:32.665 --> 00:04:34.025
<v Speaker 5>been building and hopefully make this a lot

00:04:34.025 --> 00:04:35.225
<v Speaker 5>easier for everyone else.

00:04:35.545 --> 00:04:37.705
<v Speaker 5>Now I know that we have some slides.

00:04:38.264 --> 00:04:40.345
<v Speaker 5>Katie, if you wanna share those up and

00:04:40.345 --> 00:04:42.025
<v Speaker 5>we can, you know, dive straight into it

00:04:42.025 --> 00:04:43.945
<v Speaker 2>and talk about Panda in more detail.

00:04:45.600 --> 00:04:46.880
<v Speaker 3>Yep. Sure.

00:04:50.160 --> 00:04:51.120
<v Speaker 3>That again?

00:04:51.920 --> 00:04:53.920
<v Speaker 2>Yep. I can see the LightPanda logo. It

00:04:53.920 --> 00:04:55.920
<v Speaker 2>is awesome. Please take it away.

00:04:56.960 --> 00:04:59.025
<v Speaker 3>Alright. So, yeah, I'm not gonna take too

00:04:59.025 --> 00:05:00.305
<v Speaker 3>much time on this part, but we just

00:05:00.305 --> 00:05:02.785
<v Speaker 3>wanted to give a little bit of background

00:05:03.185 --> 00:05:05.105
<v Speaker 3>on the project and

00:05:05.265 --> 00:05:06.385
<v Speaker 3>how it was

00:05:06.705 --> 00:05:09.185
<v Speaker 3>born, how we're thinking about the space that

00:05:09.185 --> 00:05:09.905
<v Speaker 3>we're building in.

00:05:11.230 --> 00:05:13.470
<v Speaker 3>So I mentioned that we all worked together

00:05:13.470 --> 00:05:15.790
<v Speaker 3>in the past and we were doing a

00:05:15.790 --> 00:05:17.150
<v Speaker 3>bunch of web scraping.

00:05:19.070 --> 00:05:20.910
<v Speaker 3>And web scraping has been around for a

00:05:20.910 --> 00:05:23.870
<v Speaker 3>really long time. So if we look

00:05:24.384 --> 00:05:26.705
<v Speaker 3>back to the very first web pages,

00:05:27.104 --> 00:05:29.664
<v Speaker 3>some of you may remember them. They were

00:05:29.824 --> 00:05:31.025
<v Speaker 3>way more basic

00:05:31.824 --> 00:05:33.185
<v Speaker 3>HTML type

00:05:33.344 --> 00:05:34.305
<v Speaker 3>web pages.

00:05:34.465 --> 00:05:35.745
<v Speaker 3>Today the

00:05:35.985 --> 00:05:38.705
<v Speaker 3>internet and the web is really a dramatically

00:05:38.705 --> 00:05:39.985
<v Speaker 3>different place

00:05:40.570 --> 00:05:41.770
<v Speaker 3>where you

00:05:41.850 --> 00:05:42.410
<v Speaker 3>have

00:05:43.370 --> 00:05:46.010
<v Speaker 3>full applications running within web browsers.

00:05:46.729 --> 00:05:48.170
<v Speaker 3>And so the

00:05:49.050 --> 00:05:51.530
<v Speaker 3>web browser itself has had to massively evolve

00:05:51.530 --> 00:05:53.449
<v Speaker 3>to support that transition.

00:05:54.515 --> 00:05:56.435
<v Speaker 3>Two thirds of the traffic today goes through

00:05:56.435 --> 00:05:58.995
<v Speaker 3>Google Chrome and Chrome

00:05:59.075 --> 00:05:59.715
<v Speaker 3>is

00:06:00.195 --> 00:06:03.875
<v Speaker 3>running under the Blink rendering engine, which was

00:06:03.875 --> 00:06:06.835
<v Speaker 3>developed in 2013 and is actually a fork

00:06:07.170 --> 00:06:09.970
<v Speaker 3>of WebKit, which is the rendering engine behind

00:06:09.970 --> 00:06:10.770
<v Speaker 3>Safari,

00:06:10.770 --> 00:06:11.650
<v Speaker 3>which itself

00:06:12.450 --> 00:06:14.130
<v Speaker 3>is a fork of KHTML,

00:06:14.130 --> 00:06:14.930
<v Speaker 3>which is

00:06:15.490 --> 00:06:18.770
<v Speaker 3>the engine behind Conqueror, which is now deprecated.

00:06:18.770 --> 00:06:22.455
<v Speaker 3>So as you were saying, there's nothing fundamentally

00:06:22.455 --> 00:06:23.575
<v Speaker 3>wrong with this

00:06:24.055 --> 00:06:27.575
<v Speaker 3>code. It's just not at all built for

00:06:28.615 --> 00:06:30.695
<v Speaker 3>the automation use cases that it's

00:06:31.975 --> 00:06:35.414
<v Speaker 3>now being used for. And

00:06:36.160 --> 00:06:37.919
<v Speaker 3>there is now a need, we think, for

00:06:37.919 --> 00:06:39.680
<v Speaker 3>something fundamentally different.

00:06:40.480 --> 00:06:42.000
<v Speaker 3>The web browser itself,

00:06:42.080 --> 00:06:44.480
<v Speaker 3>this is the kind of architecture of a

00:06:44.480 --> 00:06:47.840
<v Speaker 3>standard web browser that humans would use your

00:06:47.840 --> 00:06:49.600
<v Speaker 3>own or desktop or our phone.

00:06:51.324 --> 00:06:53.485
<v Speaker 3>Essentially, without going into too much more detail

00:06:53.485 --> 00:06:54.125
<v Speaker 3>here,

00:06:55.165 --> 00:06:57.405
<v Speaker 3>a collection of different elements that enable a

00:06:57.405 --> 00:06:59.645
<v Speaker 3>human to interact with a web page. There

00:06:59.645 --> 00:07:02.365
<v Speaker 3>are hundreds of web APIs and more and

00:07:02.365 --> 00:07:05.485
<v Speaker 3>more developed every day to support the increasing

00:07:05.485 --> 00:07:06.980
<v Speaker 3>complexity complexity of the web.

00:07:10.020 --> 00:07:10.740
<v Speaker 3>And

00:07:10.820 --> 00:07:14.580
<v Speaker 3>so we were talking about scraping 50%

00:07:14.580 --> 00:07:16.740
<v Speaker 3>of the traffic that goes to the web

00:07:16.740 --> 00:07:18.900
<v Speaker 3>today comes from machines,

00:07:20.235 --> 00:07:22.955
<v Speaker 3>and that's not a new phenomenon at all.

00:07:22.955 --> 00:07:24.475
<v Speaker 3>It feels like we're talking about it a

00:07:24.475 --> 00:07:26.795
<v Speaker 3>lot more at the moment because of

00:07:27.195 --> 00:07:29.835
<v Speaker 3>AI use cases, which are coming to the

00:07:29.835 --> 00:07:32.235
<v Speaker 3>fore, but it's actually been that way for

00:07:32.235 --> 00:07:34.555
<v Speaker 3>the past five plus years that it's been

00:07:34.555 --> 00:07:36.750
<v Speaker 3>half the web traffic.

00:07:37.470 --> 00:07:39.950
<v Speaker 3>And that's coming predominantly from

00:07:40.670 --> 00:07:44.270
<v Speaker 3>things like indexing for SEO, more traditional scraping

00:07:44.270 --> 00:07:45.790
<v Speaker 3>use cases, like what we were doing at

00:07:45.790 --> 00:07:48.270
<v Speaker 3>our previous company, which was an e commerce

00:07:48.350 --> 00:07:49.230
<v Speaker 3>kind of intelligence

00:07:49.790 --> 00:07:51.710
<v Speaker 3>platform where we were scraping

00:07:52.565 --> 00:07:54.405
<v Speaker 3>retail product pages.

00:07:54.965 --> 00:07:58.565
<v Speaker 3>And then obviously everything that's emerging now around

00:07:58.565 --> 00:08:01.765
<v Speaker 3>AI, so extracting data to train models,

00:08:02.405 --> 00:08:04.325
<v Speaker 3>chatbots that are calling the web in real

00:08:04.325 --> 00:08:05.525
<v Speaker 3>time to provide

00:08:06.130 --> 00:08:07.650
<v Speaker 3>information to users

00:08:07.890 --> 00:08:09.410
<v Speaker 3>and agents,

00:08:10.930 --> 00:08:12.130
<v Speaker 3>of course, as well.

00:08:14.450 --> 00:08:15.330
<v Speaker 3>And so

00:08:16.130 --> 00:08:18.370
<v Speaker 3>when we think about how we automate the

00:08:18.370 --> 00:08:18.690
<v Speaker 3>web,

00:08:19.664 --> 00:08:22.705
<v Speaker 3>just as the web pages themselves have changed

00:08:22.705 --> 00:08:23.505
<v Speaker 3>the way

00:08:23.745 --> 00:08:25.985
<v Speaker 3>that we automate it and the tools that

00:08:25.985 --> 00:08:27.745
<v Speaker 3>we use to automate the web have changed

00:08:27.745 --> 00:08:28.465
<v Speaker 3>as well.

00:08:29.664 --> 00:08:31.585
<v Speaker 3>Back in the 2000s,

00:08:32.390 --> 00:08:34.549
<v Speaker 3>you could just do a simple HTTP request

00:08:34.549 --> 00:08:36.230
<v Speaker 3>or a colon, it would be enough to

00:08:36.230 --> 00:08:38.390
<v Speaker 3>get the vast majority of data within a

00:08:38.390 --> 00:08:39.110
<v Speaker 3>web page.

00:08:39.590 --> 00:08:41.270
<v Speaker 3>And the problem that we're faced with now

00:08:41.270 --> 00:08:42.150
<v Speaker 3>is that

00:08:43.270 --> 00:08:44.630
<v Speaker 3>there is JavaScript

00:08:44.825 --> 00:08:47.385
<v Speaker 3>absolutely everywhere all over the web, probably somewhere

00:08:47.385 --> 00:08:48.825
<v Speaker 3>around 40%

00:08:48.825 --> 00:08:50.185
<v Speaker 3>plus of the

00:08:50.505 --> 00:08:52.905
<v Speaker 3>content on the web lives in JavaScript,

00:08:53.065 --> 00:08:55.145
<v Speaker 3>and you can't access that content unless you

00:08:55.145 --> 00:08:57.225
<v Speaker 3>have a web browser to execute the JavaScript.

00:08:58.029 --> 00:09:00.190
<v Speaker 3>And so that's the kind of hack, I

00:09:00.190 --> 00:09:03.070
<v Speaker 3>guess, that developers are living with today,

00:09:03.150 --> 00:09:04.990
<v Speaker 3>is they're using

00:09:05.950 --> 00:09:08.830
<v Speaker 3>what's called a headless web browser. So essentially

00:09:08.830 --> 00:09:11.550
<v Speaker 3>all the same architecture under the hood,

00:09:11.710 --> 00:09:13.150
<v Speaker 3>just not

00:09:14.805 --> 00:09:17.125
<v Speaker 3>the GUI, the graphical user interface

00:09:17.125 --> 00:09:19.285
<v Speaker 3>that humans see, but everything else exactly the

00:09:19.285 --> 00:09:19.845
<v Speaker 3>same.

00:09:20.485 --> 00:09:20.964
<v Speaker 3>And

00:09:22.805 --> 00:09:23.845
<v Speaker 3>you can use

00:09:25.125 --> 00:09:27.444
<v Speaker 3>these testing frameworks that you may recognise are

00:09:27.444 --> 00:09:29.285
<v Speaker 3>on the side puppet of PayWrite or Selenium

00:09:29.150 --> 00:09:31.070
<v Speaker 3>to programmatically control

00:09:31.390 --> 00:09:32.910
<v Speaker 3>a headless web browser.

00:09:33.230 --> 00:09:34.030
<v Speaker 3>For the

00:09:34.510 --> 00:09:37.150
<v Speaker 3>large majority, it's headless Chrome,

00:09:38.510 --> 00:09:40.670
<v Speaker 3>and that kind of does the job, quote

00:09:40.670 --> 00:09:41.070
<v Speaker 3>unquote.

00:09:42.475 --> 00:09:45.355
<v Speaker 3>But we think that, and having done this

00:09:45.355 --> 00:09:47.514
<v Speaker 3>at scale in our previous company, we were

00:09:47.514 --> 00:09:50.635
<v Speaker 3>scraping around about 20,000,000 web pages a day,

00:09:51.035 --> 00:09:54.074
<v Speaker 3>and we really felt the pain firsthand of

00:09:54.074 --> 00:09:54.235
<v Speaker 3>that.

00:09:56.040 --> 00:09:58.519
<v Speaker 3>For about 90% of our use cases at

00:09:58.519 --> 00:10:00.839
<v Speaker 3>the time, we didn't need this block of

00:10:00.839 --> 00:10:02.120
<v Speaker 3>the rendering engine

00:10:02.200 --> 00:10:03.720
<v Speaker 3>on the left hand side.

00:10:04.440 --> 00:10:05.560
<v Speaker 3>And so that's

00:10:06.120 --> 00:10:07.400
<v Speaker 3>really what we're doing

00:10:08.040 --> 00:10:08.920
<v Speaker 3>at LightPanda.

00:10:10.175 --> 00:10:11.935
<v Speaker 3>Is just an interesting quote actually as we

00:10:11.935 --> 00:10:14.495
<v Speaker 3>start thinking about the AI use cases

00:10:14.894 --> 00:10:17.454
<v Speaker 3>that Vercel published at the end of last

00:10:17.454 --> 00:10:18.575
<v Speaker 3>year saying

00:10:18.815 --> 00:10:20.095
<v Speaker 3>on their network,

00:10:20.495 --> 00:10:22.654
<v Speaker 3>all of these major AI crawlers,

00:10:23.440 --> 00:10:25.840
<v Speaker 3>firstly, they represent about a third of Google

00:10:25.840 --> 00:10:28.880
<v Speaker 3>bots volume already. So that's huge when you

00:10:28.880 --> 00:10:30.480
<v Speaker 3>think that they didn't exist a couple of

00:10:30.480 --> 00:10:31.200
<v Speaker 3>years ago.

00:10:31.520 --> 00:10:33.760
<v Speaker 3>And also none of them are rendering JavaScript,

00:10:34.320 --> 00:10:34.960
<v Speaker 3>which is

00:10:35.454 --> 00:10:37.615
<v Speaker 3>we can assume because to run a real

00:10:37.615 --> 00:10:40.334
<v Speaker 3>web browser at that scale is computationally just

00:10:40.334 --> 00:10:41.375
<v Speaker 3>super expensive.

00:10:43.535 --> 00:10:44.975
<v Speaker 3>So yeah, this is what we're doing at

00:10:44.975 --> 00:10:46.415
<v Speaker 3>LightBand and we're gonna go into it way

00:10:46.415 --> 00:10:48.415
<v Speaker 3>more in-depth, so I won't spend much time

00:10:48.415 --> 00:10:51.640
<v Speaker 3>here, but we've removed the rendering engine on

00:10:51.640 --> 00:10:52.760
<v Speaker 3>top of the GUI.

00:10:53.560 --> 00:10:56.280
<v Speaker 3>But we have, other than that, a full

00:10:56.280 --> 00:10:58.600
<v Speaker 3>web browser with all the rest of the

00:10:58.840 --> 00:11:02.680
<v Speaker 3>components that you see here, including JavaScript execution

00:11:02.885 --> 00:11:05.285
<v Speaker 3>and a CDP server, which means you can

00:11:05.285 --> 00:11:08.405
<v Speaker 3>plug it into the puppeteers and the playwrights

00:11:08.565 --> 00:11:09.605
<v Speaker 3>of the world.

00:11:12.085 --> 00:11:14.085
<v Speaker 3>We launched our beta at the end of

00:11:14.085 --> 00:11:16.245
<v Speaker 3>last year, it is still in beta,

00:11:16.885 --> 00:11:18.805
<v Speaker 3>the first results show that

00:11:19.139 --> 00:11:21.540
<v Speaker 3>it's 10 times faster and uses 10 times

00:11:21.540 --> 00:11:23.060
<v Speaker 3>less resources

00:11:23.060 --> 00:11:24.579
<v Speaker 3>than headless Chrome.

00:11:24.980 --> 00:11:28.019
<v Speaker 3>And that is effectively a multiplication because with

00:11:28.019 --> 00:11:30.339
<v Speaker 3>the same amount of resources, you're able to

00:11:30.339 --> 00:11:34.255
<v Speaker 3>do 100x more with LightPanda than with Chrome.

00:11:35.055 --> 00:11:36.895
<v Speaker 3>So that's us in a nutshell. I'm gonna

00:11:36.895 --> 00:11:38.895
<v Speaker 3>stop sharing now, and we can

00:11:39.215 --> 00:11:41.055
<v Speaker 3>dive more into it.

00:11:43.775 --> 00:11:44.895
<v Speaker 5>Great. Thank you.

00:11:45.615 --> 00:11:46.095
<v Speaker 5>Look.

00:11:47.160 --> 00:11:50.760
<v Speaker 5>The AI traffic is obviously super pertinent right

00:11:50.760 --> 00:11:53.160
<v Speaker 5>now. Now I've got a whole bunch of

00:11:53.160 --> 00:11:55.160
<v Speaker 5>domains because I'm just one of those developers,

00:11:55.160 --> 00:11:56.600
<v Speaker 5>and some of these domains have never had

00:11:56.600 --> 00:11:59.240
<v Speaker 5>anything on them or haven't been updated in

00:11:59.320 --> 00:12:00.600
<v Speaker 5>five plus years.

00:12:01.495 --> 00:12:04.695
<v Speaker 5>But my HTTP server logs show that my

00:12:04.695 --> 00:12:07.255
<v Speaker 5>traffic in those last five years has increased

00:12:07.255 --> 00:12:08.135
<v Speaker 5>substantially.

00:12:08.135 --> 00:12:10.695
<v Speaker 5>Like, these unknown domains I don't use for

00:12:10.695 --> 00:12:12.055
<v Speaker 5>literally anything

00:12:12.295 --> 00:12:14.295
<v Speaker 5>are getting tens of thousands of hits every

00:12:14.295 --> 00:12:17.014
<v Speaker 5>single month. And

00:12:16.390 --> 00:12:18.470
<v Speaker 5>I can imagine there's not one real human

00:12:18.470 --> 00:12:19.190
<v Speaker 5>there.

00:12:19.510 --> 00:12:21.830
<v Speaker 5>And that's not even domains that are, like,

00:12:21.830 --> 00:12:23.270
<v Speaker 5>the rock of the kind of website or

00:12:23.270 --> 00:12:25.589
<v Speaker 5>maybe the news. Things are updated on a

00:12:25.589 --> 00:12:28.230
<v Speaker 5>near daily basis. They're probably getting scraped much

00:12:28.230 --> 00:12:31.029
<v Speaker 5>higher intervals because there's context there. That's how

00:12:31.029 --> 00:12:31.750
<v Speaker 5>these AIs,

00:12:32.175 --> 00:12:34.575
<v Speaker 5>whether it be AI search engines or model

00:12:34.575 --> 00:12:37.295
<v Speaker 5>training, etcetera, stay relevant. It's

00:12:37.295 --> 00:12:38.975
<v Speaker 5>just that I'm in a traffic alone. I

00:12:38.975 --> 00:12:41.135
<v Speaker 5>think at this time being prepared I mean,

00:12:41.135 --> 00:12:43.215
<v Speaker 5>it didn't really exist beyond Googlebot, like you

00:12:43.215 --> 00:12:43.695
<v Speaker 5>said,

00:12:44.095 --> 00:12:46.175
<v Speaker 5>more than five years ago before this AI.

00:12:47.740 --> 00:12:49.820
<v Speaker 5>Just bewilders me. I can't believe this is

00:12:49.820 --> 00:12:51.100
<v Speaker 5>where we are today, but at the same

00:12:51.100 --> 00:12:52.860
<v Speaker 5>time, we use AI every single day as

00:12:52.860 --> 00:12:54.220
<v Speaker 5>well. It's been part of the problem, I

00:12:54.220 --> 00:12:57.580
<v Speaker 5>would imagine. But it it it it helped.

00:12:58.140 --> 00:13:01.340
<v Speaker 5>I'm curious about building your own engine here.

00:13:01.824 --> 00:13:03.665
<v Speaker 5>And, obviously, there are a whole bunch of

00:13:03.665 --> 00:13:05.824
<v Speaker 5>web engines that exist. There's there's Chromium. We

00:13:05.824 --> 00:13:08.865
<v Speaker 5>know that's slow. There's Gecko from Firefox.

00:13:08.945 --> 00:13:10.384
<v Speaker 5>I think it's, you know, a lot of

00:13:10.384 --> 00:13:12.144
<v Speaker 5>legacy code also quite slow.

00:13:12.464 --> 00:13:15.105
<v Speaker 5>There was the server spin off project from

00:13:15.105 --> 00:13:17.139
<v Speaker 5>Mozilla, which I think now lives as an

00:13:17.139 --> 00:13:18.339
<v Speaker 5>open source project.

00:13:18.579 --> 00:13:20.500
<v Speaker 5>I know the Ladybug browser team are building

00:13:20.500 --> 00:13:22.260
<v Speaker 5>their own engine.

00:13:22.500 --> 00:13:24.820
<v Speaker 5>Now, obviously, Servo and Ladybug are built with

00:13:24.820 --> 00:13:26.740
<v Speaker 5>the rendering engine and the fact that there

00:13:26.740 --> 00:13:27.940
<v Speaker 5>will be a UI in front of it.

00:13:27.940 --> 00:13:29.779
<v Speaker 5>It's a a consumer engine. But I guess

00:13:29.779 --> 00:13:30.820
<v Speaker 5>the question here is,

00:13:31.925 --> 00:13:35.045
<v Speaker 5>what's different about building a browser without a

00:13:35.045 --> 00:13:36.964
<v Speaker 5>rendering engine and what

00:13:37.285 --> 00:13:39.045
<v Speaker 5>you know, I'm assuming there's trade offs that

00:13:39.045 --> 00:13:39.925
<v Speaker 5>you're able to

00:13:42.084 --> 00:13:44.404
<v Speaker 5>what's the word? Take advantage of because you're

00:13:44.404 --> 00:13:46.300
<v Speaker 5>you're cutting out this bit. It makes it

00:13:46.379 --> 00:13:47.660
<v Speaker 5>I don't know if it's easier to write

00:13:47.660 --> 00:13:49.420
<v Speaker 5>word or just better, but let's go into

00:13:49.420 --> 00:13:50.620
<v Speaker 5>that in a bit more detail.

00:13:51.019 --> 00:13:53.339
<v Speaker 5>Tell me why you build your own engine

00:13:53.339 --> 00:13:55.980
<v Speaker 5>instead of using the cloth shells components and

00:13:55.980 --> 00:13:57.899
<v Speaker 5>what you can do better because of these

00:13:57.899 --> 00:13:58.300
<v Speaker 5>constraints.

00:13:59.625 --> 00:14:00.265
<v Speaker 4>Well,

00:14:04.265 --> 00:14:06.745
<v Speaker 4>obviously, it's not easy to create a browser

00:14:06.745 --> 00:14:08.665
<v Speaker 4>or to write a browser from scratch.

00:14:09.225 --> 00:14:11.545
<v Speaker 4>That's a lot of work. But

00:14:13.145 --> 00:14:13.705
<v Speaker 4>at the beginning,

00:14:15.060 --> 00:14:18.180
<v Speaker 4>we would prefer to just take, let's say,

00:14:18.180 --> 00:14:21.860
<v Speaker 4>Chromium and remove the rendering parts and just

00:14:22.500 --> 00:14:25.300
<v Speaker 4>using it to, well, run what we want.

00:14:25.300 --> 00:14:28.020
<v Speaker 4>So don't rewrite from scratch and remove just

00:14:28.020 --> 00:14:28.900
<v Speaker 4>the rendering.

00:14:29.380 --> 00:14:30.020
<v Speaker 4>But

00:14:30.795 --> 00:14:32.395
<v Speaker 4>the issue was

00:14:33.355 --> 00:14:35.515
<v Speaker 4>it's not really possible because

00:14:37.515 --> 00:14:38.715
<v Speaker 4>the rendering

00:14:39.275 --> 00:14:40.555
<v Speaker 4>elements are

00:14:41.675 --> 00:14:42.475
<v Speaker 4>everywhere

00:14:42.475 --> 00:14:44.860
<v Speaker 4>in the code, in fact. Everything you are

00:14:44.860 --> 00:14:45.420
<v Speaker 4>doing,

00:14:45.900 --> 00:14:47.740
<v Speaker 4>it's related to the rendering.

00:14:48.220 --> 00:14:50.380
<v Speaker 4>So you can't just

00:14:50.620 --> 00:14:54.540
<v Speaker 4>cut it simply. You have to almost change

00:14:54.620 --> 00:14:56.220
<v Speaker 4>in every layer in

00:14:56.540 --> 00:14:58.940
<v Speaker 4>the browser to remove the rendering things.

00:14:59.535 --> 00:15:01.214
<v Speaker 4>So it wasn't

00:15:01.615 --> 00:15:03.214
<v Speaker 4>really possible to

00:15:04.334 --> 00:15:07.375
<v Speaker 4>do that simply to do a real headless

00:15:07.375 --> 00:15:10.654
<v Speaker 4>browser. So as Katie said, by headless browser,

00:15:12.500 --> 00:15:14.580
<v Speaker 4>we say that we will not

00:15:15.140 --> 00:15:16.820
<v Speaker 4>render graphically

00:15:16.820 --> 00:15:18.100
<v Speaker 4>the web page.

00:15:20.020 --> 00:15:21.540
<v Speaker 4>And that's

00:15:22.740 --> 00:15:25.300
<v Speaker 4>something which is done by Chromium even with

00:15:25.300 --> 00:15:26.660
<v Speaker 4>the headless options.

00:15:27.125 --> 00:15:30.084
<v Speaker 4>So the rendering is done in memory, it

00:15:30.084 --> 00:15:32.805
<v Speaker 4>just never display in the screen. So all

00:15:32.805 --> 00:15:34.565
<v Speaker 4>the work is done. In fact, that's why

00:15:34.565 --> 00:15:36.565
<v Speaker 4>you can do screenshots

00:15:36.644 --> 00:15:38.485
<v Speaker 4>or PDF with

00:15:38.565 --> 00:15:39.204
<v Speaker 4>Chrome

00:15:39.930 --> 00:15:40.810
<v Speaker 4>headless.

00:15:43.290 --> 00:15:45.130
<v Speaker 4>The idea for us, it was to just

00:15:45.130 --> 00:15:48.170
<v Speaker 4>avoid all this work and that wasn't possible

00:15:48.490 --> 00:15:50.970
<v Speaker 4>using an existing browser. It's the same. So

00:15:50.970 --> 00:15:51.450
<v Speaker 4>Servo,

00:15:51.865 --> 00:15:54.025
<v Speaker 4>as you said, is a rendering

00:15:54.905 --> 00:15:58.265
<v Speaker 4>engine. So it was the same. Everything was

00:15:58.265 --> 00:15:59.465
<v Speaker 4>merged everywhere.

00:16:00.825 --> 00:16:02.505
<v Speaker 4>But also the

00:16:02.905 --> 00:16:04.105
<v Speaker 4>ladybirds

00:16:04.345 --> 00:16:05.465
<v Speaker 4>do the same, exactly

00:16:05.990 --> 00:16:08.310
<v Speaker 4>same thing. So everywhere

00:16:08.310 --> 00:16:10.550
<v Speaker 4>in the code you have rendering code to

00:16:10.550 --> 00:16:13.430
<v Speaker 4>remove if you want to change that. So

00:16:13.430 --> 00:16:15.270
<v Speaker 4>that's why we started from scratch,

00:16:15.430 --> 00:16:16.149
<v Speaker 4>in fact.

00:16:17.029 --> 00:16:17.510
<v Speaker 4>Also,

00:16:18.285 --> 00:16:19.885
<v Speaker 4>Sorry. Go ahead. Can clarify

00:16:20.285 --> 00:16:21.725
<v Speaker 2>something? So I just wanna make sure I

00:16:21.725 --> 00:16:23.245
<v Speaker 2>have a good understanding of this in my

00:16:23.245 --> 00:16:25.805
<v Speaker 2>head. Right? When we're talking about rendering engine,

00:16:26.125 --> 00:16:28.365
<v Speaker 2>I'm assuming there's still a DOM and the

00:16:28.365 --> 00:16:30.285
<v Speaker 2>JavaScript is still run and the DOM is

00:16:30.285 --> 00:16:32.524
<v Speaker 2>manipulated, but there's no there's just no visual

00:16:32.524 --> 00:16:34.530
<v Speaker 2>representation of that. Right? That's how you're able

00:16:34.530 --> 00:16:37.490
<v Speaker 2>to, you know, run Gmail or whatever. And

00:16:37.490 --> 00:16:40.130
<v Speaker 2>while you click on buttons or see anything,

00:16:40.290 --> 00:16:41.730
<v Speaker 2>the the DOM is being manipulated. You can

00:16:41.730 --> 00:16:43.970
<v Speaker 2>fetch data. You can run tests against assertions

00:16:43.970 --> 00:16:45.570
<v Speaker 2>and all of that other really important stuff

00:16:45.570 --> 00:16:48.005
<v Speaker 5>as well. Yes. Yes, that's the goal. Yeah.

00:16:48.005 --> 00:16:49.125
<v Speaker 4>We want to take

00:16:50.165 --> 00:16:50.725
<v Speaker 4>the

00:16:51.845 --> 00:16:54.005
<v Speaker 4>difference between us and let's say, curl is

00:16:54.005 --> 00:16:55.285
<v Speaker 4>that we want to

00:16:56.005 --> 00:16:57.764
<v Speaker 4>fetch the HTML,

00:16:58.165 --> 00:17:01.080
<v Speaker 4>the raw HTML, and then fetch all the

00:17:01.080 --> 00:17:03.400
<v Speaker 4>resources, the JavaScript resources, and

00:17:04.040 --> 00:17:06.519
<v Speaker 4>be able to run the JavaScript

00:17:07.319 --> 00:17:08.440
<v Speaker 4>of the page.

00:17:08.520 --> 00:17:09.240
<v Speaker 4>And then

00:17:10.359 --> 00:17:12.680
<v Speaker 4>what we render, in fact, is the final

00:17:12.680 --> 00:17:15.845
<v Speaker 4>HTML. So the HTML, the DOM, which has

00:17:15.845 --> 00:17:17.845
<v Speaker 4>been modified by the JavaScript.

00:17:17.845 --> 00:17:18.804
<v Speaker 4>So we

00:17:19.044 --> 00:17:21.124
<v Speaker 4>want to execute XSHARE,

00:17:21.125 --> 00:17:22.724
<v Speaker 4>change, update the DOM,

00:17:22.804 --> 00:17:26.884
<v Speaker 4>create the new HTML tags, etcetera. So we

00:17:26.884 --> 00:17:29.124
<v Speaker 4>don't do graphical rendering,

00:17:29.125 --> 00:17:30.270
<v Speaker 4>but we do

00:17:30.590 --> 00:17:32.990
<v Speaker 4>actually execute the JavaScript and

00:17:34.510 --> 00:17:37.230
<v Speaker 4>generate the final DOM of the web page.

00:17:38.190 --> 00:17:41.790
<v Speaker 2>Okay. And are you building your own JavaScript

00:17:41.790 --> 00:17:44.030
<v Speaker 2>runtime as well? Are you hooking into V

00:17:44.030 --> 00:17:46.065
<v Speaker 2>eight, spider monkey? Like, what what's going on

00:17:46.065 --> 00:17:47.985
<v Speaker 2>behind the the hood there? No. No. We

00:17:47.985 --> 00:17:50.625
<v Speaker 4>are we are using v eight, actually. So

00:17:51.505 --> 00:17:53.664
<v Speaker 4>it was well, yeah. We

00:17:54.785 --> 00:17:58.225
<v Speaker 4>we want to do the minimum work

00:17:58.790 --> 00:17:59.669
<v Speaker 4>we can.

00:18:01.830 --> 00:18:03.269
<v Speaker 4>So reusing existing

00:18:03.670 --> 00:18:06.549
<v Speaker 4>JavaScript engine was the simplest things to do.

00:18:07.510 --> 00:18:09.430
<v Speaker 4>V eight is used by

00:18:10.095 --> 00:18:11.614
<v Speaker 4>many user projects

00:18:13.135 --> 00:18:14.494
<v Speaker 4>and well integrated.

00:18:15.375 --> 00:18:18.014
<v Speaker 4>It gave us an idea on how we

00:18:18.335 --> 00:18:21.534
<v Speaker 4>can bind ourselves to this JavaScript. And

00:18:22.510 --> 00:18:25.629
<v Speaker 4>in fact, it's a really important

00:18:25.950 --> 00:18:29.150
<v Speaker 4>element in the browser but we are trying

00:18:29.150 --> 00:18:29.869
<v Speaker 4>to

00:18:30.429 --> 00:18:31.149
<v Speaker 4>stay

00:18:33.710 --> 00:18:34.990
<v Speaker 4>the most decoupled

00:18:35.745 --> 00:18:39.105
<v Speaker 4>from the JavaScript engine we can because we

00:18:39.105 --> 00:18:40.945
<v Speaker 4>have the idea maybe in the future to

00:18:40.945 --> 00:18:41.985
<v Speaker 4>be able to

00:18:43.745 --> 00:18:46.945
<v Speaker 4>unplug V eight and plug another JavaScript engine.

00:18:46.945 --> 00:18:48.545
<v Speaker 4>Let's say we would like to be able

00:18:48.545 --> 00:18:49.970
<v Speaker 4>to plug

00:18:51.970 --> 00:18:52.850
<v Speaker 4>QuickJS,

00:18:52.850 --> 00:18:53.650
<v Speaker 4>for example,

00:18:54.050 --> 00:18:56.610
<v Speaker 4>which is the smallest JavaScript engine,

00:18:57.090 --> 00:18:59.010
<v Speaker 4>but in full C,

00:18:59.410 --> 00:19:00.850
<v Speaker 4>which could allow

00:19:00.850 --> 00:19:01.490
<v Speaker 4>us to

00:19:01.934 --> 00:19:04.494
<v Speaker 4>maybe have a smaller binary

00:19:04.735 --> 00:19:05.774
<v Speaker 4>in the future,

00:19:05.934 --> 00:19:07.374
<v Speaker 4>which is something

00:19:07.855 --> 00:19:09.854
<v Speaker 4>which could be interesting

00:19:10.414 --> 00:19:12.334
<v Speaker 4>depending the use case we can

00:19:13.215 --> 00:19:14.255
<v Speaker 4>offer, in fact.

00:19:14.920 --> 00:19:17.640
<v Speaker 4>But yeah, yeah, it is the main element.

00:19:18.360 --> 00:19:20.440
<v Speaker 2>All right. We do have a question in

00:19:20.440 --> 00:19:21.880
<v Speaker 2>the chat, so I'm gonna throw it up

00:19:21.880 --> 00:19:23.960
<v Speaker 2>just now to tackle this one early.

00:19:24.440 --> 00:19:26.040
<v Speaker 2>But PyTraderDetective,

00:19:26.040 --> 00:19:26.840
<v Speaker 2>wonderful name there.

00:19:27.855 --> 00:19:30.255
<v Speaker 2>Heard us mention Puppeteer, Playwright, and Selenium, and

00:19:30.255 --> 00:19:32.495
<v Speaker 2>they're curious which one is most compatible with

00:19:32.495 --> 00:19:34.335
<v Speaker 2>LightPanda. And I'm gonna push that a bit

00:19:34.335 --> 00:19:36.095
<v Speaker 2>further and let's not I mean, like, we

00:19:36.095 --> 00:19:37.455
<v Speaker 2>can talk about compatibility,

00:19:37.695 --> 00:19:40.350
<v Speaker 2>but used to know this space. So let's

00:19:40.350 --> 00:19:42.350
<v Speaker 2>get some opinions. Right? Which which one would

00:19:42.350 --> 00:19:43.789
<v Speaker 2>you use and why?

00:19:46.670 --> 00:19:47.710
<v Speaker 4>Which one?

00:19:48.430 --> 00:19:51.870
<v Speaker 4>I my personally, I've I I'm more a

00:19:51.870 --> 00:19:54.510
<v Speaker 4>Go developer and I prefer to use a

00:19:53.985 --> 00:19:56.865
<v Speaker 4>Chrome DP, which is a Go client

00:19:58.304 --> 00:20:01.985
<v Speaker 4>for the CDP protocol and to control the

00:20:02.945 --> 00:20:05.024
<v Speaker 4>browser. So I'm more

00:20:05.265 --> 00:20:05.744
<v Speaker 4>But

00:20:06.465 --> 00:20:07.345
<v Speaker 4>now, in fact,

00:20:08.110 --> 00:20:09.869
<v Speaker 4>if I have to pick one,

00:20:11.549 --> 00:20:12.989
<v Speaker 4>will take Perpetr

00:20:13.950 --> 00:20:14.909
<v Speaker 4>because

00:20:15.390 --> 00:20:15.950
<v Speaker 4>Well,

00:20:17.070 --> 00:20:18.669
<v Speaker 4>to answer the question,

00:20:19.549 --> 00:20:21.469
<v Speaker 4>we are the most compatible

00:20:21.630 --> 00:20:22.995
<v Speaker 4>with Puppeter

00:20:23.075 --> 00:20:23.794
<v Speaker 4>actually.

00:20:26.515 --> 00:20:29.395
<v Speaker 4>We are working on the PreWrite compatibility but

00:20:29.395 --> 00:20:31.554
<v Speaker 4>we have issues mainly because,

00:20:33.155 --> 00:20:37.395
<v Speaker 4>well, to control the browser, Puppeter and PreWrite

00:20:37.395 --> 00:20:39.289
<v Speaker 4>are using CDP protocol,

00:20:39.770 --> 00:20:42.090
<v Speaker 4>which is the Chrome DevTool

00:20:42.090 --> 00:20:42.970
<v Speaker 4>protocol,

00:20:44.090 --> 00:20:46.409
<v Speaker 4>so specific to Chrome. And

00:20:47.050 --> 00:20:47.690
<v Speaker 4>this,

00:20:48.650 --> 00:20:50.570
<v Speaker 4>well, Chrome exposes

00:20:52.585 --> 00:20:54.264
<v Speaker 4>a CDP server, which is

00:20:55.544 --> 00:20:58.585
<v Speaker 4>a WebSocket HTTP server in the sole. And

00:20:58.585 --> 00:21:01.304
<v Speaker 4>so you can send a command

00:21:01.465 --> 00:21:02.264
<v Speaker 4>on it.

00:21:03.385 --> 00:21:04.265
<v Speaker 4>But

00:21:04.610 --> 00:21:07.810
<v Speaker 4>the Chrome DevTools protocol allow you to

00:21:07.970 --> 00:21:11.250
<v Speaker 4>achieve some actions in different ways. You can

00:21:11.410 --> 00:21:14.130
<v Speaker 4>run big chunk of JavaScript doing what you

00:21:14.130 --> 00:21:16.050
<v Speaker 4>want, executing in the browser in the context

00:21:16.050 --> 00:21:18.290
<v Speaker 4>of your page, for example, but you have,

00:21:18.290 --> 00:21:19.090
<v Speaker 4>obviously, specific

00:21:19.945 --> 00:21:20.905
<v Speaker 4>commands

00:21:21.065 --> 00:21:22.345
<v Speaker 4>you can run

00:21:22.425 --> 00:21:23.065
<v Speaker 4>on

00:21:23.625 --> 00:21:24.585
<v Speaker 4>the CDP.

00:21:24.665 --> 00:21:25.545
<v Speaker 4>There

00:21:25.545 --> 00:21:28.265
<v Speaker 4>are a lot of commands on it possible.

00:21:28.425 --> 00:21:30.105
<v Speaker 4>So depending on the clients,

00:21:30.985 --> 00:21:32.905
<v Speaker 4>can have to do the same thing. You

00:21:32.905 --> 00:21:34.585
<v Speaker 4>can have many strategies.

00:21:34.985 --> 00:21:35.305
<v Speaker 4>So

00:21:36.130 --> 00:21:39.330
<v Speaker 4>currently we are more competitive with Preparator,

00:21:40.290 --> 00:21:40.690
<v Speaker 4>but

00:21:41.570 --> 00:21:42.610
<v Speaker 4>Playwrights,

00:21:44.450 --> 00:21:46.210
<v Speaker 4>we have issues in fact.

00:21:46.530 --> 00:21:47.650
<v Speaker 4>And Selenium,

00:21:47.650 --> 00:21:49.410
<v Speaker 4>we don't support it for now at all

00:21:49.410 --> 00:21:51.445
<v Speaker 4>because it doesn't use

00:21:51.605 --> 00:21:54.724
<v Speaker 4>CDP at all. It use web driver,

00:21:54.725 --> 00:21:56.565
<v Speaker 4>which is another protocol. Maybe

00:21:57.205 --> 00:21:58.724
<v Speaker 4>we will implement it

00:21:59.125 --> 00:22:01.125
<v Speaker 4>in the future, but actually we don't.

00:22:02.660 --> 00:22:04.740
<v Speaker 2>Yeah. I mean, just to I mean, I

00:22:04.900 --> 00:22:06.660
<v Speaker 2>I'm not super knowledgeable on this space. But,

00:22:06.660 --> 00:22:09.220
<v Speaker 2>you know, unless you're still running Jenkins, Selenium

00:22:09.220 --> 00:22:10.660
<v Speaker 2>probably isn't the option you wanna be going

00:22:10.660 --> 00:22:12.740
<v Speaker 2>with. I think it's very embedded in older

00:22:12.740 --> 00:22:15.220
<v Speaker 2>Java systems. I can this is my perspective.

00:22:16.684 --> 00:22:18.684
<v Speaker 2>Puppeteer is obviously the one that spun out

00:22:18.684 --> 00:22:20.525
<v Speaker 2>of Google itself, I believe, and Playwright is

00:22:20.525 --> 00:22:23.165
<v Speaker 2>what Microsoft decided to try and improve upon

00:22:23.165 --> 00:22:25.725
<v Speaker 2>it. So, you know, if you pick whatever

00:22:25.725 --> 00:22:26.524
<v Speaker 2>one you like.

00:22:26.845 --> 00:22:28.205
<v Speaker 2>Yeah. Puppeteer is the one I go to.

00:22:28.205 --> 00:22:30.605
<v Speaker 2>I think it's when you need help, which

00:22:30.605 --> 00:22:31.325
<v Speaker 2>I often do.

00:22:32.320 --> 00:22:34.400
<v Speaker 2>The examples are all online for Puppeteer, and

00:22:34.400 --> 00:22:35.440
<v Speaker 2>I like that. So

00:22:35.840 --> 00:22:38.640
<v Speaker 2>And Puppeteer is lighter. As far as we

00:22:38.640 --> 00:22:39.840
<v Speaker 4>know, Puppeteer

00:22:39.920 --> 00:22:40.800
<v Speaker 4>is lighter,

00:22:42.080 --> 00:22:44.000
<v Speaker 4>and PrevWrite send

00:22:44.160 --> 00:22:46.880
<v Speaker 4>bigger JavaScript, more complex things. I think it's

00:22:46.880 --> 00:22:49.255
<v Speaker 4>mostly because they try to be competitive with

00:22:49.255 --> 00:22:52.215
<v Speaker 4>more browsers than Puppeteers because you can run,

00:22:52.215 --> 00:22:54.535
<v Speaker 4>you pre write scripts on

00:22:56.775 --> 00:22:59.495
<v Speaker 4>Firefox too and some of the browsers. I

00:22:59.495 --> 00:23:01.840
<v Speaker 4>know. So I guess that's why

00:23:02.160 --> 00:23:04.559
<v Speaker 4>they have a different strategy using more JavaScript

00:23:04.559 --> 00:23:07.440
<v Speaker 4>with big scripts executing what they want.

00:23:08.720 --> 00:23:11.440
<v Speaker 2>All right. Awesome. All right. Let's change tack

00:23:11.440 --> 00:23:12.880
<v Speaker 2>a little bit before we get onto the

00:23:12.880 --> 00:23:14.720
<v Speaker 2>hands on demo, which I'm sure people are

00:23:14.720 --> 00:23:16.835
<v Speaker 2>excited for. But, you know, you've given us

00:23:16.835 --> 00:23:18.755
<v Speaker 2>a bit of history. You both worked together

00:23:18.755 --> 00:23:20.275
<v Speaker 2>now for eight years.

00:23:20.915 --> 00:23:22.515
<v Speaker 2>You just were doing, I think you said,

00:23:22.515 --> 00:23:23.635
<v Speaker 2>20,000,000

00:23:24.355 --> 00:23:26.275
<v Speaker 2>web page scrapes at one point. I don't

00:23:26.275 --> 00:23:27.395
<v Speaker 2>know if that was daily. I think you

00:23:27.395 --> 00:23:28.515
<v Speaker 2>said daily. Right? Yeah.

00:23:29.400 --> 00:23:31.480
<v Speaker 2>So I'm curious, obviously

00:23:31.960 --> 00:23:33.799
<v Speaker 2>you've been in this space for a while.

00:23:34.040 --> 00:23:36.200
<v Speaker 2>You've now got a new product. It's open

00:23:36.200 --> 00:23:38.600
<v Speaker 2>source. Do you have a history with open

00:23:38.600 --> 00:23:40.440
<v Speaker 2>source? Why did you go down this route?

00:23:40.440 --> 00:23:43.045
<v Speaker 2>Especially for something that is not not

00:23:43.445 --> 00:23:45.125
<v Speaker 2>not anyone could just sit down and go,

00:23:45.125 --> 00:23:46.965
<v Speaker 2>hey, I'm gonna write a new headless browser.

00:23:47.365 --> 00:23:48.325
<v Speaker 2>This is a very

00:23:48.965 --> 00:23:51.685
<v Speaker 2>hard challenge, a large project.

00:23:52.005 --> 00:23:54.005
<v Speaker 2>Why do it open source? I'd love to

00:23:54.005 --> 00:23:54.805
<v Speaker 2>learn more as well.

00:23:56.750 --> 00:23:59.549
<v Speaker 3>I think I'll I'll start and then, yeah,

00:23:59.549 --> 00:24:01.950
<v Speaker 3>add anything you want. But I think,

00:24:02.750 --> 00:24:04.429
<v Speaker 3>very simply, the

00:24:04.750 --> 00:24:07.549
<v Speaker 3>the de facto solution today is Chrome

00:24:07.790 --> 00:24:08.510
<v Speaker 3>and

00:24:09.315 --> 00:24:12.114
<v Speaker 3>headless Chrome is open source today.

00:24:13.794 --> 00:24:14.514
<v Speaker 3>To

00:24:14.595 --> 00:24:15.794
<v Speaker 3>disrupt

00:24:16.914 --> 00:24:19.554
<v Speaker 3>a space that's so well established

00:24:19.554 --> 00:24:21.955
<v Speaker 3>and offer something that isn't open source

00:24:22.115 --> 00:24:24.970
<v Speaker 3>is making life even more difficult in an

00:24:24.970 --> 00:24:27.289
<v Speaker 3>already difficult situation for one.

00:24:29.130 --> 00:24:31.209
<v Speaker 3>And then I think just all

00:24:31.370 --> 00:24:32.169
<v Speaker 3>the kind of

00:24:33.130 --> 00:24:35.370
<v Speaker 3>classic benefits of an open source project. I

00:24:35.370 --> 00:24:38.774
<v Speaker 3>mean, our target market is the developer community

00:24:38.774 --> 00:24:40.695
<v Speaker 3>and we've already had

00:24:41.255 --> 00:24:44.534
<v Speaker 3>some amazing contributions to the project and

00:24:44.695 --> 00:24:45.815
<v Speaker 3>Zig community

00:24:45.895 --> 00:24:48.534
<v Speaker 3>from, since we launched kind of properly the

00:24:48.534 --> 00:24:50.135
<v Speaker 3>beta version ended last year.

00:24:51.340 --> 00:24:53.260
<v Speaker 3>So I think we've seen that firsthand

00:24:53.260 --> 00:24:56.859
<v Speaker 3>despite obviously knowing it in theory beforehand.

00:24:59.019 --> 00:25:00.219
<v Speaker 4>Yep. And

00:25:00.460 --> 00:25:01.659
<v Speaker 4>if I can add,

00:25:02.620 --> 00:25:03.179
<v Speaker 4>think

00:25:03.500 --> 00:25:05.179
<v Speaker 4>the two things are

00:25:05.595 --> 00:25:06.315
<v Speaker 4>as

00:25:06.475 --> 00:25:09.754
<v Speaker 4>we were a potential user of LightPanda and

00:25:10.235 --> 00:25:11.595
<v Speaker 4>we will never

00:25:11.995 --> 00:25:13.835
<v Speaker 4>even try it if

00:25:15.275 --> 00:25:16.075
<v Speaker 4>it was

00:25:16.875 --> 00:25:19.750
<v Speaker 4>closed source, I think. So that's the main

00:25:19.750 --> 00:25:20.390
<v Speaker 4>reason.

00:25:21.190 --> 00:25:21.750
<v Speaker 4>But

00:25:23.110 --> 00:25:23.830
<v Speaker 4>also

00:25:25.750 --> 00:25:26.549
<v Speaker 4>because

00:25:27.030 --> 00:25:30.310
<v Speaker 4>we are under development, active development right now,

00:25:30.310 --> 00:25:31.909
<v Speaker 4>so the browser is not really

00:25:32.470 --> 00:25:35.304
<v Speaker 4>actually or in some cases,

00:25:35.625 --> 00:25:38.264
<v Speaker 4>not all, obviously. So it's maybe

00:25:38.904 --> 00:25:39.465
<v Speaker 4>more

00:25:40.184 --> 00:25:41.144
<v Speaker 4>understandable

00:25:41.145 --> 00:25:43.784
<v Speaker 4>for users to have some things not really

00:25:43.784 --> 00:25:45.224
<v Speaker 4>or not perfect

00:25:45.945 --> 00:25:48.345
<v Speaker 4>to use or to try because it's open

00:25:48.345 --> 00:25:49.304
<v Speaker 4>source

00:25:49.570 --> 00:25:50.610
<v Speaker 4>instead of

00:25:51.170 --> 00:25:54.050
<v Speaker 4>you if you get the closed source browser,

00:25:54.050 --> 00:25:56.930
<v Speaker 4>you expect to have something which is just

00:25:56.930 --> 00:25:57.730
<v Speaker 4>working.

00:25:57.890 --> 00:25:59.090
<v Speaker 4>And so

00:25:59.170 --> 00:26:00.610
<v Speaker 4>that's another point also. Yes.

00:26:02.284 --> 00:26:03.004
<v Speaker 2>Alright.

00:26:03.245 --> 00:26:04.924
<v Speaker 2>Last question. I'll keep it light so we

00:26:04.924 --> 00:26:06.524
<v Speaker 2>can get on to the hands on component.

00:26:06.765 --> 00:26:08.684
<v Speaker 2>Give me the history of the name.

00:26:09.245 --> 00:26:10.445
<v Speaker 2>What is a late panda?

00:26:15.350 --> 00:26:16.150
<v Speaker 4>Well,

00:26:17.190 --> 00:26:19.190
<v Speaker 4>it was mainly because

00:26:19.590 --> 00:26:20.470
<v Speaker 4>it was

00:26:20.790 --> 00:26:22.230
<v Speaker 4>brainstorming.

00:26:22.790 --> 00:26:23.350
<v Speaker 4>We

00:26:24.070 --> 00:26:25.830
<v Speaker 4>had some ideas,

00:26:26.070 --> 00:26:28.550
<v Speaker 4>but LightPanda was the coolest.

00:26:29.975 --> 00:26:32.055
<v Speaker 4>At the beginning, we had Had a benefit

00:26:32.055 --> 00:26:35.174
<v Speaker 3>of having a lot of available domain names.

00:26:36.215 --> 00:26:36.855
<v Speaker 4>Yes.

00:26:39.255 --> 00:26:40.935
<v Speaker 3>Also the Not a bad way to do

00:26:40.935 --> 00:26:42.455
<v Speaker 2>it, right? The Firefox,

00:26:42.455 --> 00:26:43.415
<v Speaker 3>I believe is

00:26:43.760 --> 00:26:45.360
<v Speaker 3>a red panda. Yes.

00:26:45.760 --> 00:26:46.960
<v Speaker 3>Which is also

00:26:47.440 --> 00:26:50.320
<v Speaker 3>known as a light panda. No, it's just

00:26:50.320 --> 00:26:51.360
<v Speaker 3>a red panda.

00:26:52.160 --> 00:26:53.920
<v Speaker 4>Yeah. Is that right? Yeah.

00:26:54.080 --> 00:26:54.720
<v Speaker 3>Yeah.

00:26:55.280 --> 00:26:57.075
<v Speaker 3>It's quite fun to play around with the

00:26:57.075 --> 00:26:59.235
<v Speaker 3>mascot though. This is my latest creation. I

00:26:59.235 --> 00:27:00.274
<v Speaker 3>don't know if you can see.

00:27:02.434 --> 00:27:03.955
<v Speaker 3>Alright.

00:27:06.195 --> 00:27:08.274
<v Speaker 2>Awesome. Thank you for sharing. I think we

00:27:08.274 --> 00:27:09.395
<v Speaker 2>should show people then

00:27:09.730 --> 00:27:12.049
<v Speaker 2>what LightPanda is, how to get started, what

00:27:12.049 --> 00:27:14.130
<v Speaker 2>it can do. So, Pierre, if you could

00:27:14.130 --> 00:27:14.690
<v Speaker 2>please

00:27:15.009 --> 00:27:17.169
<v Speaker 2>share your screen and we

00:27:17.490 --> 00:27:19.330
<v Speaker 2>will take a look. Sure.

00:27:25.294 --> 00:27:26.014
<v Speaker 4>So

00:27:26.815 --> 00:27:29.054
<v Speaker 4>do you see my screen? Yeah. We do

00:27:29.054 --> 00:27:30.894
<v Speaker 2>now. Thank you. Take it away.

00:27:33.135 --> 00:27:33.774
<v Speaker 4>So

00:27:34.015 --> 00:27:38.735
<v Speaker 4>as I said, we are under

00:27:36.830 --> 00:27:37.710
<v Speaker 4>heavy,

00:27:37.710 --> 00:27:40.590
<v Speaker 4>heavy development. So we don't have actually

00:27:41.790 --> 00:27:43.309
<v Speaker 4>a release tag,

00:27:43.470 --> 00:27:45.389
<v Speaker 4>but we are building the

00:27:45.550 --> 00:27:46.350
<v Speaker 4>browser

00:27:46.990 --> 00:27:49.390
<v Speaker 4>every night. So you can get the last

00:27:49.390 --> 00:27:50.190
<v Speaker 4>version

00:27:50.510 --> 00:27:51.630
<v Speaker 4>on the nightly

00:27:52.135 --> 00:27:54.855
<v Speaker 4>release on the GitHub

00:27:55.015 --> 00:27:56.054
<v Speaker 4>repository

00:27:59.015 --> 00:28:02.294
<v Speaker 4>where you can, well, just download the

00:28:02.535 --> 00:28:03.654
<v Speaker 4>last version

00:28:03.975 --> 00:28:04.934
<v Speaker 4>of the browser.

00:28:05.970 --> 00:28:07.889
<v Speaker 4>So I will do that.

00:28:14.290 --> 00:28:15.009
<v Speaker 4>Yeah.

00:28:15.330 --> 00:28:18.290
<v Speaker 4>So now you just have to

00:28:19.304 --> 00:28:21.144
<v Speaker 4>allow execution

00:28:23.544 --> 00:28:24.504
<v Speaker 4>on it.

00:28:26.825 --> 00:28:28.024
<v Speaker 4>You have two

00:28:28.345 --> 00:28:30.744
<v Speaker 4>currently, you have two ways to

00:28:30.985 --> 00:28:32.264
<v Speaker 4>use the browser.

00:28:32.585 --> 00:28:34.265
<v Speaker 4>The first one is

00:28:35.690 --> 00:28:37.130
<v Speaker 4>just a way to

00:28:37.610 --> 00:28:39.130
<v Speaker 4>fetch a web page

00:28:40.810 --> 00:28:41.530
<v Speaker 4>in your

00:28:41.850 --> 00:28:43.130
<v Speaker 4>CLI and

00:28:44.410 --> 00:28:46.010
<v Speaker 4>like you will do with

00:28:46.410 --> 00:28:46.809
<v Speaker 4>but

00:28:47.370 --> 00:28:50.404
<v Speaker 4>at the difference of with curl, we will

00:28:51.685 --> 00:28:55.285
<v Speaker 4>fetch the HTML and execute and fetch the

00:28:55.285 --> 00:28:58.645
<v Speaker 4>resource, the script resources and then execute the

00:29:00.245 --> 00:29:01.445
<v Speaker 4>whole JavaScript.

00:29:01.445 --> 00:29:01.605
<v Speaker 4>So

00:29:02.690 --> 00:29:03.650
<v Speaker 4>I'm

00:29:03.650 --> 00:29:04.289
<v Speaker 4>using

00:29:04.450 --> 00:29:06.210
<v Speaker 4>right now a local

00:29:07.730 --> 00:29:08.929
<v Speaker 4>web page

00:29:09.090 --> 00:29:10.370
<v Speaker 4>we are using

00:29:10.690 --> 00:29:14.450
<v Speaker 4>to demonstrate the browser. So that's a fake

00:29:14.644 --> 00:29:16.084
<v Speaker 4>e commerce page,

00:29:16.164 --> 00:29:17.445
<v Speaker 4>a product page.

00:29:19.845 --> 00:29:20.404
<v Speaker 4>So

00:29:21.044 --> 00:29:23.124
<v Speaker 4>we can try it by using,

00:29:23.605 --> 00:29:25.445
<v Speaker 4>like, Panda with

00:29:25.605 --> 00:29:27.364
<v Speaker 4>the fetch subcommand.

00:29:28.404 --> 00:29:29.605
<v Speaker 4>And then

00:29:30.540 --> 00:29:31.820
<v Speaker 4>I will just

00:29:32.220 --> 00:29:36.460
<v Speaker 4>add the dump option to ask LightBandA to

00:29:36.700 --> 00:29:38.780
<v Speaker 4>write the final HTML

00:29:39.420 --> 00:29:40.299
<v Speaker 4>in the

00:29:40.860 --> 00:29:42.059
<v Speaker 4>standard output.

00:29:43.340 --> 00:29:43.980
<v Speaker 4>And

00:29:44.620 --> 00:29:45.500
<v Speaker 4>what I will do,

00:29:46.515 --> 00:29:48.355
<v Speaker 4>I will save the results.

00:29:51.635 --> 00:29:54.674
<v Speaker 4>Oh, sorry. I forgot the URL, of course.

00:29:57.235 --> 00:29:58.595
<v Speaker 4>And I will save the HTML

00:30:01.610 --> 00:30:02.490
<v Speaker 4>in a file.

00:30:05.130 --> 00:30:07.050
<v Speaker 4>And it doesn't work.

00:30:07.930 --> 00:30:08.650
<v Speaker 4>Interesting.

00:30:10.490 --> 00:30:12.730
<v Speaker 4>What I do wrong

00:30:15.945 --> 00:30:17.864
<v Speaker 4>Is my ah, okay.

00:30:18.265 --> 00:30:19.144
<v Speaker 4>Sorry.

00:30:19.304 --> 00:30:21.624
<v Speaker 4>So let's start from the beginning.

00:30:21.945 --> 00:30:23.864
<v Speaker 4>I will start my

00:30:25.065 --> 00:30:26.745
<v Speaker 4>web server. It will be better.

00:30:28.240 --> 00:30:30.960
<v Speaker 4>So into my demo, I have a a

00:30:30.960 --> 00:30:31.679
<v Speaker 4>Go

00:30:32.400 --> 00:30:33.519
<v Speaker 4>web server.

00:30:35.520 --> 00:30:36.320
<v Speaker 4>Sorry.

00:30:36.640 --> 00:30:37.359
<v Speaker 4>Okay.

00:30:38.720 --> 00:30:39.359
<v Speaker 4>So

00:30:40.480 --> 00:30:41.360
<v Speaker 4>okay. Better.

00:30:45.205 --> 00:30:47.765
<v Speaker 4>I will try. Okay. Good. So here we

00:30:47.765 --> 00:30:49.445
<v Speaker 4>can see in the log

00:30:50.005 --> 00:30:51.285
<v Speaker 4>well, we have

00:30:52.805 --> 00:30:53.605
<v Speaker 4>oh, yeah. Sure.

00:30:57.190 --> 00:30:58.470
<v Speaker 4>Let me do that.

00:30:59.510 --> 00:31:00.309
<v Speaker 4>No.

00:31:03.110 --> 00:31:03.830
<v Speaker 4>No.

00:31:04.710 --> 00:31:05.670
<v Speaker 4>How can I do that?

00:31:12.205 --> 00:31:13.325
<v Speaker 4>Come on. Okay.

00:31:13.885 --> 00:31:14.924
<v Speaker 4>Is that better?

00:31:16.525 --> 00:31:17.245
<v Speaker 4>Okay.

00:31:19.085 --> 00:31:21.485
<v Speaker 4>So here, yeah, what we can do is

00:31:21.070 --> 00:31:22.110
<v Speaker 4>we have

00:31:22.270 --> 00:31:23.390
<v Speaker 4>a telemetry

00:31:23.630 --> 00:31:24.590
<v Speaker 4>just to,

00:31:25.150 --> 00:31:25.790
<v Speaker 4>well,

00:31:26.990 --> 00:31:28.030
<v Speaker 4>to have

00:31:28.190 --> 00:31:29.470
<v Speaker 4>feedback from

00:31:30.110 --> 00:31:31.630
<v Speaker 4>binary usage,

00:31:32.830 --> 00:31:35.550
<v Speaker 4>but you can disable it using

00:31:37.345 --> 00:31:38.384
<v Speaker 4>an env

00:31:38.865 --> 00:31:39.664
<v Speaker 4>variable.

00:31:40.304 --> 00:31:42.544
<v Speaker 4>And then we have the log.

00:31:43.265 --> 00:31:45.904
<v Speaker 4>So the first log is to fetch the

00:31:45.904 --> 00:31:47.184
<v Speaker 4>first web page.

00:31:47.585 --> 00:31:49.024
<v Speaker 4>And then after

00:31:49.105 --> 00:31:51.505
<v Speaker 4>getting it and parse the HTML,

00:31:51.890 --> 00:31:54.050
<v Speaker 4>we get the browsers

00:31:54.610 --> 00:31:55.650
<v Speaker 4>fetch the

00:31:55.810 --> 00:31:58.850
<v Speaker 4>external resources. So here we have a script.

00:31:58.850 --> 00:32:00.530
<v Speaker 4>Js we want to execute.

00:32:01.090 --> 00:32:02.850
<v Speaker 4>And the script.

00:32:03.170 --> 00:32:04.930
<v Speaker 4>Js also

00:32:05.695 --> 00:32:07.855
<v Speaker 4>do some XHR

00:32:08.655 --> 00:32:09.455
<v Speaker 4>request,

00:32:10.095 --> 00:32:11.855
<v Speaker 4>want to get reviews

00:32:11.855 --> 00:32:14.095
<v Speaker 4>and want to get products details.

00:32:14.735 --> 00:32:15.375
<v Speaker 4>So

00:32:15.775 --> 00:32:16.655
<v Speaker 4>if

00:32:17.135 --> 00:32:20.015
<v Speaker 4>I look at the results

00:32:20.015 --> 00:32:20.495
<v Speaker 4>here,

00:32:26.649 --> 00:32:27.849
<v Speaker 4>Yeah.

00:32:29.450 --> 00:32:32.169
<v Speaker 4>So here I can see the results

00:32:32.250 --> 00:32:33.610
<v Speaker 4>of what we fetched.

00:32:35.005 --> 00:32:35.644
<v Speaker 4>So

00:32:35.885 --> 00:32:38.845
<v Speaker 4>we didn't

00:32:38.845 --> 00:32:39.485
<v Speaker 4>have

00:32:43.405 --> 00:32:46.125
<v Speaker 4>the CSS display here, but we have all

00:32:46.125 --> 00:32:47.805
<v Speaker 4>the information we wanted. So

00:32:48.440 --> 00:32:51.160
<v Speaker 4>here we have the the product name and

00:32:51.160 --> 00:32:53.399
<v Speaker 4>etcetera, the things, the reviews also.

00:32:53.800 --> 00:32:54.360
<v Speaker 4>So

00:32:54.840 --> 00:32:57.480
<v Speaker 4>we get the final HTML

00:32:58.440 --> 00:32:59.399
<v Speaker 4>with the

00:32:59.880 --> 00:33:00.200
<v Speaker 4>the

00:33:01.294 --> 00:33:03.455
<v Speaker 4>JavaScript results on it.

00:33:04.735 --> 00:33:05.855
<v Speaker 4>In comparison,

00:33:05.855 --> 00:33:07.695
<v Speaker 4>if I do the same with, let's say,

00:33:07.695 --> 00:33:08.174
<v Speaker 4>curl.

00:33:15.290 --> 00:33:16.090
<v Speaker 4>So

00:33:19.450 --> 00:33:22.490
<v Speaker 4>in that case of it, curl only

00:33:23.050 --> 00:33:25.530
<v Speaker 4>dumped the original HTML.

00:33:25.530 --> 00:33:26.410
<v Speaker 4>So it didn't,

00:33:26.775 --> 00:33:27.655
<v Speaker 4>of course,

00:33:27.975 --> 00:33:29.255
<v Speaker 4>run the JavaScript.

00:33:29.335 --> 00:33:32.775
<v Speaker 4>So we don't have the etcetera changes

00:33:32.775 --> 00:33:33.655
<v Speaker 4>loaded.

00:33:34.375 --> 00:33:35.895
<v Speaker 4>So that was the first

00:33:36.775 --> 00:33:37.575
<v Speaker 4>example.

00:33:37.575 --> 00:33:40.535
<v Speaker 4>So first way to use basically

00:33:41.255 --> 00:33:41.975
<v Speaker 4>LightPanda.

00:33:43.470 --> 00:33:44.110
<v Speaker 4>And

00:33:46.990 --> 00:33:49.070
<v Speaker 4>the another, I will say,

00:33:49.950 --> 00:33:51.950
<v Speaker 4>classic way to do that is to use

00:33:51.950 --> 00:33:52.590
<v Speaker 4>the

00:33:53.630 --> 00:33:54.510
<v Speaker 4>CDP

00:33:54.590 --> 00:33:55.470
<v Speaker 4>server.

00:33:55.470 --> 00:33:56.510
<v Speaker 4>So let's try that.

00:34:00.675 --> 00:34:02.434
<v Speaker 4>So if I have

00:34:04.435 --> 00:34:07.554
<v Speaker 4>Here in demo, I have some preparatory scripts.

00:34:08.355 --> 00:34:10.275
<v Speaker 4>One of them is CDP.

00:34:10.275 --> 00:34:11.075
<v Speaker 4>Js.

00:34:11.315 --> 00:34:13.235
<v Speaker 4>So this preparatory scripts

00:34:14.980 --> 00:34:16.180
<v Speaker 4>will just

00:34:16.820 --> 00:34:17.540
<v Speaker 4>run

00:34:17.700 --> 00:34:19.540
<v Speaker 4>some load of the page

00:34:19.780 --> 00:34:22.500
<v Speaker 4>to test it. So it connects to

00:34:26.475 --> 00:34:28.075
<v Speaker 4>one browser

00:34:28.475 --> 00:34:29.275
<v Speaker 4>URL

00:34:29.275 --> 00:34:30.795
<v Speaker 4>to the CDP server.

00:34:30.875 --> 00:34:33.355
<v Speaker 4>No, sorry, it's different here. So it connects

00:34:33.355 --> 00:34:35.035
<v Speaker 4>to the WebSocket's

00:34:35.035 --> 00:34:36.315
<v Speaker 4>CDP server

00:34:36.475 --> 00:34:38.315
<v Speaker 4>on the browser and fetch

00:34:39.355 --> 00:34:43.330
<v Speaker 4>the web page here, which is my local

00:34:43.489 --> 00:34:46.370
<v Speaker 4>server here. And by default, it

00:34:46.850 --> 00:34:48.050
<v Speaker 4>does the fetch

00:34:48.290 --> 00:34:49.250
<v Speaker 4>100 time.

00:34:54.614 --> 00:34:56.935
<v Speaker 4>So nothing fancy. It's per picture.

00:34:57.415 --> 00:35:00.055
<v Speaker 4>We have just a loop here. And on

00:35:01.335 --> 00:35:02.295
<v Speaker 4>each loop,

00:35:02.455 --> 00:35:03.415
<v Speaker 4>we create

00:35:03.575 --> 00:35:06.535
<v Speaker 4>a browser context, which is basically

00:35:08.135 --> 00:35:09.575
<v Speaker 4>a tab in the browser.

00:35:10.530 --> 00:35:12.050
<v Speaker 4>And then we navigate

00:35:12.130 --> 00:35:13.250
<v Speaker 4>into the

00:35:14.050 --> 00:35:15.490
<v Speaker 4>product web page.

00:35:17.490 --> 00:35:19.810
<v Speaker 4>And we are waiting for the

00:35:19.890 --> 00:35:20.770
<v Speaker 4>product price.

00:35:23.905 --> 00:35:25.825
<v Speaker 4>Yeah, we are waiting for the product price

00:35:25.825 --> 00:35:26.865
<v Speaker 4>and get it,

00:35:28.385 --> 00:35:29.745
<v Speaker 4>if I'm not wrong.

00:35:33.185 --> 00:35:35.345
<v Speaker 4>Well, yeah, we are checking it's loaded

00:35:35.505 --> 00:35:37.985
<v Speaker 4>and we are checking also that the reviews

00:35:37.985 --> 00:35:40.540
<v Speaker 4>are loaded. So to be sure that the

00:35:41.500 --> 00:35:42.140
<v Speaker 4>page,

00:35:42.380 --> 00:35:45.580
<v Speaker 4>the browser displays is the correct we want.

00:35:48.060 --> 00:35:49.660
<v Speaker 4>And we are extracting

00:35:50.220 --> 00:35:51.099
<v Speaker 4>some

00:35:52.035 --> 00:35:52.835
<v Speaker 4>data,

00:35:52.994 --> 00:35:53.715
<v Speaker 4>the

00:35:54.275 --> 00:35:56.595
<v Speaker 4>name, the price description of the product,

00:35:56.835 --> 00:35:57.715
<v Speaker 4>the related

00:35:58.115 --> 00:35:58.915
<v Speaker 4>products

00:35:59.155 --> 00:36:00.835
<v Speaker 4>also, and the reviews.

00:36:01.315 --> 00:36:03.075
<v Speaker 4>But we don't display them.

00:36:03.795 --> 00:36:05.155
<v Speaker 4>We just try to

00:36:05.315 --> 00:36:07.290
<v Speaker 4>We make some tests just to be sure

00:36:07.290 --> 00:36:07.770
<v Speaker 4>that

00:36:08.090 --> 00:36:09.210
<v Speaker 4>we get the data.

00:36:10.570 --> 00:36:12.330
<v Speaker 4>And finally, we display

00:36:12.970 --> 00:36:14.010
<v Speaker 4>results.

00:36:15.050 --> 00:36:17.610
<v Speaker 4>Well, we store the time

00:36:18.170 --> 00:36:19.450
<v Speaker 4>we used to

00:36:19.930 --> 00:36:22.285
<v Speaker 4>do the loop and at the end of

00:36:22.285 --> 00:36:23.965
<v Speaker 4>the process, just

00:36:24.125 --> 00:36:27.245
<v Speaker 4>display the average time, the min, the max.

00:36:27.805 --> 00:36:29.085
<v Speaker 4>So that's the

00:36:31.085 --> 00:36:33.645
<v Speaker 4>basic script we want to execute

00:36:33.885 --> 00:36:34.365
<v Speaker 4>to test.

00:36:37.280 --> 00:36:38.000
<v Speaker 4>So

00:36:42.560 --> 00:36:44.560
<v Speaker 4>I can run LightPanda

00:36:44.560 --> 00:36:45.360
<v Speaker 4>with the

00:36:47.200 --> 00:36:48.000
<v Speaker 4>serve

00:36:48.075 --> 00:36:51.515
<v Speaker 4>subcommand just to start the CDP web server.

00:36:52.075 --> 00:36:53.435
<v Speaker 4>I can also

00:36:53.994 --> 00:36:56.155
<v Speaker 4>add the port option, sorry,

00:36:57.195 --> 00:36:58.795
<v Speaker 4>to define another

00:36:58.875 --> 00:37:00.555
<v Speaker 4>point. But by default,

00:37:01.275 --> 00:37:02.795
<v Speaker 4>it's the 9,222.

00:37:04.560 --> 00:37:05.840
<v Speaker 4>It's a classic

00:37:06.320 --> 00:37:07.360
<v Speaker 4>port number

00:37:07.520 --> 00:37:08.240
<v Speaker 4>for

00:37:10.000 --> 00:37:11.280
<v Speaker 4>the browser CDP.

00:37:12.160 --> 00:37:14.160
<v Speaker 4>So if I run

00:37:16.345 --> 00:37:18.425
<v Speaker 4>my computer script using node,

00:37:20.665 --> 00:37:23.305
<v Speaker 4>so here we display a dot each time

00:37:23.305 --> 00:37:24.185
<v Speaker 4>we load

00:37:24.505 --> 00:37:26.745
<v Speaker 4>and we loop into the

00:37:27.385 --> 00:37:27.705
<v Speaker 4>page.

00:37:28.539 --> 00:37:29.180
<v Speaker 4>And

00:37:29.740 --> 00:37:30.859
<v Speaker 4>here we have

00:37:32.539 --> 00:37:33.180
<v Speaker 4>the

00:37:33.420 --> 00:37:35.420
<v Speaker 4>average time, which is

00:37:36.380 --> 00:37:37.099
<v Speaker 4>one,

00:37:37.900 --> 00:37:38.859
<v Speaker 4>sorry,

00:37:38.859 --> 00:37:39.579
<v Speaker 4>seventeen

00:37:42.915 --> 00:37:43.715
<v Speaker 4>milliseconds.

00:37:45.475 --> 00:37:47.235
<v Speaker 4>And just to compare, if you want to

00:37:47.235 --> 00:37:50.115
<v Speaker 4>do the same thing using Chromium,

00:37:50.515 --> 00:37:54.435
<v Speaker 4>you can run it with the headless new

00:37:54.435 --> 00:37:55.235
<v Speaker 4>option,

00:37:55.235 --> 00:37:56.435
<v Speaker 4>which run

00:37:57.010 --> 00:37:58.930
<v Speaker 4>the browser as headless,

00:37:59.170 --> 00:38:00.930
<v Speaker 4>and you will define

00:38:01.330 --> 00:38:04.610
<v Speaker 4>the remote debugging port, which will

00:38:05.570 --> 00:38:06.850
<v Speaker 4>enable the

00:38:07.810 --> 00:38:10.370
<v Speaker 4>CDP server, the exposition of the CDP server

00:38:10.370 --> 00:38:13.265
<v Speaker 4>from the Chromium browser and lets you connect

00:38:13.265 --> 00:38:14.224
<v Speaker 4>using

00:38:14.785 --> 00:38:15.665
<v Speaker 4>your

00:38:15.984 --> 00:38:16.865
<v Speaker 4>script.

00:38:17.825 --> 00:38:18.465
<v Speaker 4>And

00:38:18.785 --> 00:38:19.585
<v Speaker 4>because

00:38:19.904 --> 00:38:21.185
<v Speaker 4>Chrome doesn't

00:38:21.424 --> 00:38:23.345
<v Speaker 4>use just you have to

00:38:23.825 --> 00:38:27.825
<v Speaker 4>give the full URL

00:38:27.050 --> 00:38:28.250
<v Speaker 4>to connect

00:38:29.850 --> 00:38:32.490
<v Speaker 4>directly in the webs on the web server.

00:38:32.650 --> 00:38:33.210
<v Speaker 4>So

00:38:35.290 --> 00:38:37.369
<v Speaker 4>I registered an example.

00:38:42.315 --> 00:38:43.195
<v Speaker 4>What is it?

00:38:43.835 --> 00:38:44.795
<v Speaker 4>Browser,

00:38:46.475 --> 00:38:47.595
<v Speaker 4>WS.

00:38:49.995 --> 00:38:50.555
<v Speaker 4>Not sure.

00:38:56.369 --> 00:39:00.130
<v Speaker 4>That was wrong. Sorry. I will run LightBandA.

00:39:02.930 --> 00:39:03.890
<v Speaker 4>Let me

00:39:05.089 --> 00:39:06.290
<v Speaker 4>check the

00:39:06.849 --> 00:39:07.170
<v Speaker 4>name.

00:39:09.995 --> 00:39:10.715
<v Speaker 4>Its

00:39:11.275 --> 00:39:12.075
<v Speaker 4>browser address.

00:39:25.550 --> 00:39:27.310
<v Speaker 4>So here we can see

00:39:27.790 --> 00:39:29.150
<v Speaker 4>visually the difference

00:39:31.710 --> 00:39:32.750
<v Speaker 4>of speed

00:39:33.390 --> 00:39:34.430
<v Speaker 4>with Chrome,

00:39:34.430 --> 00:39:34.990
<v Speaker 4>is

00:39:35.230 --> 00:39:35.710
<v Speaker 4>slower.

00:39:39.565 --> 00:39:40.205
<v Speaker 4>Yes.

00:39:40.925 --> 00:39:43.005
<v Speaker 4>But it makes sense because

00:39:43.405 --> 00:39:45.965
<v Speaker 4>we are doing less

00:39:47.645 --> 00:39:51.405
<v Speaker 4>work, obviously. We don't,

00:39:52.420 --> 00:39:53.300
<v Speaker 4>of course,

00:39:54.020 --> 00:39:57.460
<v Speaker 4>do any rendering, graphical rendering of page.

00:39:57.460 --> 00:40:00.420
<v Speaker 4>So it takes time, but we don't also

00:40:00.420 --> 00:40:01.860
<v Speaker 4>load images,

00:40:01.860 --> 00:40:02.580
<v Speaker 4>we don't

00:40:03.060 --> 00:40:03.860
<v Speaker 4>decompress

00:40:03.860 --> 00:40:04.420
<v Speaker 4>images,

00:40:05.285 --> 00:40:07.845
<v Speaker 4>and that's a lot of work Chrome is

00:40:07.845 --> 00:40:10.805
<v Speaker 4>doing and we don't. That's also explain why

00:40:11.205 --> 00:40:12.245
<v Speaker 4>we could

00:40:12.645 --> 00:40:13.765
<v Speaker 4>be faster

00:40:14.085 --> 00:40:14.885
<v Speaker 4>than it.

00:40:17.205 --> 00:40:17.845
<v Speaker 4>So

00:40:18.579 --> 00:40:21.299
<v Speaker 4>I wouldn't say Chrome is slow. That's that's

00:40:21.299 --> 00:40:24.020
<v Speaker 4>not true. But we can skip a lot

00:40:24.020 --> 00:40:26.420
<v Speaker 4>of users' work in this case and so

00:40:26.900 --> 00:40:29.060
<v Speaker 4>save a lot of time this way.

00:40:30.579 --> 00:40:32.180
<v Speaker 2>I guess it comes down to your your

00:40:32.180 --> 00:40:33.780
<v Speaker 2>use case, right, and what people are trying

00:40:33.780 --> 00:40:36.615
<v Speaker 2>to do. Yes. There there's a large subset

00:40:36.615 --> 00:40:39.895
<v Speaker 2>of acceptance test and and synthetic testing that

00:40:39.895 --> 00:40:42.695
<v Speaker 2>doesn't need CSS and all of that other

00:40:42.695 --> 00:40:44.935
<v Speaker 2>stuff that comes with it. And keeping those

00:40:44.935 --> 00:40:45.655
<v Speaker 2>fast

00:40:45.975 --> 00:40:48.055
<v Speaker 2>is gonna save companies money, especially in their

00:40:48.055 --> 00:40:50.570
<v Speaker 2>CICD pipeline or or even locally when they're

00:40:50.570 --> 00:40:52.410
<v Speaker 2>running their testing, want this to be fast.

00:40:52.490 --> 00:40:54.010
<v Speaker 2>Sure. We we do have a question

00:40:54.250 --> 00:40:55.850
<v Speaker 2>in the from the

00:40:56.090 --> 00:40:58.170
<v Speaker 2>comments in the audience here from doctor.

00:40:59.050 --> 00:41:00.490
<v Speaker 2>I was curious if you could run both

00:41:00.490 --> 00:41:03.805
<v Speaker 2>of those CDP scripts against LightPanda and Chromium

00:41:03.805 --> 00:41:06.205
<v Speaker 2>again, but while running htop so we can

00:41:06.205 --> 00:41:08.285
<v Speaker 2>see the kinda the usage

00:41:08.445 --> 00:41:09.085
<v Speaker 2>of,

00:41:09.645 --> 00:41:11.965
<v Speaker 2>you know, Chromium versus LightPanda, if you're happy

00:41:11.965 --> 00:41:13.725
<v Speaker 2>to do that. Oh, yes. I can. Oh,

00:41:13.725 --> 00:41:16.860
<v Speaker 4>sorry. I stopped the screen sharing. My bad.

00:41:17.500 --> 00:41:18.620
<v Speaker 2>No. It's alright.

00:41:21.819 --> 00:41:22.540
<v Speaker 4>Yes.

00:41:23.339 --> 00:41:24.540
<v Speaker 4>How can I do that?

00:41:25.500 --> 00:41:26.460
<v Speaker 4>It's a good question.

00:41:28.515 --> 00:41:31.235
<v Speaker 4>I'm not sure. Well, we can try it.

00:41:37.395 --> 00:41:39.155
<v Speaker 4>If I run htop,

00:41:39.155 --> 00:41:40.115
<v Speaker 4>but

00:41:46.410 --> 00:41:48.010
<v Speaker 3>what I can do So it's F3, you

00:41:48.010 --> 00:41:49.849
<v Speaker 2>can search for well, it's gonna show you

00:41:49.849 --> 00:41:51.609
<v Speaker 2>your actual Chromium and not just the htop.

00:41:51.609 --> 00:41:52.090
<v Speaker 4>Yes.

00:41:52.410 --> 00:41:54.250
<v Speaker 4>That's a good point. But what I can

00:41:54.250 --> 00:41:55.450
<v Speaker 4>do instead,

00:41:55.450 --> 00:41:55.690
<v Speaker 4>maybe,

00:41:56.995 --> 00:42:00.035
<v Speaker 4>I can show you a bit an idea

00:42:00.035 --> 00:42:01.395
<v Speaker 4>of the

00:42:01.475 --> 00:42:02.755
<v Speaker 4>memory consumption,

00:42:05.635 --> 00:42:07.795
<v Speaker 4>but it's about memory, not CPU.

00:42:08.995 --> 00:42:11.510
<v Speaker 4>So to just give you

00:42:13.110 --> 00:42:14.470
<v Speaker 4>another idea,

00:42:14.950 --> 00:42:17.590
<v Speaker 4>let's say if I use the

00:42:23.110 --> 00:42:24.630
<v Speaker 4>It's time. V, I think.

00:42:30.765 --> 00:42:31.405
<v Speaker 4>So

00:42:31.645 --> 00:42:32.365
<v Speaker 4>oh,

00:42:32.605 --> 00:42:34.765
<v Speaker 4>okay. Now you have to change that UUID

00:42:34.765 --> 00:42:35.405
<v Speaker 2>again.

00:42:35.645 --> 00:42:36.045
<v Speaker 4>Yeah.

00:42:42.930 --> 00:42:43.890
<v Speaker 4>Oh, come on.

00:42:50.130 --> 00:42:51.970
<v Speaker 4>Okay. So I will run

00:42:52.210 --> 00:42:52.930
<v Speaker 4>Chrome

00:42:53.170 --> 00:42:54.050
<v Speaker 4>on it.

00:42:54.210 --> 00:42:56.690
<v Speaker 4>Oh, yeah. I could reduce the number of

00:42:57.305 --> 00:42:58.025
<v Speaker 4>loops,

00:42:58.825 --> 00:43:00.185
<v Speaker 4>not the loop but

00:43:10.820 --> 00:43:11.620
<v Speaker 4>In fact,

00:43:12.020 --> 00:43:13.060
<v Speaker 4>so here

00:43:13.060 --> 00:43:14.660
<v Speaker 4>we can see,

00:43:15.940 --> 00:43:18.420
<v Speaker 4>okay, we use something like

00:43:18.660 --> 00:43:19.700
<v Speaker 4>200

00:43:20.420 --> 00:43:21.460
<v Speaker 4>gigabytes

00:43:21.940 --> 00:43:23.940
<v Speaker 4>of memory at maximum.

00:43:26.555 --> 00:43:27.355
<v Speaker 4>And

00:43:27.675 --> 00:43:29.435
<v Speaker 4>if I run

00:43:29.675 --> 00:43:30.875
<v Speaker 4>LightPanda

00:43:32.474 --> 00:43:34.235
<v Speaker 4>Oh, sorry. I have to

00:43:34.875 --> 00:43:36.075
<v Speaker 4>use the

00:43:36.474 --> 00:43:38.474
<v Speaker 4>user

00:43:37.710 --> 00:43:38.510
<v Speaker 4>in

00:43:38.990 --> 00:43:39.710
<v Speaker 4>time

00:43:39.790 --> 00:43:40.670
<v Speaker 4>today.

00:43:52.349 --> 00:43:52.990
<v Speaker 4>I was,

00:43:53.685 --> 00:43:54.885
<v Speaker 4>yeah, it was

00:43:55.445 --> 00:43:56.805
<v Speaker 4>bigger here,

00:43:58.005 --> 00:43:59.285
<v Speaker 4>so we have,

00:44:00.965 --> 00:44:03.205
<v Speaker 4>okay, 60 megabytes

00:44:03.205 --> 00:44:05.045
<v Speaker 4>in this case. But we have,

00:44:08.680 --> 00:44:10.680
<v Speaker 4>in fact, the most of them

00:44:11.480 --> 00:44:12.680
<v Speaker 4>Is that correct?

00:44:13.000 --> 00:44:13.640
<v Speaker 4>No.

00:44:14.600 --> 00:44:16.840
<v Speaker 4>What are We introduced a new

00:44:17.640 --> 00:44:20.280
<v Speaker 4>options. I will find it exactly.

00:44:21.000 --> 00:44:21.640
<v Speaker 4>But

00:44:23.145 --> 00:44:23.785
<v Speaker 4>we

00:44:24.105 --> 00:44:25.145
<v Speaker 4>are reusing

00:44:25.465 --> 00:44:26.905
<v Speaker 4>currently the same,

00:44:27.705 --> 00:44:28.345
<v Speaker 4>well,

00:44:29.225 --> 00:44:32.025
<v Speaker 4>in V eight, you can start a V

00:44:32.025 --> 00:44:35.065
<v Speaker 4>eight engine and then you can create isolates

00:44:35.145 --> 00:44:35.865
<v Speaker 4>to

00:44:36.470 --> 00:44:37.990
<v Speaker 4>run code on

00:44:38.150 --> 00:44:40.950
<v Speaker 4>isolation into the V eight engine. So

00:44:41.270 --> 00:44:42.230
<v Speaker 4>currently we

00:44:43.109 --> 00:44:43.830
<v Speaker 4>changed

00:44:44.630 --> 00:44:45.270
<v Speaker 4>a

00:44:45.510 --> 00:44:46.310
<v Speaker 4>bit our

00:44:46.630 --> 00:44:48.070
<v Speaker 4>architecture

00:44:48.150 --> 00:44:50.505
<v Speaker 4>recently to reuse

00:44:50.505 --> 00:44:51.465
<v Speaker 4>the same

00:44:51.944 --> 00:44:54.425
<v Speaker 4>V eight engine started with

00:44:54.665 --> 00:44:58.985
<v Speaker 4>the browser, but using a new isolate per

00:44:59.065 --> 00:45:00.585
<v Speaker 4>page we are navigating.

00:45:02.280 --> 00:45:04.120
<v Speaker 4>And by default,

00:45:04.200 --> 00:45:05.960
<v Speaker 4>for now, we don't

00:45:07.160 --> 00:45:07.960
<v Speaker 4>run

00:45:08.040 --> 00:45:08.760
<v Speaker 4>the

00:45:09.480 --> 00:45:11.720
<v Speaker 4>garbage collector into the

00:45:14.840 --> 00:45:16.920
<v Speaker 4>Well, by default, we don't

00:45:17.160 --> 00:45:19.405
<v Speaker 4>give an option to the V eight to

00:45:19.405 --> 00:45:22.285
<v Speaker 4>run the garbage collector. And by

00:45:22.845 --> 00:45:23.805
<v Speaker 4>enabling

00:45:24.285 --> 00:45:25.805
<v Speaker 4>GC hints,

00:45:28.204 --> 00:45:29.645
<v Speaker 4>we are saying to

00:45:30.365 --> 00:45:31.085
<v Speaker 4>V eight

00:45:32.390 --> 00:45:33.910
<v Speaker 4>when we change the pages,

00:45:35.350 --> 00:45:38.150
<v Speaker 4>it could run Garbage Collector to save

00:45:38.870 --> 00:45:40.870
<v Speaker 4>memory. And so if

00:45:40.870 --> 00:45:42.790
<v Speaker 4>I will run the same tests

00:45:43.110 --> 00:45:44.150
<v Speaker 4>with this option,

00:45:52.115 --> 00:45:54.355
<v Speaker 4>It's a bit it could be a bit

00:45:54.355 --> 00:45:55.315
<v Speaker 4>slower,

00:45:55.954 --> 00:45:57.875
<v Speaker 4>but yes, you save

00:45:58.035 --> 00:45:58.915
<v Speaker 4>more

00:45:59.075 --> 00:45:59.875
<v Speaker 4>memory

00:46:00.195 --> 00:46:01.570
<v Speaker 4>this way. So

00:46:01.809 --> 00:46:03.650
<v Speaker 4>we were 200

00:46:03.650 --> 00:46:05.330
<v Speaker 4>megabytes using

00:46:06.210 --> 00:46:06.850
<v Speaker 4>Chrome.

00:46:07.890 --> 00:46:09.410
<v Speaker 4>And with this

00:46:09.809 --> 00:46:10.849
<v Speaker 4>gcints

00:46:10.849 --> 00:46:11.650
<v Speaker 4>options,

00:46:11.730 --> 00:46:13.569
<v Speaker 4>you are something like 21,

00:46:14.005 --> 00:46:17.125
<v Speaker 4>20 two megabytes with LightBandA.

00:46:17.125 --> 00:46:17.685
<v Speaker 4>So,

00:46:19.925 --> 00:46:20.565
<v Speaker 4>yeah,

00:46:20.965 --> 00:46:22.725
<v Speaker 4>But it's not CPU

00:46:22.885 --> 00:46:23.605
<v Speaker 4>usage.

00:46:24.405 --> 00:46:25.685
<v Speaker 4>I don't

00:46:26.085 --> 00:46:27.205
<v Speaker 4>really know

00:46:28.660 --> 00:46:30.180
<v Speaker 4>the difference between

00:46:30.340 --> 00:46:32.020
<v Speaker 4>LightBandA and

00:46:32.340 --> 00:46:34.020
<v Speaker 4>Chrome in CPU usage.

00:46:36.740 --> 00:46:39.700
<v Speaker 4>Since we are doing less work, I hope

00:46:39.700 --> 00:46:40.980
<v Speaker 4>or I expect

00:46:41.380 --> 00:46:44.420
<v Speaker 4>we use less CPU

00:46:44.225 --> 00:46:45.345
<v Speaker 4>but I

00:46:45.345 --> 00:46:46.865
<v Speaker 4>have no proof actually.

00:46:48.385 --> 00:46:49.105
<v Speaker 2>Nice.

00:46:49.585 --> 00:46:52.305
<v Speaker 2>Well, doctor seems happy with that at least.

00:46:53.105 --> 00:46:54.465
<v Speaker 2>Glad we could help.

00:46:55.105 --> 00:46:55.905
<v Speaker 2>Now, obviously,

00:46:56.610 --> 00:46:59.090
<v Speaker 2>you know, you're very diplomatically said here that,

00:46:59.090 --> 00:47:01.250
<v Speaker 2>you know, Chromium is different. It's doing a

00:47:01.250 --> 00:47:03.570
<v Speaker 2>whole lot more. LatePanda is very opinionated on

00:47:03.570 --> 00:47:05.250
<v Speaker 2>on what it's trying to do. So maybe

00:47:05.250 --> 00:47:07.170
<v Speaker 2>we could help people understand

00:47:07.490 --> 00:47:09.730
<v Speaker 2>the specific use cases when to reach for

00:47:09.730 --> 00:47:13.625
<v Speaker 2>LatePanda over using something like Chromium. I'm

00:47:13.625 --> 00:47:14.665
<v Speaker 2>assuming, you know,

00:47:16.185 --> 00:47:18.345
<v Speaker 2>this is aimed at front end developers built

00:47:18.345 --> 00:47:20.825
<v Speaker 2>in React applications and Vue applications. What's their

00:47:20.825 --> 00:47:23.385
<v Speaker 2>use cases? There's also the data collection sites

00:47:23.385 --> 00:47:25.545
<v Speaker 2>and OpenAI and AI agents and all this.

00:47:25.545 --> 00:47:28.530
<v Speaker 2>Like, When should people go for LightPanda?

00:47:30.609 --> 00:47:31.810
<v Speaker 4>When it works?

00:47:32.529 --> 00:47:33.170
<v Speaker 4>Well,

00:47:34.690 --> 00:47:36.770
<v Speaker 4>I want to show that

00:47:37.329 --> 00:47:40.369
<v Speaker 4>after I think. Yeah, I think, well, the

00:47:40.369 --> 00:47:43.234
<v Speaker 4>first question is if you need

00:47:43.714 --> 00:47:45.315
<v Speaker 4>visual rendering

00:47:45.315 --> 00:47:46.755
<v Speaker 4>or graphical rendering,

00:47:47.234 --> 00:47:49.555
<v Speaker 4>of course, you can't use LightPanda at all.

00:47:49.555 --> 00:47:51.795
<v Speaker 4>So if you need to do screenshots,

00:47:51.795 --> 00:47:53.875
<v Speaker 4>PDF of your page, of things like that,

00:47:55.400 --> 00:47:57.640
<v Speaker 4>It will not work with LightBandA.

00:48:00.120 --> 00:48:01.400
<v Speaker 4>And then,

00:48:03.160 --> 00:48:03.960
<v Speaker 4>theoretically,

00:48:04.040 --> 00:48:05.480
<v Speaker 4>in ideal world,

00:48:06.645 --> 00:48:09.045
<v Speaker 4>everything else will be okay.

00:48:09.125 --> 00:48:10.725
<v Speaker 4>Well, no, sorry.

00:48:11.605 --> 00:48:13.685
<v Speaker 4>The other point is if

00:48:15.445 --> 00:48:16.805
<v Speaker 4>you have issues with,

00:48:17.045 --> 00:48:17.925
<v Speaker 4>let's say,

00:48:18.325 --> 00:48:19.445
<v Speaker 4>fingerprinting,

00:48:19.765 --> 00:48:20.405
<v Speaker 4>things like that,

00:48:21.400 --> 00:48:23.880
<v Speaker 4>I think currently LightPanda

00:48:24.280 --> 00:48:26.440
<v Speaker 4>will not help you at all because

00:48:26.840 --> 00:48:28.680
<v Speaker 4>we are a different browser and we are

00:48:28.680 --> 00:48:30.760
<v Speaker 4>easy to fingerprint differently.

00:48:31.480 --> 00:48:32.040
<v Speaker 4>So

00:48:32.440 --> 00:48:35.320
<v Speaker 4>we'll be detected immediately. So if

00:48:35.855 --> 00:48:38.734
<v Speaker 4>you are in this use case, you

00:48:39.055 --> 00:48:41.375
<v Speaker 4>are better using right now

00:48:41.694 --> 00:48:42.415
<v Speaker 4>Chrome.

00:48:44.335 --> 00:48:44.895
<v Speaker 4>And

00:48:46.494 --> 00:48:48.734
<v Speaker 4>for the other use case, theoretically,

00:48:49.454 --> 00:48:52.220
<v Speaker 4>you could use LightPanda for everything else.

00:48:53.020 --> 00:48:53.580
<v Speaker 4>But

00:48:54.780 --> 00:48:57.180
<v Speaker 4>today is a bit early,

00:48:57.260 --> 00:48:57.980
<v Speaker 4>I think,

00:48:59.099 --> 00:48:59.740
<v Speaker 4>because

00:49:00.460 --> 00:49:01.900
<v Speaker 4>our main challenge actually

00:49:02.300 --> 00:49:04.460
<v Speaker 4>Well, we have many challenges,

00:49:04.540 --> 00:49:08.035
<v Speaker 4>but one of the main challenge is to

00:49:08.195 --> 00:49:10.515
<v Speaker 4>implement all the web APIs

00:49:12.035 --> 00:49:14.435
<v Speaker 4>required to run JavaScript

00:49:14.915 --> 00:49:16.595
<v Speaker 4>around the web.

00:49:18.915 --> 00:49:21.029
<v Speaker 4>And currently, we don't have all the support

00:49:21.029 --> 00:49:23.670
<v Speaker 4>of all of this, of course, but we

00:49:23.670 --> 00:49:25.430
<v Speaker 4>try to improve it every day.

00:49:26.549 --> 00:49:29.430
<v Speaker 4>So depending of the use case, I would

00:49:29.430 --> 00:49:30.470
<v Speaker 4>suggest you to

00:49:31.145 --> 00:49:32.905
<v Speaker 4>give a try to LightPanda,

00:49:32.905 --> 00:49:35.225
<v Speaker 4>see if it work in your case.

00:49:36.585 --> 00:49:38.505
<v Speaker 4>And if it is

00:49:38.744 --> 00:49:39.385
<v Speaker 4>good,

00:49:39.704 --> 00:49:40.905
<v Speaker 4>you use it. But

00:49:41.305 --> 00:49:44.425
<v Speaker 4>in other case, maybe you should retry later.

00:49:45.625 --> 00:49:47.540
<v Speaker 4>That's the point, yeah, I think.

00:49:49.220 --> 00:49:52.580
<v Speaker 2>Yeah. Does V eight support WebAssembly or is

00:49:52.580 --> 00:49:53.940
<v Speaker 2>that something that you would have to build

00:49:53.940 --> 00:49:55.780
<v Speaker 2>separately into your browser?

00:49:56.260 --> 00:49:58.260
<v Speaker 4>You mean executing WebAssembly?

00:49:58.500 --> 00:50:00.180
<v Speaker 2>Yeah. Is that a V eight concern or

00:50:00.180 --> 00:50:00.900
<v Speaker 2>is that something else?

00:50:01.685 --> 00:50:02.245
<v Speaker 4>Well,

00:50:02.565 --> 00:50:03.365
<v Speaker 4>V eight,

00:50:03.685 --> 00:50:05.685
<v Speaker 4>as far as I know, yes, we can

00:50:05.685 --> 00:50:07.525
<v Speaker 4>execute it directly into

00:50:07.605 --> 00:50:10.885
<v Speaker 4>V eight, but we have to bind correctly.

00:50:13.605 --> 00:50:14.725
<v Speaker 4>Let's say if

00:50:15.990 --> 00:50:17.590
<v Speaker 4>currently if a web page

00:50:18.630 --> 00:50:21.030
<v Speaker 4>offers a WebAssembly script,

00:50:22.870 --> 00:50:24.150
<v Speaker 4>we will have to

00:50:25.110 --> 00:50:27.670
<v Speaker 4>just bind

00:50:28.095 --> 00:50:30.494
<v Speaker 4>the source to execute it on the VA.

00:50:30.494 --> 00:50:31.775
<v Speaker 4>That's not the case actually.

00:50:34.255 --> 00:50:34.895
<v Speaker 4>But

00:50:35.295 --> 00:50:37.855
<v Speaker 4>I think it's not hard to do.

00:50:38.335 --> 00:50:39.295
<v Speaker 4>I hope so.

00:50:41.900 --> 00:50:43.260
<v Speaker 2>Alright. So

00:50:43.580 --> 00:50:45.740
<v Speaker 2>before I I throw some more questions at

00:50:45.740 --> 00:50:47.260
<v Speaker 2>you, was there anything else you wanted to

00:50:47.260 --> 00:50:51.260
<v Speaker 2>show? Oh, yeah. Just well, an example of,

00:50:51.900 --> 00:50:53.340
<v Speaker 4>well, a real

00:50:53.994 --> 00:50:54.875
<v Speaker 4>world

00:50:55.355 --> 00:50:56.635
<v Speaker 4>things, let's say.

00:50:57.195 --> 00:50:57.755
<v Speaker 4>So

00:50:59.355 --> 00:51:01.275
<v Speaker 4>what I wanted to show you. Oh, yeah.

00:51:01.675 --> 00:51:04.395
<v Speaker 4>For example, if you are trying to fetch

00:51:05.820 --> 00:51:07.740
<v Speaker 4>a page, let's say, if you want if

00:51:07.740 --> 00:51:09.900
<v Speaker 4>you want to use a DuckDuckGo to search

00:51:09.900 --> 00:51:10.620
<v Speaker 4>something

00:51:11.980 --> 00:51:13.580
<v Speaker 4>like Panda, for example.

00:51:14.700 --> 00:51:16.700
<v Speaker 4>So if you're trying it

00:51:17.020 --> 00:51:17.820
<v Speaker 4>with

00:51:18.905 --> 00:51:20.425
<v Speaker 4>the browser right now,

00:51:32.630 --> 00:51:33.510
<v Speaker 4>h

00:51:33.510 --> 00:51:34.310
<v Speaker 4>t

00:51:37.030 --> 00:51:37.990
<v Speaker 4>m l.

00:51:41.750 --> 00:51:44.230
<v Speaker 4>So here is an example of

00:51:44.630 --> 00:51:45.590
<v Speaker 4>things that could,

00:51:46.345 --> 00:51:47.785
<v Speaker 4>that goes wrong.

00:51:49.465 --> 00:51:51.305
<v Speaker 4>Here, for example, we have

00:51:52.745 --> 00:51:54.665
<v Speaker 4>a JavaScript failing

00:51:54.825 --> 00:51:56.905
<v Speaker 4>due to some reason.

00:51:56.905 --> 00:51:59.305
<v Speaker 4>I don't know exactly. Here we have another

00:51:59.305 --> 00:52:01.785
<v Speaker 4>one which fails because

00:52:02.860 --> 00:52:04.060
<v Speaker 4>match media

00:52:04.700 --> 00:52:07.100
<v Speaker 4>doesn't exist in our browser.

00:52:07.420 --> 00:52:10.060
<v Speaker 4>So here is ESMOBILE.

00:52:10.060 --> 00:52:10.540
<v Speaker 4>So

00:52:11.020 --> 00:52:12.060
<v Speaker 4>depending on the

00:52:12.300 --> 00:52:13.260
<v Speaker 4>JavaScript,

00:52:13.740 --> 00:52:15.340
<v Speaker 4>at the first issue,

00:52:15.340 --> 00:52:17.325
<v Speaker 4>it will stop executing

00:52:19.005 --> 00:52:20.285
<v Speaker 4>with an error.

00:52:20.685 --> 00:52:23.005
<v Speaker 4>So here you can see that in real

00:52:23.005 --> 00:52:24.845
<v Speaker 4>world, we are missing

00:52:25.645 --> 00:52:27.485
<v Speaker 4>a lot of web APIs, in fact.

00:52:28.809 --> 00:52:30.890
<v Speaker 4>But depending of data

00:52:31.609 --> 00:52:33.529
<v Speaker 4>you want or what you want to do

00:52:33.529 --> 00:52:34.970
<v Speaker 4>and depending of the,

00:52:35.930 --> 00:52:36.810
<v Speaker 4>let's say,

00:52:37.930 --> 00:52:38.490
<v Speaker 4>the

00:52:38.809 --> 00:52:41.690
<v Speaker 4>final results, it could be an issue or

00:52:41.690 --> 00:52:42.890
<v Speaker 4>not. In this case,

00:52:43.775 --> 00:52:45.215
<v Speaker 4>I think it's an issue.

00:52:46.015 --> 00:52:48.655
<v Speaker 4>Let's say the result in the browser. Let's

00:52:48.655 --> 00:52:49.615
<v Speaker 4>see the result.

00:52:51.295 --> 00:52:53.135
<v Speaker 4>So

00:52:55.455 --> 00:52:57.615
<v Speaker 4>here we can see we have nothing at

00:52:57.615 --> 00:52:57.855
<v Speaker 4>all.

00:53:00.160 --> 00:53:02.800
<v Speaker 4>What we have in the Nothing? That's where?

00:53:02.800 --> 00:53:03.440
<v Speaker 4>Oh

00:53:03.600 --> 00:53:06.240
<v Speaker 4>no, sorry. I forgot the option to jump

00:53:06.240 --> 00:53:07.520
<v Speaker 4>the page, usually.

00:53:09.120 --> 00:53:11.200
<v Speaker 2>Would explain the nothing. Yeah.

00:53:13.285 --> 00:53:13.525
<v Speaker 4>But

00:53:15.845 --> 00:53:16.565
<v Speaker 4>oh.

00:53:16.965 --> 00:53:17.765
<v Speaker 4>Oh, yeah.

00:53:18.005 --> 00:53:18.645
<v Speaker 4>Okay.

00:53:19.045 --> 00:53:22.325
<v Speaker 4>Okay. So it's we have not such more.

00:53:23.205 --> 00:53:24.805
<v Speaker 4>So we have only the

00:53:25.050 --> 00:53:28.250
<v Speaker 4>we have only the, yeah, basic HTML, I

00:53:28.250 --> 00:53:29.050
<v Speaker 4>don't know what.

00:53:29.770 --> 00:53:32.970
<v Speaker 4>And something interesting could be to compare which

00:53:32.970 --> 00:53:35.530
<v Speaker 4>with curl if we, let's say,

00:53:36.010 --> 00:53:37.450
<v Speaker 4>if we just have

00:53:37.974 --> 00:53:39.335
<v Speaker 4>the initial

00:53:40.295 --> 00:53:43.015
<v Speaker 4>HTML of if we have some difference. That's

00:53:43.015 --> 00:53:44.615
<v Speaker 4>that's not the point here.

00:53:44.935 --> 00:53:46.855
<v Speaker 4>So we did the code. It will not

00:53:46.855 --> 00:53:49.255
<v Speaker 4>work. I know that already that with Google,

00:53:49.255 --> 00:53:49.815
<v Speaker 4>currently,

00:53:50.055 --> 00:53:51.255
<v Speaker 4>it will not work too.

00:53:52.450 --> 00:53:55.010
<v Speaker 4>But I try with Bing.

00:54:01.890 --> 00:54:02.530
<v Speaker 4>And

00:54:04.770 --> 00:54:07.490
<v Speaker 4>Oh, I have to

00:54:06.714 --> 00:54:08.955
<v Speaker 4>use the Oh, not exactly.

00:54:09.915 --> 00:54:11.755
<v Speaker 4>I didn't have to use

00:54:12.075 --> 00:54:13.195
<v Speaker 4>the whole

00:54:13.275 --> 00:54:14.155
<v Speaker 4>URL,

00:54:15.994 --> 00:54:18.474
<v Speaker 4>Because there is some idea. I don't know

00:54:18.474 --> 00:54:21.355
<v Speaker 4>why. Never mind. So, if I try this

00:54:21.355 --> 00:54:21.675
<v Speaker 4>one.

00:54:25.760 --> 00:54:27.600
<v Speaker 4>So, I think on the

00:54:29.360 --> 00:54:29.920
<v Speaker 4>thing.

00:54:32.080 --> 00:54:34.400
<v Speaker 4>Again, we can see we still have some

00:54:34.400 --> 00:54:35.200
<v Speaker 4>URLs

00:54:35.200 --> 00:54:37.200
<v Speaker 4>on one JavaScript,

00:54:37.280 --> 00:54:37.520
<v Speaker 4>maybe.

00:54:38.505 --> 00:54:39.865
<v Speaker 4>What the results of that?

00:54:53.450 --> 00:54:55.450
<v Speaker 4>Okay. In this case, I have

00:54:55.690 --> 00:54:57.930
<v Speaker 4>a result. And just to compare because

00:54:58.329 --> 00:55:01.770
<v Speaker 4>if results are just sent

00:55:03.609 --> 00:55:05.609
<v Speaker 4>immediately, I mean, without JavaScript,

00:55:05.925 --> 00:55:07.605
<v Speaker 4>this is not a real proof or not

00:55:07.605 --> 00:55:09.605
<v Speaker 4>really interesting comparing this curve.

00:55:11.605 --> 00:55:13.525
<v Speaker 2>I mean, there's some CSS there, right?

00:55:14.645 --> 00:55:15.125
<v Speaker 4>That's

00:55:16.485 --> 00:55:19.525
<v Speaker 4>Maybe there are Well, depending of how

00:55:19.790 --> 00:55:23.150
<v Speaker 4>the CSS is declared in the HTML, my

00:55:23.150 --> 00:55:24.430
<v Speaker 4>browser here,

00:55:24.750 --> 00:55:25.470
<v Speaker 4>Chrome,

00:55:26.349 --> 00:55:28.270
<v Speaker 4>can fetch it and apply it. But that's

00:55:28.270 --> 00:55:30.109
<v Speaker 4>a good point. Maybe it does the same

00:55:30.109 --> 00:55:31.710
<v Speaker 4>with the JavaScript also.

00:55:34.825 --> 00:55:36.345
<v Speaker 4>Let's see. Can I

00:55:37.224 --> 00:55:37.945
<v Speaker 4>just

00:55:38.664 --> 00:55:39.785
<v Speaker 4>disable

00:55:41.144 --> 00:55:42.904
<v Speaker 4>JavaScript execution here?

00:55:45.309 --> 00:55:46.270
<v Speaker 4>Where is it?

00:55:49.150 --> 00:55:49.710
<v Speaker 4>Let me

00:55:52.109 --> 00:55:52.910
<v Speaker 4>I

00:55:52.910 --> 00:55:55.150
<v Speaker 4>know where is it in Firefox,

00:55:55.230 --> 00:55:56.030
<v Speaker 4>but not

00:55:56.990 --> 00:55:58.190
<v Speaker 4>in Chrome, actually.

00:56:04.525 --> 00:56:06.605
<v Speaker 4>Here, I can disable JavaScript.

00:56:06.685 --> 00:56:07.405
<v Speaker 4>Okay.

00:56:08.045 --> 00:56:08.685
<v Speaker 4>So

00:56:09.085 --> 00:56:12.125
<v Speaker 4>without JavaScript execution, I have some results.

00:56:13.180 --> 00:56:16.140
<v Speaker 4>If I do the same with curl

00:56:18.220 --> 00:56:19.020
<v Speaker 4>okay.

00:56:24.140 --> 00:56:25.580
<v Speaker 4>Nope. It's not

00:56:25.980 --> 00:56:27.100
<v Speaker 4>a good address.

00:56:32.745 --> 00:56:34.585
<v Speaker 4>Oh, I have results too. So

00:56:36.025 --> 00:56:38.825
<v Speaker 4>Okay, not interesting in fact. So yeah.

00:56:40.185 --> 00:56:43.065
<v Speaker 4>Okay, Bing just send back the results. That's

00:56:43.065 --> 00:56:43.545
<v Speaker 4>a good thing.

00:56:44.559 --> 00:56:45.440
<v Speaker 4>So yeah,

00:56:46.319 --> 00:56:49.040
<v Speaker 4>let's say that in real world, we

00:56:51.119 --> 00:56:52.560
<v Speaker 4>still have many,

00:56:53.680 --> 00:56:55.600
<v Speaker 4>well, web APIs to implement.

00:56:56.319 --> 00:56:59.035
<v Speaker 4>So you could have a lot of troubles

00:56:59.195 --> 00:57:02.635
<v Speaker 4>actually using LightPanda. It's not really ready right

00:57:02.635 --> 00:57:03.355
<v Speaker 4>now,

00:57:03.675 --> 00:57:06.875
<v Speaker 4>at least for most use cases. But in

00:57:06.875 --> 00:57:07.995
<v Speaker 4>some specifics,

00:57:08.155 --> 00:57:09.435
<v Speaker 4>it could work, in fact.

00:57:10.430 --> 00:57:13.470
<v Speaker 4>But we are working hard on it and

00:57:13.470 --> 00:57:15.790
<v Speaker 4>we are trying to, obviously,

00:57:16.750 --> 00:57:19.310
<v Speaker 4>improve that support to be able to

00:57:19.710 --> 00:57:21.869
<v Speaker 4>run more JavaScript and

00:57:23.984 --> 00:57:25.984
<v Speaker 4>having good results on more websites.

00:57:26.384 --> 00:57:27.505
<v Speaker 4>Are currently

00:57:28.545 --> 00:57:29.425
<v Speaker 4>integrating

00:57:30.224 --> 00:57:31.185
<v Speaker 4>the click.

00:57:31.345 --> 00:57:32.625
<v Speaker 4>And just to be

00:57:33.105 --> 00:57:34.464
<v Speaker 4>clear on that also,

00:57:35.345 --> 00:57:37.744
<v Speaker 4>there are both sides of implementation

00:57:37.744 --> 00:57:39.920
<v Speaker 4>we have to do. On JavaScript

00:57:39.920 --> 00:57:43.200
<v Speaker 4>side, we have to implement web APIs

00:57:43.279 --> 00:57:45.599
<v Speaker 4>from the browser. That's one big

00:57:46.880 --> 00:57:49.200
<v Speaker 4>challenge on one side. But on the other

00:57:49.200 --> 00:57:50.799
<v Speaker 4>side, we have also to

00:57:51.734 --> 00:57:52.615
<v Speaker 4>implement

00:57:52.775 --> 00:57:53.734
<v Speaker 4>CDP

00:57:54.615 --> 00:57:55.575
<v Speaker 4>commands.

00:57:57.335 --> 00:57:58.295
<v Speaker 4>We talked about

00:57:58.535 --> 00:58:01.734
<v Speaker 4>PrevWrite at the beginning, and that's also where

00:58:01.734 --> 00:58:03.654
<v Speaker 4>we have to improve things to be more

00:58:03.654 --> 00:58:06.500
<v Speaker 4>compatible with clients, depending on how they are

00:58:06.500 --> 00:58:07.220
<v Speaker 4>using

00:58:07.859 --> 00:58:09.380
<v Speaker 4>CDP protocol actually.

00:58:12.020 --> 00:58:13.300
<v Speaker 2>When it comes to the

00:58:14.020 --> 00:58:15.700
<v Speaker 2>hold on. I'll move his back over.

00:58:16.100 --> 00:58:18.660
<v Speaker 4>Yeah. So when it comes to those APIs,

00:58:18.660 --> 00:58:21.285
<v Speaker 2>right? You know, let's assume I'm testing

00:58:22.165 --> 00:58:24.005
<v Speaker 5>the Rawkode Academy platform,

00:58:24.085 --> 00:58:26.565
<v Speaker 5>and I wanna do some sort of logins

00:58:26.565 --> 00:58:29.205
<v Speaker 5>there. Do I have access to local storage,

00:58:29.205 --> 00:58:30.405
<v Speaker 5>the web SQL?

00:58:31.045 --> 00:58:33.605
<v Speaker 5>How much of that works right now in

00:58:33.605 --> 00:58:33.765
<v Speaker 5>the?

00:58:39.140 --> 00:58:40.500
<v Speaker 4>How much, I don't know.

00:58:42.180 --> 00:58:43.300
<v Speaker 4>We have some,

00:58:43.460 --> 00:58:46.580
<v Speaker 4>let's say, we have basic implementation of web

00:58:46.580 --> 00:58:47.619
<v Speaker 4>storage actually,

00:58:49.835 --> 00:58:52.155
<v Speaker 4>but it's hard to give you

00:58:52.954 --> 00:58:54.155
<v Speaker 4>a number. We

00:58:54.714 --> 00:58:55.675
<v Speaker 4>are using

00:58:56.954 --> 00:58:58.795
<v Speaker 4>the web platform test,

00:58:59.115 --> 00:58:59.915
<v Speaker 4>which is

00:59:01.515 --> 00:59:02.234
<v Speaker 4>common

00:59:02.530 --> 00:59:04.530
<v Speaker 4>HTML tests to

00:59:05.810 --> 00:59:08.850
<v Speaker 4>run on browsers. That's something which is standardized

00:59:09.090 --> 00:59:09.810
<v Speaker 4>and

00:59:09.970 --> 00:59:12.610
<v Speaker 4>we are trying to run the browser against

00:59:12.610 --> 00:59:14.610
<v Speaker 4>this test. So we are tracking

00:59:15.170 --> 00:59:16.130
<v Speaker 4>improvement on it,

00:59:17.715 --> 00:59:19.635
<v Speaker 4>But I don't have real

00:59:20.995 --> 00:59:23.315
<v Speaker 4>numbers to do that to answer in fact.

00:59:23.315 --> 00:59:23.715
<v Speaker 4>Okay.

00:59:25.075 --> 00:59:27.075
<v Speaker 2>I mean, think this is still a very

00:59:27.075 --> 00:59:29.235
<v Speaker 2>young project. It's an exciting project. I think

00:59:29.235 --> 00:59:31.240
<v Speaker 2>the value proposition is clear to the people

00:59:31.240 --> 00:59:32.680
<v Speaker 2>watching it, and it's a good way to

00:59:32.680 --> 00:59:34.839
<v Speaker 2>get involved if you've never written any Zig

00:59:34.839 --> 00:59:37.000
<v Speaker 2>before and you want to. Go check out

00:59:37.000 --> 00:59:39.640
<v Speaker 2>the repository and look for issues and and

00:59:39.640 --> 00:59:40.839
<v Speaker 2>and get committed.

00:59:41.000 --> 00:59:43.400
<v Speaker 2>But as we kinda mentioned earlier, this is

00:59:43.400 --> 00:59:46.115
<v Speaker 2>an an open source project. Right? And unfortunately,

00:59:46.115 --> 00:59:48.675
<v Speaker 2>money doesn't grow on trees. Open source has

00:59:48.675 --> 00:59:49.795
<v Speaker 2>to be sustainable.

00:59:49.795 --> 00:59:50.755
<v Speaker 2>I'm assuming

00:59:51.075 --> 00:59:53.075
<v Speaker 2>you just have a company that you're you're

00:59:53.075 --> 00:59:55.234
<v Speaker 2>trying to make successful with this product. So

00:59:55.234 --> 00:59:56.435
<v Speaker 2>maybe you can share a little bit of

00:59:56.435 --> 00:59:57.155
<v Speaker 2>light into

00:59:57.560 --> 01:00:00.440
<v Speaker 2>the roadmap for Light Panda as an open

01:00:00.440 --> 01:00:02.280
<v Speaker 2>source project, but also where you are taking

01:00:02.280 --> 01:00:04.200
<v Speaker 2>this as a company in order to be

01:00:04.200 --> 01:00:06.440
<v Speaker 2>a sustainable and long term business.

01:00:07.640 --> 01:00:08.280
<v Speaker 3>Yeah.

01:00:08.440 --> 01:00:08.920
<v Speaker 3>So

01:00:09.735 --> 01:00:13.095
<v Speaker 3>as you said, it's still super young. Our

01:00:13.095 --> 01:00:15.015
<v Speaker 3>big focus at the moment is

01:00:15.175 --> 01:00:16.775
<v Speaker 3>getting the browser to a point where it

01:00:16.775 --> 01:00:17.735
<v Speaker 3>can be used

01:00:17.975 --> 01:00:18.935
<v Speaker 3>reliably

01:00:18.935 --> 01:00:19.975
<v Speaker 3>in production.

01:00:20.215 --> 01:00:20.775
<v Speaker 3>And

01:00:21.815 --> 01:00:23.415
<v Speaker 3>we

01:00:23.820 --> 01:00:25.020
<v Speaker 3>we have a couple of

01:00:25.340 --> 01:00:27.900
<v Speaker 3>obvious ways that we'll build the business around

01:00:27.900 --> 01:00:28.540
<v Speaker 3>that.

01:00:29.900 --> 01:00:32.540
<v Speaker 3>Main one is obviously a cloud office.

01:00:34.140 --> 01:00:35.980
<v Speaker 3>We want the people to be able to

01:00:35.980 --> 01:00:37.740
<v Speaker 3>host it themselves if they want to. And

01:00:37.740 --> 01:00:39.820
<v Speaker 3>that's why it's open source, but

01:00:40.244 --> 01:00:42.165
<v Speaker 3>that's like, know, the case for every

01:00:42.405 --> 01:00:43.685
<v Speaker 3>use case out there.

01:00:44.405 --> 01:00:46.645
<v Speaker 3>We do have a, that's in beta at

01:00:46.645 --> 01:00:48.645
<v Speaker 3>the moment and it runs on Chrome and

01:00:48.645 --> 01:00:50.164
<v Speaker 3>like pandas that you can sign up on

01:00:50.164 --> 01:00:50.964
<v Speaker 3>our website

01:00:51.570 --> 01:00:54.210
<v Speaker 3>get a test taken for that. And

01:00:54.450 --> 01:00:58.370
<v Speaker 3>then we're also thinking about how we can

01:00:59.250 --> 01:01:00.130
<v Speaker 3>build

01:01:00.690 --> 01:01:01.650
<v Speaker 3>native

01:01:01.810 --> 01:01:04.690
<v Speaker 3>AI features into the browser itself

01:01:05.945 --> 01:01:06.745
<v Speaker 3>to

01:01:08.505 --> 01:01:09.545
<v Speaker 3>enable,

01:01:10.665 --> 01:01:12.825
<v Speaker 3>for example, but this is just more of

01:01:12.825 --> 01:01:14.905
<v Speaker 3>an example to illustrate the point, but to

01:01:14.905 --> 01:01:17.145
<v Speaker 3>enable LLM's, for example, to

01:01:18.900 --> 01:01:20.099
<v Speaker 3>and there are there are a ton of

01:01:20.099 --> 01:01:21.780
<v Speaker 3>tools doing this kind of thing already, but

01:01:21.780 --> 01:01:24.500
<v Speaker 3>they're building on top of of Chrome.

01:01:24.819 --> 01:01:25.380
<v Speaker 3>So,

01:01:26.099 --> 01:01:28.660
<v Speaker 3>having a version of the browser, which can

01:01:29.619 --> 01:01:32.195
<v Speaker 3>kind of take that a step further because

01:01:32.195 --> 01:01:34.595
<v Speaker 3>we control the whole code base to enable

01:01:34.595 --> 01:01:35.315
<v Speaker 3>the

01:01:35.555 --> 01:01:37.555
<v Speaker 3>structure of the webpage, for example, to be

01:01:37.555 --> 01:01:38.915
<v Speaker 3>controlled by an LLM

01:01:39.555 --> 01:01:42.035
<v Speaker 3>deeper down the stack as it were.

01:01:43.650 --> 01:01:45.570
<v Speaker 3>And then that'd be like a a kind

01:01:45.570 --> 01:01:47.730
<v Speaker 3>of on premise version of the browser or

01:01:47.730 --> 01:01:49.410
<v Speaker 3>a premium version if you like.

01:01:51.650 --> 01:01:52.290
<v Speaker 2>Okay.

01:01:53.010 --> 01:01:55.250
<v Speaker 2>And the roadmap for open source, I'm assuming

01:01:55.535 --> 01:01:57.535
<v Speaker 2>your heads are just down focusing on that

01:01:57.535 --> 01:02:00.415
<v Speaker 2>web compatibility and those conformance tests. Right? Like

01:02:00.655 --> 01:02:02.575
<v Speaker 2>Yes. That seems to be the the main

01:02:02.575 --> 01:02:05.855
<v Speaker 2>objective. Right? Yeah. Yeah. Yes. It is definitively.

01:02:07.135 --> 01:02:08.255
<v Speaker 2>How big is your team?

01:02:09.630 --> 01:02:12.270
<v Speaker 3>We are six at the moment, but Six.

01:02:12.349 --> 01:02:14.670
<v Speaker 3>Growing growing pretty fast.

01:02:15.230 --> 01:02:17.550
<v Speaker 3>I the good news, I guess, is that

01:02:18.910 --> 01:02:20.510
<v Speaker 3>kind of conservatively,

01:02:20.510 --> 01:02:22.845
<v Speaker 3>I think a lot of the hardest work

01:02:22.845 --> 01:02:24.605
<v Speaker 3>is kind of behind us. So as you

01:02:24.605 --> 01:02:26.925
<v Speaker 3>say, it's kind of just heads down. We

01:02:26.925 --> 01:02:28.685
<v Speaker 3>know what needs doing and we're

01:02:28.925 --> 01:02:31.805
<v Speaker 3>doing it. So we're pretty optimistic.

01:02:32.525 --> 01:02:35.405
<v Speaker 3>And yeah, like any and all feedback from

01:02:35.405 --> 01:02:37.740
<v Speaker 3>the community is super valuable as well. It's

01:02:37.740 --> 01:02:39.900
<v Speaker 3>one of the huge benefits of it being

01:02:39.900 --> 01:02:42.060
<v Speaker 3>open source as we get to hear from

01:02:42.060 --> 01:02:44.300
<v Speaker 3>people about, you know, these random

01:02:44.700 --> 01:02:47.580
<v Speaker 3>cases that are actually working in production already.

01:02:48.460 --> 01:02:50.460
<v Speaker 3>There may be some that there's really not

01:02:50.460 --> 01:02:51.660
<v Speaker 3>that big of a lift for us at

01:02:51.660 --> 01:02:52.060
<v Speaker 3>this point.

01:02:53.825 --> 01:02:55.505
<v Speaker 2>Yeah. I'm I'm sure it won't be long

01:02:55.505 --> 01:02:58.145
<v Speaker 2>until someone is using the CDP and, like,

01:02:58.145 --> 01:03:00.305
<v Speaker 2>Panda to order their Domino's pizza. And that

01:03:00.305 --> 01:03:01.585
<v Speaker 2>seems to be one of the first things

01:03:01.585 --> 01:03:02.865
<v Speaker 2>that people like to hack on.

01:03:05.440 --> 01:03:08.160
<v Speaker 2>Awesome. Well, thank you so much for taking

01:03:08.160 --> 01:03:09.280
<v Speaker 2>time out of your day

01:03:09.600 --> 01:03:12.720
<v Speaker 2>for guiding us and sharing more about LightPanda

01:03:12.720 --> 01:03:14.640
<v Speaker 2>and even getting hands on and showing us

01:03:14.640 --> 01:03:16.400
<v Speaker 2>how it works. Is there anything else that

01:03:16.400 --> 01:03:17.760
<v Speaker 2>we haven't covered that you would like to

01:03:17.760 --> 01:03:19.360
<v Speaker 2>share with the audience before we wrap this

01:03:19.360 --> 01:03:19.520
<v Speaker 2>up?

01:03:22.095 --> 01:03:23.775
<v Speaker 3>I don't think so from my side. Thanks

01:03:23.775 --> 01:03:25.615
<v Speaker 3>so much for for having us and giving

01:03:25.615 --> 01:03:27.855
<v Speaker 3>us the platform.

01:03:29.135 --> 01:03:30.175
<v Speaker 4>Yeah. Yeah.

01:03:30.495 --> 01:03:31.535
<v Speaker 4>Thank you very much

01:03:31.935 --> 01:03:32.895
<v Speaker 4>for the invitation.

01:03:34.200 --> 01:03:36.359
<v Speaker 2>Alright. Well, thank you again to the people

01:03:36.359 --> 01:03:37.880
<v Speaker 2>that watched us. You know, go check out

01:03:37.880 --> 01:03:40.359
<v Speaker 2>the project, open issues, contribute where you can,

01:03:40.359 --> 01:03:41.720
<v Speaker 2>and let us know how you get on.

01:03:41.720 --> 01:03:43.640
<v Speaker 2>Feel free to drop your comments and questions

01:03:43.800 --> 01:03:45.400
<v Speaker 2>into the comment section, and we'll do our

01:03:45.400 --> 01:03:46.839
<v Speaker 2>best to answer them whenever we can.

01:03:48.045 --> 01:03:49.724
<v Speaker 2>Have a great day. Thank you again, and

01:03:49.724 --> 01:03:51.405
<v Speaker 2>I'll see you all soon. Until next time.

01:03:51.484 --> 01:03:52.365
<v Speaker 3>You. Bye. Bye bye.

01:05:06.045 --> 01:05:08.845
<v Speaker 1>You make this happen. Fill the stream with

01:05:08.845 --> 01:05:09.565
<v Speaker 1>light.

01:05:17.724 --> 01:05:20.525
<v Speaker 1>We dove in deep with LightPanda speed and

01:05:20.525 --> 01:05:20.924
<v Speaker 1>grace.

01:05:22.210 --> 01:05:25.650
<v Speaker 1>That ZigBilled browser finding its own space.

01:05:26.370 --> 01:05:27.890
<v Speaker 1>Saw how it works,

01:05:28.130 --> 01:05:30.130
<v Speaker 1>how fast it really flies.

01:05:31.410 --> 01:05:32.370
<v Speaker 1>Reflected

01:05:32.370 --> 01:05:34.770
<v Speaker 1>in our guests' insightful eyes.

01:05:35.570 --> 01:05:36.530
<v Speaker 1>They showed the way,

01:05:37.175 --> 01:05:39.255
<v Speaker 1>the future looking fast.

01:05:40.135 --> 01:05:41.255
<v Speaker 1>That inspiration

01:05:41.255 --> 01:05:43.575
<v Speaker 1>surely gone to last.

01:05:44.615 --> 01:05:46.695
<v Speaker 1>Yeah. The stream is over,

01:05:46.935 --> 01:05:48.535
<v Speaker 1>but the journey's not.

01:05:49.490 --> 01:05:51.170
<v Speaker 1>Subscribe and follow,

01:05:51.250 --> 01:05:52.930
<v Speaker 1>give it all you've got.

01:05:54.049 --> 01:05:56.690
<v Speaker 1>We'll be right back before you know it,

01:05:56.690 --> 01:05:57.250
<v Speaker 1>friend.

01:05:57.809 --> 01:05:59.490
<v Speaker 1>More tech adventures

01:05:59.490 --> 01:06:01.250
<v Speaker 1>that will never end.

01:06:02.465 --> 01:06:05.505
<v Speaker 1>So join us next time Same cool place

01:06:05.505 --> 01:06:06.145
<v Speaker 1>to be

01:06:06.865 --> 01:06:08.865
<v Speaker 1>Right here at Rawkode

01:06:08.865 --> 01:06:10.385
<v Speaker 1>Academy

01:06:11.025 --> 01:06:15.345
<v Speaker 1>Yeah Thanks, Pierre Thanks, Pierre And Katie And

01:06:15.300 --> 01:06:18.420
<v Speaker 1>Katie. And thank you watching. Thank you watching.

01:06:18.420 --> 01:06:20.180
<v Speaker 1>And we'll see you next

01:06:20.340 --> 01:06:21.220
<v Speaker 1>time.

01:06:21.860 --> 01:06:22.740
<v Speaker 1>Rawkode

01:06:22.740 --> 01:06:24.020
<v Speaker 1>signing off.

01:06:24.260 --> 01:06:25.700
<v Speaker 1>See you soon.

01:06:26.100 --> 01:06:27.460
<v Speaker 1>Keep learning.

01:06:28.500 --> 01:06:29.380
<v Speaker 1>Keep coding.
