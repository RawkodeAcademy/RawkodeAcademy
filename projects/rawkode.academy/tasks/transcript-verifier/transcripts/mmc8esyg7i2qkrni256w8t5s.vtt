WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: 461e4861-8efc-4a92-b223-0e1e9c90f96f
Created: 2025-04-29T12:15:48.304Z
Duration: 4212.9424
Channels: 1

00:01:51.815 --> 00:01:54.855
<v Speaker 0>Hello, and welcome back to the Rawkode Academy.

00:01:54.855 --> 00:01:56.535
<v Speaker 0>I am your host, David Flanagan, although you

00:01:56.535 --> 00:01:58.055
<v Speaker 0>may know me from across the Internet as

00:01:58.055 --> 00:02:00.055
<v Speaker 0>Rawkode and, of course, this channel.

00:02:00.670 --> 00:02:02.350
<v Speaker 0>It's been a while since we're streamed, you

00:02:02.350 --> 00:02:04.590
<v Speaker 0>know, a bit of an update. My office

00:02:04.590 --> 00:02:06.909
<v Speaker 0>burnt down in April, and I've had to

00:02:06.909 --> 00:02:10.349
<v Speaker 0>rebuild from scratch. So apologies for the lack

00:02:10.349 --> 00:02:13.069
<v Speaker 0>of amazing, hopefully amazing cloud native and

00:02:13.525 --> 00:02:14.485
<v Speaker 0>development

00:02:14.645 --> 00:02:17.285
<v Speaker 0>kind of content. And I'm really excited today

00:02:17.285 --> 00:02:18.085
<v Speaker 0>because

00:02:18.165 --> 00:02:20.005
<v Speaker 0>this is a tool that I have been

00:02:20.005 --> 00:02:21.685
<v Speaker 0>using for a little while now, and I've

00:02:21.685 --> 00:02:23.285
<v Speaker 0>started to go kind of all in within

00:02:23.285 --> 00:02:24.805
<v Speaker 0>my model repository

00:02:24.805 --> 00:02:28.245
<v Speaker 0>and using this to build out development environments

00:02:27.600 --> 00:02:29.680
<v Speaker 0>that are just a joy to work with.

00:02:30.000 --> 00:02:31.440
<v Speaker 0>And today, we are taking a look at

00:02:31.440 --> 00:02:32.320
<v Speaker 0>Devenv,

00:02:32.320 --> 00:02:34.320
<v Speaker 0>which is a Next based build tool that

00:02:34.320 --> 00:02:36.800
<v Speaker 0>provides a great development experience.

00:02:36.880 --> 00:02:38.480
<v Speaker 0>It's reproducible.

00:02:38.560 --> 00:02:40.640
<v Speaker 0>It's fast. And as I said, a pleasure

00:02:40.640 --> 00:02:42.725
<v Speaker 0>to work with. And to guide us on

00:02:42.725 --> 00:02:44.725
<v Speaker 0>our journey of understanding

00:02:44.725 --> 00:02:46.565
<v Speaker 0>Next and Devenv and all of the amazing

00:02:46.565 --> 00:02:47.845
<v Speaker 0>things we can do for that, I am

00:02:47.845 --> 00:02:51.285
<v Speaker 0>joined today by the Kashyx founder and maintainer

00:02:51.285 --> 00:02:52.645
<v Speaker 0>of the Devenv project,

00:02:52.885 --> 00:02:53.845
<v Speaker 0>Khozar.

00:02:53.845 --> 00:02:56.430
<v Speaker 0>Hey, man. How's it going? Hey. Hey. Thank

00:02:56.430 --> 00:02:58.350
<v Speaker 1>you so much for inviting me. I'm happy

00:02:58.350 --> 00:03:00.030
<v Speaker 1>to be here and to share

00:03:00.590 --> 00:03:01.390
<v Speaker 1>the journey

00:03:01.550 --> 00:03:03.390
<v Speaker 1>of what we've learned with Nicks.

00:03:03.790 --> 00:03:05.550
<v Speaker 0>No. I mean, thank you so much for

00:03:05.550 --> 00:03:07.790
<v Speaker 0>for joining me. I'm generally super

00:03:07.845 --> 00:03:10.405
<v Speaker 0>pumped, excited, although this is my excited face

00:03:10.405 --> 00:03:12.645
<v Speaker 0>in Scotland. But I'm super

00:03:12.965 --> 00:03:14.965
<v Speaker 0>excited to be diving into this today and

00:03:14.965 --> 00:03:16.805
<v Speaker 0>sharing it with the audience because I have

00:03:16.805 --> 00:03:19.365
<v Speaker 0>found that my life from a development environment

00:03:19.365 --> 00:03:21.549
<v Speaker 0>standpoint has just been lot simpler since adopting

00:03:21.549 --> 00:03:23.150
<v Speaker 0>this tool, and I wanna share that with

00:03:23.150 --> 00:03:25.870
<v Speaker 0>the audience as well as get history, context,

00:03:25.870 --> 00:03:27.790
<v Speaker 0>flavor, everything else that you can share about

00:03:27.790 --> 00:03:29.390
<v Speaker 0>your journey along the way.

00:03:30.030 --> 00:03:31.790
<v Speaker 0>So That that being said,

00:03:32.445 --> 00:03:34.205
<v Speaker 0>I'm gonna throw you under the bus and

00:03:34.205 --> 00:03:35.645
<v Speaker 0>say, why don't you just tell us a

00:03:35.645 --> 00:03:37.085
<v Speaker 0>little bit about you, what you've been up

00:03:37.085 --> 00:03:39.245
<v Speaker 0>to, and, you know, give us all the

00:03:39.245 --> 00:03:39.885
<v Speaker 0>details.

00:03:40.525 --> 00:03:41.245
<v Speaker 1>Alright.

00:03:41.325 --> 00:03:43.085
<v Speaker 1>Thank you so much. Yeah. So

00:03:44.285 --> 00:03:46.365
<v Speaker 1>let's see how long of an intro we

00:03:46.365 --> 00:03:47.405
<v Speaker 1>can do. So I've been

00:03:48.150 --> 00:03:49.909
<v Speaker 1>I think I've been part of the next

00:03:49.909 --> 00:03:52.390
<v Speaker 1>community for quite a while. It's been about

00:03:52.870 --> 00:03:54.310
<v Speaker 1>ten years now.

00:03:55.510 --> 00:03:58.790
<v Speaker 1>And before, I was doing just consulting and

00:03:58.790 --> 00:04:00.470
<v Speaker 1>a lot of Python and and stuff

00:04:00.895 --> 00:04:02.895
<v Speaker 1>and a lot of the frustration with packaging

00:04:02.895 --> 00:04:04.735
<v Speaker 1>let me and and I was a Gentry

00:04:04.735 --> 00:04:05.615
<v Speaker 1>user before.

00:04:06.175 --> 00:04:08.335
<v Speaker 1>Like, a lot of the frustration with you

00:04:08.335 --> 00:04:10.655
<v Speaker 1>know, all around has let me into Next

00:04:10.735 --> 00:04:11.935
<v Speaker 1>very early on.

00:04:13.055 --> 00:04:15.055
<v Speaker 1>And I've I've kind of never looked back,

00:04:15.055 --> 00:04:17.399
<v Speaker 1>and and, you know, the early days were

00:04:17.399 --> 00:04:18.920
<v Speaker 1>the early days, so there was a lot

00:04:18.920 --> 00:04:19.560
<v Speaker 1>to do.

00:04:20.520 --> 00:04:22.280
<v Speaker 1>But we've come really far in the in

00:04:22.280 --> 00:04:23.400
<v Speaker 1>the last ten years.

00:04:23.800 --> 00:04:25.000
<v Speaker 1>And then about, like,

00:04:25.640 --> 00:04:27.800
<v Speaker 1>I think, six years ago, I was

00:04:28.760 --> 00:04:30.520
<v Speaker 1>really happy and and really,

00:04:31.160 --> 00:04:33.535
<v Speaker 1>you know, delighted to work with.

00:04:34.255 --> 00:04:36.575
<v Speaker 1>That was my kind of first time consulting

00:04:36.575 --> 00:04:38.255
<v Speaker 1>gig where we were, like,

00:04:39.535 --> 00:04:41.615
<v Speaker 1>essentially using Hydra

00:04:41.855 --> 00:04:45.775
<v Speaker 1>to create these, like, huge matrix matrices of

00:04:46.440 --> 00:04:49.800
<v Speaker 1>different, like, kernels, different versions of software, and,

00:04:49.800 --> 00:04:50.280
<v Speaker 1>like,

00:04:50.680 --> 00:04:52.840
<v Speaker 1>running benchmarks with on,

00:04:52.840 --> 00:04:53.560
<v Speaker 1>like,

00:04:54.280 --> 00:04:57.240
<v Speaker 1>networking cards and drivers, like, specialized built for

00:04:57.240 --> 00:04:57.400
<v Speaker 1>them.

00:04:58.325 --> 00:05:00.805
<v Speaker 1>And then creating these, like, graphs of, like

00:05:00.965 --> 00:05:02.965
<v Speaker 1>you know, if you change the kernel version,

00:05:02.965 --> 00:05:05.525
<v Speaker 1>if you change the different software versions, like,

00:05:06.085 --> 00:05:08.805
<v Speaker 1>what how does that impact performance and stuff?

00:05:08.805 --> 00:05:10.245
<v Speaker 1>And it's just really nice because you can

00:05:10.245 --> 00:05:12.565
<v Speaker 1>kind of map through all the kernels, map

00:05:12.150 --> 00:05:14.070
<v Speaker 1>through all the different software versions, and kind

00:05:14.070 --> 00:05:15.590
<v Speaker 1>of generate derivations,

00:05:16.790 --> 00:05:18.790
<v Speaker 1>which are, like, the the builds of of

00:05:18.790 --> 00:05:20.550
<v Speaker 1>executing that benchmark.

00:05:21.590 --> 00:05:23.750
<v Speaker 1>So that was really nice first

00:05:23.830 --> 00:05:26.665
<v Speaker 1>gig. And then I after that, I worked

00:05:26.665 --> 00:05:28.585
<v Speaker 1>with IOHK as a DevOps lead,

00:05:29.465 --> 00:05:32.745
<v Speaker 1>intro like, introducing NICs into the whole process

00:05:32.745 --> 00:05:33.465
<v Speaker 1>there

00:05:33.865 --> 00:05:36.425
<v Speaker 1>of, like, building the blockchain, blah blah blah.

00:05:36.585 --> 00:05:39.785
<v Speaker 1>And then after that, I created CashX as

00:05:39.785 --> 00:05:41.910
<v Speaker 1>I saw that. Like, I wanted to do

00:05:41.910 --> 00:05:43.750
<v Speaker 1>a lot of NICs as part of IHK,

00:05:43.750 --> 00:05:45.910
<v Speaker 1>but, of course, that was not a priority

00:05:45.910 --> 00:05:47.669
<v Speaker 1>there, although we did a lot of great

00:05:47.669 --> 00:05:49.990
<v Speaker 1>work there on NICs. So then I started

00:05:49.990 --> 00:05:51.110
<v Speaker 1>cache x,

00:05:51.349 --> 00:05:53.270
<v Speaker 1>and then it's been about five years now,

00:05:53.270 --> 00:05:53.590
<v Speaker 1>I think,

00:05:54.975 --> 00:05:55.935
<v Speaker 1>building

00:05:56.415 --> 00:05:59.695
<v Speaker 1>first binary cache, then deployments, and and then,

00:05:59.695 --> 00:06:01.135
<v Speaker 1>like, a year and a half ago, we

00:06:01.135 --> 00:06:02.255
<v Speaker 1>started Devenv.

00:06:03.455 --> 00:06:06.015
<v Speaker 1>That's yeah. And a bunch of other stuff

00:06:06.015 --> 00:06:08.335
<v Speaker 1>like nix.dev was also our effort, which we

00:06:08.335 --> 00:06:10.015
<v Speaker 1>donated in the community

00:06:11.669 --> 00:06:14.150
<v Speaker 1>to improve the documentation in the next land

00:06:14.150 --> 00:06:15.510
<v Speaker 1>and and things like that.

00:06:16.229 --> 00:06:18.389
<v Speaker 1>Anyway, lots of things. I can dive into

00:06:18.389 --> 00:06:20.389
<v Speaker 1>any of them if you want. But Yeah.

00:06:20.389 --> 00:06:21.030
<v Speaker 0>Awesome.

00:06:21.750 --> 00:06:23.110
<v Speaker 0>Yeah. I think we'll start

00:06:23.474 --> 00:06:25.474
<v Speaker 0>with the question that I hear most when

00:06:25.474 --> 00:06:27.875
<v Speaker 0>I go to conferences and mention next or

00:06:27.875 --> 00:06:29.715
<v Speaker 0>anything like this, right, is that

00:06:30.514 --> 00:06:31.794
<v Speaker 0>there's a lot of

00:06:32.194 --> 00:06:32.995
<v Speaker 0>intimidation.

00:06:32.995 --> 00:06:34.995
<v Speaker 0>I think people are are scared about learning

00:06:34.995 --> 00:06:36.754
<v Speaker 0>a new language even if the tool itself

00:06:36.754 --> 00:06:37.955
<v Speaker 0>is powerful.

00:06:38.194 --> 00:06:39.860
<v Speaker 0>And I think there's a common consensus that

00:06:39.860 --> 00:06:42.260
<v Speaker 0>it's considered quite academic,

00:06:42.500 --> 00:06:44.260
<v Speaker 0>but I think that tide is changing. And

00:06:44.260 --> 00:06:46.340
<v Speaker 0>I'm curious on your perspective here. Like,

00:06:47.460 --> 00:06:48.500
<v Speaker 0>do you see people

00:06:49.460 --> 00:06:50.660
<v Speaker 0>that are coming to speak to you? They're

00:06:50.660 --> 00:06:52.340
<v Speaker 0>struggling with next. Do they still think it's

00:06:52.340 --> 00:06:54.294
<v Speaker 0>academic? And and do you see this trend

00:06:54.294 --> 00:06:56.135
<v Speaker 0>where more people seem to be just embracing

00:06:56.135 --> 00:06:56.935
<v Speaker 0>it now,

00:06:57.175 --> 00:06:58.695
<v Speaker 0>in the last twelve months? I seem to

00:06:58.695 --> 00:07:00.695
<v Speaker 0>think that people are a lot more open

00:07:00.695 --> 00:07:02.615
<v Speaker 0>to to using Next and Next tools.

00:07:03.735 --> 00:07:04.375
<v Speaker 1>Yeah.

00:07:04.775 --> 00:07:06.615
<v Speaker 1>That's a really good question. So I I

00:07:06.615 --> 00:07:07.175
<v Speaker 1>think that

00:07:07.580 --> 00:07:09.180
<v Speaker 1>it has changed a lot,

00:07:09.820 --> 00:07:10.780
<v Speaker 1>mostly because

00:07:11.260 --> 00:07:13.020
<v Speaker 1>there is a lot of people from the

00:07:13.020 --> 00:07:15.180
<v Speaker 1>industry who are using NAICS and bringing that,

00:07:15.180 --> 00:07:16.700
<v Speaker 1>like, mindset into it.

00:07:17.580 --> 00:07:18.620
<v Speaker 1>So I I don't see

00:07:19.180 --> 00:07:21.225
<v Speaker 1>like, the academic side, I don't see it

00:07:21.225 --> 00:07:23.545
<v Speaker 1>mentioned almost at all anymore. I think a

00:07:23.545 --> 00:07:24.665
<v Speaker 1>lot of that has

00:07:24.985 --> 00:07:27.305
<v Speaker 1>is due to Rawk Arbus who led, like,

00:07:27.305 --> 00:07:28.905
<v Speaker 1>the redesign of nixos.org

00:07:28.905 --> 00:07:31.065
<v Speaker 1>about a few years ago, maybe three years

00:07:31.065 --> 00:07:31.225
<v Speaker 1>ago.

00:07:32.639 --> 00:07:35.680
<v Speaker 1>And, like, the original website was very academic.

00:07:35.680 --> 00:07:37.039
<v Speaker 1>Like, you could really see, you know, it's

00:07:37.039 --> 00:07:39.919
<v Speaker 1>like talks about purely functional and all these

00:07:39.919 --> 00:07:42.320
<v Speaker 1>words that, like, nobody cares

00:07:42.720 --> 00:07:44.240
<v Speaker 1>at the end of the day, right, what

00:07:44.240 --> 00:07:45.199
<v Speaker 1>they wanna do with nix.

00:07:46.405 --> 00:07:48.405
<v Speaker 1>So that has changed a lot into what

00:07:48.405 --> 00:07:50.005
<v Speaker 1>the industry is used to, which is, like,

00:07:50.005 --> 00:07:51.685
<v Speaker 1>you know, showing off the features and the

00:07:51.685 --> 00:07:53.925
<v Speaker 1>benefits of of using the Nikes and things

00:07:53.925 --> 00:07:56.005
<v Speaker 1>like that. So I think the redesign of

00:07:56.005 --> 00:07:57.525
<v Speaker 1>the website was a huge

00:07:58.720 --> 00:08:01.120
<v Speaker 1>move. And then also, like, just people

00:08:01.440 --> 00:08:04.080
<v Speaker 1>all around who are, like like, you know,

00:08:04.080 --> 00:08:05.120
<v Speaker 1>bringing that

00:08:05.760 --> 00:08:08.640
<v Speaker 1>developer experience mindset to makes and and trying

00:08:08.640 --> 00:08:10.560
<v Speaker 1>to make it better and and more stable

00:08:10.560 --> 00:08:12.405
<v Speaker 1>and things like that. I think it's like

00:08:12.405 --> 00:08:14.325
<v Speaker 1>no single thing, but it all kind of,

00:08:14.485 --> 00:08:15.925
<v Speaker 1>you know, trickles up

00:08:16.085 --> 00:08:18.325
<v Speaker 1>or trickles down to

00:08:18.485 --> 00:08:19.845
<v Speaker 1>to what we have right now.

00:08:20.885 --> 00:08:23.925
<v Speaker 0>Yeah. Definitely. I mean, I think the academic

00:08:23.925 --> 00:08:25.445
<v Speaker 0>side for me is whenever I hear someone

00:08:25.445 --> 00:08:28.620
<v Speaker 0>say hermetic or adampotent, I'm like, okay. Here

00:08:28.620 --> 00:08:31.340
<v Speaker 0>we are again. It's something hard, but, you

00:08:31.340 --> 00:08:33.740
<v Speaker 0>know, these things, they they mean something different

00:08:33.740 --> 00:08:35.260
<v Speaker 0>in each context. And I think the next

00:08:35.260 --> 00:08:37.340
<v Speaker 0>context is something that is, like, containers now.

00:08:37.340 --> 00:08:38.860
<v Speaker 0>Right? We take these for granted. And I

00:08:38.860 --> 00:08:41.115
<v Speaker 0>think next is maybe the next the next

00:08:41.115 --> 00:08:43.035
<v Speaker 0>kind of adoption point that we're gonna see

00:08:43.035 --> 00:08:45.435
<v Speaker 0>in this space. But let's break down next.

00:08:45.435 --> 00:08:47.115
<v Speaker 0>Right? Because we've said a few things. Now

00:08:47.115 --> 00:08:49.355
<v Speaker 0>you said next to us. There's next. These

00:08:49.675 --> 00:08:51.675
<v Speaker 0>are actually many projects. Right? There's next to

00:08:51.675 --> 00:08:54.155
<v Speaker 0>language. There's next to package manager. There's next

00:08:54.155 --> 00:08:55.595
<v Speaker 0>to us, the operating system.

00:08:57.320 --> 00:08:58.680
<v Speaker 0>I I don't even know if I've missed

00:08:58.680 --> 00:09:01.000
<v Speaker 0>anything there, to be honest, but you don't

00:09:01.000 --> 00:09:02.360
<v Speaker 0>need to buy into all of this. You

00:09:02.360 --> 00:09:04.440
<v Speaker 0>can pick and choose the parts you want.

00:09:04.440 --> 00:09:04.920
<v Speaker 0>Right?

00:09:05.800 --> 00:09:08.199
<v Speaker 1>Yeah. So I think the most confusing part

00:09:08.199 --> 00:09:08.839
<v Speaker 1>is that, like,

00:09:10.155 --> 00:09:11.675
<v Speaker 1>we don't really have a good name for

00:09:11.675 --> 00:09:13.355
<v Speaker 1>the project. There was a times where we

00:09:13.355 --> 00:09:14.155
<v Speaker 1>called it the.

00:09:14.555 --> 00:09:17.595
<v Speaker 1>There was sometimes where we called it. So

00:09:17.915 --> 00:09:19.995
<v Speaker 1>it's been a lot of discussions. I've been

00:09:19.995 --> 00:09:22.075
<v Speaker 1>big proponent even when I was still in

00:09:22.075 --> 00:09:23.115
<v Speaker 1>the foundation to

00:09:23.650 --> 00:09:26.050
<v Speaker 1>to to pick a name that, like, is

00:09:26.050 --> 00:09:28.850
<v Speaker 1>for the project itself that is completely distinguished.

00:09:30.050 --> 00:09:31.970
<v Speaker 1>But, yeah, NICS is, like, kind of, like,

00:09:31.970 --> 00:09:35.010
<v Speaker 1>the language, then it's, like, the package manager,

00:09:35.834 --> 00:09:38.394
<v Speaker 1>and then kind of, like, the whole facade

00:09:38.394 --> 00:09:41.435
<v Speaker 1>of of tooling. Right? And then, like, Nick

00:09:41.435 --> 00:09:42.954
<v Speaker 1>so has built on top of that and

00:09:42.954 --> 00:09:45.435
<v Speaker 1>provides his own interface and, for example, Devenv

00:09:45.435 --> 00:09:46.154
<v Speaker 1>as well.

00:09:46.875 --> 00:09:48.795
<v Speaker 1>So it's quite a quite a few layers,

00:09:48.795 --> 00:09:50.475
<v Speaker 1>and I think that's the and

00:09:50.889 --> 00:09:52.329
<v Speaker 1>what used to be really hard as well

00:09:52.329 --> 00:09:54.089
<v Speaker 1>that NICS was really hard to Google because

00:09:54.089 --> 00:09:56.410
<v Speaker 1>it was, like, Unix and and things like

00:09:56.410 --> 00:09:58.889
<v Speaker 1>that were, like, popping up now that NICS

00:09:58.889 --> 00:09:59.850
<v Speaker 1>is so popular.

00:10:00.089 --> 00:10:01.930
<v Speaker 1>I think Google is doing a great job

00:10:01.930 --> 00:10:03.050
<v Speaker 1>of prioritizing us,

00:10:03.675 --> 00:10:06.075
<v Speaker 1>but that's likely solved.

00:10:06.635 --> 00:10:09.515
<v Speaker 1>But, yeah, that all creates this confusion. But,

00:10:09.515 --> 00:10:11.035
<v Speaker 1>like, the the essence is you you you

00:10:11.035 --> 00:10:13.275
<v Speaker 1>wanna use NICs. That's kinda like the core.

00:10:13.275 --> 00:10:15.915
<v Speaker 1>NICs is like the distribution, I would say,

00:10:15.915 --> 00:10:18.510
<v Speaker 1>where you get, like, the the the actual

00:10:18.510 --> 00:10:19.470
<v Speaker 1>common line.

00:10:20.750 --> 00:10:23.390
<v Speaker 1>And then you can, like, slowly progress

00:10:23.550 --> 00:10:26.910
<v Speaker 1>into, like, do you wanna have developer environments?

00:10:26.910 --> 00:10:28.430
<v Speaker 1>Do you wanna have deployments?

00:10:29.310 --> 00:10:30.830
<v Speaker 1>So, like, there is a lot of different

00:10:30.830 --> 00:10:33.675
<v Speaker 1>projects. There's, like, Nick's Darwin, which manages, like,

00:10:33.675 --> 00:10:35.595
<v Speaker 1>your Mac OS kind of configuration,

00:10:36.395 --> 00:10:38.235
<v Speaker 1>home manager, and and then there's a lot

00:10:38.235 --> 00:10:40.795
<v Speaker 1>of projects. But, like, the essence is

00:10:41.355 --> 00:10:42.955
<v Speaker 1>kind of, like, the common line tool and

00:10:42.955 --> 00:10:44.075
<v Speaker 1>then the language

00:10:44.235 --> 00:10:44.875
<v Speaker 1>itself.

00:10:46.120 --> 00:10:48.040
<v Speaker 0>Okay. So let's lean into the dev end

00:10:48.040 --> 00:10:49.960
<v Speaker 0>aspect of this then. This is the project

00:10:49.960 --> 00:10:51.560
<v Speaker 0>that we wanna show people today.

00:10:51.880 --> 00:10:54.040
<v Speaker 0>In order for someone to get started and,

00:10:54.040 --> 00:10:54.600
<v Speaker 0>you know,

00:10:55.080 --> 00:10:56.760
<v Speaker 0>recreate some of the things we're going to

00:10:56.760 --> 00:10:58.200
<v Speaker 0>do today, which parts of Dext are they

00:10:58.200 --> 00:11:00.605
<v Speaker 0>buying into. Right? It's is it the Next

00:11:00.605 --> 00:11:02.525
<v Speaker 0>language? Is it Next packages? Do they need

00:11:02.525 --> 00:11:03.725
<v Speaker 0>NextOS? Like,

00:11:04.125 --> 00:11:06.205
<v Speaker 0>how does Devenv and Next correlate?

00:11:07.965 --> 00:11:08.925
<v Speaker 1>Yeah. So

00:11:09.485 --> 00:11:10.525
<v Speaker 1>one of the

00:11:12.365 --> 00:11:13.965
<v Speaker 1>I don't know. I this is a bit

00:11:13.965 --> 00:11:15.085
<v Speaker 1>of a

00:11:15.860 --> 00:11:17.380
<v Speaker 1>thing that I like to say that NICS

00:11:17.380 --> 00:11:19.540
<v Speaker 1>is kind of like the JavaScript of DevOps.

00:11:19.540 --> 00:11:21.380
<v Speaker 1>Right? Because the language is like

00:11:22.820 --> 00:11:24.660
<v Speaker 1>you know, it's it's an old language by

00:11:24.660 --> 00:11:25.540
<v Speaker 1>now, and it's it's

00:11:26.259 --> 00:11:28.339
<v Speaker 1>there's a lot that could be fixed or

00:11:28.339 --> 00:11:29.540
<v Speaker 1>changed initially.

00:11:29.945 --> 00:11:32.024
<v Speaker 1>So we're kind of stuck with what it

00:11:32.024 --> 00:11:32.505
<v Speaker 1>is

00:11:33.065 --> 00:11:36.265
<v Speaker 1>because we don't wanna break backwards compatibility.

00:11:36.345 --> 00:11:36.825
<v Speaker 1>So

00:11:38.024 --> 00:11:38.825
<v Speaker 1>especially,

00:11:38.825 --> 00:11:41.145
<v Speaker 1>like, conversions between different types and things like

00:11:41.145 --> 00:11:42.745
<v Speaker 1>that are are quite

00:11:43.500 --> 00:11:45.500
<v Speaker 1>tricky for beginners, I would say.

00:11:47.100 --> 00:11:49.420
<v Speaker 1>So one of the insights that I had

00:11:49.420 --> 00:11:52.300
<v Speaker 1>was like, okay. We we don't wanna, like,

00:11:52.300 --> 00:11:54.700
<v Speaker 1>really use all the features of the language.

00:11:54.700 --> 00:11:56.860
<v Speaker 1>What we wanna expose to the users is,

00:11:56.860 --> 00:11:59.715
<v Speaker 1>like, very simple API, which is essentially, like,

00:11:59.875 --> 00:12:01.955
<v Speaker 1>the attributes that you kind of toggle to

00:12:01.955 --> 00:12:03.315
<v Speaker 1>to some values.

00:12:04.755 --> 00:12:05.395
<v Speaker 1>So,

00:12:06.035 --> 00:12:08.515
<v Speaker 1>like, previously, I think if you use, like,

00:12:08.515 --> 00:12:10.275
<v Speaker 1>Nick Shell and things like that, it's great.

00:12:10.275 --> 00:12:12.530
<v Speaker 1>But, like, you needed to know quite a

00:12:12.530 --> 00:12:13.970
<v Speaker 1>bit of the language to kind of get

00:12:13.970 --> 00:12:15.650
<v Speaker 1>things, like, wired up.

00:12:16.530 --> 00:12:18.690
<v Speaker 1>So Devenv kind of, like, hides all that

00:12:18.690 --> 00:12:21.250
<v Speaker 1>complexity away and kind of exposes this SIP.

00:12:21.250 --> 00:12:23.090
<v Speaker 1>Like, I like to describe it as, like,

00:12:23.090 --> 00:12:25.175
<v Speaker 1>a simple JSON language

00:12:25.255 --> 00:12:27.975
<v Speaker 1>with, like, functions. Right? Because if you don't

00:12:27.975 --> 00:12:30.615
<v Speaker 1>really dive into the dark corners, that's that's

00:12:30.615 --> 00:12:32.055
<v Speaker 1>what you you know, we need a book,

00:12:32.055 --> 00:12:34.535
<v Speaker 1>like, makes the good parts. Right? I think

00:12:34.535 --> 00:12:36.214
<v Speaker 1>it's exactly the same as the JavaScript.

00:12:38.040 --> 00:12:39.960
<v Speaker 1>So, like, that was the insight. Right? We

00:12:39.960 --> 00:12:42.920
<v Speaker 1>wanna really dumb down the use of the

00:12:42.920 --> 00:12:44.600
<v Speaker 1>language and things that people

00:12:45.080 --> 00:12:46.680
<v Speaker 1>need to do to in order to use

00:12:46.840 --> 00:12:49.720
<v Speaker 1>to start with Next. Yeah. Because one of

00:12:49.720 --> 00:12:52.595
<v Speaker 1>the the the main, like, complaints that you

00:12:52.595 --> 00:12:54.595
<v Speaker 1>hear from people about Nicks is that, oh,

00:12:54.595 --> 00:12:57.315
<v Speaker 1>it's you know, like, hard things are easy,

00:12:57.315 --> 00:12:58.835
<v Speaker 1>but easy things are hard. And I think

00:12:58.835 --> 00:13:00.995
<v Speaker 1>that this this part where easy things are

00:13:00.995 --> 00:13:03.395
<v Speaker 1>hard is mostly the developer experience that is

00:13:03.395 --> 00:13:05.475
<v Speaker 1>just been quite

00:13:05.475 --> 00:13:08.030
<v Speaker 1>a quite a hard thing. So that's what

00:13:08.030 --> 00:13:10.990
<v Speaker 1>we've been, like, really focusing on with Devenv

00:13:10.990 --> 00:13:14.510
<v Speaker 1>and trying to, like, start from, like, pleasurable

00:13:14.910 --> 00:13:17.950
<v Speaker 1>experience and then make it functional later. So

00:13:17.950 --> 00:13:20.110
<v Speaker 1>it's very controversial take on software.

00:13:20.585 --> 00:13:21.145
<v Speaker 1>But,

00:13:21.625 --> 00:13:23.625
<v Speaker 1>yeah, that's the the approach we took.

00:13:24.905 --> 00:13:27.625
<v Speaker 0>Awesome. Well, I'm excited to dive into this.

00:13:27.625 --> 00:13:30.825
<v Speaker 0>I think we should probably share my screen

00:13:31.145 --> 00:13:33.305
<v Speaker 0>and dive into Devenv, show people how to

00:13:33.305 --> 00:13:35.785
<v Speaker 0>get started, and explore some of those,

00:13:36.399 --> 00:13:38.880
<v Speaker 0>you know, quirks of the language as we

00:13:38.880 --> 00:13:39.760
<v Speaker 0>progress.

00:13:40.800 --> 00:13:42.080
<v Speaker 1>Let's try it out. Yeah.

00:13:42.959 --> 00:13:46.560
<v Speaker 0>Fingers crossed. So for anyone watching that does

00:13:46.560 --> 00:13:48.160
<v Speaker 0>want to get started here, you can just

00:13:48.160 --> 00:13:50.320
<v Speaker 0>go to devenv.sh,

00:13:50.560 --> 00:13:52.475
<v Speaker 0>where everything that you need is there, including

00:13:52.475 --> 00:13:55.435
<v Speaker 0>some samples of the language, the documentation,

00:13:56.074 --> 00:13:56.555
<v Speaker 0>and

00:13:56.875 --> 00:13:58.875
<v Speaker 0>again, the starter guide, which we're gonna kick

00:13:58.875 --> 00:14:00.075
<v Speaker 0>the tires on.

00:14:01.355 --> 00:14:01.675
<v Speaker 0>So,

00:14:03.420 --> 00:14:05.660
<v Speaker 0>normally, I would do the install, but I

00:14:05.660 --> 00:14:06.860
<v Speaker 0>actually already have

00:14:08.459 --> 00:14:10.620
<v Speaker 0>I mean, I'm running Nexus today just for

00:14:10.620 --> 00:14:13.019
<v Speaker 0>this session, so that's kinda cheating. Right? But

00:14:13.019 --> 00:14:15.180
<v Speaker 0>most people would have to have Next available

00:14:15.579 --> 00:14:16.300
<v Speaker 0>on their system.

00:14:17.084 --> 00:14:19.084
<v Speaker 0>As we've kinda covered, you know, it's available

00:14:19.084 --> 00:14:20.605
<v Speaker 0>on Linux, Mac OS.

00:14:21.245 --> 00:14:22.365
<v Speaker 0>So quite

00:14:22.925 --> 00:14:24.765
<v Speaker 0>easy ish to get started,

00:14:25.485 --> 00:14:27.404
<v Speaker 0>we're not gonna cover this. Now

00:14:27.805 --> 00:14:29.805
<v Speaker 0>this is where I got tripped up when

00:14:29.805 --> 00:14:31.805
<v Speaker 0>I first explored Devenv. So I'm hoping you

00:14:31.805 --> 00:14:33.630
<v Speaker 0>can get a guide us on this part.

00:14:33.630 --> 00:14:35.950
<v Speaker 0>Right? Is that to use Devenv, we actually

00:14:35.950 --> 00:14:38.110
<v Speaker 0>have multiple options once Next is available on

00:14:38.110 --> 00:14:38.830
<v Speaker 0>our system.

00:14:40.030 --> 00:14:42.030
<v Speaker 0>We can install the package into our environment

00:14:42.030 --> 00:14:43.950
<v Speaker 0>using Next Shell, NextM, something like this.

00:14:44.954 --> 00:14:47.035
<v Speaker 0>There's profiles and flakes,

00:14:49.035 --> 00:14:50.954
<v Speaker 0>which are a completely different approach to doing

00:14:50.954 --> 00:14:52.315
<v Speaker 0>it. Right? We can use the profile, but

00:14:52.315 --> 00:14:54.154
<v Speaker 0>we could also use a flake.next. I'm still

00:14:54.154 --> 00:14:56.315
<v Speaker 0>not entirely sure. Like, my next knowledge is

00:14:56.730 --> 00:14:57.930
<v Speaker 0>very

00:14:57.930 --> 00:15:00.170
<v Speaker 0>beginner. Right? I know enough to be dangerous

00:15:00.170 --> 00:15:02.090
<v Speaker 0>and get a development environment up and running,

00:15:02.170 --> 00:15:04.170
<v Speaker 0>but I don't really understand all of the

00:15:04.170 --> 00:15:05.770
<v Speaker 0>the rest of the ecosystem at this point

00:15:05.770 --> 00:15:07.610
<v Speaker 0>in time. So what I'm curious about, and

00:15:07.610 --> 00:15:08.810
<v Speaker 0>I'm gonna try and give you a specific

00:15:08.810 --> 00:15:10.490
<v Speaker 0>question now instead of fluffing and waving my

00:15:10.490 --> 00:15:12.385
<v Speaker 0>hands in the air. Right? But you know

00:15:12.385 --> 00:15:14.785
<v Speaker 0>Next. You know Devenv. You built this tool.

00:15:15.105 --> 00:15:16.945
<v Speaker 0>When you are starting a new project,

00:15:17.185 --> 00:15:18.545
<v Speaker 0>do you go straight for a flake dot

00:15:18.545 --> 00:15:20.625
<v Speaker 0>Next? Do you use a Devenv CLI tool?

00:15:20.625 --> 00:15:22.225
<v Speaker 0>Do you do something else? Like, what do

00:15:22.225 --> 00:15:23.745
<v Speaker 0>you do, and what would you encourage other

00:15:23.745 --> 00:15:24.225
<v Speaker 0>people to do?

00:15:25.520 --> 00:15:26.480
<v Speaker 1>Yeah. I I was

00:15:27.120 --> 00:15:29.040
<v Speaker 1>I used to be, you know, a huge

00:15:29.040 --> 00:15:31.040
<v Speaker 1>huge fan of and I still am a

00:15:31.040 --> 00:15:33.040
<v Speaker 1>huge fan of of flakes because I think

00:15:33.040 --> 00:15:33.600
<v Speaker 1>that

00:15:34.960 --> 00:15:37.360
<v Speaker 1>the flakes solve a lot of the issues

00:15:37.360 --> 00:15:37.920
<v Speaker 1>with, like,

00:15:40.185 --> 00:15:42.665
<v Speaker 1>handling dependencies and things like that. So that's

00:15:42.665 --> 00:15:45.305
<v Speaker 1>where I would start, like, before I did

00:15:45.305 --> 00:15:46.025
<v Speaker 1>Devenv.

00:15:46.185 --> 00:15:48.105
<v Speaker 1>And then as I started to work on

00:15:48.105 --> 00:15:49.865
<v Speaker 1>Devenv, I started to use it more and

00:15:49.865 --> 00:15:50.665
<v Speaker 1>more because

00:15:50.985 --> 00:15:53.540
<v Speaker 1>I kind of, you know, follow the Pareto

00:15:53.540 --> 00:15:55.460
<v Speaker 1>rule of eighty, twenty percent, and I think

00:15:55.460 --> 00:15:56.980
<v Speaker 1>80% of the time,

00:15:58.420 --> 00:16:01.220
<v Speaker 1>you want just the developer environment for your

00:16:01.220 --> 00:16:04.180
<v Speaker 1>project. That's, like, most of what you need,

00:16:04.180 --> 00:16:06.340
<v Speaker 1>I I think, when you are developing things.

00:16:07.265 --> 00:16:07.905
<v Speaker 1>And

00:16:08.705 --> 00:16:10.625
<v Speaker 1>because we've we've put so much work into

00:16:10.625 --> 00:16:12.225
<v Speaker 1>Devenv, I think that it's it's a much

00:16:12.225 --> 00:16:13.265
<v Speaker 1>simpler option.

00:16:13.665 --> 00:16:15.505
<v Speaker 1>So I now it's just

00:16:16.625 --> 00:16:19.025
<v Speaker 1>I I would always go for Devenv. The

00:16:19.025 --> 00:16:20.785
<v Speaker 1>only time where I would use Steelflakes is

00:16:20.785 --> 00:16:21.265
<v Speaker 1>when

00:16:21.779 --> 00:16:24.260
<v Speaker 1>you really need to, like, distribute software.

00:16:24.740 --> 00:16:27.220
<v Speaker 1>Like, that's that's the part that Devenv doesn't

00:16:27.220 --> 00:16:27.700
<v Speaker 1>do,

00:16:28.339 --> 00:16:29.540
<v Speaker 1>at least at the moment.

00:16:29.860 --> 00:16:31.620
<v Speaker 1>And and but, yeah, that's that's a different

00:16:31.620 --> 00:16:33.699
<v Speaker 1>end topic. Like, what are the differences between

00:16:33.699 --> 00:16:34.660
<v Speaker 1>Flakes and Devenv.

00:16:36.105 --> 00:16:38.025
<v Speaker 1>But we yeah. I would use Devenv now

00:16:38.025 --> 00:16:40.345
<v Speaker 1>for I mean, I'm obviously biased toward Devenv

00:16:40.345 --> 00:16:42.585
<v Speaker 1>because I I created it. Like so if

00:16:42.585 --> 00:16:44.425
<v Speaker 1>I say that, it doesn't mean that much.

00:16:44.825 --> 00:16:46.425
<v Speaker 1>But it is like

00:16:47.190 --> 00:16:48.950
<v Speaker 1>you know, I I still when I open

00:16:48.950 --> 00:16:50.630
<v Speaker 1>a project, I decide if I wanna use

00:16:50.630 --> 00:16:52.870
<v Speaker 1>flakes or not. So it's yeah.

00:16:53.270 --> 00:16:55.670
<v Speaker 0>Yeah. Yeah. I I was just curious, you

00:16:55.670 --> 00:16:57.110
<v Speaker 0>know, what you would reach for. And I

00:16:57.110 --> 00:17:00.175
<v Speaker 0>think for the audience as well that aren't

00:17:00.175 --> 00:17:03.214
<v Speaker 0>gonna have as much experience with you and

00:17:03.214 --> 00:17:05.375
<v Speaker 0>next. It's definitely the easiest way for them

00:17:05.375 --> 00:17:07.855
<v Speaker 0>to get started as well. So let's go

00:17:07.855 --> 00:17:09.774
<v Speaker 0>ahead and just make sure I have

00:17:11.294 --> 00:17:12.414
<v Speaker 0>in my environment.

00:17:13.940 --> 00:17:15.940
<v Speaker 0>Don't know why that Yeah. It needs this.

00:17:15.940 --> 00:17:16.500
<v Speaker 1>Yeah.

00:17:19.060 --> 00:17:20.659
<v Speaker 1>Now if you have flakes,

00:17:21.540 --> 00:17:22.900
<v Speaker 1>this might complain,

00:17:22.900 --> 00:17:24.900
<v Speaker 1>but let's see. This is, like, gonna show

00:17:24.900 --> 00:17:25.460
<v Speaker 1>the

00:17:26.099 --> 00:17:26.980
<v Speaker 1>the experience.

00:17:27.784 --> 00:17:30.105
<v Speaker 1>Oh, you're using the z Zelly Jane or

00:17:30.105 --> 00:17:31.065
<v Speaker 1>whatever is

00:17:31.304 --> 00:17:31.784
<v Speaker 1>Yeah.

00:17:32.585 --> 00:17:34.345
<v Speaker 0>It's such a good multiplexer.

00:17:34.345 --> 00:17:35.624
<v Speaker 0>It's fantastic.

00:17:36.745 --> 00:17:38.024
<v Speaker 1>Nice. I should try.

00:17:38.985 --> 00:17:40.744
<v Speaker 1>So let's see if that will work.

00:17:41.065 --> 00:17:41.864
<v Speaker 0>Ta da.

00:17:42.345 --> 00:17:42.825
<v Speaker 0>Awesome.

00:17:44.340 --> 00:17:47.780
<v Speaker 0>So install Devenv CLI, and then in order

00:17:47.780 --> 00:17:50.100
<v Speaker 0>to create a new repository or add a

00:17:50.100 --> 00:17:52.420
<v Speaker 0>Devenv to an existing project, I would guess,

00:17:52.420 --> 00:17:54.020
<v Speaker 0>we could run Devenv

00:17:54.020 --> 00:17:54.820
<v Speaker 0>in it.

00:17:55.460 --> 00:17:55.940
<v Speaker 0>So

00:17:56.475 --> 00:17:58.554
<v Speaker 0>I was gonna do this. Like, right right

00:17:58.554 --> 00:18:00.155
<v Speaker 0>now, we're in an empty directory that has

00:18:00.155 --> 00:18:02.315
<v Speaker 0>nothing in it. I mean, we could certainly

00:18:02.315 --> 00:18:04.794
<v Speaker 0>do that and add some components and stuff,

00:18:04.955 --> 00:18:06.715
<v Speaker 0>but maybe it would make more sense to

00:18:06.715 --> 00:18:08.554
<v Speaker 0>add this to an existing

00:18:08.795 --> 00:18:10.475
<v Speaker 0>project. I don't know. What do you think?

00:18:13.240 --> 00:18:14.440
<v Speaker 1>Yeah. I think,

00:18:14.840 --> 00:18:16.360
<v Speaker 1>usually, you wanna

00:18:17.320 --> 00:18:18.360
<v Speaker 1>you kind of

00:18:18.760 --> 00:18:21.720
<v Speaker 1>have an idea of what developer environment you

00:18:21.720 --> 00:18:23.080
<v Speaker 1>want to build

00:18:23.800 --> 00:18:25.800
<v Speaker 1>for, you know, what's what source you have

00:18:25.800 --> 00:18:27.855
<v Speaker 1>and and and, you know, what you you

00:18:27.855 --> 00:18:28.415
<v Speaker 1>wanna, like

00:18:30.975 --> 00:18:32.255
<v Speaker 1>I don't know. Let's say you have a

00:18:32.255 --> 00:18:34.175
<v Speaker 1>Rust project. Right? So it's Let's do it

00:18:34.175 --> 00:18:36.095
<v Speaker 0>let's do it this way. I mean, I'm

00:18:36.095 --> 00:18:37.934
<v Speaker 0>not gonna put words in my audience's mouth.

00:18:37.934 --> 00:18:41.054
<v Speaker 0>Right? But they're typically cloud native senior developers

00:18:41.054 --> 00:18:43.720
<v Speaker 0>who are programming in Rust or Go. So

00:18:43.720 --> 00:18:44.840
<v Speaker 0>I think if we can try and run

00:18:44.840 --> 00:18:45.960
<v Speaker 0>through two examples,

00:18:46.200 --> 00:18:47.880
<v Speaker 0>the very simple Go program and the Rust

00:18:47.880 --> 00:18:49.559
<v Speaker 0>program, I think that's gonna be of most

00:18:49.559 --> 00:18:51.239
<v Speaker 0>value to the people that watch this video.

00:18:51.240 --> 00:18:53.320
<v Speaker 0>Maybe I'm wrong, but I think that is

00:18:53.320 --> 00:18:54.840
<v Speaker 0>our best bet for today. So

00:18:55.805 --> 00:18:57.645
<v Speaker 0>let's start with Rust first because it's my

00:18:57.645 --> 00:18:59.325
<v Speaker 0>go to language these days, and I'm gonna

00:18:59.325 --> 00:19:01.725
<v Speaker 0>run Devenv in it, and then we'll take

00:19:01.725 --> 00:19:02.764
<v Speaker 0>it from there.

00:19:06.285 --> 00:19:08.524
<v Speaker 0>Now here's a a question. What

00:19:08.925 --> 00:19:10.445
<v Speaker 0>language is Devenv

00:19:10.759 --> 00:19:11.719
<v Speaker 0>written in?

00:19:12.840 --> 00:19:15.080
<v Speaker 1>Yes. It's it's a good so first, when

00:19:15.080 --> 00:19:16.919
<v Speaker 1>we create like, when I created

00:19:17.000 --> 00:19:19.959
<v Speaker 1>Devenv, it was just, a glorified Bash script

00:19:21.240 --> 00:19:23.240
<v Speaker 1>because we were just trying to

00:19:25.144 --> 00:19:27.304
<v Speaker 1>just, like, yeah, get the interface right and

00:19:27.304 --> 00:19:28.024
<v Speaker 1>all that.

00:19:28.424 --> 00:19:30.585
<v Speaker 1>Then I rewrote it to Python because I

00:19:30.585 --> 00:19:33.465
<v Speaker 1>thought, okay. That would kind of, like, attract

00:19:33.465 --> 00:19:35.465
<v Speaker 1>more people to contribute. You know, it's it's

00:19:35.465 --> 00:19:37.225
<v Speaker 1>a much better language to to kind of,

00:19:38.350 --> 00:19:40.269
<v Speaker 1>like, write common line interfaces.

00:19:40.350 --> 00:19:42.270
<v Speaker 1>But then I rewrote it to Rust, actually.

00:19:42.270 --> 00:19:44.270
<v Speaker 1>So some people were a bit like, woah.

00:19:44.270 --> 00:19:45.309
<v Speaker 1>What the hell is going on?

00:19:45.950 --> 00:19:48.429
<v Speaker 1>But what happened was I went to, like,

00:19:48.429 --> 00:19:49.549
<v Speaker 1>something called

00:19:52.184 --> 00:19:53.624
<v Speaker 1>what what was it called,

00:19:53.945 --> 00:19:56.264
<v Speaker 1>Tiger Sprint, which was like a next

00:19:56.345 --> 00:19:59.065
<v Speaker 1>hackathon of of about 20 people.

00:19:59.625 --> 00:20:00.264
<v Speaker 1>And,

00:20:01.145 --> 00:20:03.865
<v Speaker 1>like, I was really happy. There was a

00:20:03.865 --> 00:20:05.705
<v Speaker 1>friend who said, okay. I can, you know,

00:20:05.705 --> 00:20:08.609
<v Speaker 1>I can teach you Rust pair programming.

00:20:08.769 --> 00:20:10.289
<v Speaker 1>And I said, yeah. I wanted to learn

00:20:10.289 --> 00:20:12.370
<v Speaker 1>Rust. So in a week, we rewrote Devenv

00:20:12.370 --> 00:20:14.049
<v Speaker 1>in in Rust from Python.

00:20:14.610 --> 00:20:16.370
<v Speaker 1>And I was like, okay. If if that's

00:20:16.370 --> 00:20:17.730
<v Speaker 1>done in a week, then I'm happy.

00:20:19.414 --> 00:20:21.414
<v Speaker 1>And and so now it's in Rust, which

00:20:21.414 --> 00:20:24.375
<v Speaker 1>is which is actually not, like, completely arbitrary

00:20:24.375 --> 00:20:26.934
<v Speaker 1>or just because Rust is cool. But it's

00:20:26.934 --> 00:20:28.455
<v Speaker 1>also because there is a lot of tooling

00:20:28.455 --> 00:20:30.215
<v Speaker 1>being written in Rust, so I think it's

00:20:30.215 --> 00:20:32.135
<v Speaker 1>nice that the community is approaching to to

00:20:32.135 --> 00:20:34.750
<v Speaker 1>Rust or, you know, any language, really. But

00:20:34.750 --> 00:20:36.429
<v Speaker 1>it is Rust, and and I think Rust

00:20:36.429 --> 00:20:37.470
<v Speaker 1>is a great language.

00:20:38.990 --> 00:20:40.590
<v Speaker 1>So that's one thing. The other one, there

00:20:40.590 --> 00:20:42.510
<v Speaker 1>is Twigs, which is like a rewrite of

00:20:42.510 --> 00:20:43.950
<v Speaker 1>of NICs in Rust,

00:20:44.110 --> 00:20:45.309
<v Speaker 1>Twigs.dev.

00:20:46.429 --> 00:20:47.309
<v Speaker 1>And I'm I'm

00:20:47.745 --> 00:20:49.745
<v Speaker 1>kind of really excited about that. I I

00:20:49.745 --> 00:20:52.544
<v Speaker 1>don't know how well it will go, but

00:20:53.505 --> 00:20:56.144
<v Speaker 1>I think that it's it's super cool that

00:20:56.225 --> 00:20:57.825
<v Speaker 1>well, first of all, we have an alternative

00:20:57.825 --> 00:21:00.065
<v Speaker 1>implementation of NICs. And second of all,

00:21:00.705 --> 00:21:01.505
<v Speaker 1>I think it's,

00:21:02.080 --> 00:21:03.600
<v Speaker 1>you know, it's it's done with the right

00:21:03.600 --> 00:21:06.400
<v Speaker 1>foundations and things like that. So, potentially, we

00:21:06.400 --> 00:21:08.800
<v Speaker 1>could integrate Wix at some point into Devenv,

00:21:09.120 --> 00:21:11.440
<v Speaker 1>but that's, like, up in the air.

00:21:12.320 --> 00:21:12.960
<v Speaker 1>Excellent. Yeah.

00:21:14.515 --> 00:21:15.874
<v Speaker 0>Well, we have

00:21:16.195 --> 00:21:18.595
<v Speaker 0>our first question, which is more related to

00:21:18.595 --> 00:21:22.035
<v Speaker 0>the pronunciation of what I said, but Hain

00:21:22.035 --> 00:21:24.835
<v Speaker 0>is saying that it rhymes with prestige.

00:21:24.995 --> 00:21:28.320
<v Speaker 0>So I guess that's zelisch? Zelisch. Zelleys?

00:21:28.960 --> 00:21:29.919
<v Speaker 1>I guess. Yeah.

00:21:30.799 --> 00:21:31.840
<v Speaker 0>Alright.

00:21:32.240 --> 00:21:33.920
<v Speaker 0>Yeah. Feel free to use the comment box,

00:21:33.920 --> 00:21:35.440
<v Speaker 0>people. If you have any questions or you

00:21:35.440 --> 00:21:37.679
<v Speaker 0>want Domin to answer anything, feel free just

00:21:37.679 --> 00:21:39.120
<v Speaker 0>to drop it, and then we'll get to

00:21:39.120 --> 00:21:40.000
<v Speaker 0>it as soon as possible.

00:21:40.615 --> 00:21:42.934
<v Speaker 0>But for the moment, we have ran Devenv

00:21:42.934 --> 00:21:43.734
<v Speaker 0>in it,

00:21:44.375 --> 00:21:47.414
<v Speaker 0>and we have a lock fail, a next

00:21:47.414 --> 00:21:49.975
<v Speaker 0>fail, and a YAML fail. I'm gonna pop

00:21:49.975 --> 00:21:51.975
<v Speaker 0>this open in Versus Code.

00:21:55.460 --> 00:21:57.539
<v Speaker 0>All the random pop ups that I get.

00:22:00.100 --> 00:22:01.380
<v Speaker 0>Oh, no. We are okay. These are just

00:22:01.380 --> 00:22:03.940
<v Speaker 0>hidden stuff. Right? So Mhmm. What do you

00:22:03.940 --> 00:22:06.179
<v Speaker 0>wanna look at first? YAML, Next?

00:22:07.345 --> 00:22:09.825
<v Speaker 1>I usually always open Next first.

00:22:11.424 --> 00:22:12.544
<v Speaker 1>And yeah.

00:22:13.745 --> 00:22:14.544
<v Speaker 0>Alright.

00:22:14.945 --> 00:22:17.264
<v Speaker 0>So what we have is some Next code

00:22:17.745 --> 00:22:18.945
<v Speaker 0>that defines

00:22:18.945 --> 00:22:21.104
<v Speaker 0>environment variables, packages,

00:22:21.105 --> 00:22:21.505
<v Speaker 0>scripts,

00:22:22.180 --> 00:22:24.420
<v Speaker 0>and some enter stuff. Do you wanna just

00:22:24.420 --> 00:22:26.260
<v Speaker 0>kinda give us the the quick walk through

00:22:26.260 --> 00:22:29.779
<v Speaker 0>of this this this kind of scaffolding?

00:22:30.500 --> 00:22:31.620
<v Speaker 1>Yeah. So, like,

00:22:33.620 --> 00:22:36.765
<v Speaker 1>essentially, we have a bunch of called attribute

00:22:36.765 --> 00:22:39.325
<v Speaker 1>sets, what we call in eggs, but they're

00:22:39.325 --> 00:22:41.325
<v Speaker 1>kind of nested. So, for example, the first

00:22:41.325 --> 00:22:42.605
<v Speaker 1>example is env,

00:22:43.245 --> 00:22:44.045
<v Speaker 1>which is

00:22:44.365 --> 00:22:46.605
<v Speaker 1>where you can define environment variables.

00:22:48.540 --> 00:22:49.260
<v Speaker 1>So

00:22:49.500 --> 00:22:50.380
<v Speaker 1>that's,

00:22:50.620 --> 00:22:52.300
<v Speaker 1>like, very commonly used

00:22:53.260 --> 00:22:54.940
<v Speaker 1>in the in the environments,

00:22:54.940 --> 00:22:57.020
<v Speaker 1>like, either, you know, by

00:22:57.340 --> 00:23:00.140
<v Speaker 1>there's also dot env inter dot env integration.

00:23:00.140 --> 00:23:02.140
<v Speaker 1>So that's the most commonly used thing that,

00:23:02.140 --> 00:23:03.900
<v Speaker 1>you know, you wanna store secrets and things

00:23:03.900 --> 00:23:06.595
<v Speaker 1>like that, which will then populate the env

00:23:06.595 --> 00:23:07.475
<v Speaker 1>attribute

00:23:07.475 --> 00:23:10.355
<v Speaker 1>for you from from that dot env file.

00:23:11.155 --> 00:23:12.115
<v Speaker 1>So that's,

00:23:12.355 --> 00:23:13.955
<v Speaker 1>like, kind of the one of the basic

00:23:13.955 --> 00:23:15.555
<v Speaker 1>things, and the other one is the packages,

00:23:15.555 --> 00:23:16.515
<v Speaker 1>so where you can define

00:23:16.930 --> 00:23:19.170
<v Speaker 1>whatever packages you want to have available in

00:23:19.170 --> 00:23:20.690
<v Speaker 1>your developer environment.

00:23:21.490 --> 00:23:24.290
<v Speaker 1>And this all piggybacks on next packages. So

00:23:24.290 --> 00:23:26.130
<v Speaker 1>whatever is available there

00:23:26.530 --> 00:23:28.210
<v Speaker 1>is available also here.

00:23:28.930 --> 00:23:31.170
<v Speaker 1>There's, like, Devenv search command, which kind of

00:23:31.170 --> 00:23:33.375
<v Speaker 1>helps you to to search through the options

00:23:33.375 --> 00:23:35.535
<v Speaker 1>and through the packages at the same time.

00:23:36.255 --> 00:23:36.815
<v Speaker 1>So,

00:23:37.055 --> 00:23:38.735
<v Speaker 1>like, if you wanna I don't know. If

00:23:38.735 --> 00:23:40.495
<v Speaker 1>you type in, like, Postgres, you will see

00:23:40.495 --> 00:23:42.335
<v Speaker 1>options from Devenv that you can set for

00:23:42.335 --> 00:23:45.055
<v Speaker 1>Postgres well and and also the packages or

00:23:45.135 --> 00:23:47.055
<v Speaker 1>and extensions and things like that that you

00:23:47.055 --> 00:23:47.455
<v Speaker 1>can set.

00:23:49.390 --> 00:23:50.750
<v Speaker 1>And then there is, like, a bunch of

00:23:50.750 --> 00:23:51.950
<v Speaker 1>other things like

00:23:52.270 --> 00:23:53.150
<v Speaker 1>scripts,

00:23:53.150 --> 00:23:55.710
<v Speaker 1>which essentially allows you to define different kind

00:23:55.710 --> 00:23:56.510
<v Speaker 1>of scripts.

00:23:57.070 --> 00:23:59.070
<v Speaker 1>You this is, like, by default batch, but

00:23:59.070 --> 00:24:01.150
<v Speaker 1>now we've just recently added support that you

00:24:01.150 --> 00:24:04.025
<v Speaker 1>can, like, write Python scripts or Rust scripts

00:24:04.025 --> 00:24:04.985
<v Speaker 1>or whatever and

00:24:06.185 --> 00:24:08.905
<v Speaker 1>just kind of inline them or even import

00:24:08.905 --> 00:24:10.905
<v Speaker 1>them from another file or whatever.

00:24:11.465 --> 00:24:13.385
<v Speaker 1>So that's I think that's kind of nice.

00:24:14.280 --> 00:24:16.840
<v Speaker 1>So those are then available inside the the

00:24:16.920 --> 00:24:18.040
<v Speaker 1>the environment.

00:24:19.400 --> 00:24:21.640
<v Speaker 1>Then enter shell and enter test are kind

00:24:21.640 --> 00:24:22.600
<v Speaker 1>of like two

00:24:23.400 --> 00:24:25.560
<v Speaker 1>like, kind of usually, next, they would be

00:24:25.560 --> 00:24:26.600
<v Speaker 1>typically called hooks.

00:24:27.565 --> 00:24:30.605
<v Speaker 1>So enter shell executes this bash code when

00:24:30.605 --> 00:24:31.885
<v Speaker 1>you enter the environment,

00:24:32.045 --> 00:24:33.405
<v Speaker 1>and enter test

00:24:33.725 --> 00:24:36.525
<v Speaker 1>executes when you write Devenv test, which is

00:24:36.525 --> 00:24:37.245
<v Speaker 1>like this

00:24:37.805 --> 00:24:39.085
<v Speaker 1>glorified way of,

00:24:39.750 --> 00:24:41.910
<v Speaker 1>okay. Set me up the environment, set up

00:24:41.910 --> 00:24:43.830
<v Speaker 1>the processes, which I'm gonna mention a bit

00:24:43.830 --> 00:24:44.470
<v Speaker 1>later,

00:24:44.870 --> 00:24:46.710
<v Speaker 1>and everything, and then run this test. Right?

00:24:46.710 --> 00:24:49.030
<v Speaker 1>So it's kinda like a functional testing or

00:24:49.030 --> 00:24:50.389
<v Speaker 1>whatever you wanna call it,

00:24:50.870 --> 00:24:52.230
<v Speaker 1>which is, I think, pretty cool

00:24:52.765 --> 00:24:55.085
<v Speaker 1>feature that we added also quite recently.

00:24:56.525 --> 00:24:57.164
<v Speaker 1>So

00:24:57.565 --> 00:24:59.565
<v Speaker 1>maybe maybe this needs a bit of a

00:24:59.565 --> 00:25:01.804
<v Speaker 1>different order now that I'm talking about it.

00:25:02.125 --> 00:25:04.365
<v Speaker 1>But at the bottom, you can see there's,

00:25:04.365 --> 00:25:06.044
<v Speaker 1>like, languages that you can set,

00:25:06.525 --> 00:25:07.164
<v Speaker 1>which is

00:25:08.045 --> 00:25:09.349
<v Speaker 1>makes makes as a default

00:25:09.590 --> 00:25:10.629
<v Speaker 1>as an example,

00:25:10.870 --> 00:25:13.029
<v Speaker 1>but that we have about, I think, 51

00:25:13.029 --> 00:25:15.190
<v Speaker 1>or 52 languages right now, and it's super

00:25:15.190 --> 00:25:16.469
<v Speaker 1>easy to add Numos.

00:25:18.149 --> 00:25:20.630
<v Speaker 1>And then the the most exciting part, least

00:25:20.630 --> 00:25:22.835
<v Speaker 1>for me, is, like, processes and services. So

00:25:22.835 --> 00:25:24.435
<v Speaker 1>processes is just the way it is it's

00:25:24.435 --> 00:25:25.955
<v Speaker 1>like a foreman

00:25:26.115 --> 00:25:29.075
<v Speaker 1>profile kind of format where you just define,

00:25:29.075 --> 00:25:30.034
<v Speaker 1>you know, whatever

00:25:30.515 --> 00:25:33.315
<v Speaker 1>whatever command you wanna run inside your environment

00:25:33.315 --> 00:25:35.235
<v Speaker 1>that is, a long running process.

00:25:35.715 --> 00:25:38.610
<v Speaker 1>And then the services are, like, basically, obstruction

00:25:38.610 --> 00:25:41.570
<v Speaker 1>on top of that. So, like like, Postgres,

00:25:41.570 --> 00:25:43.170
<v Speaker 1>you know, you it will run a Postgres

00:25:43.170 --> 00:25:45.890
<v Speaker 1>process for you, but expose a bunch of

00:25:47.090 --> 00:25:48.930
<v Speaker 1>a bunch of settings for you. So you

00:25:48.930 --> 00:25:51.170
<v Speaker 1>can set, like, the initial database or

00:25:51.515 --> 00:25:53.435
<v Speaker 1>where do you want Postgres to listen on

00:25:53.435 --> 00:25:55.755
<v Speaker 1>the auth and things like that. Yep. And

00:25:55.755 --> 00:25:57.435
<v Speaker 1>and I think there's also, like, about 30

00:25:57.435 --> 00:25:59.115
<v Speaker 1>of them, like, you know, Redis,

00:25:59.995 --> 00:26:01.675
<v Speaker 1>different, like, mail,

00:26:01.835 --> 00:26:03.915
<v Speaker 1>like, testing services and and and a lot

00:26:03.915 --> 00:26:05.355
<v Speaker 1>of really commonly used,

00:26:06.740 --> 00:26:08.260
<v Speaker 1>yeah, develop developer

00:26:08.420 --> 00:26:09.300
<v Speaker 1>processes

00:26:10.100 --> 00:26:12.580
<v Speaker 1>that you wanna have available

00:26:12.820 --> 00:26:13.940
<v Speaker 1>that are common,

00:26:14.180 --> 00:26:17.060
<v Speaker 1>like, besides your application server, for example. So

00:26:17.060 --> 00:26:19.780
<v Speaker 1>you would define, like, application server stuff as

00:26:19.780 --> 00:26:21.865
<v Speaker 1>a process because it's, like, your thing, And

00:26:21.865 --> 00:26:23.705
<v Speaker 1>then services are the the things that you

00:26:23.705 --> 00:26:26.104
<v Speaker 1>usually kind of, like, piggyback on.

00:26:27.465 --> 00:26:29.705
<v Speaker 1>And then I think, yeah, there's also pre

00:26:29.705 --> 00:26:31.385
<v Speaker 1>commit hooks. I'm a huge fan of pre

00:26:31.385 --> 00:26:33.065
<v Speaker 1>commit hooks. I think that they're,

00:26:33.544 --> 00:26:35.544
<v Speaker 1>like, hated mostly because, actually,

00:26:36.090 --> 00:26:38.009
<v Speaker 1>it's super hard to set them up.

00:26:39.210 --> 00:26:42.010
<v Speaker 1>So, like, makes that makes that part super

00:26:42.010 --> 00:26:42.570
<v Speaker 1>easy.

00:26:42.970 --> 00:26:44.970
<v Speaker 1>Another one is that I think that people

00:26:44.970 --> 00:26:47.370
<v Speaker 1>don't use them correctly. Like, you you wanna

00:26:47.370 --> 00:26:50.235
<v Speaker 1>have pre commit hooks locally that just run

00:26:50.235 --> 00:26:51.995
<v Speaker 1>on the files that you modified, and that

00:26:51.995 --> 00:26:53.675
<v Speaker 1>should be, like, super quick. So when you

00:26:53.675 --> 00:26:55.675
<v Speaker 1>commit something, it shouldn't take more than a

00:26:55.675 --> 00:26:57.115
<v Speaker 1>second for them to run.

00:26:58.395 --> 00:26:59.995
<v Speaker 1>So they kind of enforce,

00:26:59.995 --> 00:27:02.475
<v Speaker 1>like, formatting and and and linting and things

00:27:02.475 --> 00:27:03.115
<v Speaker 1>like that.

00:27:03.435 --> 00:27:04.475
<v Speaker 1>But then the CI,

00:27:05.100 --> 00:27:07.100
<v Speaker 1>here by default, if you enable any pre

00:27:07.100 --> 00:27:09.900
<v Speaker 1>commit hook, will already automatically run as part

00:27:09.900 --> 00:27:11.259
<v Speaker 1>of the Devenv test.

00:27:11.580 --> 00:27:13.100
<v Speaker 1>So that is, like, kind of, like, the

00:27:13.100 --> 00:27:15.980
<v Speaker 1>CI level where you want to enforce that

00:27:15.980 --> 00:27:18.380
<v Speaker 1>everything is really, like, across the whole code

00:27:18.380 --> 00:27:19.020
<v Speaker 1>base, like,

00:27:20.105 --> 00:27:22.185
<v Speaker 1>formatted. And if it's not, then that that

00:27:22.185 --> 00:27:24.025
<v Speaker 1>should kinda fail on your CI.

00:27:25.465 --> 00:27:27.865
<v Speaker 1>So I I think that's I don't know.

00:27:27.865 --> 00:27:29.145
<v Speaker 1>I I really like them, and there's a

00:27:29.145 --> 00:27:30.665
<v Speaker 1>lot of people using those. So I'm I'm

00:27:30.665 --> 00:27:31.465
<v Speaker 1>really happy that

00:27:32.230 --> 00:27:33.830
<v Speaker 1>to see that kind of adoption.

00:27:34.470 --> 00:27:35.109
<v Speaker 0>Nice.

00:27:35.350 --> 00:27:36.950
<v Speaker 0>Alright. There's a few things there I wanna

00:27:36.950 --> 00:27:39.429
<v Speaker 0>touch on. The first one, I'll do pre

00:27:39.429 --> 00:27:41.669
<v Speaker 0>commit hooks first just because that was the

00:27:41.669 --> 00:27:44.309
<v Speaker 0>last thing you mentioned. I love the idea

00:27:44.309 --> 00:27:46.549
<v Speaker 0>of Devenv automating that for me. The challenge

00:27:46.549 --> 00:27:49.655
<v Speaker 0>I've always had is that every project that

00:27:49.655 --> 00:27:51.415
<v Speaker 0>I do is in a mono repository,

00:27:51.415 --> 00:27:53.975
<v Speaker 0>and the commit hooks are kinda globally scoped

00:27:53.975 --> 00:27:55.815
<v Speaker 0>to that point. So I've never actually been

00:27:55.815 --> 00:27:57.175
<v Speaker 0>able to get them work in a way

00:27:57.175 --> 00:27:58.775
<v Speaker 0>that as a jumper on service use. It

00:27:58.775 --> 00:28:00.135
<v Speaker 0>only loads the hooks that I need for

00:28:00.135 --> 00:28:00.615
<v Speaker 0>that service.

00:28:02.149 --> 00:28:04.630
<v Speaker 0>So, yeah, I like the idea. I just

00:28:04.630 --> 00:28:06.789
<v Speaker 0>haven't seen an execution that works for me

00:28:06.789 --> 00:28:08.470
<v Speaker 0>personally yet. But then a lot of people

00:28:08.470 --> 00:28:10.950
<v Speaker 0>aren't building in mono repositories for the moment.

00:28:10.950 --> 00:28:13.190
<v Speaker 0>So maybe it's an an easy one for

00:28:13.190 --> 00:28:13.909
<v Speaker 0>people that are watching.

00:28:14.835 --> 00:28:15.955
<v Speaker 0>The other thing

00:28:16.275 --> 00:28:18.434
<v Speaker 0>sorry. Do you have something to say there

00:28:18.434 --> 00:28:19.875
<v Speaker 0>before I just waffle on for a bit

00:28:19.875 --> 00:28:22.034
<v Speaker 0>longer? No. I'm I'm just curious about the

00:28:22.034 --> 00:28:23.554
<v Speaker 1>use case. So, like, it's

00:28:23.875 --> 00:28:24.754
<v Speaker 1>you you

00:28:25.075 --> 00:28:26.595
<v Speaker 1>would like, so monorepo

00:28:26.835 --> 00:28:28.515
<v Speaker 1>okay. That means you have, like, kind of

00:28:28.515 --> 00:28:31.570
<v Speaker 1>sub sub projects and you you would want,

00:28:31.570 --> 00:28:34.370
<v Speaker 1>like, pre commit hooks defined per that third

00:28:34.370 --> 00:28:35.810
<v Speaker 1>project. Right? Kind of like

00:28:36.530 --> 00:28:38.130
<v Speaker 0>Yeah. I would need to take an EMVRC

00:28:38.130 --> 00:28:40.530
<v Speaker 0>that unloaded the hooks as I jumped around

00:28:40.530 --> 00:28:43.250
<v Speaker 0>and then only run them against that directory,

00:28:43.250 --> 00:28:46.415
<v Speaker 0>which is probably quite tedious and cumbersome. But

00:28:46.495 --> 00:28:46.975
<v Speaker 0>yeah.

00:28:48.655 --> 00:28:50.335
<v Speaker 0>That there's just a way that everything I

00:28:50.335 --> 00:28:52.255
<v Speaker 0>have is in one repository. My Rawkode Academy

00:28:52.255 --> 00:28:54.975
<v Speaker 0>repository is all in there. Dozens dozens of

00:28:54.975 --> 00:28:55.295
<v Speaker 0>services.

00:28:56.640 --> 00:28:58.320
<v Speaker 1>That's interesting. I I

00:28:59.120 --> 00:29:00.560
<v Speaker 1>yeah. We need to think about it. But

00:29:00.720 --> 00:29:02.080
<v Speaker 1>Look. I'll open an issue, and we can

00:29:02.160 --> 00:29:04.080
<v Speaker 0>we could have a chat. Yeah. That's that's

00:29:04.080 --> 00:29:05.280
<v Speaker 1>great. That's perfect.

00:29:05.920 --> 00:29:07.840
<v Speaker 0>The the thing that drove me to Devenv

00:29:07.840 --> 00:29:09.975
<v Speaker 0>is something that you also kind of, you

00:29:09.975 --> 00:29:11.495
<v Speaker 0>know, I think you focused on and you're

00:29:11.495 --> 00:29:13.255
<v Speaker 0>gonna run through this file, which is processes

00:29:13.255 --> 00:29:14.134
<v Speaker 0>and services.

00:29:14.455 --> 00:29:16.215
<v Speaker 0>Now the reason that that is what brought

00:29:16.215 --> 00:29:18.134
<v Speaker 0>me over is that this is something

00:29:18.375 --> 00:29:20.534
<v Speaker 0>I've done with containers since

00:29:20.615 --> 00:29:21.815
<v Speaker 0>2015.

00:29:21.815 --> 00:29:24.455
<v Speaker 0>Right? So nearly ten years now. And I've

00:29:24.455 --> 00:29:26.130
<v Speaker 0>written thousands.

00:29:26.130 --> 00:29:27.810
<v Speaker 0>I've got tens of thousands of Docker Compose

00:29:27.810 --> 00:29:28.850
<v Speaker 0>files in my life.

00:29:29.410 --> 00:29:32.530
<v Speaker 0>And they've worked. Right? But there's no composition.

00:29:32.530 --> 00:29:34.690
<v Speaker 0>I can't really define what Kafka or what

00:29:34.690 --> 00:29:38.130
<v Speaker 0>Redis, what MongoDB are, and then reuse them

00:29:38.130 --> 00:29:40.205
<v Speaker 0>and consume them. And there are tools that

00:29:40.205 --> 00:29:41.725
<v Speaker 0>that that try to solve this, but nothing's

00:29:41.725 --> 00:29:43.645
<v Speaker 0>ever really worked. And I always found that

00:29:43.645 --> 00:29:45.805
<v Speaker 0>I was rebuilding and reimplementing the same health

00:29:45.805 --> 00:29:48.045
<v Speaker 0>checks over and over again and copying and

00:29:48.045 --> 00:29:50.045
<v Speaker 0>pasting it from project to project.

00:29:50.525 --> 00:29:52.960
<v Speaker 0>When I seen Devenv does this through, you

00:29:52.960 --> 00:29:56.159
<v Speaker 0>know, services dot, you know, Kafka enable, etcetera,

00:29:56.159 --> 00:29:58.399
<v Speaker 0>I was like, woah. That that is really

00:29:58.399 --> 00:29:59.759
<v Speaker 0>cool. This is what we need.

00:30:00.159 --> 00:30:02.080
<v Speaker 0>But more importantly than that is that container

00:30:02.080 --> 00:30:04.320
<v Speaker 0>based workflows are really difficult for people that

00:30:04.320 --> 00:30:06.720
<v Speaker 0>aren't running on Linux because containers aren't native.

00:30:07.285 --> 00:30:09.765
<v Speaker 0>On Windows and on Mac, there's virtual machines,

00:30:10.005 --> 00:30:12.085
<v Speaker 0>and they've never really solved that fail syncing

00:30:12.085 --> 00:30:15.044
<v Speaker 0>thing for hot reload to actually work effectively.

00:30:15.205 --> 00:30:16.725
<v Speaker 0>And I think that this is why Next

00:30:16.725 --> 00:30:18.725
<v Speaker 0>is probably gonna be gaining a lot more

00:30:18.725 --> 00:30:20.245
<v Speaker 0>momentum, at least in the circles of in

00:30:20.245 --> 00:30:21.525
<v Speaker 0>the people that I speak to over the

00:30:21.525 --> 00:30:23.740
<v Speaker 0>last year, is that they need something that

00:30:23.740 --> 00:30:26.620
<v Speaker 0>truly is cross platform that runs on

00:30:27.020 --> 00:30:29.260
<v Speaker 0>Windows or Mac and Linux. And I don't

00:30:29.260 --> 00:30:31.260
<v Speaker 0>know if Next does run on on Windows,

00:30:31.260 --> 00:30:33.660
<v Speaker 0>but outside of WSL. Right? But it there

00:30:33.740 --> 00:30:35.740
<v Speaker 0>it certainly runs on Mac and it certainly

00:30:35.740 --> 00:30:38.575
<v Speaker 0>runs on Linux And giving people an a

00:30:38.575 --> 00:30:40.815
<v Speaker 0>development environment that is actually native to the

00:30:40.815 --> 00:30:42.895
<v Speaker 0>host, I think is really important. And the

00:30:42.895 --> 00:30:45.055
<v Speaker 0>fact that Devenv brings these services and processes

00:30:45.055 --> 00:30:47.295
<v Speaker 0>across does make a lot of things easier.

00:30:48.910 --> 00:30:50.590
<v Speaker 0>That that that is the sole thing that

00:30:50.590 --> 00:30:52.350
<v Speaker 0>won me over. And I think we definitely

00:30:52.350 --> 00:30:53.710
<v Speaker 0>need to show off some of the amazing

00:30:53.710 --> 00:30:55.710
<v Speaker 0>things you can do with services and processes

00:30:55.710 --> 00:30:57.390
<v Speaker 0>as part of our demo team. But I

00:30:57.390 --> 00:30:59.550
<v Speaker 0>know I just get a waffle there, but

00:30:59.550 --> 00:31:00.990
<v Speaker 0>I think it's so important. I think it

00:31:00.990 --> 00:31:02.725
<v Speaker 0>just makes life so much easier for so

00:31:02.725 --> 00:31:04.565
<v Speaker 0>many people or can make life so much

00:31:04.565 --> 00:31:05.924
<v Speaker 0>easier for so many people.

00:31:06.245 --> 00:31:08.004
<v Speaker 1>Oh, yeah. For sure. So, like,

00:31:09.445 --> 00:31:12.165
<v Speaker 1>what what's really interesting is that, like, one

00:31:12.165 --> 00:31:14.405
<v Speaker 1>of the major users of Devenv right now

00:31:14.405 --> 00:31:15.365
<v Speaker 1>from, like, my,

00:31:16.320 --> 00:31:16.960
<v Speaker 1>like,

00:31:17.519 --> 00:31:19.839
<v Speaker 1>how to say, nonstatistical

00:31:20.320 --> 00:31:21.119
<v Speaker 1>assessment

00:31:21.600 --> 00:31:23.840
<v Speaker 1>is that there's a lot of PHP users,

00:31:23.840 --> 00:31:24.559
<v Speaker 1>actually.

00:31:24.640 --> 00:31:25.679
<v Speaker 1>And that is because

00:31:26.159 --> 00:31:26.799
<v Speaker 1>they

00:31:26.960 --> 00:31:28.799
<v Speaker 1>they have a lot of knobs to churn.

00:31:28.799 --> 00:31:31.600
<v Speaker 1>For example, debug. Like, they they turn some

00:31:31.600 --> 00:31:34.855
<v Speaker 1>PHP stuff with debug on and sometimes not.

00:31:35.575 --> 00:31:36.775
<v Speaker 1>And a lot of these

00:31:37.175 --> 00:31:39.015
<v Speaker 1>container based Docker

00:31:39.015 --> 00:31:39.815
<v Speaker 1>style

00:31:40.375 --> 00:31:42.535
<v Speaker 1>builds, they just don't compose. Right? So as

00:31:42.535 --> 00:31:44.295
<v Speaker 1>soon as they saw the dev can can

00:31:44.295 --> 00:31:47.679
<v Speaker 1>allow them to, like, quickly switch versions, enable

00:31:47.679 --> 00:31:50.480
<v Speaker 1>debug for different processes and things like that,

00:31:50.480 --> 00:31:52.400
<v Speaker 1>they were like, okay. That was immediate sell.

00:31:52.400 --> 00:31:54.080
<v Speaker 1>And then on top of the fact that

00:31:54.159 --> 00:31:56.400
<v Speaker 1>Docker is super slow on Mac OS, so

00:31:56.400 --> 00:31:57.599
<v Speaker 1>a lot of developers,

00:31:57.600 --> 00:31:57.840
<v Speaker 1>like,

00:31:58.505 --> 00:32:00.985
<v Speaker 1>needs like, it's a huge penalty for them,

00:32:00.985 --> 00:32:03.145
<v Speaker 1>that fact that it runs natively. Yep. Those

00:32:03.145 --> 00:32:05.465
<v Speaker 1>two things just was an instant sell,

00:32:05.865 --> 00:32:07.625
<v Speaker 1>and and there's, like, really a lot of

00:32:07.625 --> 00:32:08.825
<v Speaker 1>PHP developers.

00:32:09.065 --> 00:32:10.745
<v Speaker 0>Yeah. And it's not just it's any it's

00:32:10.745 --> 00:32:12.665
<v Speaker 0>not just PHP. It's any interpreted language. We're

00:32:12.665 --> 00:32:14.960
<v Speaker 0>talking about Python, Ruby, PHP. You know. These

00:32:14.960 --> 00:32:17.679
<v Speaker 0>large projects have tens of thousands of files,

00:32:18.240 --> 00:32:20.160
<v Speaker 0>and syncing them to a VM is never

00:32:20.160 --> 00:32:22.800
<v Speaker 0>gonna really ever be fast. I know they're

00:32:22.800 --> 00:32:25.120
<v Speaker 0>trying, but it's been ten years and it's

00:32:25.120 --> 00:32:26.480
<v Speaker 0>not been a solved problem yet. So,

00:32:27.265 --> 00:32:28.865
<v Speaker 0>yeah, all of these people have a lot

00:32:28.865 --> 00:32:31.505
<v Speaker 0>of benefits from just running that Devenv and

00:32:31.505 --> 00:32:33.585
<v Speaker 0>then getting started with a local environment.

00:32:34.385 --> 00:32:36.225
<v Speaker 0>Now let's get back to actually making this

00:32:36.225 --> 00:32:37.024
<v Speaker 0>do something.

00:32:38.145 --> 00:32:40.705
<v Speaker 1>Let's try. Yeah. So we said this is

00:32:40.705 --> 00:32:41.745
<v Speaker 0>gonna be a Rust project.

00:32:44.210 --> 00:32:45.409
<v Speaker 0>I'm assuming

00:32:46.130 --> 00:32:47.570
<v Speaker 0>well, I do have cargo.

00:32:48.049 --> 00:32:50.770
<v Speaker 0>I can't remove cargo. Right? That's just something

00:32:50.770 --> 00:32:51.649
<v Speaker 0>I've got.

00:32:52.450 --> 00:32:54.529
<v Speaker 0>That was it rebuilding my system. And let's

00:32:54.529 --> 00:32:55.649
<v Speaker 0>just get a local cargo.

00:32:56.975 --> 00:32:58.255
<v Speaker 0>I don't even know how I'm gonna be

00:32:58.255 --> 00:33:00.255
<v Speaker 0>able to kinda show that. Right? Because this

00:33:00.255 --> 00:33:03.294
<v Speaker 0>is my next profile cargo. Mhmm. So let's

00:33:04.575 --> 00:33:07.455
<v Speaker 0>just change in fact, let's leave next because

00:33:07.455 --> 00:33:09.695
<v Speaker 0>I'm curious about what we can what that

00:33:10.095 --> 00:33:11.135
<v Speaker 0>we'll show people.

00:33:11.375 --> 00:33:12.655
<v Speaker 0>Let's just do Rust enable.

00:33:13.350 --> 00:33:14.070
<v Speaker 0>Mhmm.

00:33:15.670 --> 00:33:17.509
<v Speaker 0>And if I just hit return,

00:33:17.830 --> 00:33:20.390
<v Speaker 0>this is automatically going to reload and augment

00:33:20.390 --> 00:33:21.830
<v Speaker 0>my environment because

00:33:22.309 --> 00:33:24.710
<v Speaker 0>we have the ENVRC here, which tells it

00:33:24.710 --> 00:33:27.030
<v Speaker 0>to use Devenv as part of our process.

00:33:27.030 --> 00:33:29.815
<v Speaker 0>Right? Mhmm. Just by me hitting return, running

00:33:29.815 --> 00:33:31.414
<v Speaker 0>any command, c d ing out and into

00:33:31.414 --> 00:33:32.215
<v Speaker 0>this directory,

00:33:32.375 --> 00:33:34.054
<v Speaker 0>we can now see that it is fetching

00:33:34.054 --> 00:33:36.215
<v Speaker 0>next stuff and eventually rust stuff to give

00:33:36.215 --> 00:33:38.455
<v Speaker 0>us a the tools that we need to

00:33:38.455 --> 00:33:40.695
<v Speaker 0>successfully run and instantiate this project.

00:33:42.190 --> 00:33:44.110
<v Speaker 0>Now while that runs, maybe you could give

00:33:44.110 --> 00:33:46.350
<v Speaker 0>us a little bit of information on,

00:33:46.670 --> 00:33:48.750
<v Speaker 0>you know, when I enable next, enable Rust,

00:33:48.750 --> 00:33:50.110
<v Speaker 0>what is Devenv?

00:33:50.110 --> 00:33:51.790
<v Speaker 0>What is it establishing? What is it doing

00:33:51.790 --> 00:33:52.190
<v Speaker 0>for me?

00:33:53.485 --> 00:33:54.364
<v Speaker 1>Yeah. So,

00:33:54.764 --> 00:33:56.524
<v Speaker 1>like, a a lot of times when you

00:33:56.524 --> 00:33:59.644
<v Speaker 1>develop for a specific language, you kind of

00:33:59.644 --> 00:34:00.844
<v Speaker 1>need to look up,

00:34:01.245 --> 00:34:03.725
<v Speaker 1>you know, what compiler do I need, what,

00:34:03.725 --> 00:34:06.524
<v Speaker 1>like like, debugger do I need, maybe, you

00:34:06.524 --> 00:34:09.139
<v Speaker 1>know, some profiling tools, language server support, things

00:34:09.139 --> 00:34:11.940
<v Speaker 1>like that. So Devenv has this philosophy of

00:34:12.179 --> 00:34:14.659
<v Speaker 1>kind of enabling all of that by default.

00:34:14.659 --> 00:34:16.659
<v Speaker 1>So it's, like, not full batteries in terms

00:34:16.659 --> 00:34:19.140
<v Speaker 1>of, like, everything everything, but it tries to

00:34:19.380 --> 00:34:21.139
<v Speaker 1>to kind of balance that out and says

00:34:21.139 --> 00:34:23.815
<v Speaker 1>that, like, anything that you would potentially,

00:34:23.815 --> 00:34:25.815
<v Speaker 1>80% of the time use, we kind of

00:34:25.815 --> 00:34:26.775
<v Speaker 1>enable it.

00:34:27.015 --> 00:34:29.495
<v Speaker 1>And then you have knobs to potentially disable

00:34:29.495 --> 00:34:30.055
<v Speaker 1>that

00:34:30.375 --> 00:34:33.735
<v Speaker 1>if you need to. But, like, I think

00:34:34.610 --> 00:34:37.409
<v Speaker 1>yeah. This is, a design choice. Right? Either

00:34:37.409 --> 00:34:39.090
<v Speaker 1>you go super minimal and then you have

00:34:39.090 --> 00:34:41.570
<v Speaker 1>to enable each thing. But I think, like,

00:34:41.570 --> 00:34:44.770
<v Speaker 1>downloading those few megabytes of each tool is,

00:34:44.929 --> 00:34:46.370
<v Speaker 1>like, quite

00:34:46.824 --> 00:34:48.745
<v Speaker 1>not a big price to pay. I mean,

00:34:48.745 --> 00:34:50.745
<v Speaker 1>at least us, we're privileged to live in

00:34:50.745 --> 00:34:51.864
<v Speaker 1>fiber optics

00:34:52.425 --> 00:34:55.545
<v Speaker 1>or or good Internet, but, hopefully, everyone

00:34:55.625 --> 00:34:57.545
<v Speaker 1>will be at that you know, is

00:34:57.945 --> 00:34:59.625
<v Speaker 1>going towards that in the world.

00:34:59.945 --> 00:35:01.839
<v Speaker 1>So I think that that's kinda like the

00:35:01.839 --> 00:35:02.960
<v Speaker 1>design philosophy.

00:35:04.240 --> 00:35:06.560
<v Speaker 1>And and we are, like, trying to for

00:35:06.560 --> 00:35:09.760
<v Speaker 1>example, right now, Krishna is working on adding

00:35:09.760 --> 00:35:11.599
<v Speaker 1>language support. So, like, you will be able

00:35:11.599 --> 00:35:12.640
<v Speaker 1>to get language

00:35:12.960 --> 00:35:15.375
<v Speaker 1>sorry, language server support. So you will get

00:35:15.375 --> 00:35:16.495
<v Speaker 1>for each language

00:35:16.655 --> 00:35:19.135
<v Speaker 1>already that preconfigured and, you know, your editor

00:35:19.135 --> 00:35:21.055
<v Speaker 1>just picks it up and things like that.

00:35:22.415 --> 00:35:23.055
<v Speaker 1>So,

00:35:23.535 --> 00:35:25.295
<v Speaker 1>yeah, that's, like, the simple then

00:35:25.695 --> 00:35:27.375
<v Speaker 1>in for example, in Rust case,

00:35:27.970 --> 00:35:29.810
<v Speaker 1>you have a bunch of options. You can

00:35:29.810 --> 00:35:31.650
<v Speaker 1>pick, you know, the tar you can set

00:35:31.650 --> 00:35:33.330
<v Speaker 1>the targets. You'd be like I don't know.

00:35:33.330 --> 00:35:35.890
<v Speaker 1>You wanna target WASM. We we do that.

00:35:35.890 --> 00:35:36.850
<v Speaker 1>You wanna,

00:35:38.210 --> 00:35:39.970
<v Speaker 1>like, pick a different channel. Let's say you

00:35:39.970 --> 00:35:42.370
<v Speaker 1>want Nike Rust. Right? We we have support

00:35:42.370 --> 00:35:42.690
<v Speaker 1>for that.

00:35:43.494 --> 00:35:45.575
<v Speaker 1>So you can kind of, like, tweak your

00:35:45.575 --> 00:35:46.535
<v Speaker 1>way into

00:35:47.335 --> 00:35:49.335
<v Speaker 1>how you want that to be from our

00:35:49.335 --> 00:35:50.775
<v Speaker 1>defaults that we provide.

00:35:51.415 --> 00:35:53.734
<v Speaker 0>Yeah. So let's dive into that a little

00:35:53.734 --> 00:35:55.335
<v Speaker 0>bit. No. I don't have fiber at my

00:35:55.335 --> 00:35:57.415
<v Speaker 0>new office yet. I am waiting very patiently.

00:35:59.170 --> 00:36:00.610
<v Speaker 0>Have to make my It's quite

00:36:01.890 --> 00:36:03.330
<v Speaker 1>a lot. But if we go to this

00:36:03.330 --> 00:36:04.530
<v Speaker 0>languages page,

00:36:04.770 --> 00:36:06.930
<v Speaker 0>for a start, it just lists everything.

00:36:07.570 --> 00:36:09.490
<v Speaker 0>But if we wanna find the options for

00:36:09.490 --> 00:36:12.210
<v Speaker 0>languages, this is gonna take us to here.

00:36:12.885 --> 00:36:13.525
<v Speaker 0>Mhmm.

00:36:13.845 --> 00:36:15.845
<v Speaker 0>So if people do want to tweak and

00:36:15.845 --> 00:36:17.365
<v Speaker 0>configure what they get,

00:36:18.165 --> 00:36:19.845
<v Speaker 0>we can scroll down. Let's find the Rust

00:36:19.845 --> 00:36:20.645
<v Speaker 0>example.

00:36:21.045 --> 00:36:22.885
<v Speaker 0>Quite a lot of PHP stuff there, actually.

00:36:22.885 --> 00:36:24.245
<v Speaker 0>Maybe we should've done that.

00:36:24.805 --> 00:36:25.925
<v Speaker 0>But let's find Rust.

00:36:27.580 --> 00:36:29.820
<v Speaker 0>So we can have enable. We can change

00:36:29.820 --> 00:36:31.340
<v Speaker 0>the channel as you said.

00:36:31.740 --> 00:36:33.740
<v Speaker 0>We can add components. So by default, we're

00:36:33.740 --> 00:36:36.460
<v Speaker 0>actually getting the compiler. We're getting cargo, clippy,

00:36:36.460 --> 00:36:38.940
<v Speaker 0>Rust format, and Rust analyzer, which is fantastic.

00:36:40.305 --> 00:36:43.105
<v Speaker 0>And then there's Rust flags, molds, targets, etcetera.

00:36:43.105 --> 00:36:44.945
<v Speaker 0>So, yeah, everything that people need to be

00:36:44.945 --> 00:36:46.545
<v Speaker 0>able to tweak and configure the way this

00:36:46.545 --> 00:36:48.225
<v Speaker 0>this language support works,

00:36:48.385 --> 00:36:50.065
<v Speaker 0>you could just come to this page

00:36:50.705 --> 00:36:52.305
<v Speaker 0>and even just go through to the source

00:36:52.305 --> 00:36:53.665
<v Speaker 0>if you wanna take a look at the

00:36:53.665 --> 00:36:55.800
<v Speaker 0>next that makes this happen. And this is

00:36:55.800 --> 00:36:56.920
<v Speaker 0>one of the things that I thought was

00:36:56.920 --> 00:36:59.720
<v Speaker 0>amazing when I stumbled across Devenv and started

00:36:59.720 --> 00:37:02.600
<v Speaker 0>using it. Is that, like, 90% of it

00:37:02.600 --> 00:37:04.920
<v Speaker 0>is just next code too. Right? Like, if

00:37:04.920 --> 00:37:06.760
<v Speaker 0>we go to the the homepage, it's like,

00:37:07.005 --> 00:37:09.005
<v Speaker 0>yeah, you got your 20% Rust, but most

00:37:09.005 --> 00:37:11.644
<v Speaker 0>of this is just next code that facilitates

00:37:11.644 --> 00:37:13.565
<v Speaker 0>that. I I don't know if it's templating

00:37:13.565 --> 00:37:14.925
<v Speaker 0>or spec or whatever,

00:37:15.484 --> 00:37:17.404
<v Speaker 0>but yeah. So this is a good way

00:37:17.404 --> 00:37:19.005
<v Speaker 0>for people to get familiar with Next by

00:37:19.005 --> 00:37:21.164
<v Speaker 0>taking a look at the components, languages, processes,

00:37:21.164 --> 00:37:22.765
<v Speaker 0>and services that you provide

00:37:23.360 --> 00:37:24.400
<v Speaker 0>I support.

00:37:25.360 --> 00:37:27.440
<v Speaker 1>Yeah. That's the beauty of next. It it

00:37:27.440 --> 00:37:30.560
<v Speaker 1>really does. So, like, Devenv, the way I

00:37:30.560 --> 00:37:32.560
<v Speaker 1>say it is, like, we took our expertise

00:37:32.560 --> 00:37:34.000
<v Speaker 1>of how you should set up things and

00:37:34.000 --> 00:37:36.240
<v Speaker 1>we kind of, like, obstructed that away. Right?

00:37:36.240 --> 00:37:37.120
<v Speaker 1>Which is the main

00:37:38.255 --> 00:37:40.415
<v Speaker 1>pain point of many people who came to

00:37:40.415 --> 00:37:42.175
<v Speaker 1>Nick's. Was like, oh my god. It's it's

00:37:42.175 --> 00:37:44.575
<v Speaker 1>difficult to to pull everything together, and you

00:37:44.575 --> 00:37:46.015
<v Speaker 1>need to be a Nick's expert.

00:37:46.175 --> 00:37:47.615
<v Speaker 1>And it's like, no. It doesn't have to

00:37:47.615 --> 00:37:49.215
<v Speaker 1>be that way. Right? It's just about

00:37:50.530 --> 00:37:53.330
<v Speaker 1>a pattern called convention over configuration,

00:37:53.330 --> 00:37:54.850
<v Speaker 1>which is, like, you know, by default, you

00:37:54.850 --> 00:37:56.850
<v Speaker 1>get a really good set of things, and

00:37:56.850 --> 00:37:58.210
<v Speaker 1>then you kind of configure

00:37:58.690 --> 00:38:01.650
<v Speaker 1>your way into your desired path, right, rather

00:38:01.650 --> 00:38:03.970
<v Speaker 1>than you get a blank slate

00:38:04.050 --> 00:38:05.410
<v Speaker 1>and then, you know, you need to build

00:38:05.410 --> 00:38:06.130
<v Speaker 1>everything yourself.

00:38:07.385 --> 00:38:09.224
<v Speaker 1>So, like, in the past, you know, the

00:38:09.224 --> 00:38:10.105
<v Speaker 1>way I see it, there was a lot

00:38:10.105 --> 00:38:12.505
<v Speaker 1>of early adopters of NICs, like me, who

00:38:12.505 --> 00:38:15.145
<v Speaker 1>were super enthusiastic to hack their way through.

00:38:15.385 --> 00:38:17.465
<v Speaker 1>But now people just they don't wanna learn

00:38:17.465 --> 00:38:19.465
<v Speaker 1>NICs. Right? What they want is, like, a

00:38:19.465 --> 00:38:22.779
<v Speaker 1>developer environment and do their work. So this

00:38:22.779 --> 00:38:23.580
<v Speaker 1>is where

00:38:24.140 --> 00:38:25.579
<v Speaker 1>this is kind of, like, the gap that

00:38:25.579 --> 00:38:27.420
<v Speaker 1>I see we're trying to fill in here.

00:38:27.579 --> 00:38:28.220
<v Speaker 0>Nice.

00:38:29.500 --> 00:38:32.380
<v Speaker 0>Alright. Well, my Internet caught up. And if

00:38:32.380 --> 00:38:33.980
<v Speaker 0>I run which cargo again,

00:38:34.815 --> 00:38:37.214
<v Speaker 0>we now have a next store path for

00:38:37.214 --> 00:38:39.055
<v Speaker 0>the Devenv version of this.

00:38:39.375 --> 00:38:41.135
<v Speaker 0>And I just wanna kinda

00:38:41.855 --> 00:38:44.575
<v Speaker 0>highlight this. If if I jump out

00:38:45.135 --> 00:38:46.734
<v Speaker 0>from Which Cargo, we go back to the

00:38:46.734 --> 00:38:47.455
<v Speaker 0>original.

00:38:47.775 --> 00:38:48.974
<v Speaker 0>And if I jump back in,

00:38:50.559 --> 00:38:52.000
<v Speaker 0>we go back to the store. So I

00:38:52.000 --> 00:38:52.800
<v Speaker 0>love this

00:38:53.039 --> 00:38:55.359
<v Speaker 0>loading, unloading as I move around, and I'm

00:38:55.359 --> 00:38:57.119
<v Speaker 0>only getting the tools for this project that

00:38:57.119 --> 00:38:57.840
<v Speaker 0>I need.

00:39:00.240 --> 00:39:02.880
<v Speaker 0>Sweet. So let's get some Rust code.

00:39:04.835 --> 00:39:06.355
<v Speaker 0>Cargo in it.

00:39:08.275 --> 00:39:09.075
<v Speaker 0>And

00:39:10.275 --> 00:39:11.234
<v Speaker 0>let's see.

00:39:11.474 --> 00:39:13.075
<v Speaker 0>We have hello world.

00:39:13.474 --> 00:39:14.115
<v Speaker 0>Now

00:39:14.674 --> 00:39:17.315
<v Speaker 0>we could just use Cargo. Right? We could

00:39:17.315 --> 00:39:18.835
<v Speaker 0>do our build. We could run the project,

00:39:20.130 --> 00:39:23.250
<v Speaker 0>but we wanna lean into more Devenv features.

00:39:23.250 --> 00:39:25.809
<v Speaker 0>So, again, in your experience and and what

00:39:25.809 --> 00:39:27.410
<v Speaker 0>you do, what what's your next steps? How

00:39:27.410 --> 00:39:29.089
<v Speaker 0>are we looking at and bringing in more

00:39:29.089 --> 00:39:32.130
<v Speaker 0>of Devenv's convenience to people as they adopt

00:39:32.130 --> 00:39:32.770
<v Speaker 0>in their project?

00:39:34.265 --> 00:39:35.705
<v Speaker 1>Yeah. So I think it would be two

00:39:35.705 --> 00:39:38.265
<v Speaker 1>parts. One is, like, you would configure Rust.

00:39:38.265 --> 00:39:40.345
<v Speaker 1>Let's say you want to use mightly

00:39:40.345 --> 00:39:42.825
<v Speaker 1>channel because, you know, you're using some some

00:39:42.825 --> 00:39:45.705
<v Speaker 1>features from from there. So you would first,

00:39:45.705 --> 00:39:48.480
<v Speaker 1>like, explore what what options we support for

00:39:48.480 --> 00:39:51.600
<v Speaker 1>for us or, you know, even add like,

00:39:51.600 --> 00:39:53.680
<v Speaker 1>it's quite easy to add, like, new new

00:39:53.680 --> 00:39:54.720
<v Speaker 1>configurations

00:39:55.360 --> 00:39:56.320
<v Speaker 1>options.

00:39:57.600 --> 00:39:59.440
<v Speaker 1>Well, that's a bit advanced, so that's maybe

00:39:59.440 --> 00:40:01.385
<v Speaker 1>later on. But the the second part would

00:40:01.385 --> 00:40:03.865
<v Speaker 1>be to define the processes. You know? Like,

00:40:04.345 --> 00:40:04.985
<v Speaker 1>usually

00:40:05.545 --> 00:40:07.785
<v Speaker 1>like, a simple way to is just a

00:40:07.785 --> 00:40:10.105
<v Speaker 1>simple watch. You know? Watch this directory for

00:40:10.105 --> 00:40:13.305
<v Speaker 1>changes. Like, you can add, like there's, like,

00:40:13.305 --> 00:40:15.305
<v Speaker 1>a ton of watcher programs.

00:40:15.740 --> 00:40:18.380
<v Speaker 1>And then when something changes, execute something. Right?

00:40:18.380 --> 00:40:20.540
<v Speaker 1>That's, a very simple process that

00:40:20.700 --> 00:40:21.180
<v Speaker 1>Yeah.

00:40:22.140 --> 00:40:24.299
<v Speaker 1>I don't know. For example, you have Tailwind

00:40:24.299 --> 00:40:26.460
<v Speaker 1>and you want compile CSS. Right? So every

00:40:26.460 --> 00:40:27.820
<v Speaker 1>time that Tailwind

00:40:27.980 --> 00:40:29.819
<v Speaker 1>file changes, you compile the CSS.

00:40:31.134 --> 00:40:34.974
<v Speaker 1>Or, like, you would run a cargo watch,

00:40:35.134 --> 00:40:37.295
<v Speaker 1>for example, right, in as a process

00:40:37.934 --> 00:40:39.454
<v Speaker 1>as a development process.

00:40:40.494 --> 00:40:42.095
<v Speaker 1>That those would be the first two steps,

00:40:42.095 --> 00:40:43.295
<v Speaker 1>I think. And then the the third one

00:40:43.295 --> 00:40:45.055
<v Speaker 1>would be the pre commit hooks, in my

00:40:45.055 --> 00:40:47.840
<v Speaker 1>opinion, is to to, like, enable clippy,

00:40:48.000 --> 00:40:48.800
<v Speaker 1>enable,

00:40:49.440 --> 00:40:52.080
<v Speaker 1>you know, format Rust format or and things

00:40:52.080 --> 00:40:52.720
<v Speaker 1>like that.

00:40:54.240 --> 00:40:55.760
<v Speaker 0>Okay. Let's try and go through each of

00:40:55.760 --> 00:40:58.000
<v Speaker 0>those one at a time. So

00:40:58.320 --> 00:40:59.040
<v Speaker 0>right now,

00:41:00.835 --> 00:41:02.595
<v Speaker 0>let's try and set up the cargo watch.

00:41:02.595 --> 00:41:03.875
<v Speaker 0>So every time I change my main to

00:41:03.875 --> 00:41:06.835
<v Speaker 0>r s, it's gonna recompile our project for

00:41:06.835 --> 00:41:08.675
<v Speaker 0>us. I think that would be a good

00:41:08.675 --> 00:41:10.995
<v Speaker 0>step. So is this something we're gonna add

00:41:10.995 --> 00:41:12.995
<v Speaker 0>to to enter shell? Do we do a

00:41:12.995 --> 00:41:14.515
<v Speaker 0>different way? How would you set that up?

00:41:15.339 --> 00:41:17.180
<v Speaker 1>The cargo watch, I would just add it

00:41:17.180 --> 00:41:19.180
<v Speaker 1>to at the top when you have processes.

00:41:19.500 --> 00:41:20.380
<v Speaker 1>So maybe

00:41:20.700 --> 00:41:22.860
<v Speaker 1>sorry. At the bottom. Oh, yes. Left,

00:41:24.060 --> 00:41:24.220
<v Speaker 1>right.

00:41:27.115 --> 00:41:28.795
<v Speaker 1>Yeah. So I don't know. Here, you just

00:41:28.795 --> 00:41:30.635
<v Speaker 1>pick a name you want, like cargo watch

00:41:30.635 --> 00:41:31.595
<v Speaker 1>and here.

00:41:33.355 --> 00:41:35.435
<v Speaker 0>And I I don't think cargo ships the

00:41:35.435 --> 00:41:37.355
<v Speaker 0>watch by default, does it? Oh, it doesn't?

00:41:37.355 --> 00:41:38.075
<v Speaker 1>Okay. Oh, it

00:41:38.875 --> 00:41:40.475
<v Speaker 0>yeah. So we have to add that as

00:41:40.475 --> 00:41:41.355
<v Speaker 0>a package, don't we?

00:41:42.140 --> 00:41:43.100
<v Speaker 1>Uh-huh.

00:41:43.340 --> 00:41:44.700
<v Speaker 1>Okay.

00:41:46.700 --> 00:41:48.940
<v Speaker 1>That's a I have no idea how that's

00:41:48.940 --> 00:41:52.140
<v Speaker 1>done. I guess packages dot cargo minus watch

00:41:52.220 --> 00:41:53.260
<v Speaker 1>would be my

00:41:53.740 --> 00:41:54.380
<v Speaker 0>Yeah.

00:41:55.740 --> 00:41:56.300
<v Speaker 0>Let's see.

00:41:59.305 --> 00:42:00.265
<v Speaker 1>I think you just

00:42:03.145 --> 00:42:05.625
<v Speaker 1>yeah. There is legacy packages. Yeah. I think

00:42:05.625 --> 00:42:06.425
<v Speaker 1>you just

00:42:07.785 --> 00:42:10.345
<v Speaker 0>Is it gonna be, like, a cargo Cargo

00:42:10.345 --> 00:42:11.385
<v Speaker 1>minus watch. Packages?

00:42:12.220 --> 00:42:13.820
<v Speaker 0>It should No. I think just cargo minus

00:42:13.820 --> 00:42:16.220
<v Speaker 1>watch should be. Okay. I don't know if

00:42:16.220 --> 00:42:19.660
<v Speaker 1>that works well together, but probably it does.

00:42:22.540 --> 00:42:23.500
<v Speaker 1>Let's try.

00:42:24.860 --> 00:42:26.940
<v Speaker 1>I have to admit that I I don't

00:42:27.315 --> 00:42:29.795
<v Speaker 1>I don't use because I have language server

00:42:29.795 --> 00:42:32.035
<v Speaker 1>support in my editor, so I I usually

00:42:32.035 --> 00:42:32.995
<v Speaker 1>don't use it.

00:42:33.875 --> 00:42:36.435
<v Speaker 0>Alright. So what we've done here,

00:42:37.234 --> 00:42:38.994
<v Speaker 0>added the package that we need,

00:42:39.670 --> 00:42:42.710
<v Speaker 0>created a process. Now processes are only executed

00:42:42.710 --> 00:42:44.550
<v Speaker 0>when we spin

00:42:44.550 --> 00:42:47.350
<v Speaker 0>up the development environment. Is that correct? Mhmm.

00:42:47.350 --> 00:42:49.990
<v Speaker 1>Yeah. This is like the run processes command

00:42:49.990 --> 00:42:50.950
<v Speaker 1>kind of work,

00:42:51.750 --> 00:42:54.390
<v Speaker 1>which is heavily inspired by the the proc

00:42:54.390 --> 00:42:54.710
<v Speaker 1>file.

00:42:57.985 --> 00:42:58.785
<v Speaker 0>Alright.

00:43:01.825 --> 00:43:03.665
<v Speaker 1>So what you see here is is some

00:43:03.745 --> 00:43:06.145
<v Speaker 1>a project called, process compose,

00:43:06.145 --> 00:43:07.985
<v Speaker 1>which I found is

00:43:08.799 --> 00:43:10.880
<v Speaker 1>one of the best tools for this, like,

00:43:10.880 --> 00:43:12.480
<v Speaker 1>kind of development environments

00:43:12.480 --> 00:43:13.440
<v Speaker 1>processes

00:43:14.240 --> 00:43:16.000
<v Speaker 1>preview. So at the top, you just see

00:43:16.000 --> 00:43:17.760
<v Speaker 1>a list of processes that you can click.

00:43:17.760 --> 00:43:19.039
<v Speaker 1>I mean, now we have only one, so

00:43:19.039 --> 00:43:21.455
<v Speaker 1>there's not much to to go. But then

00:43:21.455 --> 00:43:23.775
<v Speaker 1>as you kinda switch up and down or

00:43:23.775 --> 00:43:24.975
<v Speaker 1>whatever or

00:43:25.535 --> 00:43:27.135
<v Speaker 1>with with the mouse, then you at the

00:43:27.135 --> 00:43:29.295
<v Speaker 1>bottom, the locks kind of change so you

00:43:29.295 --> 00:43:31.935
<v Speaker 1>can kind of see locks for each process.

00:43:32.175 --> 00:43:34.735
<v Speaker 1>And you can, like, control r to restart

00:43:34.735 --> 00:43:36.500
<v Speaker 1>it and things like that. So it's it's

00:43:36.500 --> 00:43:37.460
<v Speaker 1>really convenient.

00:43:38.099 --> 00:43:40.099
<v Speaker 1>Takes a bit of learning as any tool,

00:43:40.099 --> 00:43:42.180
<v Speaker 1>but I found it's the best one. You

00:43:42.180 --> 00:43:44.740
<v Speaker 1>can also turn on different ones like Overmind,

00:43:44.740 --> 00:43:46.420
<v Speaker 1>which I think is like a TMax

00:43:46.660 --> 00:43:47.460
<v Speaker 1>based

00:43:47.619 --> 00:43:50.579
<v Speaker 1>or Honcho, which is like a implementation

00:43:50.579 --> 00:43:51.220
<v Speaker 1>of Foreman.

00:43:51.714 --> 00:43:52.595
<v Speaker 1>And, potentially,

00:43:52.915 --> 00:43:54.915
<v Speaker 1>any can be implemented as a way to

00:43:54.915 --> 00:43:55.955
<v Speaker 1>to run this.

00:43:56.835 --> 00:43:57.555
<v Speaker 0>Nice.

00:43:58.115 --> 00:43:59.875
<v Speaker 0>But, yeah, this is a good default one.

00:44:00.194 --> 00:44:01.235
<v Speaker 0>Make a change.

00:44:02.835 --> 00:44:05.555
<v Speaker 0>Say hello world with two exclamation marks,

00:44:05.954 --> 00:44:07.474
<v Speaker 0>and there we go. We get our

00:44:08.090 --> 00:44:10.330
<v Speaker 0>thing running in the background. So that's pretty

00:44:10.330 --> 00:44:12.330
<v Speaker 0>neat. Nice easy way to get started adding

00:44:12.330 --> 00:44:13.610
<v Speaker 0>a custom process.

00:44:13.770 --> 00:44:16.890
<v Speaker 0>But it's not just custom processes. Right? If

00:44:16.890 --> 00:44:18.810
<v Speaker 0>we come back to our devhunt.next,

00:44:18.890 --> 00:44:20.090
<v Speaker 0>we have these

00:44:20.890 --> 00:44:23.130
<v Speaker 0>kind of not managed, but provided

00:44:23.765 --> 00:44:24.645
<v Speaker 0>services.

00:44:25.685 --> 00:44:28.645
<v Speaker 1>Exactly. Yeah. So So here you see the

00:44:28.645 --> 00:44:31.605
<v Speaker 1>the full list of what's currently supported.

00:44:34.245 --> 00:44:36.245
<v Speaker 0>Yeah. I mean, the fact that temporal is

00:44:36.245 --> 00:44:38.165
<v Speaker 0>here, I have struggled many times to set

00:44:38.165 --> 00:44:41.420
<v Speaker 0>up temporal development environments. And for Devenv, it's

00:44:41.420 --> 00:44:44.300
<v Speaker 0>a one lane flag, which is great. So

00:44:45.339 --> 00:44:47.819
<v Speaker 0>Yeah. So it's you know, each of this

00:44:47.819 --> 00:44:50.300
<v Speaker 1>is a lot of time spared

00:44:51.260 --> 00:44:53.740
<v Speaker 1>for yeah. And even, like, you know, I

00:44:53.740 --> 00:44:55.715
<v Speaker 1>I like that like, you know, if you

00:44:55.715 --> 00:44:57.715
<v Speaker 1>use Docker, you always have this

00:44:58.035 --> 00:45:00.515
<v Speaker 1>paradox of choice. Right? You wanna run Postgres

00:45:00.515 --> 00:45:02.115
<v Speaker 1>or, you know, whatever, and then you go

00:45:02.115 --> 00:45:03.715
<v Speaker 1>to Docker Hub, and now you need to

00:45:03.715 --> 00:45:06.195
<v Speaker 1>pick which one you want to run.

00:45:06.755 --> 00:45:09.235
<v Speaker 1>I mean, this is getting better by by

00:45:08.880 --> 00:45:10.720
<v Speaker 1>creating more official ones, but I I find

00:45:10.720 --> 00:45:12.400
<v Speaker 1>that it's nice here. You just have one,

00:45:12.400 --> 00:45:13.200
<v Speaker 1>and that's it.

00:45:14.559 --> 00:45:16.319
<v Speaker 0>Yeah. But even with the official ones, you

00:45:16.319 --> 00:45:18.400
<v Speaker 0>still have to learn what environment variables you

00:45:18.400 --> 00:45:20.319
<v Speaker 0>need. You have to work out the liveness

00:45:20.319 --> 00:45:21.680
<v Speaker 0>probes and all of that, and

00:45:22.644 --> 00:45:24.484
<v Speaker 0>there's none of that that is specifically needed

00:45:24.484 --> 00:45:26.964
<v Speaker 0>here. So let's just enable this one.

00:45:27.845 --> 00:45:30.484
<v Speaker 0>I'm trying not to pull down too much

00:45:30.484 --> 00:45:32.964
<v Speaker 0>with my 50 meg connection at the moment,

00:45:32.964 --> 00:45:34.164
<v Speaker 0>but let's try to be

00:45:34.590 --> 00:45:36.270
<v Speaker 0>Postgres and Temporal.

00:45:36.510 --> 00:45:38.590
<v Speaker 0>And for this, I'm just going to do

00:45:39.470 --> 00:45:40.270
<v Speaker 0>quit,

00:45:42.350 --> 00:45:44.750
<v Speaker 0>and it's already reevaluating my environment.

00:45:45.870 --> 00:45:47.470
<v Speaker 1>And here we go. Alright. It's not too

00:45:47.470 --> 00:45:47.710
<v Speaker 1>bad.

00:45:49.075 --> 00:45:50.835
<v Speaker 0>Yeah. It shouldn't take too long.

00:45:51.635 --> 00:45:54.515
<v Speaker 0>Well, that does that. I guess we could

00:45:54.995 --> 00:45:56.035
<v Speaker 0>add a

00:45:56.995 --> 00:45:58.915
<v Speaker 0>well, we've got shells and we've got tests.

00:45:58.915 --> 00:46:01.395
<v Speaker 0>Right? So Mhmm. And we've this custom script

00:46:01.395 --> 00:46:02.995
<v Speaker 0>here. So this would be another cool thing

00:46:02.995 --> 00:46:03.955
<v Speaker 0>to show people, I think.

00:46:05.160 --> 00:46:08.920
<v Speaker 0>Let's add a script to build our project.

00:46:09.800 --> 00:46:11.320
<v Speaker 0>Mhmm. Build.

00:46:11.480 --> 00:46:12.120
<v Speaker 0>Exact.

00:46:12.839 --> 00:46:15.960
<v Speaker 0>And this could just be cargo build.

00:46:16.440 --> 00:46:17.400
<v Speaker 0>And then

00:46:17.905 --> 00:46:19.985
<v Speaker 0>and the shell, we can just,

00:46:20.705 --> 00:46:22.545
<v Speaker 0>yeah, we can just do something something like

00:46:22.545 --> 00:46:23.105
<v Speaker 0>this.

00:46:24.145 --> 00:46:26.705
<v Speaker 1>Here, into test, you could run cargo test,

00:46:26.705 --> 00:46:28.465
<v Speaker 1>for example. Right? That would be

00:46:29.505 --> 00:46:31.200
<v Speaker 0>Yeah. I mean, it should tell us we

00:46:31.200 --> 00:46:33.360
<v Speaker 0>have, you know, zero tests, but that's okay.

00:46:34.000 --> 00:46:35.200
<v Speaker 1>Yeah. I mean yeah.

00:46:35.680 --> 00:46:37.520
<v Speaker 0>And let's just add an emoji because everything

00:46:37.520 --> 00:46:40.160
<v Speaker 0>is better with an emoji. Right? So I

00:46:40.160 --> 00:46:41.920
<v Speaker 0>actually don't know how to type emojis

00:46:41.920 --> 00:46:43.120
<v Speaker 0>on my Linux machine.

00:46:44.175 --> 00:46:45.775
<v Speaker 0>On Mac, I use Raycast, but I don't

00:46:45.775 --> 00:46:47.455
<v Speaker 0>think I have anything configured for that here.

00:46:47.455 --> 00:46:48.895
<v Speaker 0>So we're going old school.

00:46:50.735 --> 00:46:53.375
<v Speaker 0>Okay. So let's just reload this one more

00:46:53.375 --> 00:46:54.975
<v Speaker 0>time. We have an enter key. This will

00:46:54.975 --> 00:46:57.180
<v Speaker 0>set up our new script, our enter shell,

00:46:57.180 --> 00:46:59.020
<v Speaker 0>and our enter test, plus we could take

00:46:59.020 --> 00:47:00.540
<v Speaker 0>a look at the new services we now

00:47:00.540 --> 00:47:01.740
<v Speaker 0>have available. So

00:47:04.460 --> 00:47:06.780
<v Speaker 0>let's start with the

00:47:07.260 --> 00:47:07.820
<v Speaker 0>scripts.

00:47:08.755 --> 00:47:10.835
<v Speaker 0>We added one called build.

00:47:11.555 --> 00:47:13.635
<v Speaker 0>This is just a convenience layer, right, to

00:47:13.635 --> 00:47:15.395
<v Speaker 0>the point where people could just execute any

00:47:15.395 --> 00:47:17.555
<v Speaker 0>of those script names and it runs the

00:47:17.555 --> 00:47:18.675
<v Speaker 0>command for them.

00:47:21.315 --> 00:47:22.755
<v Speaker 1>Mhmm. As far as

00:47:23.619 --> 00:47:25.780
<v Speaker 0>again, I wanna dive into, like, your experience.

00:47:25.780 --> 00:47:27.540
<v Speaker 0>Right? This is you've been doing this for

00:47:27.540 --> 00:47:28.660
<v Speaker 0>a long time now.

00:47:29.140 --> 00:47:30.980
<v Speaker 0>It's very easy for people to reach for,

00:47:30.980 --> 00:47:33.220
<v Speaker 0>like, a just file or a make file.

00:47:33.380 --> 00:47:35.540
<v Speaker 0>Do you see these scripts as, an alternate

00:47:35.780 --> 00:47:37.815
<v Speaker 0>alternative to that? And I mean, that's through

00:47:37.815 --> 00:47:39.655
<v Speaker 0>composition. Like, if I run build, can it

00:47:39.655 --> 00:47:42.535
<v Speaker 0>do multiple steps? Or should people still reach

00:47:42.535 --> 00:47:45.015
<v Speaker 0>for adjust file or make fail? Like, how

00:47:45.015 --> 00:47:46.295
<v Speaker 0>do you see that working

00:47:46.535 --> 00:47:48.215
<v Speaker 0>now and and the future?

00:47:49.270 --> 00:47:50.070
<v Speaker 1>Mhmm.

00:47:50.150 --> 00:47:51.750
<v Speaker 1>I I think that the scripts are quite

00:47:51.750 --> 00:47:53.830
<v Speaker 1>powerful. So you because in Snakes, you can

00:47:53.830 --> 00:47:56.070
<v Speaker 1>substitute a lot of things inside. Right? So

00:47:56.070 --> 00:47:57.830
<v Speaker 1>you have a programming language, so you can

00:47:57.830 --> 00:48:00.070
<v Speaker 1>kind of reuse snippets and things like that.

00:48:01.590 --> 00:48:03.350
<v Speaker 1>So, like, even

00:48:04.635 --> 00:48:07.115
<v Speaker 1>even if you would, like, have things that

00:48:07.115 --> 00:48:08.795
<v Speaker 1>depend on each other, you you could kind

00:48:08.795 --> 00:48:10.635
<v Speaker 1>of abuse them to, like, just,

00:48:10.955 --> 00:48:12.955
<v Speaker 1>you know, like, inline the scripts if you

00:48:12.955 --> 00:48:14.475
<v Speaker 1>have, like, one thing and then the other

00:48:14.475 --> 00:48:16.075
<v Speaker 1>should run. So you could have, like, build

00:48:16.075 --> 00:48:17.915
<v Speaker 1>and then tests, and then inside test, it

00:48:17.915 --> 00:48:19.619
<v Speaker 1>runs the build. So you can do quite

00:48:19.619 --> 00:48:22.420
<v Speaker 1>a lot. But I think once you really

00:48:23.619 --> 00:48:25.940
<v Speaker 1>once it really gets complex, then probably you

00:48:25.940 --> 00:48:28.339
<v Speaker 1>should reach out for for more framework y

00:48:28.339 --> 00:48:29.060
<v Speaker 1>approach.

00:48:29.619 --> 00:48:31.460
<v Speaker 1>I don't know. Just file, make file, whatever

00:48:31.460 --> 00:48:33.475
<v Speaker 1>is your favorite one.

00:48:34.515 --> 00:48:36.195
<v Speaker 1>But I think that you can get quite

00:48:36.195 --> 00:48:37.475
<v Speaker 1>far with this one.

00:48:39.235 --> 00:48:40.994
<v Speaker 1>So, yeah, here here, you need to do

00:48:40.994 --> 00:48:44.035
<v Speaker 1>config dot scripts. So this is like config

00:48:44.035 --> 00:48:46.994
<v Speaker 1>is a special thing. It's like, essentially, you're

00:48:46.994 --> 00:48:48.035
<v Speaker 1>referencing the

00:48:48.620 --> 00:48:52.060
<v Speaker 1>the the environment you're configuring. So, like, this

00:48:52.060 --> 00:48:53.020
<v Speaker 1>Devenv

00:48:54.380 --> 00:48:56.620
<v Speaker 1>definition is essentially a function where at the

00:48:56.620 --> 00:48:58.060
<v Speaker 1>top, if you go to the very top,

00:48:58.060 --> 00:49:00.140
<v Speaker 1>it's like a function of of a few

00:49:00.140 --> 00:49:00.540
<v Speaker 1>arguments.

00:49:00.984 --> 00:49:03.305
<v Speaker 1>And what's it's returning is config, but you

00:49:03.305 --> 00:49:05.464
<v Speaker 1>also get this config as an input. So

00:49:05.464 --> 00:49:06.985
<v Speaker 1>you can reference things

00:49:08.905 --> 00:49:10.744
<v Speaker 1>as you define them. So the the tricky

00:49:10.744 --> 00:49:12.425
<v Speaker 1>bit, of course, is you can create infinite

00:49:12.425 --> 00:49:15.320
<v Speaker 1>recursion if you would reference the config now

00:49:15.320 --> 00:49:17.560
<v Speaker 1>in the build part of the scripts. That

00:49:17.560 --> 00:49:20.120
<v Speaker 1>would get into some horrible error messages.

00:49:20.440 --> 00:49:22.440
<v Speaker 1>So that's probably the hardest bit of mix

00:49:22.680 --> 00:49:24.360
<v Speaker 1>Yeah. If you kind of

00:49:24.840 --> 00:49:27.080
<v Speaker 1>get those recursion errors. But, like

00:49:27.945 --> 00:49:31.065
<v Speaker 1>like, yeah, if you have to to just

00:49:31.065 --> 00:49:33.145
<v Speaker 1>get the intuition about this that you are,

00:49:33.145 --> 00:49:34.265
<v Speaker 1>like, referencing

00:49:34.265 --> 00:49:36.025
<v Speaker 1>the what you're returning.

00:49:36.745 --> 00:49:38.425
<v Speaker 1>But it's really neat, right, that you can

00:49:38.425 --> 00:49:39.065
<v Speaker 1>do this.

00:49:39.465 --> 00:49:41.625
<v Speaker 0>Yeah. I mean, would you welcome a pull

00:49:41.625 --> 00:49:43.705
<v Speaker 0>request that loop like

00:49:44.500 --> 00:49:45.780
<v Speaker 0>dependencies?

00:49:47.380 --> 00:49:49.299
<v Speaker 0>Like, I know this is not doesn't really

00:49:49.299 --> 00:49:50.660
<v Speaker 0>make sense, but, I mean, something like that

00:49:50.660 --> 00:49:52.420
<v Speaker 0>could probably be quite a good approach as

00:49:52.420 --> 00:49:52.900
<v Speaker 0>well.

00:49:53.619 --> 00:49:55.539
<v Speaker 1>Yeah. Exactly. Yeah. I I I like that

00:49:55.539 --> 00:49:56.819
<v Speaker 1>because this is exactly the,

00:49:57.615 --> 00:49:59.775
<v Speaker 1>like, the mindset behind Devenv is not to

00:49:59.775 --> 00:50:02.175
<v Speaker 1>use these advanced next features, but but, like,

00:50:02.175 --> 00:50:04.735
<v Speaker 1>dump them down exactly in what you're saying.

00:50:04.735 --> 00:50:07.215
<v Speaker 1>So that's that's a good one. Yeah. I

00:50:07.215 --> 00:50:08.815
<v Speaker 0>think I mean, I yeah. I could write

00:50:08.815 --> 00:50:11.380
<v Speaker 0>a just file, and I can just execute

00:50:11.380 --> 00:50:12.980
<v Speaker 0>them within file. That's that's a perfectly good

00:50:12.980 --> 00:50:14.020
<v Speaker 0>way to do it. And I think a

00:50:14.020 --> 00:50:15.619
<v Speaker 0>lot of people would probably do that. But

00:50:15.619 --> 00:50:17.540
<v Speaker 0>as I lean more into Devenv, I wanna

00:50:17.540 --> 00:50:19.060
<v Speaker 0>do more stuff that

00:50:19.060 --> 00:50:21.380
<v Speaker 0>that way. So yeah. There's something just for

00:50:21.380 --> 00:50:23.300
<v Speaker 0>me to think about in the future. Anyway,

00:50:23.300 --> 00:50:25.619
<v Speaker 0>let's pop back over here. So we added

00:50:27.115 --> 00:50:28.075
<v Speaker 0>our scripts.

00:50:28.395 --> 00:50:30.075
<v Speaker 0>I'm gonna run that publish one just because

00:50:30.075 --> 00:50:31.115
<v Speaker 0>I I didn't know you could do that

00:50:31.115 --> 00:50:34.155
<v Speaker 0>interpolation within the the script itself. That's pretty

00:50:34.155 --> 00:50:36.555
<v Speaker 0>neat. So if I do publish, yeah, we're

00:50:36.555 --> 00:50:38.075
<v Speaker 0>build in the publishing. Awesome.

00:50:38.555 --> 00:50:41.355
<v Speaker 0>We also did Shell test and services.

00:50:41.730 --> 00:50:43.730
<v Speaker 0>So we've already seen Devenvap,

00:50:43.730 --> 00:50:45.330
<v Speaker 0>so let's run it again. And we should

00:50:45.330 --> 00:50:47.010
<v Speaker 0>see that we now have a process composed

00:50:47.010 --> 00:50:48.850
<v Speaker 0>with multiple processes running.

00:50:49.410 --> 00:50:51.330
<v Speaker 0>And we can show people that switching between

00:50:51.330 --> 00:50:52.930
<v Speaker 0>the processes to see the logs and see

00:50:52.930 --> 00:50:55.945
<v Speaker 0>what's happening. So there's our cargo check.

00:50:56.744 --> 00:50:58.905
<v Speaker 0>Our Postgres is currently spinning up. It's not

00:50:58.905 --> 00:51:02.345
<v Speaker 0>quite ready yet. Our temporal is already

00:51:02.744 --> 00:51:04.185
<v Speaker 0>on the way and quite happy. I love

00:51:04.185 --> 00:51:05.545
<v Speaker 0>that. It's so powerful.

00:51:05.705 --> 00:51:07.545
<v Speaker 0>And now Postgres is ready as well. So

00:51:08.120 --> 00:51:10.440
<v Speaker 1>It's pretty crazy how simple it is. Right?

00:51:10.440 --> 00:51:11.800
<v Speaker 1>I don't know. It makes me smile each

00:51:11.800 --> 00:51:12.360
<v Speaker 1>time.

00:51:13.480 --> 00:51:15.880
<v Speaker 0>Yeah. Three lines of code. Like,

00:51:16.680 --> 00:51:18.920
<v Speaker 0>unbelievable. I mean, think of how much that

00:51:18.920 --> 00:51:20.920
<v Speaker 0>would take in a Docker compose just because

00:51:20.920 --> 00:51:24.205
<v Speaker 0>YAML doesn't have that level of composition

00:51:24.205 --> 00:51:24.765
<v Speaker 0>and

00:51:25.405 --> 00:51:28.125
<v Speaker 0>remote packages and all this other wonderful

00:51:28.125 --> 00:51:30.605
<v Speaker 0>feature. I absolutely love that. Cool.

00:51:32.845 --> 00:51:34.845
<v Speaker 0>If that doesn't win people over, nothing will.

00:51:34.845 --> 00:51:35.085
<v Speaker 0>So

00:51:35.645 --> 00:51:37.885
<v Speaker 0>Exactly. You drop it off now, you know.

00:51:38.820 --> 00:51:41.780
<v Speaker 0>My fault. Alright. Let's quit this.

00:51:42.340 --> 00:51:43.140
<v Speaker 0>So

00:51:44.820 --> 00:51:47.460
<v Speaker 0>there we go. And the last thing that

00:51:47.460 --> 00:51:50.180
<v Speaker 0>we've shown so far is the Devenv

00:51:50.420 --> 00:51:50.740
<v Speaker 0>shell.

00:51:52.355 --> 00:51:53.875
<v Speaker 0>Am I already in a shell?

00:51:54.915 --> 00:51:57.555
<v Speaker 1>Yeah. So because you're using the dir enf,

00:51:57.555 --> 00:51:59.714
<v Speaker 1>which is like this tool that you're using

00:51:59.714 --> 00:52:01.555
<v Speaker 1>that when you just enter it, kind of,

00:52:01.555 --> 00:52:03.155
<v Speaker 1>behind the scenes, enables the shell.

00:52:03.760 --> 00:52:05.600
<v Speaker 0>Yeah. So if we just pop out and

00:52:05.600 --> 00:52:07.280
<v Speaker 0>then pop back into Rust and what we're

00:52:07.280 --> 00:52:08.880
<v Speaker 0>looking for is that we should see this

00:52:08.880 --> 00:52:10.800
<v Speaker 0>run entering shell and

00:52:11.280 --> 00:52:12.960
<v Speaker 0>get version, which

00:52:13.280 --> 00:52:14.320
<v Speaker 0>we have here.

00:52:15.440 --> 00:52:16.400
<v Speaker 0>That's a neat feature.

00:52:17.835 --> 00:52:20.234
<v Speaker 0>And the last one was our dev and

00:52:20.234 --> 00:52:20.955
<v Speaker 0>test.

00:52:26.234 --> 00:52:29.595
<v Speaker 1>Yeah. So I think this is another thing

00:52:29.595 --> 00:52:30.555
<v Speaker 1>that is

00:52:30.635 --> 00:52:32.875
<v Speaker 1>not well known and and kind of new,

00:52:33.849 --> 00:52:36.810
<v Speaker 1>but I found this I find this really,

00:52:37.770 --> 00:52:38.410
<v Speaker 1>like,

00:52:38.730 --> 00:52:40.090
<v Speaker 1>really nice feature.

00:52:40.650 --> 00:52:42.010
<v Speaker 1>I

00:52:42.650 --> 00:52:43.690
<v Speaker 1>don't know what's happened now.

00:52:46.335 --> 00:52:47.535
<v Speaker 1>But,

00:52:48.655 --> 00:52:50.335
<v Speaker 1>yeah, the the fact that you can run

00:52:50.335 --> 00:52:53.215
<v Speaker 1>things with the whole environment enabled locally, I

00:52:53.215 --> 00:52:55.055
<v Speaker 1>think that's quite unique.

00:52:55.295 --> 00:52:57.855
<v Speaker 0>Yeah. So our test ran and they're successful.

00:52:57.855 --> 00:52:59.710
<v Speaker 0>It's just all the the process noise in

00:52:59.710 --> 00:53:01.790
<v Speaker 0>the background. Oh, yeah. This is, like, shutting

00:53:01.790 --> 00:53:02.350
<v Speaker 1>down,

00:53:02.990 --> 00:53:03.630
<v Speaker 1>like,

00:53:04.030 --> 00:53:05.070
<v Speaker 1>errors.

00:53:05.310 --> 00:53:06.990
<v Speaker 1>So yeah. I wonder if you can hide

00:53:06.990 --> 00:53:07.550
<v Speaker 0>those.

00:53:08.190 --> 00:53:10.590
<v Speaker 1>Maybe maybe we need to improve the the

00:53:10.590 --> 00:53:11.390
<v Speaker 1>output

00:53:11.795 --> 00:53:12.835
<v Speaker 1>there a bit

00:53:13.795 --> 00:53:15.715
<v Speaker 1>because it's a bit in because, like, what

00:53:15.715 --> 00:53:17.955
<v Speaker 1>we're doing is, like, we are running the

00:53:17.955 --> 00:53:18.755
<v Speaker 1>processes,

00:53:18.835 --> 00:53:20.995
<v Speaker 1>piping that to a standard output, and then

00:53:20.995 --> 00:53:23.075
<v Speaker 1>also whatever the test is running. So that

00:53:23.075 --> 00:53:24.035
<v Speaker 1>can be a bit confusing.

00:53:24.670 --> 00:53:27.310
<v Speaker 1>Yeah. There's definitely a flag that hey. The

00:53:27.310 --> 00:53:28.670
<v Speaker 0>surface logs would be

00:53:29.390 --> 00:53:30.750
<v Speaker 1>Yeah. But

00:53:31.710 --> 00:53:34.590
<v Speaker 0>regardless, that is some serious amount of

00:53:36.030 --> 00:53:38.645
<v Speaker 0>power, I guess. Right? And convenience. Mhmm. But

00:53:38.645 --> 00:53:40.085
<v Speaker 0>convenience more than power. Think that's the word

00:53:40.085 --> 00:53:43.125
<v Speaker 0>I'm looking for. And again, we're at 54

00:53:43.125 --> 00:53:45.605
<v Speaker 0>lanes. Most of that was provided to scaffolding

00:53:45.605 --> 00:53:47.365
<v Speaker 0>for us, and we've had to change

00:53:47.925 --> 00:53:51.125
<v Speaker 0>so very little, but and return. Right? We've

00:53:51.125 --> 00:53:52.645
<v Speaker 0>put little in and we're getting a whole

00:53:52.860 --> 00:53:54.540
<v Speaker 0>bang for our buck back. And I think

00:53:54.540 --> 00:53:56.700
<v Speaker 0>that is just the true now it's the

00:53:56.700 --> 00:53:58.940
<v Speaker 0>right word power of Devenv. So I think

00:53:58.940 --> 00:54:00.780
<v Speaker 0>that's amazing. Such a great product.

00:54:02.380 --> 00:54:03.100
<v Speaker 0>Wow.

00:54:04.060 --> 00:54:05.740
<v Speaker 0>Now I'll encourage the audience.

00:54:06.785 --> 00:54:09.025
<v Speaker 0>Anything you want to see or ask, now

00:54:09.025 --> 00:54:10.465
<v Speaker 0>would be a great time to throw that

00:54:10.465 --> 00:54:12.225
<v Speaker 0>into the comments. And, Dom, and I'll ask

00:54:12.225 --> 00:54:13.905
<v Speaker 0>you, is there anything of Devenv that we

00:54:13.905 --> 00:54:15.425
<v Speaker 0>haven't covered that you think would be really

00:54:15.425 --> 00:54:17.185
<v Speaker 0>cool to show the audience? I know we

00:54:17.185 --> 00:54:18.625
<v Speaker 0>said we're gonna do a cool example. We

00:54:18.625 --> 00:54:20.065
<v Speaker 0>we we could do that too, but I

00:54:20.065 --> 00:54:23.420
<v Speaker 0>think probably showing off this Rust one demonstrates

00:54:23.420 --> 00:54:24.940
<v Speaker 0>everything that we need people to know about

00:54:24.940 --> 00:54:25.900
<v Speaker 0>Devenv. Right?

00:54:26.460 --> 00:54:29.740
<v Speaker 1>Yeah. I think the the last missing bit

00:54:29.740 --> 00:54:30.460
<v Speaker 1>is, like,

00:54:31.500 --> 00:54:32.859
<v Speaker 1>people often ask

00:54:33.494 --> 00:54:35.734
<v Speaker 1>how do I how do I then deploy?

00:54:35.734 --> 00:54:37.815
<v Speaker 1>Right? Because I want to I wanna have

00:54:37.815 --> 00:54:39.815
<v Speaker 1>the same environment potentially

00:54:40.295 --> 00:54:41.655
<v Speaker 1>also in production.

00:54:42.055 --> 00:54:43.494
<v Speaker 1>So Devenv, like,

00:54:43.734 --> 00:54:45.815
<v Speaker 1>ships with kind of a a way to

00:54:45.815 --> 00:54:48.615
<v Speaker 1>generate a container out of the development environment.

00:54:49.260 --> 00:54:51.260
<v Speaker 1>So there is, like, Devenv container

00:54:52.060 --> 00:54:54.780
<v Speaker 1>builds, Devenv container copies so you can, like,

00:54:54.780 --> 00:54:56.220
<v Speaker 1>copy it to a registry

00:54:56.540 --> 00:54:58.540
<v Speaker 1>or even Rawk, which kind of just runs

00:54:58.540 --> 00:55:00.700
<v Speaker 1>Docker Docker in the background at the moment,

00:55:00.700 --> 00:55:02.140
<v Speaker 1>but that could be improved

00:55:02.700 --> 00:55:03.820
<v Speaker 1>much further, I think.

00:55:05.555 --> 00:55:08.355
<v Speaker 1>So, like, you can take this environment and

00:55:08.355 --> 00:55:10.435
<v Speaker 1>and then, like, ship a container.

00:55:10.595 --> 00:55:11.795
<v Speaker 1>And there's also

00:55:12.515 --> 00:55:14.355
<v Speaker 1>a flag, like, container

00:55:14.755 --> 00:55:17.395
<v Speaker 1>like, config dot container dot is building so

00:55:17.395 --> 00:55:19.810
<v Speaker 1>you can kind of conditionalize

00:55:20.290 --> 00:55:21.650
<v Speaker 1>things based on

00:55:22.050 --> 00:55:24.210
<v Speaker 1>if you're building a container, or are you

00:55:24.210 --> 00:55:25.250
<v Speaker 1>are you just,

00:55:25.490 --> 00:55:27.570
<v Speaker 1>you know, entering a developer environment?

00:55:27.570 --> 00:55:28.610
<v Speaker 1>So for example,

00:55:29.010 --> 00:55:31.089
<v Speaker 1>let's say you have, like, a a managed

00:55:31.089 --> 00:55:33.730
<v Speaker 1>Postgres. Right? Then you instead of enable

00:55:33.795 --> 00:55:36.915
<v Speaker 1>like, services Postgres enable, you would say instead

00:55:36.915 --> 00:55:38.915
<v Speaker 1>of true, you would say then config dot

00:55:38.915 --> 00:55:40.755
<v Speaker 1>container dot is building

00:55:41.954 --> 00:55:43.875
<v Speaker 1>well, exclamation mark. Right? So you want to

00:55:43.875 --> 00:55:44.994
<v Speaker 1>negate that.

00:55:45.234 --> 00:55:45.954
<v Speaker 1>And then

00:55:46.850 --> 00:55:48.930
<v Speaker 1>I think that's pretty neat. Right? So you're

00:55:48.930 --> 00:55:51.090
<v Speaker 1>you're Yeah. You're then, like, conditionalizing

00:55:51.090 --> 00:55:53.650
<v Speaker 1>how what goes into container and what goes

00:55:53.650 --> 00:55:55.410
<v Speaker 1>into your developer environment.

00:55:56.690 --> 00:55:57.490
<v Speaker 0>Nice.

00:55:58.130 --> 00:56:00.455
<v Speaker 1>And there's so there's, like, a few different

00:56:00.455 --> 00:56:02.535
<v Speaker 1>con like, I think there's two containers that

00:56:02.535 --> 00:56:04.375
<v Speaker 1>are provided by default, but you can create

00:56:04.375 --> 00:56:06.935
<v Speaker 1>your own. One is just a simple shell.

00:56:07.655 --> 00:56:09.015
<v Speaker 1>So if you say container

00:56:09.255 --> 00:56:10.695
<v Speaker 1>oh, dev dev container

00:56:12.190 --> 00:56:13.150
<v Speaker 1>build

00:56:13.150 --> 00:56:15.550
<v Speaker 1>shell, that will build only the the shell.

00:56:15.550 --> 00:56:17.150
<v Speaker 1>So let's say that's something that you would

00:56:17.150 --> 00:56:17.870
<v Speaker 1>ship.

00:56:21.550 --> 00:56:22.590
<v Speaker 0>Oh, I don't have Docker.

00:56:24.015 --> 00:56:25.694
<v Speaker 1>Oh, you don't yeah. But I I think

00:56:25.694 --> 00:56:26.335
<v Speaker 1>if

00:56:26.494 --> 00:56:28.335
<v Speaker 1>you just do builds, you don't you shouldn't

00:56:28.335 --> 00:56:29.215
<v Speaker 1>need Docker.

00:56:29.615 --> 00:56:31.454
<v Speaker 1>Or do you no. You do need Docker.

00:56:31.454 --> 00:56:32.095
<v Speaker 1>Yeah.

00:56:33.214 --> 00:56:34.095
<v Speaker 1>But yeah.

00:56:35.855 --> 00:56:36.335
<v Speaker 1>I think,

00:56:38.340 --> 00:56:40.340
<v Speaker 1>yeah, here it's asking you at the bottom

00:56:40.340 --> 00:56:41.460
<v Speaker 1>to to

00:56:41.620 --> 00:56:44.180
<v Speaker 1>like, it needs a few dependencies. So you

00:56:44.180 --> 00:56:46.660
<v Speaker 1>need to, like Ah, right. Okay. Yeah. Like,

00:56:46.660 --> 00:56:47.380
<v Speaker 1>enable

00:56:48.100 --> 00:56:50.180
<v Speaker 1>so next to container is a really nice

00:56:50.180 --> 00:56:50.580
<v Speaker 1>project.

00:56:54.385 --> 00:56:55.025
<v Speaker 1>Oh

00:56:55.585 --> 00:56:57.825
<v Speaker 1>oh, Nick's packages. I didn't copy it. Yes.

00:56:57.825 --> 00:57:00.785
<v Speaker 0>Yeah. There we go. We should probably

00:57:00.785 --> 00:57:02.224
<v Speaker 0>have No. That was me. I think that

00:57:02.224 --> 00:57:03.984
<v Speaker 0>was that was my terrible copy of the

00:57:03.984 --> 00:57:05.025
<v Speaker 0>pasting. So

00:57:05.424 --> 00:57:05.825
<v Speaker 0>Yeah.

00:57:07.500 --> 00:57:08.140
<v Speaker 0>Yep.

00:57:08.540 --> 00:57:09.740
<v Speaker 1>So now you

00:57:11.740 --> 00:57:13.180
<v Speaker 1>right. So now it wants you to set

00:57:13.180 --> 00:57:14.380
<v Speaker 1>a name. So, like,

00:57:14.780 --> 00:57:15.980
<v Speaker 1>unfortunately,

00:57:17.740 --> 00:57:21.260
<v Speaker 1>yeah, that's not the best two weeks, but

00:57:20.465 --> 00:57:22.385
<v Speaker 1>you can either set the name for the

00:57:22.385 --> 00:57:23.345
<v Speaker 1>whole project

00:57:23.825 --> 00:57:25.825
<v Speaker 1>or for the container. But

00:57:27.105 --> 00:57:28.945
<v Speaker 1>Yeah. Yeah. For example. And

00:57:29.265 --> 00:57:31.265
<v Speaker 1>I think it's gonna ask you for one

00:57:31.265 --> 00:57:33.505
<v Speaker 1>more yeah. So one more thing. Now you

00:57:33.505 --> 00:57:34.545
<v Speaker 1>need to to enable this one.

00:57:35.730 --> 00:57:37.490
<v Speaker 1>Yeah. That's something that we need to improve

00:57:37.490 --> 00:57:38.530
<v Speaker 1>the UX like you

00:57:39.170 --> 00:57:41.330
<v Speaker 1>if you if you need, like, two dependencies,

00:57:41.330 --> 00:57:43.330
<v Speaker 1>we should be able to tell you that

00:57:43.570 --> 00:57:45.810
<v Speaker 1>in one go. But Yeah. But even at

00:57:45.810 --> 00:57:47.650
<v Speaker 0>that, the fact that I am now building

00:57:47.650 --> 00:57:48.369
<v Speaker 0>a container

00:57:48.845 --> 00:57:50.845
<v Speaker 0>from this is pretty sweet. I thought I

00:57:50.845 --> 00:57:53.244
<v Speaker 0>I actually had no idea that was something

00:57:53.244 --> 00:57:54.525
<v Speaker 0>I could do. So

00:57:55.325 --> 00:57:57.565
<v Speaker 1>Yeah. So, like really leads me into getting

00:57:57.805 --> 00:57:59.244
<v Speaker 0>no. It's all great to have a development

00:57:59.244 --> 00:58:01.085
<v Speaker 0>environment. Been able to get something into production

00:58:01.085 --> 00:58:02.605
<v Speaker 0>is a different story, and I I just

00:58:02.605 --> 00:58:03.565
<v Speaker 0>completely missed

00:58:03.805 --> 00:58:06.130
<v Speaker 0>this. So that's very, very cool.

00:58:06.850 --> 00:58:10.690
<v Speaker 0>Awesome. Yeah. We have an example for fly.io

00:58:10.690 --> 00:58:11.410
<v Speaker 1>where

00:58:12.130 --> 00:58:14.850
<v Speaker 1>you just, like, configure their registry and, like,

00:58:14.850 --> 00:58:17.505
<v Speaker 1>you can then push these things to to

00:58:17.505 --> 00:58:18.305
<v Speaker 1>fly.io,

00:58:18.305 --> 00:58:20.145
<v Speaker 1>for example. So it's very easy to go

00:58:20.145 --> 00:58:22.225
<v Speaker 1>from developer environment

00:58:24.065 --> 00:58:25.585
<v Speaker 1>into production then.

00:58:26.385 --> 00:58:28.145
<v Speaker 0>Oh, so is that where where does that

00:58:28.145 --> 00:58:28.625
<v Speaker 0>live now?

00:58:32.210 --> 00:58:33.570
<v Speaker 1>Test container.

00:58:35.410 --> 00:58:36.770
<v Speaker 1>So, yeah, that's

00:58:37.010 --> 00:58:39.650
<v Speaker 1>that's that's now part of the department.

00:58:41.010 --> 00:58:42.770
<v Speaker 1>No. Wait. If you just do build,

00:58:43.965 --> 00:58:46.605
<v Speaker 1>that doesn't that doesn't, like, copy anywhere. I

00:58:46.605 --> 00:58:48.605
<v Speaker 1>think that's just built it. That's it. Ah,

00:58:48.605 --> 00:58:51.165
<v Speaker 0>alright. Alright. Okay. Okay. It's more like if

00:58:51.165 --> 00:58:52.525
<v Speaker 1>you wanna have it as part of the

00:58:52.525 --> 00:58:53.725
<v Speaker 1>CI or something.

00:58:54.125 --> 00:58:55.725
<v Speaker 1>But then if you wanna do something with

00:58:55.725 --> 00:58:57.165
<v Speaker 1>it, you need to either copy it or

00:58:57.165 --> 00:58:59.405
<v Speaker 1>run it. Those are the two things we

00:58:58.800 --> 00:58:59.840
<v Speaker 1>support right now.

00:59:02.160 --> 00:59:04.720
<v Speaker 1>So, like Okay. Copy. Let's see what the

00:59:04.720 --> 00:59:05.680
<v Speaker 0>help says.

00:59:06.240 --> 00:59:08.000
<v Speaker 0>That just puts a name. I'm gonna call

00:59:08.000 --> 00:59:08.880
<v Speaker 0>it test.

00:59:09.680 --> 00:59:11.920
<v Speaker 1>Yeah. So by default, it's gonna copy to

00:59:11.920 --> 00:59:14.240
<v Speaker 1>to your local Docker

00:59:14.755 --> 00:59:16.115
<v Speaker 1>if you have one.

00:59:18.435 --> 00:59:19.875
<v Speaker 0>Cool. Alright.

00:59:20.595 --> 00:59:22.755
<v Speaker 0>Let's let that finish. So I've got a

00:59:22.755 --> 00:59:24.915
<v Speaker 0>question from my point of view, but there's

00:59:24.915 --> 00:59:26.435
<v Speaker 0>a couple of things on the chat or

00:59:26.435 --> 00:59:27.955
<v Speaker 0>at least one thing in the chat we'll

00:59:27.955 --> 00:59:30.160
<v Speaker 0>cover as well. So firstly,

00:59:30.400 --> 00:59:31.280
<v Speaker 0>just

00:59:31.280 --> 00:59:33.760
<v Speaker 0>says heart. So I'm assuming you're enjoying what

00:59:33.760 --> 00:59:35.040
<v Speaker 0>you see, which is amazing.

00:59:35.360 --> 00:59:37.440
<v Speaker 0>And then is back with

00:59:37.840 --> 00:59:39.360
<v Speaker 0>it would be I'll I'll just gonna put

00:59:39.360 --> 00:59:40.720
<v Speaker 0>words in your mouth. It would be good

00:59:40.720 --> 00:59:43.205
<v Speaker 0>if an s bomb could be created with

00:59:43.205 --> 00:59:45.925
<v Speaker 0>the container and bundled together. Is that something

00:59:45.925 --> 00:59:47.605
<v Speaker 0>that you just thought about or considered?

00:59:48.405 --> 00:59:49.365
<v Speaker 1>Yeah. So

00:59:50.485 --> 00:59:52.965
<v Speaker 1>at actually, there's quite a few projects that

00:59:52.965 --> 00:59:54.565
<v Speaker 1>do create SBOMs,

00:59:55.285 --> 00:59:58.080
<v Speaker 1>and you we have the whole, like, next

00:59:58.080 --> 01:00:00.160
<v Speaker 1>store closure as it's called.

01:00:00.560 --> 01:00:03.040
<v Speaker 1>So that should be possible to do. I

01:00:03.040 --> 01:00:03.760
<v Speaker 1>haven't

01:00:04.320 --> 01:00:05.280
<v Speaker 1>I haven't

01:00:05.520 --> 01:00:07.520
<v Speaker 1>I didn't dive into this that much to

01:00:07.520 --> 01:00:09.920
<v Speaker 1>to be honest because just it hasn't been,

01:00:11.214 --> 01:00:13.695
<v Speaker 1>like, the forefront of what our customers are

01:00:13.695 --> 01:00:15.295
<v Speaker 1>using asking for.

01:00:15.615 --> 01:00:17.935
<v Speaker 1>But, yeah, it would be pretty neat. I

01:00:17.935 --> 01:00:18.415
<v Speaker 1>agree.

01:00:19.135 --> 01:00:21.775
<v Speaker 1>Like, for me, the SBOMs, it's always like,

01:00:22.015 --> 01:00:23.535
<v Speaker 1>then what do I do with that? Right?

01:00:23.535 --> 01:00:25.535
<v Speaker 1>I it feels like the ecosystem is really

01:00:25.535 --> 01:00:28.090
<v Speaker 1>huge. So I'm I'm not familiar with with

01:00:28.090 --> 01:00:30.090
<v Speaker 1>with the ecosystem yet. I I just need

01:00:30.090 --> 01:00:31.930
<v Speaker 1>to dive into it is what I'm trying

01:00:31.930 --> 01:00:32.570
<v Speaker 1>to say.

01:00:33.130 --> 01:00:33.850
<v Speaker 0>Nice.

01:00:34.090 --> 01:00:36.170
<v Speaker 1>But, yeah, should be very doable.

01:00:43.125 --> 01:00:44.565
<v Speaker 0>Why did It doesn't matter if it doesn't

01:00:44.565 --> 01:00:47.285
<v Speaker 0>work. Maybe it's ran ran out of

01:00:47.924 --> 01:00:50.644
<v Speaker 1>disk space or something like this. It's a

01:00:50.644 --> 01:00:52.404
<v Speaker 1>bit like, the error messages that you get

01:00:52.404 --> 01:00:55.365
<v Speaker 1>from the Docker daemon are a bit weird.

01:00:56.280 --> 01:00:57.400
<v Speaker 1>It's super

01:00:59.000 --> 01:01:01.560
<v Speaker 1>yeah. It just says, like, okay. Closed pipe,

01:01:01.560 --> 01:01:03.400
<v Speaker 1>right, which means that it lost connection to

01:01:03.400 --> 01:01:04.600
<v Speaker 1>the daemon, then

01:01:05.000 --> 01:01:07.640
<v Speaker 1>sometimes you need to then read the Docker

01:01:07.640 --> 01:01:08.360
<v Speaker 1>daemon logs.

01:01:08.835 --> 01:01:11.075
<v Speaker 0>So I I don't have I'm using Podman.

01:01:11.075 --> 01:01:13.075
<v Speaker 0>I don't know if that's been tested. I

01:01:13.075 --> 01:01:15.795
<v Speaker 0>I know they're closely compatible, but may not

01:01:15.795 --> 01:01:17.474
<v Speaker 0>they may not be byte for byte compatible,

01:01:17.474 --> 01:01:19.155
<v Speaker 0>especially doing something like this.

01:01:19.955 --> 01:01:20.835
<v Speaker 0>It could just be my

01:01:21.510 --> 01:01:23.590
<v Speaker 0>setup, but we'll give that a moment. Yeah.

01:01:23.590 --> 01:01:26.710
<v Speaker 0>K. Let's Yeah. So clear the screen. It's

01:01:26.710 --> 01:01:28.710
<v Speaker 1>a 10 gigabyte file. So, like, one of

01:01:28.710 --> 01:01:29.190
<v Speaker 1>the,

01:01:29.990 --> 01:01:31.670
<v Speaker 1>yeah, one of the things that we need

01:01:31.670 --> 01:01:33.350
<v Speaker 1>to do still is, like, dive a bit

01:01:33.350 --> 01:01:35.830
<v Speaker 1>into the closure size for the containers right

01:01:35.830 --> 01:01:36.310
<v Speaker 1>now

01:01:37.315 --> 01:01:39.955
<v Speaker 1>because we have this mentality of pulling everything

01:01:39.955 --> 01:01:41.635
<v Speaker 1>in for the developer environments,

01:01:41.635 --> 01:01:44.275
<v Speaker 1>then that doesn't work really well for production

01:01:45.235 --> 01:01:47.235
<v Speaker 1>as in that the image

01:01:47.395 --> 01:01:49.395
<v Speaker 1>that you're copying can be quite big.

01:01:50.840 --> 01:01:53.160
<v Speaker 1>But you can disable things. Right? So it's

01:01:53.160 --> 01:01:55.320
<v Speaker 1>you can get there. Maybe maybe in the

01:01:55.320 --> 01:01:57.320
<v Speaker 1>future, we'll introduce something like profiles where you

01:01:57.320 --> 01:01:59.480
<v Speaker 1>will say, like, development for profile and you

01:01:59.480 --> 01:02:01.640
<v Speaker 1>get, like, the full blown thing and then

01:02:01.640 --> 01:02:04.680
<v Speaker 1>production where you get, like, just the basics

01:02:04.914 --> 01:02:07.875
<v Speaker 1>or, yeah, minimal or whatever it would should

01:02:07.875 --> 01:02:08.595
<v Speaker 1>be called.

01:02:09.234 --> 01:02:09.954
<v Speaker 0>Awesome.

01:02:10.434 --> 01:02:12.434
<v Speaker 0>Alright. So it seems there's no more audience

01:02:12.434 --> 01:02:14.194
<v Speaker 0>questions, which means you're gonna be stuck with

01:02:14.194 --> 01:02:17.315
<v Speaker 0>one of my harder questions, unfortunately. That's perfect.

01:02:17.910 --> 01:02:20.470
<v Speaker 1>Right. So one of the things again, this

01:02:20.470 --> 01:02:22.630
<v Speaker 0>comes back to my mono repository use case.

01:02:22.630 --> 01:02:24.390
<v Speaker 0>And I know that Devenv has some layers

01:02:24.390 --> 01:02:26.550
<v Speaker 0>of competition. So I'm curious if there's a

01:02:26.550 --> 01:02:27.910
<v Speaker 0>challenge that I have right now that could

01:02:27.910 --> 01:02:29.030
<v Speaker 0>be solved using Devenv.

01:02:29.445 --> 01:02:31.525
<v Speaker 0>Mhmm. Let's assume we have a second Devenv

01:02:31.525 --> 01:02:35.125
<v Speaker 0>project which has Mhmm. Proto buff files.

01:02:35.525 --> 01:02:37.765
<v Speaker 0>And it has a build step that compiles

01:02:37.765 --> 01:02:39.685
<v Speaker 0>those. It has an output directory.

01:02:40.165 --> 01:02:41.605
<v Speaker 0>Mhmm. If I want to consume that output

01:02:41.605 --> 01:02:43.685
<v Speaker 0>directory from a different Devenv, is that something

01:02:43.685 --> 01:02:46.050
<v Speaker 0>I can do now or in the future?

01:02:47.490 --> 01:02:49.490
<v Speaker 1>So you would want to reference those prototype

01:02:49.490 --> 01:02:50.290
<v Speaker 1>of,

01:02:52.450 --> 01:02:54.370
<v Speaker 1>like, output. Right? The

01:02:54.770 --> 01:02:56.770
<v Speaker 0>Yeah. Let let's put a really quick example

01:02:56.770 --> 01:02:58.770
<v Speaker 0>with that go directory whenever you use. Right?

01:02:58.770 --> 01:03:00.050
<v Speaker 0>So if I do dev end in it.

01:03:00.585 --> 01:03:01.305
<v Speaker 0>Mhmm.

01:03:01.465 --> 01:03:02.984
<v Speaker 0>And let's just open both of these at

01:03:02.984 --> 01:03:03.785
<v Speaker 0>the same time.

01:03:04.105 --> 01:03:05.545
<v Speaker 0>And I do apologize if this is a

01:03:05.545 --> 01:03:07.465
<v Speaker 0>tough question, but I'm just No. No. It's

01:03:07.465 --> 01:03:08.745
<v Speaker 1>a great question. I

01:03:10.025 --> 01:03:10.905
<v Speaker 1>like that,

01:03:11.385 --> 01:03:14.130
<v Speaker 1>you know, real use cases pop up. Yeah.

01:03:14.130 --> 01:03:17.010
<v Speaker 0>Alright. So this isn't obviously not a good

01:03:17.010 --> 01:03:18.930
<v Speaker 0>thing, but if we pop this open and

01:03:18.930 --> 01:03:20.609
<v Speaker 0>just say that my

01:03:21.250 --> 01:03:22.450
<v Speaker 0>build command

01:03:23.890 --> 01:03:25.809
<v Speaker 0>creates a file. Now it doesn't matter. That

01:03:25.809 --> 01:03:27.650
<v Speaker 0>could be protobufs. It could be anything,

01:03:28.035 --> 01:03:30.595
<v Speaker 0>but it creates this artifact called a

01:03:31.155 --> 01:03:32.755
<v Speaker 0>Mhmm. And the a directory.

01:03:32.994 --> 01:03:35.075
<v Speaker 0>So now here, I can see dev in

01:03:35.075 --> 01:03:37.155
<v Speaker 0>fact, I can just run my build step

01:03:40.434 --> 01:03:42.115
<v Speaker 0>once I reload my environment.

01:03:45.410 --> 01:03:46.530
<v Speaker 0>Oh, out there.

01:03:47.170 --> 01:03:47.650
<v Speaker 0>But

01:03:47.970 --> 01:03:50.370
<v Speaker 1>Oh, yeah. You need to create a.

01:03:50.530 --> 01:03:50.930
<v Speaker 1>Yeah.

01:03:51.410 --> 01:03:53.170
<v Speaker 0>So now this project has

01:03:54.609 --> 01:03:56.454
<v Speaker 0>had some sort of artifact. But it could

01:03:56.454 --> 01:03:57.895
<v Speaker 0>be a pro buff compilation.

01:03:57.895 --> 01:03:59.095
<v Speaker 0>It could be

01:03:59.895 --> 01:04:03.175
<v Speaker 0>binary from a cargo build. It could be

01:04:03.175 --> 01:04:03.895
<v Speaker 0>as

01:04:04.295 --> 01:04:07.015
<v Speaker 0>typescript code generated from GraphQL schemas,

01:04:07.255 --> 01:04:08.055
<v Speaker 0>anything.

01:04:08.214 --> 01:04:10.135
<v Speaker 0>But now instead of my Rust project, I

01:04:10.135 --> 01:04:11.175
<v Speaker 0>want to consume

01:04:11.630 --> 01:04:13.630
<v Speaker 0>this out a file. Is that something that

01:04:13.630 --> 01:04:15.070
<v Speaker 0>Devenv can help me with?

01:04:15.950 --> 01:04:16.990
<v Speaker 1>Yeah. So

01:04:18.430 --> 01:04:20.670
<v Speaker 1>the short answer is no.

01:04:20.750 --> 01:04:23.550
<v Speaker 1>But right now, you cannot really do that.

01:04:24.030 --> 01:04:25.470
<v Speaker 1>The longer answer is that, like,

01:04:26.424 --> 01:04:27.385
<v Speaker 1>one of the

01:04:27.944 --> 01:04:30.345
<v Speaker 1>one of the kind of, like, vision

01:04:31.625 --> 01:04:34.265
<v Speaker 1>for Devenv is that, like, right now, you

01:04:34.265 --> 01:04:36.585
<v Speaker 1>you can just kind of bring in the

01:04:36.585 --> 01:04:39.785
<v Speaker 1>tools, like, the the the packages, the tooling,

01:04:39.785 --> 01:04:42.740
<v Speaker 1>the the the processes, and things like that.

01:04:43.140 --> 01:04:44.900
<v Speaker 1>But, like, the longer term vision is that

01:04:44.900 --> 01:04:46.820
<v Speaker 1>you you will be able to upgrade to

01:04:46.820 --> 01:04:47.620
<v Speaker 1>your

01:04:47.620 --> 01:04:49.460
<v Speaker 1>whole project, right, so that you can say,

01:04:49.460 --> 01:04:51.700
<v Speaker 1>okay. I have a Rust project. Now build

01:04:51.700 --> 01:04:53.780
<v Speaker 1>it the whole thing with Next, right, which

01:04:53.780 --> 01:04:54.500
<v Speaker 1>means that, like,

01:04:55.365 --> 01:04:58.325
<v Speaker 1>your project is built and converted into mix

01:04:58.325 --> 01:05:00.885
<v Speaker 1>derivations. So it's built, like, with sandboxing on

01:05:00.885 --> 01:05:02.005
<v Speaker 1>and everything like that.

01:05:02.885 --> 01:05:05.365
<v Speaker 1>And then once you you would be able

01:05:05.365 --> 01:05:06.725
<v Speaker 1>to to do those things,

01:05:07.765 --> 01:05:10.210
<v Speaker 1>then that the result of that build is

01:05:10.210 --> 01:05:12.290
<v Speaker 1>actually your artifact, and that you would be

01:05:12.290 --> 01:05:13.410
<v Speaker 1>able to kind of

01:05:13.730 --> 01:05:15.890
<v Speaker 1>compose those those things together.

01:05:16.290 --> 01:05:18.130
<v Speaker 1>But that's that's of a,

01:05:18.450 --> 01:05:20.290
<v Speaker 1>like, longer term because I think right now

01:05:20.290 --> 01:05:21.650
<v Speaker 1>we're focusing on

01:05:21.730 --> 01:05:23.410
<v Speaker 1>just creating the environments

01:05:24.035 --> 01:05:25.955
<v Speaker 1>because I think that's where people should get

01:05:25.955 --> 01:05:28.595
<v Speaker 1>started with Mix. And then Mixifying

01:05:28.835 --> 01:05:30.355
<v Speaker 1>your project is usually

01:05:30.595 --> 01:05:32.515
<v Speaker 1>not a trivial thing, at at least at

01:05:32.515 --> 01:05:33.875
<v Speaker 1>the moment with the tooling.

01:05:34.595 --> 01:05:36.355
<v Speaker 1>But that is, like, a lot a lot

01:05:36.355 --> 01:05:38.515
<v Speaker 1>more work to get there and to help

01:05:38.515 --> 01:05:39.235
<v Speaker 1>people with that.

01:05:40.329 --> 01:05:42.170
<v Speaker 0>Okay. So the only way to do that

01:05:42.170 --> 01:05:43.690
<v Speaker 0>could be for the Go project to be

01:05:43.690 --> 01:05:46.330
<v Speaker 0>its own next derivation and then consume it

01:05:46.410 --> 01:05:47.130
<v Speaker 1>that way.

01:05:48.250 --> 01:05:50.730
<v Speaker 1>Yeah. So that that's like a

01:05:50.890 --> 01:05:51.850
<v Speaker 1>future work

01:05:52.250 --> 01:05:54.490
<v Speaker 0>for Yeah. I think if Devenv could

01:05:55.545 --> 01:05:57.065
<v Speaker 0>abstract that away so that I don't need

01:05:57.065 --> 01:05:58.665
<v Speaker 0>to go deeper into next, that would be

01:05:58.665 --> 01:06:01.065
<v Speaker 0>phenomenal. But Yeah. That's that's the goal that

01:06:01.065 --> 01:06:02.505
<v Speaker 1>you would you would, like,

01:06:02.825 --> 01:06:05.865
<v Speaker 1>say, I don't know, languages.go.mixify

01:06:05.865 --> 01:06:07.704
<v Speaker 1>or whatever. I don't know how it will

01:06:07.704 --> 01:06:10.270
<v Speaker 1>exactly look. And then it will do its

01:06:10.270 --> 01:06:12.510
<v Speaker 1>best that you don't have to do much.

01:06:12.670 --> 01:06:14.109
<v Speaker 1>But there are cases where you need to

01:06:14.109 --> 01:06:15.150
<v Speaker 1>override things

01:06:15.390 --> 01:06:16.190
<v Speaker 1>because

01:06:17.069 --> 01:06:19.630
<v Speaker 1>Nix cannot, like, infer everything

01:06:19.869 --> 01:06:22.190
<v Speaker 1>it needs, but, you know, by itself.

01:06:22.349 --> 01:06:23.150
<v Speaker 1>So that's

01:06:23.535 --> 01:06:25.055
<v Speaker 1>that's where it gets tricky.

01:06:25.775 --> 01:06:26.575
<v Speaker 0>Awesome.

01:06:26.815 --> 01:06:29.135
<v Speaker 0>Alright. Well, thank you so much for spending

01:06:29.135 --> 01:06:30.335
<v Speaker 0>time with me today.

01:06:31.454 --> 01:06:34.174
<v Speaker 0>I always finish with the same question. It's

01:06:34.174 --> 01:06:36.869
<v Speaker 0>like, are you happy to share a bit

01:06:36.869 --> 01:06:38.710
<v Speaker 0>about the the road map? Right? What is

01:06:38.710 --> 01:06:40.630
<v Speaker 0>next for the Devenv project over the next

01:06:40.630 --> 01:06:42.150
<v Speaker 0>three, six, or nine months? What are you

01:06:42.150 --> 01:06:43.750
<v Speaker 0>just gonna be tackling next to make people's

01:06:43.750 --> 01:06:45.109
<v Speaker 0>lives a little bit easier?

01:06:46.309 --> 01:06:47.589
<v Speaker 1>Yeah. So

01:06:48.645 --> 01:06:51.605
<v Speaker 1>right now, we're we're just going through, like,

01:06:51.605 --> 01:06:54.325
<v Speaker 1>issues people report and trying to to not

01:06:54.325 --> 01:06:56.485
<v Speaker 1>stabilize it because I think it's pretty stable,

01:06:56.485 --> 01:06:57.125
<v Speaker 1>but, like,

01:06:57.605 --> 01:06:59.845
<v Speaker 1>to squeeze out all the the bugs, all

01:06:59.845 --> 01:07:02.005
<v Speaker 1>the edge cases because it's such a general

01:07:02.005 --> 01:07:04.325
<v Speaker 1>tool of setting up all the languages, processes.

01:07:04.280 --> 01:07:06.040
<v Speaker 1>There is quite a lot that people do

01:07:06.040 --> 01:07:07.960
<v Speaker 1>with it Yeah. Which is really exciting,

01:07:09.079 --> 01:07:11.240
<v Speaker 1>but we are trying to to kind of

01:07:11.240 --> 01:07:12.280
<v Speaker 1>go through that.

01:07:13.240 --> 01:07:15.079
<v Speaker 1>And then the second thing we're we're looking

01:07:15.079 --> 01:07:15.880
<v Speaker 1>into is, like,

01:07:17.335 --> 01:07:18.855
<v Speaker 1>kind of reimagining

01:07:18.855 --> 01:07:21.815
<v Speaker 1>how CI would work with with the with

01:07:21.815 --> 01:07:22.695
<v Speaker 1>the Devenv.

01:07:23.335 --> 01:07:24.295
<v Speaker 1>And and

01:07:24.615 --> 01:07:25.495
<v Speaker 1>because, like,

01:07:25.975 --> 01:07:27.655
<v Speaker 1>what I like about Devenv is, like, a

01:07:27.655 --> 01:07:29.655
<v Speaker 1>local first tool, and then

01:07:30.050 --> 01:07:31.970
<v Speaker 1>I think that's a better default than a

01:07:31.970 --> 01:07:34.130
<v Speaker 1>lot of the CIs today is where, like,

01:07:34.130 --> 01:07:37.650
<v Speaker 1>you you first use this, like, arbitrary proprietary

01:07:37.650 --> 01:07:39.970
<v Speaker 1>stuff, and then locally, you cannot really replicate

01:07:39.970 --> 01:07:40.530
<v Speaker 1>that.

01:07:41.570 --> 01:07:43.810
<v Speaker 1>So we're, yeah, we're looking into end of

01:07:43.970 --> 01:07:45.890
<v Speaker 1>like, experimenting with with that

01:07:46.765 --> 01:07:48.525
<v Speaker 1>because I think it would be pretty neat

01:07:48.525 --> 01:07:51.565
<v Speaker 1>to have a clean developer environment built from

01:07:51.565 --> 01:07:53.565
<v Speaker 1>scratch, and then that is your CI

01:07:54.605 --> 01:07:56.205
<v Speaker 1>where and where everything runs.

01:07:58.670 --> 01:08:00.830
<v Speaker 1>Yeah. That's pretty much it. Like, Devenv integrates

01:08:00.830 --> 01:08:03.310
<v Speaker 1>already with Cacheck, so, like, you get already

01:08:03.470 --> 01:08:05.310
<v Speaker 1>a lot of those features out of the

01:08:05.310 --> 01:08:05.950
<v Speaker 1>box.

01:08:06.110 --> 01:08:07.470
<v Speaker 1>So that's already done.

01:08:08.670 --> 01:08:10.990
<v Speaker 1>Yeah. That's about it. We have another project

01:08:10.990 --> 01:08:12.270
<v Speaker 1>that I don't want to

01:08:12.775 --> 01:08:15.335
<v Speaker 1>to to to mention mostly because I don't

01:08:15.335 --> 01:08:17.814
<v Speaker 1>want us others to copy us yet.

01:08:18.055 --> 01:08:19.975
<v Speaker 1>Once we release it, others are feel free

01:08:19.975 --> 01:08:22.215
<v Speaker 1>to copy. But I I I'm really excited

01:08:22.215 --> 01:08:24.055
<v Speaker 1>about that one as well, unfortunately. I know

01:08:24.055 --> 01:08:25.495
<v Speaker 1>I'm super vague, but, yeah,

01:08:26.420 --> 01:08:29.219
<v Speaker 1>it's gonna come out sooner than later.

01:08:29.700 --> 01:08:32.179
<v Speaker 0>Right. Well, people can always watch this space,

01:08:32.580 --> 01:08:34.660
<v Speaker 0>and I'll finish with, you know, the Devenv

01:08:34.660 --> 01:08:36.100
<v Speaker 0>as an open source project. You can find

01:08:36.100 --> 01:08:38.660
<v Speaker 0>that at github.com/casix/devenv.

01:08:38.660 --> 01:08:41.025
<v Speaker 0>I'm assuming your new product is gonna be

01:08:41.025 --> 01:08:43.024
<v Speaker 0>launching soon. We'll also be available

01:08:43.185 --> 01:08:45.425
<v Speaker 0>there so people can check out the organization,

01:08:45.425 --> 01:08:47.024
<v Speaker 0>keep an eye on things. And, of course,

01:08:47.345 --> 01:08:49.425
<v Speaker 0>we'll be sure to get tweets and things

01:08:49.425 --> 01:08:50.785
<v Speaker 0>out once it does launch.

01:08:51.665 --> 01:08:53.185
<v Speaker 0>Any last words, Domin?

01:08:53.770 --> 01:08:55.449
<v Speaker 1>I don't know. I just wanna thank you

01:08:55.449 --> 01:08:57.850
<v Speaker 1>for for this. It was really great. It's

01:08:57.850 --> 01:08:59.050
<v Speaker 1>always great to

01:08:59.210 --> 01:09:00.889
<v Speaker 1>to see, you know, that you

01:09:01.529 --> 01:09:03.369
<v Speaker 1>how you how you would use it and

01:09:03.369 --> 01:09:05.210
<v Speaker 1>the trial we we found a few nice

01:09:05.210 --> 01:09:06.969
<v Speaker 1>little things that we can improve on the

01:09:06.969 --> 01:09:08.409
<v Speaker 1>way, and that's really valuable.

01:09:08.985 --> 01:09:10.505
<v Speaker 1>So, yeah, thank you so much for for

01:09:10.505 --> 01:09:12.104
<v Speaker 1>this. It was great for me. I hope

01:09:12.104 --> 01:09:14.905
<v Speaker 1>that people enjoyed it as well. Yeah. Again,

01:09:14.905 --> 01:09:16.825
<v Speaker 0>thank you. It's always makes my day when

01:09:16.825 --> 01:09:18.825
<v Speaker 0>I get to sit down and, you know,

01:09:18.825 --> 01:09:20.505
<v Speaker 0>show off a product that I generally

01:09:21.020 --> 01:09:22.939
<v Speaker 0>love using. And I hope that other people

01:09:22.939 --> 01:09:24.540
<v Speaker 0>are watching this and go check it out

01:09:24.540 --> 01:09:26.460
<v Speaker 0>too. So thank you again for your time.

01:09:26.460 --> 01:09:28.060
<v Speaker 0>Thank you everyone for watching. We'll see you

01:09:28.060 --> 01:09:30.380
<v Speaker 0>all again next time. Have a great weekend.

01:09:30.859 --> 01:09:33.180
<v Speaker 0>And, yeah, we'll see you soon. Thank you.

01:09:51.949 --> 01:09:54.189
<v Speaker 1>Thank you for watching Rawkode Live.
