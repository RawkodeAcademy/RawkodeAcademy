WEBVTT

NOTE
Transcription provided by Deepgram
Request Id: d76083af-850b-4172-8aa7-8b22f141844f
Created: 2025-04-29T22:18:06.419Z
Duration: 6519.58
Channels: 1

00:02:02.134 --> 00:02:05.015
<v Speaker 0>Hello. Hello. Hello. Welcome, Eric. Hey.

00:02:06.550 --> 00:02:08.710
<v Speaker 0>How's it going? Pretty good, David.

00:02:09.030 --> 00:02:09.830
<v Speaker 0>Awesome.

00:02:10.470 --> 00:02:12.310
<v Speaker 0>So we are here today.

00:02:13.030 --> 00:02:15.430
<v Speaker 0>We are gonna take a look at a

00:02:15.430 --> 00:02:17.510
<v Speaker 0>couple of technologies that I'm a big, big

00:02:17.510 --> 00:02:19.190
<v Speaker 0>fan of, and I think you started playing

00:02:19.190 --> 00:02:21.910
<v Speaker 0>with recently too, which is SaltStack

00:02:22.455 --> 00:02:24.775
<v Speaker 0>on PacketHost with a lot about Pulumi throwing

00:02:24.775 --> 00:02:25.335
<v Speaker 0>in.

00:02:25.975 --> 00:02:27.095
<v Speaker 0>So

00:02:27.095 --> 00:02:29.735
<v Speaker 0>we work together at PacketHost. Right? And I

00:02:29.735 --> 00:02:30.375
<v Speaker 0>think

00:02:30.775 --> 00:02:33.255
<v Speaker 0>we've we've kind of I think I've mentioned

00:02:33.255 --> 00:02:35.415
<v Speaker 0>SaltStack a few times and piqued your curiosity.

00:02:35.495 --> 00:02:36.535
<v Speaker 0>Do you wanna just give us a little

00:02:36.535 --> 00:02:37.415
<v Speaker 0>bit of background there?

00:02:42.130 --> 00:02:44.130
<v Speaker 1>Just a second. I got I get confused

00:02:44.130 --> 00:02:46.370
<v Speaker 1>here for a moment. Ah, okay. No problem.

00:02:46.370 --> 00:02:48.130
<v Speaker 0>Can you rewind can you rewind fifteen seconds?

00:02:48.130 --> 00:02:50.850
<v Speaker 1>I had another audio stream accidentally playing. Was

00:02:51.405 --> 00:02:53.724
<v Speaker 1>was hearing the broadcast of our thing. It's

00:02:53.724 --> 00:02:55.645
<v Speaker 1>like, wait a second. I've heard that before.

00:02:55.965 --> 00:02:58.045
<v Speaker 0>Yeah. Yeah. No worries. So I was just

00:02:58.125 --> 00:03:00.045
<v Speaker 0>telling the people that are tuning in.

00:03:00.284 --> 00:03:02.204
<v Speaker 0>We worked together a packet host. I've been

00:03:02.204 --> 00:03:03.965
<v Speaker 0>there about six weeks. I think maybe a

00:03:03.965 --> 00:03:06.204
<v Speaker 0>little bit longer now. During that time, I've

00:03:06.204 --> 00:03:08.520
<v Speaker 0>been yapping on about SaltStack once or twice.

00:03:08.520 --> 00:03:09.960
<v Speaker 0>I think your interest got a little bit

00:03:09.960 --> 00:03:11.400
<v Speaker 0>peaked and you started to take a look

00:03:11.400 --> 00:03:12.360
<v Speaker 0>at that yourself. So

00:03:14.280 --> 00:03:15.320
<v Speaker 1>Yeah. So

00:03:15.560 --> 00:03:16.040
<v Speaker 1>using

00:03:16.520 --> 00:03:17.640
<v Speaker 1>SaltStack

00:03:18.600 --> 00:03:20.120
<v Speaker 1>myself to manage

00:03:21.114 --> 00:03:23.355
<v Speaker 1>what I call a menagerie of little home

00:03:23.355 --> 00:03:24.235
<v Speaker 1>systems,

00:03:25.035 --> 00:03:27.915
<v Speaker 1>Raspberry Pis and jets and nanos and the

00:03:27.915 --> 00:03:28.395
<v Speaker 1>like.

00:03:29.435 --> 00:03:31.195
<v Speaker 1>I've I've run it

00:03:33.194 --> 00:03:35.275
<v Speaker 1>once sort of in production.

00:03:35.435 --> 00:03:37.250
<v Speaker 1>I wanna say sort of in production because

00:03:37.250 --> 00:03:38.690
<v Speaker 1>we were using it, but it was not

00:03:38.690 --> 00:03:39.250
<v Speaker 1>driving,

00:03:40.130 --> 00:03:41.170
<v Speaker 1>most of things.

00:03:41.490 --> 00:03:43.250
<v Speaker 1>And I'm just curious

00:03:43.250 --> 00:03:44.130
<v Speaker 1>as to,

00:03:45.170 --> 00:03:45.570
<v Speaker 1>how

00:03:46.370 --> 00:03:47.650
<v Speaker 1>especially,

00:03:48.050 --> 00:03:49.650
<v Speaker 1>it can be useful to

00:03:50.015 --> 00:03:52.015
<v Speaker 1>paper over some of the differences when you're

00:03:52.015 --> 00:03:54.655
<v Speaker 1>managing a network of heterogeneous systems.

00:03:56.655 --> 00:03:58.495
<v Speaker 1>Machines I have in my home lab,

00:03:59.135 --> 00:04:01.375
<v Speaker 1>some run Ubuntu, some run Debian,

00:04:02.280 --> 00:04:03.400
<v Speaker 1>Ubuntu

00:04:03.400 --> 00:04:04.200
<v Speaker 1>18,

00:04:04.200 --> 00:04:05.560
<v Speaker 1>Ubuntu 20.

00:04:06.520 --> 00:04:09.720
<v Speaker 1>I I spun up a net b free

00:04:09.720 --> 00:04:11.000
<v Speaker 1>BSD machine.

00:04:11.480 --> 00:04:13.560
<v Speaker 1>I plan to put a CentOS machine in

00:04:13.560 --> 00:04:16.120
<v Speaker 1>there somewhere. So just like the the the

00:04:16.120 --> 00:04:17.240
<v Speaker 1>mix of systems

00:04:18.584 --> 00:04:21.865
<v Speaker 1>that you might each want to individually experiment

00:04:21.865 --> 00:04:22.505
<v Speaker 1>on,

00:04:22.985 --> 00:04:24.745
<v Speaker 1>but yet you will still wanna run the

00:04:24.745 --> 00:04:25.385
<v Speaker 1>whole

00:04:25.944 --> 00:04:27.944
<v Speaker 1>the whole mass as if it was one

00:04:27.944 --> 00:04:28.745
<v Speaker 1>one

00:04:29.305 --> 00:04:31.944
<v Speaker 1>unit and not a whole bunch of individual

00:04:31.944 --> 00:04:32.425
<v Speaker 1>machines.

00:04:34.390 --> 00:04:35.030
<v Speaker 0>Excellent.

00:04:35.750 --> 00:04:38.150
<v Speaker 0>I'm sure we could do that. So what

00:04:38.150 --> 00:04:38.310
<v Speaker 0>I

00:04:39.030 --> 00:04:40.950
<v Speaker 0>let me kinda let me share my screen.

00:04:40.950 --> 00:04:42.630
<v Speaker 0>Let's just get started. I think the best

00:04:42.630 --> 00:04:44.230
<v Speaker 0>thing to do is just kind of start

00:04:44.230 --> 00:04:46.710
<v Speaker 0>with where we're starting from. Right? So I

00:04:46.710 --> 00:04:50.535
<v Speaker 0>did do a small session on provisioning packet

00:04:50.535 --> 00:04:51.975
<v Speaker 0>servers with Pulumi and

00:04:52.694 --> 00:04:55.175
<v Speaker 0>bootstrapping the cluster with SaltStack and kind of

00:04:55.175 --> 00:04:57.095
<v Speaker 0>just left it there. The the left the

00:04:57.095 --> 00:04:58.375
<v Speaker 0>rest of it was left with the resource

00:04:58.375 --> 00:04:59.175
<v Speaker 0>imagination.

00:04:59.414 --> 00:05:01.414
<v Speaker 0>And I wanna close that gap today. So

00:05:01.669 --> 00:05:04.630
<v Speaker 0>what I prepared in advance is really just

00:05:04.630 --> 00:05:07.670
<v Speaker 0>creating this empty packet project.

00:05:08.550 --> 00:05:11.510
<v Speaker 0>We have no servers currently available. However, we

00:05:11.510 --> 00:05:13.270
<v Speaker 0>do have the codes from last time, which

00:05:13.270 --> 00:05:15.110
<v Speaker 0>I will quickly run you through.

00:05:15.510 --> 00:05:18.475
<v Speaker 0>We'll get that kicked off and deploying, and

00:05:18.475 --> 00:05:20.475
<v Speaker 0>then we'll talk about how we can leverage

00:05:20.475 --> 00:05:22.555
<v Speaker 0>some of Salt's really

00:05:22.635 --> 00:05:25.275
<v Speaker 0>cool and unique features to, you know, to

00:05:25.275 --> 00:05:28.395
<v Speaker 0>manage all those servers with a single API,

00:05:28.395 --> 00:05:29.915
<v Speaker 0>which I think is really important and and

00:05:29.915 --> 00:05:31.115
<v Speaker 0>kind of from what you've said there.

00:05:32.400 --> 00:05:32.960
<v Speaker 0>So

00:05:34.080 --> 00:05:36.720
<v Speaker 0>with regards to the Pulumi code, I'm using

00:05:36.720 --> 00:05:38.560
<v Speaker 0>TypeScript. One of the really cool things about

00:05:38.560 --> 00:05:40.000
<v Speaker 0>Pulumi is you get to use the language

00:05:40.000 --> 00:05:41.920
<v Speaker 0>of your choice as long as it's supported.

00:05:41.920 --> 00:05:43.600
<v Speaker 0>It supports TypeScript, Go.

00:05:44.255 --> 00:05:46.175
<v Speaker 0>There's some dot net support,

00:05:46.415 --> 00:05:48.815
<v Speaker 0>Python support, and maybe one or two others.

00:05:49.294 --> 00:05:51.055
<v Speaker 0>For me, I like TypeScript, so we're gonna

00:05:51.055 --> 00:05:53.215
<v Speaker 0>go with that. And what this code does

00:05:53.215 --> 00:05:53.935
<v Speaker 0>is

00:05:54.255 --> 00:05:56.335
<v Speaker 0>it will create a salt master and a

00:05:56.335 --> 00:05:58.270
<v Speaker 0>single minion. I I think one of the

00:05:58.270 --> 00:06:00.430
<v Speaker 0>first things we should do is just change

00:06:00.830 --> 00:06:02.510
<v Speaker 0>the setup to be more

00:06:03.470 --> 00:06:05.550
<v Speaker 0>diverse and reflective of what you had in

00:06:05.550 --> 00:06:08.430
<v Speaker 0>your head with regards to operating system and

00:06:08.430 --> 00:06:09.789
<v Speaker 0>even hardware

00:06:09.789 --> 00:06:10.350
<v Speaker 0>differences.

00:06:11.975 --> 00:06:14.055
<v Speaker 0>So let's see what we have.

00:06:14.855 --> 00:06:16.775
<v Speaker 0>This is the code that spends up the

00:06:16.775 --> 00:06:17.895
<v Speaker 0>salt master.

00:06:19.175 --> 00:06:21.415
<v Speaker 0>And you can see from this block of

00:06:21.415 --> 00:06:23.655
<v Speaker 0>code here that it is provisioning a new

00:06:23.655 --> 00:06:24.935
<v Speaker 0>device on packet.

00:06:26.180 --> 00:06:27.780
<v Speaker 0>And Amsterdam One,

00:06:27.940 --> 00:06:30.980
<v Speaker 0>a c two medium with Debian nine.

00:06:31.860 --> 00:06:33.620
<v Speaker 0>So I think what we do for our

00:06:33.620 --> 00:06:36.020
<v Speaker 0>menus is try to have a nice

00:06:36.020 --> 00:06:38.820
<v Speaker 0>variety that did not reflect this.

00:06:41.015 --> 00:06:42.215
<v Speaker 0>If we come into I think we'll need

00:06:42.215 --> 00:06:43.495
<v Speaker 0>to change our menu and code a little

00:06:43.495 --> 00:06:45.575
<v Speaker 0>bit, but that's alright. I don't mind a

00:06:45.575 --> 00:06:46.615
<v Speaker 0>better life coding.

00:06:47.095 --> 00:06:49.175
<v Speaker 0>So our menu and code currently

00:06:49.175 --> 00:06:50.935
<v Speaker 0>hard codes the same values.

00:06:51.895 --> 00:06:53.575
<v Speaker 0>Have we assumed that we want to change

00:06:53.790 --> 00:06:55.550
<v Speaker 0>this, do you think changing the plan and

00:06:55.550 --> 00:06:57.710
<v Speaker 0>the operating system and and doing a few

00:06:57.710 --> 00:06:59.390
<v Speaker 0>varieties of those is enough to kind of

00:07:00.750 --> 00:07:03.150
<v Speaker 1>Yeah. It sort of gives gives the the

00:07:03.150 --> 00:07:04.750
<v Speaker 1>the flavor for it.

00:07:05.310 --> 00:07:05.950
<v Speaker 1>Awesome.

00:07:07.310 --> 00:07:08.910
<v Speaker 1>I would suggest

00:07:12.005 --> 00:07:14.565
<v Speaker 1>well, let's see. So in in my experiment

00:07:14.725 --> 00:07:15.365
<v Speaker 1>back

00:07:17.045 --> 00:07:19.525
<v Speaker 1>up a little bit. In my experiments, there

00:07:19.525 --> 00:07:22.245
<v Speaker 1>are differences between Debian and Ubuntu

00:07:22.245 --> 00:07:23.605
<v Speaker 1>in terms of package management.

00:07:24.289 --> 00:07:25.970
<v Speaker 1>They're not usually

00:07:25.970 --> 00:07:29.009
<v Speaker 1>they're not usually great until you run into

00:07:29.009 --> 00:07:30.850
<v Speaker 1>them unexpectedly.

00:07:33.090 --> 00:07:35.410
<v Speaker 1>The real challenges

00:07:35.410 --> 00:07:38.210
<v Speaker 1>get to be as you get further from

00:07:38.210 --> 00:07:39.090
<v Speaker 1>those two systems.

00:07:39.845 --> 00:07:41.765
<v Speaker 1>You know, package names changes,

00:07:42.805 --> 00:07:45.125
<v Speaker 1>tooling changes a little bit. So

00:07:45.845 --> 00:07:47.925
<v Speaker 1>what what what plan should we pick?

00:07:49.285 --> 00:07:51.445
<v Speaker 0>Yeah. Let okay. Let's start with that then.

00:07:51.445 --> 00:07:53.570
<v Speaker 0>So let's Yeah. I mean, I should know

00:07:53.570 --> 00:07:55.090
<v Speaker 0>these off the top of my head. I

00:07:55.090 --> 00:07:57.570
<v Speaker 0>must say I'm really bad at that. So

00:07:57.570 --> 00:08:00.210
<v Speaker 0>let's just use the UI where possible.

00:08:00.450 --> 00:08:02.130
<v Speaker 0>I think we took it all complete with

00:08:02.130 --> 00:08:04.050
<v Speaker 0>Fulume. And the reason I'm not gonna use

00:08:04.050 --> 00:08:06.445
<v Speaker 0>it right now is just because it doesn't

00:08:06.445 --> 00:08:08.285
<v Speaker 0>currently check the availability.

00:08:08.764 --> 00:08:11.005
<v Speaker 0>So, you know, I can pick some, but

00:08:11.005 --> 00:08:12.764
<v Speaker 0>I have had issues where I say, you

00:08:12.764 --> 00:08:14.525
<v Speaker 0>know, I want an m one extra large,

00:08:14.525 --> 00:08:16.365
<v Speaker 0>and it's just not been available. So it's

00:08:16.365 --> 00:08:17.565
<v Speaker 0>it's nice to come in here and just

00:08:17.565 --> 00:08:19.965
<v Speaker 0>confirm in real time what we've got. So

00:08:21.450 --> 00:08:23.530
<v Speaker 0>how about a c one large arm?

00:08:24.090 --> 00:08:25.850
<v Speaker 1>Sure. I think we take a couple of

00:08:25.850 --> 00:08:27.930
<v Speaker 0>boxes there, don't we? Yep.

00:08:29.290 --> 00:08:32.570
<v Speaker 0>And operating system on arm, we've got

00:08:33.875 --> 00:08:36.355
<v Speaker 1>Pick a Ubuntu, I think, because it'll provision

00:08:36.355 --> 00:08:37.155
<v Speaker 1>fast.

00:08:38.115 --> 00:08:38.755
<v Speaker 0>K.

00:08:41.155 --> 00:08:43.875
<v Speaker 0>I guess it's been to eighteen o four.

00:08:43.875 --> 00:08:44.515
<v Speaker 0>Now

00:08:45.155 --> 00:08:46.995
<v Speaker 0>let's we're gonna add another menu, so I'm

00:08:46.995 --> 00:08:49.590
<v Speaker 0>just gonna make these configurable as well. So

00:08:50.310 --> 00:08:52.950
<v Speaker 0>we'll pass in a plan

00:08:57.350 --> 00:08:58.310
<v Speaker 0>and

00:08:58.310 --> 00:09:00.390
<v Speaker 0>a operating system.

00:09:02.925 --> 00:09:05.405
<v Speaker 0>And then we'll reference these down here.

00:09:05.725 --> 00:09:06.925
<v Speaker 0>And

00:09:07.485 --> 00:09:09.085
<v Speaker 0>that just means that we can oh, it'll

00:09:09.085 --> 00:09:10.525
<v Speaker 0>just make it a bit easier for us

00:09:10.525 --> 00:09:12.205
<v Speaker 0>to spin up more,

00:09:14.445 --> 00:09:15.885
<v Speaker 0>assuming I learn how to type.

00:09:16.560 --> 00:09:17.280
<v Speaker 0>Okay.

00:09:18.160 --> 00:09:20.160
<v Speaker 0>So if I pop back to our index,

00:09:20.160 --> 00:09:22.080
<v Speaker 0>when we create this here, we need to

00:09:22.080 --> 00:09:23.360
<v Speaker 0>then specify

00:09:25.200 --> 00:09:26.240
<v Speaker 0>plans,

00:09:26.800 --> 00:09:27.920
<v Speaker 0>skew on large,

00:09:28.160 --> 00:09:30.160
<v Speaker 0>and operating systems.

00:09:31.065 --> 00:09:32.665
<v Speaker 0>And we were gonna go with them to

00:09:32.665 --> 00:09:34.105
<v Speaker 0>18 o four.

00:09:34.425 --> 00:09:36.265
<v Speaker 0>And then we can copy and paste this,

00:09:36.745 --> 00:09:39.145
<v Speaker 0>and we can create two more machines.

00:09:39.385 --> 00:09:41.385
<v Speaker 0>So I'll call this stop menu in one,

00:09:41.385 --> 00:09:41.465
<v Speaker 0>two,

00:09:43.760 --> 00:09:44.480
<v Speaker 0>three.

00:09:51.040 --> 00:09:52.960
<v Speaker 0>And it's formatted a bit nicer for me.

00:09:52.960 --> 00:09:56.165
<v Speaker 0>Cool. How about we spin up the

00:09:56.644 --> 00:09:58.005
<v Speaker 0>let's get something

00:09:58.245 --> 00:10:00.245
<v Speaker 0>so the c one arm has

00:10:01.445 --> 00:10:02.644
<v Speaker 0>one SSD,

00:10:03.204 --> 00:10:05.205
<v Speaker 0>two gigabit disks,

00:10:06.084 --> 00:10:08.245
<v Speaker 0>ThunderX processor.

00:10:08.644 --> 00:10:09.045
<v Speaker 1>Yep.

00:10:10.370 --> 00:10:13.490
<v Speaker 0>So and what was our first device?

00:10:16.690 --> 00:10:18.690
<v Speaker 1>First one was a c c one large

00:10:18.690 --> 00:10:20.209
<v Speaker 1>arm with Ubuntu.

00:10:23.645 --> 00:10:25.485
<v Speaker 1>You wanna do a c one small?

00:10:26.205 --> 00:10:27.885
<v Speaker 0>So our master Yeah.

00:10:28.845 --> 00:10:30.925
<v Speaker 0>It's an AMD. So why don't we grab

00:10:30.925 --> 00:10:32.365
<v Speaker 0>the c on here

00:10:34.045 --> 00:10:36.445
<v Speaker 0>for something just a bit different? S one

00:10:36.445 --> 00:10:37.645
<v Speaker 0>large. Exit.

00:10:38.350 --> 00:10:41.550
<v Speaker 1>Yep. That's a storage server, so that's got

00:10:41.550 --> 00:10:42.110
<v Speaker 1>a

00:10:42.430 --> 00:10:44.830
<v Speaker 1>whole bunch of storage on it. And what

00:10:44.830 --> 00:10:46.430
<v Speaker 0>was the other suggestion you made?

00:10:47.070 --> 00:10:48.830
<v Speaker 1>A c one small.

00:10:51.105 --> 00:10:54.705
<v Speaker 0>Got it. That's a good workhorse machine. Alright.

00:10:54.705 --> 00:10:57.745
<v Speaker 0>So let's see. Storage machine, let's run.

00:10:58.945 --> 00:11:01.185
<v Speaker 0>Let's look at all the operating systems.

00:11:02.545 --> 00:11:03.905
<v Speaker 0>How brave are we feeling?

00:11:12.680 --> 00:11:13.800
<v Speaker 1>FreeBSD?

00:11:13.880 --> 00:11:16.120
<v Speaker 1>Is that gonna work on FreeBSD? Don't know.

00:11:16.440 --> 00:11:17.160
<v Speaker 0>So

00:11:17.480 --> 00:11:19.000
<v Speaker 0>as soon as I seen that, I knew

00:11:19.000 --> 00:11:20.275
<v Speaker 0>you were gonna mention it.

00:11:21.955 --> 00:11:23.155
<v Speaker 0>So if we take a look at the

00:11:23.155 --> 00:11:24.515
<v Speaker 0>menu and user data,

00:11:25.315 --> 00:11:26.915
<v Speaker 0>we will need to just tweak this a

00:11:26.915 --> 00:11:28.435
<v Speaker 0>little bit so that it works on free

00:11:28.435 --> 00:11:29.955
<v Speaker 0>s free BSD.

00:11:31.075 --> 00:11:31.475
<v Speaker 1>Right.

00:11:32.120 --> 00:11:33.560
<v Speaker 0>As long as we know how to install

00:11:33.560 --> 00:11:35.160
<v Speaker 0>Salt on the previous device. You know what?

00:11:35.160 --> 00:11:35.880
<v Speaker 0>We can make this

00:11:36.600 --> 00:11:39.160
<v Speaker 0>Salt provides something called Salt Bootstrap.

00:11:39.320 --> 00:11:39.959
<v Speaker 1>Right.

00:11:41.959 --> 00:11:44.519
<v Speaker 1>A very helpful script that takes care of

00:11:44.519 --> 00:11:45.639
<v Speaker 1>the whole install process.

00:11:46.115 --> 00:11:49.315
<v Speaker 0>Yeah. So we don't necessarily need to hard

00:11:49.315 --> 00:11:51.394
<v Speaker 0>code it the way I have to use

00:11:51.394 --> 00:11:52.514
<v Speaker 0>package managers.

00:11:53.315 --> 00:11:53.954
<v Speaker 0>So

00:11:54.595 --> 00:11:57.074
<v Speaker 0>as long as we've got machines with curl

00:11:57.074 --> 00:11:57.475
<v Speaker 0>on it,

00:11:58.370 --> 00:12:01.330
<v Speaker 0>I don't really foresee any problem with just

00:12:01.330 --> 00:12:03.970
<v Speaker 0>dropping in the code like this. Yeah. Except

00:12:03.970 --> 00:12:07.010
<v Speaker 1>I think on free BSD, that tool is

00:12:07.010 --> 00:12:08.210
<v Speaker 1>not curl.

00:12:08.610 --> 00:12:10.370
<v Speaker 1>There's something called fetch there.

00:12:11.975 --> 00:12:12.774
<v Speaker 0>Maybe

00:12:14.615 --> 00:12:17.255
<v Speaker 1>that's maybe that's in the advanced challenge.

00:12:17.815 --> 00:12:20.134
<v Speaker 0>The advanced challenge. Well, I'm gonna add the

00:12:20.134 --> 00:12:21.894
<v Speaker 0>free SD box, but we'll maybe add another

00:12:21.894 --> 00:12:23.415
<v Speaker 0>one just in case that we got Yeah.

00:12:23.415 --> 00:12:25.415
<v Speaker 0>Just We've got we've we've got three. I

00:12:25.415 --> 00:12:27.370
<v Speaker 0>think we'll be okay. Let's do it. Have

00:12:27.370 --> 00:12:29.130
<v Speaker 0>a brief okay. So

00:12:29.930 --> 00:12:31.850
<v Speaker 0>user data room, we'll use this and free

00:12:31.850 --> 00:12:34.570
<v Speaker 0>STP and free BSD fails, we can SSH

00:12:34.570 --> 00:12:36.570
<v Speaker 0>up to that machine, quickly run software and

00:12:36.570 --> 00:12:39.370
<v Speaker 0>strap manually and fix this out there.

00:12:40.295 --> 00:12:41.175
<v Speaker 0>Alright.

00:12:42.055 --> 00:12:44.055
<v Speaker 0>Which means we need to pop back to

00:12:44.055 --> 00:12:45.014
<v Speaker 0>here.

00:12:45.574 --> 00:12:48.055
<v Speaker 0>So let's make menu in two of that.

00:12:48.774 --> 00:12:50.535
<v Speaker 0>You happy with the storage one being free

00:12:50.535 --> 00:12:52.295
<v Speaker 0>BSD? Do you foresee any problems there?

00:12:53.490 --> 00:12:54.850
<v Speaker 1>The only thing I can think of is

00:12:54.850 --> 00:12:56.530
<v Speaker 1>that it might take longer to boot.

00:12:57.490 --> 00:12:59.250
<v Speaker 1>So it might end up being

00:12:59.490 --> 00:13:02.370
<v Speaker 1>the last one that comes up. Yeah. That's

00:13:02.370 --> 00:13:03.570
<v Speaker 0>okay. We'll deal with that then.

00:13:06.144 --> 00:13:08.384
<v Speaker 0>Okay. So the last machine is a c

00:13:08.384 --> 00:13:10.225
<v Speaker 0>one small. So let's just make sure we

00:13:10.225 --> 00:13:11.505
<v Speaker 0>get an accurate

00:13:12.384 --> 00:13:14.065
<v Speaker 1>Yeah. If you can put a

00:13:14.305 --> 00:13:15.024
<v Speaker 1>the

00:13:15.345 --> 00:13:15.904
<v Speaker 1>try

00:13:16.625 --> 00:13:18.625
<v Speaker 1>I know you had Ubuntu 18 for one

00:13:18.625 --> 00:13:18.865
<v Speaker 1>of them.

00:13:19.550 --> 00:13:21.870
<v Speaker 1>I didn't see Ubuntu 20 in the drop

00:13:21.870 --> 00:13:23.310
<v Speaker 1>down, so I don't know if that's a

00:13:23.310 --> 00:13:24.190
<v Speaker 1>matter of

00:13:24.750 --> 00:13:27.389
<v Speaker 1>provider not knowing about it yet. Yeah. I

00:13:27.389 --> 00:13:29.550
<v Speaker 0>think the provider just doesn't up to date

00:13:29.550 --> 00:13:31.149
<v Speaker 0>with the latest versions.

00:13:31.709 --> 00:13:33.629
<v Speaker 0>I think we found us another session we

00:13:33.629 --> 00:13:35.069
<v Speaker 0>can do where we update the provider.

00:13:36.105 --> 00:13:36.745
<v Speaker 1>Yeah.

00:13:37.065 --> 00:13:39.465
<v Speaker 0>How about we do CentOS then? Guess it's

00:13:39.465 --> 00:13:42.665
<v Speaker 0>a good mix of operating systems.

00:13:43.145 --> 00:13:43.785
<v Speaker 0>Yeah.

00:13:44.345 --> 00:13:45.225
<v Speaker 0>CentOS

00:13:45.225 --> 00:13:46.345
<v Speaker 0>seven. Okay.

00:13:47.670 --> 00:13:49.750
<v Speaker 0>So we can run this now.

00:13:50.310 --> 00:13:53.510
<v Speaker 0>Hopefully, we don't run into any problems.

00:13:56.470 --> 00:13:58.710
<v Speaker 0>Can I set the project ID anywhere?

00:14:02.965 --> 00:14:04.085
<v Speaker 1>Yes. You did.

00:14:05.045 --> 00:14:06.965
<v Speaker 0>Go ahead. Platform.

00:14:06.965 --> 00:14:08.165
<v Speaker 1>Project ID.

00:14:10.245 --> 00:14:11.445
<v Speaker 0>Cool.

00:14:11.730 --> 00:14:12.290
<v Speaker 0>So

00:14:12.690 --> 00:14:14.209
<v Speaker 0>I think there's just a little bit of

00:14:14.209 --> 00:14:16.130
<v Speaker 0>configuration that I need then.

00:14:18.050 --> 00:14:19.970
<v Speaker 0>Yeah. So we just need to set

00:14:22.529 --> 00:14:23.810
<v Speaker 0>the project

00:14:23.810 --> 00:14:27.855
<v Speaker 0>name and organization ID. Okay. So contact

00:14:28.095 --> 00:14:28.654
<v Speaker 0>set

00:14:31.214 --> 00:14:32.015
<v Speaker 0>project

00:14:32.175 --> 00:14:32.815
<v Speaker 0>name.

00:14:33.935 --> 00:14:35.774
<v Speaker 0>I called it Rawkode

00:14:36.495 --> 00:14:38.175
<v Speaker 0>folks back and

00:14:39.454 --> 00:14:41.454
<v Speaker 0>organization

00:14:41.920 --> 00:14:43.760
<v Speaker 0>k. And

00:14:43.760 --> 00:14:45.760
<v Speaker 0>I can grab this from

00:14:49.600 --> 00:14:50.000
<v Speaker 0>here.

00:15:03.815 --> 00:15:04.695
<v Speaker 0>Alright.

00:15:05.095 --> 00:15:07.175
<v Speaker 0>Let's see how happy it So it's gonna

00:15:07.175 --> 00:15:07.975
<v Speaker 0>try and attempt.

00:15:08.620 --> 00:15:10.540
<v Speaker 0>Oh, it's gonna create a project.

00:15:11.259 --> 00:15:13.339
<v Speaker 0>That's

00:15:13.339 --> 00:15:15.500
<v Speaker 0>okay. Let's just give it a a unique

00:15:15.500 --> 00:15:16.380
<v Speaker 0>name then.

00:15:16.860 --> 00:15:19.180
<v Speaker 0>Let's say no. I forgot that it creates

00:15:19.180 --> 00:15:22.215
<v Speaker 0>a project. Oh, create from scratch.

00:15:22.695 --> 00:15:23.495
<v Speaker 0>Yep.

00:15:27.735 --> 00:15:30.135
<v Speaker 0>Okay. So it's gonna create a project. It's

00:15:30.135 --> 00:15:31.415
<v Speaker 0>gonna create a master

00:15:31.575 --> 00:15:33.095
<v Speaker 0>device and 3,000,000 devices.

00:15:33.980 --> 00:15:36.779
<v Speaker 0>And assuming my API token is incorrect, we're

00:15:36.779 --> 00:15:39.740
<v Speaker 0>good. The project is now created. So if

00:15:39.740 --> 00:15:41.579
<v Speaker 0>I refresh this page

00:15:45.100 --> 00:15:46.779
<v Speaker 0>when the first thing gets created, there's always

00:15:46.779 --> 00:15:48.459
<v Speaker 0>this, like, sigh of relief because I know,

00:15:48.459 --> 00:15:50.995
<v Speaker 0>like, if anything goes wrong, it's definite it's

00:15:50.995 --> 00:15:54.115
<v Speaker 0>flexible from this point forward. So Yeah. There's

00:15:54.115 --> 00:15:55.075
<v Speaker 0>our project.

00:15:56.995 --> 00:15:59.634
<v Speaker 0>We can see the master is on its

00:15:59.634 --> 00:16:00.195
<v Speaker 0>way.

00:16:01.315 --> 00:16:03.074
<v Speaker 0>So this will take, I guess,

00:16:04.750 --> 00:16:08.269
<v Speaker 0>five minutes. Minutes. Yeah. Well, hopefully, less than

00:16:08.269 --> 00:16:10.510
<v Speaker 0>five minutes. Potentially, up to five minutes.

00:16:11.149 --> 00:16:12.269
<v Speaker 0>But we can take a look at some

00:16:12.269 --> 00:16:13.390
<v Speaker 0>of the other stuff that's going on in

00:16:13.390 --> 00:16:14.350
<v Speaker 0>this repository

00:16:14.430 --> 00:16:16.510
<v Speaker 0>just to get a an understanding of what's

00:16:16.510 --> 00:16:19.154
<v Speaker 0>going on. So this platform object is just

00:16:19.154 --> 00:16:21.315
<v Speaker 0>something that I do, I think, in every

00:16:21.954 --> 00:16:24.355
<v Speaker 0>Pulumi project. And it and really just a

00:16:24.355 --> 00:16:26.274
<v Speaker 0>wrapper around the configuration

00:16:26.755 --> 00:16:28.995
<v Speaker 0>to make things a little bit easier. And

00:16:28.995 --> 00:16:31.235
<v Speaker 0>it also applies types to the configuration too.

00:16:31.410 --> 00:16:33.329
<v Speaker 0>But, you know, just by doing this, I

00:16:33.329 --> 00:16:35.009
<v Speaker 0>can say, hey. This and then I pass

00:16:35.009 --> 00:16:36.850
<v Speaker 0>it around everywhere I go. So you can

00:16:36.850 --> 00:16:37.570
<v Speaker 0>see here,

00:16:38.690 --> 00:16:40.050
<v Speaker 0>we run get platform.

00:16:41.089 --> 00:16:43.089
<v Speaker 0>We grab the name, and then we pass

00:16:43.089 --> 00:16:45.024
<v Speaker 0>platform into all of these functions, which are

00:16:45.024 --> 00:16:47.825
<v Speaker 0>used as helpers to then provision new infrastructure.

00:16:48.305 --> 00:16:49.345
<v Speaker 0>If I take a look at the salt

00:16:49.345 --> 00:16:51.105
<v Speaker 0>master, which we've already kind of

00:16:52.144 --> 00:16:54.545
<v Speaker 0>picked that, it just creates a device. Something

00:16:54.545 --> 00:16:56.464
<v Speaker 0>that's really cool about Pulumi

00:16:56.464 --> 00:16:57.745
<v Speaker 0>is I'm using

00:16:58.589 --> 00:17:01.310
<v Speaker 0>NPM to pull in dependencies to also make

00:17:01.310 --> 00:17:02.510
<v Speaker 0>my life a bit easier.

00:17:02.990 --> 00:17:04.270
<v Speaker 0>So you can see I'm not sure if

00:17:04.270 --> 00:17:06.190
<v Speaker 0>you're familiar with Mustache, but it's a templating

00:17:06.190 --> 00:17:07.789
<v Speaker 0>language for node. Yeah.

00:17:08.750 --> 00:17:10.109
<v Speaker 0>And it just means that I can keep

00:17:10.109 --> 00:17:12.855
<v Speaker 0>my user data provisioning script at its own

00:17:12.855 --> 00:17:14.615
<v Speaker 0>file with its own name and its own

00:17:14.615 --> 00:17:15.894
<v Speaker 0>syntax highlighting.

00:17:16.615 --> 00:17:19.974
<v Speaker 0>And where needed, I can interpolate using mustache.

00:17:20.375 --> 00:17:21.815
<v Speaker 0>We could just see that I'm dropping in

00:17:21.815 --> 00:17:23.815
<v Speaker 0>some Python code as well, which is available

00:17:23.815 --> 00:17:24.135
<v Speaker 0>here.

00:17:25.720 --> 00:17:27.960
<v Speaker 0>So I like this setup. It works really

00:17:27.960 --> 00:17:28.519
<v Speaker 0>well.

00:17:28.760 --> 00:17:31.080
<v Speaker 0>Now let's talk about this Python code thing.

00:17:31.080 --> 00:17:31.799
<v Speaker 0>So

00:17:33.080 --> 00:17:34.119
<v Speaker 0>one of the

00:17:34.440 --> 00:17:37.080
<v Speaker 0>the really cool concepts within SaltStack

00:17:37.080 --> 00:17:38.600
<v Speaker 0>is it has

00:17:39.975 --> 00:17:41.575
<v Speaker 0>something called a grain.

00:17:41.655 --> 00:17:44.775
<v Speaker 0>And a grain is a piece of metadata

00:17:44.775 --> 00:17:47.414
<v Speaker 0>or information or a key value pair

00:17:47.735 --> 00:17:48.534
<v Speaker 0>that is

00:17:48.935 --> 00:17:50.294
<v Speaker 0>specific to

00:17:50.615 --> 00:17:51.655
<v Speaker 0>one of the minions.

00:17:53.150 --> 00:17:53.870
<v Speaker 0>And

00:17:54.270 --> 00:17:58.190
<v Speaker 0>packet also has this metadata endpoint here,

00:17:58.270 --> 00:18:00.110
<v Speaker 0>which could be called from any of our

00:18:00.110 --> 00:18:00.990
<v Speaker 0>devices,

00:18:01.150 --> 00:18:03.710
<v Speaker 0>and it returns the metadata about the hardware

00:18:03.710 --> 00:18:04.990
<v Speaker 0>and the software and all of our SM

00:18:04.990 --> 00:18:06.975
<v Speaker 0>PCs too, and the the back end of

00:18:06.975 --> 00:18:07.695
<v Speaker 0>this stuff.

00:18:08.655 --> 00:18:09.535
<v Speaker 0>SaltStack

00:18:09.535 --> 00:18:11.455
<v Speaker 0>doesn't support us out of the box, but

00:18:11.455 --> 00:18:13.695
<v Speaker 0>because Salt is in Python and it's relatively

00:18:13.695 --> 00:18:16.174
<v Speaker 0>easy to extend, like, and under

00:18:16.575 --> 00:18:19.840
<v Speaker 0>what's that? Under 18 lanes of Python, I

00:18:19.840 --> 00:18:22.080
<v Speaker 0>was able to just consume that API and

00:18:22.080 --> 00:18:23.919
<v Speaker 0>then make these grains available.

00:18:24.960 --> 00:18:26.880
<v Speaker 0>The the use case may not be completely

00:18:26.880 --> 00:18:28.880
<v Speaker 0>apart yet, but once we get onto one

00:18:28.880 --> 00:18:30.720
<v Speaker 0>of these machines, we can actually realize that

00:18:30.720 --> 00:18:31.919
<v Speaker 0>we can use the facility,

00:18:32.404 --> 00:18:34.885
<v Speaker 0>the plan, the class, the IQN, and ID

00:18:34.885 --> 00:18:36.244
<v Speaker 0>as targets

00:18:37.445 --> 00:18:39.684
<v Speaker 0>when we're trying to query our menu.

00:18:41.365 --> 00:18:43.364
<v Speaker 0>And this is the tags as well. So

00:18:45.044 --> 00:18:47.205
<v Speaker 1>it's worth while thinking

00:18:47.205 --> 00:18:47.524
<v Speaker 1>through,

00:18:48.460 --> 00:18:51.100
<v Speaker 1>Salt has some terminology

00:18:51.980 --> 00:18:53.900
<v Speaker 1>that's unique to salt.

00:18:55.260 --> 00:18:59.100
<v Speaker 1>Grains are unique to the machine,

00:19:00.060 --> 00:19:01.260
<v Speaker 1>but there's also

00:19:02.164 --> 00:19:03.124
<v Speaker 1>pillars.

00:19:03.205 --> 00:19:05.924
<v Speaker 1>I I I I admit to being a

00:19:05.924 --> 00:19:06.644
<v Speaker 1>little bit

00:19:07.044 --> 00:19:08.484
<v Speaker 1>flummox sometime

00:19:09.205 --> 00:19:11.445
<v Speaker 1>sometimes just figuring out exactly which is which.

00:19:11.445 --> 00:19:13.284
<v Speaker 1>Like, some things are

00:19:14.005 --> 00:19:16.164
<v Speaker 1>you can query a node based on, for

00:19:16.164 --> 00:19:17.524
<v Speaker 1>instance, its operating system.

00:19:18.430 --> 00:19:19.070
<v Speaker 1>Right?

00:19:19.870 --> 00:19:22.750
<v Speaker 0>You can you can query a node or

00:19:22.750 --> 00:19:23.470
<v Speaker 1>or

00:19:24.510 --> 00:19:26.030
<v Speaker 1>act on a node,

00:19:26.670 --> 00:19:28.110
<v Speaker 1>based on

00:19:28.670 --> 00:19:31.630
<v Speaker 1>data that's stored on that node or data

00:19:31.630 --> 00:19:32.750
<v Speaker 1>that's stored on

00:19:33.505 --> 00:19:34.624
<v Speaker 1>the master.

00:19:37.424 --> 00:19:38.144
<v Speaker 0>Yep.

00:19:38.465 --> 00:19:40.544
<v Speaker 0>So let me I'll dive into that a

00:19:40.544 --> 00:19:42.225
<v Speaker 0>little bit then. You know, if anything is

00:19:42.225 --> 00:19:43.345
<v Speaker 0>unclear, just

00:19:43.505 --> 00:19:45.424
<v Speaker 0>just prod me. So Yeah.

00:19:46.050 --> 00:19:48.850
<v Speaker 0>You're right. The grains are specific to each

00:19:48.850 --> 00:19:51.410
<v Speaker 0>of the menus. So that's a device in

00:19:51.410 --> 00:19:53.890
<v Speaker 0>our case here. So a server is going

00:19:53.890 --> 00:19:56.370
<v Speaker 0>to the grains will expose the operating system,

00:19:56.370 --> 00:19:58.450
<v Speaker 0>the processes, the number of desks, the types

00:19:58.450 --> 00:19:59.010
<v Speaker 0>of desks,

00:19:59.434 --> 00:20:00.794
<v Speaker 0>the kernel version,

00:20:00.875 --> 00:20:02.475
<v Speaker 0>all of that stuff. All the stuff that

00:20:02.475 --> 00:20:04.554
<v Speaker 0>is used to describe that menu.

00:20:05.275 --> 00:20:07.915
<v Speaker 0>The pillars, on the other hand, are usually

00:20:07.915 --> 00:20:09.914
<v Speaker 0>either hard coded or

00:20:09.995 --> 00:20:11.754
<v Speaker 0>provided to the master

00:20:11.915 --> 00:20:13.915
<v Speaker 0>or come from a third party data source.

00:20:14.190 --> 00:20:17.070
<v Speaker 0>So there's actually many different sources for pellet

00:20:17.070 --> 00:20:19.149
<v Speaker 0>data. You can use Postgres. You can use

00:20:19.149 --> 00:20:19.869
<v Speaker 0>MongoDB.

00:20:20.350 --> 00:20:22.669
<v Speaker 0>You can use, you know, managed cloud services

00:20:22.669 --> 00:20:26.029
<v Speaker 0>like s three or, you know, RDS.

00:20:26.509 --> 00:20:29.465
<v Speaker 0>And There's so many. In fact, let's just

00:20:29.465 --> 00:20:30.904
<v Speaker 0>close this up.

00:20:30.905 --> 00:20:32.105
<v Speaker 0>It's all pillars.

00:20:33.304 --> 00:20:35.065
<v Speaker 0>If we go to the documentation

00:20:35.065 --> 00:20:35.705
<v Speaker 0>here,

00:20:36.505 --> 00:20:38.264
<v Speaker 0>I think this link

00:20:39.240 --> 00:20:41.400
<v Speaker 0>and click on pillar modules. So these are

00:20:41.400 --> 00:20:44.360
<v Speaker 0>all of the modules which support exposing pillar

00:20:44.360 --> 00:20:45.720
<v Speaker 0>data to the master.

00:20:46.120 --> 00:20:48.120
<v Speaker 0>So you can see because your blob storage,

00:20:48.120 --> 00:20:50.280
<v Speaker 0>you can execute arbitrary commands as long as

00:20:50.280 --> 00:20:51.880
<v Speaker 0>they output JSON or YAML,

00:20:52.395 --> 00:20:54.635
<v Speaker 0>then small will parse that and make that

00:20:54.635 --> 00:20:55.275
<v Speaker 0>available.

00:20:56.075 --> 00:20:58.155
<v Speaker 0>Cobbler is for bare metal provisioning and some

00:20:58.155 --> 00:21:00.554
<v Speaker 0>other provision management stuff, which is really cool.

00:21:01.115 --> 00:21:02.635
<v Speaker 0>Console can be used.

00:21:03.275 --> 00:21:04.155
<v Speaker 0>What else?

00:21:04.955 --> 00:21:05.995
<v Speaker 0>Etcd,

00:21:06.555 --> 00:21:07.675
<v Speaker 0>straight up fail stuff.

00:21:08.450 --> 00:21:11.010
<v Speaker 0>You can consume impeller information from a GET

00:21:11.010 --> 00:21:13.090
<v Speaker 0>repository, which I quite like doing as well.

00:21:13.570 --> 00:21:15.090
<v Speaker 0>As well as the command stuff, you can

00:21:15.090 --> 00:21:17.570
<v Speaker 0>use HTTP APIs to pull out anything that's

00:21:17.570 --> 00:21:20.770
<v Speaker 0>JSON or YAML as well. There's Mongo, MySQL.

00:21:20.770 --> 00:21:22.610
<v Speaker 0>So, you know, there is lots of different

00:21:22.610 --> 00:21:23.409
<v Speaker 0>sources.

00:21:23.410 --> 00:21:23.730
<v Speaker 0>And

00:21:24.605 --> 00:21:26.525
<v Speaker 0>the use case for the most of these

00:21:26.525 --> 00:21:29.485
<v Speaker 0>is generally for data that is considered almost

00:21:29.485 --> 00:21:32.045
<v Speaker 0>secret or at least it can be secretive.

00:21:32.205 --> 00:21:34.285
<v Speaker 0>So it's not gonna be provisioned through the

00:21:34.285 --> 00:21:36.365
<v Speaker 0>standard means like we're doing now. Like, if

00:21:36.365 --> 00:21:38.605
<v Speaker 0>you can imagine, well, this is all in

00:21:38.605 --> 00:21:38.845
<v Speaker 0>Git.

00:21:39.929 --> 00:21:41.289
<v Speaker 0>And and I in theory, I could make

00:21:41.289 --> 00:21:43.130
<v Speaker 0>this all public. There's nothing secret in this

00:21:43.130 --> 00:21:44.009
<v Speaker 0>repository.

00:21:44.169 --> 00:21:46.250
<v Speaker 0>And the pillars would be that place where

00:21:46.250 --> 00:21:47.929
<v Speaker 0>secret information could come from.

00:21:48.250 --> 00:21:49.450
<v Speaker 0>But I want to

00:21:49.770 --> 00:21:50.889
<v Speaker 0>have c bundles

00:21:51.289 --> 00:21:54.165
<v Speaker 0>or certificate authorities or private keys or or

00:21:54.165 --> 00:21:56.085
<v Speaker 0>just plain old secrets. I could have them

00:21:56.085 --> 00:21:58.805
<v Speaker 0>involved and then have Salt speak to Vault

00:21:58.805 --> 00:22:01.365
<v Speaker 0>to pull that information and the pillar data.

00:22:02.485 --> 00:22:04.405
<v Speaker 0>That makes sense? That makes sense.

00:22:05.525 --> 00:22:05.845
<v Speaker 0>Good.

00:22:06.620 --> 00:22:08.460
<v Speaker 0>It's been a while since I've tried to

00:22:08.460 --> 00:22:11.500
<v Speaker 0>explain greens and colors, so hopefully hopefully, we're

00:22:11.500 --> 00:22:12.140
<v Speaker 0>good.

00:22:14.860 --> 00:22:16.940
<v Speaker 0>The user data is only slightly different

00:22:17.820 --> 00:22:20.060
<v Speaker 0>for the the master dominion setup here. So

00:22:20.060 --> 00:22:20.700
<v Speaker 0>the

00:22:22.255 --> 00:22:24.015
<v Speaker 0>the good thing I expand that with Debbie

00:22:24.015 --> 00:22:25.695
<v Speaker 0>and because I never changed it. But it's

00:22:25.695 --> 00:22:27.535
<v Speaker 0>installing the salt master and the minion. So

00:22:27.535 --> 00:22:30.015
<v Speaker 0>that's another kind of cool thing about salt

00:22:30.015 --> 00:22:32.335
<v Speaker 0>is that, you know, the salt master can

00:22:32.335 --> 00:22:34.450
<v Speaker 0>also run its own minion and it can

00:22:34.450 --> 00:22:36.290
<v Speaker 0>have this sort of self referential bit strap

00:22:36.290 --> 00:22:38.610
<v Speaker 0>process or provisioning or high state as salt

00:22:38.610 --> 00:22:39.490
<v Speaker 0>would call it.

00:22:40.450 --> 00:22:42.770
<v Speaker 0>We need to grab the local IP.

00:22:43.170 --> 00:22:45.090
<v Speaker 0>We use this just to bind the interface

00:22:45.090 --> 00:22:46.930
<v Speaker 0>that salt listens on. So we're talking to

00:22:47.090 --> 00:22:48.370
<v Speaker 0>we're trying to keep this secure,

00:22:49.385 --> 00:22:51.385
<v Speaker 0>you know, all of our packet devices. And

00:22:51.385 --> 00:22:53.705
<v Speaker 0>I think you'll need to correct me here.

00:22:53.705 --> 00:22:56.024
<v Speaker 0>I think they all, by default, launch with

00:22:56.024 --> 00:22:59.705
<v Speaker 0>a public IPv four, a private IPv four,

00:22:59.705 --> 00:23:01.304
<v Speaker 0>and an IPv six address.

00:23:02.640 --> 00:23:06.160
<v Speaker 1>That's correct. Yeah. So we don't want our

00:23:06.160 --> 00:23:08.800
<v Speaker 0>salt master listening on our public IPv four

00:23:08.800 --> 00:23:10.160
<v Speaker 0>address because,

00:23:10.960 --> 00:23:13.440
<v Speaker 0>unfortunately, remote code execution is a thing.

00:23:13.920 --> 00:23:16.080
<v Speaker 0>So we want to trust only our private

00:23:16.080 --> 00:23:16.400
<v Speaker 0>network.

00:23:18.385 --> 00:23:20.385
<v Speaker 0>What else do we do? We just tell

00:23:20.385 --> 00:23:21.905
<v Speaker 0>it where the master is. So rest is

00:23:21.905 --> 00:23:23.985
<v Speaker 0>us configuring the salt master as its own

00:23:23.985 --> 00:23:25.665
<v Speaker 0>menu, so we just have to drop in

00:23:25.665 --> 00:23:27.905
<v Speaker 0>that the master is available on the local

00:23:27.905 --> 00:23:29.025
<v Speaker 0>device IP address.

00:23:29.580 --> 00:23:32.460
<v Speaker 0>And then we provision the packet metadata. So,

00:23:32.460 --> 00:23:35.020
<v Speaker 0>like, extend and salt could not be easier.

00:23:35.020 --> 00:23:36.860
<v Speaker 0>You literally just have to drop in a

00:23:36.860 --> 00:23:39.260
<v Speaker 0>Python script, enter the right location on the

00:23:39.260 --> 00:23:39.899
<v Speaker 0>device,

00:23:40.220 --> 00:23:42.539
<v Speaker 0>and magically, it's available to us to call.

00:23:42.620 --> 00:23:43.340
<v Speaker 0>Really

00:23:43.980 --> 00:23:44.220
<v Speaker 0>simple.

00:23:44.804 --> 00:23:45.524
<v Speaker 1>Gotcha.

00:23:46.644 --> 00:23:48.804
<v Speaker 0>And our menu one is easy. I mean,

00:23:48.804 --> 00:23:51.044
<v Speaker 0>we've just I just copied two lanes from

00:23:51.044 --> 00:23:53.044
<v Speaker 0>a something off of GitHub and dropped it

00:23:53.044 --> 00:23:54.565
<v Speaker 0>into this. What could go wrong?

00:23:55.284 --> 00:23:56.485
<v Speaker 1>What could possibly go wrong?

00:23:58.010 --> 00:24:00.889
<v Speaker 1>So the the cluster that I have

00:24:01.850 --> 00:24:02.969
<v Speaker 1>adds another

00:24:03.130 --> 00:24:05.210
<v Speaker 1>complication to things because

00:24:05.929 --> 00:24:07.370
<v Speaker 1>oh, looks like something came up.

00:24:10.925 --> 00:24:12.365
<v Speaker 1>Because the

00:24:13.565 --> 00:24:15.725
<v Speaker 1>the devices are not all in the same

00:24:15.725 --> 00:24:17.005
<v Speaker 1>packet network.

00:24:17.485 --> 00:24:20.205
<v Speaker 1>So I'd I'd in my configuration, I do

00:24:20.205 --> 00:24:21.005
<v Speaker 1>not have

00:24:21.405 --> 00:24:23.965
<v Speaker 1>the ability to just use the packet private

00:24:24.330 --> 00:24:25.769
<v Speaker 1>net 10 address.

00:24:26.490 --> 00:24:28.570
<v Speaker 1>So what I did for that was took

00:24:28.570 --> 00:24:31.289
<v Speaker 1>advantage of the fact that I'm using Tailscale,

00:24:31.850 --> 00:24:33.369
<v Speaker 1>which is a VPN

00:24:33.690 --> 00:24:34.249
<v Speaker 1>network.

00:24:34.730 --> 00:24:36.650
<v Speaker 1>And I do the same kind of binding

00:24:36.650 --> 00:24:39.450
<v Speaker 1>except I bind it to the Tailscale address

00:24:39.105 --> 00:24:40.705
<v Speaker 1>instead of the public address.

00:24:41.184 --> 00:24:43.744
<v Speaker 1>And that way that way I have

00:24:47.184 --> 00:24:49.424
<v Speaker 1>bootstrapping is harder because you have to bootstrap

00:24:49.424 --> 00:24:51.505
<v Speaker 1>Tailscale first before you boot SaltStack,

00:24:52.460 --> 00:24:55.020
<v Speaker 1>but you have this sort of same idea

00:24:55.020 --> 00:24:55.899
<v Speaker 1>of a

00:24:56.380 --> 00:24:58.140
<v Speaker 1>private management address

00:24:58.460 --> 00:25:00.860
<v Speaker 1>to to connect things through.

00:25:01.660 --> 00:25:03.340
<v Speaker 0>Very cool. I like it.

00:25:03.740 --> 00:25:06.380
<v Speaker 0>I've never really considered using Tailscale to kinda

00:25:06.380 --> 00:25:07.740
<v Speaker 0>provide a backbone for

00:25:08.275 --> 00:25:10.434
<v Speaker 0>disparate sources or networks and keeping them all

00:25:10.434 --> 00:25:11.955
<v Speaker 0>in the same salt network, but that's a

00:25:11.955 --> 00:25:13.154
<v Speaker 0>really cool concept.

00:25:13.235 --> 00:25:13.955
<v Speaker 1>Yeah.

00:25:14.355 --> 00:25:16.915
<v Speaker 1>Yeah. It's been it's been going reasonably well.

00:25:16.915 --> 00:25:17.634
<v Speaker 1>I I

00:25:18.275 --> 00:25:19.235
<v Speaker 1>don't

00:25:19.235 --> 00:25:21.715
<v Speaker 1>know how I would debug it all if

00:25:21.715 --> 00:25:23.395
<v Speaker 1>I didn't have out of band access to

00:25:23.395 --> 00:25:23.715
<v Speaker 1>everything.

00:25:24.850 --> 00:25:26.850
<v Speaker 1>Right? I got out of band access to

00:25:26.850 --> 00:25:29.970
<v Speaker 1>the packet machines. I've got a little breakout

00:25:29.970 --> 00:25:32.130
<v Speaker 1>box that I can plug into pies if

00:25:32.130 --> 00:25:34.210
<v Speaker 1>I need to. Like, most of the stuff

00:25:34.210 --> 00:25:35.970
<v Speaker 1>here could be scrapped and restarted if I

00:25:35.970 --> 00:25:36.370
<v Speaker 1>had to.

00:25:38.504 --> 00:25:40.344
<v Speaker 1>But just having a

00:25:41.065 --> 00:25:42.744
<v Speaker 1>a management channel,

00:25:43.065 --> 00:25:44.104
<v Speaker 1>it's really handy.

00:25:44.825 --> 00:25:46.744
<v Speaker 0>Yeah. For sure. I can see that.

00:25:47.304 --> 00:25:49.945
<v Speaker 0>Alright. So let's understand. You're right there. You

00:25:49.945 --> 00:25:53.039
<v Speaker 0>said something has come up. So another thing,

00:25:53.039 --> 00:25:55.039
<v Speaker 0>Terraform and Pulumi both do this, but they

00:25:55.039 --> 00:25:57.919
<v Speaker 0>actually build a a graph of dependencies

00:25:57.919 --> 00:26:00.000
<v Speaker 0>when they parse all of the resources that

00:26:00.000 --> 00:26:02.400
<v Speaker 0>the automation is supposed to create. Because our

00:26:02.400 --> 00:26:04.720
<v Speaker 0>minions have a dependency on the master, I

00:26:04.720 --> 00:26:06.400
<v Speaker 0>e, they need to know the IP address,

00:26:06.825 --> 00:26:09.065
<v Speaker 0>That was created first in isolation,

00:26:09.865 --> 00:26:11.544
<v Speaker 0>and then we pop back over here. Yeah.

00:26:11.544 --> 00:26:13.384
<v Speaker 0>We'll see those other machines coming up.

00:26:14.105 --> 00:26:16.105
<v Speaker 0>And then these were all created in parallel

00:26:16.105 --> 00:26:18.424
<v Speaker 0>because all of those dependencies are satisfied, which

00:26:18.424 --> 00:26:21.465
<v Speaker 0>was just the master. The menu three was

00:26:21.465 --> 00:26:22.105
<v Speaker 0>the fastest.

00:26:22.500 --> 00:26:23.780
<v Speaker 0>Our Ascentos

00:26:23.780 --> 00:26:26.260
<v Speaker 0>seven box was pretty quick at coming up.

00:26:26.580 --> 00:26:28.260
<v Speaker 0>We're now just waiting on our free BSD

00:26:28.260 --> 00:26:30.100
<v Speaker 0>and our Ubuntu machine.

00:26:30.820 --> 00:26:32.580
<v Speaker 0>But there's nothing stopping us

00:26:32.820 --> 00:26:34.740
<v Speaker 0>going and kicking the tires on this master

00:26:34.740 --> 00:26:36.260
<v Speaker 0>against targets. Yep.

00:26:38.795 --> 00:26:40.634
<v Speaker 0>So pop open a new tab.

00:26:42.715 --> 00:26:44.075
<v Speaker 0>And let's do

00:26:46.635 --> 00:26:47.195
<v Speaker 0>Rich.

00:26:49.515 --> 00:26:50.315
<v Speaker 0>Yes, please.

00:26:51.900 --> 00:26:53.179
<v Speaker 0>Well, you'd be key.

00:26:54.700 --> 00:26:56.940
<v Speaker 0>There we go. Okay. So we are now

00:26:56.940 --> 00:26:57.580
<v Speaker 0>on

00:26:58.620 --> 00:26:59.900
<v Speaker 0>master one.

00:27:01.820 --> 00:27:03.580
<v Speaker 0>Let's just confirm

00:27:03.660 --> 00:27:04.460
<v Speaker 0>that

00:27:05.075 --> 00:27:07.554
<v Speaker 0>everything worked as expected.

00:27:08.115 --> 00:27:08.914
<v Speaker 1>Yep.

00:27:10.755 --> 00:27:12.914
<v Speaker 0>Yeah. I have a master

00:27:13.075 --> 00:27:15.475
<v Speaker 0>running and the minions

00:27:15.955 --> 00:27:18.115
<v Speaker 0>minion is running. There are multiple processes, but

00:27:18.115 --> 00:27:19.315
<v Speaker 0>that's not

00:27:19.315 --> 00:27:20.355
<v Speaker 0>important right there.

00:27:21.230 --> 00:27:24.030
<v Speaker 0>So how can we confirm our configuration?

00:27:24.030 --> 00:27:26.510
<v Speaker 0>Well, first, we're gonna go to slash e

00:27:26.510 --> 00:27:27.790
<v Speaker 0>c c slash salt.

00:27:28.510 --> 00:27:31.230
<v Speaker 0>We will just confirm our menu was configured

00:27:31.470 --> 00:27:32.750
<v Speaker 0>as we expected.

00:27:33.150 --> 00:27:35.470
<v Speaker 0>You can see our master IP address was

00:27:35.470 --> 00:27:35.870
<v Speaker 0>set,

00:27:36.985 --> 00:27:40.104
<v Speaker 0>and we also did some master configuration

00:27:40.664 --> 00:27:42.024
<v Speaker 0>where we bound

00:27:42.184 --> 00:27:45.465
<v Speaker 0>the internal IP address. So I'm very confident

00:27:45.465 --> 00:27:48.184
<v Speaker 0>at this stage that the provisioning was successful,

00:27:49.065 --> 00:27:50.345
<v Speaker 0>which means

00:27:54.530 --> 00:27:57.330
<v Speaker 0>we can begin to interact with Salt. Now

00:27:57.330 --> 00:27:59.490
<v Speaker 0>no minions have matched the target.

00:27:59.970 --> 00:28:01.970
<v Speaker 0>That's expected. That wasn't me just making a

00:28:01.970 --> 00:28:02.290
<v Speaker 0>mistake.

00:28:03.965 --> 00:28:05.645
<v Speaker 0>So we do we do have our salt

00:28:05.645 --> 00:28:07.325
<v Speaker 0>master running. We do have a salt menu

00:28:07.325 --> 00:28:09.325
<v Speaker 0>running. Our salt menu knows how to speak

00:28:09.325 --> 00:28:12.125
<v Speaker 0>to the salt master, but we have not

00:28:12.125 --> 00:28:13.005
<v Speaker 0>approved

00:28:13.085 --> 00:28:13.965
<v Speaker 0>the keys.

00:28:17.740 --> 00:28:18.940
<v Speaker 0>Okay.

00:28:20.460 --> 00:28:22.299
<v Speaker 0>Now what Salt does

00:28:23.340 --> 00:28:27.180
<v Speaker 0>when you install it, it it will generate

00:28:29.115 --> 00:28:31.675
<v Speaker 0>it will generate some certificates which are used

00:28:31.675 --> 00:28:33.355
<v Speaker 0>to authenticate with

00:28:33.755 --> 00:28:35.914
<v Speaker 0>the the master machine.

00:28:36.235 --> 00:28:38.555
<v Speaker 0>So our menu generates the certificate. It sends

00:28:38.555 --> 00:28:40.635
<v Speaker 0>its key to the master. We have to

00:28:40.635 --> 00:28:43.035
<v Speaker 0>actually explicitly approve that. There's our step to

00:28:43.035 --> 00:28:45.330
<v Speaker 0>automate it, not something that I think we'll

00:28:45.330 --> 00:28:46.850
<v Speaker 0>be able to cover in this session.

00:28:47.410 --> 00:28:49.970
<v Speaker 0>But for now, what we can do is

00:28:53.170 --> 00:28:55.090
<v Speaker 0>tell it to accept master

00:28:55.170 --> 00:28:55.809
<v Speaker 0>one.

00:28:57.330 --> 00:28:58.130
<v Speaker 0>Like so.

00:28:58.865 --> 00:29:00.865
<v Speaker 0>And then if we run salt key one

00:29:00.865 --> 00:29:01.665
<v Speaker 0>more time,

00:29:03.905 --> 00:29:05.905
<v Speaker 0>we now have our accepted key.

00:29:06.385 --> 00:29:08.465
<v Speaker 0>Now I do have one small concern right

00:29:08.465 --> 00:29:09.025
<v Speaker 0>now.

00:29:09.905 --> 00:29:12.145
<v Speaker 0>Is that I expected

00:29:12.060 --> 00:29:15.340
<v Speaker 0>to see menu three listed here because The

00:29:15.340 --> 00:29:17.180
<v Speaker 1>CentOS machine. Yeah.

00:29:17.500 --> 00:29:19.900
<v Speaker 0>So I'm assuming the salt bootstrap on this

00:29:19.900 --> 00:29:21.980
<v Speaker 0>machine potentially failed.

00:29:22.220 --> 00:29:23.900
<v Speaker 0>Right. So should we go quickly take a

00:29:23.900 --> 00:29:25.260
<v Speaker 0>look at that? Yep. So let's take a

00:29:25.260 --> 00:29:26.780
<v Speaker 1>look and see what see what's going on

00:29:26.780 --> 00:29:27.020
<v Speaker 1>there.

00:29:30.245 --> 00:29:33.605
<v Speaker 0>Okay. So yes. Press my key.

00:29:33.685 --> 00:29:35.044
<v Speaker 0>Alright.

00:29:37.845 --> 00:29:41.205
<v Speaker 0>So Salt is installed because the directory exists.

00:29:41.205 --> 00:29:42.245
<v Speaker 0>My configuration

00:29:43.620 --> 00:29:45.620
<v Speaker 0>is the default menu in conf.

00:29:48.420 --> 00:29:50.820
<v Speaker 0>It doesn't generate keys.

00:29:50.980 --> 00:29:52.580
<v Speaker 0>Alright. Let's see what's going.

00:29:53.140 --> 00:29:55.620
<v Speaker 0>And it's not running. It's not running.

00:29:56.500 --> 00:29:58.980
<v Speaker 0>But it looks like the command is available.

00:30:02.554 --> 00:30:04.475
<v Speaker 1>No one supports Python two.

00:30:05.835 --> 00:30:06.715
<v Speaker 1>Yes.

00:30:07.595 --> 00:30:08.554
<v Speaker 0>Okay.

00:30:09.355 --> 00:30:09.994
<v Speaker 0>So

00:30:10.235 --> 00:30:11.434
<v Speaker 0>that means

00:30:12.554 --> 00:30:13.434
<v Speaker 0>DNS

00:30:13.434 --> 00:30:14.075
<v Speaker 0>install.

00:30:14.340 --> 00:30:16.980
<v Speaker 0>I mean, let's try the naive approach. Is

00:30:16.980 --> 00:30:18.500
<v Speaker 0>it not DNS? That must be YAML on

00:30:18.500 --> 00:30:19.700
<v Speaker 0>Sentinel. YAML.

00:30:25.140 --> 00:30:27.460
<v Speaker 0>So I'm just gonna run this manually

00:30:27.940 --> 00:30:28.980
<v Speaker 0>run the

00:30:30.965 --> 00:30:32.404
<v Speaker 0>can I remove

00:30:38.804 --> 00:30:40.804
<v Speaker 0>no? I'll install. Remove

00:30:40.965 --> 00:30:41.764
<v Speaker 0>Python two.

00:30:47.400 --> 00:30:48.440
<v Speaker 1>This

00:30:49.960 --> 00:30:51.320
<v Speaker 1>is CentOS

00:30:51.880 --> 00:30:52.840
<v Speaker 1>seven?

00:30:53.320 --> 00:30:55.400
<v Speaker 0>Yeah. It's quite it's quite an older version,

00:30:55.400 --> 00:30:56.200
<v Speaker 0>isn't it? Yeah.

00:30:57.475 --> 00:30:58.835
<v Speaker 1>So I wonder if the thing to do

00:30:58.835 --> 00:31:01.075
<v Speaker 1>is to uninstall SaltMinion

00:31:02.434 --> 00:31:03.554
<v Speaker 1>entirely

00:31:03.715 --> 00:31:04.914
<v Speaker 1>and then

00:31:05.955 --> 00:31:07.794
<v Speaker 1>reinstall it from the boost transcript.

00:31:12.540 --> 00:31:13.420
<v Speaker 0>I

00:31:13.420 --> 00:31:14.940
<v Speaker 0>don't know what the package is called. Oh,

00:31:14.940 --> 00:31:16.380
<v Speaker 0>so I may have installed it through pep

00:31:16.380 --> 00:31:17.180
<v Speaker 0>pep

00:31:17.180 --> 00:31:18.059
<v Speaker 0>uninstall.

00:31:18.140 --> 00:31:19.660
<v Speaker 0>And maybe that's a problem because it may

00:31:19.660 --> 00:31:21.420
<v Speaker 0>not have been using pep three. I may

00:31:21.420 --> 00:31:23.740
<v Speaker 0>have just used pep pushes pep two

00:31:25.565 --> 00:31:27.245
<v Speaker 0>PET where is that?

00:31:28.685 --> 00:31:29.965
<v Speaker 0>Yeah. 2.7.

00:31:29.965 --> 00:31:32.125
<v Speaker 0>So if we do a PET uninstall,

00:31:32.605 --> 00:31:35.085
<v Speaker 0>so manual or make just be solved.

00:31:36.525 --> 00:31:37.165
<v Speaker 0>There we go.

00:31:39.380 --> 00:31:41.139
<v Speaker 0>Pep three install.

00:31:44.500 --> 00:31:46.580
<v Speaker 0>That should get us running. Yeah.

00:31:48.900 --> 00:31:49.620
<v Speaker 1>Python.

00:31:50.745 --> 00:31:52.585
<v Speaker 0>I would have expected SaltBootstrap

00:31:52.585 --> 00:31:54.825
<v Speaker 0>to handle that, to be honest. Yeah. I

00:31:54.825 --> 00:31:56.184
<v Speaker 0>would have expected it to.

00:32:00.185 --> 00:32:01.625
<v Speaker 0>What didn't work there?

00:32:13.320 --> 00:32:15.080
<v Speaker 0>I have to access this salt call

00:32:15.800 --> 00:32:16.920
<v Speaker 0>pet install

00:32:16.920 --> 00:32:18.040
<v Speaker 0>salt. Nope.

00:32:25.695 --> 00:32:26.735
<v Speaker 0>That's weird.

00:32:26.975 --> 00:32:27.855
<v Speaker 0>I

00:32:30.895 --> 00:32:31.935
<v Speaker 0>have

00:32:32.130 --> 00:32:33.889
<v Speaker 0>I have all the other commands.

00:32:34.610 --> 00:32:36.529
<v Speaker 1>Why is salt menu not working?

00:32:39.250 --> 00:32:40.370
<v Speaker 0>Good question.

00:32:43.410 --> 00:32:45.010
<v Speaker 0>Which salt menu?

00:32:46.375 --> 00:32:46.935
<v Speaker 0>User

00:32:47.255 --> 00:32:49.735
<v Speaker 0>oh, wait. Wait. So SSH.

00:32:49.895 --> 00:32:50.695
<v Speaker 0>Yeah. Okay.

00:32:59.100 --> 00:33:00.539
<v Speaker 0>I mean, that looks alright.

00:33:04.940 --> 00:33:07.180
<v Speaker 0>Alright. Fine. It's Python three.

00:33:13.434 --> 00:33:15.195
<v Speaker 1>Is Python three installed?

00:33:16.475 --> 00:33:18.234
<v Speaker 0>Yeah. Yeah. Yeah.

00:33:20.475 --> 00:33:22.715
<v Speaker 0>Okay. It's working now if I do that

00:33:22.715 --> 00:33:23.674
<v Speaker 0>very explicitly.

00:33:26.390 --> 00:33:27.270
<v Speaker 1>That's weird.

00:33:27.590 --> 00:33:30.630
<v Speaker 0>Let's just quickly what happens with user Ben?

00:33:30.630 --> 00:33:32.790
<v Speaker 0>So that's the wrong path. Let's log in.

00:33:32.790 --> 00:33:34.470
<v Speaker 1>That's the wrong path. Yeah. Yeah.

00:33:35.590 --> 00:33:36.790
<v Speaker 0>When in doubt,

00:33:37.110 --> 00:33:37.590
<v Speaker 0>log out.

00:33:39.615 --> 00:33:40.255
<v Speaker 0>Hey.

00:33:40.735 --> 00:33:41.294
<v Speaker 0>Okay.

00:33:41.855 --> 00:33:42.975
<v Speaker 0>So Okay.

00:33:43.375 --> 00:33:46.175
<v Speaker 0>Now There's a past issue. I am gonna

00:33:46.175 --> 00:33:48.015
<v Speaker 0>believe if we take a look at our

00:33:48.015 --> 00:33:49.455
<v Speaker 0>cloud and it log

00:33:49.775 --> 00:33:52.815
<v Speaker 0>that our provisioning step, because we never installed,

00:33:53.669 --> 00:33:55.029
<v Speaker 0>Let's just pull that up.

00:33:56.870 --> 00:33:59.350
<v Speaker 0>I'm assuming this failed, which means we never

00:33:59.350 --> 00:34:01.350
<v Speaker 0>created our config.

00:34:01.350 --> 00:34:03.190
<v Speaker 0>So let's just do that manually as well.

00:34:05.205 --> 00:34:07.445
<v Speaker 0>We'll get there. So menu.d,

00:34:07.445 --> 00:34:09.525
<v Speaker 0>we'll copy this from another machine.

00:34:11.685 --> 00:34:12.725
<v Speaker 0>Oh, that's

00:34:12.885 --> 00:34:14.565
<v Speaker 1>You got the wrong one. Or

00:34:16.324 --> 00:34:18.565
<v Speaker 0>It's alright. We'll grab the IP from here.

00:34:18.565 --> 00:34:19.445
<v Speaker 0>So Yeah.

00:34:22.330 --> 00:34:24.810
<v Speaker 0>Let's pop over here. Go to our salt

00:34:24.810 --> 00:34:25.690
<v Speaker 0>configuration.

00:34:25.690 --> 00:34:27.370
<v Speaker 0>We want to go to menu.d,

00:34:27.370 --> 00:34:28.650
<v Speaker 0>and we want to do

00:34:29.290 --> 00:34:30.409
<v Speaker 0>master.com.

00:34:33.405 --> 00:34:34.685
<v Speaker 0>And if we

00:34:35.085 --> 00:34:36.845
<v Speaker 0>run system d

00:34:37.485 --> 00:34:38.285
<v Speaker 0>star,

00:34:38.285 --> 00:34:39.005
<v Speaker 0>so

00:34:39.565 --> 00:34:40.605
<v Speaker 0>will that work?

00:34:42.765 --> 00:34:43.885
<v Speaker 0>Daemon reload.

00:34:56.510 --> 00:34:58.445
<v Speaker 0>So I'm just using the wrong path too.

00:34:58.445 --> 00:35:00.445
<v Speaker 1>It's using the wrong path too. That must

00:35:00.445 --> 00:35:02.445
<v Speaker 0>just be something weird with the way it

00:35:02.445 --> 00:35:03.245
<v Speaker 0>installed.

00:35:04.605 --> 00:35:07.005
<v Speaker 0>Alright. Let's modify here we go to file.

00:35:08.765 --> 00:35:10.685
<v Speaker 0>I'm committing to fixing it now. I feel

00:35:10.685 --> 00:35:11.485
<v Speaker 0>like I need to get it.

00:35:13.430 --> 00:35:16.230
<v Speaker 0>A system d how do you get the

00:35:17.510 --> 00:35:18.950
<v Speaker 0>is it described?

00:35:19.830 --> 00:35:20.470
<v Speaker 0>No.

00:35:20.870 --> 00:35:21.830
<v Speaker 0>Endful?

00:35:22.070 --> 00:35:23.270
<v Speaker 0>I can't remember.

00:35:23.350 --> 00:35:25.190
<v Speaker 0>I can't remember. Describe

00:35:25.190 --> 00:35:26.230
<v Speaker 0>a unit fail.

00:35:33.295 --> 00:35:36.015
<v Speaker 0>Alright. Wait. You can do status.

00:35:36.095 --> 00:35:38.095
<v Speaker 0>I'm not sure remember the unit fail.

00:35:40.575 --> 00:35:41.535
<v Speaker 1>Cannot be found.

00:35:43.250 --> 00:35:45.410
<v Speaker 0>Here.

00:35:50.290 --> 00:35:51.890
<v Speaker 0>Oh, what did I do?

00:35:53.410 --> 00:35:54.210
<v Speaker 0>Oh,

00:35:55.410 --> 00:35:55.890
<v Speaker 0>them.

00:35:56.945 --> 00:35:58.225
<v Speaker 0>User local.

00:35:59.105 --> 00:35:59.825
<v Speaker 0>Oh.

00:36:01.745 --> 00:36:03.425
<v Speaker 0>Let's try a daemon reload.

00:36:04.545 --> 00:36:05.905
<v Speaker 0>Star install

00:36:05.905 --> 00:36:06.625
<v Speaker 0>menu.

00:36:09.210 --> 00:36:10.490
<v Speaker 1>Hey. No errors.

00:36:10.650 --> 00:36:11.610
<v Speaker 1>Right.

00:36:12.410 --> 00:36:13.530
<v Speaker 0>Okay. Wow.

00:36:15.210 --> 00:36:17.370
<v Speaker 1>Wow. So I

00:36:17.610 --> 00:36:20.650
<v Speaker 1>think the moral of that story is that

00:36:21.195 --> 00:36:21.915
<v Speaker 1>the

00:36:22.715 --> 00:36:24.315
<v Speaker 1>older the version

00:36:24.315 --> 00:36:26.955
<v Speaker 1>of the operating system you are running, the

00:36:26.955 --> 00:36:28.555
<v Speaker 1>more likely it is you will have to

00:36:28.555 --> 00:36:29.275
<v Speaker 1>intervene.

00:36:30.235 --> 00:36:32.635
<v Speaker 0>Oh, yeah. For sure. And I didn't realize

00:36:32.715 --> 00:36:35.170
<v Speaker 0>sorry. I wasn't we had a someone drop

00:36:35.170 --> 00:36:36.450
<v Speaker 0>in the comments there and try to help

00:36:36.450 --> 00:36:38.930
<v Speaker 0>us out, Bradley. Oh, hey, Bradley.

00:36:39.410 --> 00:36:41.490
<v Speaker 0>Says we could do hats.

00:36:41.490 --> 00:36:43.890
<v Speaker 0>So I've never had done that before.

00:36:44.770 --> 00:36:47.585
<v Speaker 0>Ah, that is so cool. Thank you. Awesome

00:36:47.585 --> 00:36:48.865
<v Speaker 0>tip. Yeah.

00:36:49.904 --> 00:36:51.425
<v Speaker 0>Right. Okay. So

00:36:52.065 --> 00:36:54.865
<v Speaker 0>that's running. So let's run our salt key.

00:36:56.545 --> 00:36:58.704
<v Speaker 0>And we have menu three. We Hey. It's

00:36:58.704 --> 00:37:00.785
<v Speaker 1>fair. But we don't have menus one and

00:37:00.785 --> 00:37:02.065
<v Speaker 0>two. So I think

00:37:02.550 --> 00:37:05.590
<v Speaker 0>we're gonna be fixing those as well. Hopefully,

00:37:05.590 --> 00:37:07.270
<v Speaker 0>it's the same problem and we can fix

00:37:07.270 --> 00:37:08.470
<v Speaker 0>it relatively quickly.

00:37:08.550 --> 00:37:11.110
<v Speaker 0>But for now, let's just accept minion

00:37:11.750 --> 00:37:12.470
<v Speaker 0>three.

00:37:13.430 --> 00:37:13.830
<v Speaker 0>Okay.

00:37:15.204 --> 00:37:17.445
<v Speaker 0>We will fix those other two notes, but

00:37:17.445 --> 00:37:19.204
<v Speaker 0>let's try and cover a couple of basics

00:37:19.204 --> 00:37:20.645
<v Speaker 0>of salt then.

00:37:20.885 --> 00:37:24.005
<v Speaker 0>So let's

00:37:24.565 --> 00:37:26.885
<v Speaker 0>the first salt command I I think anyone

00:37:27.445 --> 00:37:28.405
<v Speaker 0>should run

00:37:28.964 --> 00:37:30.165
<v Speaker 0>is

00:37:29.790 --> 00:37:30.990
<v Speaker 0>test dot ping.

00:37:31.550 --> 00:37:34.190
<v Speaker 0>And let's just cover the two syntax that

00:37:34.190 --> 00:37:36.350
<v Speaker 0>you'll see online for this command.

00:37:36.750 --> 00:37:37.310
<v Speaker 0>Mhmm.

00:37:37.710 --> 00:37:38.430
<v Speaker 0>This

00:37:38.670 --> 00:37:40.190
<v Speaker 0>this tripped me up when I was first

00:37:40.190 --> 00:37:42.030
<v Speaker 0>learning. That's all. And it's so simple, but

00:37:42.030 --> 00:37:44.270
<v Speaker 0>I'll cover it anyway. Is that the star

00:37:44.270 --> 00:37:46.335
<v Speaker 0>gets expanded by your shell,

00:37:46.975 --> 00:37:49.215
<v Speaker 0>by bash or zed shell or fish.

00:37:49.375 --> 00:37:50.895
<v Speaker 0>So you don't need to just wrap it

00:37:50.895 --> 00:37:52.735
<v Speaker 0>in single quotes or escape it.

00:37:53.455 --> 00:37:55.295
<v Speaker 0>And that's why you can't just do star.

00:37:57.055 --> 00:38:00.089
<v Speaker 0>Yeah. It'll have It always bug me. Always

00:38:00.089 --> 00:38:00.810
<v Speaker 0>bug me.

00:38:01.530 --> 00:38:03.290
<v Speaker 0>But the test stop ping is the the

00:38:03.290 --> 00:38:05.690
<v Speaker 0>simplest command. All all it does is

00:38:06.490 --> 00:38:09.050
<v Speaker 0>try to establish if the salt minions are

00:38:09.050 --> 00:38:09.930
<v Speaker 0>online.

00:38:09.930 --> 00:38:11.290
<v Speaker 0>And you can see that the two that

00:38:11.290 --> 00:38:13.450
<v Speaker 0>we've managed to successfully accept and provision,

00:38:13.845 --> 00:38:15.365
<v Speaker 0>they are online. So

00:38:17.125 --> 00:38:18.885
<v Speaker 0>so now what can we do?

00:38:19.605 --> 00:38:22.965
<v Speaker 0>How about some executing remote commands? Doesn't that

00:38:22.965 --> 00:38:24.325
<v Speaker 0>sound? Sure.

00:38:24.885 --> 00:38:26.484
<v Speaker 0>What what would you like to know about

00:38:26.484 --> 00:38:28.005
<v Speaker 0>our machines, or what commands do you want

00:38:28.005 --> 00:38:28.484
<v Speaker 0>me to run?

00:38:29.800 --> 00:38:30.520
<v Speaker 1>One

00:38:31.319 --> 00:38:33.400
<v Speaker 1>of the things that I will normally do

00:38:33.400 --> 00:38:35.400
<v Speaker 1>when logging into a machine will be run

00:38:35.400 --> 00:38:36.440
<v Speaker 1>something like

00:38:37.079 --> 00:38:39.079
<v Speaker 1>uptime to see how long it's been up

00:38:39.079 --> 00:38:41.240
<v Speaker 1>or who to see who's else is on

00:38:41.240 --> 00:38:42.839
<v Speaker 1>the system, if there is anyone else in

00:38:42.839 --> 00:38:43.240
<v Speaker 1>the system.

00:38:44.655 --> 00:38:46.895
<v Speaker 0>Yeah. Great commands. I use those commands all

00:38:46.895 --> 00:38:47.855
<v Speaker 0>the time as well.

00:38:48.415 --> 00:38:49.535
<v Speaker 0>Let's run who?

00:38:51.775 --> 00:38:53.295
<v Speaker 0>We can see me

00:38:53.775 --> 00:38:54.735
<v Speaker 0>fixing menu and

00:38:56.655 --> 00:38:58.415
<v Speaker 0>we can run uptime.

00:39:01.349 --> 00:39:03.029
<v Speaker 0>We can see both our machines have been

00:39:03.029 --> 00:39:05.190
<v Speaker 0>alive for less than twenty minutes, which makes

00:39:05.190 --> 00:39:05.910
<v Speaker 0>sense.

00:39:06.150 --> 00:39:06.869
<v Speaker 0>Yep.

00:39:07.029 --> 00:39:10.230
<v Speaker 0>Now right now, we've been targeting every machine.

00:39:10.309 --> 00:39:12.869
<v Speaker 0>So why don't we kinda cover the different

00:39:12.869 --> 00:39:14.630
<v Speaker 0>targeting options that are available?

00:39:17.545 --> 00:39:18.265
<v Speaker 0>So

00:39:19.625 --> 00:39:20.825
<v Speaker 0>let's try

00:39:24.105 --> 00:39:25.625
<v Speaker 0>targeting by name.

00:39:26.585 --> 00:39:27.385
<v Speaker 0>Simple.

00:39:28.025 --> 00:39:28.505
<v Speaker 0>Yep.

00:39:30.190 --> 00:39:32.030
<v Speaker 0>And you can use you can use star

00:39:32.030 --> 00:39:34.670
<v Speaker 1>in that configuration. Right? So you could target

00:39:35.550 --> 00:39:37.630
<v Speaker 1>if your minions were all named the same,

00:39:37.630 --> 00:39:39.070
<v Speaker 1>you could solve

00:39:42.430 --> 00:39:42.750
<v Speaker 0>Indeed.

00:39:44.515 --> 00:39:46.675
<v Speaker 0>Is that what you meant? Yeah. That's exactly

00:39:46.675 --> 00:39:47.475
<v Speaker 1>what you meant.

00:39:47.795 --> 00:39:49.555
<v Speaker 0>Yeah. So the the name matcher is the

00:39:49.555 --> 00:39:50.515
<v Speaker 0>default one.

00:39:50.755 --> 00:39:52.595
<v Speaker 0>We're not passing any

00:39:52.675 --> 00:39:55.475
<v Speaker 0>parameters to there. You know, the star is

00:39:55.475 --> 00:39:57.475
<v Speaker 0>is also just doing a a name match

00:39:57.475 --> 00:39:59.920
<v Speaker 0>here. It's just saying match everything. We can

00:39:59.920 --> 00:40:02.000
<v Speaker 0>prefix our postfix. It depend on how we

00:40:02.000 --> 00:40:03.760
<v Speaker 0>wish to match. If I wanted to match

00:40:03.760 --> 00:40:04.960
<v Speaker 0>all of the

00:40:06.400 --> 00:40:08.320
<v Speaker 0>three devices, then I guess I could do

00:40:08.320 --> 00:40:09.040
<v Speaker 0>that too.

00:40:09.840 --> 00:40:12.080
<v Speaker 0>But Salt has just so much more power

00:40:12.080 --> 00:40:13.280
<v Speaker 0>when it comes to matches.

00:40:13.914 --> 00:40:15.914
<v Speaker 0>And there's a lot of documentation on this,

00:40:15.914 --> 00:40:16.555
<v Speaker 0>actually.

00:40:17.515 --> 00:40:18.714
<v Speaker 0>So targeting

00:40:24.234 --> 00:40:24.955
<v Speaker 0>so

00:40:25.275 --> 00:40:27.515
<v Speaker 0>before we look at the targeting options, let's

00:40:27.515 --> 00:40:29.710
<v Speaker 0>just see information we can pull out, and

00:40:29.710 --> 00:40:31.230
<v Speaker 0>then we'll look at how we can actually

00:40:31.230 --> 00:40:33.390
<v Speaker 0>use that information to target it.

00:40:33.870 --> 00:40:35.550
<v Speaker 0>And let's see if I can remember the

00:40:35.550 --> 00:40:36.350
<v Speaker 0>commands.

00:40:38.110 --> 00:40:38.670
<v Speaker 0>So

00:40:39.230 --> 00:40:42.430
<v Speaker 0>we can interact with the grains subsystem for

00:40:42.430 --> 00:40:44.954
<v Speaker 0>salt by using grains dot. You can see

00:40:44.954 --> 00:40:47.035
<v Speaker 0>how I use test dot ping.

00:40:47.355 --> 00:40:48.155
<v Speaker 0>I use command

00:40:48.555 --> 00:40:49.195
<v Speaker 0>Run,

00:40:49.595 --> 00:40:52.635
<v Speaker 0>and I can use grains.blah.

00:40:53.515 --> 00:40:54.075
<v Speaker 0>I

00:40:54.315 --> 00:40:56.475
<v Speaker 0>believe we can run grains.ls.

00:40:57.035 --> 00:40:57.674
<v Speaker 0>There we go.

00:40:58.380 --> 00:40:59.180
<v Speaker 0>Yep.

00:41:00.140 --> 00:41:02.059
<v Speaker 0>And this is all of those key value

00:41:02.059 --> 00:41:03.740
<v Speaker 0>pairs that we were talking about at the

00:41:03.740 --> 00:41:05.660
<v Speaker 0>start. This is all the grain data that

00:41:05.660 --> 00:41:06.859
<v Speaker 0>we can use for

00:41:07.180 --> 00:41:08.299
<v Speaker 0>targeting

00:41:08.299 --> 00:41:10.779
<v Speaker 0>and our interstate files or even just on

00:41:10.779 --> 00:41:12.555
<v Speaker 0>the command side. So

00:41:14.155 --> 00:41:15.275
<v Speaker 0>let's see.

00:41:17.675 --> 00:41:19.755
<v Speaker 0>Let me see what kernel we've got.

00:41:20.474 --> 00:41:20.955
<v Speaker 1>Sure.

00:41:25.810 --> 00:41:27.330
<v Speaker 0>More info, please.

00:41:29.490 --> 00:41:30.610
<v Speaker 0>Let's do

00:41:36.609 --> 00:41:37.810
<v Speaker 0>kernel relief.

00:41:40.375 --> 00:41:41.335
<v Speaker 0>There we go.

00:41:42.775 --> 00:41:45.975
<v Speaker 0>But we have a Linux kernel of 4.9.

00:41:47.415 --> 00:41:48.934
<v Speaker 0>And let's see what we've got running on

00:41:48.934 --> 00:41:50.615
<v Speaker 0>our order sent off box.

00:41:55.570 --> 00:41:56.690
<v Speaker 0>Oh, dear.

00:41:57.010 --> 00:41:57.810
<v Speaker 1>Oh,

00:41:57.810 --> 00:41:59.890
<v Speaker 1>wow. My museum colonel.

00:42:01.410 --> 00:42:02.450
<v Speaker 0>Yeah. So

00:42:03.010 --> 00:42:03.730
<v Speaker 0>we can,

00:42:04.505 --> 00:42:06.185
<v Speaker 0>assuming,

00:42:06.185 --> 00:42:08.265
<v Speaker 0>we maybe wanted to get salt to profession

00:42:08.265 --> 00:42:10.665
<v Speaker 0>some sort of oh, I don't know why

00:42:10.665 --> 00:42:13.545
<v Speaker 0>settings decided to on Teams. There we go.

00:42:13.545 --> 00:42:14.105
<v Speaker 0>No.

00:42:15.145 --> 00:42:17.225
<v Speaker 0>I love how I'm on do not disturb

00:42:17.225 --> 00:42:19.145
<v Speaker 0>mode and Teams doesn't really care.

00:42:20.950 --> 00:42:22.550
<v Speaker 0>Let's just Take one take one from the

00:42:22.550 --> 00:42:23.110
<v Speaker 0>team.

00:42:23.430 --> 00:42:26.630
<v Speaker 0>Let's just close Teams. Go away, Teams. Alright.

00:42:27.910 --> 00:42:29.750
<v Speaker 0>So if we wanted to say you assaulted

00:42:29.750 --> 00:42:33.030
<v Speaker 0>provision kernel models or something, then that targeting

00:42:33.030 --> 00:42:34.070
<v Speaker 0>might be really important.

00:42:34.944 --> 00:42:37.985
<v Speaker 0>So we could use the menu name, grains,

00:42:40.385 --> 00:42:43.985
<v Speaker 0>and other information to target our menus. So

00:42:44.145 --> 00:42:45.424
<v Speaker 0>let's take a look at the docs.

00:42:53.540 --> 00:42:56.660
<v Speaker 0>I mean, this page is is relatively big.

00:42:56.820 --> 00:42:58.660
<v Speaker 0>There's a lot there's a few different It's

00:42:58.660 --> 00:43:00.900
<v Speaker 0>a lot there. Yeah. There's when it comes

00:43:00.900 --> 00:43:02.565
<v Speaker 0>to targeting, there's a lot you can do.

00:43:02.565 --> 00:43:03.925
<v Speaker 0>We'll look at a couple of them just

00:43:03.925 --> 00:43:04.965
<v Speaker 0>now, and then we'll try and get on

00:43:04.965 --> 00:43:06.885
<v Speaker 0>to something a bit more fun. But, you

00:43:06.885 --> 00:43:08.565
<v Speaker 0>know, you could do a straight up green

00:43:08.725 --> 00:43:10.805
<v Speaker 0>match. So let's run this.

00:43:14.490 --> 00:43:16.410
<v Speaker 0>Alright. So this isn't gonna return anything because

00:43:16.410 --> 00:43:18.170
<v Speaker 0>we don't have a grain that matches,

00:43:19.050 --> 00:43:20.330
<v Speaker 0>but we do have

00:43:21.450 --> 00:43:22.250
<v Speaker 0>center.

00:43:23.210 --> 00:43:24.010
<v Speaker 0>Ta da.

00:43:24.650 --> 00:43:27.130
<v Speaker 0>And we're just returning the SaltStack

00:43:26.985 --> 00:43:27.785
<v Speaker 0>version.

00:43:27.785 --> 00:43:29.865
<v Speaker 0>So the way the grade matcher works is

00:43:29.865 --> 00:43:32.025
<v Speaker 0>we put the key on the left of

00:43:32.025 --> 00:43:33.625
<v Speaker 0>the colon and then the value on the

00:43:33.625 --> 00:43:34.745
<v Speaker 0>right of the colon.

00:43:35.305 --> 00:43:36.425
<v Speaker 0>And I believe

00:43:37.225 --> 00:43:38.585
<v Speaker 0>the star may work.

00:43:38.825 --> 00:43:39.625
<v Speaker 0>Yeah. Okay.

00:43:41.000 --> 00:43:41.640
<v Speaker 1>Yeah.

00:43:42.119 --> 00:43:43.400
<v Speaker 0>We can also do

00:43:45.080 --> 00:43:46.600
<v Speaker 0>compound matchers

00:43:47.560 --> 00:43:49.240
<v Speaker 0>where we can specify

00:43:49.960 --> 00:43:51.240
<v Speaker 0>and we have to use the docs for

00:43:51.240 --> 00:43:53.880
<v Speaker 0>the syntax, but I believe it's green at

00:43:53.880 --> 00:43:54.280
<v Speaker 0>center.

00:43:56.045 --> 00:43:56.845
<v Speaker 0>Nope.

00:43:58.845 --> 00:44:00.205
<v Speaker 0>Capital g.

00:44:01.885 --> 00:44:03.805
<v Speaker 0>And compact matches allow us to use more

00:44:03.805 --> 00:44:04.925
<v Speaker 0>than one match

00:44:06.765 --> 00:44:07.164
<v Speaker 0>here.

00:44:08.360 --> 00:44:10.280
<v Speaker 0>I believe we can say and

00:44:10.680 --> 00:44:13.560
<v Speaker 0>use another grain where kernel is a little

00:44:13.560 --> 00:44:14.280
<v Speaker 0>in it,

00:44:15.480 --> 00:44:16.280
<v Speaker 0>like so.

00:44:16.520 --> 00:44:18.920
<v Speaker 0>So the compound matcher allow you to use

00:44:18.920 --> 00:44:20.920
<v Speaker 0>grains or menu names

00:44:21.640 --> 00:44:22.280
<v Speaker 0>together.

00:44:23.375 --> 00:44:26.495
<v Speaker 0>They're relatively painless syntax. It's not

00:44:26.815 --> 00:44:27.855
<v Speaker 0>not too difficult.

00:44:28.815 --> 00:44:30.175
<v Speaker 0>Note groups. I

00:44:31.055 --> 00:44:32.974
<v Speaker 0>don't think we'll cover note groups today. But

00:44:32.974 --> 00:44:34.575
<v Speaker 0>note groups can be configured in the salt

00:44:34.575 --> 00:44:35.455
<v Speaker 0>configuration.

00:44:35.855 --> 00:44:38.700
<v Speaker 0>You could, like like, if something isn't available

00:44:38.700 --> 00:44:40.620
<v Speaker 0>as a grain, like, maybe you wanna do

00:44:40.620 --> 00:44:42.940
<v Speaker 0>something that's more Rawkode aware, then you could

00:44:42.940 --> 00:44:44.540
<v Speaker 0>configure that for note groups.

00:44:45.580 --> 00:44:47.660
<v Speaker 0>What else is cool? We're not playing with

00:44:47.660 --> 00:44:48.380
<v Speaker 0>pillars yet.

00:44:49.825 --> 00:44:51.665
<v Speaker 0>Yeah. You can do subnet and IP address

00:44:51.665 --> 00:44:53.345
<v Speaker 0>matching, which is quite cool too.

00:44:54.865 --> 00:44:56.225
<v Speaker 0>But if you just want it, maybe your

00:44:56.225 --> 00:44:58.145
<v Speaker 0>data center is actually maybe you don't need

00:44:58.145 --> 00:44:59.825
<v Speaker 0>to go down the node groups for your

00:44:59.825 --> 00:45:01.745
<v Speaker 0>Rawkode or stuff because you've got your network

00:45:01.745 --> 00:45:03.825
<v Speaker 0>configured and the IP address is allocated on

00:45:03.825 --> 00:45:05.265
<v Speaker 0>a a per rack basis.

00:45:05.960 --> 00:45:07.480
<v Speaker 0>I don't know. There's loads.

00:45:09.160 --> 00:45:11.480
<v Speaker 1>Yeah. The the the

00:45:12.279 --> 00:45:15.720
<v Speaker 1>simple commands are very easy to describe,

00:45:16.359 --> 00:45:17.160
<v Speaker 1>and the

00:45:17.645 --> 00:45:19.645
<v Speaker 1>complexity is there as well.

00:45:19.885 --> 00:45:21.725
<v Speaker 1>Like, if you really need to do something

00:45:22.444 --> 00:45:24.205
<v Speaker 1>special. Because you can tag

00:45:25.005 --> 00:45:26.685
<v Speaker 1>like, if you need to work on a

00:45:26.685 --> 00:45:27.565
<v Speaker 1>arbitrary

00:45:27.565 --> 00:45:29.645
<v Speaker 1>group of machines, you can tag a group

00:45:29.645 --> 00:45:31.805
<v Speaker 1>of machines as a list too. Right?

00:45:33.500 --> 00:45:34.540
<v Speaker 0>Yes.

00:45:34.540 --> 00:45:37.020
<v Speaker 0>Yes. So let's let's talk about that. That's

00:45:37.020 --> 00:45:38.620
<v Speaker 0>a really good point. Thank you.

00:45:39.420 --> 00:45:42.859
<v Speaker 0>We've provisioned our machines with our packet metadata

00:45:42.859 --> 00:45:43.740
<v Speaker 0>module.

00:45:45.260 --> 00:45:45.660
<v Speaker 1>Right.

00:45:48.505 --> 00:45:50.425
<v Speaker 0>Same one we had in Versus Code.

00:45:50.985 --> 00:45:54.185
<v Speaker 0>So what does that mean? Well, let's do

00:45:55.385 --> 00:45:56.905
<v Speaker 0>go in the

00:45:58.265 --> 00:45:58.825
<v Speaker 0>which

00:45:59.305 --> 00:46:00.265
<v Speaker 0>of these is

00:46:00.910 --> 00:46:02.990
<v Speaker 0>packet stuff? Facility. Facility?

00:46:07.390 --> 00:46:08.830
<v Speaker 1>Didn't pick it up?

00:46:10.670 --> 00:46:11.550
<v Speaker 0>Uh-oh.

00:46:12.750 --> 00:46:14.430
<v Speaker 0>Let's do facility.

00:46:16.505 --> 00:46:17.305
<v Speaker 0>Dress?

00:46:18.105 --> 00:46:19.705
<v Speaker 0>Why did I pick it up?

00:46:21.545 --> 00:46:23.465
<v Speaker 0>Let's just make sure I haven't broken the

00:46:23.465 --> 00:46:23.865
<v Speaker 0>scripts.

00:46:28.140 --> 00:46:29.340
<v Speaker 0>Yeah. That's good.

00:46:31.740 --> 00:46:32.940
<v Speaker 0>Let's run.

00:46:34.700 --> 00:46:35.980
<v Speaker 0>So we can

00:46:37.579 --> 00:46:39.660
<v Speaker 0>there is a sec step involved, which I

00:46:39.660 --> 00:46:42.215
<v Speaker 0>thought was automated, but we can try doing

00:46:42.215 --> 00:46:44.695
<v Speaker 0>this now. So we do

00:46:47.255 --> 00:46:48.695
<v Speaker 0>I'm not gonna remember how to do it.

00:46:48.695 --> 00:46:49.495
<v Speaker 0>Salt,

00:46:49.495 --> 00:46:49.975
<v Speaker 0>util,

00:46:51.335 --> 00:46:52.295
<v Speaker 0>think all.

00:46:53.880 --> 00:46:55.880
<v Speaker 0>There we go. There we go.

00:46:56.440 --> 00:46:57.880
<v Speaker 0>And you can see now it's picked up

00:46:57.880 --> 00:46:59.799
<v Speaker 0>that green. So I guess that's just something

00:46:59.799 --> 00:47:01.240
<v Speaker 0>I have to clean up in the automation.

00:47:01.240 --> 00:47:02.760
<v Speaker 0>And it just tells it to kinda scan

00:47:02.760 --> 00:47:05.799
<v Speaker 0>those direct those expected directories for new module

00:47:05.799 --> 00:47:08.335
<v Speaker 0>types. And there's loads of module types. You

00:47:08.335 --> 00:47:09.855
<v Speaker 0>know, we can have states, we can have

00:47:09.855 --> 00:47:12.015
<v Speaker 0>beacons, we can have different engines.

00:47:12.335 --> 00:47:13.295
<v Speaker 0>Ah, loads.

00:47:13.694 --> 00:47:15.135
<v Speaker 0>Okay. So let's run

00:47:17.454 --> 00:47:19.134
<v Speaker 0>grains.la.

00:47:19.134 --> 00:47:20.575
<v Speaker 0>Then let's just correct.

00:47:23.990 --> 00:47:25.990
<v Speaker 0>It's really not gonna show up.

00:47:29.750 --> 00:47:31.750
<v Speaker 0>How about get facility?

00:47:34.905 --> 00:47:36.185
<v Speaker 0>What

00:47:36.665 --> 00:47:38.265
<v Speaker 0>am I doing wrong?

00:47:42.025 --> 00:47:42.985
<v Speaker 1>Version of Python?

00:47:52.250 --> 00:47:53.770
<v Speaker 0>It's weird that it showed up in the

00:47:53.770 --> 00:47:54.490
<v Speaker 0>sync.

00:47:56.330 --> 00:47:58.490
<v Speaker 0>It doesn't show up now. It definitely did

00:47:58.490 --> 00:48:01.050
<v Speaker 0>sync that time. Did something. Yeah. Yeah.

00:48:02.585 --> 00:48:04.825
<v Speaker 0>Normally, I'd see a dot PYC

00:48:04.825 --> 00:48:06.025
<v Speaker 0>file here

00:48:07.224 --> 00:48:08.984
<v Speaker 0>to show that it compiled.

00:48:08.984 --> 00:48:10.825
<v Speaker 0>I'm gonna just restart Salt.

00:48:10.905 --> 00:48:11.464
<v Speaker 0>That is Yeah.

00:48:16.480 --> 00:48:17.760
<v Speaker 0>Grins.get

00:48:17.760 --> 00:48:18.880
<v Speaker 0>facility.

00:48:21.440 --> 00:48:23.360
<v Speaker 1>Still no help, you know, sir. Yeah. You're

00:48:23.360 --> 00:48:24.240
<v Speaker 0>letting me down. So

00:48:37.705 --> 00:48:40.105
<v Speaker 0>Let's check the log. I wouldn't waste too

00:48:40.105 --> 00:48:41.465
<v Speaker 0>much time on it. We don't need to

00:48:41.465 --> 00:48:43.065
<v Speaker 0>work on the packet metadata today,

00:48:43.390 --> 00:48:45.390
<v Speaker 0>But, you know, I I also don't like

00:48:45.390 --> 00:48:46.510
<v Speaker 0>things not working.

00:48:53.070 --> 00:48:54.270
<v Speaker 1>That looks like metadata.

00:48:56.085 --> 00:48:57.125
<v Speaker 0>Yeah. It did

00:48:57.605 --> 00:48:59.285
<v Speaker 0>the metadata API.

00:49:02.725 --> 00:49:03.365
<v Speaker 1>Yeah.

00:49:06.244 --> 00:49:08.885
<v Speaker 1>Is an error message hiding somewhere in that?

00:49:08.885 --> 00:49:09.045
<v Speaker 1>Or

00:49:13.680 --> 00:49:15.040
<v Speaker 0>I wonder if I should be worried about

00:49:15.040 --> 00:49:15.680
<v Speaker 0>this.

00:49:17.680 --> 00:49:19.120
<v Speaker 0>It's not my MacBook.

00:49:23.454 --> 00:49:25.855
<v Speaker 1>That's the packet metadata. So you're in a

00:49:25.855 --> 00:49:28.095
<v Speaker 1>project that's shared with other people.

00:49:29.934 --> 00:49:31.055
<v Speaker 1>And by default,

00:49:32.335 --> 00:49:33.055
<v Speaker 1>the

00:49:34.255 --> 00:49:38.255
<v Speaker 1>metadata includes all the metadata from the

00:49:39.940 --> 00:49:42.660
<v Speaker 1>entirety of everyone who has access to that

00:49:42.660 --> 00:49:43.380
<v Speaker 1>project.

00:49:44.100 --> 00:49:45.700
<v Speaker 0>Alright. Okay. Cool.

00:49:46.500 --> 00:49:47.300
<v Speaker 0>I

00:49:47.300 --> 00:49:49.380
<v Speaker 0>was slightly worried, Harrison. I don't think we

00:49:49.380 --> 00:49:51.460
<v Speaker 0>exposed any key to tokens or anything. No.

00:49:51.460 --> 00:49:53.140
<v Speaker 1>There's no keys. Those are public. Those are

00:49:53.140 --> 00:49:53.460
<v Speaker 1>public.

00:49:54.555 --> 00:49:55.755
<v Speaker 0>Yeah. Okay.

00:49:57.434 --> 00:50:00.474
<v Speaker 0>It does appear. So I'm just doing something

00:50:00.474 --> 00:50:01.755
<v Speaker 0>wrong,

00:50:02.155 --> 00:50:03.195
<v Speaker 0>I'm sure.

00:50:04.395 --> 00:50:05.435
<v Speaker 0>As well as

00:50:05.915 --> 00:50:08.075
<v Speaker 0>l s, there is

00:50:09.700 --> 00:50:10.420
<v Speaker 0>get.

00:50:11.860 --> 00:50:12.500
<v Speaker 0>Oh,

00:50:13.460 --> 00:50:14.660
<v Speaker 0>no. There's

00:50:16.660 --> 00:50:17.780
<v Speaker 0>help me salt.

00:50:21.220 --> 00:50:22.500
<v Speaker 0>Salt grains

00:50:22.500 --> 00:50:23.300
<v Speaker 0>command.

00:50:27.605 --> 00:50:29.365
<v Speaker 0>I got some recipes as well.

00:50:32.645 --> 00:50:33.285
<v Speaker 0>So

00:50:34.805 --> 00:50:37.045
<v Speaker 0>grains.ls.

00:50:37.045 --> 00:50:38.485
<v Speaker 0>That's what I was thinking of.

00:50:40.680 --> 00:50:43.000
<v Speaker 0>That's the same as oh, l s is

00:50:43.000 --> 00:50:43.960
<v Speaker 0>what I was doing.

00:50:44.200 --> 00:50:46.680
<v Speaker 0>Yeah. Items items is what I want.

00:50:50.600 --> 00:50:52.200
<v Speaker 0>Let me see what we have.

00:50:52.760 --> 00:50:54.280
<v Speaker 0>Ah, it's under a key.

00:50:55.815 --> 00:50:57.015
<v Speaker 1>It's under a key.

00:50:57.335 --> 00:50:58.215
<v Speaker 1>Of course.

00:50:58.775 --> 00:51:00.295
<v Speaker 0>Okay. Phew.

00:51:00.455 --> 00:51:02.615
<v Speaker 0>And there was me thinking nothing more.

00:51:02.775 --> 00:51:03.415
<v Speaker 0>So

00:51:05.815 --> 00:51:07.255
<v Speaker 0>there you go. We can call packet dot

00:51:07.255 --> 00:51:08.135
<v Speaker 0>metadata,

00:51:08.135 --> 00:51:09.415
<v Speaker 0>and if I add facility,

00:51:10.700 --> 00:51:11.740
<v Speaker 0>I

00:51:12.220 --> 00:51:14.539
<v Speaker 0>can't remember the stop syntax, but it's there.

00:51:14.539 --> 00:51:15.579
<v Speaker 0>Okay. Good.

00:51:17.579 --> 00:51:20.220
<v Speaker 0>So we can use those grains if we

00:51:20.220 --> 00:51:21.420
<v Speaker 0>wish to

00:51:23.435 --> 00:51:25.515
<v Speaker 0>target things with

00:51:25.915 --> 00:51:26.795
<v Speaker 0>commands.

00:51:27.115 --> 00:51:29.035
<v Speaker 1>Right. So we could say, for instance, do

00:51:29.035 --> 00:51:30.475
<v Speaker 1>this command on all

00:51:30.715 --> 00:51:32.715
<v Speaker 1>hosts in AMS one.

00:51:35.400 --> 00:51:36.440
<v Speaker 0>Yes.

00:51:36.440 --> 00:51:37.160
<v Speaker 0>Yes.

00:51:39.000 --> 00:51:40.440
<v Speaker 0>Yeah. I think so.

00:51:42.119 --> 00:51:43.720
<v Speaker 0>Okay. So that means I need to remember

00:51:43.720 --> 00:51:47.080
<v Speaker 0>how to get the sub key then. So

00:51:47.160 --> 00:51:48.955
<v Speaker 0>let's try it. So

00:51:49.835 --> 00:51:51.675
<v Speaker 0>we're gonna do a green match.

00:51:52.875 --> 00:51:54.795
<v Speaker 0>We're gonna look for the packet

00:51:54.954 --> 00:51:55.995
<v Speaker 0>metadata.

00:51:58.555 --> 00:52:00.395
<v Speaker 0>Yeah. It's cool on. I just popped into

00:52:00.395 --> 00:52:01.755
<v Speaker 0>my head there. I'm sure.

00:52:03.030 --> 00:52:03.670
<v Speaker 0>Yeah.

00:52:05.110 --> 00:52:05.830
<v Speaker 0>Oh, no.

00:52:06.870 --> 00:52:08.390
<v Speaker 0>I've removed the command. Okay. So we can

00:52:08.390 --> 00:52:09.990
<v Speaker 0>do a grain matcher.

00:52:10.310 --> 00:52:12.390
<v Speaker 0>Let's say we do a command dot run.

00:52:13.830 --> 00:52:14.710
<v Speaker 0>We will run.

00:52:18.135 --> 00:52:19.975
<v Speaker 0>Yeah, we'll just we'll run here.

00:52:20.855 --> 00:52:24.215
<v Speaker 0>We wanna match on our packet metadata

00:52:27.175 --> 00:52:28.375
<v Speaker 0>on the facility

00:52:30.690 --> 00:52:31.970
<v Speaker 0>Times one.

00:52:33.890 --> 00:52:34.610
<v Speaker 0>There.

00:52:35.170 --> 00:52:35.890
<v Speaker 1>Here.

00:52:36.210 --> 00:52:39.010
<v Speaker 0>Perfect. It's all coming back to me. Feeling

00:52:39.010 --> 00:52:39.730
<v Speaker 0>the pressure.

00:52:44.290 --> 00:52:45.545
<v Speaker 0>So What about pillars?

00:52:45.625 --> 00:52:47.145
<v Speaker 0>It mostly works the same.

00:52:53.865 --> 00:52:55.625
<v Speaker 0>Might not spell pillars right.

00:52:57.305 --> 00:52:57.945
<v Speaker 0>There we go.

00:52:59.360 --> 00:53:01.280
<v Speaker 0>And but we don't have anything configured as

00:53:01.280 --> 00:53:02.720
<v Speaker 0>a source of pillar data.

00:53:04.160 --> 00:53:05.520
<v Speaker 0>But I guess we've got a few things

00:53:05.520 --> 00:53:07.200
<v Speaker 0>we can we can do now.

00:53:07.920 --> 00:53:09.440
<v Speaker 1>Good. You wanna take a look at the

00:53:09.440 --> 00:53:11.360
<v Speaker 1>list of provision machines and see if we

00:53:11.360 --> 00:53:12.160
<v Speaker 1>got another

00:53:12.865 --> 00:53:14.305
<v Speaker 1>like, do a salt keys and see if

00:53:14.305 --> 00:53:16.305
<v Speaker 1>there's another one that's ready to to pop

00:53:16.305 --> 00:53:16.945
<v Speaker 1>in.

00:53:19.265 --> 00:53:21.185
<v Speaker 0>No. But we will Nothing?

00:53:21.665 --> 00:53:23.665
<v Speaker 0>We can, correctly. Oh, wait. We never got

00:53:23.665 --> 00:53:24.465
<v Speaker 0>a minion too.

00:53:25.500 --> 00:53:27.100
<v Speaker 0>The free BSD failed.

00:53:27.340 --> 00:53:28.940
<v Speaker 1>Yeah. The free BSD failed.

00:53:31.260 --> 00:53:31.980
<v Speaker 0>Alright.

00:53:32.140 --> 00:53:33.900
<v Speaker 0>But we can fix

00:53:35.420 --> 00:53:35.820
<v Speaker 0>a bit.

00:53:44.315 --> 00:53:46.475
<v Speaker 0>I keep doing that. I keep go screen

00:53:46.795 --> 00:53:47.995
<v Speaker 0>I just split the screen.

00:53:49.035 --> 00:53:51.435
<v Speaker 0>Alright. Okay. Yes, please. You, Ricky.

00:53:53.810 --> 00:53:54.610
<v Speaker 0>And

00:53:54.610 --> 00:53:57.490
<v Speaker 0>let's see how far this one got. So

00:53:59.570 --> 00:54:01.490
<v Speaker 0>exact same problem with a printer in the

00:54:01.490 --> 00:54:02.130
<v Speaker 0>center.

00:54:03.010 --> 00:54:04.770
<v Speaker 0>Okay. So pet uninstall.

00:54:07.655 --> 00:54:09.255
<v Speaker 0>Salt. Goodbye. Bye.

00:54:12.295 --> 00:54:12.935
<v Speaker 0>Eventually.

00:54:19.015 --> 00:54:20.375
<v Speaker 0>Thinking about it.

00:54:20.855 --> 00:54:21.575
<v Speaker 0>There we go.

00:54:22.550 --> 00:54:23.670
<v Speaker 0>Yes, please.

00:54:24.630 --> 00:54:26.550
<v Speaker 0>Let's do PEP three install

00:54:27.110 --> 00:54:27.830
<v Speaker 0>vault.

00:54:30.950 --> 00:54:32.150
<v Speaker 1>Python PEP three.

00:54:33.430 --> 00:54:34.150
<v Speaker 0>I think.

00:54:34.785 --> 00:54:36.785
<v Speaker 0>And we just got install on this Questions.

00:54:36.865 --> 00:54:39.425
<v Speaker 0>I don't know what's going on with Salt

00:54:39.425 --> 00:54:41.345
<v Speaker 0>Bootstrap then. Maybe it's not

00:54:41.665 --> 00:54:44.305
<v Speaker 0>been updated since the 03/2001

00:54:44.305 --> 00:54:45.744
<v Speaker 0>release. I'm not really sure.

00:54:48.230 --> 00:54:49.430
<v Speaker 0>It's not important.

00:54:52.230 --> 00:54:54.310
<v Speaker 0>Let's get Salt working. We'll register it, and

00:54:54.310 --> 00:54:55.510
<v Speaker 0>then we'll talk about what we can do.

00:54:55.510 --> 00:54:57.670
<v Speaker 0>So we can begin to add file routes,

00:54:57.670 --> 00:55:00.015
<v Speaker 0>though, and Salt a file route is somewhere

00:55:00.015 --> 00:55:02.015
<v Speaker 0>that has configuration that we want our salt

00:55:02.015 --> 00:55:03.935
<v Speaker 0>master to configure or consume,

00:55:04.255 --> 00:55:06.734
<v Speaker 0>which allows us to provide power information or

00:55:06.734 --> 00:55:08.575
<v Speaker 0>our state information, and we'll see how we

00:55:08.575 --> 00:55:10.415
<v Speaker 0>can actually build states.

00:55:10.895 --> 00:55:12.655
<v Speaker 0>I think the other thing that you wanted

00:55:12.655 --> 00:55:15.430
<v Speaker 0>to cover was what if we wanna install

00:55:15.430 --> 00:55:18.630
<v Speaker 0>NGINX across these disparate operating systems where the

00:55:18.630 --> 00:55:20.550
<v Speaker 0>package name may be different, but we can

00:55:20.550 --> 00:55:21.590
<v Speaker 0>tackle that too.

00:55:21.830 --> 00:55:22.550
<v Speaker 0>K.

00:55:23.990 --> 00:55:26.070
<v Speaker 0>Alright. So PIP three,

00:55:26.150 --> 00:55:26.790
<v Speaker 0>install.

00:55:27.590 --> 00:55:27.910
<v Speaker 0>Oh.

00:55:32.845 --> 00:55:34.845
<v Speaker 0>And let's grab this IP address again.

00:56:16.480 --> 00:56:18.480
<v Speaker 1>So do you wanna talk a little bit

00:56:18.480 --> 00:56:19.119
<v Speaker 1>about,

00:56:19.599 --> 00:56:21.839
<v Speaker 1>Zero and Q and how Salt works behind

00:56:21.839 --> 00:56:22.400
<v Speaker 1>the scenes,

00:56:24.935 --> 00:56:26.535
<v Speaker 1>Or is that advanced?

00:56:28.935 --> 00:56:29.895
<v Speaker 1>Or do I should

00:56:30.455 --> 00:56:31.815
<v Speaker 1>is sufficiently

00:56:32.055 --> 00:56:33.655
<v Speaker 1>advanced for another time.

00:56:35.335 --> 00:56:37.255
<v Speaker 0>No. Let's let's talk about what goes on

00:56:37.255 --> 00:56:37.575
<v Speaker 0>there.

00:56:38.730 --> 00:56:41.770
<v Speaker 0>I think it's it's important. So if we

00:56:41.770 --> 00:56:43.210
<v Speaker 0>talk about what happens

00:56:43.369 --> 00:56:45.770
<v Speaker 0>when I run something as

00:56:46.170 --> 00:56:48.970
<v Speaker 0>as innocent as this command. So

00:56:49.690 --> 00:56:52.570
<v Speaker 0>when I run Salt with my targeting and

00:56:52.570 --> 00:56:54.090
<v Speaker 0>some sort of module to run,

00:56:55.505 --> 00:56:58.865
<v Speaker 0>it's important to know that the master

00:56:58.945 --> 00:57:02.145
<v Speaker 0>does not communicate with any of the minions.

00:57:02.465 --> 00:57:03.985
<v Speaker 0>No message is sent

00:57:04.305 --> 00:57:06.225
<v Speaker 0>over a TCP stack to the minions,

00:57:07.119 --> 00:57:08.320
<v Speaker 0>at least directly.

00:57:08.640 --> 00:57:10.800
<v Speaker 0>What actually happens and that's really simplified it

00:57:10.800 --> 00:57:12.480
<v Speaker 0>from a security point of view as well,

00:57:12.480 --> 00:57:13.359
<v Speaker 0>particularly

00:57:13.359 --> 00:57:14.880
<v Speaker 0>around firewall rules,

00:57:15.280 --> 00:57:17.359
<v Speaker 0>is that the only firewall rules you need

00:57:17.359 --> 00:57:19.200
<v Speaker 0>to allow are your minions to speak to

00:57:19.200 --> 00:57:20.400
<v Speaker 0>your to your master.

00:57:21.325 --> 00:57:23.485
<v Speaker 0>And that's because when we issue a command

00:57:23.485 --> 00:57:24.125
<v Speaker 0>here,

00:57:24.605 --> 00:57:26.925
<v Speaker 0>what actually happens is the salt master rates

00:57:26.925 --> 00:57:29.085
<v Speaker 0>to a zero m q topic,

00:57:29.725 --> 00:57:32.125
<v Speaker 0>and there's one spare pair of menu, and

00:57:32.125 --> 00:57:32.685
<v Speaker 0>I think it is.

00:57:33.510 --> 00:57:35.590
<v Speaker 0>And those menus reach out to the master

00:57:35.590 --> 00:57:37.430
<v Speaker 0>and subscribe to their topics.

00:57:37.590 --> 00:57:39.590
<v Speaker 0>So we put the instruction onto CRM queue.

00:57:39.590 --> 00:57:41.030
<v Speaker 0>The menus pick it up. They do the

00:57:41.030 --> 00:57:41.590
<v Speaker 0>work,

00:57:41.990 --> 00:57:43.830
<v Speaker 0>and then a message gets published back on

00:57:43.830 --> 00:57:46.390
<v Speaker 0>CRM queue, the master consumes it to understand

00:57:46.390 --> 00:57:47.350
<v Speaker 0>that the job is done.

00:57:49.105 --> 00:57:50.145
<v Speaker 0>And that's it.

00:57:50.625 --> 00:57:53.505
<v Speaker 0>It's it scales super well. Like, if you

00:57:53.505 --> 00:57:56.225
<v Speaker 0>can imagine that I've got I mean, that's

00:57:56.225 --> 00:57:58.545
<v Speaker 0>either a contrived example right now. We've only

00:57:58.545 --> 00:58:00.465
<v Speaker 0>got a couple of minions, but Azure infrastructure

00:58:00.465 --> 00:58:02.785
<v Speaker 0>scales to dozens to hundreds to thousands.

00:58:03.420 --> 00:58:05.819
<v Speaker 0>Those messages been written to a local CRM

00:58:05.819 --> 00:58:07.579
<v Speaker 0>queue and consumed downstream.

00:58:07.579 --> 00:58:08.940
<v Speaker 0>It's super fast.

00:58:11.740 --> 00:58:14.460
<v Speaker 1>Yeah. It means that the network infrastructure can

00:58:14.460 --> 00:58:16.540
<v Speaker 1>be simplified as well because

00:58:17.020 --> 00:58:18.460
<v Speaker 1>if you have a

00:58:19.025 --> 00:58:19.825
<v Speaker 1>minion

00:58:19.825 --> 00:58:20.705
<v Speaker 1>that's

00:58:21.425 --> 00:58:21.985
<v Speaker 1>remote,

00:58:22.625 --> 00:58:25.185
<v Speaker 1>right, it's in an edge location, it's behind

00:58:25.185 --> 00:58:26.465
<v Speaker 1>a firewall, whatever,

00:58:27.905 --> 00:58:29.825
<v Speaker 1>you don't need to

00:58:31.040 --> 00:58:32.080
<v Speaker 1>send command

00:58:32.320 --> 00:58:34.240
<v Speaker 1>you don't need to send something directly to

00:58:34.240 --> 00:58:36.640
<v Speaker 1>it. It can fetch from a

00:58:36.960 --> 00:58:39.200
<v Speaker 1>more publicly reachable site.

00:58:41.200 --> 00:58:42.080
<v Speaker 0>Yeah. Definitely.

00:58:43.005 --> 00:58:43.645
<v Speaker 0>Yeah.

00:58:43.964 --> 00:58:44.445
<v Speaker 0>So

00:58:45.325 --> 00:58:46.924
<v Speaker 0>that's taken a little bit longer than I

00:58:46.924 --> 00:58:47.964
<v Speaker 0>was expecting.

00:58:48.605 --> 00:58:50.444
<v Speaker 1>Is this on our is this on our

00:58:50.444 --> 00:58:51.724
<v Speaker 1>c one large arm?

00:58:52.684 --> 00:58:54.365
<v Speaker 1>I think this is on our arm machine.

00:58:56.150 --> 00:58:57.030
<v Speaker 0>So

00:58:57.510 --> 00:58:59.830
<v Speaker 1>Yeah. So there's a story behind this.

00:59:01.190 --> 00:59:02.870
<v Speaker 1>Up until recently,

00:59:03.350 --> 00:59:03.990
<v Speaker 1>the

00:59:05.270 --> 00:59:06.790
<v Speaker 1>PIP infrastructure

00:59:06.790 --> 00:59:07.910
<v Speaker 1>for wheels

00:59:07.910 --> 00:59:08.870
<v Speaker 1>on ARM

00:59:09.195 --> 00:59:11.755
<v Speaker 1>has been lagging behind. And so

00:59:12.075 --> 00:59:14.555
<v Speaker 1>in a lot of cases, we're actually compiling

00:59:14.555 --> 00:59:15.515
<v Speaker 1>things right now.

00:59:16.235 --> 00:59:19.035
<v Speaker 1>Whereas on a x 86 machine, they would

00:59:19.035 --> 00:59:19.995
<v Speaker 1>just be available.

00:59:20.635 --> 00:59:21.995
<v Speaker 0>Yeah. So I guess it would use a

00:59:21.995 --> 00:59:24.475
<v Speaker 0>precompiled version, but for ARM, we have to

00:59:24.475 --> 00:59:26.150
<v Speaker 0>drill that as we We have to do

00:59:26.150 --> 00:59:27.750
<v Speaker 1>all the work ourselves. Yeah.

00:59:28.790 --> 00:59:30.790
<v Speaker 0>Alright. Well, we can leave that running for

00:59:30.790 --> 00:59:31.430
<v Speaker 0>now.

00:59:32.950 --> 00:59:33.590
<v Speaker 0>So

00:59:34.790 --> 00:59:37.110
<v Speaker 0>now we understand how the messaging works. We

00:59:37.110 --> 00:59:39.395
<v Speaker 0>kinda covered the what that means for our

00:59:39.395 --> 00:59:41.234
<v Speaker 0>networking security point of view, at least as

00:59:41.234 --> 00:59:42.755
<v Speaker 0>far as firewall rules go.

00:59:43.795 --> 00:59:45.315
<v Speaker 0>Next, I guess, wanna

00:59:45.955 --> 00:59:47.315
<v Speaker 0>provision something.

00:59:47.475 --> 00:59:50.995
<v Speaker 0>Right? Right. We we wanna install some software.

00:59:52.115 --> 00:59:55.319
<v Speaker 0>Alright. So let's see. What do we have

00:59:55.319 --> 00:59:56.040
<v Speaker 0>again?

01:00:00.920 --> 01:00:01.720
<v Speaker 0>OS.

01:00:02.200 --> 01:00:04.200
<v Speaker 0>Alright. We got a Debian box and a

01:00:04.200 --> 01:00:05.160
<v Speaker 0>CentOS box.

01:00:06.714 --> 01:00:09.275
<v Speaker 0>So let's search on the this is a

01:00:09.275 --> 01:00:10.475
<v Speaker 0>Debian box.

01:00:12.155 --> 01:00:13.755
<v Speaker 0>I don't wanna pick something, but the package

01:00:13.755 --> 01:00:16.155
<v Speaker 0>name is the same. Although, I guess, could

01:00:16.155 --> 01:00:18.075
<v Speaker 0>because it's still really even if the package

01:00:18.075 --> 01:00:18.875
<v Speaker 0>names are the same,

01:00:19.910 --> 01:00:21.990
<v Speaker 0>it's still using a different package manager under

01:00:21.990 --> 01:00:23.750
<v Speaker 0>the hood to install it. So that's cool.

01:00:23.990 --> 01:00:25.750
<v Speaker 0>Right. There's also stuff we can do, but

01:00:25.750 --> 01:00:26.870
<v Speaker 0>passing in, like

01:00:27.590 --> 01:00:28.710
<v Speaker 0>Salt uses

01:00:29.270 --> 01:00:30.070
<v Speaker 0>Ginger

01:00:30.150 --> 01:00:32.070
<v Speaker 0>templating a lot, and you can use maps

01:00:32.070 --> 01:00:33.910
<v Speaker 0>and Ginger to provide dynamic

01:00:34.230 --> 01:00:36.005
<v Speaker 0>package name, which is quite nice.

01:00:36.565 --> 01:00:37.205
<v Speaker 0>Yeah.

01:00:44.565 --> 01:00:46.565
<v Speaker 0>Okay. So they're the same, but that's fine.

01:00:46.565 --> 01:00:47.525
<v Speaker 0>So what we can do,

01:00:48.670 --> 01:00:51.070
<v Speaker 0>you got a suggestion there? Or No. I

01:00:51.070 --> 01:00:52.670
<v Speaker 1>I think this is a I think it's

01:00:52.670 --> 01:00:54.190
<v Speaker 1>good to show off that

01:00:54.510 --> 01:00:57.310
<v Speaker 1>you can run one command that'll

01:00:57.470 --> 01:00:58.270
<v Speaker 1>do

01:01:01.345 --> 01:01:04.225
<v Speaker 1>do different things on different systems that are

01:01:04.625 --> 01:01:07.825
<v Speaker 1>logically the same, but underneath the code underneath

01:01:07.825 --> 01:01:10.865
<v Speaker 1>the hood, they're they're different. Oh, yeah. Definitely.

01:01:10.865 --> 01:01:12.385
<v Speaker 0>I think that you're you're right.

01:01:13.105 --> 01:01:14.625
<v Speaker 0>And before I run this, I think that

01:01:14.625 --> 01:01:16.410
<v Speaker 0>would just be that would be silly of

01:01:16.410 --> 01:01:18.250
<v Speaker 0>me not to kind of explain. So

01:01:19.130 --> 01:01:21.850
<v Speaker 0>we could do an act

01:01:22.490 --> 01:01:24.569
<v Speaker 0>search engine x with a command run. Right?

01:01:24.569 --> 01:01:25.610
<v Speaker 0>The problem being

01:01:28.410 --> 01:01:30.490
<v Speaker 0>being just me

01:01:31.875 --> 01:01:32.835
<v Speaker 0>I said,

01:01:32.995 --> 01:01:34.195
<v Speaker 0>it's not gonna work

01:01:34.995 --> 01:01:37.395
<v Speaker 0>on our infrastructure which isn't debbing or event

01:01:37.395 --> 01:01:39.795
<v Speaker 0>to base. Like, oh, that doesn't work. Which

01:01:39.795 --> 01:01:42.595
<v Speaker 0>means we can't do apt install engine access

01:01:42.595 --> 01:01:44.195
<v Speaker 0>way. Or I could, but it would only

01:01:44.195 --> 01:01:46.355
<v Speaker 0>work on a subset of my machine. And

01:01:46.355 --> 01:01:49.730
<v Speaker 0>what Salt does is provide state modules, which

01:01:49.730 --> 01:01:52.290
<v Speaker 0>try to abstract away most of this stuff.

01:01:52.290 --> 01:01:54.610
<v Speaker 0>Like, you you you just don't really care.

01:01:55.810 --> 01:01:57.650
<v Speaker 0>And we get this used package dot installed

01:01:57.650 --> 01:01:59.170
<v Speaker 0>and give it the name of a package.

01:01:59.985 --> 01:02:01.505
<v Speaker 0>I thought I would just check our ARM

01:02:01.505 --> 01:02:03.425
<v Speaker 0>box before I run this, but it's not

01:02:03.425 --> 01:02:04.145
<v Speaker 0>up yet.

01:02:05.985 --> 01:02:07.025
<v Speaker 0>And package

01:02:07.025 --> 01:02:07.985
<v Speaker 0>install.

01:02:11.425 --> 01:02:14.470
<v Speaker 0>And behind the scenes, that's installing those packages

01:02:14.470 --> 01:02:16.390
<v Speaker 0>for us on both of our machines.

01:02:17.190 --> 01:02:19.350
<v Speaker 0>Right. Then that that that is gonna be

01:02:19.990 --> 01:02:21.350
<v Speaker 0>a little bit verbose,

01:02:21.350 --> 01:02:21.750
<v Speaker 0>but

01:02:22.470 --> 01:02:23.510
<v Speaker 0>it's now done.

01:02:24.150 --> 01:02:25.910
<v Speaker 0>So how can I convince you that that

01:02:25.910 --> 01:02:26.870
<v Speaker 0>has actually happened?

01:02:28.355 --> 01:02:29.395
<v Speaker 0>Let's try

01:02:30.835 --> 01:02:32.595
<v Speaker 0>is there a package dot beraden? I can't

01:02:32.595 --> 01:02:33.234
<v Speaker 0>remember.

01:02:33.875 --> 01:02:36.435
<v Speaker 1>I think Yeah. Don't Here we go.

01:02:38.914 --> 01:02:40.994
<v Speaker 1>And we get slightly different versions of each

01:02:40.994 --> 01:02:43.290
<v Speaker 1>of them, which is to be expected.

01:02:44.250 --> 01:02:46.170
<v Speaker 0>Well, yeah. I mean, we didn't do anything

01:02:47.450 --> 01:02:50.570
<v Speaker 0>we didn't specify anything to conversions

01:02:50.570 --> 01:02:52.810
<v Speaker 0>or or anything like that. So we're getting

01:02:52.810 --> 01:02:54.970
<v Speaker 0>whatever's latest and greatest per operating system.

01:02:56.395 --> 01:02:58.555
<v Speaker 0>And it turns out that

01:02:59.994 --> 01:03:02.395
<v Speaker 0>CentOS is actually a few versions ahead even

01:03:02.395 --> 01:03:04.555
<v Speaker 0>though it's kernel was particularly old.

01:03:05.035 --> 01:03:05.675
<v Speaker 0>So

01:03:07.674 --> 01:03:08.315
<v Speaker 0>that's cool.

01:03:09.090 --> 01:03:11.010
<v Speaker 0>We can also I mean, we can trust

01:03:11.010 --> 01:03:12.690
<v Speaker 0>package dot version, but we can also do

01:03:12.690 --> 01:03:15.250
<v Speaker 0>a command dot run where we do NGINX

01:03:15.330 --> 01:03:17.810
<v Speaker 0>version. Oh, I think that works.

01:03:18.290 --> 01:03:18.690
<v Speaker 0>Oh,

01:03:21.845 --> 01:03:22.724
<v Speaker 0>there we go.

01:03:23.444 --> 01:03:25.845
<v Speaker 0>And we get that same information back by

01:03:25.845 --> 01:03:28.244
<v Speaker 0>the you know, directly speaking to the command

01:03:28.244 --> 01:03:28.885
<v Speaker 0>line.

01:03:29.365 --> 01:03:31.365
<v Speaker 0>Let's bring up this person too.

01:03:33.860 --> 01:03:35.540
<v Speaker 0>Let's do some army stuff.

01:03:36.020 --> 01:03:37.700
<v Speaker 0>Arm arm stuff.

01:03:40.020 --> 01:03:40.980
<v Speaker 0>Menuin.

01:03:42.900 --> 01:03:44.660
<v Speaker 0>I guess we're creating this ourselves.

01:03:46.355 --> 01:03:49.395
<v Speaker 0>Vim master con master

01:03:52.115 --> 01:03:53.555
<v Speaker 0>Grab the IP address again.

01:04:12.190 --> 01:04:13.310
<v Speaker 0>Restart

01:04:13.235 --> 01:04:15.155
<v Speaker 0>SaltMenion.

01:04:17.795 --> 01:04:18.755
<v Speaker 0>Alright.

01:04:20.675 --> 01:04:22.355
<v Speaker 0>So we run SaltKey.

01:04:25.235 --> 01:04:26.675
<v Speaker 0>Hey. Stop there.

01:04:30.869 --> 01:04:31.990
<v Speaker 0>There we go.

01:04:32.390 --> 01:04:33.670
<v Speaker 0>Patience. Here we go.

01:04:35.589 --> 01:04:36.630
<v Speaker 0>Opinion

01:04:36.710 --> 01:04:37.270
<v Speaker 0>one.

01:04:38.070 --> 01:04:40.230
<v Speaker 0>Thank you. Okay. So how you can

01:04:40.470 --> 01:04:40.710
<v Speaker 0>let

01:04:43.065 --> 01:04:43.945
<v Speaker 0>kernel

01:04:43.945 --> 01:04:44.665
<v Speaker 0>release.

01:04:56.440 --> 01:04:57.720
<v Speaker 0>Silly me. Okay.

01:04:58.680 --> 01:05:00.360
<v Speaker 0>Kernel release.

01:05:00.680 --> 01:05:01.400
<v Speaker 0>There

01:05:03.800 --> 01:05:05.880
<v Speaker 0>we go. Not one of them the same,

01:05:05.880 --> 01:05:08.200
<v Speaker 0>but I guess we expected that. Right? Yeah.

01:05:08.200 --> 01:05:09.000
<v Speaker 0>We expected that.

01:05:10.355 --> 01:05:12.914
<v Speaker 1>Well, let's And and and I'd I'd say,

01:05:12.914 --> 01:05:13.635
<v Speaker 1>you know,

01:05:14.755 --> 01:05:16.595
<v Speaker 1>that the fact that

01:05:16.994 --> 01:05:18.595
<v Speaker 1>we've had some hiccups

01:05:18.755 --> 01:05:19.875
<v Speaker 1>because of

01:05:20.115 --> 01:05:20.835
<v Speaker 1>different

01:05:22.640 --> 01:05:24.560
<v Speaker 1>operating systems and different

01:05:25.840 --> 01:05:27.520
<v Speaker 1>versions of things and whatnot.

01:05:29.680 --> 01:05:30.480
<v Speaker 1>You know,

01:05:31.040 --> 01:05:32.320
<v Speaker 1>on the one hand,

01:05:32.640 --> 01:05:34.880
<v Speaker 1>having some sort of diversity in your network

01:05:34.880 --> 01:05:35.840
<v Speaker 1>is useful

01:05:36.080 --> 01:05:37.795
<v Speaker 1>because because you get to see a bunch

01:05:37.795 --> 01:05:38.195
<v Speaker 1>of new

01:05:38.835 --> 01:05:40.435
<v Speaker 1>you get to see things that you wouldn't

01:05:40.435 --> 01:05:41.875
<v Speaker 1>see if they were all the same.

01:05:42.515 --> 01:05:45.075
<v Speaker 1>But there's a certain hassle factor to it.

01:05:46.915 --> 01:05:48.355
<v Speaker 1>And I I don't

01:05:49.100 --> 01:05:51.500
<v Speaker 1>you know, for for production,

01:05:51.500 --> 01:05:54.460
<v Speaker 1>I I've I very much understand

01:05:54.460 --> 01:05:57.580
<v Speaker 1>why someone would have a completely homogenous network

01:05:58.140 --> 01:06:01.420
<v Speaker 1>with as few differences between the nodes as

01:06:01.420 --> 01:06:02.060
<v Speaker 1>possible,

01:06:02.220 --> 01:06:03.820
<v Speaker 1>but this isn't production right now.

01:06:04.955 --> 01:06:06.155
<v Speaker 1>I guess it is.

01:06:08.555 --> 01:06:09.675
<v Speaker 0>Okay.

01:06:11.435 --> 01:06:13.915
<v Speaker 0>I lost my train of thought now. Oh,

01:06:13.915 --> 01:06:17.595
<v Speaker 0>let's let's

01:06:18.250 --> 01:06:20.410
<v Speaker 0>how can I check

01:06:21.370 --> 01:06:23.370
<v Speaker 0>the CPU architecture?

01:06:23.370 --> 01:06:25.370
<v Speaker 0>We wanna see the ARM machine. Right?

01:06:25.930 --> 01:06:26.650
<v Speaker 0>Yeah. The CPU

01:06:28.250 --> 01:06:30.570
<v Speaker 0>One of the arch maybe? CPU

01:06:30.570 --> 01:06:31.610
<v Speaker 1>arch maybe.

01:06:31.850 --> 01:06:32.330
<v Speaker 0>Yeah.

01:06:35.915 --> 01:06:36.875
<v Speaker 1>Cool.

01:06:36.875 --> 01:06:37.675
<v Speaker 1>Hey.

01:06:38.155 --> 01:06:38.795
<v Speaker 1>Working.

01:06:39.275 --> 01:06:40.075
<v Speaker 0>Alright.

01:06:40.075 --> 01:06:42.315
<v Speaker 0>Good. I feel better now. So

01:06:43.835 --> 01:06:47.350
<v Speaker 0>we used the state module to do a

01:06:47.350 --> 01:06:48.550
<v Speaker 0>package installation

01:06:48.550 --> 01:06:49.510
<v Speaker 0>across

01:06:49.990 --> 01:06:53.670
<v Speaker 0>three different operating systems, two different architectures,

01:06:54.870 --> 01:06:57.910
<v Speaker 0>and three different kernels as well. But that's

01:06:57.910 --> 01:07:01.750
<v Speaker 0>that's that's fine. So let's

01:07:01.125 --> 01:07:02.565
<v Speaker 0>take a look at that list. So we

01:07:02.565 --> 01:07:04.725
<v Speaker 0>looked at the power list earlier, but we

01:07:04.725 --> 01:07:08.005
<v Speaker 0>can also just change this to green

01:07:10.725 --> 01:07:11.605
<v Speaker 0>greens.

01:07:14.000 --> 01:07:15.359
<v Speaker 0>And we can take a look at, like,

01:07:15.359 --> 01:07:17.200
<v Speaker 0>there there's also why am I looking at

01:07:17.200 --> 01:07:17.840
<v Speaker 0>grains?

01:07:19.359 --> 01:07:20.080
<v Speaker 0>States.

01:07:20.160 --> 01:07:21.120
<v Speaker 0>There you go.

01:07:21.440 --> 01:07:23.359
<v Speaker 0>Alright. So state modules are the are the

01:07:23.359 --> 01:07:24.720
<v Speaker 0>things that we can do

01:07:26.315 --> 01:07:27.275
<v Speaker 0>with Salt.

01:07:27.435 --> 01:07:29.675
<v Speaker 0>Alright? And and by doing with Salt, I

01:07:29.675 --> 01:07:31.995
<v Speaker 0>mean, like, leverage their abstractions so that we

01:07:31.995 --> 01:07:33.995
<v Speaker 0>don't need to use command dot run for

01:07:33.995 --> 01:07:34.635
<v Speaker 0>everything.

01:07:34.795 --> 01:07:36.475
<v Speaker 0>I mean, don't get me wrong. If you

01:07:36.475 --> 01:07:38.155
<v Speaker 0>if you get Salt running in this fashion

01:07:38.155 --> 01:07:39.515
<v Speaker 0>and you're just using it for ad hoc

01:07:39.515 --> 01:07:41.250
<v Speaker 0>commands, like, salt

01:07:41.250 --> 01:07:44.450
<v Speaker 0>command or run is fantastic. But eventually, you're

01:07:44.450 --> 01:07:45.250
<v Speaker 0>gonna wanna

01:07:45.570 --> 01:07:46.530
<v Speaker 0>codify.

01:07:51.010 --> 01:07:54.210
<v Speaker 0>So state modules, let's see. We can provision

01:07:54.210 --> 01:07:56.845
<v Speaker 0>less encrypt certificates using Salt.

01:07:57.645 --> 01:07:58.765
<v Speaker 0>We can

01:07:59.005 --> 01:08:00.365
<v Speaker 0>configure Apache.

01:08:07.085 --> 01:08:08.605
<v Speaker 0>Find something fun.

01:08:12.670 --> 01:08:14.430
<v Speaker 0>Managing staff assault.

01:08:14.510 --> 01:08:16.109
<v Speaker 0>That sounds scary. Wow.

01:08:16.990 --> 01:08:17.790
<v Speaker 0>Yep.

01:08:18.510 --> 01:08:20.510
<v Speaker 0>We can manage our cron jobs. Let's take

01:08:20.510 --> 01:08:22.989
<v Speaker 0>a look at that. That'll be relatively

01:08:23.149 --> 01:08:23.710
<v Speaker 0>painless.

01:08:24.105 --> 01:08:25.385
<v Speaker 0>I see that now, and I bet you

01:08:25.385 --> 01:08:26.745
<v Speaker 0>I get it. I'll break it.

01:08:30.985 --> 01:08:32.185
<v Speaker 0>Anything jumping at you?

01:08:40.729 --> 01:08:42.969
<v Speaker 1>You wanna look at the file interface?

01:08:45.130 --> 01:08:45.929
<v Speaker 0>Yeah.

01:08:46.330 --> 01:08:48.090
<v Speaker 0>I guess that's probably one of the most

01:08:48.090 --> 01:08:50.810
<v Speaker 0>common configuration management tasks. Right? Is

01:08:51.375 --> 01:08:53.295
<v Speaker 0>I wanna get a fail onto all of

01:08:53.295 --> 01:08:54.574
<v Speaker 0>my machines. So

01:08:56.175 --> 01:08:56.895
<v Speaker 0>alright.

01:08:57.055 --> 01:08:58.734
<v Speaker 0>Let's take a look at the cron. Then

01:08:58.734 --> 01:09:00.654
<v Speaker 0>what I I like about Salt is that

01:09:00.654 --> 01:09:02.975
<v Speaker 0>the examples are particularly good in all of

01:09:02.975 --> 01:09:04.094
<v Speaker 0>their documentation.

01:09:04.095 --> 01:09:04.415
<v Speaker 0>Yeah.

01:09:05.890 --> 01:09:09.090
<v Speaker 0>So this will require us to write our

01:09:09.090 --> 01:09:12.050
<v Speaker 0>first state file as well. Cool.

01:09:13.490 --> 01:09:16.210
<v Speaker 0>So if I come to SRB

01:09:16.770 --> 01:09:17.890
<v Speaker 0>vault

01:09:18.625 --> 01:09:20.465
<v Speaker 0>and we have a directory here.

01:09:20.945 --> 01:09:23.104
<v Speaker 0>I can add a state directory,

01:09:25.585 --> 01:09:28.145
<v Speaker 0>and I can add my

01:09:28.225 --> 01:09:28.864
<v Speaker 0>add

01:09:29.345 --> 01:09:30.305
<v Speaker 0>cron

01:09:30.450 --> 01:09:31.250
<v Speaker 0>state.

01:09:31.729 --> 01:09:33.650
<v Speaker 0>And for doing that, we're just gonna use

01:09:33.650 --> 01:09:35.410
<v Speaker 0>the SLS extension,

01:09:35.729 --> 01:09:37.250
<v Speaker 0>which is like a salt state file extension,

01:09:37.250 --> 01:09:39.330
<v Speaker 0>which uses YAML, which is where all the

01:09:39.330 --> 01:09:40.850
<v Speaker 0>examples come in.

01:09:42.370 --> 01:09:43.890
<v Speaker 0>When we looked at the

01:09:45.865 --> 01:09:47.865
<v Speaker 0>the accessibility of Salt earlier, and there was

01:09:47.865 --> 01:09:49.225
<v Speaker 0>something called an engine,

01:09:49.305 --> 01:09:51.625
<v Speaker 0>and there's also renderers. You can actually write

01:09:51.625 --> 01:09:53.705
<v Speaker 0>your own renderer to take JSON or take

01:09:53.705 --> 01:09:56.665
<v Speaker 0>Markdown or take just Python code or whatever

01:09:56.665 --> 01:09:58.510
<v Speaker 0>and write your Salt space. I'm not sure

01:09:58.510 --> 01:09:59.710
<v Speaker 0>why you're going to do that, but the

01:09:59.710 --> 01:10:01.230
<v Speaker 0>accessibility is pretty cool.

01:10:02.110 --> 01:10:02.670
<v Speaker 0>So

01:10:03.390 --> 01:10:04.990
<v Speaker 0>there are two ways to write the salt

01:10:04.990 --> 01:10:05.949
<v Speaker 0>state as well.

01:10:07.790 --> 01:10:09.390
<v Speaker 0>From the present,

01:10:09.870 --> 01:10:11.390
<v Speaker 0>and I'll kinda cover both.

01:10:21.585 --> 01:10:23.985
<v Speaker 0>Let me just take a minute. Alright.

01:10:24.784 --> 01:10:25.985
<v Speaker 0>So Salt

01:10:26.889 --> 01:10:29.929
<v Speaker 0>allows you to let's see the explicit syntax.

01:10:29.929 --> 01:10:31.130
<v Speaker 0>This is the one I I tend to

01:10:31.130 --> 01:10:32.969
<v Speaker 0>prepare. And that means that we just use

01:10:32.969 --> 01:10:35.849
<v Speaker 0>some sort of arbitrary ID for the state,

01:10:35.849 --> 01:10:37.129
<v Speaker 0>which must be unique.

01:10:37.769 --> 01:10:38.329
<v Speaker 0>We then

01:10:39.025 --> 01:10:41.585
<v Speaker 0>then specify a module. So cron dot present,

01:10:41.585 --> 01:10:43.665
<v Speaker 0>we're using the cron state module and then

01:10:43.665 --> 01:10:45.345
<v Speaker 0>the function present to make sure that the

01:10:45.345 --> 01:10:47.825
<v Speaker 0>cron job exists. There are others. You can

01:10:47.825 --> 01:10:49.185
<v Speaker 0>see this list here.

01:10:50.305 --> 01:10:51.585
<v Speaker 0>I lost it up.

01:10:52.430 --> 01:10:54.270
<v Speaker 0>It's because I'm zoomed in too much.

01:10:55.230 --> 01:10:57.710
<v Speaker 0>We can do absent EMV present, EMV present,

01:10:57.710 --> 01:10:59.790
<v Speaker 0>fail, present so those are each of the

01:10:59.790 --> 01:11:01.469
<v Speaker 0>functions that are available to us.

01:11:01.870 --> 01:11:04.270
<v Speaker 0>The name is then what we actually want

01:11:04.270 --> 01:11:06.430
<v Speaker 0>to execute in a state. So I can

01:11:06.430 --> 01:11:07.310
<v Speaker 0>say date.

01:11:08.735 --> 01:11:10.655
<v Speaker 0>Yeah. We just wanna write the date and

01:11:10.655 --> 01:11:12.335
<v Speaker 0>output it to file, run it as a

01:11:12.335 --> 01:11:15.055
<v Speaker 0>root user, and run it, I guess, means

01:11:15.055 --> 01:11:16.255
<v Speaker 0>every five minutes.

01:11:17.055 --> 01:11:18.815
<v Speaker 0>The same syntax would be to a met

01:11:18.815 --> 01:11:21.054
<v Speaker 0>the name and use that as the ID,

01:11:21.055 --> 01:11:23.775
<v Speaker 0>which is also valid and

01:11:22.820 --> 01:11:24.660
<v Speaker 0>I'm just not a big fan of it.

01:11:25.540 --> 01:11:27.860
<v Speaker 1>So is it every five minutes or on

01:11:27.860 --> 01:11:29.620
<v Speaker 1>the fifth minute of the hour?

01:11:34.420 --> 01:11:35.940
<v Speaker 0>Yeah. That'll be the fifth minute of the

01:11:35.940 --> 01:11:36.180
<v Speaker 0>hour.

01:11:38.115 --> 01:11:40.514
<v Speaker 0>Let's take a look at the function header.

01:11:40.995 --> 01:11:43.315
<v Speaker 0>Minute, hour, day, month, month, day, week.

01:11:45.635 --> 01:11:47.395
<v Speaker 0>Yeah. Yeah. Okay. So that'll be the fifth

01:11:47.395 --> 01:11:48.835
<v Speaker 0>minute. If I wanted to do it every

01:11:48.835 --> 01:11:51.090
<v Speaker 0>five minutes, it would be what's that? I

01:11:51.090 --> 01:11:52.850
<v Speaker 0>can't remember. Star over five?

01:11:54.130 --> 01:11:55.170
<v Speaker 1>I can't remember.

01:11:55.570 --> 01:11:57.090
<v Speaker 1>Is it star over five or is it

01:11:57.090 --> 01:11:58.130
<v Speaker 1>five comma

01:11:58.690 --> 01:12:01.489
<v Speaker 1>zero comma five comma 10 comma whatever?

01:12:03.170 --> 01:12:03.410
<v Speaker 0>Yeah.

01:12:04.105 --> 01:12:06.105
<v Speaker 0>I think star let's try star over five

01:12:06.105 --> 01:12:07.545
<v Speaker 0>and see what happens. And then we'll to

01:12:07.545 --> 01:12:09.065
<v Speaker 0>the yeah. We'll take a look at the

01:12:09.065 --> 01:12:11.064
<v Speaker 0>cron tab and see what what it generates.

01:12:11.145 --> 01:12:12.505
<v Speaker 0>Let's just save that.

01:12:13.304 --> 01:12:13.945
<v Speaker 0>Now

01:12:15.145 --> 01:12:16.905
<v Speaker 0>if we do a salt

01:12:21.170 --> 01:12:21.809
<v Speaker 0>salt

01:12:29.250 --> 01:12:30.130
<v Speaker 0>what am I doing?

01:12:31.125 --> 01:12:32.324
<v Speaker 0>Oh, yeah. Okay.

01:12:33.125 --> 01:12:35.365
<v Speaker 0>Let's take a look at our salt master

01:12:35.365 --> 01:12:36.405
<v Speaker 0>configuration.

01:12:36.405 --> 01:12:38.804
<v Speaker 0>There's something called a fail root

01:12:41.125 --> 01:12:42.085
<v Speaker 0>here.

01:12:42.565 --> 01:12:44.085
<v Speaker 1>Surf salt. Yeah.

01:12:45.250 --> 01:12:47.410
<v Speaker 0>Where we could tell it how to consume

01:12:47.410 --> 01:12:48.050
<v Speaker 0>our

01:12:48.290 --> 01:12:49.170
<v Speaker 0>dates.

01:12:51.170 --> 01:12:53.170
<v Speaker 0>Yeah. It's Surf Salt. So let's move that

01:12:53.170 --> 01:12:54.210
<v Speaker 0>file. I don't think it

01:12:54.930 --> 01:12:56.530
<v Speaker 0>I guess it doesn't need the states.

01:12:59.105 --> 01:13:00.705
<v Speaker 0>Can't remember the last time I provisioned just

01:13:00.705 --> 01:13:01.585
<v Speaker 0>by hand.

01:13:04.225 --> 01:13:05.745
<v Speaker 0>Let's remove states.

01:13:06.945 --> 01:13:08.145
<v Speaker 0>And now we just got this in the

01:13:08.145 --> 01:13:09.025
<v Speaker 0>top level.

01:13:10.865 --> 01:13:12.880
<v Speaker 0>And let's just try and see what happens.

01:13:12.880 --> 01:13:14.800
<v Speaker 0>So that says run on

01:13:16.159 --> 01:13:19.119
<v Speaker 0>all machines state dot SLS, which is just

01:13:19.119 --> 01:13:19.760
<v Speaker 0>like

01:13:20.559 --> 01:13:21.920
<v Speaker 0>how I can tell Salt to run a

01:13:21.920 --> 01:13:23.119
<v Speaker 0>one off state

01:13:23.199 --> 01:13:23.840
<v Speaker 0>for this.

01:13:25.575 --> 01:13:27.095
<v Speaker 0>And we can tell it to run ad

01:13:27.095 --> 01:13:27.735
<v Speaker 0>cron.

01:13:29.735 --> 01:13:31.255
<v Speaker 0>Alright. And it did pick it up, but

01:13:31.255 --> 01:13:33.415
<v Speaker 0>it doesn't doesn't link my syntax.

01:13:35.335 --> 01:13:37.335
<v Speaker 0>And it may just be the may just

01:13:37.335 --> 01:13:38.295
<v Speaker 0>be a YAML thing.

01:13:39.310 --> 01:13:41.230
<v Speaker 0>There we go. There we go.

01:13:41.550 --> 01:13:43.390
<v Speaker 0>So now both of these

01:13:43.630 --> 01:13:45.790
<v Speaker 0>all three of these servers have some sort

01:13:45.790 --> 01:13:47.950
<v Speaker 0>of cron configured on it. So let's just

01:13:47.950 --> 01:13:48.830
<v Speaker 0>pick one.

01:13:49.150 --> 01:13:50.830
<v Speaker 0>We'll take a look on the CentOS machine.

01:13:53.325 --> 01:13:55.725
<v Speaker 0>And if I run Chrome tab, it's the

01:13:55.405 --> 01:13:56.925
<v Speaker 0>we've

01:13:56.925 --> 01:13:58.445
<v Speaker 0>got our star over five.

01:13:58.925 --> 01:14:01.245
<v Speaker 0>So every five minutes, it's gonna execute date

01:14:01.245 --> 01:14:02.365
<v Speaker 0>and write it to a file.

01:14:03.900 --> 01:14:06.060
<v Speaker 0>Easy. Right? Easy.

01:14:06.380 --> 01:14:07.500
<v Speaker 1>Okay.

01:14:10.940 --> 01:14:12.460
<v Speaker 0>What should we do next? You want me

01:14:12.460 --> 01:14:13.820
<v Speaker 0>to do a file. Right?

01:14:15.580 --> 01:14:17.580
<v Speaker 1>Yeah. Let's do a let's look at the

01:14:17.580 --> 01:14:17.980
<v Speaker 1>files.

01:14:26.034 --> 01:14:26.755
<v Speaker 1>No. For,

01:14:34.429 --> 01:14:34.989
<v Speaker 1>I mean

01:14:36.830 --> 01:14:39.469
<v Speaker 0>Let's ensure our directory exists first, and then

01:14:39.469 --> 01:14:42.030
<v Speaker 0>we'll maybe dump a file inside of it.

01:14:42.030 --> 01:14:42.590
<v Speaker 0>So

01:14:43.230 --> 01:14:45.230
<v Speaker 0>copy on our example. We'll modify it to

01:14:45.230 --> 01:14:45.949
<v Speaker 0>certain needs.

01:14:48.715 --> 01:14:49.915
<v Speaker 0>So we'll call this

01:14:51.435 --> 01:14:53.835
<v Speaker 0>let's create a let's just build on this

01:14:53.835 --> 01:14:57.435
<v Speaker 0>really contract cron example. Right? So Sure. Let's

01:14:57.435 --> 01:14:59.275
<v Speaker 0>do cron test output there.

01:15:00.715 --> 01:15:03.420
<v Speaker 0>We're gonna create a new directory for this

01:15:03.420 --> 01:15:05.980
<v Speaker 0>output instead of putting it under test.

01:15:07.660 --> 01:15:09.340
<v Speaker 0>And we need to add a name because

01:15:09.340 --> 01:15:10.619
<v Speaker 0>I don't like it being

01:15:11.020 --> 01:15:13.579
<v Speaker 0>taught. And we'll call this temp

01:15:15.180 --> 01:15:15.900
<v Speaker 0>live

01:15:16.460 --> 01:15:17.660
<v Speaker 0>stream

01:15:17.955 --> 01:15:19.155
<v Speaker 0>Chrome test.

01:15:20.515 --> 01:15:21.235
<v Speaker 1>Okay.

01:15:23.475 --> 01:15:26.995
<v Speaker 0>We'll configure this to write to that directory.

01:15:29.795 --> 01:15:30.675
<v Speaker 0>And we'll see it.

01:15:31.650 --> 01:15:32.930
<v Speaker 1>No. You you

01:15:34.290 --> 01:15:36.210
<v Speaker 1>let's look at that file again. You're writing

01:15:36.210 --> 01:15:36.929
<v Speaker 1>to

01:15:38.130 --> 01:15:40.849
<v Speaker 1>a file in the top one,

01:15:41.730 --> 01:15:43.570
<v Speaker 1>and is that a directory in the second

01:15:43.570 --> 01:15:45.010
<v Speaker 1>one? Yeah. There we go.

01:15:45.765 --> 01:15:46.724
<v Speaker 0>Good catch.

01:15:48.085 --> 01:15:49.364
<v Speaker 0>And then we can read from fresh in

01:15:49.364 --> 01:15:50.804
<v Speaker 0>all of our machines

01:15:52.005 --> 01:15:55.045
<v Speaker 0>except for one failed, which is, I guess,

01:15:55.844 --> 01:15:56.324
<v Speaker 0>good. And

01:15:59.090 --> 01:16:00.290
<v Speaker 0>what failed?

01:16:00.370 --> 01:16:02.370
<v Speaker 1>You do if you have make term minus

01:16:05.490 --> 01:16:08.210
<v Speaker 1>It didn't like to create the directory because

01:16:08.210 --> 01:16:10.450
<v Speaker 1>the subdirectory didn't exist.

01:16:15.345 --> 01:16:16.865
<v Speaker 0>Oh, no. It failed in the mall. Yeah.

01:16:16.865 --> 01:16:19.265
<v Speaker 0>You're right. And it's because of the subdirectory.

01:16:19.265 --> 01:16:20.145
<v Speaker 0>That's

01:16:20.705 --> 01:16:22.945
<v Speaker 0>my fault. Salt has a flag for that.

01:16:25.150 --> 01:16:25.869
<v Speaker 0>Make

01:16:25.950 --> 01:16:27.469
<v Speaker 0>there's I

01:16:28.510 --> 01:16:29.550
<v Speaker 0>think yeah.

01:16:30.350 --> 01:16:31.310
<v Speaker 0>Try again.

01:16:32.190 --> 01:16:33.869
<v Speaker 0>Nope. Let's confirm.

01:16:34.670 --> 01:16:37.470
<v Speaker 0>I think it would there's

01:16:48.344 --> 01:16:49.784
<v Speaker 0>there we go. Nature's.

01:16:51.304 --> 01:16:52.265
<v Speaker 0>That was close.

01:16:55.210 --> 01:16:58.090
<v Speaker 0>Run that again. Ta da. Ta da. Ta

01:16:59.850 --> 01:17:01.289
<v Speaker 0>can run temp

01:17:01.530 --> 01:17:02.570
<v Speaker 0>livestream

01:17:02.810 --> 01:17:03.849
<v Speaker 0>contest,

01:17:04.010 --> 01:17:06.489
<v Speaker 0>and it's not run yet. But it runs.

01:17:08.494 --> 01:17:09.294
<v Speaker 0>Hello?

01:17:10.255 --> 01:17:11.614
<v Speaker 0>Because we're doing a

01:17:11.935 --> 01:17:12.814
<v Speaker 0>present,

01:17:12.895 --> 01:17:14.655
<v Speaker 0>now it has created this twice.

01:17:15.215 --> 01:17:16.974
<v Speaker 0>And that's just because we changed the the

01:17:16.974 --> 01:17:17.534
<v Speaker 0>name.

01:17:18.735 --> 01:17:20.750
<v Speaker 1>Oh, sure. Reason.

01:17:20.830 --> 01:17:22.750
<v Speaker 0>So I I didn't realize that we got

01:17:22.750 --> 01:17:24.990
<v Speaker 0>rid of one another one. So let if

01:17:24.990 --> 01:17:26.830
<v Speaker 0>we just run that again, we shouldn't end

01:17:26.830 --> 01:17:28.510
<v Speaker 0>up with three. Shouldn't.

01:17:29.230 --> 01:17:29.950
<v Speaker 0>Yeah. Good.

01:17:32.655 --> 01:17:34.735
<v Speaker 0>Okay. What do we wanna do next? So

01:17:34.735 --> 01:17:36.175
<v Speaker 0>we created a directory.

01:17:38.014 --> 01:17:38.894
<v Speaker 0>Let's

01:17:39.054 --> 01:17:40.974
<v Speaker 0>hop over here, and we can do a

01:17:40.974 --> 01:17:41.854
<v Speaker 0>fail.

01:17:45.054 --> 01:17:47.534
<v Speaker 0>It's this no. No. Manage. Place to managed.

01:17:50.429 --> 01:17:52.909
<v Speaker 0>There's so many different functions and modules.

01:17:55.150 --> 01:17:55.869
<v Speaker 0>Okay.

01:17:56.110 --> 01:17:56.749
<v Speaker 0>So

01:17:57.789 --> 01:17:59.630
<v Speaker 0>let's I'm trying to break this down.

01:18:01.585 --> 01:18:04.385
<v Speaker 0>So we'll give it a explicit name.

01:18:04.785 --> 01:18:06.465
<v Speaker 0>We'll call this our

01:18:07.105 --> 01:18:08.545
<v Speaker 0>fake file.

01:18:10.865 --> 01:18:12.465
<v Speaker 0>We give it a name.

01:18:13.265 --> 01:18:14.705
<v Speaker 0>So temp

01:18:14.865 --> 01:18:15.665
<v Speaker 0>livestream

01:18:16.330 --> 01:18:17.290
<v Speaker 0>contest

01:18:17.290 --> 01:18:18.170
<v Speaker 0>pick,

01:18:18.730 --> 01:18:20.250
<v Speaker 0>and then we can provide some sort of

01:18:20.250 --> 01:18:22.170
<v Speaker 0>source. Now the way that the failed up

01:18:22.170 --> 01:18:24.570
<v Speaker 0>managed works is you can specify multiple sources,

01:18:24.570 --> 01:18:25.930
<v Speaker 0>then it'll stop on the first one that

01:18:25.930 --> 01:18:26.650
<v Speaker 0>exists.

01:18:27.370 --> 01:18:28.170
<v Speaker 0>Neither

01:18:29.050 --> 01:18:30.810
<v Speaker 0>of these exist

01:18:31.050 --> 01:18:31.530
<v Speaker 0>though.

01:18:32.845 --> 01:18:33.965
<v Speaker 1>So it should fail.

01:18:34.445 --> 01:18:36.605
<v Speaker 0>Well, unless we add one that works. Yeah.

01:18:36.605 --> 01:18:37.165
<v Speaker 0>Do

01:18:37.405 --> 01:18:39.485
<v Speaker 0>shall we see it fail first? Let's see

01:18:39.485 --> 01:18:41.085
<v Speaker 1>it fail first, sir. Alright.

01:18:43.565 --> 01:18:46.685
<v Speaker 0>Fail. Fail and fail. Nothing found.

01:18:47.390 --> 01:18:48.110
<v Speaker 0>Yep.

01:18:48.830 --> 01:18:50.190
<v Speaker 0>And because we don't have a source that

01:18:50.190 --> 01:18:52.670
<v Speaker 0>works, so let's come out here. Now we

01:18:52.670 --> 01:18:54.429
<v Speaker 0>can do salt,

01:18:55.870 --> 01:18:58.270
<v Speaker 0>SLS path, which is my favorite little thing,

01:18:58.270 --> 01:18:59.950
<v Speaker 0>and we'll call this fake.

01:19:00.575 --> 01:19:02.015
<v Speaker 0>Now this doesn't exist

01:19:02.175 --> 01:19:03.055
<v Speaker 0>still.

01:19:04.015 --> 01:19:05.215
<v Speaker 0>So, you know, if we run it, we're

01:19:05.215 --> 01:19:06.655
<v Speaker 0>gonna see a state of red again.

01:19:07.695 --> 01:19:09.855
<v Speaker 0>But that SLS path means that it's gonna

01:19:09.855 --> 01:19:12.015
<v Speaker 0>use the path from where this state file

01:19:12.015 --> 01:19:12.415
<v Speaker 0>is.

01:19:13.600 --> 01:19:14.320
<v Speaker 0>So, like,

01:19:15.120 --> 01:19:17.680
<v Speaker 0>I create fake and watch. I normally wouldn't

01:19:17.680 --> 01:19:18.559
<v Speaker 0>do it normally.

01:19:19.440 --> 01:19:22.320
<v Speaker 0>Let's clean this up. I feel like I'm

01:19:22.640 --> 01:19:24.560
<v Speaker 0>being quite messy right now. So let's say

01:19:24.560 --> 01:19:25.599
<v Speaker 0>we have our

01:19:25.920 --> 01:19:27.040
<v Speaker 0>livestream state,

01:19:28.804 --> 01:19:30.965
<v Speaker 0>And inside of that, we've got

01:19:31.925 --> 01:19:33.445
<v Speaker 0>our edit.sls,

01:19:33.445 --> 01:19:35.204
<v Speaker 0>which is a convenience helper.

01:19:35.844 --> 01:19:37.445
<v Speaker 0>Come into our livestream.

01:19:37.445 --> 01:19:39.364
<v Speaker 0>Let's use our setup, and we'll have our

01:19:39.925 --> 01:19:42.005
<v Speaker 0>normally, I have, like, a fails directory, and

01:19:42.005 --> 01:19:44.449
<v Speaker 0>then inside the fails, I'll have pick.

01:19:44.690 --> 01:19:45.409
<v Speaker 0>Hi.

01:19:46.530 --> 01:19:48.289
<v Speaker 0>I am a pick

01:19:48.290 --> 01:19:49.010
<v Speaker 0>fail.

01:19:51.090 --> 01:19:52.289
<v Speaker 0>Okay.

01:19:53.090 --> 01:19:55.010
<v Speaker 0>So we made a few changes there.

01:19:57.010 --> 01:19:59.570
<v Speaker 0>What we want to do now

01:19:59.195 --> 01:20:00.635
<v Speaker 0>is modify

01:20:00.795 --> 01:20:01.915
<v Speaker 0>this path

01:20:03.195 --> 01:20:04.555
<v Speaker 0>to be failed

01:20:05.035 --> 01:20:05.755
<v Speaker 0>pick.

01:20:07.755 --> 01:20:08.395
<v Speaker 0>And

01:20:09.595 --> 01:20:10.315
<v Speaker 0>my

01:20:11.675 --> 01:20:12.795
<v Speaker 0>command

01:20:12.955 --> 01:20:13.355
<v Speaker 0>there.

01:20:14.940 --> 01:20:17.580
<v Speaker 0>It's now livestreamed.

01:20:17.660 --> 01:20:19.340
<v Speaker 0>And we don't need to put

01:20:19.580 --> 01:20:21.580
<v Speaker 0>and I'll talk about how we

01:20:22.220 --> 01:20:24.380
<v Speaker 0>address our name states in just a second,

01:20:24.380 --> 01:20:25.500
<v Speaker 0>but I should be able to run this

01:20:25.500 --> 01:20:26.860
<v Speaker 0>as is, and it works.

01:20:27.745 --> 01:20:30.145
<v Speaker 0>Yep. And we we can confirm this here

01:20:30.145 --> 01:20:32.065
<v Speaker 0>with temp livestream

01:20:34.385 --> 01:20:35.265
<v Speaker 0>catfake.

01:20:35.505 --> 01:20:36.065
<v Speaker 0>So

01:20:36.465 --> 01:20:37.745
<v Speaker 0>really, really powerful.

01:20:37.825 --> 01:20:40.545
<v Speaker 0>We also have the ability to interpolate, but

01:20:40.545 --> 01:20:42.705
<v Speaker 0>let's let's cover the naming

01:20:43.000 --> 01:20:43.800
<v Speaker 0>first.

01:20:44.520 --> 01:20:46.520
<v Speaker 0>It's one of my favorite things about Salt.

01:20:46.520 --> 01:20:49.079
<v Speaker 0>I actually use Salt for my dot files.

01:20:51.719 --> 01:20:53.480
<v Speaker 1>I was gonna say keeping track of home

01:20:53.480 --> 01:20:54.440
<v Speaker 1>directories and whatnot.

01:20:54.965 --> 01:20:56.244
<v Speaker 0>Yeah. So

01:20:57.045 --> 01:20:58.885
<v Speaker 0>and the reason I do that is because

01:20:58.885 --> 01:21:00.164
<v Speaker 0>it means I can run individual

01:21:00.965 --> 01:21:03.605
<v Speaker 0>parts of my state really, really easily. So

01:21:03.605 --> 01:21:05.284
<v Speaker 0>if we take this as an example, we've

01:21:05.284 --> 01:21:07.284
<v Speaker 0>got a livestream state that runs in it

01:21:07.284 --> 01:21:09.364
<v Speaker 0>dot SLS when it's not when it's not

01:21:09.364 --> 01:21:11.880
<v Speaker 0>totally authorized. I can also add a one

01:21:11.880 --> 01:21:14.040
<v Speaker 0>off command dot SLS,

01:21:14.360 --> 01:21:15.640
<v Speaker 0>which could just do

01:21:17.960 --> 01:21:18.760
<v Speaker 0>cron

01:21:19.080 --> 01:21:20.440
<v Speaker 0>test one

01:21:20.600 --> 01:21:21.080
<v Speaker 0>off,

01:21:22.705 --> 01:21:24.945
<v Speaker 0>This is gonna do a command dot run.

01:21:26.465 --> 01:21:27.985
<v Speaker 0>We'll have it run who.

01:21:30.785 --> 01:21:33.664
<v Speaker 0>If I run our livestream state again,

01:21:33.905 --> 01:21:34.705
<v Speaker 0>there's no who.

01:21:36.560 --> 01:21:37.280
<v Speaker 0>However,

01:21:37.840 --> 01:21:40.400
<v Speaker 0>I can add oh, what do they call

01:21:40.400 --> 01:21:40.880
<v Speaker 0>it?

01:21:42.880 --> 01:21:45.040
<v Speaker 0>One off. I can add

01:21:45.600 --> 01:21:48.080
<v Speaker 0>one off like so, and it runs who

01:21:48.080 --> 01:21:48.960
<v Speaker 0>and all of the machine.

01:21:51.035 --> 01:21:53.275
<v Speaker 0>Now we have a full

01:21:53.755 --> 01:21:54.795
<v Speaker 0>array

01:21:54.795 --> 01:21:56.795
<v Speaker 0>of requisites and

01:21:57.195 --> 01:22:00.155
<v Speaker 0>includes helpers that we could use within Salt.

01:22:00.395 --> 01:22:02.475
<v Speaker 0>So, you know, I can do

01:22:03.170 --> 01:22:03.969
<v Speaker 0>includes

01:22:07.170 --> 01:22:08.130
<v Speaker 0>one off.

01:22:08.610 --> 01:22:10.370
<v Speaker 0>You need a dot to indicate it's the

01:22:10.370 --> 01:22:11.489
<v Speaker 0>local directory.

01:22:11.490 --> 01:22:13.170
<v Speaker 0>Otherwise, I would have to do

01:22:13.650 --> 01:22:14.530
<v Speaker 0>livestream

01:22:14.530 --> 01:22:15.330
<v Speaker 0>dot one off.

01:22:16.455 --> 01:22:18.454
<v Speaker 0>Let me get the eclipse one off.

01:22:20.455 --> 01:22:22.534
<v Speaker 0>And if I run

01:22:22.855 --> 01:22:24.054
<v Speaker 0>without that

01:22:25.255 --> 01:22:26.614
<v Speaker 0>oh, what did I get wrong?

01:22:32.830 --> 01:22:35.150
<v Speaker 0>It doesn't compare oh, hold on.

01:22:36.990 --> 01:22:38.270
<v Speaker 0>Not a dictionary.

01:22:38.350 --> 01:22:38.990
<v Speaker 0>Not a dictionary.

01:22:48.815 --> 01:22:50.895
<v Speaker 0>I see that the documentation is handy.

01:22:52.495 --> 01:22:53.775
<v Speaker 1>It is good documentation.

01:22:57.410 --> 01:22:58.530
<v Speaker 0>It's include.

01:23:00.450 --> 01:23:01.330
<v Speaker 1>Of course.

01:23:04.690 --> 01:23:06.770
<v Speaker 0>And we now have, you know, this this

01:23:06.770 --> 01:23:08.530
<v Speaker 0>went up from three to four, but we

01:23:08.530 --> 01:23:10.530
<v Speaker 0>can see that it's it's now including

01:23:10.745 --> 01:23:12.505
<v Speaker 0>this who output as part of the state

01:23:12.505 --> 01:23:15.705
<v Speaker 0>run. And I can still individually run that

01:23:15.705 --> 01:23:17.305
<v Speaker 0>one off as well. Like, I don't need

01:23:17.305 --> 01:23:18.665
<v Speaker 0>to run the whole thing, and I think

01:23:18.665 --> 01:23:20.425
<v Speaker 0>that's just something I mean, I'm a big

01:23:20.425 --> 01:23:21.385
<v Speaker 0>fan of Ansible,

01:23:21.625 --> 01:23:23.625
<v Speaker 0>but it just doesn't have that level of

01:23:23.970 --> 01:23:25.490
<v Speaker 0>I can choose what I wanna be able

01:23:25.490 --> 01:23:27.890
<v Speaker 0>to do at top, which I really like.

01:23:28.850 --> 01:23:31.730
<v Speaker 0>There's also prerequisites that require some text.

01:23:32.370 --> 01:23:34.850
<v Speaker 0>So let's say prerequisites.

01:23:34.850 --> 01:23:37.410
<v Speaker 0>Here, you can see that it has dependencies.

01:23:37.410 --> 01:23:39.250
<v Speaker 0>And if we take a look at our

01:23:39.735 --> 01:23:41.655
<v Speaker 0>our edit state, you know, we

01:23:42.695 --> 01:23:44.614
<v Speaker 0>what happens with SaltStack here is it will

01:23:44.614 --> 01:23:46.215
<v Speaker 0>run this file from top to bottom and

01:23:46.215 --> 01:23:46.854
<v Speaker 0>order,

01:23:47.255 --> 01:23:49.255
<v Speaker 0>but you can also be very explicit about

01:23:49.255 --> 01:23:50.454
<v Speaker 0>the prerequisites

01:23:50.455 --> 01:23:51.335
<v Speaker 0>or requisites.

01:23:52.010 --> 01:23:54.090
<v Speaker 0>Mhmm. So we can say we actually require

01:23:54.090 --> 01:23:55.449
<v Speaker 0>the step to run

01:23:55.690 --> 01:23:56.489
<v Speaker 0>first.

01:23:56.730 --> 01:23:58.810
<v Speaker 0>Or, you know, the other options we've got

01:23:58.810 --> 01:23:59.449
<v Speaker 0>are

01:24:00.410 --> 01:24:01.849
<v Speaker 0>if something changes

01:24:02.090 --> 01:24:04.010
<v Speaker 0>or if a file changes, then I want

01:24:04.010 --> 01:24:05.769
<v Speaker 0>to ensure that the state runs again.

01:24:05.930 --> 01:24:08.245
<v Speaker 0>We can watch files. Like, there's a whole

01:24:08.245 --> 01:24:10.405
<v Speaker 0>bunch of stuff here that's really, really cool

01:24:10.405 --> 01:24:11.925
<v Speaker 0>that allows you to tie all your states

01:24:11.925 --> 01:24:12.565
<v Speaker 0>together.

01:24:17.045 --> 01:24:19.685
<v Speaker 0>I can now show one more thing, and

01:24:19.685 --> 01:24:22.085
<v Speaker 0>then we'll kinda have a chat and see

01:24:22.050 --> 01:24:23.570
<v Speaker 0>if you got any ideas.

01:24:24.449 --> 01:24:25.169
<v Speaker 0>So

01:24:25.570 --> 01:24:27.010
<v Speaker 0>inside fails,

01:24:27.650 --> 01:24:29.329
<v Speaker 0>I can open fake, and I can then

01:24:29.329 --> 01:24:31.090
<v Speaker 0>use this gender syntax,

01:24:31.809 --> 01:24:34.209
<v Speaker 0>or I can reference the group the grains

01:24:35.730 --> 01:24:36.449
<v Speaker 0>like so.

01:24:37.655 --> 01:24:38.615
<v Speaker 0>And

01:24:40.535 --> 01:24:41.735
<v Speaker 0>let's run.

01:24:45.095 --> 01:24:46.215
<v Speaker 0>That's okay.

01:24:52.450 --> 01:24:55.170
<v Speaker 0>can't Yeah. Didn't

01:24:54.375 --> 01:24:55.095
<v Speaker 0>And

01:24:56.050 --> 01:24:57.330
<v Speaker 0>didn't interpolate.

01:24:58.290 --> 01:24:59.570
<v Speaker 0>Yep.

01:25:00.370 --> 01:25:01.090
<v Speaker 0>Let

01:25:01.890 --> 01:25:03.810
<v Speaker 0>me see if I can remember why. Oh,

01:25:03.810 --> 01:25:04.850
<v Speaker 0>yeah. So

01:25:05.765 --> 01:25:07.205
<v Speaker 0>this is why I should do ad hoc

01:25:07.205 --> 01:25:09.205
<v Speaker 0>stuff. We need to tell it

01:25:10.165 --> 01:25:11.765
<v Speaker 0>I think it is

01:25:13.605 --> 01:25:14.485
<v Speaker 0>engine.

01:25:14.485 --> 01:25:15.765
<v Speaker 0>Let's confirm

01:25:15.765 --> 01:25:16.565
<v Speaker 0>that.

01:25:17.205 --> 01:25:18.725
<v Speaker 0>Failed or managed.

01:25:25.000 --> 01:25:27.959
<v Speaker 0>It's template, Ginger. There we go. Not engine.

01:25:28.280 --> 01:25:29.639
<v Speaker 0>We just tell her that we want to

01:25:29.639 --> 01:25:30.679
<v Speaker 0>template it.

01:25:31.480 --> 01:25:34.040
<v Speaker 1>And it's Ginger it's just Ginger. It's not

01:25:34.040 --> 01:25:34.440
<v Speaker 0>Ginger

01:25:36.015 --> 01:25:37.454
<v Speaker 0>It's not ginger two.

01:25:38.094 --> 01:25:39.054
<v Speaker 0>Thank you.

01:25:42.015 --> 01:25:44.255
<v Speaker 0>That's better. And you can see it it

01:25:44.255 --> 01:25:45.935
<v Speaker 0>actually shows you the change that I made.

01:25:45.935 --> 01:25:48.894
<v Speaker 0>So it removed the green's line Yeah. And

01:25:49.054 --> 01:25:51.370
<v Speaker 0>added our Linux line. And then I can't

01:25:51.530 --> 01:25:52.090
<v Speaker 0>Nice.

01:25:52.410 --> 01:25:53.050
<v Speaker 0>Good.

01:25:54.410 --> 01:25:56.730
<v Speaker 0>Cool. We're getting there. That's cool.

01:25:57.610 --> 01:26:00.810
<v Speaker 1>So you could see how this would be

01:26:00.810 --> 01:26:01.770
<v Speaker 1>useful

01:26:01.770 --> 01:26:02.490
<v Speaker 1>for

01:26:04.925 --> 01:26:07.005
<v Speaker 1>so one of the things that

01:26:09.245 --> 01:26:13.244
<v Speaker 1>that you can leverage the packet metadata for

01:26:13.645 --> 01:26:14.364
<v Speaker 1>is

01:26:14.765 --> 01:26:15.405
<v Speaker 1>inserting

01:26:16.300 --> 01:26:18.460
<v Speaker 1>SSH keys into,

01:26:19.500 --> 01:26:20.860
<v Speaker 1>home directories

01:26:23.020 --> 01:26:25.580
<v Speaker 1>because the packet metadata includes

01:26:27.580 --> 01:26:28.540
<v Speaker 1>SSH

01:26:28.540 --> 01:26:29.740
<v Speaker 1>public keys

01:26:30.355 --> 01:26:32.594
<v Speaker 1>for everyone who has access to things.

01:26:33.235 --> 01:26:34.834
<v Speaker 1>So you can imagine

01:26:35.715 --> 01:26:38.034
<v Speaker 1>provisioning a home directory for someone,

01:26:38.835 --> 01:26:39.314
<v Speaker 1>based

01:26:40.034 --> 01:26:41.554
<v Speaker 1>on just their

01:26:42.994 --> 01:26:45.315
<v Speaker 1>key information that you can pull from metadata.

01:26:46.690 --> 01:26:49.489
<v Speaker 0>Oh, really? I didn't know that. Okay. So

01:26:50.130 --> 01:26:52.050
<v Speaker 0>should we try and provision all of our

01:26:52.050 --> 01:26:53.249
<v Speaker 0>machines with

01:26:53.570 --> 01:26:55.329
<v Speaker 0>your SSH key?

01:26:56.929 --> 01:26:58.290
<v Speaker 1>Well, let's see if it's there.

01:27:00.625 --> 01:27:02.304
<v Speaker 0>So if I do Carl,

01:27:02.304 --> 01:27:06.385
<v Speaker 0>is that metadata.packet.net/

01:27:06.864 --> 01:27:08.945
<v Speaker 0>is that right? I think so.

01:27:09.985 --> 01:27:13.104
<v Speaker 0>Okay. So let's pipe us through j q.

01:27:13.505 --> 01:27:13.905
<v Speaker 1>Yep.

01:27:15.740 --> 01:27:17.739
<v Speaker 1>Let Salt install j q.

01:27:21.340 --> 01:27:22.940
<v Speaker 0>Package

01:27:22.940 --> 01:27:23.980
<v Speaker 0>install.

01:27:24.780 --> 01:27:26.460
<v Speaker 0>We'll do it on all of our machines.

01:27:26.540 --> 01:27:28.060
<v Speaker 1>Sure. Bring them all up.

01:27:32.205 --> 01:27:32.925
<v Speaker 0>Okay.

01:27:34.365 --> 01:27:35.085
<v Speaker 0>No.

01:27:35.405 --> 01:27:36.125
<v Speaker 0>Good.

01:27:36.445 --> 01:27:38.364
<v Speaker 0>But we pull up a curl,

01:27:39.485 --> 01:27:41.005
<v Speaker 0>type it to Jake here,

01:27:41.805 --> 01:27:43.885
<v Speaker 0>and let's just see if we can narrow

01:27:43.885 --> 01:27:46.090
<v Speaker 0>this down a little bit. So and then

01:27:46.090 --> 01:27:47.369
<v Speaker 0>we'll re pipe it.

01:27:47.850 --> 01:27:49.929
<v Speaker 0>That's a lot of keys there. So

01:27:50.650 --> 01:27:51.930
<v Speaker 1>Yeah. It's a lot of keys because you're

01:27:51.930 --> 01:27:54.090
<v Speaker 1>on a you're on a shared project. I

01:27:54.090 --> 01:27:57.290
<v Speaker 0>am on a shared project. Okay. SSH keys.

01:27:57.290 --> 01:27:57.849
<v Speaker 0>So

01:27:58.170 --> 01:27:59.610
<v Speaker 0>dot SSH

01:28:00.175 --> 01:28:00.974
<v Speaker 0>There

01:28:01.295 --> 01:28:02.014
<v Speaker 0>we go.

01:28:02.574 --> 01:28:04.255
<v Speaker 0>Now we've only got the keys.

01:28:05.135 --> 01:28:07.614
<v Speaker 0>It doesn't look like there is a way

01:28:07.614 --> 01:28:09.374
<v Speaker 0>to pull out individuals.

01:28:10.415 --> 01:28:12.175
<v Speaker 1>No. It does not. Oh, we could provision

01:28:12.175 --> 01:28:14.735
<v Speaker 0>them all. Right? We could provision them all.

01:28:15.030 --> 01:28:16.629
<v Speaker 0>We can just trust everybody.

01:28:16.949 --> 01:28:18.229
<v Speaker 1>Sure.

01:28:20.869 --> 01:28:23.030
<v Speaker 0>Okay. So what do we need to do

01:28:23.030 --> 01:28:23.829
<v Speaker 0>first?

01:28:25.909 --> 01:28:27.829
<v Speaker 1>We need to make someone a home directory.

01:28:30.405 --> 01:28:32.885
<v Speaker 0>Okay. First time to let's just I'm gonna

01:28:32.885 --> 01:28:35.205
<v Speaker 0>add these SSH keys to our grains

01:28:35.205 --> 01:28:36.405
<v Speaker 0>first. Oh, sure.

01:28:37.765 --> 01:28:39.765
<v Speaker 0>And, yes, you're right. Let's create a let's

01:28:39.765 --> 01:28:40.725
<v Speaker 0>create a home directory.

01:28:43.010 --> 01:28:44.770
<v Speaker 0>Let me spell things correctly.

01:28:48.370 --> 01:28:51.090
<v Speaker 0>Okay. So let's refresh.

01:28:51.970 --> 01:28:53.890
<v Speaker 0>Oh, the front of refresh command.

01:28:54.290 --> 01:28:55.410
<v Speaker 0>Salt, util,

01:28:56.130 --> 01:28:56.850
<v Speaker 0>thank all.

01:29:00.074 --> 01:29:00.715
<v Speaker 0>So

01:29:00.875 --> 01:29:03.034
<v Speaker 0>let's just run it on master

01:29:03.114 --> 01:29:04.074
<v Speaker 0>star

01:29:04.074 --> 01:29:05.114
<v Speaker 0>and

01:29:08.315 --> 01:29:09.354
<v Speaker 0>accurate

01:29:09.514 --> 01:29:10.394
<v Speaker 0>metadata

01:29:10.395 --> 01:29:11.195
<v Speaker 0>SSH.

01:29:11.560 --> 01:29:12.440
<v Speaker 0>Oh,

01:29:13.000 --> 01:29:15.479
<v Speaker 0>we now have that available as green data.

01:29:18.120 --> 01:29:19.079
<v Speaker 0>So

01:29:19.400 --> 01:29:21.880
<v Speaker 0>you want to provision a new user,

01:29:23.320 --> 01:29:25.080
<v Speaker 0>and we'll create a new we'll use our

01:29:25.080 --> 01:29:27.304
<v Speaker 0>livestream state, but we'll use a substate. So

01:29:27.304 --> 01:29:29.064
<v Speaker 0>let's call this user

01:29:30.025 --> 01:29:30.664
<v Speaker 0>Matt.

01:29:32.105 --> 01:29:33.784
<v Speaker 0>So what would you like to call this

01:29:33.784 --> 01:29:34.264
<v Speaker 0>new user?

01:29:44.489 --> 01:29:45.530
<v Speaker 1>Should match

01:29:46.650 --> 01:29:49.050
<v Speaker 1>yeah. Should call it ad. Yeah. We got

01:29:50.489 --> 01:29:51.289
<v Speaker 0>no.

01:29:51.290 --> 01:29:52.570
<v Speaker 0>I think

01:29:53.050 --> 01:29:55.209
<v Speaker 0>there is a user a

01:29:56.810 --> 01:29:57.690
<v Speaker 0>present

01:29:59.235 --> 01:30:00.275
<v Speaker 0>module.

01:30:02.675 --> 01:30:03.395
<v Speaker 0>Name

01:30:03.635 --> 01:30:05.635
<v Speaker 0>let's just confirm that. So we go back

01:30:05.635 --> 01:30:07.235
<v Speaker 0>to our state module list

01:30:07.955 --> 01:30:08.595
<v Speaker 0>user.

01:30:14.500 --> 01:30:16.420
<v Speaker 0>Move down a bit. User.

01:30:22.740 --> 01:30:23.460
<v Speaker 1>Yeah. It's user.

01:30:24.635 --> 01:30:26.474
<v Speaker 0>Yep. We have access

01:30:26.715 --> 01:30:29.195
<v Speaker 0>to this syntax. So we will copy it

01:30:29.195 --> 01:30:32.074
<v Speaker 0>as an example, tweak as needed. So let's

01:30:32.074 --> 01:30:33.914
<v Speaker 0>see. We've got name. Add.

01:30:36.555 --> 01:30:37.515
<v Speaker 0>If you bash.

01:30:39.300 --> 01:30:39.939
<v Speaker 0>Sure.

01:30:40.179 --> 01:30:42.019
<v Speaker 0>I'll give you a home directory

01:30:45.860 --> 01:30:47.219
<v Speaker 0>from UID

01:30:47.619 --> 01:30:48.820
<v Speaker 0>from UID.

01:30:55.534 --> 01:30:56.974
<v Speaker 0>There. How does that look?

01:30:57.215 --> 01:30:57.934
<v Speaker 1>Perfect.

01:30:58.655 --> 01:31:00.254
<v Speaker 0>Okay. So let's

01:31:00.414 --> 01:31:01.374
<v Speaker 0>run this.

01:31:03.454 --> 01:31:05.135
<v Speaker 0>It dot SLS

01:31:05.135 --> 01:31:06.094
<v Speaker 0>livestream

01:31:07.080 --> 01:31:08.119
<v Speaker 0>user

01:31:08.840 --> 01:31:09.320
<v Speaker 0>and

01:31:14.840 --> 01:31:16.199
<v Speaker 1>No group exists.

01:31:16.600 --> 01:31:19.960
<v Speaker 0>Yeah. We do not have

01:31:19.345 --> 01:31:21.025
<v Speaker 0>a will group.

01:31:26.065 --> 01:31:27.985
<v Speaker 0>You're getting no groups, I'm afraid. I'm removing

01:31:27.985 --> 01:31:29.025
<v Speaker 0>your group. Okay.

01:31:29.265 --> 01:31:30.065
<v Speaker 1>That's fair enough.

01:31:36.659 --> 01:31:38.260
<v Speaker 1>Just says failed to create.

01:31:39.139 --> 01:31:40.179
<v Speaker 0>I wonder

01:31:40.900 --> 01:31:42.179
<v Speaker 1>Do we have a

01:31:43.059 --> 01:31:43.699
<v Speaker 1>ID

01:31:43.940 --> 01:31:44.420
<v Speaker 1>match?

01:31:47.005 --> 01:31:49.324
<v Speaker 0>Good question. I was also wondering if maybe

01:31:49.324 --> 01:31:51.164
<v Speaker 0>there's a minimum number of catches for a

01:31:51.164 --> 01:31:53.644
<v Speaker 0>username. I can't remember. No.

01:31:53.885 --> 01:31:56.284
<v Speaker 1>No. I've I've successfully been in before.

01:31:56.764 --> 01:31:57.244
<v Speaker 0>Alright.

01:31:59.290 --> 01:32:01.210
<v Speaker 0>I mean, I don't see a thousand and

01:32:01.210 --> 01:32:02.489
<v Speaker 0>one user.

01:32:03.290 --> 01:32:04.489
<v Speaker 1>No. I don't either.

01:32:07.770 --> 01:32:08.489
<v Speaker 0>So

01:32:10.890 --> 01:32:12.490
<v Speaker 0>uh-huh. Let's try.

01:32:20.625 --> 01:32:21.824
<v Speaker 0>How to bug?

01:32:24.065 --> 01:32:25.025
<v Speaker 0>Oh, it's just that.

01:32:27.140 --> 01:32:29.700
<v Speaker 0>Why you fail? Why you fail? Why you

01:32:29.700 --> 01:32:30.340
<v Speaker 0>fail?

01:32:37.540 --> 01:32:39.780
<v Speaker 0>I mean, that's a pretty simple

01:32:42.335 --> 01:32:44.735
<v Speaker 0>It's a present. I'm gonna remove the

01:32:48.094 --> 01:32:49.854
<v Speaker 1>Can get it down to its minimum.

01:32:50.094 --> 01:32:52.014
<v Speaker 0>Alright. Okay. If I remove the UID and

01:32:52.014 --> 01:32:55.135
<v Speaker 0>GID, it worked. I'm

01:32:55.135 --> 01:32:55.614
<v Speaker 0>not sure why.

01:32:56.200 --> 01:32:57.720
<v Speaker 0>Much Oh, you know, I know what it

01:32:57.720 --> 01:32:59.719
<v Speaker 0>is. It's a YAML thing.

01:33:00.280 --> 01:33:01.159
<v Speaker 1>Oh, no.

01:33:02.120 --> 01:33:03.640
<v Speaker 1>Do they have to be quoted? Because it's

01:33:03.640 --> 01:33:06.360
<v Speaker 1>interpreting them as Octal or something stupid.

01:33:06.760 --> 01:33:08.440
<v Speaker 0>Yeah. I I I know it does that

01:33:08.440 --> 01:33:11.545
<v Speaker 0>with some weird numbers and format. Anyway, we're

01:33:11.545 --> 01:33:12.344
<v Speaker 0>we're good.

01:33:12.665 --> 01:33:15.305
<v Speaker 0>Okay. You're you're not a user. So l

01:33:15.305 --> 01:33:16.185
<v Speaker 0>s home

01:33:16.985 --> 01:33:18.265
<v Speaker 0>ID at

01:33:18.985 --> 01:33:20.745
<v Speaker 0>you exist. So Okay.

01:33:22.090 --> 01:33:24.490
<v Speaker 0>Next up, we want to provision

01:33:25.050 --> 01:33:26.410
<v Speaker 0>SSH keys.

01:33:29.450 --> 01:33:31.210
<v Speaker 0>Is that right? Yep.

01:33:32.730 --> 01:33:34.810
<v Speaker 0>And we're gonna do this at

01:33:36.170 --> 01:33:37.050
<v Speaker 0>home

01:33:37.595 --> 01:33:38.395
<v Speaker 0>at

01:33:39.675 --> 01:33:42.555
<v Speaker 0>dot s s h authorized

01:33:42.875 --> 01:33:44.635
<v Speaker 0>as single secret path.

01:33:45.035 --> 01:33:46.315
<v Speaker 1>Yeah. Think so.

01:33:48.795 --> 01:33:50.155
<v Speaker 0>We need to

01:33:50.635 --> 01:33:51.035
<v Speaker 0>no.

01:33:52.050 --> 01:33:52.690
<v Speaker 0>We

01:33:53.090 --> 01:33:55.489
<v Speaker 0>we need to enable template first,

01:33:57.650 --> 01:33:58.449
<v Speaker 0>didn't you?

01:33:58.850 --> 01:34:01.410
<v Speaker 0>Now we could do source like we did

01:34:01.410 --> 01:34:02.370
<v Speaker 0>last time.

01:34:02.930 --> 01:34:05.969
<v Speaker 0>However, our source is really just

01:34:05.970 --> 01:34:06.850
<v Speaker 0>those keys.

01:34:07.585 --> 01:34:09.504
<v Speaker 0>Believe we could just do contents.

01:34:11.264 --> 01:34:13.344
<v Speaker 0>We can use YAML multilane.

01:34:14.625 --> 01:34:17.264
<v Speaker 0>I think we make our way with the

01:34:17.905 --> 01:34:18.385
<v Speaker 1>Oh.

01:34:22.490 --> 01:34:23.449
<v Speaker 0>I think.

01:34:24.730 --> 01:34:27.530
<v Speaker 0>I can't remember. Do you remember what the

01:34:28.570 --> 01:34:29.690
<v Speaker 0>permissions need to be?

01:34:33.945 --> 01:34:35.864
<v Speaker 1>The directory needs to be

01:34:37.545 --> 01:34:39.304
<v Speaker 0>I'm just making up. I might be wrong.

01:34:39.304 --> 01:34:40.505
<v Speaker 1>700?

01:34:40.905 --> 01:34:42.264
<v Speaker 1>It can't be writable.

01:34:44.505 --> 01:34:45.304
<v Speaker 0>Alright.

01:34:45.784 --> 01:34:47.145
<v Speaker 0>Let's run this and see what happens.

01:34:48.920 --> 01:34:50.600
<v Speaker 0>Let's just Do it again.

01:34:54.360 --> 01:34:56.680
<v Speaker 0>So we got broken. Broken. Broken. Broken.

01:35:00.775 --> 01:35:03.655
<v Speaker 0>Okay. It's not leaking that. Doesn't like the

01:35:03.655 --> 01:35:04.535
<v Speaker 1>multi one.

01:35:05.975 --> 01:35:06.775
<v Speaker 0>Okay.

01:35:06.855 --> 01:35:09.815
<v Speaker 0>Grain. Got a packet. Yeah. That'll do that.

01:35:20.050 --> 01:35:22.449
<v Speaker 0>Oh, it's it's doesn't like Okay.

01:35:25.810 --> 01:35:26.929
<v Speaker 0>That that was fine.

01:35:30.605 --> 01:35:32.204
<v Speaker 0>This is wrong.

01:35:33.244 --> 01:35:34.364
<v Speaker 0>And

01:35:34.925 --> 01:35:38.445
<v Speaker 0>it's because okay. So there's I I'm gonna

01:35:38.445 --> 01:35:40.764
<v Speaker 0>assume I've got this understanding in my head

01:35:40.764 --> 01:35:42.480
<v Speaker 0>right, but I may be wrong. There are

01:35:42.480 --> 01:35:44.639
<v Speaker 0>two ways to reference Grain and Salt. So

01:35:44.880 --> 01:35:47.920
<v Speaker 0>we can do Grain's dot packet metadata, which

01:35:47.920 --> 01:35:49.360
<v Speaker 0>works for simple keys,

01:35:49.760 --> 01:35:52.080
<v Speaker 0>but this is a this is a complex

01:35:52.080 --> 01:35:54.560
<v Speaker 0>key. But I believe what we actually need

01:35:54.560 --> 01:35:55.200
<v Speaker 0>to do

01:35:55.815 --> 01:35:57.815
<v Speaker 0>is grains packet,

01:35:57.975 --> 01:35:58.855
<v Speaker 0>metadata,

01:35:58.935 --> 01:35:59.974
<v Speaker 0>SSH

01:36:00.135 --> 01:36:01.094
<v Speaker 0>keys,

01:36:01.895 --> 01:36:02.775
<v Speaker 0>like so.

01:36:03.094 --> 01:36:05.255
<v Speaker 1>Yeah. Okay. I think.

01:36:11.250 --> 01:36:12.689
<v Speaker 1>Didn't like the

01:36:14.449 --> 01:36:16.929
<v Speaker 0>It didn't like me not closing my Just

01:36:16.929 --> 01:36:17.969
<v Speaker 0>the sentence.

01:36:19.650 --> 01:36:21.730
<v Speaker 0>But I was just messing her braces.

01:36:23.255 --> 01:36:24.135
<v Speaker 0>Alright.

01:36:25.735 --> 01:36:28.215
<v Speaker 0>It does not have oh, okay. So, yeah,

01:36:28.215 --> 01:36:30.055
<v Speaker 0>when we use the complex syntax,

01:36:30.055 --> 01:36:31.335
<v Speaker 0>I think it actually

01:36:33.015 --> 01:36:35.015
<v Speaker 0>breaks it up. Like, I can't even remember

01:36:35.015 --> 01:36:37.175
<v Speaker 0>now. I'm completely making this up. Let's see.

01:36:38.690 --> 01:36:40.210
<v Speaker 0>Okay.

01:36:42.050 --> 01:36:45.010
<v Speaker 0>So better. I definitely did the interpolation,

01:36:45.409 --> 01:36:45.969
<v Speaker 0>but

01:36:48.929 --> 01:36:51.250
<v Speaker 0>it failed because

01:36:59.875 --> 01:37:01.155
<v Speaker 1>it did the interpolation.

01:37:08.070 --> 01:37:09.989
<v Speaker 0>Expected a semi

01:37:10.230 --> 01:37:10.949
<v Speaker 0>expected

01:37:11.190 --> 01:37:11.989
<v Speaker 0>a colon.

01:37:22.565 --> 01:37:25.205
<v Speaker 0>So this is just my multiline syntax, and

01:37:25.205 --> 01:37:28.405
<v Speaker 0>I think the problem is this array style

01:37:28.405 --> 01:37:28.885
<v Speaker 0>thing.

01:37:33.490 --> 01:37:34.210
<v Speaker 0>Okay.

01:37:35.410 --> 01:37:37.890
<v Speaker 0>So can I confirm what I think the

01:37:37.890 --> 01:37:39.010
<v Speaker 0>problem is?

01:37:44.050 --> 01:37:45.730
<v Speaker 0>Because YAML supports

01:37:48.575 --> 01:37:49.775
<v Speaker 1>supports YAML.

01:37:49.855 --> 01:37:51.855
<v Speaker 0>Syntax. Yeah. It's a YAML thing.

01:37:52.335 --> 01:37:53.135
<v Speaker 0>Let's

01:37:53.135 --> 01:37:54.415
<v Speaker 0>see if we can pull up a YAML

01:37:54.415 --> 01:37:56.575
<v Speaker 0>file there. Are you okay for time? Or

01:37:56.575 --> 01:37:58.175
<v Speaker 0>actually Yeah. I'm good. I'm good.

01:37:59.215 --> 01:38:01.375
<v Speaker 0>Alright. So what we have

01:38:01.615 --> 01:38:02.975
<v Speaker 0>we'll we'll copy it.

01:38:03.829 --> 01:38:05.510
<v Speaker 0>There's something like

01:38:06.949 --> 01:38:12.230
<v Speaker 0>so I'm

01:38:12.230 --> 01:38:13.829
<v Speaker 0>not sure what that copied.

01:38:14.789 --> 01:38:15.989
<v Speaker 1>I think copied

01:38:16.070 --> 01:38:16.949
<v Speaker 1>public keys.

01:38:21.844 --> 01:38:23.364
<v Speaker 0>I'll do it this way.

01:38:26.324 --> 01:38:27.044
<v Speaker 0>Alright.

01:38:28.645 --> 01:38:30.244
<v Speaker 0>I'll type it. Thanks.

01:38:30.885 --> 01:38:32.670
<v Speaker 0>Do we have something like that where we're

01:38:32.670 --> 01:38:34.830
<v Speaker 0>using this syntax here and

01:38:35.150 --> 01:38:36.750
<v Speaker 0>I could do this

01:38:39.230 --> 01:38:40.110
<v Speaker 0>shimmer.

01:38:40.350 --> 01:38:41.710
<v Speaker 0>I think I said that's something more if

01:38:41.710 --> 01:38:42.670
<v Speaker 0>I don't have one.

01:38:43.790 --> 01:38:45.470
<v Speaker 0>And if we validate this

01:38:47.365 --> 01:38:48.645
<v Speaker 1>Could not find

01:38:48.885 --> 01:38:50.245
<v Speaker 0>Oh, it is completing.

01:38:53.445 --> 01:38:56.165
<v Speaker 0>So my multiline syntax is wrong.

01:38:58.005 --> 01:38:59.445
<v Speaker 0>Maybe it needs to be indent a little

01:38:59.445 --> 01:38:59.925
<v Speaker 0>bit more.

01:39:03.860 --> 01:39:04.660
<v Speaker 1>I'm undented.

01:39:05.060 --> 01:39:05.700
<v Speaker 0>Yeah.

01:39:06.100 --> 01:39:06.739
<v Speaker 0>So

01:39:07.220 --> 01:39:08.580
<v Speaker 0>So I need to see if we did.

01:39:08.580 --> 01:39:10.340
<v Speaker 0>So we still have one problem here, though,

01:39:10.340 --> 01:39:11.860
<v Speaker 0>which we'll see in just a second.

01:39:12.980 --> 01:39:13.380
<v Speaker 0>Okay.

01:39:14.675 --> 01:39:17.074
<v Speaker 0>If I go to four Something something worked.

01:39:17.475 --> 01:39:18.114
<v Speaker 0>K.

01:39:18.435 --> 01:39:19.635
<v Speaker 0>It half worked.

01:39:20.355 --> 01:39:21.715
<v Speaker 0>And the problem is

01:39:22.035 --> 01:39:24.435
<v Speaker 0>we still have a No. That needs to

01:39:24.435 --> 01:39:24.994
<v Speaker 1>be

01:39:25.395 --> 01:39:27.235
<v Speaker 1>yeah. Because that's that's

01:39:29.520 --> 01:39:30.159
<v Speaker 0>Yep.

01:39:30.639 --> 01:39:32.559
<v Speaker 1>Just the wrong syntax.

01:39:33.119 --> 01:39:35.360
<v Speaker 0>So the good thing about the Genga things

01:39:35.360 --> 01:39:38.079
<v Speaker 0>is we have access to the entire Genga

01:39:38.079 --> 01:39:39.840
<v Speaker 0>templating library too.

01:39:40.480 --> 01:39:42.159
<v Speaker 0>So I think we can do join.

01:39:45.585 --> 01:39:46.625
<v Speaker 0>I think

01:39:47.425 --> 01:39:49.505
<v Speaker 0>we can do join with a new line.

01:39:53.185 --> 01:39:54.545
<v Speaker 0>Actually, it worked.

01:39:55.185 --> 01:39:57.425
<v Speaker 0>But the indentation's wrong. You can see there's

01:39:57.425 --> 01:39:59.345
<v Speaker 0>no erase and text. The Right.

01:40:00.630 --> 01:40:02.550
<v Speaker 0>Okay. So that means we need to do

01:40:02.550 --> 01:40:03.670
<v Speaker 0>one more thing.

01:40:07.750 --> 01:40:08.710
<v Speaker 0>And then

01:40:12.470 --> 01:40:13.910
<v Speaker 0>six.

01:40:14.715 --> 01:40:17.675
<v Speaker 0>We should end down every lane by six.

01:40:20.315 --> 01:40:22.955
<v Speaker 1>Didn't like it. Oh, that it oh, it

01:40:22.955 --> 01:40:24.074
<v Speaker 0>didn't end up.

01:40:26.395 --> 01:40:27.675
<v Speaker 0>What have I got wrong now?

01:40:30.930 --> 01:40:32.210
<v Speaker 0>Maybe it's eight.

01:40:33.250 --> 01:40:34.050
<v Speaker 0>Yeah.

01:40:37.489 --> 01:40:38.770
<v Speaker 0>Success. Hey. Wow.

01:40:42.495 --> 01:40:45.534
<v Speaker 1>Love me some yum. Much better. Okay. K.

01:40:45.534 --> 01:40:46.975
<v Speaker 1>It's got blank lines in there, but I

01:40:46.975 --> 01:40:48.574
<v Speaker 1>don't think that's gonna matter.

01:40:49.695 --> 01:40:50.414
<v Speaker 0>Well,

01:40:52.175 --> 01:40:53.455
<v Speaker 0>I'm not gonna ask you if you know

01:40:53.455 --> 01:40:55.295
<v Speaker 0>what your SSH key looks like, but I

01:40:55.295 --> 01:40:57.450
<v Speaker 0>believe you are in this project. So why

01:40:57.450 --> 01:40:59.130
<v Speaker 0>don't I believe so. Do you wanna share

01:40:59.130 --> 01:41:00.650
<v Speaker 0>your screen and see if you can connect

01:41:00.650 --> 01:41:02.970
<v Speaker 0>just to complete? Let me let me make

01:41:02.970 --> 01:41:05.530
<v Speaker 1>sure that I have

01:41:06.410 --> 01:41:07.450
<v Speaker 1>the right screen up.

01:41:10.795 --> 01:41:12.155
<v Speaker 1>Bring up PuTTY

01:41:14.074 --> 01:41:16.874
<v Speaker 1>because I have a fantastic Windows machine here.

01:41:20.875 --> 01:41:23.034
<v Speaker 1>And then the host name I'm connecting to

01:41:23.034 --> 01:41:23.434
<v Speaker 1>is?

01:41:25.130 --> 01:41:26.489
<v Speaker 0>1 4 7

01:41:27.210 --> 01:41:28.889
<v Speaker 0>Dot 70 5

01:41:29.610 --> 01:41:31.050
<v Speaker 0>Dot 30 3

01:41:32.250 --> 01:41:33.849
<v Speaker 0>Dot 1 3 4.

01:41:35.849 --> 01:41:38.730
<v Speaker 1>And let's see if I do the right

01:41:38.730 --> 01:41:40.409
<v Speaker 1>SSH key off.

01:41:41.985 --> 01:41:42.864
<v Speaker 0>Okay.

01:41:46.864 --> 01:41:48.545
<v Speaker 0>That was menu one.

01:41:50.145 --> 01:41:51.185
<v Speaker 0>I'm not touching it.

01:42:01.460 --> 01:42:02.820
<v Speaker 0>I'm waiting on I'm

01:42:02.900 --> 01:42:03.699
<v Speaker 1>waiting on me too.

01:42:08.925 --> 01:42:10.364
<v Speaker 1>It's not working.

01:42:10.925 --> 01:42:12.045
<v Speaker 0>That's

01:42:12.045 --> 01:42:14.525
<v Speaker 0>Well, let's let's well, let's see.

01:42:17.485 --> 01:42:19.645
<v Speaker 0>I mean, it's not terribly important,

01:42:19.645 --> 01:42:22.525
<v Speaker 0>I guess. I don't even know if your

01:42:22.130 --> 01:42:24.770
<v Speaker 0>SSH key is on that metadata. So and

01:42:24.770 --> 01:42:26.210
<v Speaker 0>it's just a buffer. No. I think I

01:42:26.210 --> 01:42:27.409
<v Speaker 1>think this is a

01:42:31.570 --> 01:42:33.650
<v Speaker 1>I think this is a something else going

01:42:33.650 --> 01:42:34.849
<v Speaker 1>on here. So let me

01:42:35.835 --> 01:42:38.395
<v Speaker 1>I'm switching to an off screen computer.

01:42:41.755 --> 01:42:43.835
<v Speaker 1>And what's the what's the

01:42:44.555 --> 01:42:45.595
<v Speaker 1>address again?

01:42:46.155 --> 01:42:47.515
<v Speaker 0>147

01:42:48.155 --> 01:42:49.995
<v Speaker 0>Dot 75

01:42:50.760 --> 01:42:52.199
<v Speaker 0>Dot 33

01:42:53.080 --> 01:42:54.840
<v Speaker 0>Dot 134.

01:42:59.160 --> 01:43:01.159
<v Speaker 1>Permission denied public key.

01:43:02.040 --> 01:43:04.360
<v Speaker 0>No. I wonder if that's because I made

01:43:04.360 --> 01:43:05.555
<v Speaker 0>up the

01:43:05.715 --> 01:43:07.395
<v Speaker 0>permissions on this file.

01:43:08.675 --> 01:43:10.355
<v Speaker 1>Yeah. I think you need to be 600

01:43:10.355 --> 01:43:11.155
<v Speaker 1>on that.

01:43:12.915 --> 01:43:15.395
<v Speaker 0>We can tell by taking a look at

01:43:15.395 --> 01:43:16.675
<v Speaker 0>the log.

01:43:18.115 --> 01:43:19.795
<v Speaker 0>Well, if I pull up

01:43:24.240 --> 01:43:25.680
<v Speaker 0>system menu log,

01:43:26.000 --> 01:43:27.920
<v Speaker 0>I don't think we got an SSH deny

01:43:27.920 --> 01:43:28.800
<v Speaker 0>message.

01:43:30.240 --> 01:43:31.360
<v Speaker 0>What can I look at?

01:43:37.375 --> 01:43:38.574
<v Speaker 0>Dash x v.

01:43:40.415 --> 01:43:41.375
<v Speaker 0>Yeah. I'm not really

01:43:42.094 --> 01:43:43.534
<v Speaker 0>oh, that's the wrong machine.

01:43:44.815 --> 01:43:45.215
<v Speaker 1>Oh.

01:43:47.360 --> 01:43:48.960
<v Speaker 0>There we go. So I was trying to

01:43:48.960 --> 01:43:50.080
<v Speaker 0>get the user

01:43:51.760 --> 01:43:52.880
<v Speaker 1>Could not find

01:43:53.440 --> 01:43:54.480
<v Speaker 0>No.

01:43:56.000 --> 01:43:56.960
<v Speaker 0>The pager.

01:44:01.755 --> 01:44:03.835
<v Speaker 0>I don't if that's after that. Alright. We

01:44:03.835 --> 01:44:05.195
<v Speaker 0>we got past that bit.

01:44:09.195 --> 01:44:11.195
<v Speaker 1>That's my IP address. That's me.

01:44:16.110 --> 01:44:17.710
<v Speaker 1>I bet yeah.

01:44:18.590 --> 01:44:20.510
<v Speaker 1>I bet it's a file permission thing.

01:44:29.390 --> 01:44:31.375
<v Speaker 1>Yeah. Either that or my key isn't in

01:44:31.375 --> 01:44:32.574
<v Speaker 1>the system.

01:44:32.815 --> 01:44:34.175
<v Speaker 0>That's not a big deal. That would've been

01:44:34.175 --> 01:44:35.135
<v Speaker 0>cool. Anyway,

01:44:36.175 --> 01:44:37.934
<v Speaker 0>we've covered a lot of salt there.

01:44:38.494 --> 01:44:39.935
<v Speaker 0>Is there anything we have missed, do you

01:44:39.935 --> 01:44:40.175
<v Speaker 0>think?

01:44:43.130 --> 01:44:44.970
<v Speaker 0>Is there any questions you've got? Anything

01:44:47.770 --> 01:44:49.850
<v Speaker 1>I we we've covered a lot. The the

01:44:49.850 --> 01:44:51.530
<v Speaker 1>whole idea of

01:44:53.210 --> 01:44:54.810
<v Speaker 1>using configuration

01:44:56.725 --> 01:44:58.005
<v Speaker 1>on the master

01:44:58.005 --> 01:44:58.885
<v Speaker 1>derived

01:44:58.885 --> 01:45:01.845
<v Speaker 1>from either the master or the minions

01:45:02.005 --> 01:45:02.725
<v Speaker 1>data.

01:45:04.085 --> 01:45:06.165
<v Speaker 1>Right? So we covered grains and how you

01:45:06.165 --> 01:45:08.165
<v Speaker 1>can interpolate grains into files.

01:45:11.230 --> 01:45:12.670
<v Speaker 1>The the

01:45:13.550 --> 01:45:15.870
<v Speaker 1>the neat thing about Salt for me is

01:45:15.870 --> 01:45:16.510
<v Speaker 1>just

01:45:17.230 --> 01:45:20.030
<v Speaker 1>how powerful it is for ad hoc commands.

01:45:21.244 --> 01:45:21.885
<v Speaker 0>Right?

01:45:22.364 --> 01:45:24.045
<v Speaker 0>If you if you've

01:45:26.204 --> 01:45:28.525
<v Speaker 1>if you know that you, for instance, need

01:45:28.525 --> 01:45:30.125
<v Speaker 1>like we did before, like, you know you

01:45:30.125 --> 01:45:31.405
<v Speaker 1>need to have j q in all the

01:45:31.405 --> 01:45:31.804
<v Speaker 1>machines,

01:45:33.030 --> 01:45:35.829
<v Speaker 1>That's a one liner, very easy to do,

01:45:35.829 --> 01:45:36.869
<v Speaker 1>very straightforward,

01:45:37.349 --> 01:45:38.229
<v Speaker 1>very simple.

01:45:40.789 --> 01:45:41.429
<v Speaker 1>It

01:45:41.750 --> 01:45:43.429
<v Speaker 1>for for me, Salt

01:45:43.989 --> 01:45:47.030
<v Speaker 1>is really two things. It's a very complex,

01:45:47.030 --> 01:45:47.750
<v Speaker 1>very powerful,

01:45:48.745 --> 01:45:50.105
<v Speaker 1>all consuming,

01:45:50.745 --> 01:45:52.425
<v Speaker 1>do everything with its system,

01:45:52.985 --> 01:45:54.905
<v Speaker 1>or it's a very simple,

01:45:55.545 --> 01:45:57.545
<v Speaker 1>do a couple of things very easily kind

01:45:57.545 --> 01:45:58.344
<v Speaker 1>of system.

01:45:58.585 --> 01:46:00.105
<v Speaker 1>Well, I think that's

01:46:01.110 --> 01:46:03.430
<v Speaker 1>that's a, you know, a couple different sources

01:46:03.430 --> 01:46:04.470
<v Speaker 1>of usefulness

01:46:04.470 --> 01:46:05.190
<v Speaker 1>for it.

01:46:05.990 --> 01:46:06.949
<v Speaker 0>Yeah.

01:46:07.830 --> 01:46:08.550
<v Speaker 0>Definitely.

01:46:08.790 --> 01:46:09.510
<v Speaker 0>I mean,

01:46:10.230 --> 01:46:12.230
<v Speaker 0>I I completely agree with that. So, you

01:46:12.230 --> 01:46:14.405
<v Speaker 0>know, give that a big massive thumbs up.

01:46:14.405 --> 01:46:16.644
<v Speaker 0>I think, you know, when you're dealing with

01:46:16.885 --> 01:46:18.485
<v Speaker 0>the the ability to run out of commands

01:46:18.485 --> 01:46:20.565
<v Speaker 0>against all your machines or a subset of

01:46:20.565 --> 01:46:23.044
<v Speaker 0>your machines is just really important.

01:46:23.764 --> 01:46:25.445
<v Speaker 0>But even that, I think Salt has a

01:46:25.445 --> 01:46:27.125
<v Speaker 0>lot of power even on a single machine

01:46:27.125 --> 01:46:29.400
<v Speaker 0>setup. Just the ability to automate all of

01:46:29.400 --> 01:46:31.080
<v Speaker 0>these things. Like, you know, I can do

01:46:31.080 --> 01:46:33.400
<v Speaker 0>Salt command dot run, but, you know, putting

01:46:33.400 --> 01:46:37.079
<v Speaker 0>together state files like this makes something really,

01:46:37.080 --> 01:46:38.199
<v Speaker 0>really repeatable.

01:46:38.280 --> 01:46:38.520
<v Speaker 0>Yeah.

01:46:40.435 --> 01:46:41.635
<v Speaker 0>They made so much so I use it

01:46:41.635 --> 01:46:43.395
<v Speaker 0>for my doc files, as I kinda mentioned

01:46:43.395 --> 01:46:46.594
<v Speaker 0>earlier. So that's Yeah. It's just yeah. And

01:46:46.594 --> 01:46:47.715
<v Speaker 0>for that, we're powerful

01:46:48.195 --> 01:46:49.875
<v Speaker 0>and fast. You know, I don't think we've

01:46:49.875 --> 01:46:51.715
<v Speaker 0>really ever waited too long and anything happening,

01:46:51.715 --> 01:46:52.355
<v Speaker 0>which is nice.

01:46:53.470 --> 01:46:55.949
<v Speaker 1>And and small enough,

01:46:56.990 --> 01:46:59.630
<v Speaker 1>to consider on small machines.

01:47:01.070 --> 01:47:03.790
<v Speaker 1>I'm actively using it on a Pi three,

01:47:05.205 --> 01:47:07.364
<v Speaker 1>which has got one gigabyte of memory and

01:47:07.364 --> 01:47:11.124
<v Speaker 1>it you know, the the baseline load of

01:47:11.284 --> 01:47:13.044
<v Speaker 1>what does it take to run it,

01:47:13.445 --> 01:47:14.804
<v Speaker 1>doesn't show up very much.

01:47:17.340 --> 01:47:19.980
<v Speaker 0>Yeah. And and it does not have massive

01:47:19.980 --> 01:47:23.340
<v Speaker 0>footprint CPU or memory wise, which is great.

01:47:24.380 --> 01:47:25.180
<v Speaker 0>And super

01:47:26.140 --> 01:47:27.980
<v Speaker 0>I mean, it's pretty tweakable and configurable as

01:47:27.980 --> 01:47:29.740
<v Speaker 0>well. Yeah. Definitely.

01:47:32.635 --> 01:47:34.155
<v Speaker 0>I'm just trying to think if there's anything

01:47:34.155 --> 01:47:35.995
<v Speaker 0>we should cover or if we just leave

01:47:35.995 --> 01:47:37.675
<v Speaker 0>it there and maybe we'll do a second

01:47:37.675 --> 01:47:39.035
<v Speaker 0>session another day.

01:47:39.915 --> 01:47:41.275
<v Speaker 1>I think we can leave it there. I

01:47:41.275 --> 01:47:43.355
<v Speaker 1>mean, the the

01:47:45.950 --> 01:47:46.910
<v Speaker 0>the,

01:47:50.190 --> 01:47:52.030
<v Speaker 1>key management is really

01:47:52.590 --> 01:47:54.430
<v Speaker 1>something if you're bringing up a lot of

01:47:54.430 --> 01:47:55.870
<v Speaker 1>machines. I think,

01:47:57.710 --> 01:47:58.670
<v Speaker 1>understanding,

01:47:58.670 --> 01:48:00.030
<v Speaker 1>like, what does it take to take a

01:48:00.030 --> 01:48:01.390
<v Speaker 1>machine online or offline.

01:48:04.165 --> 01:48:05.525
<v Speaker 1>But, yeah, I think we can we can

01:48:05.525 --> 01:48:07.285
<v Speaker 1>leave it there. We we we've covered a

01:48:07.285 --> 01:48:08.085
<v Speaker 1>lot of ground.

01:48:08.565 --> 01:48:10.645
<v Speaker 1>That's really, really helpful, really useful.

01:48:12.485 --> 01:48:16.165
<v Speaker 0>Awesome. Well, thank you for joining me today.

01:48:16.165 --> 01:48:18.340
<v Speaker 0>It's been a a pleasure going through some

01:48:18.340 --> 01:48:21.139
<v Speaker 0>of this stuff and chatting with you. And

01:48:21.380 --> 01:48:22.580
<v Speaker 0>I hope that we can do this again

01:48:22.580 --> 01:48:24.580
<v Speaker 0>soon. So thank you again. I'm looking forward

01:48:24.580 --> 01:48:27.140
<v Speaker 1>to it. Alright. Have a nice day. Hey.

01:48:27.140 --> 01:48:27.540
<v Speaker 1>Take care.
