---
import AppLayout from "../../components/AppLayout.astro";
import { getCollection } from "astro:content";

const features = await getCollection("features");
const stories = await getCollection("stories");

const getRelatedStoriesCount = (featureSlug: string) => {
	return stories.filter((s) => s.data.featureId === featureSlug).length;
};

const priorityColors = {
	must: "priority-must",
	should: "priority-should",
	could: "priority-could",
	wont: "priority-wont",
};

const sizeStyles = {
	XS: "size-xs",
	S: "size-s",
	M: "size-m",
	L: "size-l",
	XL: "size-xl",
};
---

<AppLayout title="Features - ForgePoint">
	<style>
		.features-list {
			max-width: 1200px;
			margin: 0 auto;
		}

		.page-header {
			margin-bottom: 32px;
		}

		.page-title {
			font-size: 24px;
			font-weight: 600;
			color: #fff;
			margin-bottom: 8px;
		}

		.page-subtitle {
			font-size: 14px;
			color: #8b8b8d;
		}

		.features-grid {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
			gap: 16px;
		}

		.feature-card {
			display: block;
			background-color: #0e0e10;
			border: 1px solid #1f1f23;
			border-radius: 8px;
			padding: 20px;
			text-decoration: none;
			transition: all 0.1s ease;
		}

		.feature-card:hover {
			background-color: #1a1a1d;
			border-color: #2a2a2d;
			transform: translateY(-2px);
		}

		.feature-header {
			display: flex;
			align-items: flex-start;
			justify-content: space-between;
			margin-bottom: 12px;
		}

		.feature-title {
			font-size: 16px;
			font-weight: 600;
			color: #e1e1e3;
			margin-right: 12px;
		}

		.feature-badges {
			display: flex;
			gap: 6px;
			flex-shrink: 0;
		}

		.priority-badge {
			padding: 2px 8px;
			border-radius: 4px;
			font-size: 11px;
			font-weight: 600;
			text-transform: uppercase;
			letter-spacing: 0.05em;
		}

		.priority-must {
			background-color: rgba(239, 68, 68, 0.2);
			color: #ef4444;
		}

		.priority-should {
			background-color: rgba(245, 158, 11, 0.2);
			color: #f59e0b;
		}

		.priority-could {
			background-color: rgba(59, 130, 246, 0.2);
			color: #3b82f6;
		}

		.priority-wont {
			background-color: rgba(107, 114, 128, 0.2);
			color: #6b7280;
		}

		.size-badge {
			padding: 2px 8px;
			border-radius: 4px;
			font-size: 11px;
			font-weight: 600;
			background-color: #1a1a1d;
			border: 1px solid #2a2a2d;
			color: #a8a8a9;
		}

		.size-xs { border-color: #3a3a3d; }
		.size-s { border-color: #4a4a4d; }
		.size-m { border-color: #5a5a5d; }
		.size-l { border-color: #6a6a6d; }
		.size-xl { border-color: #7a7a7d; }

		.feature-description {
			font-size: 13px;
			color: #8b8b8d;
			line-height: 1.6;
			margin-bottom: 16px;
		}

		.enhancement-box {
			background-color: #1a1a1d;
			border: 1px solid #2a2a2d;
			border-radius: 6px;
			padding: 12px;
			margin-bottom: 16px;
		}

		.enhancement-label {
			font-size: 11px;
			font-weight: 600;
			color: #5e6ad2;
			text-transform: uppercase;
			letter-spacing: 0.05em;
			margin-bottom: 6px;
		}

		.enhancement-text {
			font-size: 13px;
			color: #e1e1e3;
			line-height: 1.5;
		}

		.feature-meta {
			display: flex;
			align-items: center;
			justify-content: space-between;
			font-size: 12px;
			color: #6b6b6d;
		}

		.meta-item {
			display: flex;
			align-items: center;
			gap: 4px;
		}

		.meta-icon {
			width: 14px;
			height: 14px;
		}

		.empty-state {
			text-align: center;
			padding: 48px;
			color: #6b6b6d;
		}

		.empty-state-icon {
			width: 48px;
			height: 48px;
			margin: 0 auto 16px;
			opacity: 0.5;
		}

		.empty-state-text {
			font-size: 14px;
			margin-bottom: 8px;
		}
	</style>

	<div class="features-list">
		<div class="page-header">
			<h1 class="page-title">Features</h1>
			<p class="page-subtitle">Product features and enhancements</p>
		</div>
		
		<div class="features-grid">
			{features.map((feature) => {
				const storyCount = getRelatedStoriesCount(feature.slug);
				return (
					<a href={`/features/${feature.slug}`} class="feature-card">
						<div class="feature-header">
							<h2 class="feature-title">{feature.data.title}</h2>
							<div class="feature-badges">
								<span class={`priority-badge ${priorityColors[feature.data.priority]}`}>
									{feature.data.priority}
								</span>
								{feature.data.size && (
									<span class={`size-badge ${sizeStyles[feature.data.size]}`}>
										{feature.data.size}
									</span>
								)}
							</div>
						</div>
						
						<p class="feature-description">{feature.data.description}</p>
						
						<div class="enhancement-box">
							<div class="enhancement-label">Enhancement</div>
							<p class="enhancement-text">{feature.data.enhancement}</p>
						</div>
						
						<div class="feature-meta">
							<div class="meta-item">
								<svg class="meta-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
									<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
									<polyline points="14 2 14 8 20 8"></polyline>
								</svg>
								<span>{storyCount} {storyCount === 1 ? 'story' : 'stories'}</span>
							</div>
							{feature.data.dependencies && feature.data.dependencies.length > 0 && (
								<div class="meta-item">
									<svg class="meta-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
										<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
										<path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
									</svg>
									<span>{feature.data.dependencies.length} dependencies</span>
								</div>
							)}
						</div>
					</a>
				);
			})}
		</div>
		
		{features.length === 0 && (
			<div class="empty-state">
				<svg class="empty-state-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
					<polygon points="12 2 2 7 12 12 22 7 12 2"></polygon>
					<polyline points="2 17 12 22 22 17"></polyline>
					<polyline points="2 12 12 17 22 12"></polyline>
				</svg>
				<p class="empty-state-text">No features yet</p>
			</div>
		)}
	</div>
</AppLayout>