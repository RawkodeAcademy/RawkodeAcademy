---
import AppLayout from "../../components/AppLayout.astro";
import { getCollection } from "astro:content";

const stories = await getCollection("stories");
const activities = await getCollection("activities");
const features = await getCollection("features");

// Group stories by activity
const storiesByActivity = stories.reduce((acc, story) => {
  const activityId = story.data.activityId;
  if (!acc[activityId]) {
    acc[activityId] = [];
  }
  acc[activityId].push(story);
  return acc;
}, {} as Record<string, typeof stories>);

// Sort activities by order
const sortedActivities = [...activities].sort((a, b) => a.data.order - b.data.order);
---

<AppLayout title="Stories - ForgePoint">
  <style>
    .story-list {
      max-width: 1000px;
      margin: 0 auto;
    }

    .page-header {
      margin-bottom: 32px;
    }

    .page-title {
      font-size: 24px;
      font-weight: 600;
      color: #fff;
      margin-bottom: 8px;
    }

    .page-subtitle {
      font-size: 14px;
      color: #8b8b8d;
    }

    .toolbar {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 24px;
      padding-bottom: 16px;
      border-bottom: 1px solid #1f1f23;
    }

    .filter-group {
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .filter-button {
      height: 32px;
      padding: 0 16px;
      background-color: #1a1a1d;
      border: 1px solid #2a2a2d;
      border-radius: 6px;
      color: #a8a8a9;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.1s ease;
      display: flex;
      align-items: center;
      gap: 6px;
    }

    .filter-button:hover {
      background-color: #1f1f23;
      border-color: #3a3a3d;
      color: #e1e1e3;
    }

    .filter-button.active {
      background-color: #5e6ad2;
      border-color: #5e6ad2;
      color: #fff;
    }

    .activity-section {
      margin-bottom: 32px;
    }

    .activity-header {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 16px;
      padding: 8px 0;
    }

    .activity-title {
      font-size: 16px;
      font-weight: 600;
      color: #fff;
    }

    .activity-count {
      font-size: 12px;
      color: #6b6b6d;
      background-color: #1a1a1d;
      padding: 2px 8px;
      border-radius: 12px;
    }

    .story-item {
      display: block;
      padding: 12px 16px;
      margin-bottom: 1px;
      background-color: #0e0e10;
      border: 1px solid #1f1f23;
      border-radius: 6px;
      text-decoration: none;
      transition: all 0.1s ease;
      cursor: pointer;
    }

    .story-item:hover {
      background-color: #1a1a1d;
      border-color: #2a2a2d;
    }

    .story-item-header {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 8px;
    }

    .story-icon {
      width: 16px;
      height: 16px;
      color: #6b6b6d;
      flex-shrink: 0;
    }

    .story-title {
      flex: 1;
      font-size: 14px;
      font-weight: 500;
      color: #e1e1e3;
    }

    .story-meta {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-left: 28px;
    }

    .story-description {
      flex: 1;
      font-size: 13px;
      color: #8b8b8d;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .priority-badge {
      padding: 2px 8px;
      border-radius: 4px;
      font-size: 11px;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    .priority-must {
      background-color: rgba(239, 68, 68, 0.2);
      color: #ef4444;
    }

    .priority-should {
      background-color: rgba(245, 158, 11, 0.2);
      color: #f59e0b;
    }

    .priority-could {
      background-color: rgba(59, 130, 246, 0.2);
      color: #3b82f6;
    }

    .priority-wont {
      background-color: rgba(107, 114, 128, 0.2);
      color: #6b7280;
    }

    .story-size {
      font-size: 11px;
      color: #6b6b6d;
      font-weight: 600;
    }

    .story-feature {
      display: flex;
      align-items: center;
      gap: 4px;
      font-size: 11px;
      color: #5e6ad2;
    }

    .empty-state {
      text-align: center;
      padding: 48px;
      color: #6b6b6d;
    }

    .empty-state-icon {
      width: 48px;
      height: 48px;
      margin: 0 auto 16px;
      opacity: 0.5;
    }

    .empty-state-text {
      font-size: 14px;
      margin-bottom: 8px;
    }

    .empty-state-hint {
      font-size: 13px;
      color: #4b4b4d;
    }
  </style>

  <div class="story-list">
    <div class="page-header">
      <h1 class="page-title">Stories</h1>
      <p class="page-subtitle">User stories organized by activity</p>
    </div>

    <div class="toolbar">
      <div class="filter-group">
        <button class="filter-button active">
          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="9" y1="9" x2="15" y2="15"></line>
            <line x1="15" y1="9" x2="9" y2="15"></line>
          </svg>
          All Stories
        </button>
        <button class="filter-button">
          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          Linked
        </button>
        <button class="filter-button">
          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="12"></line>
            <line x1="12" y1="16" x2="12.01" y2="16"></line>
          </svg>
          Unlinked
        </button>
      </div>
      <div style="margin-left: auto;" class="filter-group">
        <button class="filter-button">
          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="21" y1="10" x2="3" y2="10"></line>
            <line x1="21" y1="6" x2="3" y2="6"></line>
            <line x1="21" y1="14" x2="3" y2="14"></line>
            <line x1="21" y1="18" x2="3" y2="18"></line>
          </svg>
          Sort
        </button>
      </div>
    </div>

    {sortedActivities.map((activity) => {
      const activityStories = storiesByActivity[activity.id] || [];
      if (activityStories.length === 0) return null;

      return (
        <div class="activity-section">
          <div class="activity-header">
            <h2 class="activity-title">{activity.data.title}</h2>
            <span class="activity-count">{activityStories.length}</span>
          </div>
          
          {activityStories.map((story) => {
            const feature = story.data.featureId 
              ? features.find(f => f.id === story.data.featureId)
              : null;

            return (
              <a href={`/stories/${story.slug}`} class="story-item">
                <div class="story-item-header">
                  <svg class="story-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                    <polyline points="14 2 14 8 20 8"></polyline>
                  </svg>
                  <span class="story-title">{story.data.title}</span>
                </div>
                <div class="story-meta">
                  <span class="story-description">{story.data.description}</span>
                  <span class={`priority-badge priority-${story.data.priority}`}>
                    {story.data.priority}
                  </span>
                  {story.data.size && (
                    <span class="story-size">{story.data.size}</span>
                  )}
                  {feature && (
                    <span class="story-feature">
                      <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                        <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
                      </svg>
                      {feature.data.title}
                    </span>
                  )}
                </div>
              </a>
            );
          })}
        </div>
      );
    })}

    {stories.length === 0 && (
      <div class="empty-state">
        <svg class="empty-state-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
          <polyline points="14 2 14 8 20 8"></polyline>
          <line x1="16" y1="13" x2="8" y2="13"></line>
          <line x1="16" y1="17" x2="8" y2="17"></line>
          <polyline points="10 9 9 9 8 9"></polyline>
        </svg>
        <p class="empty-state-text">No stories yet</p>
        <p class="empty-state-hint">Create your first story to get started</p>
      </div>
    )}
  </div>
</AppLayout>