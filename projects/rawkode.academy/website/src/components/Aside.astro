---
import {
	ExclamationTriangleIcon,
	LightBulbIcon,
	FireIcon,
	InformationCircleIcon,
} from "@heroicons/vue/24/outline";

interface Props {
	variant: "tip" | "caution" | "danger" | "info";
}

const { variant } = Astro.props as Props;

// Define styles based on variant
let styles = {
	container: "",
	icon: ""
};

switch (variant) {
	case "tip":
		styles.container = "border-l-4 border-green-500 bg-green-100 text-green-800";
		styles.icon = "text-green-600";
		break;
	case "caution":
		styles.container = "border-l-4 border-yellow-500 bg-orange-100 text-orange-800";
		styles.icon = "text-orange-600";
		break;
	case "danger":
		styles.container = "border-l-4 border-red-500 bg-red-100 text-red-800";
		styles.icon = "text-red-600";
		break;
	case "info":
		styles.container = "border-l-4 border-blue-500 bg-blue-100 text-blue-800";
		styles.icon = "text-blue-600";
		break;
}
---

<div class={`aside my-3 rounded-md px-4 py-3 prose-p:my-0 ${styles.container}`}>
	<div class="flex items-center gap-2 pb-2">
		{variant === "tip" && <LightBulbIcon class={`h-7 w-7 ${styles.icon}`} aria-hidden="true" client:only="vue" />}
		{variant === "caution" && <ExclamationTriangleIcon class={`h-7 w-7 ${styles.icon}`} aria-hidden="true" client:only="vue" />}
		{variant === "danger" && <FireIcon class={`h-7 w-7 ${styles.icon}`} aria-hidden="true" client:only="vue" />}
		{variant === "info" && <InformationCircleIcon class={`h-7 w-7 ${styles.icon}`} aria-hidden="true" client:only="vue" />}
		<p class="text-sm font-bold">{variant.toUpperCase()}</p>
	</div>
	<slot />
</div>
