---
import {
	ExclamationTriangleIcon,
	FireIcon,
	InformationCircleIcon,
	LightBulbIcon,
} from "@heroicons/vue/24/outline";

interface Props {
	variant: "tip" | "caution" | "danger" | "info";
}

const { variant } = Astro.props as Props;

// Define styles based on variant
const styles = {
	container: "",
	icon: "",
	iconBg: "",
	border: "",
	glow: "",
};

switch (variant) {
	case "tip":
		styles.container =
			"bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-950/40 dark:to-emerald-950/40 text-green-900 dark:text-green-100";
		styles.icon = "text-green-700 dark:text-green-300";
		styles.iconBg = "bg-green-100 dark:bg-green-900/50";
		styles.border = "border-green-200 dark:border-green-800";
		styles.glow = "shadow-green-100 dark:shadow-green-900/20";
		break;
	case "caution":
		styles.container =
			"bg-gradient-to-r from-amber-50 to-yellow-50 dark:from-amber-950/40 dark:to-yellow-950/40 text-amber-900 dark:text-amber-100";
		styles.icon = "text-amber-700 dark:text-amber-300";
		styles.iconBg = "bg-amber-100 dark:bg-amber-900/50";
		styles.border = "border-amber-200 dark:border-amber-800";
		styles.glow = "shadow-amber-100 dark:shadow-amber-900/20";
		break;
	case "danger":
		styles.container =
			"bg-gradient-to-r from-red-50 to-rose-50 dark:from-red-950/40 dark:to-rose-950/40 text-red-900 dark:text-red-100";
		styles.icon = "text-red-700 dark:text-red-300";
		styles.iconBg = "bg-red-100 dark:bg-red-900/50";
		styles.border = "border-red-200 dark:border-red-800";
		styles.glow = "shadow-red-100 dark:shadow-red-900/20";
		break;
	case "info":
		styles.container =
			"bg-gradient-to-r from-blue-50 to-sky-50 dark:from-blue-950/40 dark:to-sky-950/40 text-blue-900 dark:text-blue-100";
		styles.icon = "text-blue-700 dark:text-blue-300";
		styles.iconBg = "bg-blue-100 dark:bg-blue-900/50";
		styles.border = "border-blue-200 dark:border-blue-800";
		styles.glow = "shadow-blue-100 dark:shadow-blue-900/20";
		break;
}
---

<div
	class={`aside my-3 rounded-lg border ${styles.border} ${styles.container} px-4 py-3 relative overflow-hidden transition-all duration-200 hover:shadow-md group ${styles.glow}`}
>
	<!-- Subtle accent line -->
	<div class={`absolute left-0 top-0 bottom-0 w-0.5 ${styles.iconBg} opacity-60 group-hover:opacity-100 transition-opacity duration-200`}></div>
	
	<!-- Content with inline icon -->
	<div class="flex items-start gap-3">
		<div class={`${styles.iconBg} ${styles.icon} p-1.5 rounded-md flex-shrink-0 transition-transform duration-200 group-hover:scale-105`}>
			{
				variant === "tip" && (
					<LightBulbIcon
						class="h-4 w-4"
						aria-hidden="true"
						client:only="vue"
					/>
				)
			}
			{
				variant === "caution" && (
					<ExclamationTriangleIcon
						class="h-4 w-4"
						aria-hidden="true"
						client:only="vue"
					/>
				)
			}
			{
				variant === "danger" && (
					<FireIcon
						class="h-4 w-4"
						aria-hidden="true"
						client:only="vue"
					/>
				)
			}
			{
				variant === "info" && (
					<InformationCircleIcon
						class="h-4 w-4"
						aria-hidden="true"
						client:only="vue"
					/>
				)
			}
		</div>
		<div class="flex-1 min-w-0 prose-p:my-0 -mt-0.5">
			<div class="flex items-center gap-2 mb-1">
				<span class="text-[10px] font-semibold tracking-wider opacity-60 uppercase">
					{variant}
				</span>
			</div>
			<slot />
		</div>
	</div>
</div>

<style>
	@reference "@/styles/global.css";

	/* Ensure proper prose spacing */
	.aside :global(p) {
		@apply leading-relaxed;
	}

	.aside :global(p:not(:first-child)) {
		@apply mt-2;
	}

	/* Refined link styling */
	.aside :global(a) {
		@apply font-medium underline decoration-1 underline-offset-2 transition-all duration-200;
	}

	.aside.border-green-200 :global(a) {
		@apply text-green-700 decoration-green-500/50 hover:text-green-800 hover:decoration-green-600;
		@apply dark:text-green-300 dark:decoration-green-400/50 dark:hover:text-green-200 dark:hover:decoration-green-300;
	}

	.aside.border-amber-200 :global(a) {
		@apply text-amber-700 decoration-amber-500/50 hover:text-amber-800 hover:decoration-amber-600;
		@apply dark:text-amber-300 dark:decoration-amber-400/50 dark:hover:text-amber-200 dark:hover:decoration-amber-300;
	}

	.aside.border-red-200 :global(a) {
		@apply text-red-700 decoration-red-500/50 hover:text-red-800 hover:decoration-red-600;
		@apply dark:text-red-300 dark:decoration-red-400/50 dark:hover:text-red-200 dark:hover:decoration-red-300;
	}

	.aside.border-blue-200 :global(a) {
		@apply text-blue-700 decoration-blue-500/50 hover:text-blue-800 hover:decoration-blue-600;
		@apply dark:text-blue-300 dark:decoration-blue-400/50 dark:hover:text-blue-200 dark:hover:decoration-blue-300;
	}

	/* Subtle shadow on hover */
	.aside {
		box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.05);
	}

	.aside:hover {
		box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	}
</style>