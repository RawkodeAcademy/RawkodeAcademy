---
export interface Props {
  variant?: 'default' | 'elevated' | 'outlined';
  padding?: 'none' | 'sm' | 'md' | 'lg';
  class?: string;
  hoverable?: boolean;
}

const {
  variant = 'default',
  padding = 'md',
  class: className = '',
  hoverable = false,
  ...rest
} = Astro.props;

// Base styles using design tokens
const baseStyles = [
  'rounded-[--radius-card]',
  'border border-gray-100 dark:border-gray-700',
  'transition-all duration-[--duration-base]',
].join(' ');

// Variant styles
const variantStyles = {
  default: [
    'bg-white dark:bg-gray-800',
  ].join(' '),
  elevated: [
    'bg-white dark:bg-gray-800',
    'shadow-[--shadow-card]',
  ].join(' '),
  outlined: [
    'bg-transparent',
    'border-2',
  ].join(' '),
};

// Padding styles using design tokens
const paddingStyles = {
  none: '',
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8',
};

// Hover styles
const hoverStyles = hoverable ? [
  'hover:shadow-xl hover:shadow-gray-200/50 dark:hover:shadow-gray-800/50',
  'hover:border-primary/30 dark:hover:border-primary/30',
  'hover:-translate-y-1',
  'cursor-pointer',
].join(' ') : '';

const cardClasses = [
  baseStyles,
  variantStyles[variant],
  paddingStyles[padding],
  hoverStyles,
  className,
].filter(Boolean).join(' ');
---

<div class={cardClasses} {...rest}>
  <slot />
</div>