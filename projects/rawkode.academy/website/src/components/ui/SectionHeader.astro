---
interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  alignment?: 'left' | 'center' | 'right';
  titleLevel?: 'h1' | 'h2' | 'h3' | 'h4';
  class?: string;
}

const {
  title,
  subtitle,
  description,
  alignment = 'center',
  titleLevel = 'h2',
  class: className = '',
} = Astro.props;

const alignmentClasses = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right',
};

const titleClasses = 'text-3xl font-bold tracking-tight text-gray-900 dark:text-white lg:text-4xl';
const subtitleClasses = 'text-lg font-medium text-primary mb-2';
const descriptionClasses = 'text-lg text-gray-600 dark:text-gray-300 max-w-3xl';

// Center description if alignment is center
const descriptionWrapperClasses = alignment === 'center' ? 'mx-auto' : '';

const TitleComponent = titleLevel;
---

<div class={`mb-10 ${alignmentClasses[alignment]} ${className}`.trim()}>
  {subtitle && (
    <p class={subtitleClasses}>{subtitle}</p>
  )}
  <TitleComponent class={titleClasses}>
    {title}
  </TitleComponent>
  {description && (
    <div class={descriptionWrapperClasses}>
      <p class={descriptionClasses}>{description}</p>
    </div>
  )}
</div>