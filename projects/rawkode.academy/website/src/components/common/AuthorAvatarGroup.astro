---
import type { CollectionEntry } from "astro:content";

type Props = {
	authors: CollectionEntry<"people">[];
	maxDisplay?: number;
	showNames?: boolean;
	showActiveIndicator?: boolean;
};

const {
	authors,
	maxDisplay = 3,
	showNames = true,
	showActiveIndicator = true,
} = Astro.props;
const displayAuthors = authors.slice(0, maxDisplay);
const remainingCount = authors.length - maxDisplay;
---

<div class="flex items-center space-x-3">
	<div class="flex -space-x-3">
		{displayAuthors.map((author, index) => (
			<div key={author.data.handle} class="relative" style={`z-index: ${10 - index}`}>
				<img
					class="w-10 h-10 rounded-full object-cover border-2 border-purple-500 p-0.5 bg-white"
					src={`https://github.com/${author.data.handle}.png`}
					alt={`Profile picture of ${author.data.name}`}
				/>
				{showActiveIndicator && index === 0 && (
					<span class="absolute bottom-0 right-0 h-2.5 w-2.5 bg-green-400 rounded-full border-2 border-white dark:border-gray-800"></span>
				)}
			</div>
		))}
		{remainingCount > 0 && (
			<div class="relative" style="z-index: 0;">
				<div class="w-10 h-10 rounded-full bg-purple-100 border-2 border-purple-500 p-0.5 bg-white flex items-center justify-center text-xs text-purple-800 font-medium">
					+{remainingCount}
				</div>
			</div>
		)}
	</div>
	{showNames && (
		<div class="font-medium dark:text-white">
			<div class="text-sm">{authors.map((author) => author.data.name).join(", ")}</div>
		</div>
	)}
</div>