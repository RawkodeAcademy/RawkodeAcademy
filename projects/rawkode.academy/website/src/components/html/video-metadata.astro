---
interface Props {
	title: string;
	description: string;
	thumbnailUrl?: string;
	publishedAt?: string;
	duration?: number;
	streamUrl?: string;
	isVideoList?: boolean;
}

const {
	title,
	description,
	thumbnailUrl,
	publishedAt,
	duration,
	streamUrl,
	isVideoList = false,
} = Astro.props;

// Format duration from seconds to ISO 8601
function formatDuration(seconds: number): string {
	const hours = Math.floor(seconds / 3600);
	const minutes = Math.floor((seconds % 3600) / 60);
	const remainingSeconds = Math.floor(seconds % 60);

	let result = "PT";
	if (hours > 0) {
		result += `${hours}H`;
	}
	if (minutes > 0) {
		result += `${minutes}M`;
	}
	if (remainingSeconds > 0 || (hours === 0 && minutes === 0)) {
		result += `${remainingSeconds}S`;
	}
	return result;
}

const formattedDuration = formatDuration(duration ?? 0);

// Generate structured data
const structuredData = isVideoList
	? {
			"@context": "https://schema.org",
			"@type": "ItemList",
			name: title,
			description: description,
			url: Astro.url.href,
		}
	: {
			"@context": "https://schema.org",
			"@type": "VideoObject",
			name: title,
			description: description,
			thumbnailUrl: thumbnailUrl,
			uploadDate: publishedAt,
			duration: formattedDuration,
			contentUrl: streamUrl,
			embedUrl: streamUrl, // Required for Google Video Search
			url: Astro.url.href,
			// Additional required/recommended properties for Google Video Search
			publisher: {
				"@type": "Organization",
				name: "Rawkode Academy",
				logo: {
					"@type": "ImageObject",
					url: "https://rawkode.academy/android-chrome-512x512.png",
					width: 512,
					height: 512,
				},
			},
			creator: {
				"@type": "Person",
				name: "David McKay",
				url: "https://rawkode.academy",
			},
			interactionStatistic: {
				"@type": "InteractionCounter",
				interactionType: { "@type": "WatchAction" },
				userInteractionCount: 0, // This would ideally come from your analytics
			},
			expires: null, // Videos don't expire
			hasPart: [], // Could add chapters here if available
			isAccessibleForFree: true,
			isLiveBroadcast: false,
			isFamilyFriendly: true,
			inLanguage: "en-US",
			// Video quality information
			videoFrameSize: "1920x1080",
			videoQuality: "HD",
		};
---

<!-- Video-specific meta tags -->
<meta property="og:type" content={isVideoList ? "website" : "video.other"} />
{!isVideoList && streamUrl && <meta property="og:video" content={streamUrl} />}
{!isVideoList && streamUrl && <meta property="og:video:url" content={streamUrl} />}
{!isVideoList && thumbnailUrl && <meta property="og:video:thumbnail" content={thumbnailUrl} />}
{!isVideoList && duration && <meta property="og:video:duration" content={formattedDuration} />}

<!-- Additional SEO meta tags -->
<meta name="twitter:card" content={thumbnailUrl ? "summary_large_image" : "summary"} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
{thumbnailUrl && <meta name="twitter:image" content={thumbnailUrl} />}

<!-- Structured Data -->
<script is:inline type="application/ld+json" set:html={JSON.stringify(structuredData)} />
