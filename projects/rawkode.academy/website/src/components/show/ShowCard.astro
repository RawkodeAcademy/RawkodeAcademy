---
import type { ShowSummary } from "@/types/show";

interface Props {
        show: ShowSummary;
}

const { show } = Astro.props as Props;

const hostNames = (show.hosts ?? [])
        .map((host) => [host.forename, host.surname].filter(Boolean).join(" "))
        .filter(Boolean);

const episodes = (show.episodes ?? []).filter((ep): ep is NonNullable<typeof ep> => ep !== null && ep.video !== null);

const latestEpisode = episodes
        .filter(ep => ep.video?.thumbnailUrl && ep.video?.publishedAt)
        .sort((a, b) => {
                const aTime = new Date(a.video!.publishedAt!).getTime();
                const bTime = new Date(b.video!.publishedAt!).getTime();
                return bTime - aTime;
        })[0];

const thumbnailUrl = latestEpisode?.video?.thumbnailUrl;
const latestEpisodeTitle = latestEpisode?.video?.title;
---

<a
        href={`/shows/${show.id}`}
        class="group flex h-full flex-col overflow-hidden rounded-xl border border-gray-200 bg-white shadow-sm transition-all duration-200 hover:-translate-y-1 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-primary/40 dark:border-gray-800 dark:bg-gray-900"
>
        {thumbnailUrl ? (
                <div class="relative aspect-video w-full overflow-hidden bg-gray-100 dark:bg-gray-800">
                        <img
                                src={thumbnailUrl}
                                alt={`Latest episode from ${show.name}`}
                                class="h-full w-full object-cover transition-transform duration-200 group-hover:scale-105"
                                loading="lazy"
                        />
                        {episodes.length > 0 && (
                                <div class="absolute bottom-2 right-2 rounded-md bg-black/75 px-2 py-1 text-xs font-medium text-white backdrop-blur-sm">
                                        {episodes.length} {episodes.length === 1 ? "episode" : "episodes"}
                                </div>
                        )}
                </div>
        ) : (
                <div class="relative aspect-video w-full bg-gradient-to-br from-primary/10 to-secondary/10 dark:from-primary/20 dark:to-secondary/20">
                        <div class="flex h-full items-center justify-center">
                                <svg
                                        class="h-16 w-16 text-gray-300 dark:text-gray-600"
                                        fill="none"
                                        viewBox="0 0 24 24"
                                        stroke="currentColor"
                                        aria-hidden="true"
                                >
                                        <path
                                                stroke-linecap="round"
                                                stroke-linejoin="round"
                                                stroke-width="1.5"
                                                d="M6.75 7.5l3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0021 18V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v12a2.25 2.25 0 002.25 2.25z"
                                        />
                                </svg>
                        </div>
                        {episodes.length > 0 && (
                                <div class="absolute bottom-2 right-2 rounded-md bg-black/75 px-2 py-1 text-xs font-medium text-white backdrop-blur-sm">
                                        {episodes.length} {episodes.length === 1 ? "episode" : "episodes"}
                                </div>
                        )}
                </div>
        )}
        <div class="flex flex-1 flex-col justify-between p-6">
                <div class="space-y-2">
                        <h3 class="line-clamp-2 text-xl font-semibold text-gray-900 dark:text-white">
                                {show.name}
                        </h3>
                        <p class="line-clamp-2 text-sm text-gray-500 dark:text-gray-400">
                                {hostNames.length > 0 ? (
                                        <>
                                                <span class="font-medium">Hosted by:</span> {hostNames.join(", ")}
                                        </>
                                ) : (
                                        "Hosts to be announced"
                                )}
                        </p>
                        {latestEpisodeTitle && (
                                <p class="line-clamp-1 text-xs text-gray-400 dark:text-gray-500">
                                        Latest: {latestEpisodeTitle}
                                </p>
                        )}
                </div>
                <div class="mt-4 flex items-center text-sm font-medium text-primary dark:text-primary-300">
                        <span>View episodes</span>
                        <svg
                                class="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1"
                                viewBox="0 0 20 20"
                                fill="none"
                                xmlns="http://www.w3.org/2000/svg"
                                aria-hidden="true"
                        >
                                <path
                                        d="M7.5 5L12.5 10L7.5 15"
                                        stroke="currentColor"
                                        stroke-width="1.5"
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                />
                        </svg>
                </div>
        </div>
</a>
