---
import { Image } from "astro:assets";
import { type CollectionEntry, getEntries } from "astro:content";
import AuthorAvatarGroup from "../common/AuthorAvatarGroup.vue";
import BaseCard from "../common/BaseCard.vue";
import FormattedDate from "../common/FormattedDate.vue";
import { calculateReadingTime } from "@/utils/reading-time";
import { getTypeBadgeConfig } from "@/utils/article-types";

type Props = {
	article: CollectionEntry<"articles">;
};

const { article } = Astro.props;
const authors = await getEntries(article.data.authors);
const readingTime = calculateReadingTime(article.body || "");

const articleType = article.data.type || "tutorial";
const badgeConfig = getTypeBadgeConfig(articleType);
---

<BaseCard href={`/read/${article.id}`}>
	<Fragment slot="cover">
		<div class="absolute inset-0 bg-linear-to-tr from-purple-600/30 to-indigo-600/30 mix-blend-multiply z-10"></div>
		{
			article.data.cover ? (
				<Image
					class="w-full h-52 object-cover"
					src={article.data.cover.image}
					alt={article.data.cover.alt}
					loading="lazy"
				/>
			) : (
				<img
					class="w-full h-52 object-cover"
					src="https://flowbite.s3.amazonaws.com/blocks/marketing-ui/blog/office-laptops.png"
					alt="Default placeholder image for article without custom cover"
					loading="lazy"
				/>
			)
		}
	</Fragment>
	<Fragment slot="badge">
		<span class={`${badgeConfig.bg} ${badgeConfig.text} text-xs font-semibold px-2.5 py-1 rounded-full backdrop-blur-sm shadow-md`}>
			{badgeConfig.label}
		</span>
	</Fragment>
	<Fragment slot="content">
		<h2 class="mb-3 text-xl font-bold tracking-tight text-gray-900 dark:text-white line-clamp-2">
			{article.data.title}
		</h2>
		{article.data.openGraph?.subtitle && (
			<p class="mb-4 font-light text-gray-500 dark:text-gray-400 line-clamp-3">
				{article.data.openGraph?.subtitle}
			</p>
		)}
	</Fragment>
	<Fragment slot="footer">
		<div class="flex items-center justify-between">
			<AuthorAvatarGroup authors={authors} />
			<div class="flex items-center gap-3 text-sm text-gray-500 dark:text-gray-400">
				<span class="flex items-center gap-1">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
					</svg>
					{readingTime.text}
				</span>
				<FormattedDate date={article.data.publishedAt} showIcon={true} />
			</div>
		</div>
	</Fragment>
</BaseCard>