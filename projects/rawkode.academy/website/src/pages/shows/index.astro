---
import Layout from '../../layouts/page.astro';
import "../../styles/shows.css";
interface Show {
  name: string;
  id: string;
  episodes_aggregate: {
    aggregate: {
      count: number;
    }
  };
}
const response = await fetch("https://api.rawkode.academy/v1/graphql",
  {
    method: 'POST',
    headers: {'Content-Type':'application/json'},
    body: JSON.stringify({
      query: `
        query MyQuery {
          getShows {
            id
            name
            episodes_aggregate {
              aggregate {
                count
              }
            }
          }
        }
        `
    }),
  });
const json = await response.json();
const shows = json.data ? json.data.getShows : [];
const breadcrumbs = [{
  title: 'Shows',
  href: '/shows'
}]
---
<Layout
  title="Shows | Rawkode Academy - The Cloud Native Education Platform"
  breadcrumbs={breadcrumbs}
>
  <div class="shows__page">
    <div class="shows__heading">
      <h1>Shows</h1>
      <p>New shows every week with the latest tips, tricks and deep dives into all things Cloud Native, Kubernetes, DevOps and so much more.</p>
    </div>
    <div class="shows__container">
      {shows.map((show: Show) => (
        <a href={`/shows/${show.id}`} class="shows__card">
          <div class="card__image">
            <img src="/academy-logo-circular.svg" height="128" width="128" />
          </div>
          <div class="card__copy">
            <p class="card__heading"><strong>{show.name}</strong></p>
            <p class="card__sub-heading">{show.episodes_aggregate.aggregate.count} {show.episodes_aggregate.aggregate.count === 1?'episode':'episodes'}</p>
            <p class="card__description">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed maximus risus ac justo imperdiet, sed pretium neque maximus.
            </p>
          </div>
        </a>
      ))}
    </div>
  </div>
</Layout>
