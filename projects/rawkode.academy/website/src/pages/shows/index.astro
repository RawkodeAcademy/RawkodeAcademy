---
export const prerender = false;

import { GRAPHQL_ENDPOINT } from "astro:env/server";
import ShowCard from "@/components/show/ShowCard.astro";
import Page from "@/wrappers/page.astro";

interface Host {
        forename?: string | null;
        surname?: string | null;
}

interface Show {
        id: string;
        name: string;
        hosts?: Host[] | null;
}

const showsQuery = `
  query AllShows {
    allShows {
      id
      name
      hosts {
        forename
        surname
      }
    }
  }
`;

Astro.response.headers.set(
        "Cache-Control",
        "public, max-age=300, s-maxage=3600, stale-while-revalidate=86400",
);
Astro.response.headers.set("CDN-Cache-Control", "public, max-age=3600");
Astro.response.headers.set("Cache-Tag", "shows-page, shows-list");
Astro.response.headers.set("X-Build-Time", new Date().toISOString());

let shows: Show[] = [];
let status: "loading" | "success" | "empty" | "error" = "loading";
let errorMessage = "";

try {
        const response = await fetch(GRAPHQL_ENDPOINT, {
                method: "POST",
                headers: {
                        "Content-Type": "application/json",
                },
                body: JSON.stringify({
                        query: showsQuery,
                }),
        });

        if (!response.ok) {
                throw new Error(`Failed to load shows: ${response.status} ${response.statusText}`);
        }

        const body: { data?: { allShows?: Show[] | null }; errors?: Array<{ message?: string }> } =
                await response.json();

        if (body.errors?.length) {
                const firstError = body.errors[0]?.message || "Unknown error";
                throw new Error(firstError);
        }

        shows = Array.isArray(body.data?.allShows)
                ? body.data?.allShows.filter((show): show is Show => Boolean(show?.id && show?.name))
                : [];

        status = shows.length > 0 ? "success" : "empty";
} catch (error) {
        status = "error";
        errorMessage = error instanceof Error ? error.message : "Unable to load shows.";
}
---

<Page title="Shows">
        <section class="py-12">
                <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
                        <div class="text-center">
                                <h1 class="text-3xl font-extrabold text-gray-900 dark:text-white sm:text-4xl">
                                        Shows
                                </h1>
                                <p class="mt-4 text-lg text-gray-500 dark:text-gray-400">
                                        Browse our shows and meet the hosts behind every episode.
                                </p>
                        </div>

                        <div class="mt-12">
                                {status === "loading" && (
                                        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
                                                {Array.from({ length: 6 }).map(() => (
                                                        <div
                                                                class="h-36 animate-pulse rounded-xl border border-gray-200 bg-gray-100 dark:border-gray-800 dark:bg-gray-800"
                                                                aria-hidden="true"
                                                        />
                                                ))}
                                        </div>
                                )}

                                {status === "error" && (
                                        <div class="rounded-xl border border-red-200 bg-red-50 p-8 text-center dark:border-red-900/60 dark:bg-red-900/30">
                                                <p class="text-base font-semibold text-red-700 dark:text-red-300">
                                                        We couldn&apos;t load the shows right now.
                                                </p>
                                                <p class="mt-2 text-sm text-red-600 dark:text-red-200">
                                                        {errorMessage}
                                                </p>
                                        </div>
                                )}

                                {status === "empty" && (
                                        <div class="rounded-xl border border-gray-200 bg-gray-50 p-8 text-center dark:border-gray-800 dark:bg-gray-900/40">
                                                <p class="text-base text-gray-600 dark:text-gray-300">
                                                        No shows available just yet. Please check back soon!
                                                </p>
                                        </div>
                                )}

                                {status === "success" && (
                                        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
                                                {shows.map((show) => (
                                                        <ShowCard show={show} />
                                                ))}
                                        </div>
                                )}
                        </div>
                </div>
        </section>
</Page>
