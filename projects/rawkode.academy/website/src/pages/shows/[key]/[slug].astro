---
import Layout from "../../../layouts/page.astro";
import "../../../styles/episode.css";

export const getStaticPaths = async () => {
  const response = await fetch("https://api.rawkode.academy/v1/graphql", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: `
      query MyQuery {
        getEpisodes {
          title
          live
          links
          guests {
            name
          }
          scheduled_for
          youtube_id
          chapters
          show {
            name
          }
        }
      }
        `,
    }),
  });
  const json = await response.json();

  return json.data.getEpisodes.map((episode) => {
    return {
      params: {
        key: episode.show.name.toLowerCase().replace(/ /g, "-"),
        slug: episode.youtube_id,
      },
      props: {
        episode,
      },
    };
  });
};

const breadcrumbs = [
  {
    title: "Shows",
    href: "/shows",
  },
];

let startTime = "0";

const convertToSeconds = (hours, minutes, seconds) => {
  return Number(hours) * 3600 + Number(minutes) * 60 + Number(seconds);
};

const { key, slug } = Astro.params;
const { episode } = Astro.props;
---

<Layout
  title={`${episode.title} | ${episode.show.name} | Rawkode Academy`}
  breadcrumbs={breadcrumbs}
>
  <div class="episode__page">
    <div class="episode__container">
      <div class="episode__heading">
        <a href={`/shows/${key}`}
          ><img
            src="/chevron-left.svg"
            alt="chevron left"
            height="24"
            width="24"
          />Back to {episode.show.name}</a
        >
        <h1>{episode.title}</h1>
      </div>
      <div class="episode__video">
        <iframe
          width="1280"
          height="620"
          src={`https://www.youtube.com/embed/${episode.youtube_id}?&autoplay=1&mute=1&playsinline=1&start=${startTime}`}
          title="YouTube video player"
          frameborder="0"
          allowfullscreen></iframe>
      </div>
    </div>
    <div class="episode__container">
      <div class="episode__chapters">
        <h2>Chapters</h2>
        <div class="episode__chapter-list">
          {
            episode.chapters.map((chapter) => {
              return (
                <button
                  type="button"
                  class="button--chapter"
                  data-time={convertToSeconds(
                    chapter.time.split(":")[0],
                    chapter.time.split(":")[1],
                    chapter.time.split(":")[2]
                  )}
                >
                  <>
                    <span>{chapter.title}</span>
                    <span>{chapter.time}</span>
                  </>
                </button>
              );
            })
          }
        </div>
      </div>
      <div class="episode__links">
        <h2>Links</h2>
        {
          episode.links.map((link) => {
            return (
              <a href={link} target="_blank" rel="noreferrer">
                {link}
              </a>
            );
          })
        }
      </div>
    </div>
  </div>
</Layout>

<script>
  const buttons = document.querySelectorAll(".button--chapter");
  buttons.forEach((button) => {
    button.addEventListener("click", (event) => {
      const time = event.currentTarget.getAttribute("data-time");
      if (time) {
        let url = document.querySelector("iframe").src;
        const newUrl = `${url.split("&start=")[0]}&start=${time}`;
        document.querySelector("iframe").src = newUrl;
      }
    });
  });
</script>
