---
import { Image } from "astro:assets";
import { getCollection, getEntries } from "astro:content";
import ArticleCard from "@/components/articles/ArticleCard.astro";
import Button from "@/components/common/Button.vue";
import SectionHeader from "@/components/common/SectionHeader.vue";
import Page from "@/wrappers/page.astro";

export const prerender = true;

// Get all blog posts and sort by date
const allArticles = (await getCollection("articles"))
	.filter((article) => !article.data.isDraft)
	.sort((a, b) => b.data.publishedAt.getTime() - a.data.publishedAt.getTime());

// Get featured posts (latest 3)
const featuredPosts = allArticles.slice(0, 3);
const latestPost = featuredPosts[0];
const latestPostAuthors = latestPost
	? await getEntries(latestPost.data.authors)
	: [];

// Function to format dates
function formatDate(date: Date): string {
	return new Intl.DateTimeFormat("en-US", {
		year: "numeric",
		month: "short",
		day: "numeric",
	}).format(date);
}

const pageTitle = "Cloud Native & Kubernetes Articles | Rawkode Academy";
const pageDescription =
	"Deep dive into cloud native technologies, Kubernetes, observability, and more. Articles written by practitioners for practitioners at Rawkode Academy.";
---

<Page title={pageTitle} description={pageDescription}>
  <style>
    @reference "@/styles/global.css";

    /* Core styles */
    .primary-gradient {
      @apply bg-linear-to-r from-primary to-secondary;
    }

    .text-gradient {
      @apply bg-clip-text text-transparent bg-linear-to-r from-primary to-secondary;
    }

    .article-card {
      @apply transition-all duration-300 hover:-translate-y-2 hover:shadow-xl;
    }

    .terminal {
      @apply font-mono rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700;
    }

    .terminal-header {
      @apply flex items-center p-2 bg-gray-100 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700;
    }

    .terminal-body {
      @apply p-4 bg-white dark:bg-gray-900;
    }

    .terminal-prompt::before {
      content: "$ ";
      @apply text-primary;
    }

    .terminal-output {
      @apply pl-4 my-2;
    }

    /* Animation */
    @keyframes gradientShift {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    .animate-gradient {
      background-size: 200% 200%;
      animation: gradientShift 15s ease infinite;
    }

    .particle {
      position: absolute;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.5);
      pointer-events: none;
    }

    /* Filter button styles */
    .filter-btn {
      @apply px-3 py-1 rounded-full text-sm font-medium transition-all duration-200;
    }

    .filter-btn:not(.active) {
      @apply bg-gray-100 text-gray-600 dark:bg-gray-800 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700;
    }

    .filter-btn.active {
      @apply bg-primary text-white;
    }

    /* Grid layout - simplified since we removed featured grid */
    .article-card {
      @apply transition-all duration-300 hover:-translate-y-2 hover:shadow-xl;
    }

    /* Scrolling animation */
    .scroll-prompt {
      animation: bounce 2s infinite;
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-10px);
      }
      60% {
        transform: translateY(-5px);
      }
    }
  </style>

  <!-- Compact Hero Section with Featured Article -->
  <section class="relative overflow-hidden bg-gradient-to-b from-gray-50 to-white dark:from-gray-900 dark:to-gray-800">
    <!-- Background decoration -->
    <div class="absolute inset-0 pointer-events-none">
      <div class="absolute top-0 left-1/4 w-96 h-96 bg-purple-200 dark:bg-purple-900 rounded-full opacity-20 blur-3xl"></div>
      <div class="absolute bottom-0 right-1/4 w-96 h-96 bg-blue-200 dark:bg-blue-900 rounded-full opacity-20 blur-3xl"></div>
    </div>
    
    <div class="relative z-10 container mx-auto px-4 py-12">
      <div class="max-w-6xl mx-auto">
        <!-- Header Content -->
        <div class="text-center mb-12">
          <div class="mb-4">
            <span class="px-3 py-1 text-sm font-semibold rounded-full bg-primary text-white shadow-lg">Cloud Native Knowledge</span>
          </div>
          
          <h1 class="text-4xl md:text-5xl font-extrabold text-gray-900 dark:text-white mb-6">
            Articles
          </h1>
          
          <p class="text-lg md:text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto">
            Deep dive into cloud native technologies, Kubernetes, observability, and more. Written by practitioners for practitioners.
          </p>
          
          <div class="flex flex-wrap items-center justify-center gap-6 text-sm text-gray-500 dark:text-gray-400 mb-8">
            <span>{allArticles.length} Articles</span>
            <span>Updated Weekly</span>
            <span>Community Driven</span>
          </div>
        </div>

        <!-- Featured Latest Article -->
        {latestPost && (
          <div class="bg-white dark:bg-gray-800 rounded-xl shadow-xl overflow-hidden border border-gray-200 dark:border-gray-700">
            <div class="flex flex-col lg:flex-row">
              <!-- Article Image -->
              <div class="lg:w-1/2 relative">
                <div class="absolute inset-0 bg-linear-to-t from-black/30 to-transparent z-10"></div>
                
                {latestPost.data.cover ? (
                  <Image
                    src={latestPost.data.cover.image}
                    alt={latestPost.data.cover.alt}
                    class="w-full h-64 lg:h-full object-cover"
                  />
                ) : (
                  <div class="w-full h-64 lg:h-full bg-linear-to-br from-primary/30 to-secondary/30"></div>
                )}

                <div class="absolute top-4 left-4 z-20">
                  <span class="px-3 py-1 text-xs font-semibold rounded-full bg-primary text-white shadow-lg">
                    Latest Article
                  </span>
                </div>
              </div>

              <!-- Article Content -->
              <div class="lg:w-1/2 p-8 flex flex-col justify-center">
                <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-4">
                  {latestPost.data.title}
                </h2>

                {latestPost.data.openGraph.subtitle && (
                  <p class="text-gray-600 dark:text-gray-400 mb-6 line-clamp-3">
                    {latestPost.data.openGraph.subtitle}
                  </p>
                )}

                <div class="flex items-center justify-between mb-6">
                  <div class="flex items-center">
                    <div class="flex -space-x-2">
                      {latestPostAuthors.slice(0, 3).map(author => (
                        <img
                          class="w-8 h-8 rounded-full object-cover border-2 border-white dark:border-gray-800"
                          src={`https://github.com/${author.data.handle}.png`}
                          alt={`Profile picture of ${author.data.name}`}
                        />
                      ))}
                    </div>
                    <span class="ml-3 text-sm text-gray-600 dark:text-gray-400">
                      By {latestPostAuthors.map(author => author.data.name).join(", ")}
                    </span>
                  </div>

                  <div class="flex items-center text-gray-500 dark:text-gray-400 text-sm">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    {formatDate(latestPost.data.publishedAt)}
                  </div>
                </div>

                <div class="flex gap-4">
                  <Button href={`/read/${latestPost.id}`} variant="primary" size="lg">
                    Read Article
                  </Button>
                  <Button href="#main-content" variant="secondary" size="lg">
                    Browse All
                  </Button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  </section>

  <!-- Main Content -->
  <section id="main-content" class="py-16 bg-white dark:bg-gray-900">
    <div class="container mx-auto px-4 md:px-6">

      <!-- Featured Articles (excluding latest which is in hero) -->
      {featuredPosts.slice(1).length > 0 && (
        <div class="mb-16">
          <SectionHeader title="Featured Articles" />

          <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
            {featuredPosts.slice(1).map(post => (
              <div class="article-card h-full">
                <ArticleCard article={post} />
              </div>
            ))}
          </div>
        </div>
      )}

      <!-- All Articles -->
      <div>
        <SectionHeader title="All Articles" />

        <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {allArticles.map(article => (
            <div class="article-card h-full">
              <ArticleCard article={article} />
            </div>
          ))}
        </div>
      </div>

    </div>
  </section>
</Page>
