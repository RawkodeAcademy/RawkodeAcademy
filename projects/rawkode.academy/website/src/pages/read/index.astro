---
import { getCollection, getEntries } from "astro:content";
import ArticleCard from "@/components/articles/ArticleCard.astro";
import FeaturedContent from "@/components/common/FeaturedContent.astro";
import SectionHeader from "@/components/common/SectionHeader.vue";
import Page from "@/wrappers/page.astro";

export const prerender = true;

const allArticles = await getCollection("articles");

// Sort articles by publication date
allArticles.sort(
	(a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf(),
);

// Featured posts are the first 3
const featuredPosts = allArticles.slice(0, 3);
const latestPost = featuredPosts[0];

const latestPostAuthors = latestPost
	? await getEntries(latestPost.data.authors)
	: [];

// Get remaining posts (skip the first one since it's featured)
const remainingPosts = allArticles.slice(1);

const pageTitle = "Cloud Native & Kubernetes Articles | Rawkode Academy";
const pageDescription =
	"Deep dive into cloud native technologies, Kubernetes, observability, and more. Articles written by practitioners for practitioners at Rawkode Academy.";
---

<Page title={pageTitle} description={pageDescription}>
  <style>
    @reference "@/styles/global.css";

    /* Core styles */
    .primary-gradient {
      @apply bg-linear-to-r from-primary to-secondary;
    }

    .text-gradient {
      @apply bg-clip-text text-transparent bg-linear-to-r from-primary to-secondary;
    }

    .article-card {
      @apply transition-all duration-300 hover:-translate-y-2 hover:shadow-xl;
    }

    .terminal {
      @apply font-mono rounded-lg overflow-hidden border border-gray-200 dark:border-gray-700;
    }

    .terminal-header {
      @apply flex items-center p-2 bg-gray-100 dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700;
    }

    .terminal-body {
      @apply p-4 bg-white dark:bg-gray-900;
    }

    .terminal-prompt::before {
      content: "$ ";
      @apply text-primary;
    }

    .terminal-output {
      @apply pl-4 my-2;
    }

    /* Animation */
    @keyframes gradientShift {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    .animate-gradient {
      background-size: 200% 200%;
      animation: gradientShift 15s ease infinite;
    }

    .particle {
      position: absolute;
      border-radius: 50%;
      background-color: rgba(255, 255, 255, 0.5);
      pointer-events: none;
    }

    /* Filter button styles */
    .filter-btn {
      @apply px-3 py-1 rounded-full text-sm font-medium transition-all duration-200;
    }

    .filter-btn:not(.active) {
      @apply bg-gray-100 text-gray-600 dark:bg-gray-800 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700;
    }

    .filter-btn.active {
      @apply bg-primary text-white;
    }

    /* Scrolling animation */
    .scroll-prompt {
      animation: bounce 2s infinite;
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
      }
      40% {
        transform: translateY(-10px);
      }
      60% {
        transform: translateY(-5px);
      }
    }
  </style>

  <!-- Featured Content Section -->
  {latestPost && (
    <FeaturedContent
      type="article"
      title={latestPost.data.title}
      description={latestPost.data.openGraph?.subtitle || latestPost.data.description}
      thumbnailUrl={typeof latestPost.data.cover?.image === 'string' ? latestPost.data.cover.image : latestPost.data.cover?.image?.src || "https://flowbite.s3.amazonaws.com/blocks/marketing-ui/blog/office-laptops.png"}
      thumbnailAlt={latestPost.data.cover?.alt || "Article cover image"}
      author={latestPostAuthors.map(author => author.data.name).join(", ")}
      date={latestPost.data.publishedAt.toISOString()}
      href={`/read/${latestPost.id}`}
      ctaText="Read Article"
      articleType={latestPost.data.type}
    />
  )}

  <!-- Main Content -->
  <section class="py-16 bg-gray-50 dark:bg-gray-900">
    <div class="container mx-auto px-4 md:px-6">
      <!-- All Articles -->
      <div>
        <SectionHeader title="All Articles" />

        <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
          {remainingPosts.map(article => (
            <div class="article-card h-full">
              <ArticleCard article={article} />
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
</Page>