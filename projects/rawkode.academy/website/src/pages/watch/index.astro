---
export const prerender = false;

import Button from "@/components/common/Button.vue";
import PageHero from "@/components/common/PageHero.vue";
import VideoMetadata from "@/components/html/video-metadata.astro";
import VideoFeed from "@/components/video/video-feed.astro";
import Page from "@/wrappers/page.astro";

// Set cache headers for ISR
// Client cache: 5 minutes, Edge cache: 1 hour, Serve stale content for 24 hours during revalidation
Astro.response.headers.set(
	"Cache-Control",
	"public, max-age=300, s-maxage=3600, stale-while-revalidate=86400",
);
Astro.response.headers.set("CDN-Cache-Control", "public, max-age=3600");

// Add cache tags for targeted invalidation
Astro.response.headers.set(
	"Cache-Tag",
	"videos-page, videos-list, videos-latest",
);

// Add build timestamp for debugging
Astro.response.headers.set("X-Build-Time", new Date().toISOString());

const latestVideosQuery = `
  query GetLatestVideos($limit: Int!) {
    getLatestVideos(limit: $limit) {
      title
      thumbnailUrl
      duration
      slug
      publishedAt
      streamUrl
    }
  }
`;

const randomVideosQuery = `
  query GetRandomVideos($limit: Int!) {
    getRandomVideos(limit: $limit) {
      title
      thumbnailUrl
      duration
      slug
      publishedAt
      streamUrl
    }
  }
`;
---

<Page title="Videos">
	<VideoMetadata
		slot="extra-head"
		title="Rawkode Academy Videos"
		description="Explore our collection of educational videos about cloud native technologies, development practices, and more."
		isVideoList={true}
	/>

	<!-- Hero Section -->
	<PageHero
		title="Live Streams & Video Content"
		subtitle="Watch and learn from our extensive collection of cloud native tutorials, live coding sessions, and technical deep dives."
		badge="Video Library"
		stats={[
			{ label: '500+ Hours' },
			{ label: 'Weekly Streams' },
			{ label: 'HD Quality' }
		]}
	>
		<Fragment slot="actions">
			<Button href="#latest-videos" variant="primary" size="lg">Watch Latest</Button>
		</Fragment>
	</PageHero>

	<div id="latest-videos" class="flex flex-col gap-12 video-feeds">
		<style>
			:root {
				--primary: #5f5ed7;
				--secondary: #00ceff;
			}

			.video-feeds {
				display: flex;
				flex-direction: column;
				gap: 3rem;
			}

			.video-feeds > :global(*:not(:last-child)) {
				position: relative;
				padding-bottom: 3rem;
			}

			@keyframes expandFromCenter {
				0% {
					transform: scaleX(0);
					opacity: 0;
				}
				100% {
					transform: scaleX(1);
					opacity: 1;
				}
			}

			@keyframes separatorScroll {
				0% {
					transform: scaleX(0);
					opacity: 0;
				}
				25%,
				75% {
					transform: scaleX(1);
					opacity: 1;
				}
				100% {
					transform: scaleX(0);
					opacity: 0;
				}
			}

			.video-feeds > :global(*:not(:last-child))::after {
				content: "";
				position: absolute;
				bottom: 0;
				left: 0;
				width: 100%;
				height: 4px;
				transform-origin: center;

				/* Fallback animation */
				animation: expandFromCenter 2.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;

				/* Scroll-linked animation */
				animation-timeline: view();
				animation-name: separatorScroll;
				animation-range: entry-crossing exit-crossing; /* More fluid range */
				animation-timing-function: ease; /* Smooth easing */
			}
		</style>

		<VideoFeed
			title="Latest Videos"
			description="Stay up to date with our newest content"
			operation="getLatestVideos"
			query={latestVideosQuery}
			limit={12}
		/>

		<div class="text-center mt-8">
			<a
				href="/watch/latest"
				class="inline-block px-6 py-3 bg-indigo-600 text-white rounded hover:bg-indigo-700"
				>View All</a
			>
		</div>

		<VideoFeed
			server:defer
			title="Random Videos"
			description="Discover something new from our collection"
			operation="getRandomVideos"
			query={randomVideosQuery}
			limit={12}
		/>
	</div>
</Page>
