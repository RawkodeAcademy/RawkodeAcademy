---
export const prerender = false;

import { getLiveCollection } from "astro:content";
import FeaturedContent from "@/components/common/FeaturedContent.astro";
import VideoMetadata from "@/components/html/video-metadata.astro";
import VideoFeed from "@/components/video/video-feed.astro";
import Page from "@/wrappers/page.astro";

// Set cache headers for ISR
// Client cache: 5 minutes, Edge cache: 1 hour, Serve stale content for 24 hours during revalidation
Astro.response.headers.set(
	"Cache-Control",
	"public, max-age=300, s-maxage=3600, stale-while-revalidate=86400",
);
Astro.response.headers.set("CDN-Cache-Control", "public, max-age=3600");

// Add cache tags for targeted invalidation
Astro.response.headers.set(
	"Cache-Tag",
	"videos-page, videos-list, videos-latest",
);

// Add build timestamp for debugging
Astro.response.headers.set("X-Build-Time", new Date().toISOString());

// Get page parameter from URL
const page = parseInt(Astro.url.searchParams.get("page") || "1", 10);
const videosPerPage = 16;

// Fetch all videos using Live Collections
const { entries: allVideos = [], error } = await getLiveCollection("videos");

if (error) {
	console.error("Failed to load videos:", error);
}

// Sort videos by publishedAt date (newest first)
const sortedVideos = allVideos.sort((a, b) => {
	const dateA = new Date(a.data.publishedAt);
	const dateB = new Date(b.data.publishedAt);
	return dateB.getTime() - dateA.getTime();
});

// Get featured video (only on page 1)
let featuredVideo = null;
if (page === 1 && sortedVideos.length > 0) {
    // Non-null assertion since we guard by length > 0
    featuredVideo = sortedVideos[0]!.data;
}

// Calculate pagination
const gridOffset = page === 1 ? 1 : (page - 1) * videosPerPage + 1;
const paginatedVideos = sortedVideos.slice(gridOffset, gridOffset + videosPerPage + 1);
const feedVideos = paginatedVideos.slice(0, videosPerPage).map(v => v.data);
const hasNextPage = paginatedVideos.length > videosPerPage;
---

<Page title="Videos">
	<VideoMetadata
		slot="extra-head"
		title="Rawkode Academy Videos"
		description="Explore our collection of educational videos about cloud native technologies, development practices, and more."
		isVideoList={true}
	/>

	<!-- Featured Content Section -->
	{featuredVideo && (
        <FeaturedContent
            type="video"
            title={featuredVideo.title}
            description={featuredVideo.description}
            thumbnailUrl={featuredVideo.thumbnailUrl}
            thumbnailAlt={`Thumbnail for ${featuredVideo.title}`}
            date={featuredVideo.publishedAt}
            duration={String(featuredVideo.duration)}
            href={`/watch/${featuredVideo.slug}`}
            ctaText="Watch Now"
        />
	)}
 
 	<div id="latest-videos" class="flex flex-col gap-12">
 		<VideoFeed
			title={page === 1 ? "Latest Videos" : `Videos - Page ${page}`}
			description={page === 1 ? "Stay up to date with our newest content" : "Browse our video collection"}
			videos={feedVideos}
		/>

		{/* Pagination controls */}
		<div class="flex justify-center items-center gap-4 mt-8">
			{page > 1 && (
				<a
					href={page === 2 ? "/watch" : `/watch?page=${page - 1}`}
					class="inline-block px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-600"
				>
					← Previous
				</a>
			)}
			
			<span class="px-4 py-2 text-gray-700 dark:text-gray-300">
				Page {page}
			</span>
			
			{hasNextPage && (
				<a
					href={`/watch?page=${page + 1}`}
					class="inline-block px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700"
				>
					Next →
				</a>
			)}
		</div>
	</div>
</Page>
