---
export const prerender = true;

import Page from "@/wrappers/page.astro";
import { request } from "graphql-request";
import type { Technology } from "@/pages/technology/[id].astro";

interface GetTechnologiesResponse {
  getTechnologies: Technology[];
}

const getTechnologiesQuery = /* GraphQL */ `
	query GetTechnologies($limit: Int) {
		getTechnologies(limit: $limit) {
			id
			name
			description
			logo
		}
	}
`;

// const endpoint = import.meta.env.PUBLIC_GRAPHQL_ENDPOINT; // Use hardcoded endpoint
const endpoint = "https://api.rawkode.academy/graphql";
const data = await request<GetTechnologiesResponse>(
  endpoint,
  getTechnologiesQuery,
  { limit: 200 } // Fetch up to 200 technologies
);

const technologies = data.getTechnologies;
---

<Page
  title="Technologies"
  description="Explore the various technologies covered on Rawkode Academy."
>
  <div class="flex flex-col gap-12 technology-feeds">
    <style>
      :root {
        --primary: #5f5ed7;
        --secondary: #00ceff;
      }

      .technology-feeds {
        display: flex;
        flex-direction: column;
        gap: 3rem;
      }

      .technology-feeds > *:not(:last-child) {
        position: relative;
        padding-bottom: 3rem;
      }

      @keyframes expandFromCenter {
        0% {
          transform: scaleX(0);
          opacity: 0;
        }
        100% {
          transform: scaleX(1);
          opacity: 1;
        }
      }

      @keyframes separatorScroll {
        0% {
          transform: scaleX(0);
          opacity: 0;
        }
        25%,
        75% {
          transform: scaleX(1);
          opacity: 1;
        }
        100% {
          transform: scaleX(0);
          opacity: 0;
        }
      }

      .technology-feeds > *:not(:last-child)::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background: linear-gradient(
          to right,
          var(--primary),
          var(--secondary),
          var(--primary)
        );
        transform-origin: center;

        /* Fallback animation */
        animation: expandFromCenter 2.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;

        /* Scroll-linked animation */
        animation-timeline: view();
        animation-name: separatorScroll;
        animation-range: entry-crossing exit-crossing; /* More fluid range */
        animation-timing-function: ease; /* Smooth easing */
      }

      .tech-card {
        @apply block rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 bg-white dark:bg-gray-800;
        transform: translateY(0);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
      }

      .tech-card:hover {
        transform: translateY(-5px);
      }

      .tech-card img {
        @apply w-full h-32 object-contain p-4;
        background: white; /* Light background for logos regardless of mode */
        border-bottom: 1px solid rgba(95, 94, 215, 0.1);
      }

      .tech-card .content {
        @apply p-4;
      }

      .tech-card h3 {
        @apply text-lg font-semibold mb-2 text-gray-900 dark:text-white;
      }

      .tech-card p {
        @apply text-gray-600 dark:text-gray-300 text-sm line-clamp-2;
      }
    </style>

    <!-- Hero Section -->
    <section class="w-full">
      <div class="bg-gradient-to-br from-primary to-secondary text-white py-12 px-4 rounded-lg shadow-lg">
        <div class="max-w-4xl mx-auto">
          <h1 class="text-4xl md:text-5xl font-bold mb-4 text-center">
            Explore the World of Technologies
          </h1>
          <p class="text-lg md:text-xl text-center">
            Discover the latest technologies and expand your knowledge with
            Rawkode Academy.
          </p>
        </div>
      </div>
    </section>

    <!-- Technologies Section -->
    <section class="w-full px-4">
      <div class="max-w-7xl mx-auto">
        <h2 class="text-2xl md:text-3xl font-bold mb-6 text-gray-900 dark:text-white">
          Technologies
        </h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {technologies.map((tech) => (
            <a href={`/technology/${tech.id}`} class="tech-card">
              <img
                src={tech.logo ? tech.logo : "/tech-logos/placeholder.svg"}
                alt={`${tech.name} Logo`}
                onerror={`this.onerror=null; this.src='/tech-logos/placeholder.svg';`}
              />
              <div class="content">
                <h3>{tech.name}</h3>
                <p>{tech.description}</p>
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
  </div>
</Page>
