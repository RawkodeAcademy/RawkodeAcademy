---
import SeriesLink from "@/components/series/SeriesLink.astro";
import Page from "@/wrappers/page.astro";
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
import { getEntry } from "astro:content";
import { getCollection, render, type CollectionEntry } from "astro:content";

export const prerender = true;

type Props = {
	article: CollectionEntry<"blog">;
};

export const getStaticPaths: GetStaticPaths =
	async (): Promise<GetStaticPathsResult> => {
		const blogEntries = await getCollection("blog");

		return blogEntries.map((article) => {
			return {
				params: {
					slug: article.id,
				},
				props: {
					article,
				},
			};
		});
	};

const { article } = Astro.props;
const { Content } = await render(article);
const maybeSeries =
	article.data.series && (await getEntry("series", article.data.series.id));
---

<Page title={`${article.data.title} | Blog`}>
	<h1 class="text-5xl font-extrabold dark:text-white">
		{article.data.title}
	</h1>

	<article class="max-w-screen-xl format prose lg:prose-xl dark:format-invert">
		<header class="mb-4 lg:mb-6 not-format">
			<address class="flex items-center mb-6 not-italic">
				<div
					class="inline-flex items-center mr-3 text-sm text-gray-900 dark:text-white"
				>
					<img
						class="mr-4 w-16 h-16 rounded-full"
						src="https://pbs.twimg.com/profile_images/1618711146260832262/P7jcoO32_400x400.jpg"
					/>
					<div>
						<a
							href="#"
							rel="author"
							class="text-xl font-bold text-gray-900 dark:text-white"
							>{article.data.authors.join(", ")}
						</a>

						<p class="text-base text-gray-500 dark:text-gray-400">
							Published at <time
								itemprop="datePublished"
								datetime={article.data.publishedAt.toString()}
								>{article.data.publishedAt.toDateString()}</time
							>
						</p>

						{
							article.data.updatedAt && (
								<p class="text-base text-gray-500 dark:text-gray-400">
									Updated at{" "}
									<time
										itemprop="dateUpdated"
										datetime={article.data.updatedAt.toString()}
									>
										{article.data.updatedAt.toDateString()}
									</time>
								</p>
							)
						}
					</div>
				</div>
			</address>

			{maybeSeries && <SeriesLink series={maybeSeries} />}
		</header>

		<Content />
	</article>
</Page>
