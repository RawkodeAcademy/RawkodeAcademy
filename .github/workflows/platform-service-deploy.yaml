# Forcing a Redeploy, Increment Here: 7
name: Reusable Platform Service Deployment

on:
  workflow_call:
    inputs:
      service-name:
        description: 'Name of the platform service (e.g., casting-credits, emoji-reactions)'
        required: true
        type: string
      service-path:
        description: 'Path to the service directory from repo root'
        required: true
        type: string
      has-write-model:
        description: 'Whether the service has a write-model to deploy'
        required: false
        type: boolean
        default: true
    secrets:
      GCP_WORKLOAD_IDENTITY_PROVIDER:
        required: true

jobs:
  test:
    runs-on: depot-ubuntu-latest,dagger=0.18.11
    permissions:
      contents: read
      # We use this to comment on the PR
      # with preview URLs
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Run Tests
        working-directory: ${{ inputs.service-path }}
        run: |
          (cd ../../generators/projen-platform-service && bun install && bun run types)
          bun run .projenrc.ts

          dagger <<'.'
            ../../../../dagger/bun | install-no-cache . | with-exec bun test
          .

  deploy:
    runs-on: depot-ubuntu-latest,dagger=0.18.11
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: "rawkode-academy-production"
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Get secrets from GCP Secret Manager
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@v2
        with:
          secrets: |
            CLOUDFLARE_WORKERS_TOKEN:projects/458678766461/secrets/cloudflare-workers-token
            COSMO_API_KEY:projects/458678766461/secrets/cosmo-api-key

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Deploy Read Model and Register Subgraph
        working-directory: ${{ inputs.service-path }}
        env:
          CLOUDFLARE_WORKERS_TOKEN: ${{ steps.secrets.outputs.CLOUDFLARE_WORKERS_TOKEN }}
          COSMO_API_KEY: ${{ steps.secrets.outputs.COSMO_API_KEY }}
          SERVICE_NAME: ${{ inputs.service-name }}
        run: |
          (cd ../../generators/projen-platform-service && bun install && bun run types)
          bun run .projenrc.ts

          dagger <<'.'
            codebase=$(../../../../dagger/bun | install-no-cache . | directory /code)

            ../../../../dagger/cloudflare | deploy \
              $codebase \
              ./read-model/wrangler.jsonc \
              env:CLOUDFLARE_WORKERS_TOKEN

            ../../../../dagger/cloudflare | applyMigrations \
              $codebase \
              ./read-model/wrangler.jsonc \
              env:CLOUDFLARE_WORKERS_TOKEN

            ../../../../dagger/wundergraph | generateAndPublishSubgraph \
              ${SERVICE_NAME} \
              production \
              $codebase \
              https://platform-${SERVICE_NAME}-read-model.rawkodeacademy.workers.dev \
              env:COSMO_API_KEY | export schema.gql
          .

          bunx wgc subgraph publish ${SERVICE_NAME} --schema schema.gql --routing-url https://platform-${{ inputs.service-name }}-read-model.rawkodeacademy.workers.dev --namespace production

      - name: Deploy Write Model
        if: inputs.has-write-model
        working-directory: ${{ inputs.service-path }}
        env:
          CLOUDFLARE_WORKERS_TOKEN: ${{ steps.secrets.outputs.CLOUDFLARE_WORKERS_TOKEN }}
          SERVICE_NAME: ${{ inputs.service-name }}
        run: |
          dagger <<'.'
            codebase=$(../../../../dagger/bun | install-no-cache . | directory /code)

            ../../../../dagger/cloudflare | deploy \
              $codebase \
              ./write-model/wrangler.jsonc \
              env:CLOUDFLARE_WORKERS_TOKEN
          .
