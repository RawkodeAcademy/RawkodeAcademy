//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.5

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "show_hosts")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub show: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub host: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::person::Entity",
        from = "Column::Host",
        to = "super::person::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Person,
    #[sea_orm(
        belongs_to = "super::show::Entity",
        from = "Column::Show",
        to = "super::show::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    Show,
}

impl Related<super::person::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Person.def()
    }
}

impl Related<super::show::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Show.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
