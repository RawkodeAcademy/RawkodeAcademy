.docker:
  image: docker:latest
  services:
    - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_DRIVER: overlay2
    DOCKER_VERSION: "27.2.0"
    DOCKER_TLS_VERIFY: "1"
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_CERT_PATH: "/certs/client"
  before_script:
    - until docker info > /dev/null 2>&1; do sleep 1; done

.dagger:
  extends: [.docker]
  before_script:
    - apk add ca-certificates curl git
    - curl -fsSL https://dl.dagger.io/dagger/install.sh | BIN_DIR=/usr/local/bin sh

stages:
  - bootstrap
  - deploy

bootstrap:
  stage: bootstrap
  image: alpine:latest
  script:
    - echo "Welcome to CICD"
    - echo "This pipeline ensures that MRs can be merged when they have no pipeline."
    - echo "Fun, right?"

website-deploy-production:
  extends: [.dagger]
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - projects/rawkode.academy/website/**/*
  script:
    - cd projects/rawkode.academy/website
    - |
      dagger <<.
        . | build | export dist

        ../../../dagger/cloudflare | deploy \
          ./dist \
          wrangler.toml \
          env:CLOUDFLARE_PAGES_TOKEN \
          env:CICD_COMMENT_TOKEN
      .

website-deploy-merge-request:
  extends: [.dagger]
  stage: deploy
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
      changes:
        - projects/rawkode.academy/website/**/*
  script:
    - cd projects/rawkode.academy/website
    - |
      dagger <<.
        . | build | export dist

        ../../../dagger/cloudflare | deploy \
          ./dist \
          wrangler.toml \
          env:CLOUDFLARE_PAGES_TOKEN \
          env:CICD_COMMENT_TOKEN \
          --merge-request-id=$CI_MERGE_REQUEST_ID
      .

studio-deploy-production:
  extends: [.dagger]
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - projects/rawkode.studio/**/*
  script:
    - cd projects/rawkode.studio
    - |
      dagger <<.
        . | build | export dist

        ../../dagger/cloudflare | deploy \
          ./dist \
          wrangler.toml \
          env:CLOUDFLARE_PAGES_TOKEN \
          env:CICD_COMMENT_TOKEN
      .

studio-deploy-merge-request:
  extends: [.dagger]
  stage: deploy
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
      changes:
        - projects/rawkode.studio/**/*
  script:
    - cd projects/rawkode.studio
    - |
      dagger <<.
        . | build | export dist

        ../../dagger/cloudflare | deploy \
          ./dist \
          wrangler.toml \
          env:CLOUDFLARE_PAGES_TOKEN \
          env:CICD_COMMENT_TOKEN \
          --merge-request-id=$CI_MERGE_REQUEST_ID
      .

infrastructure-dns-merge-request:
  extends: [.dagger]
  stage: deploy
  rules:
    - if: "$CI_MERGE_REQUEST_ID"
      changes:
        - infrastructure/dns/**/*
  id_tokens:
    GCP_ID_TOKEN:
      aud: code.rawkode.academy
  secrets:
    CLOUDFLARE_TOKEN:
      gcp_secret_manager:
        name: projects/458678766461/secrets/clouflare-dns-edit
      token: $GCP_ID_TOKEN
    DNSIMPLE_TOKEN:
      gcp_secret_manager:
        name: projects/458678766461/secrets/dnsimple-all-access
      token: $GCP_ID_TOKEN
  script:
    - cd infrastructure/dns
    - |
      dagger <<.
        container |
          from "docker.io/hashicorp/jsii-terraform" |
          with-mounted-directory /code . |
          with-workdir /code |
          with-exec -- npm install |
          with-exec -- npx cdktf provider get |
          with-env-variable TF_HTTP_USERNAME gitlab-ci-token |
          with-secret-variable CLOUDFLARE_TOKEN env:CLOUDFLARE_TOKEN |
          with-secret-variable TF_HTTP_PASSWORD env:CI_JOB_TOKEN |
          with-secret-variable DNSIMPLE_TOKEN env:DNSIMPLE_TOKEN |
          with-exec -- npx cdktf plan
      .
