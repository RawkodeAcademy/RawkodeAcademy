name: OpenGraph Image Previews

on:
  pull_request:
    paths:
      - "projects/rawkode.academy/platform/image-service/**"

# Add permissions needed for commenting on PRs
permissions:
  pull-requests: write # Needed for commenting on PRs

jobs:
  generate-previews:
    name: Generate Template Previews
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Setup Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v2

      - name: Install devenv
        run: nix profile install nixpkgs#devenv

      - name: Setup devenv environment
        working-directory: projects/rawkode.academy/platform/image-service
        run: devenv shell --impure -- echo "devenv environment is ready"

      - name: Install dependencies and copy WASM files
        working-directory: projects/rawkode.academy/platform/image-service
        run: devenv shell --impure -- bash -c "bun install && bun run prebuild"

      - name: Generate preview images
        working-directory: projects/rawkode.academy/platform/image-service
        run: |
          devenv shell --impure -- bash -c '
          mkdir -p preview-images

          # Get all template files
          TEMPLATES=$(find src/templates -name "*.ts" -not -name "README.md" | sed "s/src\/templates\///g" | sed "s/\.ts//g")

          # Start the development server in the background
          bun run start &
          SERVER_PID=$!

          # Wait for server to start
          sleep 5

          # Generate images for each template
          for template in $TEMPLATES; do
            echo "Generating preview for $template template"
            PAYLOAD=$(echo "{\"text\":\"This is a preview of the template\",\"template\":\"$template\",\"format\":\"png\"}" | bun scripts/utf64-encode.js)
            curl "http://localhost:4321/image?payload=$PAYLOAD" -o "preview-images/$template.png"

            # Create a directory for each template to make them separate artifacts
            mkdir -p "preview-artifacts/$template"
            cp "preview-images/$template.png" "preview-artifacts/$template/"
          done

          # Stop the server
          kill $SERVER_PID
          '

      # Upload each template preview as a separate artifact
      - name: Upload template previews
        uses: actions/upload-artifact@v4
        with:
          path: projects/rawkode.academy/platform/image-service/preview-artifacts/*
          retention-days: 7

      - name: Post template previews to PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get the list of templates from the preview-images directory
            const previewImagesDir = path.join(
              process.env.GITHUB_WORKSPACE,
              'projects/rawkode.academy/platform/image-service/preview-images'
            );

            if (!fs.existsSync(previewImagesDir)) {
              console.log('Preview images directory not found');
              return;
            }

            // Get all PNG files in the directory and extract template names
            const templates = fs.readdirSync(previewImagesDir)
              .filter(file => file.endsWith('.png'))
              .map(file => file.replace('.png', ''));

            // Get the workflow run ID and repository
            const runId = process.env.GITHUB_RUN_ID;
            const repo = process.env.GITHUB_REPOSITORY;

            // Create markdown for the comment
            let commentBody = '## Template Previews\n\n';
            commentBody += 'Here are previews of all templates with the current changes:\n\n';
            commentBody += '> **Note:** These preview images are stored as GitHub Actions artifacts and will be automatically deleted after 7 days.\n\n';

            // Add a link to the artifacts page
            const artifactsUrl = `https://github.com/${repo}/actions/runs/${runId}`;
            commentBody += `## Artifacts\n\n`;
            commentBody += `All template previews are available as separate artifacts. [View all artifacts](${artifactsUrl})\n\n`;
            commentBody += `Each template has its own artifact named \`<template-name>\`. Click the link above to view and download the artifacts.\n\n`;

            // List all templates
            commentBody += `## Templates\n\n`;
            for (const template of templates) {
              const imagePath = path.join(previewImagesDir, `${template}.png`);

              if (fs.existsSync(imagePath)) {
                commentBody += `- **${template}** - Preview available in artifacts\n`;
              } else {
                commentBody += `- **${template}** - Image generation failed\n`;
              }
            }

            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
