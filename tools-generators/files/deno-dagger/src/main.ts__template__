// src/main.ts for <%= name %>

import { bold, green, yellow } from "@std/fmt/colors";

function mainLogic() {
  console.log(bold(green(`Hello from Deno service: <%= name %>!`)));
  console.log(yellow("This is the main entry point for the <%= name %> service."));
  console.log(yellow("You can replace this with your actual service logic."));

  // Example:
  // if (Deno.args.includes('--greet')) {
  //   const nameArg = Deno.args[Deno.args.indexOf('--greet') + 1] || 'World';
  //   console.log(`Greetings, ${nameArg}!`);
  // }
}

// This ensures the mainLogic runs only when the script is executed directly
if (import.meta.main) {
  mainLogic();
}

// Example of an exported function that could be imported by other modules
export function getInfo() {
  return {
    serviceName: "<%= name %>",
    serviceClass: "<%= serviceClassName %>",
    timestamp: new Date().toISOString(),
  };
}

// Example for a simple web server (e.g., for Deno Deploy)
// Make sure to update 'deno.jsonc' tasks if using this pattern.
/*
import { serve } from "@std/http/server";

const port = 8000;

serve((_req: Request) => {
  console.log(`Request received for <%= name %> at ${new Date().toISOString()}`);
  return new Response(
    JSON.stringify(getInfo(), null, 2),
    {
      status: 200,
      headers: { "content-type": "application/json; charset=utf-8" },
    }
  );
}, {
  port,
  onListen: ({ hostname, port }) => {
    console.log(bold(green(`ðŸ¦• <%= name %> server listening on http://${hostname}:${port}`)));
  }
});
*/
