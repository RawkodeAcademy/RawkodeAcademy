// <%= projectRoot %>/tests/setup.ts
// This file is preloaded before tests are run (configured in bunfig.toml).
// Use it for global test setup, mocks, or environment configuration.

import { beforeAll, afterAll, beforeEach, afterEach } from "bun:test";

console.log(`[<%= name %> Test Setup] Initializing test environment...`);

beforeAll(() => {
  console.log(`[<%= name %> Test Setup] Running beforeAll hook.`);
  // Example: Initialize a database connection for all tests in this project
  // global.testDbConnection = await connectToTestDatabase();
});

afterAll(async () => {
  console.log(`[<%= name %> Test Setup] Running afterAll hook.`);
  // Example: Close database connection
  // await global.testDbConnection?.close();
});

beforeEach(() => {
  // Runs before each test file or describe block if setup is per-file
  // console.log(`[<%= name %> Test Setup] Running beforeEach hook for a test suite.`);
  // Example: Reset mocks or clear test data
});

afterEach(() => {
  // Runs after each test file or describe block
  // console.log(`[<%= name %> Test Setup] Running afterEach hook for a test suite.`);
});

// Example: Mocking a global function or module
// import { mock } from 'bun:test';
// mock.module('some-external-module', () => {
//   return {
//     default: () => 'mocked value',
//     anotherFunction: mock(() => 'mocked another function'),
//   };
// });

// Example: Setting up environment variables for tests
// process.env.SOME_API_KEY = 'test_api_key';

console.log(`[<%= name %> Test Setup] Test environment initialized.`);
